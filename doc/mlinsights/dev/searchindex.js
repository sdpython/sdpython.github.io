Search.setIndex({"docnames": ["CHANGELOGS", "api/batch", "api/blaslapack", "api/helpers", "api/index", "api/metrics", "api/mlmodel", "api/mlmodel_tree", "api/plotting", "api/search_rank", "api/sklapi", "api/timeseries", "api/tree", "auto_examples/index", "auto_examples/plot_constraint_kmeans", "auto_examples/plot_decision_tree_logreg", "auto_examples/plot_digitize", "auto_examples/plot_kmeans_l1", "auto_examples/plot_leave_neighbors", "auto_examples/plot_logistic_regression_clustering", "auto_examples/plot_piecewise_classification", "auto_examples/plot_piecewise_linear_regression", "auto_examples/plot_piecewise_linear_regression_criterion", "auto_examples/plot_predictable_tsne", "auto_examples/plot_quantile_mlpregression", "auto_examples/plot_quantile_regression", "auto_examples/plot_regression_confidence_interval", "auto_examples/plot_search_images_torch", "auto_examples/plot_sklearn_transformed_target", "auto_examples/plot_traceable_ngrams_tfidf", "auto_examples/plot_visualize_pipeline", "auto_examples/sg_execution_times", "i_ex", "i_faq", "index", "license", "tutorial/index"], "filenames": ["CHANGELOGS.rst", "api/batch.rst", "api/blaslapack.rst", "api/helpers.rst", "api/index.rst", "api/metrics.rst", "api/mlmodel.rst", "api/mlmodel_tree.rst", "api/plotting.rst", "api/search_rank.rst", "api/sklapi.rst", "api/timeseries.rst", "api/tree.rst", "auto_examples/index.rst", "auto_examples/plot_constraint_kmeans.rst", "auto_examples/plot_decision_tree_logreg.rst", "auto_examples/plot_digitize.rst", "auto_examples/plot_kmeans_l1.rst", "auto_examples/plot_leave_neighbors.rst", "auto_examples/plot_logistic_regression_clustering.rst", "auto_examples/plot_piecewise_classification.rst", "auto_examples/plot_piecewise_linear_regression.rst", "auto_examples/plot_piecewise_linear_regression_criterion.rst", "auto_examples/plot_predictable_tsne.rst", "auto_examples/plot_quantile_mlpregression.rst", "auto_examples/plot_quantile_regression.rst", "auto_examples/plot_regression_confidence_interval.rst", "auto_examples/plot_search_images_torch.rst", "auto_examples/plot_sklearn_transformed_target.rst", "auto_examples/plot_traceable_ngrams_tfidf.rst", "auto_examples/plot_visualize_pipeline.rst", "auto_examples/sg_execution_times.rst", "i_ex.rst", "i_faq.rst", "index.rst", "license.rst", "tutorial/index.rst"], "titles": ["Change Logs", "mlinsights.mlbatch", "mlinsights.mlmodel.direct_blas_lapack", "mlinsights.helpers", "API", "mlinsights.metrics", "mlinsights.mlmodel", "mlinsights.mlmodel (trees)", "mlinsights.plotting", "mlinsights.search_rank", "mlinsights.sklapi", "mlinsights.timeseries", "Trees", "Examples Gallery", "Constraint KMeans", "Decision Tree and Logistic Regression", "numpy.digitize as a tree", "KMeans with norm L1", "Close leaves in a decision trees", "LogisticRegression and Clustering", "Piecewise classification with scikit-learn predictors", "Piecewise linear regression with scikit-learn predictors", "Custom DecisionTreeRegressor adapted to a linear regression", "Predictable t-SNE", "Quantile MLPRegressor", "Quantile Regression", "Regression with confidence interval", "Search images with deep learning (torch)", "Transformed Target", "Traceable n-grams with tf-idf", "Visualize a scikit-learn pipeline", "Computation times", "Short Examples", "FAQ", "mlinsights: tricky scikit-learn", "LICENSE", "Tutorial"], "terms": {"118": 0, "major": 0, "refactor": 0, "ci": 0, "build": [0, 7, 11, 12, 21, 22, 27], "against": 0, "scikit": [0, 1, 3, 6, 7, 8, 11, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 31], "learn": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 31], "115": 0, "updat": [0, 1, 6, 7, 11], "tree": [0, 4, 6, 10, 13, 20, 22, 31, 32, 34], "decis": [0, 6, 7, 12, 13, 16, 19, 20, 22, 31, 34], "criterion": [0, 4, 15], "2023": [0, 11, 16, 35], "113": 0, "remov": [0, 1, 6, 20, 26], "normal": [0, 6, 21, 22, 23], "attribut": [0, 1, 6, 22, 28], "deprec": [0, 20, 26], "11": [0, 7, 12, 15, 16, 18, 19, 25, 27, 29], "29": [0, 29], "110": [0, 34], "fix": [0, 22], "perplex": 0, "issu": [0, 4, 6, 21, 22], "predictabletsn": [0, 23], "06": 0, "109": 0, "us": [0, 1, 5, 6, 7, 8, 9, 11, 12, 15, 17, 20, 21, 22, 23, 26, 27, 29, 35], "f": [0, 5, 6, 7, 9, 11, 14, 26, 27, 30], "string": [0, 1, 3, 6, 7, 8, 29], "more": [0, 6, 7, 21, 29], "place": 0, "105": [0, 19, 31], "python": [0, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "108": 0, "107": 0, "18": [0, 25, 29, 32], "106": 0, "fail": [0, 6, 19, 28], "import": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34], "_joblib_parallel_arg": 0, "99": [0, 15], "licens": [0, 34], "file": [0, 7, 27, 31, 35], "miss": [0, 8, 30], "pypi": [0, 7], "releas": 0, "20": [0, 2, 6, 15, 18, 19, 25, 29], "103": 0, "94": 0, "numpi": [0, 2, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "boolean": [0, 1, 6, 10], "arrai": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "index": [0, 6, 7, 11, 12, 16, 27], "2dim": 0, "09": [0, 11], "27": [0, 29], "102": 0, "implement": [0, 1, 6, 7, 9, 10, 11, 12, 19, 21, 24, 25, 26, 27, 34], "digit": [0, 12, 13, 23, 31], "decisiontreeregressor": [0, 6, 7, 12, 13, 21, 26, 31], "101": [0, 34], "manylinux": 0, "9": [0, 6, 11, 15, 16, 18, 20, 23, 24, 25, 26, 27, 28, 29], "100": [0, 6, 11, 14, 15, 16, 19, 20, 21, 22, 24, 25], "support": [0, 6], "paramet": [0, 2, 3, 5, 8, 9, 10, 12, 26, 27], "posit": [0, 6, 15, 22], "quantilelinearregress": [0, 25, 26, 34], "23": [0, 2, 29], "96": [0, 15, 26, 27], "95": [0, 26], "piecewiseregressor": [0, 21], "make": [0, 6], "sure": 0, "target": [0, 6, 10, 11, 13, 15, 18, 20, 23, 31, 32, 34], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 18, 19, 20, 22, 23, 27, 28, 29, 34], "vector": [0, 6, 9, 11, 20, 26, 27, 28], "_apply_prediction_method": 0, "incompat": 0, "standard": [0, 5, 6, 11, 22, 26], "sklearn": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34], "format": [0, 4, 11, 20, 30], "80": 0, "piecewis": [0, 7, 13, 31], "estim": [0, 1, 4, 6, 10, 11, 15, 20, 21, 23, 25, 26], "binner": [0, 6, 20, 21], "72": 0, "optim": [0, 6, 7, 22, 23, 24, 25, 27], "deciss": 0, "98": 0, "97": [0, 15], "deepcopi": 0, "03": [0, 16, 31], "piecewise_decision_tre": 0, "doe": [0, 1, 2, 6, 7, 9, 12, 21, 22, 24, 25, 27, 28, 29], "compil": [0, 7], "latest": 0, "version": [0, 1, 6, 7, 11, 20, 24, 25, 26], "85": [0, 11], "70": [0, 27], "decisiontreelogisticregress": 0, "93": 0, "includ": [0, 3, 6, 12, 16, 35], "wheel": 0, "all": [0, 1, 3, 6, 9, 10, 11, 12, 13, 22, 35], "platform": 0, "01": [0, 15, 16, 18, 19, 31], "89": 0, "instal": [0, 7, 14, 17, 19, 23, 24], "modulenotfounderror": 0, "No": [0, 15, 27], "modul": [0, 19, 23], "name": [0, 1, 3, 6, 7, 8, 9, 10, 11, 15, 16, 20, 27, 30], "92": 0, "quantilemlpregressor": [0, 24, 26, 34], "work": [0, 1, 2, 6, 7, 9, 11, 15, 19, 22, 23, 28], "24": [0, 7, 29], "91": 0, "regress": [0, 5, 6, 7, 11, 13, 24, 28, 31, 34], "90": 0, "pipelinecach": [0, 4], "88": [0, 7, 27], "2020": 0, "87": 0, "set": [0, 6, 7, 9, 10, 14, 16, 17, 19, 27], "up": [0, 6, 27], "azur": 0, "pipelin": [0, 1, 4, 6, 7, 8, 11, 13, 31, 34], "86": 0, "8": [0, 6, 11, 12, 15, 18, 19, 20, 22, 24, 25, 27, 28, 29, 30, 32], "71": [0, 16, 27], "kmean": [0, 6, 11, 13, 31], "l1": [0, 6, 13, 18, 24, 25, 31, 34], "signatur": [0, 7], "31": [0, 16, 27, 29], "84": [0, 6], "style": [0, 6, 30], "30": [0, 24, 29], "83": [0, 16], "upgrad": 0, "82": 0, "81": 0, "skl": 0, "togeth": 0, "mlinsight": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32], "79": 0, "pipeline2dot": [0, 4, 8, 30], "passthrough": 0, "16": [0, 12, 15, 16, 18, 25, 27, 29, 31], "78": [0, 15], "strong": 0, "depend": [0, 6, 22], "pyquickhelp": 0, "77": [0, 15], "add": [0, 6, 7, 26, 30], "trainabl": [0, 6, 23], "transfertransform": [0, 10], "76": [0, 15], "constraintkmean": [0, 14], "produc": [0, 6, 23, 26, 27, 28], "convex": 0, "cluster": [0, 4, 11, 13, 14, 31], "75": [0, 17, 25], "move": 0, "constraint": [0, 6, 13, 31], "from": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35], "papierstat": 0, "74": [0, 16], "after": [0, 3, 6, 27], "scikti": 0, "wai": [0, 6, 7, 10, 19, 22, 23, 26, 27, 28, 29, 30], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35], "handl": [0, 7, 10, 28], "15": [0, 12, 16, 17, 18, 20, 25, 29], "73": [0, 15], "classifierkmean": 0, "__repr__": 0, "14": [0, 15, 16, 18, 25, 27, 28, 29], "69": 0, "k": [0, 6, 9, 15, 17, 18, 20, 22], "mean": [0, 5, 6, 7, 10, 12, 17, 22, 27], "norm": [0, 2, 6, 13, 31, 34], "13": [0, 2, 12, 16, 18, 25, 27, 29], "66": 0, "visualis": 0, "graph": [0, 6, 8, 20, 30], "when": [0, 6, 7, 8, 11, 12, 27], "column": [0, 5, 6, 9, 11, 16, 20, 30], "an": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 21, 22, 26, 27, 28, 30, 35], "integ": [0, 2, 6, 28, 32], "columntransform": [0, 8, 30], "2019": 0, "59": 0, "gaussianprocess": 0, "notebook": [0, 3, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "about": [0, 4, 6, 9, 22], "confid": [0, 6, 13, 31], "interv": [0, 5, 6, 11, 12, 13, 22, 31], "65": 0, "targettransformclassifi": 0, "similar": [0, 6, 7, 9, 11, 26], "targettransformregressor": 0, "64": [0, 15, 23, 27], "differ": [0, 1, 6, 10, 11, 23, 27, 28], "which": [0, 1, 5, 6, 7, 9, 10, 11, 12, 15, 18, 22, 23, 26, 27, 28, 29, 30, 32, 34], "predefin": [0, 6], "function": [0, 3, 5, 6, 9, 11, 12, 16, 22, 27, 28, 30, 34], "63": 0, "transform": [0, 1, 3, 4, 8, 10, 11, 13, 16, 23, 27, 29, 30, 31, 32, 34], "appli": [0, 6, 9, 11, 19, 23, 27], "invers": [0, 6, 25, 28], "predict": [0, 3, 4, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 30, 31, 32], "befor": [0, 3, 6, 9, 11, 19, 26, 27, 28], "score": [0, 1, 6, 7, 9, 10, 11, 15, 19, 25, 27, 32], "49": [0, 16], "menu": 0, "document": [0, 6, 7, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35], "61": [0, 16, 27], "bug": 0, "keyword": 0, "60": [0, 16, 27], "contain": [0, 2, 6, 9, 18, 20, 27], "58": 0, "explor": [0, 4, 20], "comput": [0, 2, 6, 7, 9, 11, 18, 20, 23, 26, 27], "recommand": 0, "without": [0, 6, 7, 19, 22, 35], "train": [0, 1, 5, 6, 8, 10, 11, 15, 18, 19, 20, 22, 23, 26, 28, 30, 34], "56": 0, "55": 0, "cach": [0, 1, 10, 27], "gridsearchcv": 0, "53": [0, 11], "extract": [0, 27], "intermedi": [0, 6, 7, 27], "model": [0, 1, 3, 5, 6, 9, 10, 11, 12, 15, 20, 21, 22, 23, 24, 26, 28, 34], "output": [0, 3, 6, 10, 11, 22, 23, 27, 28], "within": [0, 3, 11], "51": [0, 11], "tfidfvector": [0, 6], "keep": [0, 6, 11, 14, 29], "inform": [0, 6, 9, 27, 29], "n": [0, 6, 9, 13, 14, 15, 17, 19, 20, 26, 27, 28, 31], "gram": [0, 6, 13, 31], "04": [0, 16, 31], "26": [0, 6, 7, 11, 29], "46": 0, "determin": [0, 6, 12], "close": [0, 7, 9, 13, 19, 23, 31], "leav": [0, 6, 7, 12, 13, 21, 22, 27, 31], "44": 0, "base": [0, 5, 6, 7, 11, 15, 21, 22, 24, 25, 27, 28, 34], "bootstrap": [0, 5, 26], "40": [0, 11], "custom": [0, 6, 10, 13, 27, 31], "linear": [0, 6, 7, 11, 13, 15, 23, 25, 28, 31, 34], "28": [0, 27, 29], "39": 0, "41": 0, "direct": 0, "call": [0, 2, 3, 6, 10, 12, 22, 27], "lapack": [0, 4], "cython": [0, 2, 7, 22], "25": [0, 8, 25, 29, 30], "38": 0, "better": [0, 6, 19, 23, 27, 28, 30], "37": [0, 11], "interaction_onli": 0, "polynomi": [0, 6], "featur": [0, 6, 7, 9, 10, 11, 12, 18, 19, 20, 22, 27, 30, 32], "36": 0, "include_bia": 0, "extend": [0, 5, 6, 9, 14, 19, 20, 28], "34": 0, "renam": 0, "piecewiselinearregress": 0, "piecewiseregress": 0, "33": [0, 16], "classifi": [0, 6, 8, 10, 20, 27, 30], "joblib": 0, "transpos": [0, 27], "matrix": [0, 2, 5, 6, 8, 9, 10, 29], "17": [0, 16, 25, 29], "polynomialfeatur": [0, 30], "convert": [0, 1, 6, 9, 10, 26, 27, 30], "kind": [0, 6, 7, 9, 11, 12, 21, 22, 26, 34, 35], "t": [0, 2, 6, 11, 13, 19, 21, 22, 24, 28, 29, 31], "sne": [0, 6, 13, 31], "6": [0, 3, 6, 9, 11, 12, 15, 16, 18, 19, 20, 23, 24, 25, 27, 28, 29], "kera": 0, "pytorch": [0, 27], "modifi": [0, 2, 3, 6, 7, 19, 28, 30, 35], "plot": [0, 4, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "galleri": [0, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34], "impos": 0, "coordin": [0, 3, 6], "2018": 0, "quantil": [0, 6, 13, 31], "mlp": [0, 6], "introduc": [0, 6, 22], "4": [0, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34], "warn": [0, 14, 17, 19, 23, 24, 27], "clone": [0, 6, 10], "7": [0, 3, 11, 12, 15, 16, 24, 25, 26, 27, 28, 29], "21": [0, 16, 29, 31], "replac": [0, 6, 7, 15, 23], "as_matrix": 0, "valu": [0, 1, 2, 3, 5, 6, 10, 11, 12, 14, 16, 17, 18, 19, 26, 28], "panda": [0, 5, 6, 9, 15, 16, 19, 20, 24, 25, 26, 28, 30, 32], "learner": [0, 26], "sometim": [0, 28, 29], "do": [0, 1, 6, 7, 11, 16, 18, 22, 27, 29, 30, 35], "stack": 0, "item": [0, 1, 18, 19, 20], "12": [0, 2, 11, 15, 16, 18, 23, 25, 26, 27, 28, 29, 30, 31], "wrong": 0, "weight": [0, 6, 10, 11, 14, 22, 23, 27], "specifi": [0, 6, 9, 28], "non": [0, 6, 7, 26, 28, 34], "correl": [0, 34], "combin": [0, 6], "between": [0, 6, 11, 14, 23, 28], "logist": [0, 6, 13, 31], "ensae_teaching_c": 0, "flake8": 0, "code": [0, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "background": [0, 27], "cell": [0, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "rst": 0, "html": [0, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "highlight": 0, "ipython3": 0, "save": [0, 9], "metadata": [0, 1, 6, 7, 9, 11], "search": [0, 1, 9, 13, 16, 31], "engin": [0, 9], "retriev": [0, 1, 6, 16, 22, 27], "them": [0, 5, 6, 27, 30], "2017": [0, 18, 19, 35], "thi": [1, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35], "wa": [1, 6, 7, 22, 27, 30, 34], "written": 1, "older": 1, "never": [1, 23], "revisit": 1, "sinc": [1, 22], "It": [1, 5, 6, 7, 9, 10, 11, 12, 17, 19, 21, 22, 25, 26, 27, 28, 29, 30, 32, 34], "mai": [1, 6, 7, 8, 11, 30], "bring": 1, "much": [1, 7, 10, 16, 22], "class": [1, 6, 7, 9, 10, 11, 18, 19, 20, 22, 23, 27, 29, 30, 32], "cache_model": 1, "sourc": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34], "reduc": [1, 6], "number": [1, 5, 6, 8, 9, 11, 12, 14, 16, 19, 20, 22, 26, 27], "grid": [1, 12, 18], "ha": [1, 6, 7, 11, 12, 27], "static": [1, 6, 9, 10], "as_kei": 1, "param": [1, 3, 6, 8, 9, 10, 11, 12], "list": [1, 3, 6, 8, 9, 12, 16, 18, 19, 26, 27], "kei": [1, 10], "dictionari": [1, 3, 6, 9, 10, 12], "one": [1, 5, 6, 7, 9, 11, 12, 15, 16, 18, 20, 22, 23, 26, 27, 28, 29], "object": [1, 3, 6, 7, 8, 10, 11, 14, 20, 21, 22, 23, 24, 25, 26, 27], "count": 1, "time": [1, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30], "element": [1, 2, 6, 22], "int": [1, 6, 22], "create_cach": 1, "creat": [1, 6, 8, 12, 20], "new": [1, 6, 7, 11, 23, 27, 29], "get": [1, 6, 7, 22, 23, 28, 30, 34], "default": [1, 6, 7, 8, 9, 11, 12, 14, 17, 19, 23], "none": [1, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 20, 23, 27], "found": [1, 6, 9, 11, 22, 27], "exist": [1, 6, 7, 8, 11, 27], "get_cach": 1, "given": [1, 6, 7, 10, 11, 20], "has_cach": 1, "tell": [1, 11, 27], "present": [1, 6], "enumer": [1, 3, 15, 16, 20], "remove_cach": 1, "pipeline_cach": 1, "step": [1, 6, 8, 18, 19, 20, 30], "cache_nam": 1, "verbos": [1, 6, 11, 15, 20, 21, 25], "fals": [1, 5, 6, 7, 8, 11, 12, 15, 18, 19, 21, 22, 27], "same": [1, 5, 6, 7, 8, 9, 11, 12, 14, 18, 22, 26, 27, 28, 29, 30], "can": [1, 5, 6, 7, 9, 10, 11, 15, 16, 18, 20, 21, 22, 23, 26, 27, 28, 29, 30], "skip": [1, 6], "detect": [1, 16], "alreadi": [1, 6], "accross": 1, "even": [1, 6, 7, 12, 18, 22, 27, 30], "tupl": [1, 3, 6], "fit": [1, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35], "chain": 1, "order": [1, 6, 22, 27], "thei": [1, 7, 8, 9, 18, 27], "last": [1, 3, 11, 26, 27], "option": [1, 6, 7, 8, 10, 11, 19, 26, 27], "If": [1, 5, 6, 7], "true": [1, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 30], "elaps": [1, 20, 21], "while": [1, 6], "each": [1, 5, 6, 7, 10, 11, 12, 14, 18, 19, 20, 21, 22, 25, 27], "print": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 16, 22, 23, 28, 30, 32, 34], "complet": [1, 6, 7], "The": [1, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 35], "named_step": 1, "bunch": 1, "access": [1, 27, 30], "read": 1, "onli": [1, 5, 6, 7, 9, 11, 12, 20, 22, 23, 26], "ani": [1, 6, 9, 10, 11, 19, 21, 22, 35], "user": [1, 6, 7, 11, 28], "set_score_request": [1, 6, 7, 11], "sample_weight": [1, 6, 7, 10, 11], "bool": [1, 6, 7, 10, 11], "str": [1, 6, 7, 8, 10, 11, 23], "unchang": [1, 6, 7, 11], "request": [1, 6, 7, 11], "pass": [1, 6, 7, 11], "method": [1, 3, 6, 7, 10, 11, 12, 15, 21, 22, 24, 27, 30], "note": [1, 4, 6, 11], "relev": [1, 6, 7, 11], "enable_metadata_rout": [1, 6, 7, 11], "see": [1, 3, 5, 6, 7, 8, 9, 11, 12, 18, 19, 20, 22, 29, 30], "set_config": [1, 6, 7, 11], "pleas": [1, 6, 7, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "guid": [1, 6, 7, 11], "how": [1, 6, 7, 11, 14, 17, 19, 29], "rout": [1, 6, 7, 11], "mechan": [1, 6, 7, 11], "provid": [1, 6, 7, 11, 16, 35], "ignor": [1, 6, 7, 8, 11, 30], "meta": [1, 6, 7, 9, 11], "rais": [1, 6, 7, 10, 11, 12, 22, 27], "error": [1, 6, 7, 10, 11, 25, 32], "should": [1, 3, 6, 7, 8, 11, 16, 22, 27], "alia": [1, 6, 7, 11], "instead": [1, 6, 7, 11, 20, 22, 26], "origin": [1, 6, 7, 11, 27, 29, 32], "util": [1, 6, 7, 11, 27, 28], "metadata_rout": [1, 6, 7, 11], "retain": [1, 6, 7, 11], "allow": [1, 6, 7, 11, 12, 27], "you": [1, 3, 6, 7, 11, 29], "chang": [1, 6, 7, 11, 14, 15, 17, 19, 22, 27, 34], "some": [1, 6, 7, 8, 11, 12, 23, 24, 25, 29], "other": [1, 5, 6, 7, 11, 23, 27, 35], "1": [1, 2, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34], "3": [1, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32], "sub": [1, 6, 7, 11, 17], "e": [1, 5, 6, 7, 10, 11, 12, 22, 28, 32], "g": [1, 6, 7, 11, 26, 30], "insid": [1, 6, 7, 11], "otherwis": [1, 6, 7, 11, 12, 22, 35], "effect": [1, 6, 7, 11, 28], "self": [1, 6, 7, 9, 10, 11, 22], "A": [2, 6, 7, 10, 20, 21, 22, 27, 35], "simpl": [2, 7, 12, 14, 19, 26], "try": [2, 5, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "scipi": [2, 15], "bla": 2, "doubl": [2, 6, 22], "b": [2, 6, 11, 14, 18, 26, 32], "prec": [2, 27], "find": [2, 5, 6, 9, 11, 12, 21, 22, 27, 30], "x": [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 34], "problem": [2, 6, 15, 21, 22, 26, 27, 28], "ax": [2, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "minim": [2, 5, 22], "2": [2, 3, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "dgel": 2, "dimens": [2, 6, 11, 12], "precis": 2, "return": [2, 3, 5, 8, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28], "info": [2, 16], "0": [2, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34], "success": 2, "exit": 2, "th": [2, 12], "argument": 2, "had": 2, "illeg": 2, "diagon": 2, "triangular": 2, "factor": [2, 11], "zero": [2, 6, 17, 21, 22], "so": [2, 6, 11, 21, 30, 35], "have": [2, 6, 8, 10, 24, 25, 27, 28, 29], "full": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "rank": [2, 6, 27], "least": [2, 6, 25], "squar": [2, 6, 7, 15, 17, 24, 25], "solut": [2, 6, 23], "could": [2, 6, 12, 22, 27, 29], "indic": [2, 6, 9, 12], "c": [2, 4, 7, 15, 17, 18, 19, 20, 22, 26, 35], "must": [2, 6, 7, 9, 11], "contigu": [2, 6], "linalg": 2, "scipy_dgelss": 2, "10": [2, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34], "22": [2, 16, 27, 29], "v": [2, 3, 19, 24, 25, 30], "": [2, 3, 5, 6, 7, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 30, 34], "copi": [2, 3, 6, 7, 22, 28, 35], "assert": 2, "format_paramet": 3, "pdict": 3, "d": [3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 26, 32], "dict": [3, 6, 10, 15, 19, 20, 24, 25, 26], "r": [3, 5, 14, 27, 28], "format_valu": 3, "format_function_cal": 3, "fct": [3, 6, 9, 15, 18, 19], "alter_pipeline_for_debug": [3, 30], "pipe": [3, 8, 10, 32], "overwrit": [3, 10, 24], "predict_proba": [3, 6, 10, 20], "decision_funct": [3, 6, 10], "collect": [3, 14, 27], "input": [3, 6, 23, 27, 30], "seen": [3, 6], "need": [3, 10, 22, 27], "untouch": 3, "slower": [3, 22], "visual": [3, 8, 13, 28, 31], "enumerate_pipeline_model": [3, 30], "coor": [3, 30], "current": [3, 6, 11, 22, 29], "subset": [3, 11], "variabl": [3, 5, 8, 15, 16, 21], "iter": [3, 6, 9, 19, 23, 24, 25, 27], "exampl": [3, 5, 6, 7, 8, 9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 34], "plot_gallery_imag": [4, 8, 27], "pipeline2str": [4, 8, 30], "helper": [4, 30], "metric": [4, 6, 10, 11, 15, 20, 28, 32], "non_linear_correl": [4, 5], "mlbatch": 4, "mlcach": 4, "mlmodel": [4, 9, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 34], "trainer": [4, 19], "hidden": 4, "potentiel": 4, "search_rank": 4, "searchenginevector": 4, "searchenginepredict": 4, "searchenginepredictionimag": [4, 27], "sklapi": [4, 32], "skbase": 4, "skbaseclassifi": 4, "skexcept": 4, "skbaselearn": 4, "sklearnparamet": 4, "skbaseregressor": 4, "skbasetransform": 4, "skbasetransformlearn": [4, 32], "skbasetransformstack": [4, 32], "dig": [4, 15, 30], "structur": [4, 27], "experi": 4, "exercis": 4, "direct_blas_lapack": 4, "timeseri": 4, "dataset": [4, 5, 6, 10, 14, 18, 22, 23, 25, 26, 27, 28, 30, 32, 34], "experiment": 4, "manipul": [4, 34], "df": [5, 6, 11, 16, 20, 24, 25, 28, 30, 32], "draw": [5, 6, 8, 18], "5": [5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 34], "minmax": 5, "datafram": [5, 6, 8, 9, 11, 15, 16, 19, 20, 24, 25, 26, 28, 30, 32], "machin": [5, 6, 9, 11, 15, 34], "tri": [5, 6, 14, 23, 26], "averag": [5, 6, 16, 22, 26], "result": [5, 6, 9, 12, 15, 17, 18, 19, 20, 23, 27], "obtain": [5, 35], "three": [5, 22], "matric": [5, 6], "min": [5, 6, 15, 18, 19, 20, 23, 26, 28], "max": [5, 6, 14, 15, 18, 19, 20, 23, 26, 28], "pearson": 5, "cor": 5, "x_i": [5, 6, 22, 27], "x_j": [5, 27], "frac": [5, 11, 26, 27], "cov": 5, "y_i": [5, 6, 22], "sigma": [5, 26], "center": [5, 6, 14, 17, 19, 20, 23], "mathbb": [5, 22], "becom": 5, "sqrt": 5, "rescal": [5, 6], "let": [5, 6, 14, 15, 16, 18, 19, 20, 21, 22, 23, 28, 29, 30], "assum": [5, 7, 9, 11, 27], "we": [5, 9, 10, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 32], "coeffici": [5, 6, 22], "alpha_": 5, "ij": [5, 27], "deviat": [5, 6, 22, 26], "nois": [5, 26], "epsilon_": 5, "like": [5, 6, 7, 10, 12, 16, 21, 22, 27], "come": [5, 6, 9, 27], "definit": 5, "omega": [5, 27], "defin": [5, 6, 10, 11, 15, 27], "rightarrow": 5, "anymor": [5, 7, 22], "quantiti": 5, "min_": 5, "Then": 5, "choos": [5, 6, 27], "left": [5, 12, 22], "right": [5, 12, 16, 29, 35], "bound": 5, "verifi": [5, 10], "math": 5, "That": [5, 6, 7, 12, 16, 20, 27], "also": [5, 6, 9, 15, 16, 18, 19, 20, 22, 27], "neg": [5, 15], "most": [5, 6, 20], "usual": [5, 6, 7, 27], "overfit": 5, "data": [5, 6, 7, 8, 9, 10, 11, 15, 16, 18, 19, 20, 23, 24, 25, 27, 28, 30, 32, 34], "databas": [5, 23, 27], "split": [5, 6, 12, 21, 22, 23], "two": [5, 6, 7, 11, 12, 15, 17, 20, 21, 22, 26, 27], "part": [5, 23, 26], "everi": [5, 6, 9, 11, 12, 14, 15, 20, 22, 26, 27, 30], "necessarili": [5, 6, 19, 27], "symmetr": 5, "follow": [5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 22, 26, 30, 35], "iri": [5, 28, 30], "randomforestregressor": 5, "ensembl": [5, 19], "load_iri": [5, 10, 15, 18, 20, 28, 30, 32], "x1": [5, 6, 12, 14, 18, 19, 20, 30], "x2": [5, 12, 14, 18, 19, 20, 30], "x3": [5, 30], "x4": [5, 30], "998827": 5, "082692": 5, "863019": 5, "793449": 5, "087502": 5, "996169": 5, "356354": 5, "287950": 5, "890166": 5, "588837": 5, "998830": 5, "961109": 5, "738567": 5, "680476": 5, "964888": 5, "999204": 5, "ml_featur": [6, 9], "itself": 6, "torch": [6, 9, 13, 31], "addit": [6, 8, 10, 11], "kmeans_constraint": 6, "n_cluster": [6, 14, 17], "init": [6, 23], "n_init": [6, 14, 17, 19], "max_it": [6, 14, 19, 25, 28], "500": 6, "tol": 6, "0001": [6, 19], "random_st": [6, 7, 14, 23, 28], "copy_x": 6, "algorithm": [6, 7, 14, 17, 19, 22, 25, 27], "lloyd": [6, 19], "balanced_predict": [6, 14], "strategi": [6, 8, 14, 20, 30], "gain": [6, 7, 14], "kmeans0": 6, "learning_r": 6, "histori": [6, 14], "equal": 6, "size": [6, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30], "initi": [6, 19], "regular": [6, 11, 15, 28, 29], "continu": [6, 21, 22, 23, 28], "offer": 6, "choic": [6, 24, 25], "first": [6, 9, 11, 19, 21, 22, 24, 25, 26, 27, 29, 30], "balanc": 6, "second": [6, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "over": [6, 11, 16, 23], "test": [6, 7, 10, 15, 23], "impli": [6, 35], "observ": [6, 7, 11, 12, 22], "might": 6, "belong": 6, "obseerv": 6, "assign": [6, 18, 19], "distanc": [6, 11, 14, 15, 17], "point": [6, 7, 9, 14, 15, 18, 19, 20, 23], "closest": [6, 27], "unless": [6, 10, 32], "reach": [6, 19, 23, 24], "maximum": [6, 23, 24], "deal": [6, 11, 35], "further": [6, 22], "map": [6, 20, 22], "describ": [6, 22, 27], "variat": 6, "attach": 6, "rate": 6, "cannot": [6, 7], "good": 6, "compromis": 6, "switch": [6, 21, 22], "check": [6, 7, 10, 22, 23, 27, 28], "inertia": 6, "ones": 6, "abid": 6, "accress": 6, "cluster_edg": [6, 14], "edg": [6, 12, 14, 18], "delaunai": [6, 14], "constraint_kmean": 6, "state": 6, "sampl": [6, 10, 11, 15], "evolut": 6, "y": [6, 7, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 34], "spars": [6, 10], "shape": [6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30], "n_sampl": [6, 10, 14, 22, 23], "n_featur": [6, 10, 11, 14, 23], "instanc": [6, 7], "caus": 6, "memori": [6, 9, 12], "unus": [6, 8, 10], "set_fit_request": [6, 7, 11], "kmeans_l1": 6, "300": [6, 11, 19, 21, 25, 30], "l2": [6, 17, 18, 19, 24, 25], "either": 6, "form": [6, 29], "well": [6, 8, 11, 14, 28], "centroid": 6, "gener": [6, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34], "random": [6, 15, 16, 17, 21, 22, 24, 25, 26, 28, 30], "ndarrai": [6, 30], "select": 6, "smart": 6, "speed": 6, "converg": [6, 19, 23, 24], "section": [6, 7], "k_init": 6, "detail": 6, "row": [6, 11, 15, 16, 28], "give": [6, 29], "run": [6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "seed": 6, "final": [6, 21], "best": [6, 7, 21, 22], "consecut": 6, "term": 6, "singl": [6, 11, 30, 34], "float": [6, 10, 28], "1e": [6, 26], "rel": [6, 8], "toler": 6, "regard": 6, "declar": 6, "mode": [6, 26, 30], "randomst": 6, "determinist": 6, "pre": 6, "numer": 6, "accur": 6, "ensur": 6, "put": [6, 15, 18, 19, 20], "back": [6, 7], "small": [6, 27], "subtract": 6, "ad": [6, 16], "case": [6, 8, 9, 10, 12, 22, 26, 29], "signific": 6, "slowdown": 6, "elkan": 6, "classic": 6, "em": 6, "effici": [6, 7, 16, 22], "triangl": 6, "inequ": 6, "doesn": 6, "ident": 6, "path": [6, 8, 9, 12, 27], "cluster_centers_": [6, 14, 17, 19], "stop": [6, 19], "fulli": 6, "consist": [6, 30], "labels_": 6, "label": [6, 10, 11, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30], "inertia_": 6, "sum": [6, 7, 11, 22, 23, 28], "n_iter_": 6, "Not": [6, 19, 36], "here": [6, 10, 27], "convent": 6, "In": [6, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "quantiz": 6, "literatur": 6, "book": 6, "set_predict_request": [6, 7], "space": [6, 12, 18, 19, 22], "typic": 6, "dens": 6, "x_new": 6, "classification_kmean": 6, "clu": 6, "kwarg": [6, 7, 9, 10], "logisticregress": [6, 8, 10, 13, 15, 20, 28, 30, 31, 32], "linear_model": [6, 8, 10, 11, 15, 19, 20, 25, 26, 28, 30, 32, 34], "logisiticregress": 6, "sent": [6, 9], "set_param": [6, 10], "its": [6, 10], "understand": [6, 15, 20], "n_target": [6, 10], "Will": 6, "cast": 6, "dtype": [6, 17, 20, 23, 26, 27], "necessari": 6, "individu": 6, "clus_": [6, 19], "estimator_": [6, 23], "get_param": [6, 10], "deep": [6, 9, 10, 13, 31], "both": [6, 11], "pattern": [6, 10, 11], "probabl": [6, 10, 27, 30], "prefix": 6, "e_": 6, "c_": [6, 15, 18, 19, 20], "valeur": 6, "transform_featur": 6, "quantile_mlpregressor": 6, "hidden_layer_s": [6, 24], "activ": [6, 24], "solver": [6, 8, 15, 19, 30], "alpha": [6, 15, 21, 22, 26], "batch_siz": [6, 27], "learning_rate_init": 6, "power_t": 6, "shuffl": [6, 14, 15, 27], "warm_start": 6, "momentum": 6, "nesterovs_momentum": 6, "early_stop": 6, "validation_fract": 6, "beta_1": 6, "beta_2": 6, "epsilon": 6, "n_iter_no_chang": 6, "max_fun": 6, "perceptron": [6, 24, 34], "basemultilayerperceptron": 6, "interval_regressor": 6, "n_estim": [6, 19, 26], "n_job": [6, 20, 21], "multipl": [6, 23], "regressor": [6, 7, 10, 11, 22, 28], "made": [6, 7, 26, 28], "smaller": [6, 26], "increas": [6, 12, 19, 20, 26], "varianc": 6, "associ": [6, 22, 35], "anoth": [6, 9, 10, 14, 18], "uniform": 6, "predictor": [6, 11, 13, 31], "bucket": [6, 16, 20, 21, 22], "parallel": [6, 20, 21], "job": 6, "proport": 6, "resampl": [6, 26], "tqdm": [6, 15, 16, 21], "binner_": 6, "estimators_": [6, 20], "mean_estimator_": 6, "whole": [6, 22], "dim_": 6, "mean_": 6, "properti": [6, 10], "n_estimators_": 6, "predict_al": 6, "predict_sort": [6, 26], "sort": [6, 15, 16, 25, 26], "anmf_predictor": 6, "force_posit": 6, "decomposit": 6, "nmf": 6, "involv": [6, 12, 22], "truncatedsvd": 6, "compon": 6, "project": 6, "would": [6, 11, 22, 26, 27, 28], "float64": [6, 14, 17], "n_compon": [6, 23], "pred": [6, 10, 12, 16, 21, 22, 26, 32], "155": 6, "05": [6, 8, 16, 22, 26, 30, 31], "multi": [6, 24, 34], "piecewise_estim": 6, "dummi": [6, 11, 20, 21, 24, 25], "dummyclassifi": [6, 20], "just": [6, 8, 23, 27, 28], "pick": 6, "enough": [6, 27], "decisiontreeclassifi": [6, 10, 12, 15, 18, 20, 32], "bin": [6, 12, 16, 26], "preprocess": [6, 8, 11, 19, 20, 21, 23, 30], "kbinsdiscret": [6, 20], "instanci": 6, "main": [6, 7], "piec": [6, 22, 30], "requir": [6, 7, 22], "happen": [6, 22], "To": 6, "avoid": [6, 7], "linearregress": [6, 11, 21, 25, 26, 28, 30, 34], "dummyregressor": [6, 21], "relu": [6, 27], "adam": 6, "auto": [6, 11, 14, 16, 17, 19], "constant": [6, 7, 8, 21, 22, 28, 30], "001": 6, "200": [6, 11, 23, 24, 26, 28], "999": 6, "08": [6, 31], "neural": [6, 27], "network": [6, 27], "inherit": 6, "neural_network": [6, 23, 24], "mlpregressor": [6, 13, 23, 31, 34], "absolut": 6, "lbfg": [6, 8, 19, 30], "stochast": [6, 23, 24], "gradient": [6, 27], "descent": 6, "absolute_loss": 6, "length": [6, 9, 18, 19, 20], "n_layer": 6, "ith": 6, "repres": [6, 9], "neuron": 6, "layer": [6, 24, 27, 34], "tanh": [6, 24], "op": 6, "bottleneck": 6, "sigmoid": 6, "exp": [6, 28], "hyperbol": 6, "tan": 6, "rectifi": 6, "unit": [6, 7, 11], "sgd": 6, "famili": 6, "quasi": 6, "newton": 6, "refer": [6, 19], "propos": [6, 21, 22, 23, 28], "kingma": 6, "diederik": 6, "jimmi": 6, "ba": 6, "pretti": [6, 10, 28], "larg": 6, "thousand": [6, 27], "valid": [6, 10], "For": [6, 18, 19, 27], "howev": [6, 12, 16, 27], "faster": [6, 7, 16], "perform": [6, 27, 28], "penalti": 6, "minibatch": 6, "invscal": 6, "adapt": [6, 13, 31], "schedul": 6, "gradual": 6, "decreas": 6, "learning_rate_": 6, "scale": [6, 11, 19], "expon": 6, "effective_learning_r": 6, "pow": 6, "long": [6, 27], "epoch": 6, "divid": 6, "control": 6, "until": [6, 27], "mani": [6, 16, 21, 22, 26], "whether": [6, 12, 35], "np": 6, "improv": 6, "consid": [6, 27], "progress": 6, "messag": 6, "stdout": 6, "reus": [6, 23, 28], "previou": [6, 11, 22], "eras": 6, "nesterov": 6, "earli": 6, "termin": 6, "automat": [6, 11], "asid": 6, "exponenti": [6, 28], "decai": 6, "moment": 6, "stabil": [6, 10], "meet": 6, "constructor": 6, "parent": [6, 12], "loss_": [6, 23], "coefs_": 6, "correspond": 6, "intercepts_": 6, "bia": 6, "ran": 6, "n_layers_": 6, "n_outputs_": 6, "out_activation_": 6, "n_output": 6, "quantile_regress": 6, "fit_intercept": 6, "delta": 6, "chosen": [6, 27], "rho": 6, "sum_i": [6, 11, 22], "where": [6, 11, 12, 27], "expect": [6, 11, 12, 16, 19, 28], "calcul": 6, "intercept": [6, 15, 30], "els": [6, 15, 16, 18, 19, 22, 27], "overwritten": 6, "cpu": 6, "speedup": 6, "suffici": 6, "specif": [6, 11, 27], "m": [6, 14, 15, 17, 18, 22, 26], "forc": 6, "optimis": 6, "equival": [6, 7, 16], "reweight": [6, 25], "french": 6, "r\u00e9gression": 6, "coef_": [6, 34], "dure": 6, "2d": 6, "1d": 6, "intercept_": 6, "independ": 6, "target_predictor": 6, "permut": 6, "classif": [6, 13, 27, 28, 31], "deriv": 6, "classifiermixin": 6, "prior": 6, "type": [6, 11, 12, 20, 26, 27, 30], "tt": 6, "arang": [6, 11, 14, 15, 16, 18, 19, 20], "reshap": [6, 11, 12, 15, 16, 18, 19, 20, 24, 25, 27, 29], "classifier_": 6, "453": 6, "hold": [6, 9, 11, 22], "transformer_": [6, 28], "classes_": [6, 20], "raw": [6, 26], "accord": 6, "y_hat": 6, "n_class": [6, 15, 23], "accuracy_scor": [6, 10, 28, 32], "regressormixin": 6, "log": [6, 28, 34], "ravel": [6, 15, 18, 19, 20, 24, 25, 26, 27], "regressor_": 6, "r2_score": [6, 28], "sklearn_text": [6, 29], "overload": [6, 7], "_word_ngram": 6, "member": [6, 9, 12, 30], "vocabulary_": [6, 29], "countvector": 6, "process": [6, 9, 16, 26, 27], "sklearn_transform_inv": 6, "what": [6, 7, 11, 12, 20, 22], "get_fct_inv": [6, 11], "revers": [6, 11], "categories_to_integ": [6, 32], "skip_error": 6, "someth": [6, 12, 23], "categori": [6, 27, 28], "except": [6, 7, 10, 12, 22, 28, 32], "modal": 6, "appear": 6, "per": [6, 11, 19], "multipli": [6, 12, 27], "displai": [6, 8, 11], "big": [6, 19, 23, 30], "alloc": 6, "text": [6, 8, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30, 32], "cat": [6, 8, 27, 30, 32], "tran": [6, 10, 27, 32], "newdf": [6, 32], "nan": [6, 11, 12, 26, 32], "fit_param": 6, "fit_transform": [6, 10, 23], "preserv": 6, "extended_featur": 6, "poli": [6, 30], "poly_degre": 6, "poly_interaction_onli": 6, "poly_include_bia": 6, "slow": [6, 22], "degre": [6, 15], "interact": 6, "product": [6, 22], "distinct": [6, 18, 19], "etc": 6, "power": 6, "act": 6, "n_input_features_": 6, "total": [6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "n_output_features_": 6, "suitabl": 6, "get_feature_names_out": 6, "input_featur": 6, "avail": [6, 11, 27, 34], "By": [6, 23], "x0": 6, "xn_featur": 6, "output_feature_nam": 6, "n_output_featur": 6, "rn": 6, "sklearn_transform_inv_fct": 6, "fct_inv": 6, "seri": [6, 11], "reciproc": 6, "pprint": [6, 12], "available_fct": 6, "ufunc": [6, 28], "local": [6, 9, 20, 23, 26], "lambda": [6, 12, 15, 18, 28], "0x7feeccfc2cb0": 6, "expm1": [6, 28], "log1p": [6, 28], "0x7feeccfc2b90": 6, "remain": [6, 12], "onc": [6, 22], "permutation_": [6, 28], "track": 6, "predictable_tsn": 6, "keep_tsne_output": 6, "interest": [6, 30], "studi": [6, 11], "reproduc": 6, "why": [6, 7, 12, 22, 27], "tsne": [6, 23], "approxim": [6, 7, 14, 15, 22, 23], "manifold": [6, 23], "he": 6, "store": [6, 7, 10, 11, 27, 29, 30], "tsne_outputs_": 6, "normalizer_": 6, "normali": 6, "inv_std_": 6, "mean_squared_error": 6, "tranform": [6, 11], "transfer_transform": 6, "copy_estim": 6, "wrap": 6, "frozen": 6, "guess": [6, 29], "take": [6, 9, 20], "transfer": 6, "noth": 6, "content": [6, 27], "encod": [6, 30], "utf": [6, 30], "decode_error": 6, "strict": 6, "strip_acc": 6, "lowercas": 6, "preprocessor": [6, 8, 30], "token": 6, "stop_word": 6, "token_pattern": [6, 29], "u": 6, "w": [6, 22, 30], "ngram_rang": [6, 29], "analyz": 6, "word": 6, "max_df": 6, "min_df": 6, "max_featur": [6, 7], "vocabulari": 6, "binari": [6, 16], "int64": 6, "still": [6, 12, 22, 27], "than": [6, 16, 22, 23, 27, 28], "feature_extract": [6, 29], "pformat": 6, "corpu": [6, 29], "mod1": [6, 29], "todens": [6, 29], "mod2": [6, 29], "weirder": 6, "show": [6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "raw_docu": 6, "set_transform_request": [6, 11], "use_idf": 6, "smooth_idf": 6, "sublinear_tf": 6, "za": [6, 29], "z": [6, 15, 18, 19, 20, 29], "329": 6, "245": [6, 34], "193": 6, "doc": [6, 29], "umen": [6, 29], "sec": [6, 29], "ond": [6, 29], "y_true": 6, "y_pred": [6, 26], "ground": 6, "truth": 6, "correct": 6, "correctli": 6, "_kmeans_constraint_": 6, "inplac": [6, 27], "reli": [7, 9, 27], "public": 7, "api": [7, 9, 10, 12, 20, 26, 34], "break": 7, "unstabl": 7, "packag": [7, 20, 26], "tool": 7, "were": [7, 27], "_config": 7, "cython_vers": 7, "numpy_vers": 7, "scipy_vers": 7, "sklearn_vers": 7, "dev0": [7, 34], "impurity_improv": 7, "easi": 7, "trick": [7, 30], "arg": 7, "pr": [7, 21, 22], "piecewise_tree_regress": [7, 22], "mselin": [7, 22], "splitter": 7, "max_depth": [7, 12, 15, 18], "min_samples_split": [7, 15], "min_samples_leaf": [7, 15, 20, 21, 22, 26], "min_weight_fraction_leaf": 7, "max_leaf_nod": 7, "min_impurity_decreas": 7, "stepwis": [7, 22], "mse": 7, "crash": 7, "explan": 7, "check_input": 7, "fall": [7, 12, 16, 22], "mae": 7, "predict_leav": [7, 12, 15, 18, 22], "leaves_index_": [7, 22], "explain": [7, 18], "execut": [7, 31], "piecewise_tree_regression_criterion": [7, 22], "inspir": 7, "hellinger_distance_criterion": [7, 22], "pyx": [7, 22], "expos": [7, 22], "_criterion": [7, 22], "purpos": [7, 35], "printd": 7, "debug": 7, "design": [7, 22, 27], "piecewise_tree_regression_criterion_fast": [7, 22], "node": [7, 12, 15, 22], "cumul": [7, 22], "loop": [7, 22], "next": [7, 27, 29], "line": [7, 8, 11, 15, 22, 26, 32], "later": 7, "piecewise_tree_regression_criterion_linear": 7, "piecewise_tree_regression_criterion_linear_fast": 7, "img": [8, 23, 27, 30], "width": [8, 18, 19, 20], "return_figur": 8, "folder_imag": 8, "figur": [8, 28], "imag": [8, 9, 13, 23, 30, 31], "matplotlib": [8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "filenam": [8, 9], "url": [8, 27], "pillow": 8, "sam": 8, "folder": [8, 27], "export": 8, "dot": [8, 22, 30], "languag": [8, 30], "orient": [8, 30], "portrait": [8, 30], "ranksep": [8, 30], "nodesep": [8, 30], "height": [8, 26], "indent": 8, "imput": [8, 30], "simpleimput": [8, 30], "onehotencod": [8, 30], "standardscal": [8, 23, 30], "minmaxscal": [8, 30], "compos": [8, 27, 28, 30], "numeric_featur": [8, 30], "ag": [8, 30], "fare": [8, 30], "numeric_transform": [8, 30], "median": [8, 30], "scaler": [8, 30], "categorical_featur": [8, 30], "embark": [8, 30], "sex": [8, 30], "pclass": [8, 30], "categorical_transform": [8, 30], "fill_valu": [8, 30], "onehot": [8, 30], "handle_unknown": [8, 30], "num": [8, 30], "clf": [8, 15, 30], "search_engine_vector": 9, "pknn": 9, "look": [9, 12, 16, 19, 20, 21, 27, 29, 30], "neighborsnearestneighbor": 9, "nearest": 9, "neighbor": [9, 12, 18, 23, 27], "popul": [9, 30], "features_": 9, "knn_": 9, "metadata_": 9, "nearestneighbor": [9, 27], "kneighbor": [9, 27], "n_neighbor": 9, "ind": 9, "read_zip": 9, "zipfilenam": 9, "restor": 9, "zipfil": 9, "read_csv": 9, "to_zip": 9, "nn": 9, "to_csv": 9, "search_engine_predict": 9, "fct_param": 9, "knn": [9, 27], "behavior": [9, 12], "model_featur": 9, "search_engine_predictions_imag": 9, "iter_imag": 9, "through": [9, 30], "len": [9, 16, 20, 27], "neigbhor": 9, "plai": [10, 28, 30], "useless": 10, "sklearn_bas": 10, "compare_param": 10, "p1": 10, "p2": 10, "exc": 10, "compar": [10, 11, 21, 22, 23, 27], "met": 10, "objet": 10, "udpat": 10, "test_equ": 10, "o": [10, 17, 18, 19, 20, 27, 30], "sklearn_base_classifi": 10, "accuraci": [10, 27, 28], "wrt": 10, "sklearn_paramet": 10, "sklearn_base_learn": 10, "qui": 10, "suit": 10, "la": 10, "m\u00eame": 10, "que": 10, "pr\u00e9diction": 10, "to_dict": 10, "sklearn_base_regressor": 10, "sklearn_base_transform": 10, "sklearn_base_transform_learn": [10, 32], "hide": 10, "insert": 10, "There": [10, 28], "shorter": 10, "imposs": [10, 32], "disguis": [10, 32], "model_select": [10, 15, 20, 21, 22, 23, 26, 28, 32], "train_test_split": [10, 15, 20, 21, 22, 23, 26, 28, 32], "make_pipelin": [10, 32], "x_train": [10, 15, 20, 21, 22, 23, 26, 28, 32], "x_test": [10, 15, 20, 21, 22, 23, 26, 28, 32], "y_train": [10, 15, 20, 21, 22, 23, 26, 28, 32], "y_test": [10, 15, 20, 21, 22, 23, 26, 28, 32], "avec": [10, 27, 32], "deux": [10, 32], "9473684210526315": [10, 32], "mandatori": 10, "embed": [10, 23], "sklearn_base_transform_stack": [10, 32], "arrang\u00e9": 10, "selon": 10, "m\u00e9thode": 10, "du": 10, "ce": [10, 32], "assembl": [10, 32], "le": [10, 32], "r\u00e9sultat": [10, 32], "servent": [10, 32], "entr\u00e9": [10, 32], "\u00e0": [10, 32], "mod\u00e8l": [10, 32], "artificial_data": 11, "dt1": 11, "dt2": 11, "minut": [11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "artici": 11, "date": 11, "datetim": 11, "now": [11, 22, 23, 30], "timedelta": 11, "head": [11, 20, 24, 25], "50": [11, 12, 14, 16, 22, 26, 28], "137490": 11, "641966": 11, "613742": 11, "52": [11, 27], "824658": 11, "706999": 11, "54": 11, "714527": 11, "find_ts_group_pattern": 11, "ttime": [11, 22], "name_subset": 11, "week": 11, "half": 11, "hour": 11, "agg": 11, "group": 11, "aggrag": 11, "aggreg": 11, "aggregate_timeseri": 11, "period": 11, "plot_week_timeseri": 11, "normalis": 11, "h": [11, 15, 18, 19, 20], "value2": 11, "label2": 11, "daynam": 11, "xfmt": 11, "0f": 11, "dispatch": 11, "dai": 11, "bar": 11, "english": 11, "axi": [11, 27], "png": [11, 30], "hire": 11, "pdf": 11, "context_length": 11, "context": [11, 16], "relat": [11, 27], "same_row": 11, "n_ob": 11, "empti": 11, "nrow": 11, "past": 11, "delay2": 11, "1000": [11, 14, 16, 17, 21, 22, 24, 25, 27, 28], "nx": 11, "ny": 11, "nw": 11, "400": [11, 19, 20], "With": 11, "use_all_past": 11, "templat": 11, "ine": 11, "delay1": 11, "sever": 11, "hat": 11, "y_": [11, 27], "p": [11, 15, 26, 27], "leqslant": [11, 22], "exclud": 11, "itselv": 11, "has_preprocess": 11, "futur": [11, 20, 26], "librari": 11, "expected_i": 11, "predicted_i": 11, "y_t": 11, "mltree": [12, 15, 16, 18], "tree_structur": 12, "tree_find_common_nod": 12, "j": [12, 19], "common": [12, 18], "precomput": 12, "tree_node_rang": 12, "root": [12, 27], "tree_find_path_to_root": 12, "tree_node_par": 12, "node_id": 12, "parent_id": 12, "rang": [12, 14, 15, 17, 18, 19, 20, 22, 23, 27, 28], "infin": 12, "tree_leave_index": [12, 18], "clr": [12, 15, 18, 19, 24, 25, 34], "ra": 12, "tree_": [12, 15], "tree_leave_neighbor": [12, 18], "x_d": 12, "sign": [12, 28], "goe": 12, "border": [12, 15, 18, 19], "somewher": 12, "segment": [12, 18], "nei": 12, "tree_digit": 12, "digitize2tre": [12, 16], "dimension": 12, "monoton": 12, "end": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "open": [12, 30], "throw": 12, "overcom": 12, "onnx": [12, 16], "rule": 12, "though": [12, 18, 22], "export_text": [12, 16], "comparison": [12, 28], "feature_nam": [12, 16], "00": [12, 15, 16, 21, 31], "traceabl": [13, 31], "tf": [13, 31], "idf": [13, 31], "download": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "auto_examples_python": 13, "zip": [13, 27], "jupyt": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "auto_examples_jupyt": 13, "sphinx": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "go": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30], "counter": 14, "pyplot": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "plt": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "make_blob": 14, "cluster_std": 14, "center_box": 14, "vstack": [14, 19, 22], "150": [14, 21], "fig": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "subplot": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "figsiz": [14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28], "set_titl": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "km": [14, 17], "cl": [14, 19, 27], "hist": 14, "color": [14, 15, 18, 19, 20, 23, 26, 30], "brgy": 14, "legend": [14, 17, 18, 19, 20, 21, 22, 24, 25, 26], "home": [14, 17, 19, 20, 23, 24, 26, 27, 30], "xadupr": [14, 17, 19, 20, 23, 24, 26, 27], "_kmean": [14, 17, 19], "py": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "1416": [14, 17, 19], "futurewarn": [14, 17, 19, 20, 26], "explicitli": [14, 17, 19], "suppress": [14, 17, 19], "super": [14, 17, 19], "_check_params_vs_input": [14, 17, 19], "default_n_init": [14, 17, 19], "0x7fed7b8c4850": 14, "km1": 14, "km2": 14, "x27": [14, 15, 17, 19, 20, 21, 24, 28, 29, 30], "environ": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "rerun": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "represent": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "trust": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "On": [14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "github": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34], "unabl": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "render": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "load": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "page": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "nbviewer": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "org": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "nbsp": [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "constraintkmeansifittedconstraintkmean": 14, "exchang": 14, "cl1": 14, "hist1": 14, "cl2": 14, "hist2": 14, "0x7fed8cb7e500": 14, "area": 14, "attract": 14, "def": [14, 15, 17, 18, 19, 20, 23, 28], "plot_delaunai": 14, "555555": 14, "nstrategi": 14, "cluster_centers_iter_": 14, "aaaaaa": 14, "astyp": [14, 15, 16], "scatter": [14, 15, 18, 19, 20], "movement": 14, "script": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "667": [14, 31], "plot_constraint_kmean": [14, 31], "ipynb": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "demonstr": [15, 17], "spatial": 15, "cdist": 15, "plot_classifier_decision_zon": 15, "titl": [15, 16, 20, 23], "gca": 15, "x_min": [15, 18, 19, 20, 23], "x_max": [15, 18, 19, 20, 23], "y_min": [15, 18, 19, 20], "y_max": [15, 18, 19, 20], "dhx": 15, "dhy": 15, "xx": [15, 18, 19, 20, 24, 25], "yy": [15, 18, 19, 20, 24, 25], "meshgrid": [15, 18, 19, 20], "contourf": 15, "edgecolor": [15, 18, 19, 20], "lw": [15, 20], "test_siz": 15, "lr": [15, 20, 30], "logisticregressionifittedlogisticregress": [15, 19, 28], "dt": [15, 19, 20], "entropi": 15, "decisiontreeclassifierifitteddecisiontreeclassifi": [15, 18], "veri": [15, 26, 27], "stabl": [15, 19, 23], "separ": 15, "dtlr": 15, "liblinear": 15, "fit_improve_algo": 15, "decisiontreelogisticregressionifitteddecisiontreelogisticregress": 15, "logisticregressionlogisticregress": [15, 30], "dtlr2": 15, "intercept_sort_alwai": 15, "ndepth": 15, "tree_depth_": 15, "val": 15, "depth": 15, "hasattr": [15, 23], "ob": [15, 16], "__class__": [15, 20], "__name__": [15, 20], "append": [15, 16, 19, 28], "622222": 15, "922222": 15, "633333": 15, "944444": 15, "random_set_simpl": 15, "rand": [15, 17, 19, 26], "int32": [15, 28], "2000": [15, 17], "dt8": 15, "sharei": 15, "decisiontre": 15, "nacc": 15, "2f": [15, 20, 25], "set_xlim": [15, 18, 19, 20], "set_ylim": [15, 18, 19, 20], "dtlr8": 15, "decisiontreelogreg": 15, "acc": 15, "1500": 15, "dtlri": 15, "733938": 15, "864951": 15, "631566": 15, "764758": 15, "abov": [15, 35], "1061": 15, "964473": 15, "563606": 15, "117224": 15, "150483": 15, "703": 15, "below": [15, 22], "358": 15, "085039": 15, "649570": 15, "383861": 15, "865644": 15, "439": 15, "964094": 15, "875640": 15, "163797": 15, "577774": 15, "151": 15, "373149": 15, "819189": 15, "711789": 15, "907672": 15, "288": 15, "501924": 15, "161122": 15, "108653": 15, "192794": 15, "draw_bord": [15, 18, 19], "incx": [15, 18, 19], "inci": [15, 18, 19], "linewidth": 15, "02": [15, 18, 19, 20, 31], "cmap": [15, 18, 19, 20, 23], "cm": [15, 18, 19, 20, 23], "tab20": [15, 18, 19], "pcolormesh": [15, 18, 19, 20], "dtl": 15, "n_nodes_": 15, "node_count": 15, "get_xaxi": 15, "set_vis": 15, "0it": 15, "1it": 15, "56it": 15, "2it": 15, "43it": 15, "3it": 15, "80it": 15, "4it": 15, "24it": 15, "5it": 15, "85it": 15, "6it": 15, "48it": 15, "98it": 15, "difficult": [15, 27, 28, 30], "random_set": 15, "minkowski": 15, "rotat": 15, "45": 15, "outsid": 15, "horizont": 15, "vertic": 15, "48": [15, 27], "226865": 15, "205017": 15, "401167": 15, "001728": 15, "748": 15, "543769": 15, "556728": 15, "386116": 15, "248029": 15, "376": 15, "666743": 15, "656455": 15, "215070": 15, "001971": 15, "372": 15, "484916": 15, "442535": 15, "099392": 15, "983454": 15, "752": 15, "219823": 15, "143683": 15, "610461": 15, "014381": 15, "364": 15, "784121": 15, "341406": 15, "953351": 15, "220115": 15, "388": 15, "995121": 15, "837341": 15, "296903": 15, "011262": 15, "decision_path": 15, "leaf": 15, "respons": 15, "82it": 15, "08it": 15, "79it": 15, "87it": 15, "13it": 15, "49it": 15, "22it": 15, "649": [15, 31], "plot_decision_tree_logreg": [15, 31], "real": 16, "discret": 16, "onnxruntim": 16, "inferencesess": 16, "pivot": 16, "pivot_t": 16, "skl2onnx": 16, "to_onnx": 16, "ext_test_cas": [16, 22, 27], "measure_tim": [16, 22], "083": 16, "real_acceler": 16, "158": 16, "get_acceler": 16, "ds_acceler": 16, "cuda": 16, "measur": 16, "verif": 16, "convers": 16, "10000": 16, "100000": 16, "float32": [16, 27], "repeat": [16, 22], "n_bin": [16, 20, 21], "ti": 16, "div_by_numb": 16, "onx": 16, "target_opset": 16, "sess": 16, "serializetostr": 16, "cpuexecutionprovid": 16, "ort": 16, "piv": 16, "07": 16, "67": [16, 34], "000003": 16, "000009": 16, "000082": 16, "000012": 16, "000094": 16, "000004": 16, "000016": 16, "000130": 16, "000112": 16, "000013": 16, "000095": 16, "000006": 16, "000017": 16, "000129": 16, "000011": 16, "000029": 16, "000122": 16, "000078": 16, "000292": 16, "000135": 16, "000091": 16, "000263": 16, "000643": 16, "000147": 16, "000816": 16, "000840": 16, "000181": 16, "000529": 16, "004545": 16, "001339": 16, "005261": 16, "nb": [16, 20], "nn_bin": 16, "logx": 16, "logi": 16, "778": [16, 31], "plot_digit": [16, 31], "rnd": [17, 28], "kmeansl1l2": 17, "euclidean": 17, "plot_clust": 17, "km_": 17, "lab": 17, "kml1": 17, "kmeansl1l2ifittedkmeansl1l2": 17, "58108112": 17, "52162673": 17, "33950775": 17, "5016112": 17, "kmeansifittedkmean": 17, "709": [17, 31], "plot_kmeans_l1": [17, 31], "partit": [18, 19], "wonder": 18, "share": 18, "19": [18, 25, 29], "And": 18, "nl": 18, "http": [18, 19, 21, 23, 27, 34], "sashat": [18, 19], "me": [18, 19], "colormaps_refer": [18, 19], "mesh": [18, 19, 20], "boundari": [18, 19], "set_xlabel": [18, 19, 20], "sepal": [18, 19, 20], "set_ylabel": [18, 19, 20], "650000095367432": 18, "4750000834465027": 18, "025000095367432": 18, "1250000596046448": 18, "237": [18, 31], "plot_leave_neighbor": [18, 31], "randomforestclassifi": 19, "classifierafterkmean": 19, "randint": 19, "mat": 19, "ym": 19, "cx": 19, "multi_class": 19, "multinomi": 19, "quit": [19, 22, 27], "clk": 19, "e_solv": 19, "e_multi_class": 19, "_logist": 19, "474": 19, "convergencewarn": [19, 23, 24, 28], "statu": 19, "NO": [19, 35], "limit": [19, 35], "shown": 19, "altern": 19, "n_iter_i": 19, "_check_optimize_result": 19, "c_algorithm": 19, "c_copy_x": 19, "c_init": 19, "c_max_it": 19, "c_n_cluster": 19, "c_n_init": 19, "c_random_st": 19, "c_tol": 19, "c_verbos": 19, "e_c": 19, "e_class_weight": 19, "e_dual": 19, "e_fit_intercept": 19, "e_intercept_sc": 19, "e_l1_ratio": 19, "e_max_it": 19, "e_n_job": 19, "e_penalti": 19, "e_random_st": 19, "e_tol": 19, "e_verbos": 19, "e_warm_start": 19, "classifierafterkmeansifittedclassifierafterkmean": 19, "17863281": 19, "93283087": 19, "98134995": 19, "21113966": 19, "cricl": 19, "700": 19, "sc": 19, "nb_cluster": 19, "5075": 19, "7150": 19, "8975": 19, "9350": 19, "9600": 19, "rf": 19, "randomforestclassifierifittedrandomforestclassifi": 19, "plot_logistic_regression_clust": [19, 31], "easier": 20, "concept": [20, 28], "seaborn": 20, "auc": 20, "roc_curv": 20, "piecewiseclassifi": 20, "pair": [20, 27], "set_xtick": [20, 23], "set_ytick": [20, 23], "logreg": 20, "most_frequ": 20, "piece4": 20, "backend": [20, 21], "sequentialbackend": [20, 21], "concurr": [20, 21], "worker": [20, 21], "done": [20, 21, 26], "out": [20, 21, 27, 35], "finish": [20, 21], "piecewiseclassifierifittedpiecewiseclassifi": 20, "kbinsdiscretizerkbinsdiscret": [20, 21], "dummyclassifierdummyclassifi": 20, "transform_bin": [20, 21], "set_index": 20, "scatterplot": 20, "hue": 20, "palett": 20, "set1": [20, 23], "marker": 20, "lib": [20, 26], "python3": [20, 26], "site": [20, 26], "_oldcor": [20, 26], "1498": [20, 26], "is_categorical_dtyp": [20, 26], "isinst": [20, 26], "categoricaldtyp": [20, 26], "pd": [20, 26], "four": 20, "frequent": 20, "n4": [20, 21], "piece9": 20, "n9": 20, "roc": 20, "curv": 20, "plot_roc_curv": 20, "bgrcmyk": 20, "ic": 20, "fpr": 20, "tpr": 20, "roc_auc": 20, "y_score": 20, "_": [20, 21, 22, 23, 27, 30, 34], "navi": 20, "linestyl": 20, "plotnam": 20, "join": [20, 27], "p4": 20, "p9": 20, "piecet": 20, "decisiontreeclassifierdecisiontreeclassifi": 20, "n15": 20, "798": [20, 31], "plot_piecewise_classif": [20, 31], "illustr": 21, "toi": [21, 22], "npr": [21, 22], "piecewiseregressorifittedpiecewiseregressor": 21, "decisiontreeregressordecisiontreeregressor": [21, 26], "linearregressionlinearregress": [21, 26, 28, 30], "39102121": 21, "85962563": 21, "50096805": 21, "36058713": 21, "51352173": 21, "n2": 21, "0x7fed8cf7b4c0": 21, "0x7fee76d83ee0": 21, "0x7fed7bf87040": 21, "0x7fed7be22ec0": 21, "enforc": 21, "despit": 21, "fast": [21, 22], "2046": 21, "50it": 21, "dummyregressordummyregressor": 21, "0x7fed7beb32e0": 21, "m5p": [21, 22], "co": [21, 22], "com": [21, 27, 34], "13106": 21, "pull": 21, "13732": 21, "ankonzoid": 21, "learningx": 21, "master": 21, "advanced_ml": 21, "model_tre": 21, "3e": 21, "934": [21, 31], "plot_piecewise_linear_regress": [21, 31], "coupl": [22, 27, 30], "possibl": [22, 26, 27], "tutori": [22, 34], "extens": 22, "piecewisetreeregressor": 22, "simpleregressorcriterion": 22, "simpleregressorcriterionfast": 22, "decisiontreeregressorifitteddecisiontreeregressor": 22, "40429511": 22, "56609328": 22, "40562235": 22, "3266729": 22, "0x7fed7bf4c820": 22, "model2": 22, "lt": [22, 28], "0x563fc187d340": 22, "gt": [22, 28], "38186296": 22, "52156596": 22, "15224284": 22, "nwith": 22, "0x7fed7bff6e30": 22, "realli": 22, "meant": 22, "bascial": 22, "becaus": 22, "evalu": [22, 23, 28], "impur": 22, "reduct": 22, "under": 22, "being": 22, "global": 22, "0010175536000024293": 22, "0001333961398820299": 22, "min_exec": 22, "0009384960000170395": 22, "max_exec": 22, "0014102120000461583": 22, "010175536000024294": 22, "context_s": 22, "1176": 22, "warmup_tim": 22, "0025584999966667965": 22, "0037020995999919254": 22, "122806822764433e": 22, "00358635199998389": 22, "0038612740000826306": 22, "03702099599991925": 22, "0037012000029790215": 22, "cost": 22, "lot": [22, 30], "_mse": 22, "cut": 22, "betwe": 22, "start": 22, "ctypedef": 22, "float64_t": 22, "cdef": 22, "void": 22, "_mean": 22, "size_t": 22, "nogil": 22, "sample_wi": 22, "sample_w": 22, "squ": 22, "sample_i": 22, "rewrot": 22, "my": [22, 28], "closer": 22, "demand": 22, "sample_wy_left": 22, "side": 22, "lower": 22, "disappear": 22, "sample_w_left": 22, "sample_wy2_left": 22, "formula": [22, 26], "true_mean": 22, "model3": 22, "0x7fed7ba9ba60": 22, "0007811398000194458": 22, "59697753379962e": 22, "0007485600000654813": 22, "0008361899999727029": 22, "007811398000194458": 22, "0011827999987872317": 22, "bigger": [22, 26], "x_train3": 22, "y_train3": 22, "hstack": [22, 24, 25], "750": 22, "2250": 22, "0018330712000170022": 22, "8489666644657162e": 22, "0017816940000921022": 22, "0018643219998921267": 22, "018330712000170023": 22, "0020377999971969984": 22, "reinstanci": 22, "001487626200017985": 22, "773119843468544e": 22, "0014684660000784788": 22, "0015218340000137686": 22, "01487626200017985": 22, "0015787000011187047": 22, "almost": [22, 25, 28], "magnitud": 22, "investig": 22, "r_1": 22, "r_2": 22, "approxm": 22, "beta": 22, "yet": [22, 23, 24, 36], "kept": 22, "betas_": 22, "leaves_mapping_": 22, "769": [22, 31], "plot_piecewise_linear_regression_criterion": [22, 31], "afterward": 23, "saw": 23, "handwritten": 23, "isomap": 23, "offsetbox": 23, "kneighborsregressor": 23, "load_digit": 23, "xd": 23, "yd": 23, "1083": 23, "imgs_train": 23, "imgs_test": 23, "pca": 23, "x_train_tsn": 23, "812": 23, "plot_embed": 23, "xp": 23, "fontdict": 23, "bold": 23, "annotationbbox": 23, "thumbnail": 23, "shown_imag": 23, "dist": 23, "4e": 23, "don": 23, "too": 23, "r_": 23, "imagebox": 23, "offsetimag": 23, "gray_r": 23, "add_artist": 23, "ptsne": 23, "_multilayer_perceptron": [23, 24], "691": [23, 24], "hasn": [23, 24], "predictabletsneifittedpredictabletsn": 23, "mlpregressormlpregressor": 23, "tsnetsn": 23, "x_train_tsne2": 23, "x_test_tsne2": 23, "loss": 23, "015498107687307933": 23, "mlpregressorifittedmlpregressor": [23, 24], "ptsne_knn": 23, "kneighborsregressorkneighborsregressor": 23, "standardscalerstandardscal": [23, 30], "nstandardscal": 23, "seem": [23, 28], "0036627657": 23, "744": [23, 31], "plot_predictable_tsn": [23, 31], "_backprop": 24, "eps1": [24, 25], "900": [24, 25], "eps2": [24, 25, 26], "ep": [24, 25, 26], "clq": [24, 25, 34], "quantilemlpregressorifittedquantilemlpregressor": 24, "859502": 24, "498650": 24, "867067": 24, "465516": 24, "092882": 24, "911244": 24, "448620": 24, "860464": 24, "497882": 24, "267915": 24, "852265": 24, "357752": 24, "993727": 24, "966466": 24, "186061": 24, "820939": 24, "737236": 24, "058905": 24, "549762": 24, "115811": 24, "y1": [24, 25], "y2": [24, 25, 28], "0x7fee78f877f0": 24, "451": [24, 31], "plot_quantile_mlpregress": [24, 31], "linearregressionifittedlinearregress": [25, 28], "226103": 25, "354136": 25, "810814": 25, "382988": 25, "561828": 25, "499410": 25, "978088": 25, "521937": 25, "730657": 25, "103871": 25, "565087": 25, "094691": 25, "552881": 25, "430082": 25, "946982": 25, "491585": 25, "369632": 25, "870421": 25, "309847": 25, "869912": 25, "0x7fee76db9300": 25, "clearli": 25, "less": [25, 27], "sensibl": 25, "extrema": 25, "oberserv": 25, "835": 25, "7433085753823": 25, "541": 25, "6462544523913": 25, "490": 25, "12149584807094": 25, "488": 25, "38545568231723": 25, "487": 25, "73403374126303": 25, "2399890513258": 25, "486": 25, "87120486499697": 25, "56688076275424": 25, "1633998393787": 25, "485": 25, "9433740268136": 25, "82860372441843": 25, "76584592891413": 25, "7262314864904": 25, "6949812700002": 25, "66430562971664": 25, "6410981708784": 25, "6283769087981": 25, "61807358943935": 25, "6059412673913": 25, "5963091132484": 25, "quantilelinearregressionifittedquantilelinearregress": 25, "48559630911324847": 25, "1200": 25, "qu": 25, "q": 25, "0x7feea84352d0": 25, "382": [25, 31], "plot_quantile_regress": [25, 31], "epsilon_1": 26, "eta": 26, "epsilon_2": 26, "law": 26, "sim": 26, "mathcal": 26, "alwai": [26, 28], "binomi": 26, "randn": [26, 28, 30], "sn": 26, "gaussian_process": 26, "kernel": 26, "rbf": 26, "constantkernel": 26, "whitekernel": 26, "intervalregressor": 26, "line2d": 26, "0x7feeb960d7b0": 26, "lin": 26, "intervalregressorifittedintervalregressor": 26, "sorted_x": 26, "bootstrapped_pr": 26, "min_pr": 26, "max_pr": 26, "0x7feeccc0ab90": 26, "lin2": 26, "lin3": 26, "pred2": 26, "bootstrapped_pred2": 26, "min_pred2": 26, "max_pred2": 26, "pred3": 26, "bootstrapped_pred3": 26, "min_pred3": 26, "max_pred3": 26, "0x7feecd3f9060": 26, "pred_tre": 26, "b_pred_tre": 26, "min_pred_tre": 26, "max_pred_tre": 26, "0x7fed7ae6fca0": 26, "forest": 26, "q1": 26, "q2": 26, "0x7fed79b25b40": 26, "med": 26, "q0": 26, "0x7fed79a870a0": 26, "theorit": 26, "df_train": 26, "jointplot": 26, "reg": [26, 28], "ax_joint": 26, "ro": 26, "1119": 26, "use_inf_as_na": 26, "inf": 26, "oper": 26, "option_context": 26, "0x7feeb9669f60": 26, "gaussian": 26, "basic": 26, "introductori": 26, "1e3": 26, "1e2": 26, "gp": 26, "n_restarts_optim": 26, "length_scal": 26, "noise_level": 26, "gaussianprocessregressorifittedgaussianprocessregressor": 26, "return_std": 26, "interval": 26, "0x7feeccc56f80": 26, "894": [26, 31], "plot_regression_confidence_interv": [26, 31], "pixel": 27, "level": 27, "paper": 27, "squeezenet": 27, "alexnet": 27, "50x": 27, "fewer": 27, "5mb": 27, "torchvis": 27, "dataload": 27, "concatdataset": 27, "unzip_fil": 27, "squeezenet1_0_weight": 27, "squeezenet1_0": 27, "imagenet1k_v1": 27, "sequenti": 27, "conv2d": 27, "kernel_s": 27, "stride": 27, "maxpool2d": 27, "pad": 27, "dilat": 27, "ceil_mod": 27, "fire": 27, "squeez": 27, "squeeze_activ": 27, "expand1x1": 27, "expand1x1_activ": 27, "expand3x3": 27, "expand3x3_activ": 27, "128": 27, "32": [27, 29], "256": 27, "192": 27, "384": 27, "512": 27, "dropout": 27, "adaptiveavgpool2d": 27, "output_s": 27, "userprofil": 27, "checkpoint": 27, "re": 27, "listdir": 27, "forward": 27, "backward": 27, "propag": 27, "backpropag": 27, "known": [27, 28], "dyanmic": 27, "pixabai": 27, "simag": 27, "makedir": 27, "sdpython": [27, 34], "ref": 27, "_doc": 27, "dog": 27, "where_to": 27, "filenotfounderror": 27, "unzip": 27, "1151519__480": 27, "jpg": 27, "resiz": 27, "224": 27, "essay": 27, "seulement": 27, "centercrop": 27, "totensor": 27, "imagefold": 27, "datapoint": 27, "locat": 27, "standardtransform": 27, "interpol": 27, "bilinear": 27, "max_siz": 27, "antialia": 27, "num_work": 27, "0x7fed7a75fca0": 27, "img_seq": 27, "tensor": 27, "imshow": 27, "off": [27, 28], "223": 27, "randomrot": 27, "expand": 27, "sampler": 27, "concaten": 27, "loader": 27, "trans1": 27, "trans2": 27, "grayscal": 27, "num_output_channel": 27, "imgs1": 27, "imgs2": 27, "abl": 27, "competit": 27, "imagenet": 27, "But": [27, 28], "slightli": 27, "particular": [27, 35], "daark": 27, "dark": 27, "224x224": 27, "ingest": 27, "Its": 27, "detach": 27, "43957": 27, "364344": 27, "354038": 27, "68477": 27, "249073": 27, "34079": 27, "256328": 27, "859496": 27, "423091": 27, "942653": 27, "all_output": 27, "nearestneighborsifittednearestneighbor": 27, "one_output": 27, "00389481": 27, "58618546": 27, "68": 27, "14788055": 27, "99064636": 27, "19816589": 27, "disp": 27, "2083492__480": 27, "1765910__480": 27, "2603300__480": 27, "2917592__480": 27, "2684073__480": 27, "exactli": 27, "rewrit": 27, "captur": 27, "pretrain": 27, "been": [27, 29], "leverag": 27, "million": 27, "imagin": 27, "pairwis": 27, "img_i": 27, "img_j": 27, "partial": 27, "893": [27, 31], "plot_search_images_torch": [27, 31], "pickl": 28, "picklingerror": 28, "_test": 28, "ignore_warn": 28, "transformedtargetclassifier2": 28, "rndn": 28, "ab": 28, "y_tran": 28, "regr_tran": 28, "func": 28, "inverse_func": 28, "transformedtargetregressorifittedtransformedtargetregressor": 28, "thing": [28, 29], "regr_trans2": 28, "transformedtargetregressor2ifittedtransformedtargetregressor2": 28, "by1": 28, "dump": 28, "by2": 28, "tr1": 28, "tr2": 28, "honest": 28, "did": 28, "pickabl": 28, "regr_trans3": 28, "0x7feec265c790": 28, "lookup": 28, "__main__": 28, "One": 28, "question": 28, "student": 28, "8752883470101485": 28, "8325991189427313": 28, "valueerror": 28, "mix": [28, 30], "multiclass": 28, "littl": [28, 29], "bit": 28, "perf_reg": 28, "perf_clr": 28, "classificaton": 28, "sai": 28, "know": [28, 29], "round": [28, 30], "float2int": 28, "fct2float2int": 28, "evaluation2": 28, "acc_reg": 28, "acc_clr": 28, "rnd2": 28, "perf_reg2": 28, "perf_clr2": 28, "acc_reg2": 28, "acc_clr2": 28, "indecis": 28, "As": [28, 29], "strang": 28, "win": 28, "tini": 28, "immun": 28, "9609053497942387": 28, "y_train_permut": 28, "y_test_permut": 28, "regp": 28, "logp": 28, "43952802359882015": 28, "9626352015732547": 28, "luck": 28, "regpt": 28, "logpt": 28, "reg_perm": 28, "reg_scor": 28, "log_perm": 28, "log_scor": 28, "000000": 28, "960905": 28, "061728": 28, "759259": 28, "521": [28, 31], "plot_sklearn_transformed_target": [28, 31], "storag": 29, "ambigu": 29, "traceablecountvector": 29, "traceabletfidfvector": 29, "countvectorizerifittedcountvector": 29, "traceablecountvectorizerifittedtraceablecountvector": 29, "exact": 29, "explicit": 29, "tfidfvectorizerifittedtfidfvector": 29, "32940523": 29, "25970687": 29, "24528087": 29, "19338226": 29, "25453384": 29, "3228439": 29, "fir": 29, "cume": 29, "nt": 29, "docu": 29, "ment": 29, "hi": 29, "traceabletfidfvectorizerifittedtraceabletfidfvector": 29, "30th": 29, "fact": 29, "express": [29, 35], "insight": [29, 34], "easili": 29, "028": [29, 31], "plot_traceable_ngrams_tfidf": [29, 31], "vizual": 30, "pil": 30, "sphinx_runpython": 30, "runpython": 30, "run_cmd": 30, "logisticregressioninot": 30, "fittedlogisticregress": 30, "digraph": 30, "sch0": 30, "f0": 30, "f1": 30, "f2": 30, "f3": 30, "record": 30, "fontsiz": 30, "node1": 30, "union": 30, "box": 30, "fill": 30, "cyan": 30, "sch1": 30, "node2": 30, "yellow": 30, "sch2": 30, "predictedlabel": 30, "dot_fil": 30, "write": 30, "cmd": 30, "tpng": 30, "wait": 30, "pngimageplugin": 30, "pngimagefil": 30, "rgba": 30, "200x351": 30, "0x7fed7aceb550": 30, "instroduc": 30, "taken": 30, "sibsp": 30, "parch": 30, "ticket": 30, "cabin": 30, "boat": 30, "bodi": 30, "dest": 30, "pipelineinot": 30, "fittedpipelin": 30, "columntransformercolumntransform": 30, "simpleimputersimpleimput": 30, "onehotencoderonehotencod": 30, "simplifi": 30, "graph2": 30, "591x787": 30, "0x7fed7ace8a60": 30, "scaler2": 30, "scaler3": 30, "graph3": 30, "rgb": 30, "306x569": 30, "0x7fed7acead10": 30, "scaler1": 30, "transformer_list": 30, "pipelineifittedpipelin": 30, "featureunionfeatureunion": 30, "minmaxscalerminmaxscal": 30, "_debug": 30, "baseestimatordebuginform": 30, "94327916": 30, "83009631": 30, "28141013": 30, "12719898": 30, "2762825": 30, "40392169": 30, "44070616": 30, "73411973": 30, "20499451": 30, "21217604": 30, "33528123": 30, "66585633": 30, "24197224": 30, "11465946": 30, "17971264": 30, "80838722": 30, "22547855": 30, "9416219": 30, "58399645": 30, "22639797": 30, "97041703": 30, "1955906": 30, "10650412": 30, "54463857": 30, "5669488": 30, "67810961": 30, "86875663": 30, "29897394": 30, "1728293": 30, "31771283": 30, "16738017": 30, "12300381": 30, "15806637": 30, "11453355": 30, "53576524": 30, "6693988": 30, "01275546": 30, "5115267": 30, "43543961": 30, "28652927": 30, "84133064": 30, "97900498": 30, "05448639": 30, "37714387": 30, "behav": 30, "var": 30, "7236891": 30, "119043": 30, "42818803": 30, "26750008": 30, "40594461": 30, "53035845": 30, "30025918": 30, "06824208": 30, "98419743": 30, "44279924": 30, "203": [30, 31], "plot_visualize_pipelin": [30, 31], "763": 31, "auto_exampl": 31, "mb": 31, "entri": 32, "docstr": 32, "variou": 34, "help": 34, "modif": 34, "short": 34, "faq": 34, "load_diabet": 34, "759": [], "301": 34, "117": [], "464": 34, "043": [], "385": 34, "354": [], "805": 34, "267": [], "425": 34, "316": [], "851": [], "738": 34, "518": [], "35": 34, "686": [], "239": 34, "816": [], "519": 34, "846": [], "324": 34, "792": 34, "176": [], "476": 34, "739": [], "177": 34, "063": [], "751": 34, "274": [], "627": [], "__version__": 34, "copyright": 35, "xavier": 35, "dupr\u00e9": 35, "permiss": 35, "herebi": 35, "grant": 35, "free": 35, "charg": 35, "person": 35, "softwar": 35, "restrict": 35, "merg": 35, "publish": 35, "distribut": 35, "sublicens": 35, "sell": 35, "permit": 35, "whom": 35, "furnish": 35, "subject": 35, "condit": 35, "notic": 35, "shall": 35, "substanti": 35, "portion": 35, "THE": 35, "AS": 35, "warranti": 35, "OF": 35, "OR": 35, "BUT": 35, "NOT": 35, "TO": 35, "merchant": 35, "FOR": 35, "AND": 35, "noninfring": 35, "IN": 35, "event": 35, "author": 35, "holder": 35, "BE": 35, "liabl": 35, "claim": 35, "damag": 35, "liabil": 35, "action": 35, "contract": 35, "tort": 35, "aris": 35, "connect": 35, "WITH": 35, "readi": 36, "75895899": 34, "11702117": 34, "04300247": 34, "35409612": 34, "26720203": 34, "19307405": 34, "3164599": 34, "85095311": 34, "51804393": 34, "6856007": 34, "0098663": 34, "81564367": 34, "84592005": 34, "3846455": 34, "17563855": 34, "73902101": 34, "04326794": 34, "06323767": 34, "27369956": 34, "62669218": 34}, "objects": {"mlinsights.helpers.parameters": [[3, 0, 1, "", "format_function_call"], [3, 0, 1, "", "format_parameters"], [3, 0, 1, "", "format_value"]], "mlinsights.helpers.pipeline": [[3, 0, 1, "", "alter_pipeline_for_debugging"], [3, 0, 1, "", "enumerate_pipeline_models"]], "mlinsights.metrics.correlations": [[5, 0, 1, "", "non_linear_correlations"]], "mlinsights.mlbatch.cache_model": [[1, 1, 1, "", "MLCache"]], "mlinsights.mlbatch.cache_model.MLCache": [[1, 2, 1, "", "as_key"], [1, 2, 1, "", "cache"], [1, 2, 1, "", "count"], [1, 2, 1, "", "create_cache"], [1, 2, 1, "", "get"], [1, 2, 1, "", "get_cache"], [1, 2, 1, "", "has_cache"], [1, 2, 1, "", "items"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "remove_cache"]], "mlinsights.mlbatch.pipeline_cache": [[1, 1, 1, "", "PipelineCache"]], "mlinsights.mlbatch.pipeline_cache.PipelineCache": [[1, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel._kmeans_constraint_": [[6, 0, 1, "", "_switch_clusters"]], "mlinsights.mlmodel.anmf_predictor": [[6, 1, 1, "", "ApproximateNMFPredictor"]], "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.categories_to_integers": [[6, 1, 1, "", "CategoriesToIntegers"]], "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "fit_transform"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.classification_kmeans": [[6, 1, 1, "", "ClassifierAfterKMeans"]], "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans": [[6, 2, 1, "", "decision_function"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_proba"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_params"], [6, 2, 1, "", "set_score_request"], [6, 2, 1, "", "transform_features"]], "mlinsights.mlmodel.direct_blas_lapack": [[2, 0, 1, "", "dgelss"]], "mlinsights.mlmodel.extended_features": [[6, 1, 1, "", "ExtendedFeatures"]], "mlinsights.mlmodel.extended_features.ExtendedFeatures": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_feature_names_out"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.interval_regressor": [[6, 1, 1, "", "IntervalRegressor"]], "mlinsights.mlmodel.interval_regressor.IntervalRegressor": [[6, 2, 1, "", "fit"], [6, 3, 1, "", "n_estimators_"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_all"], [6, 2, 1, "", "predict_sorted"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.kmeans_constraint": [[6, 1, 1, "", "ConstraintKMeans"]], "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans": [[6, 2, 1, "", "cluster_edges"], [6, 2, 1, "", "constraint_kmeans"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.kmeans_l1": [[6, 1, 1, "", "KMeansL1L2"]], "mlinsights.mlmodel.kmeans_l1.KMeansL1L2": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_predict_request"], [6, 2, 1, "", "set_score_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.ml_featurizer": [[6, 0, 1, "", "model_featurizer"]], "mlinsights.mlmodel.piecewise_estimator": [[6, 1, 1, "", "PiecewiseClassifier"], [6, 1, 1, "", "PiecewiseRegressor"]], "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier": [[6, 2, 1, "", "decision_function"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_proba"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor": [[6, 2, 1, "", "predict"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.piecewise_tree_regression": [[7, 1, 1, "", "PiecewiseTreeRegressor"]], "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor": [[7, 2, 1, "", "fit"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "predict_leaves"], [7, 2, 1, "", "set_fit_request"], [7, 2, 1, "", "set_predict_request"], [7, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.piecewise_tree_regression_criterion": [[7, 1, 1, "", "SimpleRegressorCriterion"]], "mlinsights.mlmodel.piecewise_tree_regression_criterion.SimpleRegressorCriterion": [[7, 2, 1, "", "printd"]], "mlinsights.mlmodel.piecewise_tree_regression_criterion_fast": [[7, 1, 1, "", "SimpleRegressorCriterionFast"]], "mlinsights.mlmodel.predictable_tsne": [[6, 1, 1, "", "PredictableTSNE"]], "mlinsights.mlmodel.predictable_tsne.PredictableTSNE": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.quantile_mlpregressor": [[6, 1, 1, "", "CustomizedMultilayerPerceptron"], [6, 1, 1, "", "QuantileMLPRegressor"], [6, 0, 1, "", "absolute_loss"]], "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor": [[6, 2, 1, "", "predict"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.quantile_regression": [[6, 1, 1, "", "QuantileLinearRegression"]], "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.sklearn_text": [[6, 1, 1, "", "NGramsMixin"], [6, 1, 1, "", "TraceableCountVectorizer"], [6, 1, 1, "", "TraceableTfidfVectorizer"]], "mlinsights.mlmodel.sklearn_text.TraceableCountVectorizer": [[6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_transform_request"]], "mlinsights.mlmodel.sklearn_text.TraceableTfidfVectorizer": [[6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_transform_request"]], "mlinsights.mlmodel.sklearn_transform_inv": [[6, 1, 1, "", "BaseReciprocalTransformer"]], "mlinsights.mlmodel.sklearn_transform_inv.BaseReciprocalTransformer": [[6, 2, 1, "", "get_fct_inv"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.sklearn_transform_inv_fct": [[6, 1, 1, "", "FunctionReciprocalTransformer"], [6, 1, 1, "", "PermutationReciprocalTransformer"]], "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer": [[6, 2, 1, "", "available_fcts"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "get_fct_inv"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_fct_inv"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.target_predictors": [[6, 1, 1, "", "TransformedTargetClassifier2"], [6, 1, 1, "", "TransformedTargetRegressor2"]], "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2": [[6, 3, 1, "", "classes_"], [6, 2, 1, "", "decision_function"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_proba"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.transfer_transformer": [[6, 1, 1, "", "TransferTransformer"]], "mlinsights.mlmodel.transfer_transformer.TransferTransformer": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "transform"]], "mlinsights.mltree.tree_digitize": [[12, 0, 1, "", "digitize2tree"]], "mlinsights.mltree.tree_structure": [[12, 0, 1, "", "predict_leaves"], [12, 0, 1, "", "tree_find_common_node"], [12, 0, 1, "", "tree_find_path_to_root"], [12, 0, 1, "", "tree_leave_index"], [12, 0, 1, "", "tree_leave_neighbors"], [12, 0, 1, "", "tree_node_parents"], [12, 0, 1, "", "tree_node_range"]], "mlinsights.plotting.gallery": [[8, 0, 1, "", "plot_gallery_images"]], "mlinsights.plotting.visualize": [[8, 0, 1, "", "pipeline2dot"], [8, 0, 1, "", "pipeline2str"]], "mlinsights.search_rank.search_engine_predictions": [[9, 1, 1, "", "SearchEnginePredictions"]], "mlinsights.search_rank.search_engine_predictions.SearchEnginePredictions": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "kneighbors"]], "mlinsights.search_rank.search_engine_predictions_images": [[9, 1, 1, "", "SearchEnginePredictionImages"]], "mlinsights.search_rank.search_engine_predictions_images.SearchEnginePredictionImages": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "kneighbors"]], "mlinsights.search_rank.search_engine_vectors": [[9, 1, 1, "", "SearchEngineVectors"]], "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "kneighbors"], [9, 2, 1, "", "read_zip"], [9, 2, 1, "", "to_zip"]], "mlinsights.sklapi.sklearn_base": [[10, 1, 1, "", "SkBase"]], "mlinsights.sklapi.sklearn_base.SkBase": [[10, 2, 1, "", "compare_params"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "set_params"], [10, 2, 1, "", "test_equality"]], "mlinsights.sklapi.sklearn_base_classifier": [[10, 1, 1, "", "SkBaseClassifier"]], "mlinsights.sklapi.sklearn_base_classifier.SkBaseClassifier": [[10, 2, 1, "", "predict_proba"], [10, 2, 1, "", "score"]], "mlinsights.sklapi.sklearn_base_learner": [[10, 1, 1, "", "SkBaseLearner"]], "mlinsights.sklapi.sklearn_base_learner.SkBaseLearner": [[10, 2, 1, "", "decision_function"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "score"]], "mlinsights.sklapi.sklearn_base_regressor": [[10, 1, 1, "", "SkBaseRegressor"]], "mlinsights.sklapi.sklearn_base_regressor.SkBaseRegressor": [[10, 2, 1, "", "score"]], "mlinsights.sklapi.sklearn_base_transform": [[10, 1, 1, "", "SkBaseTransform"]], "mlinsights.sklapi.sklearn_base_transform.SkBaseTransform": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "fit_transform"], [10, 2, 1, "", "transform"]], "mlinsights.sklapi.sklearn_base_transform_learner": [[10, 1, 1, "", "SkBaseTransformLearner"]], "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "set_params"], [10, 2, 1, "", "transform"]], "mlinsights.sklapi.sklearn_base_transform_stacking": [[10, 1, 1, "", "SkBaseTransformStacking"]], "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "set_params"], [10, 2, 1, "", "transform"]], "mlinsights.sklapi.sklearn_parameters": [[10, 1, 1, "", "SkException"], [10, 1, 1, "", "SkLearnParameters"]], "mlinsights.sklapi.sklearn_parameters.SkLearnParameters": [[10, 3, 1, "", "Keys"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "validate"]], "mlinsights.timeseries.agg": [[11, 0, 1, "", "aggregate_timeseries"]], "mlinsights.timeseries.ar": [[11, 1, 1, "", "ARTimeSeriesRegressor"]], "mlinsights.timeseries.ar.ARTimeSeriesRegressor": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "set_fit_request"], [11, 2, 1, "", "set_score_request"]], "mlinsights.timeseries.base": [[11, 1, 1, "", "BaseReciprocalTimeSeriesTransformer"], [11, 1, 1, "", "BaseTimeSeries"]], "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "get_fct_inv"], [11, 2, 1, "", "set_fit_request"], [11, 2, 1, "", "set_transform_request"], [11, 2, 1, "", "transform"]], "mlinsights.timeseries.base.BaseTimeSeries": [[11, 2, 1, "", "has_preprocessing"]], "mlinsights.timeseries.datasets": [[11, 0, 1, "", "artificial_data"]], "mlinsights.timeseries.dummies": [[11, 1, 1, "", "DummyTimeSeriesRegressor"]], "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "set_fit_request"], [11, 2, 1, "", "set_score_request"]], "mlinsights.timeseries.metrics": [[11, 0, 1, "", "ts_mape"]], "mlinsights.timeseries.patterns": [[11, 0, 1, "", "find_ts_group_pattern"]], "mlinsights.timeseries.plotting": [[11, 0, 1, "", "plot_week_timeseries"]], "mlinsights.timeseries.utils": [[11, 0, 1, "", "build_ts_X_y"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"chang": 0, "log": 0, "0": 0, "5": 0, "3": 0, "649": 0, "2022": 0, "07": 0, "22": 0, "2": 0, "35mb": 0, "631": 0, "05": 0, "19": 0, "21mb": 0, "614": 0, "2021": 0, "10": 0, "02": 0, "1": 0, "73mb": 0, "606": 0, "08": 0, "mlinsight": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 29, 34], "mlbatch": 1, "mlcach": 1, "pipelinecach": 1, "paramet": [1, 6, 7, 11], "return": [1, 6, 7, 11], "mlmodel": [2, 6, 7], "direct_blas_lapack": 2, "lapack": 2, "us": [2, 10, 32], "function": [2, 19], "dgelss": 2, "helper": [3, 6], "format": 3, "pipelin": [3, 10, 30, 32], "api": [4, 6], "metric": 5, "comput": [5, 22, 30, 31], "non": 5, "linear": [5, 21, 22, 26], "correl": 5, "model_featur": 6, "cluster": [6, 17, 19], "constraintkmean": 6, "kmeansl1l2": 6, "trainer": 6, "classifierafterkmean": 6, "customizedmultilayerperceptron": 6, "intervalregressor": 6, "approximatenmfpredictor": 6, "piecewiseclassifi": 6, "piecewiseregressor": 6, "quantilemlpregressor": 6, "quantilelinearregress": 6, "transformedtargetclassifier2": 6, "transformedtargetregressor2": [6, 28], "transform": [6, 28], "ngramsmixin": 6, "basereciprocaltransform": 6, "categoriestointeg": [6, 32], "dictvector": [6, 32], "extendedfeatur": 6, "functionreciprocaltransform": 6, "permutationreciprocaltransform": 6, "predictabletsn": 6, "transfertransform": 6, "traceablecountvector": 6, "traceabletfidfvector": 6, "explor": 6, "c": 6, "loss": 6, "hidden": 6, "_switch_clust": 6, "tree": [7, 12, 15, 16, 18, 21, 26], "note": 7, "about": 7, "potentiel": 7, "issu": 7, "estim": 7, "piecewisetreeregressor": 7, "criterion": [7, 22], "simpleregressorcriterion": 7, "simpleregressorcriterionfast": 7, "linearregressorcriterion": 7, "plot": [8, 11, 16, 19], "search_rank": 9, "searchenginevector": 9, "searchenginepredict": 9, "searchenginepredictionimag": 9, "sklapi": 10, "skbase": 10, "skbaseclassifi": 10, "skexcept": 10, "skbaselearn": 10, "sklearnparamet": 10, "skbaseregressor": 10, "skbasetransform": 10, "skbasetransformlearn": 10, "two": [10, 32], "learner": [10, 32], "same": [10, 32], "skbasetransformstack": 10, "stack": [10, 32], "de": [10, 32], "plusieur": [10, 32], "dan": [10, 32], "un": [10, 32], "scikit": [10, 20, 21, 29, 30, 32, 34], "learn": [10, 20, 21, 27, 29, 30, 32, 34], "timeseri": 11, "dataset": [11, 15, 17, 19, 20], "experiment": 11, "manipul": 11, "predict": [11, 23], "basereciprocaltimeseriestransform": 11, "build_ts_x_i": 11, "basetimeseri": 11, "dummytimeseriesregressor": 11, "artimeseriesregressor": 11, "ts_mape": 11, "dig": 12, "structur": 12, "experi": 12, "exercis": 12, "exampl": [13, 15, 16, 25, 29, 30, 32], "galleri": 13, "constraint": 14, "kmean": [14, 17], "data": [14, 21, 22, 26], "standard": 14, "decis": [15, 18, 21, 26], "logist": [15, 19, 20], "regress": [15, 19, 20, 21, 22, 25, 26], "iri": [15, 18, 20], "decisiontreelogisticregress": 15, "A": [15, 18, 19], "first": [15, 20], "anoth": [15, 23, 28], "design": 15, "fail": 15, "leav": [15, 18], "zone": 15, "numpi": 16, "digit": 16, "simpl": [16, 17, 18, 25, 30], "benchmark": 16, "norm": 17, "l1": 17, "classic": [17, 20], "when": 17, "ar": 17, "complet": 17, "differ": 17, "close": 18, "On": 18, "logisticregress": 19, "dummi": 19, "convex": 19, "One": 19, "classif": [19, 20], "2d": 19, "k": 19, "mean": 19, "variat": 19, "random": 19, "forest": 19, "piecewis": [20, 21, 22], "predictor": [20, 21, 23], "kbinsdiscret": 21, "next": [21, 22], "custom": 22, "decisiontreeregressor": 22, "adapt": 22, "implement": 22, "time": [22, 31], "better": 22, "t": 23, "sne": 23, "mnist": 23, "repeat": 23, "quantil": [24, 25, 26], "mlpregressor": 24, "variou": 25, "confid": 26, "interv": 26, "some": 26, "higher": 26, "With": 26, "seaborn": 26, "gaussianprocessregressor": 26, "search": 27, "imag": 27, "deep": 27, "torch": 27, "get": 27, "pre": 27, "train": 27, "model": [27, 30], "raw": 27, "among": 27, "The": [27, 28], "idea": 27, "engin": 27, "go": 27, "further": 27, "target": 28, "transformedtargetregressor": 28, "why": 28, "classifi": 28, "class": 28, "permut": 28, "traceabl": 29, "n": 29, "gram": 29, "tf": 29, "idf": 29, "countvector": 29, "version": [29, 34], "funni": 29, "tfidfvector": 29, "visual": 30, "complex": 30, "featureunion": 30, "intermedi": 30, "output": 30, "short": 32, "faq": 33, "tricki": 34, "document": 34, "more": 34, "licens": 35, "tutori": 36, "older": 34}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"mlinsights.mlbatch": [[1, "mlinsights-mlbatch"]], "MLCache": [[1, "mlcache"]], "PipelineCache": [[1, "pipelinecache"]], "Parameters": [[1, "parameters"], [6, "parameters"], [6, "id1"], [6, "id3"], [6, "id5"], [6, "id7"], [6, "id9"], [6, "id11"], [6, "id13"], [6, "id15"], [6, "id17"], [6, "id19"], [6, "id21"], [6, "id23"], [6, "id25"], [6, "id27"], [6, "id29"], [6, "id31"], [6, "id33"], [6, "id35"], [6, "id37"], [6, "id39"], [6, "id41"], [6, "id43"], [6, "id45"], [6, "id47"], [6, "id50"], [6, "id52"], [6, "id55"], [6, "id57"], [7, "parameters"], [7, "id2"], [7, "id4"], [11, "parameters"], [11, "id1"], [11, "id3"], [11, "id5"], [11, "id7"], [11, "id9"]], "Returns": [[1, "returns"], [6, "returns"], [6, "id2"], [6, "id4"], [6, "id6"], [6, "id8"], [6, "id10"], [6, "id12"], [6, "id14"], [6, "id16"], [6, "id18"], [6, "id20"], [6, "id22"], [6, "id24"], [6, "id26"], [6, "id28"], [6, "id30"], [6, "id32"], [6, "id34"], [6, "id36"], [6, "id38"], [6, "id40"], [6, "id42"], [6, "id44"], [6, "id46"], [6, "id48"], [6, "id51"], [6, "id53"], [6, "id56"], [6, "id58"], [7, "returns"], [7, "id3"], [7, "id5"], [11, "returns"], [11, "id2"], [11, "id4"], [11, "id6"], [11, "id8"], [11, "id10"]], "mlinsights.mlmodel.direct_blas_lapack": [[2, "mlinsights-mlmodel-direct-blas-lapack"]], "Lapack": [[2, "lapack"]], "Use lapack function dgelss": [[2, "indexexref-ex0"]], "mlinsights.helpers": [[3, "mlinsights-helpers"]], "Formatting": [[3, "formatting"]], "Pipeline": [[3, "pipeline"]], "API": [[4, "api"]], "mlinsights.metrics": [[5, "mlinsights-metrics"]], "Compute non linear correlations": [[5, "indexexref-ex0"]], "mlinsights.mlmodel": [[6, "mlinsights-mlmodel"]], "Helpers": [[6, "helpers"]], "model_featurizer": [[6, "model-featurizer"]], "Clustering": [[6, "clustering"]], "ConstraintKMeans": [[6, "constraintkmeans"]], "KMeansL1L2": [[6, "kmeansl1l2"]], "Trainers": [[6, "trainers"]], "ClassifierAfterKMeans": [[6, "classifierafterkmeans"]], "CustomizedMultilayerPerceptron": [[6, "customizedmultilayerperceptron"]], "IntervalRegressor": [[6, "intervalregressor"]], "ApproximateNMFPredictor": [[6, "approximatenmfpredictor"]], "PiecewiseClassifier": [[6, "piecewiseclassifier"]], "PiecewiseRegressor": [[6, "piecewiseregressor"]], "QuantileMLPRegressor": [[6, "quantilemlpregressor"]], "QuantileLinearRegression": [[6, "quantilelinearregression"]], "TransformedTargetClassifier2": [[6, "transformedtargetclassifier2"]], "TransformedTargetRegressor2": [[6, "transformedtargetregressor2"], [28, "transformedtargetregressor2"]], "Transforms": [[6, "transforms"]], "NGramsMixin": [[6, "ngramsmixin"]], "BaseReciprocalTransformer": [[6, "basereciprocaltransformer"]], "CategoriesToIntegers": [[6, "categoriestointegers"]], "DictVectorizer or CategoriesToIntegers": [[6, "indexexref-sklearn0"], [32, "index-exref-0-0"]], "ExtendedFeatures": [[6, "extendedfeatures"]], "FunctionReciprocalTransformer": [[6, "functionreciprocaltransformer"]], "PermutationReciprocalTransformer": [[6, "permutationreciprocaltransformer"]], "PredictableTSNE": [[6, "predictabletsne"]], "TransferTransformer": [[6, "transfertransformer"]], "TraceableCountVectorizer": [[6, "traceablecountvectorizer"]], "TraceableTfidfVectorizer": [[6, "traceabletfidfvectorizer"]], "Exploration in C": [[6, "exploration-in-c"]], "Losses": [[6, "losses"]], "Hidden API": [[6, "hidden-api"]], "_switch_clusters": [[6, "switch-clusters"]], "mlinsights.mlmodel (trees)": [[7, "mlinsights-mlmodel-trees"]], "Note about potentiel issues": [[7, "note-about-potentiel-issues"]], "Estimators": [[7, "estimators"]], "PiecewiseTreeRegressor": [[7, "piecewisetreeregressor"]], "Criterions": [[7, "criterions"]], "SimpleRegressorCriterion": [[7, "simpleregressorcriterion"]], "SimpleRegressorCriterionFast": [[7, "simpleregressorcriterionfast"]], "LinearRegressorCriterion": [[7, "linearregressorcriterion"]], "mlinsights.plotting": [[8, "mlinsights-plotting"]], "mlinsights.search_rank": [[9, "mlinsights-search-rank"]], "SearchEngineVectors": [[9, "searchenginevectors"]], "SearchEnginePredictions": [[9, "searchenginepredictions"]], "SearchEnginePredictionImages": [[9, "searchenginepredictionimages"]], "mlinsights.sklapi": [[10, "mlinsights-sklapi"]], "SkBase": [[10, "skbase"]], "SkBaseClassifier": [[10, "skbaseclassifier"]], "SkException": [[10, "skexception"]], "SkBaseLearner": [[10, "skbaselearner"]], "SkLearnParameters": [[10, "sklearnparameters"]], "SkBaseRegressor": [[10, "skbaseregressor"]], "SkBaseTransform": [[10, "skbasetransform"]], "SkBaseTransformLearner": [[10, "skbasetransformlearner"]], "Use two learners into a same pipeline": [[10, "indexexref-sklearn0"], [32, "index-exref-0-2"]], "SkBaseTransformStacking": [[10, "skbasetransformstacking"]], "Stacking de plusieurs learners dans un pipeline scikit-learn.": [[10, "indexexref-sklearn1"], [32, "index-exref-0-1"]], "mlinsights.timeseries": [[11, "mlinsights-timeseries"]], "Datasets": [[11, "datasets"]], "Experimentation": [[11, "experimentation"]], "Manipulation": [[11, "manipulation"]], "Plotting": [[11, "plotting"], [16, "plotting"]], "Prediction": [[11, "prediction"]], "BaseReciprocalTimeSeriesTransformer": [[11, "basereciprocaltimeseriestransformer"]], "build_ts_X_y": [[11, "build-ts-x-y"]], "BaseTimeSeries": [[11, "basetimeseries"]], "DummyTimeSeriesRegressor": [[11, "dummytimeseriesregressor"]], "ARTimeSeriesRegressor": [[11, "artimeseriesregressor"]], "ts_mape": [[11, "ts-mape"]], "Trees": [[12, "trees"]], "Digging into the tree structure": [[12, "digging-into-the-tree-structure"]], "Experiments, exercise": [[12, "experiments-exercise"]], "Examples Gallery": [[13, "examples-gallery"]], "Constraint KMeans": [[14, "constraint-kmeans"], [14, "id1"]], "Data": [[14, "data"]], "Standard KMeans": [[14, "standard-kmeans"]], "Decision Tree and Logistic Regression": [[15, "decision-tree-and-logistic-regression"]], "Iris dataset and logistic regression": [[15, "iris-dataset-and-logistic-regression"]], "DecisionTreeLogisticRegression": [[15, "decisiontreelogisticregression"]], "A first example": [[15, "a-first-example"]], "Another example designed to fail": [[15, "another-example-designed-to-fail"]], "Leave zones": [[15, "leave-zones"]], "numpy.digitize as a tree": [[16, "numpy-digitize-as-a-tree"]], "Simple example": [[16, "simple-example"], [25, "simple-example"]], "Benchmark": [[16, "benchmark"]], "KMeans with norm L1": [[17, "kmeans-with-norm-l1"]], "Simple datasets": [[17, "simple-datasets"]], "Classic KMeans": [[17, "classic-kmeans"]], "KMeans with L1 norm": [[17, "kmeans-with-l1-norm"]], "When clusters are completely different": [[17, "when-clusters-are-completely-different"]], "Close leaves in a decision trees": [[18, "close-leaves-in-a-decision-trees"]], "A simple tree": [[18, "a-simple-tree"]], "On Iris": [[18, "on-iris"]], "LogisticRegression and Clustering": [[19, "logisticregression-and-clustering"]], "A dummy datasets and not convex": [[19, "a-dummy-datasets-and-not-convex"]], "One function to plot classification in 2D": [[19, "one-function-to-plot-classification-in-2d"]], "Logistic Regression": [[19, "logistic-regression"]], "Logistic Regression and k-means": [[19, "logistic-regression-and-k-means"]], "Variation": [[19, "variation"]], "Random Forest": [[19, "random-forest"]], "Piecewise classification with scikit-learn predictors": [[20, "piecewise-classification-with-scikit-learn-predictors"]], "Iris dataset and first logistic regression": [[20, "iris-dataset-and-first-logistic-regression"]], "Piecewise classication": [[20, "piecewise-classication"]], "Piecewise linear regression with scikit-learn predictors": [[21, "piecewise-linear-regression-with-scikit-learn-predictors"]], "Piecewise data": [[21, "piecewise-data"], [22, "piecewise-data"]], "Piecewise Linear Regression with a decision tree": [[21, "piecewise-linear-regression-with-a-decision-tree"]], "Piecewise Linear Regression with a KBinsDiscretizer": [[21, "piecewise-linear-regression-with-a-kbinsdiscretizer"]], "Next": [[21, "next"], [22, "next"]], "Custom DecisionTreeRegressor adapted to a linear regression": [[22, "custom-decisiontreeregressor-adapted-to-a-linear-regression"]], "DecisionTreeRegressor": [[22, "decisiontreeregressor"]], "DecisionTreeRegressor with custom implementation": [[22, "decisiontreeregressor-with-custom-implementation"]], "Computation time": [[22, "computation-time"]], "Better implementation": [[22, "better-implementation"]], "Criterion adapted for a linear regression": [[22, "criterion-adapted-for-a-linear-regression"]], "Predictable t-SNE": [[23, "predictable-t-sne"]], "t-SNE on MNIST": [[23, "t-sne-on-mnist"]], "Repeatable t-SNE": [[23, "repeatable-t-sne"]], "Repeatable t-SNE with another predictor": [[23, "repeatable-t-sne-with-another-predictor"]], "Quantile MLPRegressor": [[24, "quantile-mlpregressor"]], "Quantile Regression": [[25, "quantile-regression"]], "Regression with various quantiles": [[25, "regression-with-various-quantiles"]], "Regression with confidence interval": [[26, "regression-with-confidence-interval"]], "Some data": [[26, "some-data"]], "Confidence interval with a linear regression": [[26, "confidence-interval-with-a-linear-regression"]], "Higher confidence interval": [[26, "higher-confidence-interval"]], "With decision trees": [[26, "with-decision-trees"]], "Regression quantile": [[26, "regression-quantile"]], "With seaborn": [[26, "with-seaborn"]], "GaussianProcessRegressor": [[26, "gaussianprocessregressor"]], "Search images with deep learning (torch)": [[27, "search-images-with-deep-learning-torch"]], "Get a pre-trained model": [[27, "get-a-pre-trained-model"]], "Images": [[27, "images"]], "Raw images": [[27, "raw-images"]], "Search among images": [[27, "search-among-images"]], "The idea of the search engine": [[27, "the-idea-of-the-search-engine"]], "Going further": [[27, "going-further"]], "Transformed Target": [[28, "transformed-target"]], "TransformedTargetRegressor": [[28, "id1"]], "Why another?": [[28, "why-another"]], "Classifier and classes permutation": [[28, "classifier-and-classes-permutation"]], "The but\u2026": [[28, "the-but"]], "Traceable n-grams with tf-idf": [[29, "traceable-n-grams-with-tf-idf"]], "Example with CountVectorizer": [[29, "example-with-countvectorizer"]], "scikit-learn version": [[29, "scikit-learn-version"], [29, "id1"]], "Funny example with TfidfVectorizer": [[29, "funny-example-with-tfidfvectorizer"]], "mlinsights version": [[29, "mlinsights-version"]], "Visualize a scikit-learn pipeline": [[30, "visualize-a-scikit-learn-pipeline"]], "Simple model": [[30, "simple-model"]], "Complex pipeline": [[30, "complex-pipeline"]], "Example with FeatureUnion": [[30, "example-with-featureunion"]], "Compute intermediate outputs": [[30, "compute-intermediate-outputs"]], "Computation times": [[31, "computation-times"]], "Short Examples": [[32, "short-examples"]], "FAQ": [[33, "faq"]], "Tutorial": [[36, "tutorial"]], "Change Logs": [[0, "change-logs"]], "0.5.0": [[0, "id1"]], "0.3.649 - 2022-07-22 - 2.35Mb": [[0, "mb"]], "0.3.631 - 2022-05-19 - 2.21Mb": [[0, "id2"]], "0.3.614 - 2021-10-02 - 1.73Mb": [[0, "id3"]], "0.3.606 - 2021-08-22 - 2.35Mb": [[0, "id4"]], "mlinsights: tricky scikit-learn": [[34, "mlinsights-tricky-scikit-learn"]], "Documentation": [[34, null]], "More": [[34, null]], "Older versions": [[34, "older-versions"]], "LICENSE": [[35, "license"]]}, "indexentries": {"mlcache (class in mlinsights.mlbatch.cache_model)": [[1, "mlinsights.mlbatch.cache_model.MLCache"]], "pipelinecache (class in mlinsights.mlbatch.pipeline_cache)": [[1, "mlinsights.mlbatch.pipeline_cache.PipelineCache"]], "as_key() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.as_key"]], "cache() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.cache"]], "count() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.count"]], "create_cache() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.create_cache"]], "get() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.get"]], "get_cache() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.get_cache"]], "has_cache() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.has_cache"]], "items() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.items"]], "keys() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.keys"]], "remove_cache() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.remove_cache"]], "set_score_request() (mlinsights.mlbatch.pipeline_cache.pipelinecache method)": [[1, "mlinsights.mlbatch.pipeline_cache.PipelineCache.set_score_request"]], "dgelss() (in module mlinsights.mlmodel.direct_blas_lapack)": [[2, "mlinsights.mlmodel.direct_blas_lapack.dgelss"]], "alter_pipeline_for_debugging() (in module mlinsights.helpers.pipeline)": [[3, "mlinsights.helpers.pipeline.alter_pipeline_for_debugging"]], "enumerate_pipeline_models() (in module mlinsights.helpers.pipeline)": [[3, "mlinsights.helpers.pipeline.enumerate_pipeline_models"]], "format_function_call() (in module mlinsights.helpers.parameters)": [[3, "mlinsights.helpers.parameters.format_function_call"]], "format_parameters() (in module mlinsights.helpers.parameters)": [[3, "mlinsights.helpers.parameters.format_parameters"]], "format_value() (in module mlinsights.helpers.parameters)": [[3, "mlinsights.helpers.parameters.format_value"]], "non_linear_correlations() (in module mlinsights.metrics.correlations)": [[5, "mlinsights.metrics.correlations.non_linear_correlations"]], "approximatenmfpredictor (class in mlinsights.mlmodel.anmf_predictor)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor"]], "basereciprocaltransformer (class in mlinsights.mlmodel.sklearn_transform_inv)": [[6, "mlinsights.mlmodel.sklearn_transform_inv.BaseReciprocalTransformer"]], "categoriestointegers (class in mlinsights.mlmodel.categories_to_integers)": [[6, "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers"]], "classifierafterkmeans (class in mlinsights.mlmodel.classification_kmeans)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans"]], "constraintkmeans (class in mlinsights.mlmodel.kmeans_constraint)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans"]], "customizedmultilayerperceptron (class in mlinsights.mlmodel.quantile_mlpregressor)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.CustomizedMultilayerPerceptron"]], "extendedfeatures (class in mlinsights.mlmodel.extended_features)": [[6, "mlinsights.mlmodel.extended_features.ExtendedFeatures"]], "functionreciprocaltransformer (class in mlinsights.mlmodel.sklearn_transform_inv_fct)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer"]], "intervalregressor (class in mlinsights.mlmodel.interval_regressor)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor"]], "kmeansl1l2 (class in mlinsights.mlmodel.kmeans_l1)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2"]], "ngramsmixin (class in mlinsights.mlmodel.sklearn_text)": [[6, "mlinsights.mlmodel.sklearn_text.NGramsMixin"]], "permutationreciprocaltransformer (class in mlinsights.mlmodel.sklearn_transform_inv_fct)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer"]], "piecewiseclassifier (class in mlinsights.mlmodel.piecewise_estimator)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier"]], "piecewiseregressor (class in mlinsights.mlmodel.piecewise_estimator)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor"]], "predictabletsne (class in mlinsights.mlmodel.predictable_tsne)": [[6, "mlinsights.mlmodel.predictable_tsne.PredictableTSNE"]], "quantilelinearregression (class in mlinsights.mlmodel.quantile_regression)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression"]], "quantilemlpregressor (class in mlinsights.mlmodel.quantile_mlpregressor)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor"]], "traceablecountvectorizer (class in mlinsights.mlmodel.sklearn_text)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableCountVectorizer"]], "traceabletfidfvectorizer (class in mlinsights.mlmodel.sklearn_text)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableTfidfVectorizer"]], "transfertransformer (class in mlinsights.mlmodel.transfer_transformer)": [[6, "mlinsights.mlmodel.transfer_transformer.TransferTransformer"]], "transformedtargetclassifier2 (class in mlinsights.mlmodel.target_predictors)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2"]], "transformedtargetregressor2 (class in mlinsights.mlmodel.target_predictors)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2"]], "_switch_clusters() (in module mlinsights.mlmodel._kmeans_constraint_)": [[6, "mlinsights.mlmodel._kmeans_constraint_._switch_clusters"]], "absolute_loss() (in module mlinsights.mlmodel.quantile_mlpregressor)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.absolute_loss"]], "available_fcts() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer static method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.available_fcts"]], "classes_ (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 property)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.classes_"]], "cluster_edges() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.cluster_edges"]], "constraint_kmeans() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.constraint_kmeans"]], "decision_function() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.decision_function"]], "decision_function() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.decision_function"]], "decision_function() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.decision_function"]], "fit() (mlinsights.mlmodel.anmf_predictor.approximatenmfpredictor method)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor.fit"]], "fit() (mlinsights.mlmodel.categories_to_integers.categoriestointegers method)": [[6, "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers.fit"]], "fit() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.fit"]], "fit() (mlinsights.mlmodel.extended_features.extendedfeatures method)": [[6, "mlinsights.mlmodel.extended_features.ExtendedFeatures.fit"]], "fit() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.fit"]], "fit() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.fit"]], "fit() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.fit"]], "fit() (mlinsights.mlmodel.predictable_tsne.predictabletsne method)": [[6, "mlinsights.mlmodel.predictable_tsne.PredictableTSNE.fit"]], "fit() (mlinsights.mlmodel.quantile_regression.quantilelinearregression method)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression.fit"]], "fit() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.fit"]], "fit() (mlinsights.mlmodel.sklearn_transform_inv_fct.permutationreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer.fit"]], "fit() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.fit"]], "fit() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.fit"]], "fit() (mlinsights.mlmodel.transfer_transformer.transfertransformer method)": [[6, "mlinsights.mlmodel.transfer_transformer.TransferTransformer.fit"]], "fit_transform() (mlinsights.mlmodel.categories_to_integers.categoriestointegers method)": [[6, "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers.fit_transform"]], "get_fct_inv() (mlinsights.mlmodel.sklearn_transform_inv.basereciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv.BaseReciprocalTransformer.get_fct_inv"]], "get_fct_inv() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.get_fct_inv"]], "get_fct_inv() (mlinsights.mlmodel.sklearn_transform_inv_fct.permutationreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer.get_fct_inv"]], "get_feature_names_out() (mlinsights.mlmodel.extended_features.extendedfeatures method)": [[6, "mlinsights.mlmodel.extended_features.ExtendedFeatures.get_feature_names_out"]], "get_params() (mlinsights.mlmodel.anmf_predictor.approximatenmfpredictor method)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor.get_params"]], "get_params() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.get_params"]], "model_featurizer() (in module mlinsights.mlmodel.ml_featurizer)": [[6, "mlinsights.mlmodel.ml_featurizer.model_featurizer"]], "n_estimators_ (mlinsights.mlmodel.interval_regressor.intervalregressor property)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.n_estimators_"]], "predict() (mlinsights.mlmodel.anmf_predictor.approximatenmfpredictor method)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor.predict"]], "predict() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.predict"]], "predict() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.predict"]], "predict() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.predict"]], "predict() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.predict"]], "predict() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.predict"]], "predict() (mlinsights.mlmodel.piecewise_estimator.piecewiseregressor method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor.predict"]], "predict() (mlinsights.mlmodel.quantile_mlpregressor.quantilemlpregressor method)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor.predict"]], "predict() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.predict"]], "predict() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.predict"]], "predict_all() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.predict_all"]], "predict_proba() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.predict_proba"]], "predict_proba() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.predict_proba"]], "predict_proba() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.predict_proba"]], "predict_sorted() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.predict_sorted"]], "score() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.score"]], "score() (mlinsights.mlmodel.quantile_mlpregressor.quantilemlpregressor method)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor.score"]], "score() (mlinsights.mlmodel.quantile_regression.quantilelinearregression method)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression.score"]], "score() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.score"]], "score() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.score"]], "set_fit_request() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.piecewise_estimator.piecewiseregressor method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.predictable_tsne.predictabletsne method)": [[6, "mlinsights.mlmodel.predictable_tsne.PredictableTSNE.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.quantile_regression.quantilelinearregression method)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.sklearn_text.traceablecountvectorizer method)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableCountVectorizer.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.sklearn_text.traceabletfidfvectorizer method)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableTfidfVectorizer.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.sklearn_transform_inv_fct.permutationreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.transfer_transformer.transfertransformer method)": [[6, "mlinsights.mlmodel.transfer_transformer.TransferTransformer.set_fit_request"]], "set_params() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.set_params"]], "set_predict_request() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.set_predict_request"]], "set_score_request() (mlinsights.mlmodel.anmf_predictor.approximatenmfpredictor method)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.set_score_request"]], "set_score_request() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.set_score_request"]], "set_score_request() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.set_score_request"]], "set_score_request() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.set_score_request"]], "set_score_request() (mlinsights.mlmodel.piecewise_estimator.piecewiseregressor method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.quantile_mlpregressor.quantilemlpregressor method)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.quantile_regression.quantilelinearregression method)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression.set_score_request"]], "set_score_request() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.set_score_request"]], "set_score_request() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.set_score_request"]], "set_transform_request() (mlinsights.mlmodel.sklearn_text.traceablecountvectorizer method)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableCountVectorizer.set_transform_request"]], "set_transform_request() (mlinsights.mlmodel.sklearn_text.traceabletfidfvectorizer method)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableTfidfVectorizer.set_transform_request"]], "transform() (mlinsights.mlmodel.categories_to_integers.categoriestointegers method)": [[6, "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers.transform"]], "transform() (mlinsights.mlmodel.extended_features.extendedfeatures method)": [[6, "mlinsights.mlmodel.extended_features.ExtendedFeatures.transform"]], "transform() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.transform"]], "transform() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.transform"]], "transform() (mlinsights.mlmodel.predictable_tsne.predictabletsne method)": [[6, "mlinsights.mlmodel.predictable_tsne.PredictableTSNE.transform"]], "transform() (mlinsights.mlmodel.sklearn_transform_inv.basereciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv.BaseReciprocalTransformer.transform"]], "transform() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.transform"]], "transform() (mlinsights.mlmodel.sklearn_transform_inv_fct.permutationreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer.transform"]], "transform() (mlinsights.mlmodel.transfer_transformer.transfertransformer method)": [[6, "mlinsights.mlmodel.transfer_transformer.TransferTransformer.transform"]], "transform_features() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.transform_features"]], "piecewisetreeregressor (class in mlinsights.mlmodel.piecewise_tree_regression)": [[7, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor"]], "simpleregressorcriterion (class in mlinsights.mlmodel.piecewise_tree_regression_criterion)": [[7, "mlinsights.mlmodel.piecewise_tree_regression_criterion.SimpleRegressorCriterion"]], "simpleregressorcriterionfast (class in mlinsights.mlmodel.piecewise_tree_regression_criterion_fast)": [[7, "mlinsights.mlmodel.piecewise_tree_regression_criterion_fast.SimpleRegressorCriterionFast"]], "fit() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[7, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.fit"]], "predict() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[7, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.predict"]], "predict_leaves() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[7, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.predict_leaves"]], "printd() (mlinsights.mlmodel.piecewise_tree_regression_criterion.simpleregressorcriterion method)": [[7, "mlinsights.mlmodel.piecewise_tree_regression_criterion.SimpleRegressorCriterion.printd"]], "set_fit_request() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[7, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.set_fit_request"]], "set_predict_request() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[7, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.set_predict_request"]], "set_score_request() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[7, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.set_score_request"]], "pipeline2dot() (in module mlinsights.plotting.visualize)": [[8, "mlinsights.plotting.visualize.pipeline2dot"]], "pipeline2str() (in module mlinsights.plotting.visualize)": [[8, "mlinsights.plotting.visualize.pipeline2str"]], "plot_gallery_images() (in module mlinsights.plotting.gallery)": [[8, "mlinsights.plotting.gallery.plot_gallery_images"]], "searchenginepredictionimages (class in mlinsights.search_rank.search_engine_predictions_images)": [[9, "mlinsights.search_rank.search_engine_predictions_images.SearchEnginePredictionImages"]], "searchenginepredictions (class in mlinsights.search_rank.search_engine_predictions)": [[9, "mlinsights.search_rank.search_engine_predictions.SearchEnginePredictions"]], "searchenginevectors (class in mlinsights.search_rank.search_engine_vectors)": [[9, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors"]], "fit() (mlinsights.search_rank.search_engine_predictions.searchenginepredictions method)": [[9, "mlinsights.search_rank.search_engine_predictions.SearchEnginePredictions.fit"]], "fit() (mlinsights.search_rank.search_engine_predictions_images.searchenginepredictionimages method)": [[9, "mlinsights.search_rank.search_engine_predictions_images.SearchEnginePredictionImages.fit"]], "fit() (mlinsights.search_rank.search_engine_vectors.searchenginevectors method)": [[9, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors.fit"]], "kneighbors() (mlinsights.search_rank.search_engine_predictions.searchenginepredictions method)": [[9, "mlinsights.search_rank.search_engine_predictions.SearchEnginePredictions.kneighbors"]], "kneighbors() (mlinsights.search_rank.search_engine_predictions_images.searchenginepredictionimages method)": [[9, "mlinsights.search_rank.search_engine_predictions_images.SearchEnginePredictionImages.kneighbors"]], "kneighbors() (mlinsights.search_rank.search_engine_vectors.searchenginevectors method)": [[9, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors.kneighbors"]], "read_zip() (mlinsights.search_rank.search_engine_vectors.searchenginevectors static method)": [[9, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors.read_zip"]], "to_zip() (mlinsights.search_rank.search_engine_vectors.searchenginevectors method)": [[9, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors.to_zip"]], "keys (mlinsights.sklapi.sklearn_parameters.sklearnparameters property)": [[10, "mlinsights.sklapi.sklearn_parameters.SkLearnParameters.Keys"]], "skbase (class in mlinsights.sklapi.sklearn_base)": [[10, "mlinsights.sklapi.sklearn_base.SkBase"]], "skbaseclassifier (class in mlinsights.sklapi.sklearn_base_classifier)": [[10, "mlinsights.sklapi.sklearn_base_classifier.SkBaseClassifier"]], "skbaselearner (class in mlinsights.sklapi.sklearn_base_learner)": [[10, "mlinsights.sklapi.sklearn_base_learner.SkBaseLearner"]], "skbaseregressor (class in mlinsights.sklapi.sklearn_base_regressor)": [[10, "mlinsights.sklapi.sklearn_base_regressor.SkBaseRegressor"]], "skbasetransform (class in mlinsights.sklapi.sklearn_base_transform)": [[10, "mlinsights.sklapi.sklearn_base_transform.SkBaseTransform"]], "skbasetransformlearner (class in mlinsights.sklapi.sklearn_base_transform_learner)": [[10, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner"]], "skbasetransformstacking (class in mlinsights.sklapi.sklearn_base_transform_stacking)": [[10, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking"]], "skexception (class in mlinsights.sklapi.sklearn_parameters)": [[10, "mlinsights.sklapi.sklearn_parameters.SkException"]], "sklearnparameters (class in mlinsights.sklapi.sklearn_parameters)": [[10, "mlinsights.sklapi.sklearn_parameters.SkLearnParameters"]], "compare_params() (mlinsights.sklapi.sklearn_base.skbase static method)": [[10, "mlinsights.sklapi.sklearn_base.SkBase.compare_params"]], "decision_function() (mlinsights.sklapi.sklearn_base_learner.skbaselearner method)": [[10, "mlinsights.sklapi.sklearn_base_learner.SkBaseLearner.decision_function"]], "fit() (mlinsights.sklapi.sklearn_base.skbase method)": [[10, "mlinsights.sklapi.sklearn_base.SkBase.fit"]], "fit() (mlinsights.sklapi.sklearn_base_learner.skbaselearner method)": [[10, "mlinsights.sklapi.sklearn_base_learner.SkBaseLearner.fit"]], "fit() (mlinsights.sklapi.sklearn_base_transform.skbasetransform method)": [[10, "mlinsights.sklapi.sklearn_base_transform.SkBaseTransform.fit"]], "fit() (mlinsights.sklapi.sklearn_base_transform_learner.skbasetransformlearner method)": [[10, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner.fit"]], "fit() (mlinsights.sklapi.sklearn_base_transform_stacking.skbasetransformstacking method)": [[10, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking.fit"]], "fit_transform() (mlinsights.sklapi.sklearn_base_transform.skbasetransform method)": [[10, "mlinsights.sklapi.sklearn_base_transform.SkBaseTransform.fit_transform"]], "get_params() (mlinsights.sklapi.sklearn_base.skbase method)": [[10, "mlinsights.sklapi.sklearn_base.SkBase.get_params"]], "get_params() (mlinsights.sklapi.sklearn_base_transform_learner.skbasetransformlearner method)": [[10, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner.get_params"]], "get_params() (mlinsights.sklapi.sklearn_base_transform_stacking.skbasetransformstacking method)": [[10, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking.get_params"]], "predict() (mlinsights.sklapi.sklearn_base_learner.skbaselearner method)": [[10, "mlinsights.sklapi.sklearn_base_learner.SkBaseLearner.predict"]], "predict_proba() (mlinsights.sklapi.sklearn_base_classifier.skbaseclassifier method)": [[10, "mlinsights.sklapi.sklearn_base_classifier.SkBaseClassifier.predict_proba"]], "score() (mlinsights.sklapi.sklearn_base_classifier.skbaseclassifier method)": [[10, "mlinsights.sklapi.sklearn_base_classifier.SkBaseClassifier.score"]], "score() (mlinsights.sklapi.sklearn_base_learner.skbaselearner method)": [[10, "mlinsights.sklapi.sklearn_base_learner.SkBaseLearner.score"]], "score() (mlinsights.sklapi.sklearn_base_regressor.skbaseregressor method)": [[10, "mlinsights.sklapi.sklearn_base_regressor.SkBaseRegressor.score"]], "set_params() (mlinsights.sklapi.sklearn_base.skbase method)": [[10, "mlinsights.sklapi.sklearn_base.SkBase.set_params"]], "set_params() (mlinsights.sklapi.sklearn_base_transform_learner.skbasetransformlearner method)": [[10, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner.set_params"]], "set_params() (mlinsights.sklapi.sklearn_base_transform_stacking.skbasetransformstacking method)": [[10, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking.set_params"]], "test_equality() (mlinsights.sklapi.sklearn_base.skbase method)": [[10, "mlinsights.sklapi.sklearn_base.SkBase.test_equality"]], "to_dict() (mlinsights.sklapi.sklearn_parameters.sklearnparameters method)": [[10, "mlinsights.sklapi.sklearn_parameters.SkLearnParameters.to_dict"]], "transform() (mlinsights.sklapi.sklearn_base_transform.skbasetransform method)": [[10, "mlinsights.sklapi.sklearn_base_transform.SkBaseTransform.transform"]], "transform() (mlinsights.sklapi.sklearn_base_transform_learner.skbasetransformlearner method)": [[10, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner.transform"]], "transform() (mlinsights.sklapi.sklearn_base_transform_stacking.skbasetransformstacking method)": [[10, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking.transform"]], "validate() (mlinsights.sklapi.sklearn_parameters.sklearnparameters method)": [[10, "mlinsights.sklapi.sklearn_parameters.SkLearnParameters.validate"]], "artimeseriesregressor (class in mlinsights.timeseries.ar)": [[11, "mlinsights.timeseries.ar.ARTimeSeriesRegressor"]], "basereciprocaltimeseriestransformer (class in mlinsights.timeseries.base)": [[11, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer"]], "basetimeseries (class in mlinsights.timeseries.base)": [[11, "mlinsights.timeseries.base.BaseTimeSeries"]], "dummytimeseriesregressor (class in mlinsights.timeseries.dummies)": [[11, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor"]], "aggregate_timeseries() (in module mlinsights.timeseries.agg)": [[11, "mlinsights.timeseries.agg.aggregate_timeseries"]], "artificial_data() (in module mlinsights.timeseries.datasets)": [[11, "mlinsights.timeseries.datasets.artificial_data"]], "build_ts_x_y() (in module mlinsights.timeseries.utils)": [[11, "mlinsights.timeseries.utils.build_ts_X_y"]], "find_ts_group_pattern() (in module mlinsights.timeseries.patterns)": [[11, "mlinsights.timeseries.patterns.find_ts_group_pattern"]], "fit() (mlinsights.timeseries.ar.artimeseriesregressor method)": [[11, "mlinsights.timeseries.ar.ARTimeSeriesRegressor.fit"]], "fit() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[11, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.fit"]], "fit() (mlinsights.timeseries.dummies.dummytimeseriesregressor method)": [[11, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor.fit"]], "get_fct_inv() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[11, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.get_fct_inv"]], "has_preprocessing() (mlinsights.timeseries.base.basetimeseries method)": [[11, "mlinsights.timeseries.base.BaseTimeSeries.has_preprocessing"]], "plot_week_timeseries() (in module mlinsights.timeseries.plotting)": [[11, "mlinsights.timeseries.plotting.plot_week_timeseries"]], "predict() (mlinsights.timeseries.ar.artimeseriesregressor method)": [[11, "mlinsights.timeseries.ar.ARTimeSeriesRegressor.predict"]], "predict() (mlinsights.timeseries.dummies.dummytimeseriesregressor method)": [[11, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor.predict"]], "set_fit_request() (mlinsights.timeseries.ar.artimeseriesregressor method)": [[11, "mlinsights.timeseries.ar.ARTimeSeriesRegressor.set_fit_request"]], "set_fit_request() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[11, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.set_fit_request"]], "set_fit_request() (mlinsights.timeseries.dummies.dummytimeseriesregressor method)": [[11, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor.set_fit_request"]], "set_score_request() (mlinsights.timeseries.ar.artimeseriesregressor method)": [[11, "mlinsights.timeseries.ar.ARTimeSeriesRegressor.set_score_request"]], "set_score_request() (mlinsights.timeseries.dummies.dummytimeseriesregressor method)": [[11, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor.set_score_request"]], "set_transform_request() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[11, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.set_transform_request"]], "transform() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[11, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.transform"]], "ts_mape() (in module mlinsights.timeseries.metrics)": [[11, "mlinsights.timeseries.metrics.ts_mape"]], "digitize2tree() (in module mlinsights.mltree.tree_digitize)": [[12, "mlinsights.mltree.tree_digitize.digitize2tree"]], "predict_leaves() (in module mlinsights.mltree.tree_structure)": [[12, "mlinsights.mltree.tree_structure.predict_leaves"]], "tree_find_common_node() (in module mlinsights.mltree.tree_structure)": [[12, "mlinsights.mltree.tree_structure.tree_find_common_node"]], "tree_find_path_to_root() (in module mlinsights.mltree.tree_structure)": [[12, "mlinsights.mltree.tree_structure.tree_find_path_to_root"]], "tree_leave_index() (in module mlinsights.mltree.tree_structure)": [[12, "mlinsights.mltree.tree_structure.tree_leave_index"]], "tree_leave_neighbors() (in module mlinsights.mltree.tree_structure)": [[12, "mlinsights.mltree.tree_structure.tree_leave_neighbors"]], "tree_node_parents() (in module mlinsights.mltree.tree_structure)": [[12, "mlinsights.mltree.tree_structure.tree_node_parents"]], "tree_node_range() (in module mlinsights.mltree.tree_structure)": [[12, "mlinsights.mltree.tree_structure.tree_node_range"]]}})