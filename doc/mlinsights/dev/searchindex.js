Search.setIndex({"docnames": ["CHANGELOGS", "api/batch", "api/blaslapack", "api/helpers", "api/index", "api/metrics", "api/mlmodel", "api/plotting", "api/search_rank", "api/timeseries", "api/tree", "auto_examples/index", "auto_examples/plot_constraint_kmeans", "auto_examples/plot_decision_tree_logreg", "auto_examples/plot_digitize", "auto_examples/plot_kmeans_l1", "auto_examples/plot_leave_neighbors", "auto_examples/plot_logistic_regression_clustering", "auto_examples/plot_piecewise_classification", "auto_examples/plot_piecewise_linear_regression", "auto_examples/plot_piecewise_linear_regression_criterion", "auto_examples/plot_predictable_tsne", "auto_examples/plot_quantile_mlpregression", "auto_examples/plot_quantile_regression", "auto_examples/plot_regression_confidence_interval", "auto_examples/plot_search_images_torch", "auto_examples/plot_sklearn_transformed_target", "auto_examples/plot_traceable_ngrams_tfidf", "auto_examples/plot_visualize_pipeline", "auto_examples/sg_execution_times", "i_ex", "i_faq", "index", "license", "tutorial/index"], "filenames": ["CHANGELOGS.rst", "api/batch.rst", "api/blaslapack.rst", "api/helpers.rst", "api/index.rst", "api/metrics.rst", "api/mlmodel.rst", "api/plotting.rst", "api/search_rank.rst", "api/timeseries.rst", "api/tree.rst", "auto_examples/index.rst", "auto_examples/plot_constraint_kmeans.rst", "auto_examples/plot_decision_tree_logreg.rst", "auto_examples/plot_digitize.rst", "auto_examples/plot_kmeans_l1.rst", "auto_examples/plot_leave_neighbors.rst", "auto_examples/plot_logistic_regression_clustering.rst", "auto_examples/plot_piecewise_classification.rst", "auto_examples/plot_piecewise_linear_regression.rst", "auto_examples/plot_piecewise_linear_regression_criterion.rst", "auto_examples/plot_predictable_tsne.rst", "auto_examples/plot_quantile_mlpregression.rst", "auto_examples/plot_quantile_regression.rst", "auto_examples/plot_regression_confidence_interval.rst", "auto_examples/plot_search_images_torch.rst", "auto_examples/plot_sklearn_transformed_target.rst", "auto_examples/plot_traceable_ngrams_tfidf.rst", "auto_examples/plot_visualize_pipeline.rst", "auto_examples/sg_execution_times.rst", "i_ex.rst", "i_faq.rst", "index.rst", "license.rst", "tutorial/index.rst"], "titles": ["Change Logs", "Speed up batch training", "Blas &amp; Lapack", "Helpers", "API", "metrics", "Machine Learning Models", "plotting", "search_rank", "Timeseries", "Trees", "Examples Gallery", "Constraint KMeans", "Decision Tree and Logistic Regression", "numpy.digitize as a tree", "KMeans with norm L1", "Close leaves in a decision trees", "LogisticRegression and Clustering", "Piecewise classification with scikit-learn predictors", "Piecewise linear regression with scikit-learn predictors", "Custom DecisionTreeRegressor adapted to a linear regression", "Predictable t-SNE", "Quantile MLPRegressor", "Quantile Regression", "Regression with confidence interval", "Search images with deep learning (torch)", "Transformed Target", "Traceable n-grams with tf-idf", "Visualize a scikit-learn pipeline", "Computation times", "Examples", "FAQ", "mlinsights: tricky scikit-learn", "LICENSE", "Tutorial"], "terms": {"class": [1, 6, 8, 9, 14, 16, 17, 18, 20, 21, 25, 27, 28, 30], "mlinsight": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30], "mlbatch": 1, "cache_model": 1, "name": [0, 1, 3, 6, 7, 8, 9, 13, 14, 18, 25, 28], "sourc": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "implement": [0, 1, 6, 8, 9, 10, 17, 19, 22, 23, 24, 25, 32], "cach": [0, 1, 4, 6, 25], "reduc": [1, 6], "number": [1, 5, 6, 7, 8, 9, 10, 12, 14, 17, 18, 20, 24, 25, 26, 30], "grid": [1, 10, 16], "search": [0, 1, 8, 11, 14, 29], "ha": [1, 6, 9, 10, 25], "do": [0, 1, 6, 9, 14, 16, 20, 25, 27, 28, 33], "static": [1, 6, 8], "as_kei": [1, 4], "param": [1, 3, 6, 7, 8, 9, 10], "convert": [0, 1, 6, 8, 24, 25, 28], "list": [1, 3, 6, 7, 8, 10, 14, 16, 17, 24, 25], "kei": [1, 4], "dictionari": [1, 3, 6, 8, 10], "string": [0, 1, 3, 6, 7, 27], "valu": [0, 1, 2, 3, 5, 6, 9, 10, 12, 14, 15, 16, 17, 24, 26], "one": [1, 5, 6, 8, 9, 10, 13, 14, 16, 18, 20, 21, 24, 25, 26, 27], "object": [1, 3, 6, 7, 9, 12, 18, 19, 20, 21, 22, 23, 24, 25], "count": [1, 4], "retriev": [0, 1, 6, 14, 20, 25], "time": [1, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28], "an": [0, 1, 2, 6, 7, 8, 9, 10, 19, 20, 24, 25, 26, 28, 33], "element": [1, 2, 6, 20], "wa": [1, 6, 20, 25, 28, 32], "from": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33], "int": [1, 6, 20], "create_cach": [1, 4], "creat": [1, 6, 7, 10, 18], "new": [1, 6, 9, 21, 25, 27], "get": [1, 4, 6, 20, 21, 26, 28, 32], "default": [1, 6, 7, 8, 9, 10, 12, 15, 17, 21], "none": [1, 3, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 21, 25], "found": [1, 6, 8, 9, 14, 20, 25], "doe": [0, 1, 2, 6, 8, 10, 19, 20, 22, 23, 25, 26, 27], "exist": [1, 6, 7, 9, 25], "get_cach": [1, 4], "given": [1, 6, 9, 18], "has_cach": [1, 4], "tell": [1, 9, 25], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33], "present": [1, 6], "boolean": [0, 1, 6], "item": [0, 1, 4, 16, 17, 18], "enumer": [1, 3, 13, 14, 18], "all": [0, 1, 3, 6, 8, 9, 10, 11, 20, 33], "remove_cach": [1, 4], "remov": [0, 1, 6, 18, 24], "pipeline_cach": 1, "step": [1, 6, 7, 16, 17, 18, 28], "cache_nam": 1, "verbos": [1, 6, 9, 13, 18, 19, 23], "fals": [1, 5, 6, 7, 9, 10, 13, 14, 16, 17, 19, 20, 25], "same": [1, 5, 7, 8, 9, 10, 12, 16, 20, 24, 25, 26, 27, 28], "sklearn": [0, 1, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32], "pipelin": [0, 1, 4, 7, 9, 11, 29, 32], "can": [1, 5, 6, 8, 9, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28], "skip": [1, 6], "detect": 1, "alreadi": [1, 6], "model": [0, 1, 3, 4, 5, 8, 9, 10, 13, 18, 19, 20, 21, 22, 24, 26, 32], "accross": 1, "even": [1, 6, 10, 16, 20, 25, 28], "differ": [0, 1, 6, 9, 21, 25, 26], "transform": [0, 1, 3, 4, 7, 9, 11, 14, 21, 25, 27, 28, 29, 30, 32], "tupl": [1, 3, 6], "fit": [1, 4, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 10, 16, 17, 18, 20, 21, 25, 26, 27], "chain": 1, "order": [1, 6, 20, 25], "which": [0, 1, 5, 6, 8, 9, 10, 13, 16, 20, 21, 24, 25, 26, 27, 28, 30, 32], "thei": [1, 6, 7, 8, 16, 25], "last": [1, 3, 9, 24, 25], "estim": [0, 1, 6, 9, 13, 18, 19, 21, 23, 24], "option": [1, 6, 7, 9, 17, 24, 25, 26, 30], "If": [1, 5, 6], "true": [1, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 19, 23, 24, 25, 28], "elaps": [1, 18, 19], "while": [1, 6], "each": [1, 5, 6, 9, 10, 12, 16, 17, 18, 19, 20, 23, 25], "print": [1, 2, 3, 5, 6, 7, 9, 10, 14, 20, 21, 26, 28, 30, 32], "complet": [1, 6], "The": [1, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 33], "attribut": [0, 1, 6, 20, 26], "named_step": 1, "bunch": 1, "access": [1, 25, 28], "read": 1, "onli": [1, 5, 6, 8, 9, 10, 18, 20, 21, 24], "ani": [1, 6, 8, 9, 17, 19, 20, 33], "user": [1, 6, 9, 26], "set_score_request": [1, 4, 6, 9], "sample_weight": [1, 6, 9], "bool": [1, 6, 9], "str": [1, 6, 7, 9, 21], "unchang": [1, 6, 9], "request": [1, 6, 9], "metadata": [0, 1, 6, 8, 9], "pass": [1, 6, 9], "score": [0, 1, 4, 6, 8, 9, 13, 14, 17, 23, 25, 30], "method": [1, 3, 6, 9, 10, 13, 19, 20, 22, 25, 28], "note": [1, 6, 9], "thi": [1, 3, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33], "relev": [1, 6, 9], "enable_metadata_rout": [1, 6, 9], "see": [1, 3, 5, 6, 7, 8, 9, 10, 16, 17, 18, 20, 27, 28], "set_config": [1, 6, 9], "pleas": [1, 6, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "guid": [1, 6, 9], "how": [1, 6, 9, 12, 15, 17, 27], "rout": [1, 6, 9], "mechan": [1, 6, 9], "work": [0, 1, 2, 6, 8, 9, 13, 17, 20, 21, 26], "provid": [1, 6, 9, 14, 33], "ignor": [1, 6, 7, 9, 28], "meta": [1, 6, 8, 9], "rais": [1, 6, 9, 10, 20, 25], "error": [1, 6, 9, 23, 30], "should": [1, 3, 6, 7, 9, 14, 20, 25], "alia": [1, 6, 9, 14], "instead": [1, 6, 9, 18, 20, 24], "origin": [1, 6, 9, 25, 27, 30], "util": [1, 6, 9, 25, 26], "metadata_rout": [1, 6, 9], "retain": [1, 6, 9], "allow": [1, 6, 9, 10, 25], "you": [1, 3, 6, 9, 27], "chang": [1, 6, 9, 12, 13, 14, 15, 17, 20, 25], "some": [1, 6, 7, 9, 10, 21, 22, 23, 27], "other": [1, 5, 6, 9, 21, 25, 33], "version": [0, 1, 6, 9, 18, 22, 23, 24, 32], "1": [1, 2, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32], "3": [1, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "us": [0, 1, 5, 7, 8, 9, 10, 13, 15, 18, 19, 20, 21, 24, 25, 27, 33], "sub": [1, 6, 9, 15], "e": [1, 5, 6, 9, 10, 14, 20, 26, 30], "g": [1, 6, 9, 24, 28], "insid": [1, 6, 9], "otherwis": [1, 6, 9, 10, 20, 33], "effect": [1, 6, 9, 26], "self": [1, 6, 8, 9, 20], "updat": [0, 1, 6, 9, 14], "mlmodel": [2, 6, 8, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 32], "direct_blas_lapack": 2, "doubl": [2, 6, 20], "A": [2, 6, 18, 19, 20, 25, 33], "b": [2, 6, 9, 12, 14, 16, 24, 30], "prec": [2, 25], "find": [2, 5, 6, 8, 9, 10, 19, 20, 25, 28], "x": [2, 3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 32], "problem": [2, 6, 13, 19, 20, 24, 25, 26], "ax": [2, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "minim": [2, 5, 20], "norm": [0, 2, 6, 11, 29, 32], "2": [2, 3, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "dgel": 2, "paramet": [0, 2, 3, 5, 7, 8, 10, 24, 25], "matrix": [0, 2, 5, 6, 7, 8, 27], "dimens": [2, 6, 9, 10], "precis": 2, "return": [2, 3, 5, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 25, 26], "integ": [0, 2, 6, 26, 30], "info": 2, "0": [2, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "success": 2, "exit": 2, "th": [2, 10, 14], "argument": 2, "had": 2, "illeg": 2, "diagon": 2, "triangular": 2, "factor": [2, 9], "zero": [2, 6, 15, 19, 20], "so": [2, 6, 9, 19, 28, 33], "have": [2, 6, 7, 22, 23, 25, 26, 27], "full": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "rank": [2, 6, 25], "least": [2, 6, 23], "squar": [2, 6, 13, 15, 22, 23], "solut": [2, 6, 21], "could": [2, 6, 10, 20, 25, 27], "comput": [0, 2, 6, 8, 9, 16, 18, 21, 24, 25], "indic": [2, 6, 8, 10, 14], "c": [2, 4, 13, 14, 15, 16, 17, 18, 20, 24, 33], "must": [2, 6, 8, 9], "contigu": [2, 6], "arrai": [0, 2, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "modifi": [0, 2, 3, 6, 17, 26, 28, 33], "contain": [0, 2, 6, 8, 16, 18, 25], "import": [0, 2, 3, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32], "numpi": [0, 2, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "scipi": [2, 13], "linalg": 2, "scipy_dgelss": 2, "10": [2, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32], "12": [0, 2, 13, 14, 16, 21, 23, 24, 25, 26, 27, 28], "13": [0, 2, 10, 14, 16, 23, 25, 27], "20": [0, 2, 6, 13, 16, 17, 23, 27], "22": [2, 13, 27], "23": [0, 2, 27], "t": [0, 2, 6, 9, 11, 17, 19, 20, 26, 27, 29], "v": [2, 3, 17, 22, 23, 28], "": [2, 3, 5, 6, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 25, 26, 28, 32], "copi": [2, 3, 6, 20, 26, 33], "assert": 2, "format_paramet": [3, 4], "pdict": 3, "d": [3, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 24, 30], "dict": [3, 6, 13, 17, 18, 22, 23, 24], "6": [0, 3, 6, 8, 9, 10, 13, 14, 16, 17, 18, 21, 22, 23, 25, 26, 27], "7": [0, 3, 9, 10, 14, 18, 22, 23, 24, 25, 26, 27], "r": [3, 5, 12, 14, 25, 26], "format_valu": [3, 4], "includ": [0, 3, 6, 10, 14, 33], "format_function_cal": [3, 4], "function": [0, 3, 5, 6, 8, 9, 10, 14, 20, 25, 26, 28, 32], "call": [0, 3, 6, 10, 14, 20, 25], "fct": [3, 6, 8, 13, 16, 17], "alter_pipeline_for_debug": [3, 4, 28], "pipe": [3, 6, 7, 30], "overwrit": [3, 6, 22], "predict": [0, 3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30], "predict_proba": [3, 4, 6, 18], "decision_funct": [3, 4, 6], "collect": [3, 12, 25], "input": [3, 6, 14, 21, 25, 28], "output": [0, 3, 6, 9, 14, 20, 21, 25, 26], "seen": [3, 6], "scikit": [0, 3, 7, 9, 10, 11, 12, 14, 15, 17, 20, 21, 22, 23, 26, 29], "learn": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 26, 29], "befor": [0, 3, 6, 8, 9, 17, 24, 25, 26], "need": [3, 20, 25], "untouch": 3, "after": [0, 3, 6, 25], "slower": [3, 20], "notebook": [0, 3, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "visualizepipelinerst": [], "enumerate_pipeline_model": [3, 4, 28], "coor": [3, 28], "within": [0, 3, 9], "current": [3, 6, 9, 20, 27], "coordin": [0, 3, 6], "subset": [3, 9], "variabl": [3, 5, 7, 13, 14, 19], "iter": [3, 6, 8, 17, 21, 23, 25, 26, 30], "plot": [0, 4, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28], "plot_gallery_imag": [4, 7, 25], "pipeline2dot": [0, 4, 7, 28], "pipeline2str": [4, 7, 28], "helper": [4, 28], "format": [0, 4, 9, 18, 28], "metric": [4, 6, 9, 13, 18, 26, 30], "non_linear_correl": [4, 5], "speed": [4, 6], "up": [0, 4, 6, 25], "batch": 4, "train": [0, 4, 5, 6, 7, 9, 13, 16, 17, 18, 20, 21, 24, 26, 28, 32], "mlcach": 4, "pipelinecach": [0, 4], "machin": [4, 5, 8, 9, 13, 32], "model_featur": [4, 8], "cluster": [0, 4, 9, 11, 12, 29], "constraintkmean": [0, 4, 12], "cluster_edg": [4, 6, 12], "constraint_kmean": [4, 6], "set_fit_request": [4, 6, 9], "kmeansl1l2": [4, 15], "set_predict_request": [4, 6], "trainer": [4, 17], "classifierafterkmean": [4, 17], "get_param": [4, 6], "set_param": [4, 6], "transform_featur": [4, 6], "intervalregressor": [4, 24], "n_estimators_": [4, 6], "predict_al": [4, 6], "predict_sort": [4, 6, 24], "approximatenmfpredictor": 4, "piecewiseclassifi": [4, 18], "piecewiseregressor": [0, 4, 19], "piecewisetreeregressor": [4, 20], "predict_leav": [4, 6, 10, 13, 16, 20], "quantilemlpregressor": [0, 4, 22, 24, 32], "quantilelinearregress": [0, 4, 23, 24, 32], "transformedtargetclassifier2": [4, 26], "classes_": [4, 6, 18], "transformedtargetregressor2": 4, "categoriestointeg": 4, "fit_transform": [4, 6, 21], "extendedfeatur": 4, "get_feature_names_out": [4, 6], "functionreciprocaltransform": 4, "available_fct": [4, 6], "get_fct_inv": [4, 6, 9], "permutationreciprocaltransform": 4, "predictabletsn": [0, 4, 21], "transfertransform": [0, 4], "traceablecountvector": [4, 27], "set_transform_request": [4, 6, 9], "traceabletfidfvector": [4, 27], "explor": [0, 4, 18], "skbasetransformlearn": [4, 30], "skbasetransformstack": [4, 30], "simpleregressorcriterion": [4, 20], "simpleregressorcriterionfast": [4, 20], "linearregressorcriterion": 4, "tree": [0, 4, 6, 11, 18, 20, 29, 30, 32], "dig": [4, 13, 28], "structur": [4, 25], "tree_find_common_nod": [4, 10], "tree_find_path_to_root": [4, 10], "tree_node_par": [4, 10], "tree_node_rang": [4, 10], "tree_leave_index": [4, 10, 16], "tree_leave_neighbor": [4, 10, 16], "experi": 4, "exercis": 4, "digitize2tre": [4, 10, 14], "search_rank": 4, "searchenginevector": 4, "kneighbor": [4, 8, 25], "read_zip": [4, 8], "to_zip": [4, 8], "searchenginepredict": 4, "searchenginepredictionimag": [4, 25], "bla": 4, "lapack": [0, 4], "dgelss": 4, "timeseri": 4, "dataset": [4, 5, 6, 12, 16, 20, 21, 23, 24, 25, 26, 28, 30, 32], "artificial_data": [4, 9], "experiment": 4, "find_ts_group_pattern": [4, 9], "manipul": [4, 32], "aggregate_timeseri": [4, 9], "plot_week_timeseri": [4, 9], "basetimeseri": 4, "has_preprocess": [4, 9], "dummytimeseriesregressor": 4, "artimeseriesregressor": 4, "ts_mape": 4, "df": [5, 6, 9, 14, 18, 22, 23, 26, 28, 30], "draw": [5, 6, 7, 16], "5": [5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32], "minmax": 5, "panda": [0, 5, 6, 8, 13, 14, 17, 18, 22, 23, 24, 26, 28, 30], "datafram": [5, 6, 7, 8, 9, 13, 14, 17, 18, 22, 23, 24, 26, 28, 30], "tri": [5, 6, 12, 21, 24], "bootstrap": [0, 5, 24], "averag": [5, 6, 14, 20, 24], "result": [5, 6, 8, 10, 13, 15, 16, 17, 18, 21, 25], "obtain": [5, 33], "three": [5, 20], "matric": [5, 6], "min": [5, 6, 13, 16, 17, 18, 21, 24, 26], "max": [5, 6, 12, 13, 16, 17, 18, 21, 24, 26], "pearson": 5, "cor": 5, "x_i": [5, 6, 20, 25], "x_j": [5, 25], "frac": [5, 9, 24, 25], "cov": 5, "y_i": [5, 6, 20], "sigma": [5, 24], "center": [5, 6, 12, 15, 17, 18, 21], "mathbb": [5, 20], "becom": 5, "sqrt": 5, "rescal": [5, 6], "let": [5, 6, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 27, 28], "assum": [5, 6, 8, 9, 25], "we": [5, 6, 8, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30], "try": [5, 6, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "coeffici": [5, 6, 20], "alpha_": 5, "ij": [5, 25], "standard": [0, 5, 6, 9, 20, 24], "deviat": [5, 6, 20, 24], "nois": [5, 24], "epsilon_": 5, "It": [5, 6, 8, 9, 10, 15, 17, 19, 20, 23, 24, 25, 26, 27, 28, 30, 32], "like": [5, 6, 10, 14, 19, 20, 25], "come": [5, 6, 8, 25], "regress": [0, 5, 6, 9, 11, 22, 26, 29, 30, 32], "extend": [0, 5, 6, 8, 12, 17, 18, 26], "definit": 5, "f": [0, 5, 6, 8, 9, 12, 24, 25, 28], "omega": [5, 25], "defin": [5, 6, 9, 13, 25], "rightarrow": 5, "anymor": [5, 6, 20], "quantiti": 5, "min_": 5, "Then": 5, "choos": [5, 6, 25], "left": [5, 10, 20], "right": [5, 10, 14, 27, 33], "bound": 5, "verifi": 5, "interv": [0, 5, 6, 9, 10, 11, 20, 29], "math": [5, 14], "That": [5, 6, 10, 14, 18, 25], "also": [5, 6, 8, 13, 14, 16, 17, 18, 20, 25, 26, 30], "mean": [0, 5, 6, 10, 15, 20, 25], "neg": [5, 13], "most": [5, 6, 18], "them": [0, 5, 6, 25, 28], "usual": [5, 6, 25], "overfit": 5, "data": [5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 21, 22, 23, 25, 26, 28, 30, 32], "databas": [5, 21, 25], "split": [5, 6, 10, 19, 20, 21], "two": [5, 9, 10, 13, 15, 18, 19, 20, 24, 25], "part": [5, 21, 24], "everi": [5, 6, 8, 9, 10, 12, 13, 18, 20, 24, 25, 28], "necessarili": [5, 6, 17, 25], "symmetr": 5, "follow": [5, 6, 8, 9, 10, 13, 14, 16, 20, 24, 28, 33], "exampl": [3, 5, 7, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 32], "iri": [5, 26, 28], "base": [0, 5, 6, 9, 13, 19, 20, 22, 23, 25, 26, 32], "randomforestregressor": 5, "ensembl": [5, 17], "load_iri": [5, 6, 13, 16, 18, 26, 28, 30], "4": [0, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32], "column": [0, 5, 6, 8, 9, 14, 18, 28], "x1": [5, 6, 10, 12, 16, 17, 18, 28], "x2": [5, 10, 12, 16, 17, 18, 28], "x3": [5, 28], "x4": [5, 28], "998853": [], "000000": 26, "854391": [], "788197": [], "044966": [], "994592": [], "294259": [], "112560": [], "880775": [], "603586": [], "999317": [], "958059": [], "723441": [], "636547": [], "967059": [], "999318": [], "ml_featur": [6, 8], "vector": [0, 6, 8, 9, 18, 24, 25, 26], "featur": [0, 6, 8, 9, 10, 16, 17, 18, 20, 25, 28, 30], "produc": [0, 6, 21, 24, 25, 26], "itself": 6, "intermedi": [0, 6, 25], "torch": [6, 8, 11, 29], "addit": [6, 7, 9], "kmeans_constraint": 6, "n_cluster": [6, 12, 15], "8": [0, 6, 9, 10, 13, 14, 16, 17, 18, 23, 25, 26, 27, 28, 30], "init": [6, 21], "k": [0, 6, 8, 13, 15, 16, 18, 20], "n_init": [6, 12, 15, 17], "max_it": [6, 12, 17, 23, 26, 30], "500": [6, 14, 23], "tol": 6, "0001": [6, 17], "random_st": [6, 12, 21, 26], "copy_x": 6, "algorithm": [6, 12, 15, 17, 20, 23, 25], "lloyd": [6, 17], "balanced_predict": [6, 12], "strategi": [6, 7, 12, 18, 28], "gain": [6, 12], "kmeans0": 6, "learning_r": 6, "histori": [6, 12], "constraint": [0, 6, 11, 29], "equal": 6, "size": [6, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28], "initi": [6, 17], "regular": [6, 9, 13, 26, 27], "kmean": [0, 6, 9, 11, 29], "continu": [6, 19, 20, 21, 26], "offer": 6, "choic": [6, 22, 23], "first": [6, 8, 9, 17, 19, 20, 22, 23, 24, 25, 27, 28], "keep": [0, 6, 9, 12, 27], "balanc": 6, "second": [6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "over": [6, 9, 14, 21], "test": [6, 13, 21], "set": [0, 6, 8, 12, 14, 15, 17, 25], "impli": [6, 33], "observ": [6, 9, 10, 20], "might": 6, "depend": [0, 6, 20], "belong": 6, "determin": [0, 6, 10], "obseerv": 6, "assign": [6, 16, 17], "distanc": [6, 9, 12, 13, 15], "point": [6, 8, 12, 13, 16, 17, 18, 21], "closest": [6, 25], "unless": [6, 30], "reach": [6, 17, 21, 26, 30], "maximum": [6, 21], "deal": [6, 9, 33], "further": [6, 20], "map": [6, 18, 20], "describ": [6, 20, 25], "variat": 6, "weight": [0, 6, 9, 12, 14, 20, 21, 25], "attach": 6, "rate": 6, "cannot": 6, "good": 6, "compromis": 6, "without": [0, 6, 17, 20, 33], "_switch_clust": 4, "switch": [6, 19, 20], "between": [0, 6, 9, 12, 21, 26], "check": [6, 20, 21, 25, 26], "inertia": 6, "ones": 6, "abid": 6, "appli": [0, 6, 8, 9, 17, 21, 25], "accress": 6, "edg": [6, 10, 12, 16], "delaunai": [6, 12], "graph": [0, 6, 7, 18, 28], "state": 6, "sampl": [6, 9, 13], "evolut": 6, "y": [6, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 32], "spars": 6, "shape": [6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28], "n_sampl": [6, 12, 20, 21], "n_featur": [6, 9, 12, 21], "instanc": 6, "caus": 6, "memori": [6, 8, 10], "unus": [6, 7], "kmeans_l1": 6, "300": [6, 9, 14, 17, 19, 23, 28], "l2": [6, 15, 16, 17, 22, 23], "either": 6, "l1": [0, 6, 11, 16, 22, 23, 29, 32], "kmeansl1rst": [], "form": [6, 27], "well": [6, 7, 9, 12, 26], "centroid": 6, "gener": [6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32], "random": [6, 13, 14, 15, 19, 20, 22, 23, 24, 26, 28], "ndarrai": [6, 28], "select": 6, "smart": 6, "wai": [0, 6, 17, 20, 21, 24, 25, 26, 27, 28], "converg": [6, 17, 21, 26, 30], "section": 6, "k_init": 6, "more": [0, 6, 19, 27], "detail": 6, "row": [6, 9, 13, 26], "give": [6, 27], "run": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "seed": 6, "final": [6, 19], "best": [6, 19, 20], "consecut": 6, "term": 6, "singl": [6, 9, 28, 32], "float": [6, 26], "1e": [6, 24], "rel": [6, 7], "toler": 6, "regard": 6, "declar": 6, "mode": [6, 24, 28], "randomst": 6, "make": [0, 6], "determinist": 6, "glossari": [], "when": [0, 6, 7, 9, 10, 25], "pre": 6, "numer": 6, "accur": 6, "ensur": 6, "put": [6, 13, 16, 17, 18], "back": 6, "small": [6, 25], "mai": [6, 7, 9, 14, 28], "introduc": [0, 6, 20], "subtract": 6, "ad": [6, 14], "case": [6, 7, 8, 10, 20, 24, 27], "signific": 6, "slowdown": 6, "elkan": 6, "classic": 6, "em": 6, "style": [0, 6, 14, 28], "effici": [6, 14, 20], "triangl": 6, "inequ": 6, "doesn": 6, "support": [0, 6], "ident": 6, "path": [6, 7, 8, 10, 25], "cluster_centers_": [6, 12, 15, 17], "stop": [6, 17, 26, 30], "fulli": 6, "consist": [6, 28], "labels_": 6, "label": [6, 9, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28], "inertia_": 6, "sum": [6, 9, 20, 21, 26], "n_iter_": 6, "Not": [6, 17, 34], "here": [6, 25], "api": [8, 10, 18, 24, 32], "convent": 6, "In": [6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "quantiz": 6, "literatur": 6, "code": [0, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "book": 6, "index": [0, 6, 9, 10, 14, 25], "space": [6, 10, 16, 17, 20], "typic": 6, "dens": 6, "x_new": 6, "classification_kmean": 6, "clu": 6, "kwarg": [6, 8], "add": [0, 6, 14, 24, 28], "classifi": [0, 6, 7, 18, 25, 28], "logisticregressionclusteringrst": [], "linear_model": [6, 7, 9, 13, 17, 18, 23, 24, 26, 28, 30, 32], "logisiticregress": 6, "sent": [6, 8], "its": 6, "document": [0, 6, 17, 26, 27, 30, 33], "understand": [6, 13, 18], "specifi": [0, 6, 8, 26], "n_target": 6, "target": [0, 6, 9, 11, 13, 16, 18, 21, 29, 30, 32], "Will": 6, "cast": 6, "dtype": [6, 15, 18, 21, 24, 25], "necessari": 6, "individu": 6, "clus_": [6, 17], "estimator_": [6, 21], "deep": [6, 8, 11, 29], "both": [6, 9], "pattern": [6, 9], "probabl": [6, 25, 28], "prefix": 6, "e_": 6, "c_": [6, 13, 16, 17, 18], "valeur": 6, "interval_regressor": 6, "n_estim": [6, 17, 24], "n_job": [6, 18, 19], "alpha": [6, 13, 19, 20, 24], "multipl": [6, 21], "regressor": [6, 9, 20, 26], "confid": [0, 6, 11, 29], "made": [6, 24, 26], "smaller": [6, 24], "increas": [6, 10, 17, 18, 24, 26, 30], "varianc": 6, "associ": [6, 20, 33], "anoth": [6, 8, 12, 16], "uniform": 6, "predictor": [6, 9, 11, 29], "bucket": [6, 14, 18, 19, 20], "parallel": [6, 18, 19], "job": 6, "proport": 6, "resampl": [6, 24], "tqdm": [6, 13, 14, 19], "binner": [0, 6, 18, 19], "binner_": 6, "estimators_": [6, 18], "leav": [0, 6, 10, 11, 19, 20, 25, 29], "mean_estimator_": 6, "whole": [6, 20], "dim_": 6, "mean_": 6, "properti": 6, "sort": [6, 13, 14, 23, 24], "anmf_predictor": 6, "force_posit": 6, "decomposit": 6, "nmf": 6, "involv": [6, 10, 20], "truncatedsvd": 6, "compon": 6, "project": 6, "issu": [0, 6, 19, 20], "posit": [0, 6, 13, 20], "would": [6, 9, 20, 24, 25, 26], "float64": [6, 12, 15], "n_compon": [6, 21], "pred": [6, 10, 14, 19, 20, 24, 30], "155": [6, 13, 14], "05": [6, 7, 14, 24, 28], "84": [0, 6], "multi": [6, 22, 32], "piecewise_estim": 6, "decis": [0, 6, 10, 11, 14, 17, 18, 20, 29, 32], "logist": [0, 6, 11, 26, 29, 30], "logisticregress": [6, 7, 11, 13, 18, 26, 28, 29, 30], "dummi": [6, 9, 18, 19, 22, 23], "dummyclassifi": [6, 18], "just": [6, 7, 21, 25, 26], "pick": 6, "enough": [6, 25], "decisiontreeclassifi": [6, 10, 13, 16, 18, 30], "bin": [6, 10, 14, 24], "preprocess": [6, 7, 9, 17, 18, 19, 21, 26, 28, 30], "kbinsdiscret": [6, 18], "instanci": 6, "main": 6, "piec": [6, 20, 28], "requir": [6, 20], "happen": [6, 20], "To": 6, "avoid": 6, "linear": [0, 6, 9, 11, 13, 21, 23, 26, 29, 32], "linearregress": [6, 9, 19, 23, 24, 26, 28, 32], "dummyregressor": [6, 19], "decisiontreeregressor": [0, 6, 10, 11, 14, 19, 24, 29], "piecewise_tree_regress": [6, 20], "criterion": [0, 6, 13], "mselin": [6, 20], "splitter": [6, 14], "max_depth": [6, 10, 13, 16], "min_samples_split": [6, 13], "min_samples_leaf": [6, 13, 18, 19, 20, 24], "min_weight_fraction_leaf": 6, "max_featur": 6, "max_leaf_nod": 6, "min_impurity_decreas": 6, "kind": [0, 6, 8, 9, 10, 19, 20, 24, 32, 33], "piecewis": [0, 6, 11, 29], "build": [0, 6, 9, 10, 19, 20, 25], "except": [6, 10, 20, 26, 30], "optim": [0, 6, 20, 21, 23, 25], "simpl": [6, 10, 12, 17, 24], "stepwis": [6, 20], "equival": [6, 14], "mse": 6, "check_input": 6, "replac": [0, 6, 13, 21], "store": [6, 9, 25, 27, 28], "overload": 6, "fall": [6, 10, 14, 20], "mae": 6, "leaves_index_": [6, 20], "quantile_mlpregressor": 6, "hidden_layer_s": [6, 22], "100": [0, 6, 9, 12, 13, 14, 17, 18, 19, 20, 22, 23], "activ": [6, 22], "relu": [6, 25], "solver": [6, 7, 13, 17, 26, 28, 30], "adam": 6, "batch_siz": [6, 25], "auto": [6, 9, 12, 15, 17], "constant": [6, 7, 19, 20, 26, 28], "learning_rate_init": 6, "001": 6, "power_t": 6, "200": [6, 9, 14, 21, 24, 26], "shuffl": [6, 12, 13, 25], "warm_start": 6, "momentum": 6, "9": [0, 6, 9, 14, 16, 18, 21, 23, 24, 25, 26, 27], "nesterovs_momentum": 6, "early_stop": 6, "validation_fract": 6, "beta_1": 6, "beta_2": 6, "999": 6, "epsilon": 6, "08": [6, 9, 14], "n_iter_no_chang": 6, "quantil": [0, 6, 11, 29], "mlp": [0, 6], "neural": [6, 25], "network": [6, 25], "inherit": 6, "neural_network": [6, 21, 22], "mlpregressor": [6, 11, 21, 29, 32], "absolut": 6, "loss": [4, 21], "lbfg": [6, 7, 17, 26, 28, 30], "stochast": [6, 21], "gradient": [6, 25], "descent": 6, "customizedmultilayerperceptron": 4, "absolute_loss": [4, 6], "length": [6, 8, 16, 17, 18], "n_layer": 6, "ith": 6, "repres": [6, 8], "neuron": 6, "hidden": 4, "layer": [6, 22, 25, 32], "tanh": [6, 22], "op": [6, 14], "bottleneck": 6, "sigmoid": 6, "exp": [6, 26], "hyperbol": 6, "tan": 6, "rectifi": 6, "unit": [6, 9], "sgd": 6, "famili": 6, "quasi": 6, "newton": 6, "refer": [6, 17, 26, 30], "propos": [6, 19, 20, 21, 26], "kingma": 6, "diederik": 6, "jimmi": 6, "ba": 6, "pretti": [6, 26], "larg": 6, "thousand": [6, 25], "valid": 6, "For": [6, 16, 17, 25], "howev": [6, 10, 14, 25], "faster": [6, 14], "perform": [6, 25, 26], "better": [0, 6, 17, 21, 25, 26, 28], "penalti": 6, "minibatch": 6, "invscal": 6, "adapt": [6, 11, 29], "schedul": 6, "gradual": 6, "decreas": 6, "learning_rate_": 6, "invers": [0, 6, 23, 26], "scale": [6, 9, 17, 26, 30], "expon": 6, "effective_learning_r": 6, "pow": 6, "long": [6, 25], "epoch": 6, "fail": [0, 6, 17, 26, 30], "divid": 6, "control": 6, "until": [6, 25], "mani": [6, 14, 19, 20, 24], "whether": [6, 10, 33], "np": 6, "improv": 6, "consid": [6, 25], "progress": 6, "messag": 6, "stdout": 6, "reus": [6, 21, 26], "previou": [6, 9, 20], "eras": 6, "nesterov": 6, "earli": 6, "termin": 6, "automat": [6, 9], "asid": 6, "exponenti": [6, 26], "decai": 6, "moment": 6, "stabil": 6, "meet": 6, "constructor": 6, "parent": [6, 10, 14], "loss_": [6, 21], "coefs_": 6, "correspond": 6, "intercepts_": 6, "bia": 6, "ran": 6, "n_layers_": 6, "n_outputs_": 6, "out_activation_": 6, "perceptron": [6, 22, 32], "n_output": 6, "quantile_regress": 6, "fit_intercept": 6, "delta": 6, "quantileregressionrst": [], "chosen": [6, 25], "rho": 6, "sum_i": [6, 9, 20], "where": [6, 9, 10, 25], "expect": [6, 9, 10, 14, 17, 26], "reweight": [6, 23], "french": 6, "r\u00e9gression": 6, "coef_": [6, 32], "dure": 6, "2d": 6, "1d": 6, "intercept_": 6, "independ": 6, "target_predictor": 6, "permut": 6, "classif": [6, 11, 25, 26, 29], "deriv": 6, "classifiermixin": 6, "clone": [0, 6], "prior": 6, "type": [6, 9, 10, 14, 18, 24, 25, 28], "basereciprocaltransform": 4, "classifier_": 6, "transformer_": [6, 26], "tt": 6, "arang": [6, 9, 12, 13, 14, 16, 17, 18], "reshap": [6, 9, 10, 13, 14, 16, 17, 18, 22, 23, 25, 27], "453": 6, "sklearntransformedtargetrst": [], "raw": [6, 24], "accord": 6, "y_hat": 6, "n_class": [6, 13, 21], "accuracy_scor": [6, 26, 30], "non": [0, 6, 24, 26, 32], "regressormixin": 6, "regressor_": 6, "log": [6, 26], "ravel": [6, 13, 16, 17, 18, 22, 23, 24, 25], "r2_score": [6, 26], "categories_to_integ": [6, 30], "skip_error": 6, "someth": [6, 10, 21], "similar": [0, 6, 8, 9, 24], "what": [6, 9, 10, 18, 20], "categori": [6, 25, 26], "modal": 6, "appear": 6, "per": [6, 9, 17], "multipli": [6, 10, 25], "displai": [6, 7, 9, 14], "big": [6, 17, 21, 28], "alloc": 6, "text": [6, 7, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 30], "cat": [6, 7, 25, 28, 30], "tran": [6, 25, 30], "newdf": [6, 30], "nan": [6, 9, 10, 24, 30], "fit_param": 6, "preserv": 6, "extended_featur": 6, "poli": [6, 28], "poly_degre": 6, "poly_interaction_onli": 6, "poly_include_bia": 6, "polynomi": [0, 6], "slow": [6, 20], "degre": [6, 13], "interact": 6, "product": [6, 20], "distinct": [6, 16, 17], "etc": 6, "power": 6, "act": 6, "intercept": [6, 13, 28], "n_input_features_": 6, "total": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "n_output_features_": 6, "suitabl": 6, "combin": [0, 6], "input_featur": 6, "avail": [6, 9, 25], "By": [6, 21], "x0": 6, "xn_featur": 6, "output_feature_nam": 6, "n_output_featur": 6, "rn": 6, "sklearn_transform_inv_fct": 6, "fct_inv": 6, "seri": [6, 9], "predefin": [0, 6], "reciproc": 6, "pprint": [6, 10], "ufunc": [6, 26], "local": [6, 8, 14, 17, 18, 21, 24, 26], "lambda": [6, 10, 13, 16, 26], "0x7fae9119c040": [], "expm1": [6, 26], "log1p": [6, 26], "0x7fae9119c160": [], "revers": [6, 9], "remain": [6, 10], "onc": [6, 20], "permutation_": [6, 26], "track": 6, "predictable_tsn": 6, "normal": [0, 6, 14, 19, 20, 21], "keep_tsne_output": 6, "sne": [0, 6, 11, 29], "interest": [6, 28], "studi": [6, 9], "reproduc": 6, "why": [6, 10, 20, 25], "tsne": [6, 21], "approxim": [6, 12, 13, 20, 21], "predictabletsnerst": [], "manifold": [6, 21], "he": 6, "member": [6, 8, 10, 28], "tsne_outputs_": 6, "normalizer_": 6, "normali": 6, "inv_std_": 6, "mean_squared_error": 6, "tranform": [6, 9], "transfer_transform": 6, "copy_estim": 6, "trainabl": [0, 6, 21], "wrap": 6, "frozen": [6, 14], "guess": [6, 27], "take": [6, 8, 18], "transfer": 6, "noth": 6, "sklearn_text": [6, 27], "content": [6, 25], "encod": [6, 28], "utf": [6, 28], "decode_error": 6, "strict": 6, "strip_acc": 6, "lowercas": 6, "preprocessor": [6, 7, 28], "token": 6, "stop_word": 6, "token_pattern": [6, 27], "u": 6, "w": [6, 20, 28], "ngram_rang": [6, 27], "analyz": 6, "word": 6, "max_df": 6, "min_df": 6, "vocabulari": 6, "binari": [6, 14], "int64": 6, "ngramsmixin": 4, "_word_ngram": 6, "inform": [0, 6, 8, 25, 27], "about": [0, 6, 8, 20], "n": [0, 6, 8, 11, 12, 13, 15, 17, 18, 24, 25, 26, 29], "gram": [0, 6, 11, 29], "still": [6, 10, 20, 25], "than": [6, 14, 20, 21, 25, 26], "countvector": 6, "feature_extract": [6, 27], "pformat": 6, "corpu": [6, 27], "mod1": [6, 27], "todens": [6, 27], "vocabulary_": [6, 27], "mod2": [6, 27], "weirder": 6, "show": [6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "raw_docu": 6, "use_idf": 6, "smooth_idf": 6, "sublinear_tf": 6, "tfidfvector": [0, 6], "za": [6, 27], "z": [6, 13, 16, 17, 18, 27], "329": 6, "26": [0, 6, 27], "245": [6, 14, 32], "193": [6, 14], "doc": [6, 27], "umen": [6, 27], "sec": [6, 27], "ond": [6, 27], "plai": [6, 26, 28], "handl": [0, 6, 26], "sklapi": [6, 30], "sklearn_base_transform_learn": [6, 30], "hide": 6, "insert": 6, "There": [6, 26], "shorter": 6, "imposs": [6, 30], "disguis": [6, 30], "model_select": [6, 13, 18, 19, 20, 21, 24, 26, 30], "train_test_split": [6, 13, 18, 19, 20, 21, 24, 26, 30], "make_pipelin": [6, 30], "x_train": [6, 13, 18, 19, 20, 21, 24, 26, 30], "x_test": [6, 13, 18, 19, 20, 21, 24, 26, 30], "y_train": [6, 13, 18, 19, 20, 21, 24, 26, 30], "y_test": [6, 13, 18, 19, 20, 21, 24, 26, 30], "avec": [6, 25, 30], "deux": [6, 30], "home": [6, 12, 14, 15, 17, 18, 21, 24, 25, 26, 28, 30], "xadupr": [6, 12, 14, 15, 17, 18, 21, 24, 25, 26, 30], "lib": [14, 17, 18, 24, 26], "python3": [14, 17, 18, 24, 26], "site": [14, 17, 18, 24, 26], "packag": [14, 17, 18, 24, 26], "_logist": [6, 17, 26, 30], "py": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "460": [17, 26], "convergencewarn": [6, 17, 21, 26, 30], "statu": [6, 17, 26, 30], "NO": [6, 17, 26, 30, 33], "limit": [6, 17, 26, 30, 33], "shown": [6, 17, 26, 30], "http": [6, 16, 17, 19, 21, 25, 26, 30], "org": [6, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "stabl": [6, 13, 17, 21, 26, 30], "modul": [0, 6, 17, 21, 26, 30], "html": [0, 6, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "altern": [6, 17, 26, 30], "n_iter_i": [6, 17, 26, 30], "_check_optimize_result": [6, 17, 26, 30], "9210526315789473": [], "mandatori": 6, "embed": [6, 21], "pr\u00e9diction": 6, "sklearn_base_transform_stack": [6, 30], "qui": 6, "arrang\u00e9": 6, "selon": 6, "la": 6, "m\u00e9thode": 6, "du": 6, "ce": [6, 30], "assembl": [6, 30], "le": [6, 30], "r\u00e9sultat": [6, 30], "servent": [6, 30], "entr\u00e9": [6, 30], "\u00e0": [6, 30], "mod\u00e8l": [6, 30], "compil": [0, 6], "piecewise_tree_regression_criterion": [6, 20], "inspir": 6, "hellinger_distance_criterion": [6, 20], "pyx": [6, 20], "cython": [0, 6, 20], "expos": [6, 20], "python": [0, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "_criterion": [6, 20], "purpos": [6, 33], "design": [6, 20, 25], "much": [6, 14, 20], "close": [0, 6, 8, 11, 17, 21, 29], "piecewise_tree_regression_criterion_fast": [6, 20], "node": [6, 10, 13, 14, 20], "cumul": [6, 20], "loop": [6, 20], "next": [6, 25, 27], "line": [6, 7, 9, 13, 20, 24, 30], "piecewise_tree_regression_criterion_linear": 6, "complex": [], "galleri": [0, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32], "img": [7, 21, 25, 28], "width": [7, 16, 17, 18], "return_figur": 7, "folder_imag": 7, "figur": [7, 26], "imag": [7, 8, 11, 21, 28, 29], "matplotlib": [7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "filenam": [7, 8], "url": [7, 25], "pillow": 7, "sam": 7, "folder": [7, 25], "searchimageskerasrst": [], "searchimagestorchrst": [], "forc": 6, "visual": [3, 7, 11, 26, 29], "export": 7, "dot": [7, 20, 28], "languag": [7, 28], "orient": [7, 28], "portrait": [7, 28], "ranksep": [7, 28], "25": [0, 7, 14, 23, 25, 27, 28], "nodesep": [7, 28], "height": [7, 24], "indent": 7, "imput": [7, 28], "simpleimput": [7, 28], "onehotencod": [7, 28], "standardscal": [7, 21, 28], "minmaxscal": [7, 28], "compos": [7, 25, 26, 28], "columntransform": [0, 7, 28], "numeric_featur": [7, 28], "ag": [7, 28], "fare": [7, 28], "numeric_transform": [7, 28], "median": [7, 28], "scaler": [7, 28], "categorical_featur": [7, 28], "embark": [7, 28], "sex": [7, 28], "pclass": [7, 28], "categorical_transform": [7, 28], "fill_valu": [7, 28], "miss": [0, 7, 28], "onehot": [7, 28], "handle_unknown": [7, 28], "num": [7, 28], "clf": [7, 13, 28], "search_engine_vector": 8, "pknn": 8, "engin": [0, 8], "look": [8, 10, 14, 17, 18, 19, 25, 27, 28], "neighborsnearestneighbor": 8, "nearest": 8, "neighbor": [8, 10, 16, 21, 25], "popul": [8, 28], "features_": 8, "knn_": 8, "metadata_": 8, "nearestneighbor": [8, 25], "n_neighbor": 8, "ind": 8, "zipfilenam": 8, "restor": 8, "zipfil": 8, "read_csv": 8, "save": [0, 8], "nn": 8, "to_csv": 8, "reli": [8, 25], "search_engine_predict": 8, "fct_param": 8, "knn": [8, 25], "behavior": [8, 10], "search_engine_predictions_imag": 8, "hold": [6, 8, 9, 20], "iter_imag": 8, "process": [6, 8, 14, 24, 25], "through": [8, 28], "len": [8, 14, 18, 25], "neigbhor": 8, "dt1": 9, "dt2": 9, "minut": [9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "artici": 9, "date": 9, "datetim": 9, "now": [9, 20, 21, 28], "timedelta": 9, "40": [0, 9], "head": [9, 18, 22, 23], "2023": [0, 9, 14, 33], "09": [0, 14], "27": [0, 27], "06": [0, 14], "774570": [], "904950": [], "28": [0, 27], "780834": [], "29": [0, 27], "041483": [], "30": [0, 22, 27], "089251": [], "31": [0, 25, 27], "928683": [], "ttime": [9, 20], "name_subset": 9, "week": 9, "half": 9, "hour": 9, "agg": 9, "group": 9, "aggrag": 9, "aggreg": 9, "specif": [6, 9, 25], "period": 9, "normalis": 9, "h": [9, 13, 16, 17, 18], "85": [0, 9], "value2": 9, "label2": 9, "daynam": 9, "xfmt": 9, "0f": 9, "dispatch": 9, "dai": 9, "bar": 9, "values2": [], "english": 9, "axi": [9, 25], "png": [9, 28], "hire": 9, "pdf": 9, "templat": 9, "ine": 9, "past": 9, "delay1": 9, "delay2": 9, "use_all_past": 9, "sever": 9, "hat": 9, "y_": [9, 25], "p": [9, 13, 24, 25], "leqslant": [9, 20], "exclud": 9, "itselv": 9, "basereciprocaltimeseriestransform": 4, "futur": [9, 18, 24], "empti": 9, "n_ob": 9, "librari": 9, "compar": [9, 19, 20, 21, 25], "expected_i": 9, "predicted_i": 9, "y_t": 9, "mltree": [10, 13, 14, 16], "tree_structur": 10, "j": [10, 17], "common": [10, 16], "precomput": 10, "root": [10, 25], "node_id": 10, "parent_id": 10, "rang": [10, 12, 13, 15, 16, 17, 18, 20, 21, 25, 26], "infin": 10, "clr": [10, 13, 16, 17, 22, 23, 32], "ra": 10, "tree_": [10, 13], "cell": [0, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "x_d": 10, "sign": [10, 26], "goe": 10, "border": [10, 13, 16, 17], "somewher": 10, "segment": [10, 16], "nei": 10, "15": [0, 10, 14, 15, 16, 20, 23, 27], "16": [0, 10, 13, 16, 23, 25, 27], "tree_digit": 10, "digit": [0, 10, 11, 21, 29], "epkg": [], "dimension": 10, "monoton": 10, "end": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "open": [10, 28], "throw": 10, "overcom": 10, "onnx": [10, 14], "rule": 10, "though": [10, 16, 20], "export_text": [10, 14], "comparison": [10, 26], "feature_nam": [10, 14], "50": [10, 12, 14, 20, 24, 26], "00": [10, 13, 14, 19, 29], "l": 14, "traceabl": [11, 29], "tf": [11, 29], "idf": [11, 29], "custom": [0, 6, 11, 25, 29], "download": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "auto_examples_python": 11, "zip": [11, 25], "jupyt": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "auto_examples_jupyt": 11, "sphinx": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "go": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28], "counter": 12, "pyplot": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "plt": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "make_blob": 12, "cluster_std": 12, "center_box": 12, "vstack": [12, 17, 20], "150": [12, 14, 19], "fig": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "subplot": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "figsiz": [12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26], "set_titl": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "km": [12, 15], "cl": [12, 17, 25], "hist": 12, "color": [12, 13, 16, 17, 18, 21, 24, 28], "brgy": 12, "legend": [12, 15, 16, 17, 18, 19, 20, 22, 23, 24], "instal": [0, 6, 12, 15, 21, 30], "_kmean": [12, 15, 17], "1416": [12, 15], "futurewarn": [12, 15, 17, 18, 24], "explicitli": [12, 15, 17], "suppress": [12, 15, 17], "warn": [0, 12, 15, 17, 21, 25], "super": [12, 15, 17], "_check_params_vs_input": [12, 15, 17], "default_n_init": [12, 15, 17], "0x7f0e24d34400": 12, "km1": 12, "km2": 12, "x27": [12, 13, 15, 17, 18, 19, 22, 26, 27, 28], "environ": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "rerun": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "represent": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "trust": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "On": [12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "github": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "unabl": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "render": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "load": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "page": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "nbviewer": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "constraintkmeansconstraintkmean": 12, "exchang": 12, "cl1": 12, "hist1": 12, "cl2": 12, "hist2": 12, "0x7f0e26442a10": 12, "area": 12, "attract": 12, "1000": [9, 12, 14, 15, 19, 20, 22, 23, 25, 26], "def": [12, 13, 15, 16, 17, 18, 21, 26], "plot_delaunai": 12, "555555": 12, "nstrategi": 12, "cluster_centers_iter_": 12, "aaaaaa": 12, "m": [6, 12, 13, 14, 15, 16, 20, 24], "astyp": [12, 13, 14], "scatter": [12, 13, 16, 17, 18], "movement": 12, "script": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "151": [12, 14], "plot_constraint_kmean": [12, 29], "ipynb": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "demonstr": [13, 15], "spatial": 13, "cdist": 13, "plot_classifier_decision_zon": 13, "titl": [13, 14, 18, 21], "gca": 13, "x_min": [13, 16, 17, 18, 21], "x_max": [13, 16, 17, 18, 21], "y_min": [13, 16, 17, 18], "y_max": [13, 16, 17, 18], "dhx": 13, "dhy": 13, "xx": [13, 16, 17, 18, 22, 23], "yy": [13, 16, 17, 18, 22, 23], "meshgrid": [13, 16, 17, 18], "contourf": 13, "edgecolor": [13, 16, 17, 18], "lw": [13, 18], "test_siz": 13, "lr": [13, 18, 28], "logisticregressionlogisticregress": [13, 17, 26, 28], "dt": [13, 17, 18], "entropi": 13, "decisiontreeclassifierdecisiontreeclassifi": [13, 16, 18], "veri": [13, 24, 25], "No": [0, 13, 25], "separ": 13, "dtlr": 13, "liblinear": 13, "fit_improve_algo": 13, "decisiontreelogisticregressiondecisiontreelogisticregress": 13, "dtlr2": 13, "intercept_sort_alwai": 13, "ndepth": 13, "tree_depth_": 13, "val": 13, "depth": 13, "hasattr": [13, 21], "els": [6, 13, 14, 16, 17, 20, 25], "ob": [13, 14], "__class__": [13, 18], "__name__": [13, 18], "append": [13, 14, 17, 26], "655556": 13, "877778": 13, "random_set_simpl": 13, "rand": [13, 15, 17, 24], "int32": [13, 26], "2000": [13, 15], "dt8": 13, "sharei": 13, "decisiontre": 13, "nacc": 13, "2f": [13, 18, 23], "set_xlim": [13, 16, 17, 18], "set_ylim": [13, 16, 17, 18], "dtlr8": 13, "decisiontreelogreg": 13, "acc": 13, "96": [0, 13, 24, 25], "1500": 13, "dtlri": 13, "11": [0, 10, 13, 14, 16, 17, 23, 25, 27], "478318": 13, "628104": 13, "226731": 13, "393060": 13, "abov": [13, 33], "1096": 13, "99": [0, 13], "865884": 13, "491733": 13, "043774": 13, "004978": 13, "691": [13, 21], "below": [13, 20], "405": 13, "97": [0, 13], "038701": 13, "555244": 13, "414455": 13, "668887": 13, "404": 13, "76": [0, 13], "333382": 13, "243991": 13, "618261": 13, "700843": 13, "61": [0, 13, 25], "123080": 13, "690918": 13, "612642": 13, "765920": 13, "249": [13, 14], "358885": 13, "153720": 13, "116177": 13, "190284": 13, "draw_bord": [13, 16, 17], "incx": [13, 16, 17], "inci": [13, 16, 17], "linewidth": 13, "02": [13, 14, 16, 17, 18], "cmap": [13, 16, 17, 18, 21], "cm": [13, 16, 17, 18, 21], "tab20": [13, 16, 17], "pcolormesh": [13, 16, 17, 18], "14": [0, 13, 14, 16, 18, 23, 26, 27], "dtl": 13, "n_nodes_": 13, "node_count": 13, "get_xaxi": 13, "set_vis": 13, "0it": 13, "1it": 13, "91it": 13, "2it": 13, "05it": 13, "3it": 13, "01": [0, 13, 14, 16, 17], "51it": 13, "4it": 13, "66it": 13, "5it": 13, "68it": 13, "6it": 13, "03": [0, 13, 14], "59it": 13, "67it": 13, "difficult": [13, 25, 26, 28], "random_set": 13, "minkowski": 13, "rotat": 13, "45": 13, "outsid": 13, "horizont": 13, "vertic": 13, "57": [13, 14], "080469": 13, "093607": 13, "233916": 13, "040679": 13, "750": [13, 14, 20], "75": [0, 13, 15, 23], "906253": 13, "847229": 13, "620617": 13, "539003": 13, "388": 13, "78": [0, 13], "374749": 13, "141016": 13, "808634": 13, "475214": 13, "362": [13, 14], "74": [0, 13], "986362": 13, "980711": 13, "727847": 13, "349192": 13, "73": [0, 13], "713276": 13, "674185": 13, "716095": 13, "156787": 13, "370": 13, "72": [0, 13], "073116": 13, "981557": 13, "542754": 13, "667705": 13, "380": 13, "488024": 13, "444482": 13, "834095": 13, "101622": 13, "decision_path": 13, "leaf": 13, "respons": 13, "88it": 13, "25it": 13, "69it": 13, "71it": 13, "27it": 13, "04": [0, 13, 14], "04it": 13, "36it": 13, "276": 13, "plot_decision_tree_logreg": [13, 29], "real": 14, "discret": 14, "onnxruntim": 14, "inferencesess": 14, "pivot": 14, "pivot_t": 14, "skl2onnx": 14, "to_onnx": 14, "ext_test_cas": [14, 20, 25], "measure_tim": [14, 20], "importlib": 14, "_bootstrap": 14, "241": 14, "runtimewarn": 14, "_splitter": 14, "incompat": [0, 14], "1360": 14, "header": 14, "got": 14, "1576": 14, "pyobject": 14, "measur": 14, "verif": 14, "convers": 14, "10000": 14, "100000": 14, "float32": [14, 25], "repeat": [14, 20], "n_bin": [14, 18, 19], "ti": 14, "context": [9, 14], "div_by_numb": 14, "onx": 14, "target_opset": 14, "sess": 14, "serializetostr": 14, "cpuexecutionprovid": 14, "ort": 14, "piv": 14, "19": [14, 16, 23, 27], "55": [0, 14], "780": 14, "debug": 14, "var": [14, 28], "floattensortyp": 14, "is_root": 14, "pars": 14, "sklearndecisiontreeregressor": 14, "_class": 14, "oper": [14, 24], "onnx_nam": 14, "raw_oper": 14, "781": 14, "out": [14, 18, 19, 25, 33], "is_leaf": 14, "782": 14, "is_f": 14, "is_evalu": 14, "shape2": 14, "infer_typ": 14, "fed": 14, "783": 14, "conv": 14, "treeensembleregressor": 14, "784": 14, "318": 14, "319": 14, "320": 14, "321": 14, "322": 14, "323": 14, "324": [14, 32], "325": 14, "58": [0, 14], "461": 14, "462": 14, "463": 14, "464": [14, 32], "467": 14, "469": 14, "470": 14, "17": [0, 14, 23, 27], "94": [0, 14], "59": [0, 14, 25], "731": 14, "732": 14, "733": 14, "734": 14, "735": 14, "572": 14, "573": 14, "574": 14, "575": 14, "576": 14, "577": 14, "578": 14, "086": 14, "087": 14, "088": 14, "090": 14, "091": 14, "092": 14, "33": [0, 9, 14], "366": 14, "367": [14, 23], "368": 14, "369": 14, "723": 14, "724": 14, "725": 14, "726": 14, "727": 14, "728": 14, "729": 14, "07": 14, "567": 14, "568": 14, "569": 14, "570": 14, "571": 14, "581": 14, "585": 14, "586": 14, "587": 14, "933": 14, "934": 14, "935": 14, "936": 14, "937": 14, "938": 14, "979": 14, "980": 14, "981": 14, "982": 14, "983": 14, "984": 14, "021": 14, "022": 14, "023": 14, "024": 14, "026": 14, "027": 14, "028": 14, "67": [14, 32], "77": [0, 14], "072": 14, "073": 14, "074": 14, "075": 14, "076": 14, "077": 14, "169": 14, "170": 14, "171": 14, "172": 14, "173": 14, "174": 14, "360": 14, "361": 14, "363": 14, "364": 14, "365": 14, "371": 14, "372": 14, "83": [0, 14], "91": [0, 14], "720": 14, "721": 14, "722": 14, "658": 14, "659": 14, "660": 14, "661": 14, "662": 14, "663": 14, "664": 14, "665": 14, "666": 14, "667": 14, "705": 14, "706": 14, "707": 14, "708": 14, "709": 14, "710": 14, "713": 14, "715": 14, "716": 14, "48": [9, 14, 25], "89": [0, 14], "000009": 14, "000015": 14, "000102": 14, "000003": 14, "000016": 14, "000125": 14, "000013": 14, "000094": 14, "000110": 14, "000021": 14, "000165": 14, "000011": 14, "000121": 14, "000112": 14, "000004": 14, "000017": 14, "000114": 14, "000008": 14, "000032": 14, "000158": 14, "000010": 14, "000041": 14, "000183": 14, "000034": 14, "000030": 14, "000284": 14, "000056": 14, "000042": 14, "000235": 14, "000073": 14, "000246": 14, "000299": 14, "000108": 14, "000504": 14, "000549": 14, "000408": 14, "001151": 14, "001283": 14, "000652": 14, "001642": 14, "003085": 14, "003371": 14, "005411": 14, "005926": 14, "002672": 14, "010779": 14, "nb": [14, 18], "nn_bin": 14, "logx": 14, "logi": 14, "140": 14, "ticker": 14, "vmin": 14, "5623413251903491": 14, "vmax": 14, "177827": 14, "94100389228": 14, "tickloc": 14, "175": [14, 18], "179": 14, "412": 14, "413": 14, "414": 14, "415": 14, "417": 14, "419": 14, "427": 14, "429": 14, "450": 14, "451": 14, "479": 14, "480": 14, "482": 14, "693": 14, "695": 14, "696": 14, "698": 14, "700": [14, 17], "701": 14, "711": 14, "752": 14, "754": 14, "905": 14, "907": 14, "909": 14, "910": 14, "912": 14, "913": 14, "922": 14, "924": 14, "270892485803252e": 14, "0022472753716003655": 14, "949": 14, "953": 14, "954": 14, "089": 14, "094": 14, "font_manag": 14, "findfont": 14, "match": 14, "san": 14, "serif": 14, "variant": 14, "stretch": 14, "095": 14, "fontentri": 14, "fname": 14, "mpl": 14, "font": 14, "ttf": 14, "dejavusan": 14, "obliqu": 14, "dejavu": 14, "400": [9, 14, 17, 18], "scalabl": 14, "stixsizfivesymreg": 14, "stixsizefivesym": 14, "dejavuserifdisplai": 14, "dejavusansmono": 14, "mono": 14, "stixgeneralital": 14, "stixgener": 14, "ital": 14, "dejavuserif": 14, "boldital": 14, "335": 14, "096": 14, "cmb10": 14, "stixgeneralbol": 14, "stixnonunibolita": 14, "stixnonunicod": 14, "stixsizfoursymreg": 14, "stixsizefoursym": 14, "stixsizonesymreg": 14, "stixsizeonesym": 14, "cmex10": 14, "boldobliqu": 14, "cmss10": 14, "cmtt10": 14, "stixsizthreesymbol": 14, "stixsizethreesym": 14, "stixsizthreesymreg": 14, "097": 14, "stixnonuni": 14, "stixsiztwosymbol": 14, "stixsizetwosym": 14, "stixsizonesymbol": 14, "cmr10": 14, "cmsy10": 14, "cmmi10": 14, "stixnonuniita": 14, "stixsizfoursymbol": 14, "dejavusansdisplai": 14, "098": 14, "bold": [14, 21], "stixnonunibol": 14, "33499999999999996": 14, "stixgeneralbolita": 14, "stixsiztwosymreg": 14, "usr": 14, "share": [14, 16], "truetyp": 14, "dejavuserifcondens": 14, "condens": 14, "535": 14, "ubuntu": 14, "099": 14, "250": 14, "1925": 14, "extralight": 14, "24": [0, 14, 27], "ubuntumono": 14, "ri": 14, "bi": 14, "li": 14, "145": 14, "dejavusanscondens": 14, "5349999999999999": 14, "101": [0, 14, 32], "mi": 14, "dejavumathtexgyr": 14, "tex": 14, "gyre": 14, "050000": 14, "102": [0, 14], "103": [0, 14], "104": 14, "105": [0, 14], "106": [0, 14], "107": [0, 14], "108": [0, 14], "109": [0, 14], "110": [0, 14, 32], "434999999999999": 14, "111": 14, "112": 14, "113": [0, 14], "114": 14, "35": [9, 14, 32], "115": [0, 14], "634999999999998": 14, "116": 14, "117": 14, "118": 14, "119": 14, "120": 14, "4775": 14, "525": 14, "43": 14, "121": 14, "122": 14, "123": 14, "124": 14, "125": 14, "126": 14, "127": 14, "128": [14, 25], "129": 14, "130": 14, "131": 14, "132": 14, "133": 14, "134": 14, "135": 14, "136": 14, "137": 14, "138": 14, "139": 14, "141": 14, "142": 14, "143": 14, "144": 14, "146": 14, "147": 14, "148": 14, "149": 14, "152": 14, "153": 14, "154": 14, "156": 14, "157": 14, "158": 14, "159": 14, "160": 14, "161": 14, "162": 14, "163": 14, "164": 14, "165": 14, "166": 14, "167": 14, "168": 14, "176": 14, "177": [14, 32], "178": 14, "180": 14, "181": 14, "182": 14, "183": 14, "184": 14, "185": 14, "186": 14, "187": 14, "188": 14, "189": 14, "190": 14, "191": 14, "192": [14, 25], "194": 14, "195": 14, "196": 14, "197": 14, "198": 14, "199": 14, "201": 14, "202": 14, "203": 14, "204": 14, "205": 14, "206": 14, "207": 14, "208": 14, "209": 14, "210": 14, "211": 14, "212": 14, "213": 14, "214": 14, "215": 14, "216": 14, "217": 14, "218": 14, "219": 14, "220": 14, "221": 14, "222": 14, "223": [14, 25], "224": [14, 25], "225": 14, "226": 14, "227": 14, "228": 14, "229": 14, "230": 14, "231": 14, "15000000000000002": 14, "232": 14, "233": 14, "234": 14, "43499999999999994": 14, "235": 14, "236": 14, "35000000000000003": 14, "237": 14, "635": 14, "150000": 14, "238": 14, "239": [14, 32], "240": 14, "242": 14, "243": 14, "244": 14, "246": 14, "247": 14, "248": 14, "251": 14, "252": 14, "253": 14, "254": 14, "255": 14, "256": [14, 25], "257": 14, "489": 14, "490": 14, "491": 14, "504": 14, "505": [14, 23], "506": 14, "563": 14, "564": [14, 26], "565": 14, "579": [14, 19], "588": 14, "589": 14, "606": 14, "607": 14, "608": 14, "615": 14, "616": 14, "617": 14, "639": 14, "1878298303069305e": 14, "007849231575932487": 14, "647": 14, "648": 14, "737": 14, "738": [14, 32], "739": 14, "749": 14, "751": [14, 32], "785": 14, "786": 14, "800": 14, "801": 14, "802": 14, "811": 14, "812": [14, 21], "813": 14, "814": 14, "839": 14, "840": 14, "841": 14, "842": 14, "854": 14, "855": 14, "856": 14, "857": 14, "894": 14, "1285681927947236e": 14, "016180744575740688": 14, "911": 14, "013": 14, "014": 14, "015": 14, "016": 14, "032": 14, "033": 14, "035": 14, "052": 14, "054": 14, "055": 14, "056": 14, "plot_digit": [14, 29], "rnd": [15, 26], "euclidean": 15, "plot_clust": 15, "km_": 15, "lab": 15, "o": [15, 16, 17, 18, 25, 28], "kml1": 15, "kmeansl1l2kmeansl1l2": 15, "54980535": [], "38482594": [], "35430432": [], "36867686": [], "kmeanskmean": 15, "385": 32, "plot_kmeans_l1": [15, 29], "partit": [16, 17], "wonder": 16, "And": 16, "explain": 16, "nl": 16, "sashat": [16, 17], "me": [16, 17], "2017": [0, 16, 17, 33], "colormaps_refer": [16, 17], "mesh": [16, 17, 18], "boundari": [16, 17], "set_xlabel": [16, 17, 18], "sepal": [16, 17, 18], "set_ylabel": [16, 17, 18], "650000095367432": 16, "4750000834465027": 16, "025000095367432": 16, "1250000596046448": 16, "071": 16, "plot_leave_neighbor": [16, 29], "randomforestclassifi": 17, "randint": 17, "mat": 17, "ym": 17, "cx": 17, "multi_class": 17, "multinomi": 17, "quit": [17, 20, 25], "clk": 17, "e_solv": 17, "e_multi_class": 17, "1412": 17, "c_algorithm": 17, "c_copy_x": 17, "c_init": 17, "c_max_it": 17, "c_n_cluster": 17, "c_n_init": 17, "c_random_st": 17, "c_tol": 17, "c_verbos": 17, "e_c": 17, "e_class_weight": 17, "e_dual": 17, "e_fit_intercept": 17, "e_intercept_sc": 17, "e_l1_ratio": 17, "e_max_it": 17, "e_n_job": 17, "e_penalti": 17, "e_random_st": 17, "e_tol": 17, "e_verbos": 17, "e_warm_start": 17, "classifierafterkmeansclassifierafterkmean": 17, "288923": [], "58013945": [], "32984751": [], "01322241": [], "cricl": 17, "sc": 17, "nb_cluster": 17, "6450": [], "6500": [], "7475": [], "8775": [], "9000": [], "rf": 17, "randomforestclassifierrandomforestclassifi": 17, "431": [], "plot_logistic_regression_clust": [17, 29], "easier": 18, "concept": [18, 26], "seaborn": 18, "auc": 18, "roc_curv": 18, "pair": [18, 25], "set_xtick": [18, 21], "set_ytick": [18, 21], "logreg": 18, "most_frequ": 18, "piece4": 18, "backend": [18, 19], "sequentialbackend": [18, 19], "concurr": [18, 19], "worker": [18, 19], "done": [18, 19, 24], "finish": [18, 19], "piecewiseclassifierpiecewiseclassifi": 18, "kbinsdiscretizerkbinsdiscret": [18, 19], "dummyclassifierdummyclassifi": 18, "transform_bin": [18, 19], "set_index": 18, "scatterplot": 18, "hue": 18, "palett": 18, "set1": [18, 21], "marker": 18, "_oldcor": [18, 24], "1498": [18, 24], "is_categorical_dtyp": [18, 24], "deprec": [0, 18, 24], "isinst": [18, 24], "categoricaldtyp": [18, 24], "pd": [18, 24], "four": 18, "frequent": 18, "n4": [18, 19], "piece9": 18, "n9": 18, "roc": 18, "curv": 18, "plot_roc_curv": 18, "bgrcmyk": 18, "ic": 18, "fpr": 18, "tpr": 18, "roc_auc": 18, "y_score": 18, "_": [18, 19, 20, 21, 25, 28], "navi": 18, "linestyl": 18, "plotnam": 18, "join": [18, 25], "p4": 18, "p9": 18, "piecet": 18, "n14": 18, "18": [0, 9, 18, 23, 27, 30], "plot_piecewise_classif": [18, 29], "illustr": 19, "toi": [19, 20], "npr": [19, 20], "piecewiseregressorpiecewiseregressor": 19, "decisiontreeregressordecisiontreeregressor": [19, 20, 24], "linearregressionlinearregress": [19, 23, 24, 26, 28], "1886224": 19, "99866059": 19, "28428699": 19, "42628332": 19, "5922755": 19, "n2": 19, "0x7f0e266b9b40": 19, "0x7f0e26594f10": 19, "0x7f0e2640f670": 19, "0x7f0e264a6560": 19, "enforc": 19, "despit": 19, "fast": [19, 20], "1533": 19, "15it": 19, "dummyregressordummyregressor": 19, "0x7f0e264c9ab0": 19, "pr": [19, 20], "m5p": [19, 20], "co": [19, 20], "com": [19, 25], "13106": 19, "pull": 19, "13732": 19, "ankonzoid": 19, "learningx": 19, "master": 19, "advanced_ml": 19, "model_tre": 19, "3e": 19, "plot_piecewise_linear_regress": [19, 29], "coupl": [20, 25, 28], "possibl": [20, 24, 25], "tutori": [20, 32], "extens": 20, "0938218": 20, "603082": 20, "09844053": 20, "8745272": 20, "15558524": 20, "0x7efcb04ee140": 20, "model2": 20, "lt": [20, 26], "0x5648f2a90fa0": 20, "gt": [20, 26], "07928335": 20, "37381102": 20, "77155748": 20, "55809551": 20, "nwith": 20, "0x7efcb0598c10": 20, "realli": 20, "meant": 20, "bascial": 20, "becaus": 20, "evalu": [20, 21, 26], "impur": 20, "reduct": 20, "under": 20, "being": 20, "global": 20, "0019556138000007195": 20, "0009423924172708237": 20, "min_exec": 20, "0008730760000003102": 20, "max_exec": 20, "0039576280000005685": 20, "019556138000007196": 20, "context_s": 20, "1176": 20, "warmup_tim": 20, "0014233000000558604": 20, "012786253599999553": 20, "0030817916498254655": 20, "008734299999998711": 20, "01898910200000046": 20, "12786253599999553": 20, "014135100000089551": 20, "cost": 20, "lot": [20, 28], "_mse": 20, "cut": 20, "betwe": 20, "start": 20, "cdef": 20, "void": 20, "_mean": 20, "size_t": 20, "double_t": 20, "nogil": 20, "sample_wi": 20, "sample_w": 20, "squ": 20, "sample_i": 20, "rewrot": 20, "my": [20, 26], "closer": 20, "demand": 20, "sample_wy_left": 20, "side": 20, "lower": 20, "disappear": 20, "sample_w_left": 20, "sample_wy2_left": 20, "formula": [20, 24], "true_mean": 20, "model3": 20, "0x7efcb03ffcd0": 20, "002707601000000523": 20, "0005112412251705095": 20, "0017382620000012138": 20, "003291436000001795": 20, "02707601000000523": 20, "0023509000000103697": 20, "bigger": [20, 24], "fix": [0, 20], "x_train3": 20, "y_train3": 20, "hstack": [20, 22, 23], "2250": 20, "0020086470000003375": 20, "0004815767809362375": 20, "001630857999998625": 20, "0029482740000003104": 20, "020086470000003374": 20, "0033651999999619875": 20, "reinstanci": 20, "sinc": 20, "007336418399999728": 20, "0017915009585068127": 20, "004666116000000784": 20, "010466213999998218": 20, "07336418399999728": 20, "004179399999998168": 20, "almost": [20, 23, 26], "magnitud": 20, "investig": 20, "r_1": 20, "r_2": 20, "approxm": 20, "beta": 20, "yet": [20, 21, 34], "kept": 20, "betas_": 20, "leaves_mapping_": 20, "507": 20, "plot_piecewise_linear_regression_criterion": [20, 29], "afterward": 21, "never": 21, "saw": 21, "handwritten": 21, "isomap": 21, "offsetbox": 21, "kneighborsregressor": 21, "load_digit": 21, "xd": 21, "yd": 21, "1083": 21, "64": [0, 21, 25], "imgs_train": 21, "imgs_test": 21, "pca": 21, "x_train_tsn": 21, "plot_embed": 21, "xp": 21, "fontdict": 21, "annotationbbox": 21, "thumbnail": 21, "shown_imag": 21, "dist": 21, "4e": 21, "don": 21, "too": 21, "r_": 21, "imagebox": 21, "offsetimag": 21, "gray_r": 21, "add_artist": 21, "ptsne": 21, "_multilayer_perceptron": 21, "hasn": 21, "predictabletsnepredictabletsn": 21, "mlpregressormlpregressor": [21, 22], "tsnetsn": 21, "x_train_tsne2": 21, "x_test_tsne2": 21, "01796614609143551": [], "ptsne_knn": 21, "kneighborsregressorkneighborsregressor": 21, "standardscalerstandardscal": [21, 28], "nstandardscal": 21, "seem": [21, 26], "005211733": [], "004": [], "plot_predictable_tsn": [21, 29], "_backprop": 22, "eps1": [22, 23], "900": [22, 23], "eps2": [22, 23, 24], "ep": [22, 23, 24], "clq": [22, 23, 32], "quantilemlpregressorquantilemlpregressor": 22, "349677": 22, "769177": 22, "366502": 22, "844413": 22, "420352": 22, "022102": 22, "629644": 22, "097791": 22, "452161": 22, "126482": 22, "744297": 22, "208908": 22, "331717": 22, "768717": 22, "297796": 22, "778615": 22, "075846": 22, "875569": 22, "241036": 22, "782656": 22, "y1": [22, 23], "y2": [22, 23, 26], "0x7f0edefa5000": 22, "640": 22, "plot_quantile_mlpregress": [22, 29], "482475": [], "261593": [], "773361": [], "253769": [], "605422": [], "687809": [], "245174": [], "672273": [], "327651": [], "756978": [], "179221": [], "726762": [], "634917": [], "762338": [], "358363": [], "772672": [], "214390": [], "378734": [], "744576": [], "341228": [], "0x7f0ed5580c70": [], "clearli": 23, "less": [23, 25], "sensibl": 23, "extrema": 23, "oberserv": 23, "968": [], "257683761709": [], "605": [], "7969948022397": [], "4073399889057": [], "4633020597461": [], "7708113950059": [], "4008126072556": [], "562": [], "9511920528207": [], "6382141424309": [], "4133158057076": [], "2398946013642": [], "1272444164435": [], "0324276301016": [], "561": [], "9495704397514": [], "8805750360854": [], "8434994822791": [], "8109915065676": [], "7938761946014": [], "775628751224": [], "7606173092812": [], "7480312679455": [], "quantilelinearregressionquantilelinearregress": 23, "5617480312679455": [], "1200": 23, "qu": 23, "q": 23, "0x7f0efbcf10c0": [], "762": [], "plot_quantile_regress": [23, 29], "epsilon_1": 24, "eta": 24, "epsilon_2": 24, "law": 24, "sim": 24, "mathcal": 24, "alwai": [24, 26], "binomi": 24, "randn": [24, 26, 28], "sn": 24, "gaussian_process": 24, "kernel": 24, "rbf": 24, "constantkernel": 24, "whitekernel": 24, "line2d": 24, "0x7efcfce8f610": 24, "learner": [0, 24], "lin": 24, "intervalregressorintervalregressor": 24, "sorted_x": 24, "bootstrapped_pr": 24, "min_pr": 24, "max_pr": 24, "0x7efcfcec7d90": 24, "lin2": 24, "lin3": 24, "pred2": 24, "bootstrapped_pred2": 24, "min_pred2": 24, "max_pred2": 24, "pred3": 24, "bootstrapped_pred3": 24, "min_pred3": 24, "max_pred3": 24, "0x7efcab3886a0": 24, "pred_tre": 24, "b_pred_tre": 24, "min_pred_tre": 24, "max_pred_tre": 24, "0x7efcfcef5ba0": 24, "forest": 24, "95": [0, 24], "q1": 24, "q2": 24, "0x7efcf284b5e0": 24, "med": 24, "q0": 24, "0x7efcf291bca0": 24, "theorit": 24, "df_train": 24, "jointplot": 24, "reg": [24, 26], "ax_joint": 24, "ro": 24, "1119": 24, "use_inf_as_na": 24, "inf": 24, "option_context": 24, "0x7efcfcfa38e0": 24, "gaussian": 24, "basic": 24, "introductori": 24, "1e3": 24, "1e2": 24, "gp": 24, "n_restarts_optim": 24, "length_scal": 24, "noise_level": 24, "gaussianprocessregressorgaussianprocessregressor": 24, "y_pred": [6, 24], "return_std": 24, "interval": 24, "0x7efcfd6d6b30": 24, "331": 24, "plot_regression_confidence_interv": [24, 29], "pixel": 25, "level": 25, "were": 25, "extract": [0, 25], "paper": 25, "squeezenet": 25, "alexnet": 25, "accuraci": [25, 26], "50x": 25, "fewer": 25, "5mb": 25, "torchvis": 25, "dataload": 25, "concatdataset": 25, "unzip_fil": 25, "squeezenet1_0_weight": 25, "squeezenet1_0": 25, "imagenet1k_v1": 25, "sequenti": 25, "conv2d": 25, "kernel_s": 25, "stride": 25, "inplac": [6, 25], "maxpool2d": 25, "pad": 25, "dilat": 25, "ceil_mod": 25, "fire": 25, "squeez": 25, "squeeze_activ": 25, "expand1x1": 25, "expand1x1_activ": 25, "expand3x3": 25, "expand3x3_activ": 25, "32": [9, 25, 27], "384": 25, "512": 25, "dropout": 25, "adaptiveavgpool2d": 25, "output_s": 25, "userprofil": 25, "checkpoint": 25, "re": 25, "listdir": 25, "pytorch": [0, 25], "forward": 25, "backward": 25, "propag": 25, "backpropag": 25, "known": [25, 26], "dyanmic": 25, "pixabai": 25, "simag": 25, "makedir": 25, "sdpython": 25, "ref": 25, "_doc": 25, "dog": 25, "file": [0, 25, 29, 33], "where_to": 25, "filenotfounderror": 25, "unzip": 25, "1151519__480": 25, "jpg": 25, "resiz": 25, "essay": 25, "seulement": 25, "centercrop": 25, "totensor": 25, "imagefold": 25, "datapoint": 25, "locat": 25, "standardtransform": 25, "interpol": 25, "bilinear": 25, "max_siz": 25, "antialia": 25, "num_work": 25, "0x7f7db7c06140": [], "img_seq": 25, "tensor": 25, "transpos": [0, 25], "imshow": 25, "off": [25, 26], "randomrot": 25, "expand": 25, "sampler": 25, "concaten": 25, "loader": 25, "trans1": 25, "trans2": 25, "grayscal": 25, "num_output_channel": 25, "imgs1": 25, "imgs2": 25, "52": 25, "abl": 25, "competit": 25, "imagenet": 25, "But": [25, 26], "88": [0, 25], "slightli": 25, "relat": [9, 25], "particular": [25, 33], "daark": 25, "background": [0, 25], "dark": 25, "224x224": 25, "ingest": 25, "Its": 25, "detach": 25, "3695574": [], "188111": [], "181097": [], "157925": [], "510347": [], "997399": [], "2011385": [], "019224": [], "324328": [], "810981": [], "all_output": 25, "nearestneighborsnearestneighbor": 25, "one_output": 25, "53764956": [], "15922004": [], "69": 0, "3442253": [], "3939867": [], "49542968": [], "disp": 25, "2083492__480": 25, "1765910__480": 25, "2863719__480": 25, "2917592__480": 25, "2684073__480": 25, "exactli": 25, "rewrit": 25, "captur": 25, "pretrain": 25, "been": [25, 27], "leverag": 25, "million": 25, "imagin": 25, "pairwis": 25, "img_i": 25, "img_j": 25, "partial": 25, "plot_search_images_torch": [25, 29], "pickl": 26, "picklingerror": 26, "_test": 26, "ignore_warn": 26, "rndn": 26, "ab": 26, "y_tran": 26, "regr_tran": 26, "func": 26, "inverse_func": 26, "transformedtargetregressortransformedtargetregressor": 26, "thing": [26, 27], "regr_trans2": 26, "transformedtargetregressor2transformedtargetregressor2": 26, "by1": 26, "dump": 26, "by2": 26, "tr1": 26, "tr2": 26, "honest": 26, "did": 26, "pickabl": 26, "regr_trans3": 26, "0x7efce9a9fe20": [], "lookup": 26, "__main__": 26, "One": 26, "question": 26, "sometim": [0, 26, 27], "student": 26, "8752883470101485": 26, "8325991189427313": 26, "valueerror": 26, "mix": [26, 28], "multiclass": 26, "littl": [26, 27], "bit": 26, "perf_reg": 26, "perf_clr": 26, "classificaton": 26, "sai": 26, "know": [26, 27], "round": [26, 28], "float2int": 26, "fct2float2int": 26, "evaluation2": 26, "acc_reg": 26, "acc_clr": 26, "rnd2": 26, "perf_reg2": 26, "perf_clr2": 26, "acc_reg2": 26, "acc_clr2": 26, "indecis": 26, "As": [26, 27], "strang": 26, "win": 26, "tini": 26, "immun": 26, "9609053497942387": 26, "y_train_permut": 26, "y_test_permut": 26, "regp": 26, "logp": 26, "43952802359882015": 26, "9626352015732547": 26, "luck": 26, "regpt": 26, "logpt": 26, "reg_perm": 26, "reg_scor": 26, "log_perm": 26, "log_scor": 26, "759259": 26, "960905": 26, "061728": 26, "plot_sklearn_transformed_target": [26, 29], "storag": 27, "21": [0, 9, 27], "ambigu": 27, "countvectorizercountvector": 27, "traceablecountvectorizertraceablecountvector": 27, "exact": 27, "explicit": 27, "tfidfvectorizertfidfvector": 27, "32940523": 27, "25970687": 27, "24528087": 27, "19338226": 27, "25453384": 27, "3228439": 27, "fir": 27, "cume": 27, "nt": 27, "docu": 27, "ment": 27, "hi": 27, "traceabletfidfvectorizertraceabletfidfvector": 27, "30th": 27, "fact": 27, "express": [27, 33], "insight": [27, 32], "easili": 27, "053": 27, "plot_traceable_ngrams_tfidf": [27, 29], "vizual": 28, "pil": 28, "sphinx_runpython": 28, "runpython": 28, "run_cmd": 28, "polynomialfeatur": [0, 28], "trick": 28, "digraph": 28, "sch0": 28, "f0": 28, "f1": 28, "f2": 28, "f3": 28, "record": 28, "fontsiz": 28, "node1": 28, "union": 28, "box": 28, "fill": 28, "cyan": 28, "sch1": 28, "node2": 28, "yellow": 28, "sch2": 28, "predictedlabel": 28, "dot_fil": 28, "write": 28, "cmd": 28, "tpng": 28, "wait": 28, "pngimageplugin": 28, "pngimagefil": 28, "rgba": 28, "200x351": 28, "0x7efcd9216b30": [], "instroduc": 28, "taken": 28, "sibsp": 28, "parch": 28, "ticket": 28, "cabin": 28, "boat": 28, "bodi": 28, "dest": 28, "pipelinepipelin": 28, "columntransformercolumntransform": 28, "simpleimputersimpleimput": 28, "onehotencoderonehotencod": 28, "simplifi": 28, "graph2": 28, "591x787": 28, "0x7efcb03db820": [], "scaler2": 28, "scaler3": 28, "graph3": 28, "rgb": 28, "306x569": 28, "0x7efcb04bdff0": [], "scaler1": 28, "transformer_list": 28, "featureunionfeatureunion": 28, "scaler2standardscalerstandardscal": 28, "scaler3minmaxscalerminmaxscal": 28, "_debug": 28, "baseestimatordebuginform": 28, "99399924": [], "20542956": [], "59679838": [], "87194584": [], "94411036": [], "20373262": [], "95172468": [], "31259714": [], "84677031": [], "04637552": [], "85714469": [], "18364656": [], "20056711": [], "86844012": [], "13326861": [], "83392413": [], "52127433": [], "66464693": [], "7497051": [], "07238053": [], "35693798": [], "14832721": [], "21097905": [], "7720314": [], "82778037": [], "09389032": [], "56102774": [], "03973581": [], "5992529": [], "28789013": [], "156031": [], "51689331": [], "7122458": [], "61853241": [], "51215247": [], "59285148": [], "13480915": [], "24956969": [], "51289455": [], "97226223": [], "34293016": [], "09067473": [], "92207969": [], "73067986": [], "behav": 28, "94184471": [], "61361001": [], "9917932": [], "49277697": [], "77078886": [], "23471043": [], "95503265": [], "70420677": [], "54541616": [], "9486062": [], "825": [], "plot_visualize_pipelin": [28, 29], "execut": 29, "auto_exampl": 29, "mb": 29, "000": 29, "entri": 30, "docstr": 30, "variou": 32, "help": 32, "correl": [0, 32], "modif": 32, "faq": 32, "licens": [0, 32], "short": 32, "load_diabet": 32, "759": [], "301": 32, "043": [], "354": [], "805": 32, "267": [], "425": 32, "316": [], "851": [], "518": [], "686": [], "816": [], "519": 32, "846": [], "792": 32, "476": 32, "063": [], "274": [], "627": [], "__version__": 32, "readi": 34, "build_ts_x_i": 4, "998450": [], "142824": [], "874444": [], "817949": [], "996636": [], "372712": [], "306507": [], "870700": [], "480141": [], "999020": [], "958335": [], "761272": [], "603198": [], "969098": [], "999113": [], "263": [], "0x7f9676346950": [], "0x7f96763469e0": [], "9473684210526315": [], "36": [0, 9], "746160": [], "942984": [], "41": 0, "959938": [], "42": [], "926814": [], "883212": [], "44": 0, "903273": [], "same_row": 9, "nrow": 9, "nx": 9, "ny": 9, "nw": 9, "With": 9, "75895899": 32, "11702117": 32, "04300247": 32, "35409612": 32, "26720203": 32, "19307405": 32, "3164599": 32, "85095311": 32, "51804393": 32, "6856007": 32, "0098663": 32, "81564367": 32, "84592005": 32, "3846455": 32, "17563855": 32, "73902101": 32, "04326794": 32, "06323767": 32, "27369956": 32, "62669218": 32, "0x7feb25156170": [], "0x7feb25156200": [], "9736842105263158": [6, 30], "39266292": 17, "06235795": 17, "10099395": 17, "70001978": 17, "5525": 17, "7400": 17, "8100": 17, "8850": 17, "9300": 17, "455": 17, "0x7feb26149bd0": 26, "019": [], "0x7f8dfcff5bd0": [], "0x7f8dfcff45e0": [], "calcul": 6, "overwritten": 6, "cpu": 6, "speedup": 6, "suffici": 6, "optimis": 6, "0x7f69ddf09120": [], "0x7f69ddf088b0": [], "0x7fd66cb6c430": [], "0x7fd66cb6cb80": [], "472": [6, 30], "dev0": 32, "0x7f52bd72dfc0": [], "0x7f52bd72df30": [], "0x7f967c3957e0": [], "0x7f967c395750": [], "0x7fd870eae5f0": 28, "0x7fd8495f11e0": 28, "0x7fd8495f3430": 28, "95926992": 28, "17291168": 28, "21500399": 28, "65959391": 28, "20129562": 28, "70728345": 28, "35128658": 28, "34377977": 28, "72257271": 28, "06384891": 28, "7758477": 28, "21264841": 28, "39915003": 28, "15712885": 28, "49985028": 28, "81658768": 28, "93273564": 28, "84052872": 28, "36678292": 28, "33753408": 28, "3685058": 28, "20550215": 28, "20297738": 28, "3144253": 28, "73138767": 28, "13164183": 28, "9716819": 28, "25516": 28, "25538213": 28, "21724771": 28, "75827952": 28, "62705279": 28, "49209825": 28, "02409641": 28, "20868105": 28, "78217065": 28, "01641545": 28, "57190034": 28, "5281676": 28, "72282101": 28, "672092": 28, "63895543": 28, "17535791": 28, "29688189": 28, "80325334": 28, "2650608": 28, "53628544": 28, "00973454": 28, "45965715": 28, "63241094": 28, "22622961": 28, "20380924": 28, "87196597": 28, "34434457": 28, "012": 28, "0x7f5c0e285cf0": [], "0x7f5c0e2851b0": [], "851703": [], "947137": [], "943936": [], "798018": [], "861704": [], "739423": [], "37202202": 15, "54940515": 15, "58848151": 15, "53035491": 15, "548": 15, "773438": 23, "243858": 23, "773762": 23, "246713": 23, "454221": 23, "169176": 23, "606491": 23, "158057": 23, "839753": 23, "464771": 23, "016253": 23, "472872": 23, "019658": 23, "685327": 23, "017434": 23, "676024": 23, "112335": 23, "009066": 23, "356323": 23, "992089": 23, "0x7f5c028a8700": 23, "858": 23, "9237896197124": 23, "566": 23, "3105335432022": 23, "508": 23, "1708537485612": 23, "66768751156144": 23, "503": 23, "9779658951674": 23, "502": 23, "80817981579963": 23, "501": 23, "8780988035064": 23, "1659305166399": 23, "6053325155516": 23, "310318123856": 23, "499": 23, "9876909285035": 23, "8282333137285": 23, "69438893772525": 23, "5498443541893": 23, "4688226130957": 23, "39493187581314": 23, "3467325682446": 23, "318357568729": 23, "2963411256337": 23, "2803032754046": 23, "4992803032754046": 23, "0x7f5c0e31fa60": 23, "916": [], "0x7f984b0facb0": [], "0x7f984b0faf80": [], "0x7f9771c4c0a0": 25, "2197995": 25, "027468": 25, "754075": 25, "2620425": 25, "3206525": 25, "925042": 25, "9175375": 25, "7398133": 25, "923601": 25, "0563126": 25, "26125145": 25, "17851639": 25, "63": [0, 25], "87075424": 25, "68": 25, "82238007": 25, "71": [0, 25], "54613495": 25, "670": 25, "0x7efc188acc10": [], "0x7efc188acb80": [], "01796924427611988": 21, "0046311095": 21, "441": [21, 29], "0x7fae64b2bbe0": [], "0x7fae64b2add0": [], "998144": [], "095438": [], "870342": [], "821822": [], "092398": [], "995602": [], "336819": [], "282070": [], "874484": [], "549608": [], "998971": [], "958446": [], "794265": [], "669693": [], "971001": [], "999409": [], "0x7ff60817ae60": [], "0x7ff608178790": [], "54": [], "008285": [], "894196": [], "025875": [], "56": 0, "747212": [], "729362": [], "795867": [], "node_beta": [], "max_fun": 6, "basemultilayerperceptron": 6, "sklearn_transform_inv": 6, "0x7ff2fcd95d80": [], "0x7ff2fcd951b0": [], "const": [], "y_true": 6, "ground": 6, "truth": 6, "correct": 6, "correctli": 6, "_kmeans_constraint_": 6, "512727": [], "673619": [], "694074": [], "776635": [], "896162": [], "707133": [], "context_length": 9, "0x7f8ece5c5870": [], "0x7f8ece5c57e0": [], "later": 6, "piecewise_tree_regression_criterion_linear_fast": 6, "785894": [], "768085": [], "832342": [], "904665": [], "748435": [], "975587": [], "564910": [], "800415": [], "990378": [], "687668": [], "541456": [], "766269": [], "999141": 5, "228785": 5, "864428": 5, "795434": 5, "061974": 5, "995277": 5, "401092": 5, "305925": 5, "883611": 5, "564919": 5, "999629": 5, "957099": 5, "768674": 5, "688950": 5, "972102": 5, "999523": 5, "0x7f4b947d7130": [], "0x7f4b947d77f0": [], "443346": 9, "797024": 9, "018940": 9, "34": [0, 9], "096460": 9, "022025": 9, "872459": 9, "0x7f77a8738b80": [], "0x7f77a8739870": [], "0x7f6a5e95d510": [], "0x7f6a5e95d6c0": [], "0x7f97d8b58af0": [], "0x7f97d8b59120": [], "0x7fe6d7941510": [], "0x7fe6d79416c0": [], "0x7efbc5ba5870": [], "0x7efbc5ba56c0": [], "0x7f03eab19b40": [], "0x7f03eab19630": [], "0x7f66783555a0": [], "0x7f6678355990": [], "perplex": 0, "place": 0, "ci": 0, "_joblib_parallel_arg": 0, "pypi": 0, "releas": 0, "2dim": 0, "manylinux": 0, "sure": 0, "_apply_prediction_method": 0, "80": 0, "deciss": 0, "98": 0, "deepcopi": 0, "piecewise_decision_tre": 0, "latest": 0, "70": 0, "decisiontreelogisticregress": 0, "93": 0, "wheel": 0, "platform": 0, "modulenotfounderror": 0, "92": 0, "90": 0, "2020": 0, "87": 0, "azur": 0, "86": 0, "signatur": 0, "upgrad": 0, "82": 0, "81": 0, "skl": 0, "togeth": 0, "79": 0, "passthrough": 0, "strong": 0, "pyquickhelp": 0, "convex": 0, "move": 0, "papierstat": 0, "scikti": 0, "classifierkmean": 0, "__repr__": 0, "66": 0, "visualis": 0, "2019": 0, "gaussianprocess": 0, "65": 0, "targettransformclassifi": 0, "targettransformregressor": 0, "49": 0, "menu": 0, "bug": 0, "keyword": 0, "60": 0, "recommand": 0, "gridsearchcv": 0, "53": 0, "51": 0, "46": 0, "39": 0, "direct": 0, "38": 0, "37": 0, "interaction_onli": 0, "include_bia": 0, "renam": 0, "piecewiselinearregress": 0, "piecewiseregress": 0, "joblib": 0, "kera": 0, "impos": 0, "2018": 0, "as_matrix": 0, "stack": 0, "wrong": 0, "ensae_teaching_c": 0, "flake8": 0, "rst": 0, "highlight": 0, "ipython3": 0, "0x7f12fe553130": 6, "0x7f12fe550280": 6, "copyright": 33, "xavier": 33, "dupr\u00e9": 33, "permiss": 33, "herebi": 33, "grant": 33, "free": 33, "charg": 33, "person": 33, "softwar": 33, "restrict": 33, "merg": 33, "publish": 33, "distribut": 33, "sublicens": 33, "sell": 33, "permit": 33, "whom": 33, "furnish": 33, "subject": 33, "condit": 33, "notic": 33, "shall": 33, "substanti": 33, "portion": 33, "THE": 33, "AS": 33, "warranti": 33, "OF": 33, "OR": 33, "BUT": 33, "NOT": 33, "TO": 33, "merchant": 33, "FOR": 33, "AND": 33, "noninfring": 33, "IN": 33, "event": 33, "author": 33, "holder": 33, "BE": 33, "liabl": 33, "claim": 33, "damag": 33, "liabil": 33, "action": 33, "contract": 33, "tort": 33, "aris": 33, "connect": 33, "WITH": 33}, "objects": {"mlinsights.helpers.parameters": [[3, 0, 1, "", "format_function_call"], [3, 0, 1, "", "format_parameters"], [3, 0, 1, "", "format_value"]], "mlinsights.helpers.pipeline": [[3, 0, 1, "", "alter_pipeline_for_debugging"], [3, 0, 1, "", "enumerate_pipeline_models"]], "mlinsights.metrics.correlations": [[5, 0, 1, "", "non_linear_correlations"]], "mlinsights.mlbatch.cache_model": [[1, 1, 1, "", "MLCache"]], "mlinsights.mlbatch.cache_model.MLCache": [[1, 2, 1, "", "as_key"], [1, 2, 1, "", "cache"], [1, 2, 1, "", "count"], [1, 2, 1, "", "create_cache"], [1, 2, 1, "", "get"], [1, 2, 1, "", "get_cache"], [1, 2, 1, "", "has_cache"], [1, 2, 1, "", "items"], [1, 2, 1, "", "keys"], [1, 2, 1, "", "remove_cache"]], "mlinsights.mlbatch.pipeline_cache": [[1, 1, 1, "", "PipelineCache"]], "mlinsights.mlbatch.pipeline_cache.PipelineCache": [[1, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel._kmeans_constraint_": [[6, 0, 1, "", "_switch_clusters"]], "mlinsights.mlmodel.anmf_predictor": [[6, 1, 1, "", "ApproximateNMFPredictor"]], "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.categories_to_integers": [[6, 1, 1, "", "CategoriesToIntegers"]], "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "fit_transform"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.classification_kmeans": [[6, 1, 1, "", "ClassifierAfterKMeans"]], "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans": [[6, 2, 1, "", "decision_function"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_proba"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_params"], [6, 2, 1, "", "set_score_request"], [6, 2, 1, "", "transform_features"]], "mlinsights.mlmodel.direct_blas_lapack": [[2, 0, 1, "", "dgelss"]], "mlinsights.mlmodel.extended_features": [[6, 1, 1, "", "ExtendedFeatures"]], "mlinsights.mlmodel.extended_features.ExtendedFeatures": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_feature_names_out"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.interval_regressor": [[6, 1, 1, "", "IntervalRegressor"]], "mlinsights.mlmodel.interval_regressor.IntervalRegressor": [[6, 2, 1, "", "fit"], [6, 3, 1, "", "n_estimators_"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_all"], [6, 2, 1, "", "predict_sorted"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.kmeans_constraint": [[6, 1, 1, "", "ConstraintKMeans"]], "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans": [[6, 2, 1, "", "cluster_edges"], [6, 2, 1, "", "constraint_kmeans"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.kmeans_l1": [[6, 1, 1, "", "KMeansL1L2"]], "mlinsights.mlmodel.kmeans_l1.KMeansL1L2": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_predict_request"], [6, 2, 1, "", "set_score_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.ml_featurizer": [[6, 0, 1, "", "model_featurizer"]], "mlinsights.mlmodel.piecewise_estimator": [[6, 1, 1, "", "PiecewiseClassifier"], [6, 1, 1, "", "PiecewiseRegressor"]], "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier": [[6, 2, 1, "", "decision_function"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_proba"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor": [[6, 2, 1, "", "predict"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.piecewise_tree_regression": [[6, 1, 1, "", "PiecewiseTreeRegressor"]], "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_leaves"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_predict_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.piecewise_tree_regression_criterion": [[6, 1, 1, "", "SimpleRegressorCriterion"]], "mlinsights.mlmodel.piecewise_tree_regression_criterion_fast": [[6, 1, 1, "", "SimpleRegressorCriterionFast"]], "mlinsights.mlmodel.predictable_tsne": [[6, 1, 1, "", "PredictableTSNE"]], "mlinsights.mlmodel.predictable_tsne.PredictableTSNE": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.quantile_mlpregressor": [[6, 1, 1, "", "CustomizedMultilayerPerceptron"], [6, 1, 1, "", "QuantileMLPRegressor"], [6, 0, 1, "", "absolute_loss"]], "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor": [[6, 2, 1, "", "predict"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.quantile_regression": [[6, 1, 1, "", "QuantileLinearRegression"]], "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.sklearn_text": [[6, 1, 1, "", "NGramsMixin"], [6, 1, 1, "", "TraceableCountVectorizer"], [6, 1, 1, "", "TraceableTfidfVectorizer"]], "mlinsights.mlmodel.sklearn_text.TraceableCountVectorizer": [[6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_transform_request"]], "mlinsights.mlmodel.sklearn_text.TraceableTfidfVectorizer": [[6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_transform_request"]], "mlinsights.mlmodel.sklearn_transform_inv": [[6, 1, 1, "", "BaseReciprocalTransformer"]], "mlinsights.mlmodel.sklearn_transform_inv.BaseReciprocalTransformer": [[6, 2, 1, "", "get_fct_inv"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.sklearn_transform_inv_fct": [[6, 1, 1, "", "FunctionReciprocalTransformer"], [6, 1, 1, "", "PermutationReciprocalTransformer"]], "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer": [[6, 2, 1, "", "available_fcts"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "get_fct_inv"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_fct_inv"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "transform"]], "mlinsights.mlmodel.target_predictors": [[6, 1, 1, "", "TransformedTargetClassifier2"], [6, 1, 1, "", "TransformedTargetRegressor2"]], "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2": [[6, 3, 1, "", "classes_"], [6, 2, 1, "", "decision_function"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "predict_proba"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "score"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "set_score_request"]], "mlinsights.mlmodel.transfer_transformer": [[6, 1, 1, "", "TransferTransformer"]], "mlinsights.mlmodel.transfer_transformer.TransferTransformer": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "set_fit_request"], [6, 2, 1, "", "transform"]], "mlinsights.mltree.tree_digitize": [[10, 0, 1, "", "digitize2tree"]], "mlinsights.mltree.tree_structure": [[10, 0, 1, "", "predict_leaves"], [10, 0, 1, "", "tree_find_common_node"], [10, 0, 1, "", "tree_find_path_to_root"], [10, 0, 1, "", "tree_leave_index"], [10, 0, 1, "", "tree_leave_neighbors"], [10, 0, 1, "", "tree_node_parents"], [10, 0, 1, "", "tree_node_range"]], "mlinsights.plotting.gallery": [[7, 0, 1, "", "plot_gallery_images"]], "mlinsights.plotting.visualize": [[7, 0, 1, "", "pipeline2dot"], [7, 0, 1, "", "pipeline2str"]], "mlinsights.search_rank.search_engine_predictions": [[8, 1, 1, "", "SearchEnginePredictions"]], "mlinsights.search_rank.search_engine_predictions.SearchEnginePredictions": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "kneighbors"]], "mlinsights.search_rank.search_engine_predictions_images": [[8, 1, 1, "", "SearchEnginePredictionImages"]], "mlinsights.search_rank.search_engine_predictions_images.SearchEnginePredictionImages": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "kneighbors"]], "mlinsights.search_rank.search_engine_vectors": [[8, 1, 1, "", "SearchEngineVectors"]], "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "kneighbors"], [8, 2, 1, "", "read_zip"], [8, 2, 1, "", "to_zip"]], "mlinsights.sklapi.sklearn_base_transform_learner": [[6, 1, 1, "", "SkBaseTransformLearner"]], "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "set_params"], [6, 2, 1, "", "transform"]], "mlinsights.sklapi.sklearn_base_transform_stacking": [[6, 1, 1, "", "SkBaseTransformStacking"]], "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "set_params"], [6, 2, 1, "", "transform"]], "mlinsights.timeseries.agg": [[9, 0, 1, "", "aggregate_timeseries"]], "mlinsights.timeseries.ar": [[9, 1, 1, "", "ARTimeSeriesRegressor"]], "mlinsights.timeseries.ar.ARTimeSeriesRegressor": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "set_fit_request"], [9, 2, 1, "", "set_score_request"]], "mlinsights.timeseries.base": [[9, 1, 1, "", "BaseReciprocalTimeSeriesTransformer"], [9, 1, 1, "", "BaseTimeSeries"]], "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "get_fct_inv"], [9, 2, 1, "", "set_fit_request"], [9, 2, 1, "", "set_transform_request"], [9, 2, 1, "", "transform"]], "mlinsights.timeseries.base.BaseTimeSeries": [[9, 2, 1, "", "has_preprocessing"]], "mlinsights.timeseries.datasets": [[9, 0, 1, "", "artificial_data"]], "mlinsights.timeseries.dummies": [[9, 1, 1, "", "DummyTimeSeriesRegressor"]], "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "set_fit_request"], [9, 2, 1, "", "set_score_request"]], "mlinsights.timeseries.metrics": [[9, 0, 1, "", "ts_mape"]], "mlinsights.timeseries.patterns": [[9, 0, 1, "", "find_ts_group_pattern"]], "mlinsights.timeseries.plotting": [[9, 0, 1, "", "plot_week_timeseries"]], "mlinsights.timeseries.utils": [[9, 0, 1, "", "build_ts_X_y"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"speed": 1, "up": 1, "batch": 1, "train": [1, 25], "mlcach": 1, "pipelinecach": 1, "paramet": [1, 6, 9], "return": [1, 6, 9], "bla": 2, "lapack": 2, "us": [2, 6, 30], "function": [2, 17], "dgelss": 2, "helper": [3, 6], "format": 3, "pipelin": [3, 6, 28, 30], "api": [4, 6], "metric": 5, "comput": [5, 20, 28, 29], "non": 5, "linear": [5, 19, 20, 24], "correl": 5, "machin": 6, "learn": [6, 18, 19, 25, 27, 28, 30, 32], "model": [6, 25, 28], "model_featur": 6, "cluster": [6, 15, 17], "constraintkmean": 6, "kmeansl1l2": 6, "trainer": 6, "classifierafterkmean": 6, "intervalregressor": 6, "approximatenmfpredictor": 6, "piecewiseclassifi": 6, "piecewiseregressor": 6, "piecewisetreeregressor": 6, "quantilemlpregressor": 6, "quantilelinearregress": 6, "transformedtargetclassifier2": 6, "transformedtargetregressor2": [6, 26], "exampl": [6, 11, 13, 14, 23, 27, 28, 30], "transform": [6, 26], "categoriestointeg": [6, 30], "dictvector": [6, 30], "extendedfeatur": 6, "functionreciprocaltransform": 6, "permutationreciprocaltransform": 6, "predictabletsn": 6, "transfertransform": 6, "traceablecountvector": 6, "traceabletfidfvector": 6, "explor": 6, "skbasetransformlearn": 6, "two": [6, 30], "learner": [6, 30], "same": [6, 30], "skbasetransformstack": 6, "stack": [6, 30], "de": [6, 30], "plusieur": [6, 30], "dan": [6, 30], "un": [6, 30], "scikit": [6, 18, 19, 27, 28, 30, 32], "c": 6, "simpleregressorcriterion": 6, "simpleregressorcriterionfast": 6, "linearregressorcriterion": 6, "plot": [7, 9, 14, 17], "search_rank": 8, "timeseri": 9, "dataset": [9, 13, 15, 17, 18], "experiment": 9, "manipul": 9, "predict": [9, 21], "tree": [10, 13, 14, 16, 19, 24], "dig": 10, "structur": 10, "experi": 10, "exercis": 10, "galleri": 11, "constraint": 12, "kmean": [12, 15], "data": [12, 19, 20, 24], "standard": 12, "decis": [13, 16, 19, 24], "logist": [13, 17, 18], "regress": [13, 17, 18, 19, 20, 23, 24], "iri": [13, 16, 18], "decisiontreelogisticregress": 13, "A": [13, 16, 17], "first": [13, 18], "anoth": [13, 21, 26], "design": 13, "fail": 13, "leav": [13, 16], "zone": 13, "numpi": 14, "digit": 14, "simpl": [14, 15, 16, 23, 28], "benchmark": 14, "norm": 15, "l1": 15, "classic": [15, 18], "when": 15, "ar": 15, "complet": 15, "differ": 15, "close": 16, "On": 16, "logisticregress": 17, "dummi": 17, "convex": 17, "One": 17, "classif": [17, 18], "2d": 17, "k": 17, "mean": 17, "variat": 17, "random": 17, "forest": 17, "piecewis": [18, 19, 20], "predictor": [18, 19, 21], "kbinsdiscret": 19, "next": [19, 20], "custom": 20, "decisiontreeregressor": 20, "adapt": 20, "implement": 20, "time": [20, 29], "better": 20, "criterion": 20, "t": 21, "sne": 21, "mnist": 21, "repeat": 21, "quantil": [22, 23, 24], "mlpregressor": 22, "variou": 23, "confid": 24, "interv": 24, "some": 24, "higher": 24, "With": 24, "seaborn": 24, "gaussianprocessregressor": 24, "search": 25, "imag": 25, "deep": 25, "torch": 25, "get": 25, "pre": 25, "raw": 25, "among": 25, "The": [25, 26], "idea": 25, "engin": 25, "go": 25, "further": 25, "target": 26, "transformedtargetregressor": 26, "why": 26, "classifi": 26, "class": 26, "permut": 26, "traceabl": 27, "n": 27, "gram": 27, "tf": 27, "idf": 27, "countvector": 27, "version": 27, "funni": 27, "tfidfvector": 27, "mlinsight": [27, 32], "visual": 28, "complex": 28, "featureunion": 28, "intermedi": 28, "output": 28, "faq": 31, "tricki": 32, "document": 32, "more": 32, "licens": 33, "tutori": 34, "customizedmultilayerperceptron": 6, "ngramsmixin": 6, "basereciprocaltransform": 6, "absolute_loss": [], "hidden": 6, "_switch_clust": 6, "basereciprocaltimeseriestransform": 9, "build_ts_x_i": 9, "basetimeseri": 9, "dummytimeseriesregressor": 9, "artimeseriesregressor": 9, "ts_mape": 9, "loss": 6, "searchenginevector": 8, "searchenginepredict": 8, "searchenginepredictionimag": 8, "chang": 0, "log": 0, "0": 0, "5": 0, "3": 0, "649": 0, "2022": 0, "07": 0, "22": 0, "2": 0, "35mb": 0, "631": 0, "05": 0, "19": 0, "21mb": 0, "614": 0, "2021": 0, "10": 0, "02": 0, "1": 0, "73mb": 0, "606": 0, "08": 0}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Speed up batch training": [[1, "speed-up-batch-training"]], "MLCache": [[1, "mlcache"]], "PipelineCache": [[1, "pipelinecache"]], "Parameters": [[1, "parameters"], [9, "parameters"], [9, "id1"], [9, "id3"], [9, "id5"], [9, "id7"], [9, "id9"], [6, "parameters"], [6, "id1"], [6, "id3"], [6, "id5"], [6, "id7"], [6, "id9"], [6, "id11"], [6, "id13"], [6, "id15"], [6, "id17"], [6, "id19"], [6, "id21"], [6, "id23"], [6, "id25"], [6, "id27"], [6, "id29"], [6, "id31"], [6, "id33"], [6, "id35"], [6, "id37"], [6, "id39"], [6, "id42"], [6, "id44"], [6, "id46"], [6, "id49"], [6, "id51"], [6, "id53"], [6, "id55"], [6, "id57"], [6, "id59"], [6, "id62"], [6, "id64"], [6, "id67"], [6, "id69"]], "Returns": [[1, "returns"], [9, "returns"], [9, "id2"], [9, "id4"], [9, "id6"], [9, "id8"], [9, "id10"], [6, "returns"], [6, "id2"], [6, "id4"], [6, "id6"], [6, "id8"], [6, "id10"], [6, "id12"], [6, "id14"], [6, "id16"], [6, "id18"], [6, "id20"], [6, "id22"], [6, "id24"], [6, "id26"], [6, "id28"], [6, "id30"], [6, "id32"], [6, "id34"], [6, "id36"], [6, "id38"], [6, "id43"], [6, "id45"], [6, "id50"], [6, "id52"], [6, "id54"], [6, "id56"], [6, "id58"], [6, "id60"], [6, "id63"], [6, "id65"], [6, "id68"], [6, "id70"]], "Blas & Lapack": [[2, "blas-lapack"]], "Lapack": [[2, "lapack"]], "Use lapack function dgelss": [[2, "indexexref-ex0"]], "Helpers": [[3, "helpers"], [6, "helpers"]], "Formatting": [[3, "formatting"]], "Pipeline": [[3, "pipeline"]], "API": [[4, "api"]], "metrics": [[5, "metrics"]], "Compute non linear correlations": [[5, "indexexref-ex0"]], "plotting": [[7, "plotting"]], "search_rank": [[8, "search-rank"]], "SearchEngineVectors": [[8, "searchenginevectors"]], "SearchEnginePredictions": [[8, "searchenginepredictions"]], "SearchEnginePredictionImages": [[8, "searchenginepredictionimages"]], "Timeseries": [[9, "timeseries"]], "Datasets": [[9, "datasets"]], "Experimentation": [[9, "experimentation"]], "Manipulation": [[9, "manipulation"]], "Plotting": [[9, "plotting"], [14, "plotting"]], "Prediction": [[9, "prediction"]], "BaseReciprocalTimeSeriesTransformer": [[9, "basereciprocaltimeseriestransformer"]], "build_ts_X_y": [[9, "build-ts-x-y"]], "BaseTimeSeries": [[9, "basetimeseries"]], "DummyTimeSeriesRegressor": [[9, "dummytimeseriesregressor"]], "ARTimeSeriesRegressor": [[9, "artimeseriesregressor"]], "ts_mape": [[9, "ts-mape"]], "Trees": [[10, "trees"]], "Digging into the tree structure": [[10, "digging-into-the-tree-structure"]], "Experiments, exercise": [[10, "experiments-exercise"]], "Examples Gallery": [[11, "examples-gallery"]], "Constraint KMeans": [[12, "constraint-kmeans"], [12, "id1"]], "Data": [[12, "data"]], "Standard KMeans": [[12, "standard-kmeans"]], "Decision Tree and Logistic Regression": [[13, "decision-tree-and-logistic-regression"]], "Iris dataset and logistic regression": [[13, "iris-dataset-and-logistic-regression"]], "DecisionTreeLogisticRegression": [[13, "decisiontreelogisticregression"]], "A first example": [[13, "a-first-example"]], "Another example designed to fail": [[13, "another-example-designed-to-fail"]], "Leave zones": [[13, "leave-zones"]], "numpy.digitize as a tree": [[14, "numpy-digitize-as-a-tree"]], "Simple example": [[14, "simple-example"], [23, "simple-example"]], "Benchmark": [[14, "benchmark"]], "KMeans with norm L1": [[15, "kmeans-with-norm-l1"]], "Simple datasets": [[15, "simple-datasets"]], "Classic KMeans": [[15, "classic-kmeans"]], "KMeans with L1 norm": [[15, "kmeans-with-l1-norm"]], "When clusters are completely different": [[15, "when-clusters-are-completely-different"]], "Close leaves in a decision trees": [[16, "close-leaves-in-a-decision-trees"]], "A simple tree": [[16, "a-simple-tree"]], "On Iris": [[16, "on-iris"]], "LogisticRegression and Clustering": [[17, "logisticregression-and-clustering"]], "A dummy datasets and not convex": [[17, "a-dummy-datasets-and-not-convex"]], "One function to plot classification in 2D": [[17, "one-function-to-plot-classification-in-2d"]], "Logistic Regression": [[17, "logistic-regression"]], "Logistic Regression and k-means": [[17, "logistic-regression-and-k-means"]], "Variation": [[17, "variation"]], "Random Forest": [[17, "random-forest"]], "Piecewise classification with scikit-learn predictors": [[18, "piecewise-classification-with-scikit-learn-predictors"]], "Iris dataset and first logistic regression": [[18, "iris-dataset-and-first-logistic-regression"]], "Piecewise classication": [[18, "piecewise-classication"]], "Piecewise linear regression with scikit-learn predictors": [[19, "piecewise-linear-regression-with-scikit-learn-predictors"]], "Piecewise data": [[19, "piecewise-data"], [20, "piecewise-data"]], "Piecewise Linear Regression with a decision tree": [[19, "piecewise-linear-regression-with-a-decision-tree"]], "Piecewise Linear Regression with a KBinsDiscretizer": [[19, "piecewise-linear-regression-with-a-kbinsdiscretizer"]], "Next": [[19, "next"], [20, "next"]], "Custom DecisionTreeRegressor adapted to a linear regression": [[20, "custom-decisiontreeregressor-adapted-to-a-linear-regression"]], "DecisionTreeRegressor": [[20, "decisiontreeregressor"]], "DecisionTreeRegressor with custom implementation": [[20, "decisiontreeregressor-with-custom-implementation"]], "Computation time": [[20, "computation-time"]], "Better implementation": [[20, "better-implementation"]], "Criterion adapted for a linear regression": [[20, "criterion-adapted-for-a-linear-regression"]], "Predictable t-SNE": [[21, "predictable-t-sne"]], "t-SNE on MNIST": [[21, "t-sne-on-mnist"]], "Repeatable t-SNE": [[21, "repeatable-t-sne"]], "Repeatable t-SNE with another predictor": [[21, "repeatable-t-sne-with-another-predictor"]], "Quantile MLPRegressor": [[22, "quantile-mlpregressor"]], "Quantile Regression": [[23, "quantile-regression"]], "Regression with various quantiles": [[23, "regression-with-various-quantiles"]], "Regression with confidence interval": [[24, "regression-with-confidence-interval"]], "Some data": [[24, "some-data"]], "Confidence interval with a linear regression": [[24, "confidence-interval-with-a-linear-regression"]], "Higher confidence interval": [[24, "higher-confidence-interval"]], "With decision trees": [[24, "with-decision-trees"]], "Regression quantile": [[24, "regression-quantile"]], "With seaborn": [[24, "with-seaborn"]], "GaussianProcessRegressor": [[24, "gaussianprocessregressor"]], "Search images with deep learning (torch)": [[25, "search-images-with-deep-learning-torch"]], "Get a pre-trained model": [[25, "get-a-pre-trained-model"]], "Images": [[25, "images"]], "Raw images": [[25, "raw-images"]], "Search among images": [[25, "search-among-images"]], "The idea of the search engine": [[25, "the-idea-of-the-search-engine"]], "Going further": [[25, "going-further"]], "Transformed Target": [[26, "transformed-target"]], "TransformedTargetRegressor": [[26, "id1"]], "TransformedTargetRegressor2": [[26, "transformedtargetregressor2"], [6, "transformedtargetregressor2"]], "Why another?": [[26, "why-another"]], "Classifier and classes permutation": [[26, "classifier-and-classes-permutation"]], "The but\u2026": [[26, "the-but"]], "Traceable n-grams with tf-idf": [[27, "traceable-n-grams-with-tf-idf"]], "Example with CountVectorizer": [[27, "example-with-countvectorizer"]], "scikit-learn version": [[27, "scikit-learn-version"], [27, "id1"]], "Funny example with TfidfVectorizer": [[27, "funny-example-with-tfidfvectorizer"]], "mlinsights version": [[27, "mlinsights-version"]], "Visualize a scikit-learn pipeline": [[28, "visualize-a-scikit-learn-pipeline"]], "Simple model": [[28, "simple-model"]], "Complex pipeline": [[28, "complex-pipeline"]], "Example with FeatureUnion": [[28, "example-with-featureunion"]], "Compute intermediate outputs": [[28, "compute-intermediate-outputs"]], "Computation times": [[29, "computation-times"]], "Examples": [[30, "examples"], [6, "examples"]], "DictVectorizer or CategoriesToIntegers": [[30, "index-exref-0-0"], [6, "indexexref-sklearn0"]], "Stacking de plusieurs learners dans un pipeline scikit-learn.": [[30, "index-exref-0-1"], [6, "indexexref-sklearn2"]], "Use two learners into a same pipeline": [[30, "index-exref-0-2"], [6, "indexexref-sklearn1"]], "FAQ": [[31, "faq"]], "Tutorial": [[34, "tutorial"]], "Machine Learning Models": [[6, "machine-learning-models"]], "model_featurizer": [[6, "model-featurizer"]], "Clustering": [[6, "clustering"]], "ConstraintKMeans": [[6, "constraintkmeans"]], "KMeansL1L2": [[6, "kmeansl1l2"]], "Trainers": [[6, "trainers"]], "ClassifierAfterKMeans": [[6, "classifierafterkmeans"]], "CustomizedMultilayerPerceptron": [[6, "customizedmultilayerperceptron"]], "IntervalRegressor": [[6, "intervalregressor"]], "ApproximateNMFPredictor": [[6, "approximatenmfpredictor"]], "PiecewiseClassifier": [[6, "piecewiseclassifier"]], "PiecewiseRegressor": [[6, "piecewiseregressor"]], "PiecewiseTreeRegressor": [[6, "piecewisetreeregressor"]], "QuantileMLPRegressor": [[6, "quantilemlpregressor"]], "QuantileLinearRegression": [[6, "quantilelinearregression"]], "TransformedTargetClassifier2": [[6, "transformedtargetclassifier2"]], "Transforms": [[6, "transforms"]], "NGramsMixin": [[6, "ngramsmixin"]], "BaseReciprocalTransformer": [[6, "basereciprocaltransformer"]], "CategoriesToIntegers": [[6, "categoriestointegers"]], "ExtendedFeatures": [[6, "extendedfeatures"]], "FunctionReciprocalTransformer": [[6, "functionreciprocaltransformer"]], "PermutationReciprocalTransformer": [[6, "permutationreciprocaltransformer"]], "PredictableTSNE": [[6, "predictabletsne"]], "TransferTransformer": [[6, "transfertransformer"]], "TraceableCountVectorizer": [[6, "traceablecountvectorizer"]], "TraceableTfidfVectorizer": [[6, "traceabletfidfvectorizer"]], "Exploration": [[6, "exploration"]], "SkBaseTransformLearner": [[6, "skbasetransformlearner"]], "SkBaseTransformStacking": [[6, "skbasetransformstacking"]], "Exploration in C": [[6, "exploration-in-c"]], "SimpleRegressorCriterion": [[6, "simpleregressorcriterion"]], "SimpleRegressorCriterionFast": [[6, "simpleregressorcriterionfast"]], "LinearRegressorCriterion": [[6, "linearregressorcriterion"]], "Losses": [[6, "losses"]], "Hidden API": [[6, "hidden-api"]], "_switch_clusters": [[6, "switch-clusters"]], "Change Logs": [[0, "change-logs"]], "0.5.0": [[0, "id1"]], "0.3.649 - 2022-07-22 - 2.35Mb": [[0, "mb"]], "0.3.631 - 2022-05-19 - 2.21Mb": [[0, "id2"]], "0.3.614 - 2021-10-02 - 1.73Mb": [[0, "id3"]], "0.3.606 - 2021-08-22 - 2.35Mb": [[0, "id4"]], "mlinsights: tricky scikit-learn": [[32, "mlinsights-tricky-scikit-learn"]], "Documentation": [[32, null]], "More": [[32, null]], "LICENSE": [[33, "license"]]}, "indexentries": {"mlcache (class in mlinsights.mlbatch.cache_model)": [[1, "mlinsights.mlbatch.cache_model.MLCache"]], "pipelinecache (class in mlinsights.mlbatch.pipeline_cache)": [[1, "mlinsights.mlbatch.pipeline_cache.PipelineCache"]], "as_key() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.as_key"]], "cache() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.cache"]], "count() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.count"]], "create_cache() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.create_cache"]], "get() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.get"]], "get_cache() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.get_cache"]], "has_cache() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.has_cache"]], "items() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.items"]], "keys() (mlinsights.mlbatch.cache_model.mlcache method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.keys"]], "remove_cache() (mlinsights.mlbatch.cache_model.mlcache static method)": [[1, "mlinsights.mlbatch.cache_model.MLCache.remove_cache"]], "set_score_request() (mlinsights.mlbatch.pipeline_cache.pipelinecache method)": [[1, "mlinsights.mlbatch.pipeline_cache.PipelineCache.set_score_request"]], "dgelss() (in module mlinsights.mlmodel.direct_blas_lapack)": [[2, "mlinsights.mlmodel.direct_blas_lapack.dgelss"]], "alter_pipeline_for_debugging() (in module mlinsights.helpers.pipeline)": [[3, "mlinsights.helpers.pipeline.alter_pipeline_for_debugging"]], "enumerate_pipeline_models() (in module mlinsights.helpers.pipeline)": [[3, "mlinsights.helpers.pipeline.enumerate_pipeline_models"]], "format_function_call() (in module mlinsights.helpers.parameters)": [[3, "mlinsights.helpers.parameters.format_function_call"]], "format_parameters() (in module mlinsights.helpers.parameters)": [[3, "mlinsights.helpers.parameters.format_parameters"]], "format_value() (in module mlinsights.helpers.parameters)": [[3, "mlinsights.helpers.parameters.format_value"]], "non_linear_correlations() (in module mlinsights.metrics.correlations)": [[5, "mlinsights.metrics.correlations.non_linear_correlations"]], "approximatenmfpredictor (class in mlinsights.mlmodel.anmf_predictor)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor"]], "basereciprocaltransformer (class in mlinsights.mlmodel.sklearn_transform_inv)": [[6, "mlinsights.mlmodel.sklearn_transform_inv.BaseReciprocalTransformer"]], "categoriestointegers (class in mlinsights.mlmodel.categories_to_integers)": [[6, "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers"]], "classifierafterkmeans (class in mlinsights.mlmodel.classification_kmeans)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans"]], "constraintkmeans (class in mlinsights.mlmodel.kmeans_constraint)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans"]], "customizedmultilayerperceptron (class in mlinsights.mlmodel.quantile_mlpregressor)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.CustomizedMultilayerPerceptron"]], "extendedfeatures (class in mlinsights.mlmodel.extended_features)": [[6, "mlinsights.mlmodel.extended_features.ExtendedFeatures"]], "functionreciprocaltransformer (class in mlinsights.mlmodel.sklearn_transform_inv_fct)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer"]], "intervalregressor (class in mlinsights.mlmodel.interval_regressor)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor"]], "kmeansl1l2 (class in mlinsights.mlmodel.kmeans_l1)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2"]], "ngramsmixin (class in mlinsights.mlmodel.sklearn_text)": [[6, "mlinsights.mlmodel.sklearn_text.NGramsMixin"]], "permutationreciprocaltransformer (class in mlinsights.mlmodel.sklearn_transform_inv_fct)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer"]], "piecewiseclassifier (class in mlinsights.mlmodel.piecewise_estimator)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier"]], "piecewiseregressor (class in mlinsights.mlmodel.piecewise_estimator)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor"]], "piecewisetreeregressor (class in mlinsights.mlmodel.piecewise_tree_regression)": [[6, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor"]], "predictabletsne (class in mlinsights.mlmodel.predictable_tsne)": [[6, "mlinsights.mlmodel.predictable_tsne.PredictableTSNE"]], "quantilelinearregression (class in mlinsights.mlmodel.quantile_regression)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression"]], "quantilemlpregressor (class in mlinsights.mlmodel.quantile_mlpregressor)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor"]], "simpleregressorcriterion (class in mlinsights.mlmodel.piecewise_tree_regression_criterion)": [[6, "mlinsights.mlmodel.piecewise_tree_regression_criterion.SimpleRegressorCriterion"]], "simpleregressorcriterionfast (class in mlinsights.mlmodel.piecewise_tree_regression_criterion_fast)": [[6, "mlinsights.mlmodel.piecewise_tree_regression_criterion_fast.SimpleRegressorCriterionFast"]], "skbasetransformlearner (class in mlinsights.sklapi.sklearn_base_transform_learner)": [[6, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner"]], "skbasetransformstacking (class in mlinsights.sklapi.sklearn_base_transform_stacking)": [[6, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking"]], "traceablecountvectorizer (class in mlinsights.mlmodel.sklearn_text)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableCountVectorizer"]], "traceabletfidfvectorizer (class in mlinsights.mlmodel.sklearn_text)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableTfidfVectorizer"]], "transfertransformer (class in mlinsights.mlmodel.transfer_transformer)": [[6, "mlinsights.mlmodel.transfer_transformer.TransferTransformer"]], "transformedtargetclassifier2 (class in mlinsights.mlmodel.target_predictors)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2"]], "transformedtargetregressor2 (class in mlinsights.mlmodel.target_predictors)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2"]], "_switch_clusters() (in module mlinsights.mlmodel._kmeans_constraint_)": [[6, "mlinsights.mlmodel._kmeans_constraint_._switch_clusters"]], "absolute_loss() (in module mlinsights.mlmodel.quantile_mlpregressor)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.absolute_loss"]], "available_fcts() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer static method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.available_fcts"]], "classes_ (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 property)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.classes_"]], "cluster_edges() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.cluster_edges"]], "constraint_kmeans() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.constraint_kmeans"]], "decision_function() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.decision_function"]], "decision_function() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.decision_function"]], "decision_function() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.decision_function"]], "fit() (mlinsights.mlmodel.anmf_predictor.approximatenmfpredictor method)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor.fit"]], "fit() (mlinsights.mlmodel.categories_to_integers.categoriestointegers method)": [[6, "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers.fit"]], "fit() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.fit"]], "fit() (mlinsights.mlmodel.extended_features.extendedfeatures method)": [[6, "mlinsights.mlmodel.extended_features.ExtendedFeatures.fit"]], "fit() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.fit"]], "fit() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.fit"]], "fit() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.fit"]], "fit() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[6, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.fit"]], "fit() (mlinsights.mlmodel.predictable_tsne.predictabletsne method)": [[6, "mlinsights.mlmodel.predictable_tsne.PredictableTSNE.fit"]], "fit() (mlinsights.mlmodel.quantile_regression.quantilelinearregression method)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression.fit"]], "fit() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.fit"]], "fit() (mlinsights.mlmodel.sklearn_transform_inv_fct.permutationreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer.fit"]], "fit() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.fit"]], "fit() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.fit"]], "fit() (mlinsights.mlmodel.transfer_transformer.transfertransformer method)": [[6, "mlinsights.mlmodel.transfer_transformer.TransferTransformer.fit"]], "fit() (mlinsights.sklapi.sklearn_base_transform_learner.skbasetransformlearner method)": [[6, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner.fit"]], "fit() (mlinsights.sklapi.sklearn_base_transform_stacking.skbasetransformstacking method)": [[6, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking.fit"]], "fit_transform() (mlinsights.mlmodel.categories_to_integers.categoriestointegers method)": [[6, "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers.fit_transform"]], "get_fct_inv() (mlinsights.mlmodel.sklearn_transform_inv.basereciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv.BaseReciprocalTransformer.get_fct_inv"]], "get_fct_inv() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.get_fct_inv"]], "get_fct_inv() (mlinsights.mlmodel.sklearn_transform_inv_fct.permutationreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer.get_fct_inv"]], "get_feature_names_out() (mlinsights.mlmodel.extended_features.extendedfeatures method)": [[6, "mlinsights.mlmodel.extended_features.ExtendedFeatures.get_feature_names_out"]], "get_params() (mlinsights.mlmodel.anmf_predictor.approximatenmfpredictor method)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor.get_params"]], "get_params() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.get_params"]], "get_params() (mlinsights.sklapi.sklearn_base_transform_learner.skbasetransformlearner method)": [[6, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner.get_params"]], "get_params() (mlinsights.sklapi.sklearn_base_transform_stacking.skbasetransformstacking method)": [[6, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking.get_params"]], "model_featurizer() (in module mlinsights.mlmodel.ml_featurizer)": [[6, "mlinsights.mlmodel.ml_featurizer.model_featurizer"]], "n_estimators_ (mlinsights.mlmodel.interval_regressor.intervalregressor property)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.n_estimators_"]], "predict() (mlinsights.mlmodel.anmf_predictor.approximatenmfpredictor method)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor.predict"]], "predict() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.predict"]], "predict() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.predict"]], "predict() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.predict"]], "predict() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.predict"]], "predict() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.predict"]], "predict() (mlinsights.mlmodel.piecewise_estimator.piecewiseregressor method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor.predict"]], "predict() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[6, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.predict"]], "predict() (mlinsights.mlmodel.quantile_mlpregressor.quantilemlpregressor method)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor.predict"]], "predict() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.predict"]], "predict() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.predict"]], "predict_all() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.predict_all"]], "predict_leaves() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[6, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.predict_leaves"]], "predict_proba() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.predict_proba"]], "predict_proba() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.predict_proba"]], "predict_proba() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.predict_proba"]], "predict_sorted() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.predict_sorted"]], "score() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.score"]], "score() (mlinsights.mlmodel.quantile_mlpregressor.quantilemlpregressor method)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor.score"]], "score() (mlinsights.mlmodel.quantile_regression.quantilelinearregression method)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression.score"]], "score() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.score"]], "score() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.score"]], "set_fit_request() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.piecewise_estimator.piecewiseregressor method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[6, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.predictable_tsne.predictabletsne method)": [[6, "mlinsights.mlmodel.predictable_tsne.PredictableTSNE.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.quantile_regression.quantilelinearregression method)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.sklearn_text.traceablecountvectorizer method)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableCountVectorizer.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.sklearn_text.traceabletfidfvectorizer method)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableTfidfVectorizer.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.sklearn_transform_inv_fct.permutationreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.set_fit_request"]], "set_fit_request() (mlinsights.mlmodel.transfer_transformer.transfertransformer method)": [[6, "mlinsights.mlmodel.transfer_transformer.TransferTransformer.set_fit_request"]], "set_params() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.set_params"]], "set_params() (mlinsights.sklapi.sklearn_base_transform_learner.skbasetransformlearner method)": [[6, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner.set_params"]], "set_params() (mlinsights.sklapi.sklearn_base_transform_stacking.skbasetransformstacking method)": [[6, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking.set_params"]], "set_predict_request() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.set_predict_request"]], "set_predict_request() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[6, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.set_predict_request"]], "set_score_request() (mlinsights.mlmodel.anmf_predictor.approximatenmfpredictor method)": [[6, "mlinsights.mlmodel.anmf_predictor.ApproximateNMFPredictor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.set_score_request"]], "set_score_request() (mlinsights.mlmodel.interval_regressor.intervalregressor method)": [[6, "mlinsights.mlmodel.interval_regressor.IntervalRegressor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.set_score_request"]], "set_score_request() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.set_score_request"]], "set_score_request() (mlinsights.mlmodel.piecewise_estimator.piecewiseclassifier method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseClassifier.set_score_request"]], "set_score_request() (mlinsights.mlmodel.piecewise_estimator.piecewiseregressor method)": [[6, "mlinsights.mlmodel.piecewise_estimator.PiecewiseRegressor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.piecewise_tree_regression.piecewisetreeregressor method)": [[6, "mlinsights.mlmodel.piecewise_tree_regression.PiecewiseTreeRegressor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.quantile_mlpregressor.quantilemlpregressor method)": [[6, "mlinsights.mlmodel.quantile_mlpregressor.QuantileMLPRegressor.set_score_request"]], "set_score_request() (mlinsights.mlmodel.quantile_regression.quantilelinearregression method)": [[6, "mlinsights.mlmodel.quantile_regression.QuantileLinearRegression.set_score_request"]], "set_score_request() (mlinsights.mlmodel.target_predictors.transformedtargetclassifier2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetClassifier2.set_score_request"]], "set_score_request() (mlinsights.mlmodel.target_predictors.transformedtargetregressor2 method)": [[6, "mlinsights.mlmodel.target_predictors.TransformedTargetRegressor2.set_score_request"]], "set_transform_request() (mlinsights.mlmodel.sklearn_text.traceablecountvectorizer method)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableCountVectorizer.set_transform_request"]], "set_transform_request() (mlinsights.mlmodel.sklearn_text.traceabletfidfvectorizer method)": [[6, "mlinsights.mlmodel.sklearn_text.TraceableTfidfVectorizer.set_transform_request"]], "transform() (mlinsights.mlmodel.categories_to_integers.categoriestointegers method)": [[6, "mlinsights.mlmodel.categories_to_integers.CategoriesToIntegers.transform"]], "transform() (mlinsights.mlmodel.extended_features.extendedfeatures method)": [[6, "mlinsights.mlmodel.extended_features.ExtendedFeatures.transform"]], "transform() (mlinsights.mlmodel.kmeans_constraint.constraintkmeans method)": [[6, "mlinsights.mlmodel.kmeans_constraint.ConstraintKMeans.transform"]], "transform() (mlinsights.mlmodel.kmeans_l1.kmeansl1l2 method)": [[6, "mlinsights.mlmodel.kmeans_l1.KMeansL1L2.transform"]], "transform() (mlinsights.mlmodel.predictable_tsne.predictabletsne method)": [[6, "mlinsights.mlmodel.predictable_tsne.PredictableTSNE.transform"]], "transform() (mlinsights.mlmodel.sklearn_transform_inv.basereciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv.BaseReciprocalTransformer.transform"]], "transform() (mlinsights.mlmodel.sklearn_transform_inv_fct.functionreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.FunctionReciprocalTransformer.transform"]], "transform() (mlinsights.mlmodel.sklearn_transform_inv_fct.permutationreciprocaltransformer method)": [[6, "mlinsights.mlmodel.sklearn_transform_inv_fct.PermutationReciprocalTransformer.transform"]], "transform() (mlinsights.mlmodel.transfer_transformer.transfertransformer method)": [[6, "mlinsights.mlmodel.transfer_transformer.TransferTransformer.transform"]], "transform() (mlinsights.sklapi.sklearn_base_transform_learner.skbasetransformlearner method)": [[6, "mlinsights.sklapi.sklearn_base_transform_learner.SkBaseTransformLearner.transform"]], "transform() (mlinsights.sklapi.sklearn_base_transform_stacking.skbasetransformstacking method)": [[6, "mlinsights.sklapi.sklearn_base_transform_stacking.SkBaseTransformStacking.transform"]], "transform_features() (mlinsights.mlmodel.classification_kmeans.classifierafterkmeans method)": [[6, "mlinsights.mlmodel.classification_kmeans.ClassifierAfterKMeans.transform_features"]], "pipeline2dot() (in module mlinsights.plotting.visualize)": [[7, "mlinsights.plotting.visualize.pipeline2dot"]], "pipeline2str() (in module mlinsights.plotting.visualize)": [[7, "mlinsights.plotting.visualize.pipeline2str"]], "plot_gallery_images() (in module mlinsights.plotting.gallery)": [[7, "mlinsights.plotting.gallery.plot_gallery_images"]], "searchenginepredictionimages (class in mlinsights.search_rank.search_engine_predictions_images)": [[8, "mlinsights.search_rank.search_engine_predictions_images.SearchEnginePredictionImages"]], "searchenginepredictions (class in mlinsights.search_rank.search_engine_predictions)": [[8, "mlinsights.search_rank.search_engine_predictions.SearchEnginePredictions"]], "searchenginevectors (class in mlinsights.search_rank.search_engine_vectors)": [[8, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors"]], "fit() (mlinsights.search_rank.search_engine_predictions.searchenginepredictions method)": [[8, "mlinsights.search_rank.search_engine_predictions.SearchEnginePredictions.fit"]], "fit() (mlinsights.search_rank.search_engine_predictions_images.searchenginepredictionimages method)": [[8, "mlinsights.search_rank.search_engine_predictions_images.SearchEnginePredictionImages.fit"]], "fit() (mlinsights.search_rank.search_engine_vectors.searchenginevectors method)": [[8, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors.fit"]], "kneighbors() (mlinsights.search_rank.search_engine_predictions.searchenginepredictions method)": [[8, "mlinsights.search_rank.search_engine_predictions.SearchEnginePredictions.kneighbors"]], "kneighbors() (mlinsights.search_rank.search_engine_predictions_images.searchenginepredictionimages method)": [[8, "mlinsights.search_rank.search_engine_predictions_images.SearchEnginePredictionImages.kneighbors"]], "kneighbors() (mlinsights.search_rank.search_engine_vectors.searchenginevectors method)": [[8, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors.kneighbors"]], "read_zip() (mlinsights.search_rank.search_engine_vectors.searchenginevectors static method)": [[8, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors.read_zip"]], "to_zip() (mlinsights.search_rank.search_engine_vectors.searchenginevectors method)": [[8, "mlinsights.search_rank.search_engine_vectors.SearchEngineVectors.to_zip"]], "artimeseriesregressor (class in mlinsights.timeseries.ar)": [[9, "mlinsights.timeseries.ar.ARTimeSeriesRegressor"]], "basereciprocaltimeseriestransformer (class in mlinsights.timeseries.base)": [[9, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer"]], "basetimeseries (class in mlinsights.timeseries.base)": [[9, "mlinsights.timeseries.base.BaseTimeSeries"]], "dummytimeseriesregressor (class in mlinsights.timeseries.dummies)": [[9, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor"]], "aggregate_timeseries() (in module mlinsights.timeseries.agg)": [[9, "mlinsights.timeseries.agg.aggregate_timeseries"]], "artificial_data() (in module mlinsights.timeseries.datasets)": [[9, "mlinsights.timeseries.datasets.artificial_data"]], "build_ts_x_y() (in module mlinsights.timeseries.utils)": [[9, "mlinsights.timeseries.utils.build_ts_X_y"]], "find_ts_group_pattern() (in module mlinsights.timeseries.patterns)": [[9, "mlinsights.timeseries.patterns.find_ts_group_pattern"]], "fit() (mlinsights.timeseries.ar.artimeseriesregressor method)": [[9, "mlinsights.timeseries.ar.ARTimeSeriesRegressor.fit"]], "fit() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[9, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.fit"]], "fit() (mlinsights.timeseries.dummies.dummytimeseriesregressor method)": [[9, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor.fit"]], "get_fct_inv() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[9, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.get_fct_inv"]], "has_preprocessing() (mlinsights.timeseries.base.basetimeseries method)": [[9, "mlinsights.timeseries.base.BaseTimeSeries.has_preprocessing"]], "plot_week_timeseries() (in module mlinsights.timeseries.plotting)": [[9, "mlinsights.timeseries.plotting.plot_week_timeseries"]], "predict() (mlinsights.timeseries.ar.artimeseriesregressor method)": [[9, "mlinsights.timeseries.ar.ARTimeSeriesRegressor.predict"]], "predict() (mlinsights.timeseries.dummies.dummytimeseriesregressor method)": [[9, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor.predict"]], "set_fit_request() (mlinsights.timeseries.ar.artimeseriesregressor method)": [[9, "mlinsights.timeseries.ar.ARTimeSeriesRegressor.set_fit_request"]], "set_fit_request() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[9, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.set_fit_request"]], "set_fit_request() (mlinsights.timeseries.dummies.dummytimeseriesregressor method)": [[9, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor.set_fit_request"]], "set_score_request() (mlinsights.timeseries.ar.artimeseriesregressor method)": [[9, "mlinsights.timeseries.ar.ARTimeSeriesRegressor.set_score_request"]], "set_score_request() (mlinsights.timeseries.dummies.dummytimeseriesregressor method)": [[9, "mlinsights.timeseries.dummies.DummyTimeSeriesRegressor.set_score_request"]], "set_transform_request() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[9, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.set_transform_request"]], "transform() (mlinsights.timeseries.base.basereciprocaltimeseriestransformer method)": [[9, "mlinsights.timeseries.base.BaseReciprocalTimeSeriesTransformer.transform"]], "ts_mape() (in module mlinsights.timeseries.metrics)": [[9, "mlinsights.timeseries.metrics.ts_mape"]], "digitize2tree() (in module mlinsights.mltree.tree_digitize)": [[10, "mlinsights.mltree.tree_digitize.digitize2tree"]], "predict_leaves() (in module mlinsights.mltree.tree_structure)": [[10, "mlinsights.mltree.tree_structure.predict_leaves"]], "tree_find_common_node() (in module mlinsights.mltree.tree_structure)": [[10, "mlinsights.mltree.tree_structure.tree_find_common_node"]], "tree_find_path_to_root() (in module mlinsights.mltree.tree_structure)": [[10, "mlinsights.mltree.tree_structure.tree_find_path_to_root"]], "tree_leave_index() (in module mlinsights.mltree.tree_structure)": [[10, "mlinsights.mltree.tree_structure.tree_leave_index"]], "tree_leave_neighbors() (in module mlinsights.mltree.tree_structure)": [[10, "mlinsights.mltree.tree_structure.tree_leave_neighbors"]], "tree_node_parents() (in module mlinsights.mltree.tree_structure)": [[10, "mlinsights.mltree.tree_structure.tree_node_parents"]], "tree_node_range() (in module mlinsights.mltree.tree_structure)": [[10, "mlinsights.mltree.tree_structure.tree_node_range"]]}})