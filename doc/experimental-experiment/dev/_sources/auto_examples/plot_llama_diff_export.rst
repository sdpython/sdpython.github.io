
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_llama_diff_export.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_llama_diff_export.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_llama_diff_export.py:


.. _l-plot-llama-diff-export:

Compares LLAMA exporters
========================

The script compares the two exporters implemented in :epkg:`pytorch`
for a part of llama model. The model are compared after all optimizations
were made with :epkg:`onnx-rewriter` and :epkg:`onnxruntime`.

* `TorchScript-based ONNX Exporter
  <https://pytorch.org/docs/stable/onnx.html#torchscript-based-onnx-exporter>`_,
  let's call it **script**
* `TorchDynamo-based ONNX Exporter
  <https://pytorch.org/docs/stable/onnx.html#torchdynamo-based-onnx-exporter>`_,
  let's call it **dynamo**

To run the script:

::

    python _doc/examples/plot_llama_diff_export --help

Some helpers
++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 27-68

.. code-block:: Python


    import contextlib
    import os
    import io
    import warnings
    import logging

    try:
        with warnings.catch_warnings():
            warnings.simplefilter("ignore")
            import onnxruntime

            has_cuda = "CUDAExecutionProvider" in onnxruntime.get_available_providers()
    except ImportError:
        print("onnxruntime not available.")
        import sys

        sys.exit(0)

    import numpy as np
    import onnx
    from onnx_array_api.reference import compare_onnx_execution, ExtendedReferenceEvaluator
    import torch
    from experimental_experiment.ext_test_case import get_parsed_args, unit_test_going
    from experimental_experiment.torch_exp.onnx_export import to_onnx
    from experimental_experiment.convert.convert_helper import (
        optimize_model_proto,
        ort_optimize,
    )
    from experimental_experiment.torch_helper.llama_helper import (
        get_llama_model,
        get_llama_attention,
        get_llama_decoder,
    )
    from experimental_experiment.torch_helper.dump_helper import reorder_functions_in_proto

    has_cuda = has_cuda and torch.cuda.is_available()
    logging.disable(logging.ERROR)
    provider = "cuda" if has_cuda else "cpu"






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [2024-02-11 17:23:39,029] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)




.. GENERATED FROM PYTHON SOURCE LINES 69-71

The exporting functions
+++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 71-134

.. code-block:: Python



    script_args = get_parsed_args(
        "plot_llama_diff_export",
        description=__doc__,
        part=("attention", "one value among attention, decoder, model"),
        exporter=("dynamo", "one value among dynamo, custom"),
        ortopt=(1, "run onnxruntime optimization"),
        expose="part,exporter,ortopt",
    )

    print(f"part={script_args.part}")
    print(f"exporter={script_args.exporter}")
    ortopt = script_args.ortopt in (1, "1")
    print(f"ortopt={ortopt}")


    def opt_filename(filename: str) -> str:
        name, ext = os.path.splitext(filename)
        return f"{name}.opt{ext}"


    def export_script(filename, model, *args):
        with contextlib.redirect_stdout(io.StringIO()):
            with warnings.catch_warnings():
                warnings.simplefilter("ignore")
                torch.onnx.export(model, args, filename, input_names=["input"])
        if ortopt:
            onx = onnx.load(filename)
            ort_optimize(onx, opt_filename(filename), providers=provider)


    def export_dynamo(filename, model, *args):
        with contextlib.redirect_stdout(io.StringIO()):
            with warnings.catch_warnings():
                warnings.simplefilter("ignore")
                export_output = torch.onnx.dynamo_export(model, *args)
                model = export_output.model_proto
        try:
            new_model = optimize_model_proto(model)
        except ImportError as e:
            print("skipping optimization, missing package:", e)
            new_model = model
        with open(filename, "wb") as f:
            f.write(new_model.SerializeToString())
        if ortopt:
            ort_optimize(new_model, opt_filename(filename), providers=provider)


    def export_custom(filename, model, *args):
        new_model = to_onnx(
            model,
            tuple(args),
            input_names=[f"input{i}" for i in range(len(args))],
            remove_unused=True,
            constant_folding=False,
        )
        with open(filename, "wb") as f:
            f.write(new_model.SerializeToString())
        if ortopt:
            ort_optimize(new_model, opt_filename(filename), providers=provider)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    part=attention
    exporter=dynamo
    ortopt=True




.. GENERATED FROM PYTHON SOURCE LINES 135-137

Model and data
++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 137-166

.. code-block:: Python


    if unit_test_going():
        kwargs = dict(input_dims=[(2, 1024)] * 2)
    else:
        kwargs = dict(
            input_dims=[(2, 1024)] * 2,
            _attn_implementation="eager",
            num_hidden_layers=1,
            hidden_size=512,
            vocab_size=4000,
            intermediate_size=2000,
            max_position_embeddings=2048,
            num_attention_heads=8,
        )

    if script_args.part == "attention":
        model, inputs = get_llama_attention(**kwargs)
    elif script_args.part == "decoder":
        model, inputs = get_llama_decoder(**kwargs)
    elif script_args.part == "model":
        model, inputs = get_llama_model(**kwargs)
    else:
        raise RuntimeError(f"Unexpected value for part={script_args.part!r}")

    print(f"simple run with {len(inputs)} inputs")
    expected = model(*inputs[0])
    print(f"eager mode worked {expected.shape}, {expected.dtype}")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    simple run with 2 inputs
    eager mode worked torch.Size([2, 1024, 512]), torch.float32




.. GENERATED FROM PYTHON SOURCE LINES 167-169

Exporting
+++++++++

.. GENERATED FROM PYTHON SOURCE LINES 169-186

.. code-block:: Python


    exporter = script_args.exporter
    file1 = f"llama.{script_args.part}.script.onnx"
    file2 = f"llama.{script_args.part}.{exporter}.onnx"

    print("torch script exporter")
    export_script(file1, model, *inputs[0])

    if exporter == "dynamo":
        print("torch dynamo exporter")
        export_dynamo(file2, model, *inputs[0])
    elif exporter == "custom":
        print("torch custom exporter")
        export_custom(file2, model, *inputs[0])
    else:
        raise AssertionError(f"Unexpected value for exporter={exporter!r}.")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    torch script exporter
    torch dynamo exporter




.. GENERATED FROM PYTHON SOURCE LINES 187-189

Verification
++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 189-223

.. code-block:: Python


    if ortopt:
        print("Using models optimized by onnxruntime")
        file1 = f"llama.{script_args.part}.script.opt.onnx"
        file2 = f"llama.{script_args.part}.{exporter}.opt.onnx"


    providers = (
        ["CPUExecutionProvider"]
        if provider == "cpu"
        else ["CUDAExecutionProvider", "CPUExecutionProvider"]
    )

    model1 = onnx.load(file1)
    model2 = onnx.load(file2)

    feeds1, feeds2 = {}, {}
    for i in range(len(inputs[0])):
        x = inputs[0][i].detach().numpy()
        feeds1[model1.graph.input[i].name] = x
        feeds2[model2.graph.input[i].name] = x

    if ortopt:
        sess1 = onnxruntime.InferenceSession(file1, providers=providers)
        sess2 = onnxruntime.InferenceSession(file2, providers=providers)

        got1 = sess1.run(None, feeds1)
        got2 = sess2.run(None, feeds2)

        diff1 = np.abs(expected.detach().numpy() - got1[0]).max()
        diff2 = np.abs(expected.detach().numpy() - got2[0]).max()

        print(f"Error with the eager model and onnxruntime: {diff1}, {diff2}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Using models optimized by onnxruntime
    Error with the eager model and onnxruntime: 6.705522537231445e-08, 6.705522537231445e-08




.. GENERATED FROM PYTHON SOURCE LINES 224-226

Verification with the reference evaluator
+++++++++++++++++++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 226-245

.. code-block:: Python


    reorder_functions_in_proto(file1)
    reorder_functions_in_proto(file2)

    sess1 = ExtendedReferenceEvaluator(file1)
    try:
        sess2 = ExtendedReferenceEvaluator(file2)
    except NotImplementedError as e:
        print(e)
        sess2 = None

    got1 = sess1.run(None, feeds1)
    got2 = got1 if sess2 is None else sess2.run(None, feeds2)

    diff1 = np.abs(expected.detach().numpy() - got1[0]).max()
    diff2 = np.abs(expected.detach().numpy() - got2[0]).max()

    print(f"Error with the eager model and the reference evaluator: {diff1}, {diff2}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Error with the eager model and the reference evaluator: 4.6566128730773926e-08, 5.21540641784668e-08




.. GENERATED FROM PYTHON SOURCE LINES 246-248

Comparison and execution
++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 248-266

.. code-block:: Python



    def clean_name(name):
        return name.replace(
            "_inlfunc_transformers_models_llama_modeling_llama_LlamaAttention", ""
        ).replace("_inlfunc_torch_nn_modules_linear_Linear", "")


    if sess2 is not None:
        np_inputs = [i.detach().numpy() for i in inputs[0]]
        res1, res2, align, dc = compare_onnx_execution(
            model1, model2, inputs=np_inputs, verbose=1, raise_exc=False
        )
        for r in res2:
            r.name = clean_name(r.name)
        text = dc.to_str(res1, res2, align, column_size=90)
        print(text)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [compare_onnx_execution] generate inputs
    [compare_onnx_execution] got 3 inputs
    [compare_onnx_execution] execute first model
    /home/xadupre/github/onnx-array-api/onnx_array_api/reference/evaluator_yield.py:98: RuntimeWarning: invalid value encountered in cast
      value4i = value4.astype(np.int64) % modulo
    [compare_onnx_execution] got 62 results
    [compare_onnx_execution] execute second model
    [compare_onnx_execution] got 80 results
    [compare_onnx_execution] compute edit distance
    [compare_onnx_execution] got 83 pairs
    [compare_onnx_execution] done
    001 ~ | INITIA float32  512x512         BDED            onnx::MatMul_168                           | INITIA float32                  BAAA            ortshared_1_0_1_1_token_155               
    002 + |                                                                                            | INITIA float32  512x512         ZVZA            _attention_o_proj_1_t_4                    
    003 + |                                                                                            | INITIA int64    2               USAA            ortshared_7_1_2_1_token_152                
    004 = | INITIA float32  512x512         AEEN            onnx::MatMul_169                           | INITIA float32  512x512         AEEN            _attention_k_proj_1_t_1                   
    005 + |                                                                                            | INITIA int64    3               CKSA            ortshared_7_1_3_1_token_151                
    006 ~ | INITIA float32  512x512         PZAQ            onnx::MatMul_170                           | INITIA float32  512x512         BDED            _attention_q_proj_1_t                     
    007 + |                                                                                            | INITIA int64    4               CKIM            ortshared_7_1_4_0_token_146                
    008 ~ | INITIA float32  512x512         ZVZA            onnx::MatMul_219                           | INITIA float32  512x512         PZAQ            _attention_v_proj_1_t_2                   
    009 ~ | INITIA int64    1               DAAA            ortshared_7_1_1_3_token_111                | INITIA int64    1               AAAA            ortshared_7_1_1_4_token_158               
    010 ~ | INITIA int64    1               KAAA            ortshared_7_1_1_1_token_107                | INITIA int64    3               QKMA            ortshared_7_1_3_3_token_156               
    011 ~ | INITIA int64    4               CKIM            ortshared_7_1_4_0_token_114                | INITIA int64    4               CIKM            ortshared_7_1_4_1_token_148               
    012 ~ | INITIA float32  32x1            DAAA            /attention/rotary_emb/Expand_output_0      | INITIA int64    1               BAAA            ortshared_7_1_1_3_token_157               
    013 ~ | INITIA int64    1               AAAA            ortshared_7_1_1_0_token_106                | INITIA int64    1               GAAA            ortshared_7_1_1_1_token_150               
    014 ~ | INITIA int64    1               CAAA            ortshared_7_1_1_2_token_110                | INITIA int64    1               SAAA            ortshared_7_1_1_0_token_145               
    015 ~ | INITIA int64    1               GAAA            ortshared_7_1_1_6_token_115                | INITIA int64    2               ABAA            ortshared_7_1_2_0_token_147               
    016 ~ | INITIA int64    2               ABAA            ortshared_7_1_2_0_token_109                | INITIA int64    4               CIKK            ortshared_7_1_4_2_token_159               
    017 + |                                                                                            | INITIA float32  32x1            DAAA            _inlfunc_transformers_models_llama_modelin 
    018 ~ | INITIA int64    1               SAAA            ortshared_7_1_1_5_token_113                | INITIA int64    3               QKKA            ortshared_7_1_3_2_token_153               
    019 ~ | INITIA int64    1               BAAA            ortshared_7_1_1_4_token_112                | INITIA int64    3               QMKA            ortshared_7_1_3_0_token_149               
    020 + |                                                                                            | INITIA float32                  IAAA            ortshared_1_0_1_0_token_144                
    021 ~ | INITIA int64    3               CKSA            ortshared_7_1_3_0_token_105                | INITIA int64    1               DAAA            ortshared_7_1_1_2_token_154               
    022 = | INPUT  float32  2x1024x512      KOWI            input                                      | INPUT  float32  2x1024x512      KOWI            l_hidden_states_                          
    023 = | INPUT  float32  2x1x1024x1024   AAAA            onnx::Slice_1                              | INPUT  float32  2x1x1024x1024   AAAA            l_attention_mask_                         
    024 = | INPUT  int64    1x1024          KAQG            onnx::Cast_2                               | INPUT  int64    1x1024          KAQG            position_ids                              
    025 + |                                                                                            | RESULT float32  2048x512        KOWI Reshape    _attention_v_proj_1_view_4                 
    026 + |                                                                                            | RESULT float32  2048x512        HOGF MatMul     _attention_v_proj_1_mm_2                   
    027 + |                                                                                            | RESULT float32  2x1024x512      HOGF Reshape    _attention_1_attention_v_proj_1            
    028 + |                                                                                            | RESULT float32  2x1024x8x64     HOGF Reshape    _attention_1_view_8                        
    029 + |                                                                                            | RESULT float32  2x8x1024x64     DSWP Transpose  _attention_1_transpose_2                   
    030 + |                                                                                            | RESULT float32  16x1024x64      DSWP Reshape    _attention_1_view_13                       
    031 + |                                                                                            | RESULT float32  2x1x1024x1024   AAAA Mul        _inlfunc_aten_add|folded_2_other_1         
    032 = | RESULT float32  1x1024          KAQG Cast       /attention/rotary_emb/Cast_output_0        | RESULT float32  1x1024          KAQG Cast       _inlfunc_transformers_models_llama_modelin
    033 = | RESULT float32  32x1024         EFXM MatMul     /attention/rotary_emb/MatMul_output_0      | RESULT float32  32x1024         EFXM MatMul     _inlfunc_transformers_models_llama_modelin
    034 = | RESULT float32  64x1024         JKJK Concat     /attention/rotary_emb/Concat               | RESULT float32  64x1024         JKJK Concat     _inlfunc_transformers_models_llama_modelin
    035 = | RESULT float32  64x1024         RMRM Sin        /attention/rotary_emb/Sin                  | RESULT float32  64x1024         RMRM Sin        _inlfunc_transformers_models_llama_modelin
    036 = | RESULT float32  1x1x64x1024     RMRM Unsqueeze  Unsqueeze                                  | RESULT float32  1x1x64x1024     RMRM Unsqueeze  Unsqueeze                                 
    037 = | RESULT float32  1x1024x1x64     GSEC Transpose  Transpose_token_8_out0                     | RESULT float32  1x1024x1x64     GSEC Transpose  Transpose_token_8_out0                    
    038 + |                                                                                            | RESULT float32  2048x512        QVGE MatMul     _attention_k_proj_1_mm_1                   
    039 ~ | RESULT float32  2x1024x512      QVGE MatMul     /attention/k_proj/MatMul_output_0          | RESULT float32  2x1024x512      QVGE Reshape    _attention_1_attention_k_proj_1           
    040 = | RESULT float32  2x1024x8x64     QVGE Reshape    /attention/Reshape_1_output_0              | RESULT float32  2x1024x8x64     QVGE Reshape    _attention_1_view_7                       
    041 = | RESULT float32  2x1024x8x32     GNZK Slice      /attention/Slice_3                         | RESULT float32  2x1024x8x32     GNZK Slice      _attention_1_Slice_118                    
    042 = | RESULT float32  2x1024x8x32     UNBQ Neg        /attention/Neg_1                           | RESULT float32  2x1024x8x32     UNBQ Neg        _attention_1_aten_neg_119_n0              
    043 = | RESULT float32  2x1024x8x32     LHHU Slice      /attention/Slice_2                         | RESULT float32  2x1024x8x32     LHHU Slice      _attention_1_Slice_101                    
    044 = | RESULT float32  2x1024x8x64     FUHK Concat     /attention/Concat_1                        | RESULT float32  2x1024x8x64     FUHK Concat     _attention_1_aten_cat_121_n0              
    045 = | RESULT float32  2x1024x8x64     VRNY Mul        /attention/Mul_3                           | RESULT float32  2x1024x8x64     VRNY Mul        _attention_1_aten_mul_122_n0              
    046 = | RESULT float32  64x1024         NHNH Cos        /attention/rotary_emb/Cos                  | RESULT float32  64x1024         NHNH Cos        _inlfunc_transformers_models_llama_modelin
    047 = | RESULT float32  1x1x64x1024     NHNH Unsqueeze  Unsqueeze_token_12                         | RESULT float32  1x1x64x1024     NHNH Unsqueeze  Unsqueeze_token_12                        
    048 = | RESULT float32  1x1024x1x64     CJYF Transpose  Transpose_token_14_out0                    | RESULT float32  1x1024x1x64     CJYF Transpose  Transpose_token_14_out0                   
    049 = | RESULT float32  2x1024x8x64     AAYC Mul        /attention/Mul_2                           | RESULT float32  2x1024x8x64     AAYC Mul        _attention_1_aten_mul_84_n0               
    050 = | RESULT float32  2x1024x8x64     WRKA Add        /attention/Add_1                           | RESULT float32  2x1024x8x64     WRKA Add        _inlfunc_aten_add|folded_1_n3             
    051 = | RESULT float32  2x8x64x1024     DJNX Transpose  /attention/Transpose_3_output_0            | RESULT float32  2x8x64x1024     DJNX Transpose  _attention_1_transpose_3                  
    052 + |                                                                                            | RESULT float32  16x64x1024      DJNX Reshape    _attention_1_view_10                       
    053 = | RESULT float32  1024x64         GSEC Transpose  /attention/rotary_emb/Sin_output_0         | RESULT float32  1024x64         GSEC Transpose  _attention_1_attention_rotary_emb_1_1     
    054 + |                                                                                            | RESULT float32  2048x512        TDEQ MatMul     _attention_q_proj_1_mm                     
    055 ~ | RESULT float32  2x1024x512      TDEQ MatMul     /attention/q_proj/MatMul_output_0          | RESULT float32  2x1024x512      TDEQ Reshape    _attention_1_attention_q_proj_1           
    056 = | RESULT float32  2x1024x8x64     TDEQ Reshape    /attention/Reshape_output_0                | RESULT float32  2x1024x8x64     TDEQ Reshape    _attention_1_view_6                       
    057 = | RESULT float32  2x8x1024x64     TDGO Transpose  /attention/Transpose_output_0              | RESULT float32  2x8x1024x64     TDGO Transpose  _attention_1_transpose                    
    058 = | RESULT float32  2x8x1024x32     FGDX Slice      /attention/Slice_1_output_0                | RESULT float32  2x8x1024x32     FGDX Slice      _attention_1_slice_3                      
    059 = | RESULT float32  2x8x1024x32     VUXD Neg        /attention/Neg_output_0                    | RESULT float32  2x8x1024x32     VUXD Neg        _attention_1_neg                          
    060 = | RESULT float32  2x8x1024x32     OXCR Slice      /attention/Slice_output_0                  | RESULT float32  2x8x1024x32     OXCR Slice      _attention_1_slice_2                      
    061 = | RESULT float32  2x8x1024x64     IRZT Concat     /attention/Concat_output_0                 | RESULT float32  2x8x1024x64     IRZT Concat     _attention_1_cat_1                        
    062 = | RESULT float32  2x8x1024x64     FFRK Mul        /attention/Mul_1_output_0                  | RESULT float32  2x8x1024x64     FFRK Mul        _attention_1_mul_1                        
    063 = | RESULT float32  1024x64         CJYF Transpose  /attention/rotary_emb/Cos_output_0         | RESULT float32  1024x64         CJYF Transpose  _attention_1_attention_rotary_emb_1       
    064 = | RESULT float32  2x8x1024x64     KPZB Mul        /attention/Mul_output_0                    | RESULT float32  2x8x1024x64     KPZB Mul        _attention_1_mul                          
    065 = | RESULT float32  2x8x1024x64     PVQL Add        /attention/Add_output_0                    | RESULT float32  2x8x1024x64     PVQL Add        _attention_1_add                          
    066 + |                                                                                            | RESULT float32  16x1024x64      PVQL Reshape    _attention_1_view_9                        
    067 + |                                                                                            | RESULT float32  16x1024x1024    ZCOP MatMul     _attention_1_bmm                           
    068 + |                                                                                            | RESULT float32  2x8x1024x1024   ZCOP Reshape    _attention_1_view_11                       
    069 ~ | RESULT float32  2x8x1024x1024   XKPS FusedMatMu /attention/Div_output_0                    | RESULT float32  2x8x1024x1024   XKPS Div        _attention_1_div                          
    070 - | RESULT float32  2x1x1024x1024   AAAA Slice      /attention/Slice_4_output_0                |                                                                                           
    071 - | RESULT float32  2x1x1024x1024   AAAA Slice      /attention/Slice_5_output_0                |                                                                                           
    072 = | RESULT float32  2x8x1024x1024   XKPS Add        /attention/Add_2_output_0                  | RESULT float32  2x8x1024x1024   XKPS Add        _attention_1_add_2                        
    073 = | RESULT float32  2x8x1024x1024   NNNN Softmax    /attention/Softmax_output_0                | RESULT float32  2x8x1024x1024   NNNN Softmax    _attention_1_aten_softmax_no_dtype_142_res
    074 + |                                                                                            | RESULT float32  16x1024x1024    NNNN Reshape    _attention_1_view_12                       
    075 - | RESULT float32  2x1024x512      HOGF MatMul     /attention/v_proj/MatMul_output_0          |                                                                                           
    076 ~ | RESULT float32  2x1024x8x64     HOGF Reshape    /attention/Reshape_2_output_0              | RESULT float32  16x1024x64      ELPQ MatMul     _attention_1_bmm_1                        
    077 ~ | RESULT float32  2x8x1024x64     DSWP Transpose  /attention/Transpose_2_output_0            | RESULT float32  2x8x1024x64     ELPQ Reshape    _attention_1_view_14                      
    078 + |                                                                                            | RESULT float32  2x1024x8x64     RZZG Transpose  _attention_1_transpose_4                   
    079 ~ | RESULT float32  2x8x1024x64     ELPQ MatMul     /attention/MatMul_1_output_0               | RESULT float32  2x1024x512      RZZG Reshape    _attention_1_view_15                      
    080 ~ | RESULT float32  2x1024x8x64     RZZG Transpose  /attention/Transpose_4_output_0            | RESULT float32  2048x512        RZZG Reshape    _attention_o_proj_1_view_16               
    081 ~ | RESULT float32  2x1024x512      RZZG Reshape    /attention/Reshape_3_output_0              | RESULT float32  2048x512        TBCH MatMul     _attention_o_proj_1_mm_4                  
    082 ~ | RESULT float32  2x1024x512      TBCH MatMul     167                                        | RESULT float32  2x1024x512      TBCH Reshape    attention_1                               
    083 = | OUTPUT float32  2x1024x512      TBCH            167                                        | OUTPUT float32  2x1024x512      TBCH            attention_1                               




.. GENERATED FROM PYTHON SOURCE LINES 267-268

See :ref:`l-long-outputs-llama-diff-export` for a better view.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 35.525 seconds)


.. _sphx_glr_download_auto_examples_plot_llama_diff_export.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_llama_diff_export.ipynb <plot_llama_diff_export.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_llama_diff_export.py <plot_llama_diff_export.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
