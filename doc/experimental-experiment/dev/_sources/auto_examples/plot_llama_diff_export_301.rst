
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_llama_diff_export_301.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_llama_diff_export_301.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_llama_diff_export_301.py:


.. _l-plot-llama-diff-export:

301: Compares LLAMA exporters
=============================

The script compares the two exporters implemented in :epkg:`pytorch`
for a part of llama model. The model are compared after all optimizations
were made with :epkg:`onnx-rewriter` and :epkg:`onnxruntime`.

* `TorchScript-based ONNX Exporter
  <https://pytorch.org/docs/stable/onnx.html#torchscript-based-onnx-exporter>`_,
  let's call it **script**
* `TorchDynamo-based ONNX Exporter
  <https://pytorch.org/docs/stable/onnx.html#torchdynamo-based-onnx-exporter>`_,
  let's call it **dynamo**

To run the script:

::

    python _doc/examples/plot_llama_diff_export --help

Some helpers
++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 27-70

.. code-block:: Python


    import contextlib
    import os
    import io
    import warnings
    import logging

    try:
        with warnings.catch_warnings():
            warnings.simplefilter("ignore")
            import onnxruntime

            has_cuda = "CUDAExecutionProvider" in onnxruntime.get_available_providers()
    except ImportError:
        print("onnxruntime not available.")
        import sys

        sys.exit(0)

    import numpy as np
    import onnx
    from onnx_array_api.reference import compare_onnx_execution, ExtendedReferenceEvaluator
    import torch
    from experimental_experiment.ext_test_case import unit_test_going
    from experimental_experiment.args import get_parsed_args
    from experimental_experiment.torch_interpreter import to_onnx
    from experimental_experiment.xbuilder import OptimizationOptions
    from experimental_experiment.convert.convert_helper import (
        optimize_model_proto,
        ort_optimize,
    )
    from experimental_experiment.torch_helper.llama_helper import (
        get_llama_model,
        get_llama_attention,
        get_llama_decoder,
    )
    from experimental_experiment.torch_helper.dump_helper import reorder_functions_in_proto

    has_cuda = has_cuda and torch.cuda.is_available()
    logging.disable(logging.ERROR)
    provider = "cuda" if has_cuda else "cpu"









.. GENERATED FROM PYTHON SOURCE LINES 71-73

The exporting functions
+++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 73-138

.. code-block:: Python



    script_args = get_parsed_args(
        "plot_llama_diff_export",
        description=__doc__,
        part=("attention", "one value among attention, decoder, model"),
        exporter=("dynamo", "one value among dynamo, custom"),
        ortopt=(1, "run onnxruntime optimization"),
        expose="part,exporter,ortopt",
    )

    print(f"part={script_args.part}")
    print(f"exporter={script_args.exporter}")
    ortopt = script_args.ortopt in (1, "1")
    print(f"ortopt={ortopt}")


    def opt_filename(filename: str) -> str:
        name, ext = os.path.splitext(filename)
        return f"{name}.opt{ext}"


    def export_script(filename, model, *args):
        with contextlib.redirect_stdout(io.StringIO()):
            with warnings.catch_warnings():
                warnings.simplefilter("ignore")
                torch.onnx.export(model, args, filename, input_names=["input"])
        if ortopt:
            onx = onnx.load(filename)
            ort_optimize(onx, opt_filename(filename), providers=provider)


    def export_dynamo(filename, model, *args):
        with contextlib.redirect_stdout(io.StringIO()):
            with warnings.catch_warnings():
                warnings.simplefilter("ignore")
                export_output = torch.onnx.dynamo_export(model, *args)
                model = export_output.model_proto
        try:
            new_model = optimize_model_proto(model)
        except ImportError as e:
            print("skipping optimization, missing package:", e)
            new_model = model
        with open(filename, "wb") as f:
            f.write(new_model.SerializeToString())
        if ortopt:
            ort_optimize(new_model, opt_filename(filename), providers=provider)


    def export_custom(filename, model, *args):
        new_model = to_onnx(
            model,
            tuple(args),
            input_names=[f"input{i}" for i in range(len(args))],
            options=OptimizationOptions(
                remove_unused=True,
                constant_folding=False,
            ),
        )
        with open(filename, "wb") as f:
            f.write(new_model.SerializeToString())
        if ortopt:
            ort_optimize(new_model, opt_filename(filename), providers=provider)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    part=attention
    exporter=dynamo
    ortopt=True




.. GENERATED FROM PYTHON SOURCE LINES 139-141

Model and data
++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 141-170

.. code-block:: Python


    if unit_test_going():
        kwargs = dict(input_dims=[(2, 1024)] * 2)
    else:
        kwargs = dict(
            input_dims=[(2, 1024)] * 2,
            _attn_implementation="eager",
            num_hidden_layers=1,
            hidden_size=512,
            vocab_size=4000,
            intermediate_size=2000,
            max_position_embeddings=2048,
            num_attention_heads=8,
        )

    if script_args.part == "attention":
        model, inputs = get_llama_attention(**kwargs)
    elif script_args.part == "decoder":
        model, inputs = get_llama_decoder(**kwargs)
    elif script_args.part == "model":
        model, inputs = get_llama_model(**kwargs)
    else:
        raise RuntimeError(f"Unexpected value for part={script_args.part!r}")

    print(f"simple run with {len(inputs)} inputs")
    expected = model(*inputs[0])
    print(f"eager mode worked {expected.shape}, {expected.dtype}")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    simple run with 2 inputs
    eager mode worked torch.Size([2, 1024, 512]), torch.float32




.. GENERATED FROM PYTHON SOURCE LINES 171-173

Exporting
+++++++++

.. GENERATED FROM PYTHON SOURCE LINES 173-190

.. code-block:: Python


    exporter = script_args.exporter
    file1 = f"llama.{script_args.part}.script.onnx"
    file2 = f"llama.{script_args.part}.{exporter}.onnx"

    print("torch script exporter")
    export_script(file1, model, *inputs[0])

    if exporter == "dynamo":
        print("torch dynamo exporter")
        export_dynamo(file2, model, *inputs[0])
    elif exporter == "custom":
        print("torch custom exporter")
        export_custom(file2, model, *inputs[0])
    else:
        raise AssertionError(f"Unexpected value for exporter={exporter!r}.")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    torch script exporter
    torch dynamo exporter
    Applied 6 pattern rewrite rules.
    Applied 0 pattern rewrite rules.
    /home/xadupre/github/experimental-experiment/experimental_experiment/convert/convert_helper.py:49: UserWarning: onnxrewrite.rewrite failed due to {e}
      warnings.warn("onnxrewrite.rewrite failed due to {e}")




.. GENERATED FROM PYTHON SOURCE LINES 191-193

Verification
++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 193-227

.. code-block:: Python


    if ortopt:
        print("Using models optimized by onnxruntime")
        file1 = f"llama.{script_args.part}.script.opt.onnx"
        file2 = f"llama.{script_args.part}.{exporter}.opt.onnx"


    providers = (
        ["CPUExecutionProvider"]
        if provider == "cpu"
        else [("CUDAExecutionProvider", {}), ("CPUExecutionProvider", {})]
    )

    model1 = onnx.load(file1)
    model2 = onnx.load(file2)

    feeds1, feeds2 = {}, {}
    for i in range(len(inputs[0])):
        x = inputs[0][i].detach().numpy()
        feeds1[model1.graph.input[i].name] = x
        feeds2[model2.graph.input[i].name] = x

    if ortopt:
        sess1 = onnxruntime.InferenceSession(file1, providers=providers)
        sess2 = onnxruntime.InferenceSession(file2, providers=providers)

        got1 = sess1.run(None, feeds1)
        got2 = sess2.run(None, feeds2)

        diff1 = np.abs(expected.detach().numpy() - got1[0]).max()
        diff2 = np.abs(expected.detach().numpy() - got2[0]).max()

        print(f"Error with the eager model and onnxruntime: {diff1}, {diff2}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Using models optimized by onnxruntime
    Error with the eager model and onnxruntime: 6.332993507385254e-08, 6.332993507385254e-08




.. GENERATED FROM PYTHON SOURCE LINES 228-230

Verification with the reference evaluator
+++++++++++++++++++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 230-249

.. code-block:: Python


    reorder_functions_in_proto(file1)
    reorder_functions_in_proto(file2)

    sess1 = ExtendedReferenceEvaluator(file1)
    try:
        sess2 = ExtendedReferenceEvaluator(file2)
    except NotImplementedError as e:
        print(e)
        sess2 = None

    got1 = sess1.run(None, feeds1)
    got2 = got1 if sess2 is None else sess2.run(None, feeds2)

    diff1 = np.abs(expected.detach().numpy() - got1[0]).max()
    diff2 = np.abs(expected.detach().numpy() - got2[0]).max()

    print(f"Error with the eager model and the reference evaluator: {diff1}, {diff2}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Error with the eager model and the reference evaluator: 4.0978193283081055e-08, 4.0978193283081055e-08




.. GENERATED FROM PYTHON SOURCE LINES 250-252

Comparison and execution
++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 252-278

.. code-block:: Python



    def clean_name(name):
        return name.replace(
            "_inlfunc_transformers_models_llama_modeling_llama_LlamaAttention", ""
        ).replace("_inlfunc_torch_nn_modules_linear_Linear", "")


    if sess2 is not None:
        try:
            np_inputs = [i.detach().numpy() for i in inputs[0]]
            res1, res2, align, dc = compare_onnx_execution(
                model1, model2, inputs=np_inputs, verbose=1, raise_exc=False
            )
            for r in res2:
                r.name = clean_name(r.name)
            text = dc.to_str(res1, res2, align, column_size=90)
            print(text)
        except AssertionError as e:
            if (
                "Unexpected type <class 'list'> for value, it must be a numpy array."
                not in str(e)
            ):
                raise
            print(e)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [compare_onnx_execution] execute with 3 inputs
    [compare_onnx_execution] execute first model
    [compare_onnx_execution] got 53 results
    [compare_onnx_execution] execute second model
    [compare_onnx_execution] got 63 results
    [compare_onnx_execution] compute edit distance
    [compare_onnx_execution] got 77 pairs
    [compare_onnx_execution] done
    001 ~ | INITIA float32  2:512x512            VCDC                 onnx::MatMul_131                 | INITIA int64    1:2                  BKAA                 ortshared_7_1_2_0_token_110     
    002 + |                                                                                            | INITIA int64    1:3                  CKSA                 ortshared_7_1_3_0_token_106      
    003 + |                                                                                            | INITIA int64    1:1                  DAAA                 ortshared_7_1_1_4_token_115      
    004 + |                                                                                            | INITIA float32                       BAAA                 ortshared_1_0_1_1_token_116      
    005 + |                                                                                            | INITIA int64    1:1                  BAAA                 ortshared_7_1_1_0_token_107      
    006 + |                                                                                            | INITIA float32  2:512x512            TWAC                 _attention_1_torch_nn_modules_li 
    007 ~ | INITIA float32  2:512x512            XOFD                 onnx::MatMul_132                 | INITIA float32  2:512x512            VCDC                 _attention_1_torch_nn_modules_li
    008 ~ | INITIA float32  2:512x512            FUIE                 onnx::MatMul_133                 | INITIA float32  2:512x512            XOFD                 _attention_1_torch_nn_modules_li
    009 ~ | INITIA float32  2:512x512            TWAC                 onnx::MatMul_169                 | INITIA float32  2:512x512            FUIE                 _attention_1_torch_nn_modules_li
    010 ~ | INITIA int64    1:4                  CKIM                 ortshared_7_1_4_0_token_76       | INITIA int64    1:1                  GAAA                 ortshared_7_1_1_1_token_108     
    011 ~ | INITIA int64    1:1                  AAAA                 ortshared_7_1_1_2_token_75       | INITIA int64    1:4                  CKIM                 ortshared_7_1_4_0_token_112     
    012 ~ | INITIA int64    1:1                  DAAA                 ortshared_7_1_1_1_token_74       | INITIA int64                         BAAA                 ortshared_7_0_1_0_token_109     
    013 = | INITIA float32  2:1024x64            CJYF                 /attention/rotary_emb/Constant_o | INITIA float32  2:1024x64            CJYF                 _attention_1__val_22            
    014 - | INITIA float32  2:1024x64            GSEC                 /attention/rotary_emb/Constant_1 |                                                                                           
    015 ~ | INITIA int64    1:1                  ?AAA                 ortshared_7_1_1_0_token_73       | INITIA int64                         ZAAA                 ortshared_7_0_1_1_token_117     
    016 ~ | INITIA int64    1:1                  BAAA                 ortshared_7_1_1_3_token_78       | INITIA int64    1:1                  AAAA                 ortshared_7_1_1_3_token_113     
    017 + |                                                                                            | INITIA float32  2:1024x64            GSEC                 _attention_1__val_32             
    018 - | INITIA int64    1:3                  CKSA                 ortshared_7_1_3_0_token_80       |                                                                                           
    019 ~ | INITIA int64    1:1                  GAAA                 ortshared_7_1_1_4_token_79       | INITIA int64    1:1                  ?AAA                 ortshared_7_1_1_2_token_111     
    020 = | INPUT  float32  3:2x1024x512         WBSH                 input                            | INPUT  float32  3:2x1024x512         WBSH                 l_hidden_states_                
    021 = | INPUT  float32  4:2x1x1024x1024      AAAA                 onnx::Add_1                      | INPUT  float32  4:2x1x1024x1024      AAAA                 l_attention_mask_               
    022 = | INPUT  int64    2:1x1024             KAQG                 position_ids                     | INPUT  int64    2:1x1024             KAQG                 l_position_ids_                 
    023 + |                                                                                            | RESULT int64    2:1x1024             KAQG Expand          _attention_1__val_35             
    024 + |                                                                                            | RESULT int64    3:1x1024x1           KAQG Unsqueeze       _attention_1__val_37             
    025 + |                                                                                            | RESULT int64    3:1x1024x1           KAQG Concat          _attention_1__val_38             
    026 ~ | RESULT float32  3:1x1024x64          GSEC Gather          /attention/Gather_1_output_0     | RESULT float32  3:1x1024x64          GSEC GatherND        _attention_1__val_39            
    027 = | RESULT float32  4:1x1x1024x64        GSEC Unsqueeze       /attention/Unsqueeze_1_output_0  | RESULT float32  4:1x1x1024x64        GSEC Unsqueeze       _attention_1_aten_unsqueeze_65_n
    028 + |                                                                                            | RESULT float32  4:1x1x1024x64        GSEC Transpose       _attention_1_unsqueeze_1         
    029 + |                                                                                            | RESULT float32  3:2x1024x512         YAKK MatMul          _attention_1_attention_q_proj_1  
    030 + |                                                                                            | RESULT float32  4:2x1024x8x64        YAKK Reshape         _attention_1_view_6              
    031 + |                                                                                            | RESULT float32  4:2x8x1024x64        ZZDQ Transpose       _attention_1_transpose           
    032 + |                                                                                            | RESULT float32  4:2x8x1024x32        TENN Slice           _attention_1_slice_4             
    033 + |                                                                                            | RESULT float32  4:2x8x1024x32        HWNN Neg             _attention_1_neg                 
    034 + |                                                                                            | RESULT float32  4:2x8x1024x32        GVRD Slice           _attention_1_slice_3             
    035 + |                                                                                            | RESULT float32  4:2x8x1024x64        ORER Concat          _attention_1_cat                 
    036 + |                                                                                            | RESULT float32  4:2x8x1024x64        UQOL Mul             _attention_1_mul_1               
    037 + |                                                                                            | RESULT float32  3:1x1024x64          CJYF GatherND        _attention_1__val_29             
    038 + |                                                                                            | RESULT float32  4:1x1x1024x64        CJYF Unsqueeze       _attention_1_aten_unsqueeze_55_n 
    039 + |                                                                                            | RESULT float32  4:1x1x1024x64        CJYF Transpose       _attention_1_unsqueeze           
    040 + |                                                                                            | RESULT float32  4:2x8x1024x64        HZQS Mul             _attention_1_mul                 
    041 + |                                                                                            | RESULT float32  4:2x8x1024x64        AQFC Add             _attention_1_add                 
    042 = | RESULT float32  4:1x1024x1x64        GSEC Transpose       Transpose_token_4_out0           | RESULT float32  4:1x1024x1x64        GSEC Transpose       Transpose_token_6_out0          
    043 = | RESULT float32  3:2x1024x512         FXPK MatMul          /attention/k_proj/MatMul_output_ | RESULT float32  3:2x1024x512         FXPK MatMul          _attention_1_attention_k_proj_1 
    044 = | RESULT float32  4:2x1024x8x64        FXPK Reshape         /attention/Reshape_1_output_0    | RESULT float32  4:2x1024x8x64        FXPK Reshape         _attention_1_view_7             
    045 = | RESULT float32  4:2x1024x8x32        TBJT Slice           /attention/Slice_3               | RESULT float32  4:2x1024x8x32        TBJT Slice           _attention_1_Slice_140          
    046 = | RESULT float32  4:2x1024x8x32        HZRH Neg             /attention/Neg_1                 | RESULT float32  4:2x1024x8x32        HZRH Neg             _attention_1_aten_neg_141_n0    
    047 = | RESULT float32  4:2x1024x8x32        MWGQ Slice           /attention/Slice_2               | RESULT float32  4:2x1024x8x32        MWGQ Slice           _attention_1_Slice_123          
    048 = | RESULT float32  4:2x1024x8x64        SVWY Concat          /attention/Concat_1              | RESULT float32  4:2x1024x8x64        SVWY Concat          _attention_1_aten_cat_143_n0    
    049 = | RESULT float32  4:2x1024x8x64        ZASF Mul             /attention/Mul_3                 | RESULT float32  4:2x1024x8x64        ZASF Mul             _attention_1_aten_mul_144_n0    
    050 - | RESULT float32  3:1x1024x64          CJYF Gather          /attention/Gather_output_0       |                                                                                           
    051 - | RESULT float32  4:1x1x1024x64        CJYF Unsqueeze       /attention/Unsqueeze_output_0    |                                                                                           
    052 = | RESULT float32  4:1x1024x1x64        CJYF Transpose       Transpose_token_6_out0           | RESULT float32  4:1x1024x1x64        CJYF Transpose       Transpose_token_8_out0          
    053 = | RESULT float32  4:2x1024x8x64        RZBC Mul             /attention/Mul_2                 | RESULT float32  4:2x1024x8x64        RZBC Mul             _attention_1_aten_mul_106_n0    
    054 = | RESULT float32  4:2x1024x8x64        PYSH Add             /attention/Add_1                 | RESULT float32  4:2x1024x8x64        PYSH Add             _inlfunc_aten_add|folded_1_n3   
    055 = | RESULT float32  4:2x8x64x1024        XSZB Transpose       /attention/Transpose_3_output_0  | RESULT float32  4:2x8x64x1024        XSZB Transpose       _attention_1_transpose_3        
    056 - | RESULT float32  3:2x1024x512         YAKK MatMul          /attention/q_proj/MatMul_output_ |                                                                                           
    057 - | RESULT float32  4:2x1024x8x64        YAKK Reshape         /attention/Reshape_output_0      |                                                                                           
    058 - | RESULT float32  4:2x8x1024x64        ZZDQ Transpose       /attention/Transpose_output_0    |                                                                                           
    059 - | RESULT float32  4:2x8x1024x32        TENN Slice           /attention/Slice_1_output_0      |                                                                                           
    060 - | RESULT float32  4:2x8x1024x32        HWNN Neg             /attention/Neg_output_0          |                                                                                           
    061 - | RESULT float32  4:2x8x1024x32        GVRD Slice           /attention/Slice_output_0        |                                                                                           
    062 - | RESULT float32  4:2x8x1024x64        ORER Concat          /attention/Concat_output_0       |                                                                                           
    063 - | RESULT float32  4:2x8x1024x64        UQOL Mul             /attention/Mul_1_output_0        |                                                                                           
    064 - | RESULT float32  4:2x8x1024x64        HZQS Mul             /attention/Mul_output_0          |                                                                                           
    065 - | RESULT float32  4:2x8x1024x64        AQFC Add             /attention/Add_output_0          |                                                                                           
    066 = | RESULT float32  4:2x8x1024x1024      AIGW FusedMatMul     /attention/Div_output_0          | RESULT float32  4:2x8x1024x1024      AIGW FusedMatMul     _attention_1_div                
    067 + |                                                                                            | RESULT float32  4:2x1x1024x1024      AAAA Mul             _inlfunc_aten_add|folded_2_other 
    068 = | RESULT float32  4:2x8x1024x1024      AIGW Add             /attention/Add_2_output_0        | RESULT float32  4:2x8x1024x1024      AIGW Add             _attention_1_add_2              
    069 = | RESULT float32  4:2x8x1024x1024      NOOO Softmax         /attention/Softmax_output_0      | RESULT float32  4:2x8x1024x1024      NOOO Softmax         _attention_1__softmax           
    070 = | RESULT float32  3:2x1024x512         EMAB MatMul          /attention/v_proj/MatMul_output_ | RESULT float32  3:2x1024x512         EMAB MatMul          _attention_1_attention_v_proj_1 
    071 = | RESULT float32  4:2x1024x8x64        EMAB Reshape         /attention/Reshape_2_output_0    | RESULT float32  4:2x1024x8x64        EMAB Reshape         _attention_1_view_8             
    072 = | RESULT float32  4:2x8x1024x64        YTYC Transpose       /attention/Transpose_2_output_0  | RESULT float32  4:2x8x1024x64        YTYC Transpose       _attention_1_transpose_2        
    073 = | RESULT float32  4:2x8x1024x64        AQXB MatMul          /attention/MatMul_1_output_0     | RESULT float32  4:2x8x1024x64        AQXB MatMul          _attention_1_view_14            
    074 = | RESULT float32  4:2x1024x8x64        HJYA Transpose       /attention/Transpose_4_output_0  | RESULT float32  4:2x1024x8x64        HJYA Transpose       _attention_1_transpose_4        
    075 = | RESULT float32  3:2x1024x512         HJYA Reshape         /attention/Reshape_3_output_0    | RESULT float32  3:2x1024x512         HJYA Reshape         _attention_1_view_15            
    076 = | RESULT float32  3:2x1024x512         ROEB MatMul          130                              | RESULT float32  3:2x1024x512         ROEB MatMul          attention_1                     
    077 = | OUTPUT float32  3:2x1024x512         ROEB                 130                              | OUTPUT float32  3:2x1024x512         ROEB                 attention_1                     




.. GENERATED FROM PYTHON SOURCE LINES 279-280

See :ref:`l-long-outputs-llama-diff-export` for a better view.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 12.729 seconds)


.. _sphx_glr_download_auto_examples_plot_llama_diff_export_301.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_llama_diff_export_301.ipynb <plot_llama_diff_export_301.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_llama_diff_export_301.py <plot_llama_diff_export_301.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
