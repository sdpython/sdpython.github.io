Search.setIndex({"alltitles": {"._bench_test": [[1, null]], "._command_lines_parser": [[2, null]], ".args": [[3, null]], ".bench_run": [[4, null]], ".checks": [[5, null]], ".convert": [[7, null]], ".convert.convert_helper": [[6, null]], ".convert.ort_helper": [[8, null]], ".export_helpers": [[9, null]], ".ext_test_case": [[10, null]], ".gradient": [[12, null]], ".gradient.grad_helper": [[11, null]], ".gradient.loss_helper": [[13, null]], ".gradient.ops": [[14, null]], ".gradient.ops.op_broadcast_gradient_args": [[15, null]], ".helpers": [[16, null]], ".memory_peak": [[18, null]], ".model_run": [[19, null]], ".onnx_tools": [[20, null]], ".ort_session": [[21, null]], ".plotting": [[23, null]], ".plotting.data": [[22, null]], ".plotting.memory": [[24, null]], ".reference": [[26, null]], ".reference.evaluator": [[25, null]], ".reference.ops": [[27, null]], ".reference.ops.op_add_add_mul_mul": [[28, null]], ".reference.ops.op_average_pool_grad": [[29, null]], ".reference.ops.op_cast_like": [[30, null]], ".reference.ops.op_complex": [[31, null]], ".reference.ops.op_concat": [[32, null]], ".reference.ops.op_constant_of_shape": [[33, null]], ".reference.ops.op_fused_matmul": [[34, null]], ".reference.ops.op_gather_grad": [[35, null]], ".reference.ops.op_memcpy_host": [[36, null]], ".reference.ops.op_mul_sigmoid": [[37, null]], ".reference.ops.op_negxplus1": [[38, null]], ".reference.ops.op_qlinear_average_pool": [[39, null]], ".reference.ops.op_qlinear_conv": [[40, null]], ".reference.ops.op_quick_gelu": [[41, null]], ".reference.ops.op_replace_zero": [[42, null]], ".reference.ops.op_rotary": [[43, null]], ".reference.ops.op_scatter_elements": [[44, null]], ".reference.ops.op_scatternd_of_shape": [[45, null]], ".reference.ops.op_simplified_layer_normalization": [[46, null]], ".reference.ops.op_skip_layer_normalization": [[47, null]], ".reference.ops.op_slice": [[48, null]], ".reference.ops.op_transpose_cast": [[49, null]], ".reference.ops.op_tri_matrix": [[50, null]], ".reference.ort_evaluator": [[51, null]], ".reference.quantized_tensor": [[52, null]], ".skl": [[55, null]], ".skl.convert": [[53, null]], ".skl.helpers": [[54, null]], ".torch_bench": [[84, null]], ".torch_bench.bash_bench_agg": [[71, null]], ".torch_bench.bash_bench_explicit": [[72, null]], ".torch_bench.bash_bench_huggingface": [[73, null]], ".torch_bench.bash_bench_timm": [[74, null]], ".torch_bench.bash_bench_torchbench": [[75, null]], ".torch_bench.bash_bench_torchbench_ado": [[76, null]], ".torch_bench.bash_bench_untrained": [[77, null]], ".torch_bench.check_model": [[78, null]], ".torch_bench.dort_bench": [[79, null]], ".torch_bench.dort_bench_profile": [[80, null]], ".torch_bench.dort_profile": [[81, null]], ".torch_bench.export_model": [[82, null]], ".torch_bench.export_model_helper": [[83, null]], ".torch_dynamo": [[89, null]], ".torch_dynamo._dynamo_exporter": [[85, null]], ".torch_dynamo.backend_helper": [[86, null]], ".torch_dynamo.debug_backend": [[87, null]], ".torch_dynamo.fast_backend": [[88, null]], ".torch_interpreter": [[103, null]], ".torch_interpreter._aten_functions": [[91, null]], ".torch_interpreter._aten_functions_attention": [[92, null]], ".torch_interpreter._aten_methods": [[93, null]], ".torch_interpreter._doc_": [[94, null]], ".torch_interpreter._exceptions": [[95, null]], ".torch_interpreter._non_aten_functions": [[96, null]], ".torch_interpreter._prims_functions": [[97, null]], ".torch_interpreter._torch_helper": [[98, null]], ".torch_interpreter.aten_functions": [[99, null]], ".torch_interpreter.aten_methods": [[100, null]], ".torch_interpreter.dispatcher": [[101, null]], ".torch_interpreter.export_options": [[102, null]], ".torch_interpreter.interpreter": [[104, null]], ".torch_interpreter.investigate_helper": [[105, null]], ".torch_interpreter.onnx_export": [[106, null]], ".torch_interpreter.oxs_dispatcher": [[107, null]], ".torch_interpreter.oxs_opset": [[108, null]], ".torch_interpreter.piece_by_piece": [[109, null]], ".torch_interpreter.piece_by_piece_serialize": [[110, null]], ".torch_interpreter.tracing": [[111, null]], ".torch_models": [[114, null]], ".torch_models.diffusion_model_helper": [[112, null]], ".torch_models.dump_helper": [[113, null]], ".torch_models.llama_helper": [[115, null]], ".torch_models.llm_model_helper": [[116, null]], ".torch_models.llm_model_setup": [[117, null]], ".torch_models.mistral_helper": [[118, null]], ".torch_models.phi3_helper": [[119, null]], ".torch_models.phi_helper": [[120, null]], ".torch_models.training_helper": [[121, null]], ".torch_test_helper": [[122, null]], ".xbuilder": [[126, null]], ".xbuilder._onnx_helper": [[123, null]], ".xbuilder.graph_builder": [[124, null]], ".xbuilder.graph_builder_opset": [[125, null]], ".xbuilder.model_container": [[127, null]], ".xbuilder.optimization_options": [[128, null]], ".xbuilder.reverse_graph_builder": [[129, null]], ".xoptim": [[131, null]], ".xoptim.graph_builder_optim": [[130, null]], ".xoptim.order_optim": [[132, null]], ".xoptim.patterns": [[133, null]], ".xoptim.patterns.onnx_any": [[134, null]], ".xoptim.patterns.onnx_attention": [[135, null]], ".xoptim.patterns.onnx_cast": [[136, null]], ".xoptim.patterns.onnx_clip": [[137, null]], ".xoptim.patterns.onnx_constants": [[138, null]], ".xoptim.patterns.onnx_conv": [[139, null]], ".xoptim.patterns.onnx_dropout": [[140, null]], ".xoptim.patterns.onnx_equal": [[141, null]], ".xoptim.patterns.onnx_expand": [[142, null]], ".xoptim.patterns.onnx_functions": [[143, null]], ".xoptim.patterns.onnx_layer_normalization": [[144, null]], ".xoptim.patterns.onnx_matmul": [[145, null]], ".xoptim.patterns.onnx_mul": [[146, null]], ".xoptim.patterns.onnx_reduce": [[147, null]], ".xoptim.patterns.onnx_reshape": [[148, null]], ".xoptim.patterns.onnx_rotary": [[149, null]], ".xoptim.patterns.onnx_sequence": [[150, null]], ".xoptim.patterns.onnx_shape": [[151, null]], ".xoptim.patterns.onnx_slice": [[152, null]], ".xoptim.patterns.onnx_split": [[153, null]], ".xoptim.patterns.onnx_sub": [[154, null]], ".xoptim.patterns.onnx_transpose": [[155, null]], ".xoptim.patterns.onnx_unsqueeze": [[156, null]], ".xoptim.patterns_api": [[157, null]], ".xoptim.patterns_exp": [[161, null]], ".xoptim.patterns_exp.binary_operators": [[158, null]], ".xoptim.patterns_exp.constant_of_shape_scatter_nd": [[159, null]], ".xoptim.patterns_exp.constants": [[160, null]], ".xoptim.patterns_exp.simple_rotary": [[162, null]], ".xoptim.patterns_exp.unary_operators": [[163, null]], ".xoptim.patterns_exp.where_replace": [[164, null]], ".xoptim.patterns_fix": [[166, null]], ".xoptim.patterns_fix.add_reduction_scatter_nd": [[165, null]], ".xoptim.patterns_investigation": [[168, null]], ".xoptim.patterns_investigation.element_wise": [[167, null]], ".xoptim.patterns_investigation.llm_patterns": [[169, null]], ".xoptim.patterns_ml": [[170, null]], ".xoptim.patterns_ml.tree_ensemble": [[171, null]], ".xoptim.patterns_ort": [[178, null]], ".xoptim.patterns_ort.activation": [[172, null]], ".xoptim.patterns_ort.activation_grad": [[173, null]], ".xoptim.patterns_ort.batch_normalization": [[174, null]], ".xoptim.patterns_ort.fused_conv": [[175, null]], ".xoptim.patterns_ort.fused_matmul": [[176, null]], ".xoptim.patterns_ort.gather_grad": [[177, null]], ".xoptim.patterns_ort.llm_optim": [[179, null]], ".xoptim.patterns_ort.simplified_layer_normalization": [[180, null]], ".xoptim.repeated_optim": [[181, null]], ".xoptim.unfused": [[182, null]], ".xshape": [[189, null]], ".xshape._builder_runtime": [[183, null]], ".xshape._inference_runtime": [[184, null]], ".xshape._onnx_helper": [[185, null]], ".xshape._shape_helper": [[186, null]], ".xshape._shape_runtime": [[187, null]], ".xshape.evaluate_expressions": [[188, null]], ".xshape.rename_expressions": [[190, null]], ".xshape.shape_builder": [[191, null]], ".xshape.shape_builder_impl": [[192, null]], ".xshape.shape_type_compute": [[193, null]], ".xshape.simplify_expressions": [[194, null]], ".xshape.type_inference": [[195, null]], "0.1.0": [[0, "id1"]], "101: A custom backend for torch": [[204, null]], "101: Linear Regression and export to ONNX": [[208, null]], "101: Onnx Model Optimization based on Pattern Rewriting": [[200, null]], "101: Onnx Model Rewriting": [[202, null]], "101: Profile an existing model with onnxruntime": [[201, null]], "101: Some dummy examples with torch.export.export": [[205, null]], "102: Examples with onnxscript": [[199, null]], "102: First test with ExecuTorch": [[197, null]], "102: Tweak onnx export": [[207, null]], "201: Better shape inference": [[203, null]], "201: Evaluate different ways to export a torch model to ONNX": [[206, null]], "201: Use torch to export a scikit-learn model into ONNX": [[209, null]], "A converting function": [[230, "a-converting-function"]], "A custom backend": [[204, "a-custom-backend"]], "A model": [[200, "a-model"], [202, "a-model"], [204, "a-model"]], "A model with a custom ops": [[218, "a-model-with-a-custom-ops"], [219, "a-model-with-a-custom-ops"]], "A model with a test": [[217, "a-model-with-a-test"], [220, "a-model-with-a-test"]], "A simple LLM": [[221, "a-simple-llm"]], "A simple model": [[203, "a-simple-model"]], "API": [[17, null], [230, "api"]], "Adding a pattern": [[232, "adding-a-pattern"]], "Aggregated Report": [[223, "aggregated-report"]], "Available Patterns and API": [[232, "available-patterns-and-api"]], "Basic Shape Inference": [[203, "basic-shape-inference"]], "Benchmark Aggregator": [[71, "benchmark-aggregator"]], "Benchmark Backends (torch.compile)": [[226, null]], "Benchmark Exporters to ONNX": [[226, null]], "Benchmark a llama model": [[247, "benchmark-a-llama-model"]], "Benchmark exported models with ORT": [[206, "benchmark-exported-models-with-ort"]], "Benchmark exporters": [[72, "benchmark-exporters"], [73, "benchmark-exporters"], [74, "benchmark-exporters"], [75, "benchmark-exporters"], [76, "benchmark-exporters"], [77, "benchmark-exporters"]], "Benchmarks from the command line": [[226, null]], "Change Logs": [[0, null]], "Check Model": [[78, "check-model"]], "Check the exporter on a dummy from HuggingFace": [[216, null]], "Classic Shape Inference": [[203, "classic-shape-inference"]], "Command Lines": [[228, null]], "Common Errors": [[211, "common-errors"]], "Compare torch exporters": [[196, "compare-torch-exporters"]], "Comparison optimized and not optimized?": [[221, "comparison-optimized-and-not-optimized"]], "Computation times": [[210, null], [222, null], [241, null]], "Constants": [[232, "constants"]], "Contents": [[234, null]], "Conventions": [[230, "conventions"]], "Conversion to ONNX": [[208, "conversion-to-onnx"]], "Convert a Model": [[197, "convert-a-model"]], "Custom Exporter": [[230, null], [236, "custom-exporter"]], "Custom Opset and Local Functions": [[199, "custom-opset-and-local-functions"]], "Debugging": [[230, "debugging"], [230, "id1"]], "Design": [[231, null]], "Different Implementations": [[230, "different-implementations"]], "Dispatcher": [[103, "dispatcher"]], "Draft Export": [[212, "draft-export"]], "Dynamic Shapes": [[213, "dynamic-shapes"], [230, "dynamic-shapes"]], "Dynamo Backends": [[229, null]], "Dynamo Exporter": [[236, "dynamo-exporter"]], "DynamoInterpreter": [[230, "dynamointerpreter"]], "Easy Case": [[205, "easy-case"]], "EasyPatternOptimization": [[131, "easypatternoptimization"]], "Evaluate Expressions": [[203, "evaluate-expressions"]], "Evaluate the export": [[213, "evaluate-the-export"]], "Evaluation": [[208, "evaluation"]], "Example": [[230, "example"], [232, "example"]], "Examples Gallery": [[196, null]], "Examples or Tools": [[232, "examples-or-tools"]], "Execution": [[197, "execution"]], "Export": [[220, "export"]], "Export Options": [[230, "export-options"]], "Export Phi-3.5-mini-instruct piece by piece": [[213, null]], "Export Phi-3.5-mini-instruct with draft_export": [[212, null]], "Export Phi-3.5-mini-instruct with report_exportability": [[214, null]], "Export Times": [[236, null]], "Export a model": [[82, "export-a-model"]], "Export a model with a loop (scan)": [[215, null]], "Export for training": [[205, "export-for-training"]], "Export module as local functions": [[230, "export-module-as-local-functions"]], "Export to ONNX": [[209, "export-to-onnx"]], "ExportOptions": [[103, "exportoptions"]], "Exportability": [[214, "exportability"]], "ExportedProgram": [[216, "exportedprogram"]], "Exporter Profiling": [[206, "exporter-profiling"]], "Exporter Recipes Gallery": [[211, null]], "Exporter memory": [[206, "exporter-memory"]], "Exporter speed": [[206, "exporter-speed"]], "ExtendedReferenceEvaluator": [[26, "extendedreferenceevaluator"]], "Fake Tensors": [[230, "fake-tensors"]], "Filtering": [[202, "filtering"]], "Final step": [[209, "final-step"]], "First Example": [[230, "first-example"]], "First conversion to ONNX": [[221, "first-conversion-to-onnx"]], "First step: tracing intermediate outputs": [[209, "first-step-tracing-intermediate-outputs"]], "Focus on one optimizer": [[200, "focus-on-one-optimizer"]], "FunctionOptions": [[126, "functionoptions"]], "Functions": [[230, "functions"]], "Galleries of Examples and Recipes": [[233, null]], "Getting started": [[196, "getting-started"], [211, "getting-started"]], "Graph": [[232, "graph"]], "GraphBuilder": [[126, "graphbuilder"], [230, "graphbuilder"]], "GraphBuilderPatternOptimization": [[131, "graphbuilderpatternoptimization"]], "Guess the cache dimension": [[216, "guess-the-cache-dimension"]], "InferShapesOptions": [[126, "infershapesoptions"]], "Inlining": [[221, "inlining"]], "Interesting scripts or command lines": [[227, null]], "Internal containers": [[230, "internal-containers"]], "Issues with torch.export.export": [[248, "issues-with-torch-export-export"]], "License": [[235, null]], "Linrar Regression with pytorch": [[208, "linrar-regression-with-pytorch"]], "List": [[205, "list"]], "List of models": [[223, "list-of-models"]], "Llama, Phi, Mistral": [[239, null]], "Long Outputs uneasy to read": [[238, null]], "Loops": [[205, "loops"]], "MatchResult": [[131, "matchresult"]], "Max Size": [[227, "max-size"]], "Measuring the exporters on a short list of sets of models": [[223, null]], "Memory First Running Time (ORT)": [[206, "memory-first-running-time-ort"]], "Memory Loading Time (ORT)": [[206, "memory-loading-time-ort"]], "Memory Running Time (ORT)": [[206, "memory-running-time-ort"]], "Miscellaneous": [[237, null]], "Model": [[212, "model"], [213, "model"], [214, "model"]], "ModelProto to python Code": [[209, "modelproto-to-python-code"]], "Module": [[209, "module"]], "Module and sub modules": [[209, "module-and-sub-modules"]], "More": [[234, null]], "Multiple Runs": [[223, "multiple-runs"]], "Nodes": [[232, "nodes"]], "ONNX with submodules": [[221, "onnx-with-submodules"]], "Older versions": [[234, "older-versions"]], "One objective: SPEED": [[230, "one-objective-speed"]], "Opsets": [[232, "opsets"]], "Optimization": [[200, "optimization"], [202, "optimization"]], "Optimization Algorithm": [[232, "optimization-algorithm"]], "OptimizationOptions": [[126, "optimizationoptions"]], "Optimizations": [[221, "optimizations"], [230, "optimizations"]], "Optimizations for CUDA": [[221, "optimizations-for-cuda"]], "Other functions": [[26, "module-experimental_experiment.reference"], [55, "module-experimental_experiment.skl"], [89, "module-experimental_experiment.torch_dynamo"], [103, "module-experimental_experiment.torch_interpreter"], [126, "module-experimental_experiment.xbuilder"], [131, "module-experimental_experiment.xoptim"], [189, "module-experimental_experiment.xshape"]], "Pairwise Distance": [[215, "pairwise-distance"]], "Pattern Matching": [[198, "pattern-matching"]], "Pattern Optimizations": [[204, "pattern-optimizations"]], "Pattern Optimizer": [[232, null]], "PatternOptimization": [[131, "patternoptimization"]], "PatternOptimization.apply": [[232, "patternoptimization-apply"]], "PatternOptimization.match": [[232, "patternoptimization-match"]], "Patterns": [[232, "patterns"]], "Phi": [[240, null]], "Playground for big optimization pattern": [[198, null]], "Pratice": [[230, "pratice"]], "Preparation": [[201, "preparation"]], "Preserve Modules": [[205, "preserve-modules"]], "Profile python execution for DORT": [[81, "profile-python-execution-for-dort"]], "Profiles an execution": [[80, "profiles-an-execution"]], "Profiling": [[201, "profiling"]], "Registration": [[218, "registration"], [219, "registration"]], "Replace the failing module by a custom op": [[213, "replace-the-failing-module-by-a-custom-op"]], "Run llama model with DORT": [[79, "run-llama-model-with-dort"]], "RuntimeError: CUDA error: CUDA-capable device(s) is/are busy or unavailable": [[248, "runtimeerror-cuda-error-cuda-capable-device-s-is-are-busy-or-unavailable"]], "Select the pattern to use": [[232, "select-the-pattern-to-use"]], "Shape inference": [[232, "shape-inference"]], "ShapeBuilder": [[250, null]], "Shapes And Types": [[230, "shapes-and-types"]], "Shapes, Types": [[232, "shapes-types"]], "Show the interesting models for CPU": [[206, "show-the-interesting-models-for-cpu"]], "Show the interesting models for CUDA": [[206, "show-the-interesting-models-for-cuda"]], "Simple API": [[232, "simple-api"]], "Simplified API": [[230, "simplified-api"]], "Single Run": [[223, "single-run"]], "Some helpers": [[206, "some-helpers"]], "Start from a docker": [[247, null]], "Statistics": [[232, "statistics"]], "Suggested Patch": [[215, "suggested-patch"], [217, "suggested-patch"]], "Supported Models By the Custom Backend": [[239, null]], "The exporters": [[206, "the-exporters"]], "The model": [[206, "the-model"]], "The model creation": [[216, "the-model-creation"]], "The pattern": [[202, "the-pattern"]], "Tools from the command line": [[242, null]], "Training": [[204, "training"]], "Tutorial": [[249, null]], "Unexpected Errors": [[248, null]], "Unflattened": [[207, "unflattened"]], "Use of local function": [[230, "use-of-local-function"]], "Validation": [[209, "validation"], [209, "id1"], [220, "validation"]], "Validation again": [[209, "validation-again"]], "Verbosity": [[232, "verbosity"]], "VirtualTensor": [[126, "virtualtensor"]], "What about dynamic shapes?": [[204, "what-about-dynamic-shapes"]], "What about the ONNX model?": [[204, "what-about-the-onnx-model"]], "With an integer as input": [[205, "with-an-integer-as-input"], [205, "id1"]], "With dynamic shapes": [[208, "with-dynamic-shapes"]], "Wrapped": [[205, "wrapped"]], "cus_p2": [[206, "cus-p2"], [206, "id2"]], "data": [[208, "data"]], "dynamo": [[206, "dynamo"], [206, "id4"]], "dynger_backend": [[89, "dynger-backend"]], "dynopt": [[206, "dynopt"], [206, "id3"]], "examples": [[238, "examples"]], "experimental-experiment: fuzzy work": [[234, null]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner": [[56, null]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg": [[57, null]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg_helper": [[58, null]], "experimental_experiment.torch_bench._bash_bench_cmd": [[59, null]], "experimental_experiment.torch_bench._bash_bench_model_runner": [[60, null]], "experimental_experiment.torch_bench._bash_bench_models_helper": [[61, null]], "experimental_experiment.torch_bench._bash_bench_set_dummies": [[62, null]], "experimental_experiment.torch_bench._bash_bench_set_explicit": [[63, null]], "experimental_experiment.torch_bench._bash_bench_set_huggingface": [[64, null]], "experimental_experiment.torch_bench._bash_bench_set_timm": [[65, null]], "experimental_experiment.torch_bench._bash_bench_set_torchbench": [[66, null]], "experimental_experiment.torch_bench._bash_bench_set_torchbench_ado": [[67, null]], "experimental_experiment.torch_bench._bash_bench_untrained": [[68, null]], "experimental_experiment.torch_bench._dort_cmd_common": [[69, null]], "experimental_experiment.torch_bench._dort_cmd_common_models": [[70, null]], "experimental_experiment.torch_bench.dort_bench": [[224, null]], "experimental_experiment.torch_bench.dort_profile": [[225, null]], "experimental_experiment.torch_dynamo.partition": [[90, null]], "export, unflatten and compile": [[207, "export-unflatten-and-compile"]], "lighten": [[243, "lighten"], [245, "lighten"]], "match_input_parameters": [[103, "match-input-parameters"]], "modules": [[7, null], [12, null], [14, null], [17, null], [23, null], [26, null], [27, null], [55, null], [84, null], [89, null], [103, null], [114, null], [126, null], [131, null], [133, null], [161, null], [166, null], [168, null], [170, null], [178, null], [189, null]], "onnx_custom_backend": [[89, "onnx-custom-backend"]], "onnx_debug_backend": [[89, "onnx-debug-backend"]], "plot_llama_diff_export": [[238, "plot-llama-diff-export"]], "python -m experimental_experiment lighten and unlighten": [[243, null]], "python -m experimental_experiment optimize": [[244, null]], "python -m experimental_experiment print": [[245, null]], "python -m experimental_experiment run": [[246, null]], "scikit-learn: SGD algorithm": [[208, "scikit-learn-sgd-algorithm"]], "scikit-learn: the simple regression": [[208, "scikit-learn-the-simple-regression"]], "script": [[206, "script"], [206, "id1"]], "submodules": [[12, null], [17, null], [26, null], [131, null]], "to_onnx": [[55, "to-onnx"], [103, "to-onnx"]], "to_onnx and a custom operator inplace": [[219, null]], "to_onnx and a custom operator registered with a function": [[218, null]], "to_onnx and a model with a test": [[217, null]], "to_onnx and padding one dimension to a mulitple of a constant": [[220, null]], "to_onnx and submodules from LLMs": [[221, null]], "to_onnx: another export to investigate": [[251, null]], "torch implementation of KNNImputer": [[209, "torch-implementation-of-knnimputer"]], "torch implementation of nan_euclidean_distances": [[209, "torch-implementation-of-nan-euclidean-distances"]], "torch_export_patches": [[230, "torch-export-patches"]], "unlighten": [[243, "unlighten"]]}, "docnames": ["CHANGELOGS", "api/_bench_test", "api/_command_lines_parser", "api/args", "api/bench_run", "api/checks", "api/convert/convert_helper", "api/convert/index", "api/convert/ort_helper", "api/export_helpers", "api/ext_test_case", "api/gradient/grad_helper", "api/gradient/index", "api/gradient/loss_helper", "api/gradient/ops/index", "api/gradient/ops/op_broadcast_gradient_args", "api/helpers", "api/index", "api/memory_peak", "api/model_run", "api/onnx_tools", "api/ort_session", "api/plotting/data", "api/plotting/index", "api/plotting/memory", "api/reference/evaluator", "api/reference/index", "api/reference/ops/index", "api/reference/ops/op_add_add_mul_mul", "api/reference/ops/op_average_pool_grad", "api/reference/ops/op_cast_like", "api/reference/ops/op_complex", "api/reference/ops/op_concat", "api/reference/ops/op_constant_of_shape", "api/reference/ops/op_fused_matmul", "api/reference/ops/op_gather_grad", "api/reference/ops/op_memcpy_host", "api/reference/ops/op_mul_sigmoid", "api/reference/ops/op_negxplus1", "api/reference/ops/op_qlinear_average_pool", "api/reference/ops/op_qlinear_conv", "api/reference/ops/op_quick_gelu", "api/reference/ops/op_replace_zero", "api/reference/ops/op_rotary", "api/reference/ops/op_scatter_elements", "api/reference/ops/op_scatternd_of_shape", "api/reference/ops/op_simplified_layer_normalization", "api/reference/ops/op_skip_layer_normalization", "api/reference/ops/op_slice", "api/reference/ops/op_transpose_cast", "api/reference/ops/op_tri_matrix", "api/reference/ort_evaluator", "api/reference/quantized_tensor", "api/skl/convert", "api/skl/helpers", "api/skl/index", "api/torch_bench/_bash_bench_benchmark_runner", "api/torch_bench/_bash_bench_benchmark_runner_agg", "api/torch_bench/_bash_bench_benchmark_runner_agg_helper", "api/torch_bench/_bash_bench_cmd", "api/torch_bench/_bash_bench_model_runner", "api/torch_bench/_bash_bench_models_helper", "api/torch_bench/_bash_bench_set_dummies", "api/torch_bench/_bash_bench_set_explicit", "api/torch_bench/_bash_bench_set_huggingface", "api/torch_bench/_bash_bench_set_timm", "api/torch_bench/_bash_bench_set_torchbench", "api/torch_bench/_bash_bench_set_torchbench_ado", "api/torch_bench/_bash_bench_untrained", "api/torch_bench/_dort_cmd_common", "api/torch_bench/_dort_cmd_common_models", "api/torch_bench/bash_bench_agg", "api/torch_bench/bash_bench_explicit", "api/torch_bench/bash_bench_huggingface", "api/torch_bench/bash_bench_timm", "api/torch_bench/bash_bench_torchbench", "api/torch_bench/bash_bench_torchbench_ado", "api/torch_bench/bash_bench_untrained", "api/torch_bench/check_model", "api/torch_bench/dort_bench", "api/torch_bench/dort_bench_profile", "api/torch_bench/dort_profile", "api/torch_bench/export_model", "api/torch_bench/export_model_helper", "api/torch_bench/index", "api/torch_dynamo/_dynamo_exporter", "api/torch_dynamo/backend_helper", "api/torch_dynamo/debug_backend", "api/torch_dynamo/fast_backend", "api/torch_dynamo/index", "api/torch_dynamo/partition", "api/torch_interpreter/_aten_functions", "api/torch_interpreter/_aten_functions_attention", "api/torch_interpreter/_aten_methods", "api/torch_interpreter/_doc_", "api/torch_interpreter/_exceptions", "api/torch_interpreter/_non_aten_functions", "api/torch_interpreter/_prims_functions", "api/torch_interpreter/_torch_helper", "api/torch_interpreter/aten_functions", "api/torch_interpreter/aten_methods", "api/torch_interpreter/dispatcher", "api/torch_interpreter/export_options", "api/torch_interpreter/index", "api/torch_interpreter/interpreter", "api/torch_interpreter/investigate_helper", "api/torch_interpreter/onnx_export", "api/torch_interpreter/oxs_dispatcher", "api/torch_interpreter/oxs_opset", "api/torch_interpreter/piece_by_piece", "api/torch_interpreter/piece_by_piece_serialize", "api/torch_interpreter/tracing", "api/torch_models/diffusion_model_helper", "api/torch_models/dump_helper", "api/torch_models/index", "api/torch_models/llama_helper", "api/torch_models/llm_model_helper", "api/torch_models/llm_model_setup", "api/torch_models/mistral_helper", "api/torch_models/phi3_helper", "api/torch_models/phi_helper", "api/torch_models/training_helper", "api/torch_test_helper", "api/xbuilder/_onnx_helper", "api/xbuilder/graph_builder", "api/xbuilder/graph_builder_opset", "api/xbuilder/index", "api/xbuilder/model_container", "api/xbuilder/optimization_options", "api/xbuilder/reverse_graph_builder", "api/xoptim/graph_builder_optim", "api/xoptim/index", "api/xoptim/order_optim", "api/xoptim/patterns/index", "api/xoptim/patterns/onnx_any", "api/xoptim/patterns/onnx_attention", "api/xoptim/patterns/onnx_cast", "api/xoptim/patterns/onnx_clip", "api/xoptim/patterns/onnx_constants", "api/xoptim/patterns/onnx_conv", "api/xoptim/patterns/onnx_dropout", "api/xoptim/patterns/onnx_equal", "api/xoptim/patterns/onnx_expand", "api/xoptim/patterns/onnx_functions", "api/xoptim/patterns/onnx_layer_normalization", "api/xoptim/patterns/onnx_matmul", "api/xoptim/patterns/onnx_mul", "api/xoptim/patterns/onnx_reduce", "api/xoptim/patterns/onnx_reshape", "api/xoptim/patterns/onnx_rotary", "api/xoptim/patterns/onnx_sequence", "api/xoptim/patterns/onnx_shape", "api/xoptim/patterns/onnx_slice", "api/xoptim/patterns/onnx_split", "api/xoptim/patterns/onnx_sub", "api/xoptim/patterns/onnx_transpose", "api/xoptim/patterns/onnx_unsqueeze", "api/xoptim/patterns_api", "api/xoptim/patterns_exp/binary_operators", "api/xoptim/patterns_exp/constant_of_shape_scatter_nd", "api/xoptim/patterns_exp/constants", "api/xoptim/patterns_exp/index", "api/xoptim/patterns_exp/simple_rotary", "api/xoptim/patterns_exp/unary_operators", "api/xoptim/patterns_exp/where_replace", "api/xoptim/patterns_fix/add_reduction_scatter_nd", "api/xoptim/patterns_fix/index", "api/xoptim/patterns_investigation/element_wise", "api/xoptim/patterns_investigation/index", "api/xoptim/patterns_investigation/llm_patterns", "api/xoptim/patterns_ml/index", "api/xoptim/patterns_ml/tree_ensemble", "api/xoptim/patterns_ort/activation", "api/xoptim/patterns_ort/activation_grad", "api/xoptim/patterns_ort/batch_normalization", "api/xoptim/patterns_ort/fused_conv", "api/xoptim/patterns_ort/fused_matmul", "api/xoptim/patterns_ort/gather_grad", "api/xoptim/patterns_ort/index", "api/xoptim/patterns_ort/llm_optim", "api/xoptim/patterns_ort/simplified_layer_normalization", "api/xoptim/repeated_optim", "api/xoptim/unfused", "api/xshape/_builder_runtime", "api/xshape/_inference_runtime", "api/xshape/_onnx_helper", "api/xshape/_shape_helper", "api/xshape/_shape_runtime", "api/xshape/evaluate_expressions", "api/xshape/index", "api/xshape/rename_expressions", "api/xshape/shape_builder", "api/xshape/shape_builder_impl", "api/xshape/shape_type_compute", "api/xshape/simplify_expressions", "api/xshape/type_inference", "auto_examples/index", "auto_examples/plot_executorch_102", "auto_examples/plot_model_to_python", "auto_examples/plot_onnxscript_102", "auto_examples/plot_optimize_101", "auto_examples/plot_profile_existing_onnx_101", "auto_examples/plot_rewrite_101", "auto_examples/plot_shape_inference", "auto_examples/plot_torch_custom_backend_101", "auto_examples/plot_torch_export_101", "auto_examples/plot_torch_export_201", "auto_examples/plot_torch_export_compile_102", "auto_examples/plot_torch_linreg_101", "auto_examples/plot_torch_sklearn_201", "auto_examples/sg_execution_times", "auto_recipes/index", "auto_recipes/plot_exporter_exporter_draft_mode", "auto_recipes/plot_exporter_exporter_phi35_piece", "auto_recipes/plot_exporter_exporter_reportibility", "auto_recipes/plot_exporter_exporter_scan_pdist", "auto_recipes/plot_exporter_exporter_untrained_tinyllm", "auto_recipes/plot_exporter_recipes_c_cond", "auto_recipes/plot_exporter_recipes_c_custom_ops_fct", "auto_recipes/plot_exporter_recipes_c_custom_ops_inplace", "auto_recipes/plot_exporter_recipes_c_dynpad", "auto_recipes/plot_exporter_recipes_c_modules", "auto_recipes/sg_execution_times", "bench/bash_bench", "bench/dort_bench", "bench/dort_profile", "bench/index", "bench/scripts", "command_lines", "design/backends", "design/exporter", "design/index", "design/optimizer", "galleries", "index", "license", "miscellaneous/export_times", "miscellaneous/index", "miscellaneous/long_outputs", "miscellaneous/models/index", "miscellaneous/models/phi", "sg_execution_times", "tools/index", "tools/lighten", "tools/optimize", "tools/print", "tools/run", "tutorial/docker", "tutorial/errors", "tutorial/index", "tutorial/shape", "tutorial/to_onnx"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["CHANGELOGS.rst", "api/_bench_test.rst", "api/_command_lines_parser.rst", "api/args.rst", "api/bench_run.rst", "api/checks.rst", "api/convert/convert_helper.rst", "api/convert/index.rst", "api/convert/ort_helper.rst", "api/export_helpers.rst", "api/ext_test_case.rst", "api/gradient/grad_helper.rst", "api/gradient/index.rst", "api/gradient/loss_helper.rst", "api/gradient/ops/index.rst", "api/gradient/ops/op_broadcast_gradient_args.rst", "api/helpers.rst", "api/index.rst", "api/memory_peak.rst", "api/model_run.rst", "api/onnx_tools.rst", "api/ort_session.rst", "api/plotting/data.rst", "api/plotting/index.rst", "api/plotting/memory.rst", "api/reference/evaluator.rst", "api/reference/index.rst", "api/reference/ops/index.rst", "api/reference/ops/op_add_add_mul_mul.rst", "api/reference/ops/op_average_pool_grad.rst", "api/reference/ops/op_cast_like.rst", "api/reference/ops/op_complex.rst", "api/reference/ops/op_concat.rst", "api/reference/ops/op_constant_of_shape.rst", "api/reference/ops/op_fused_matmul.rst", "api/reference/ops/op_gather_grad.rst", "api/reference/ops/op_memcpy_host.rst", "api/reference/ops/op_mul_sigmoid.rst", "api/reference/ops/op_negxplus1.rst", "api/reference/ops/op_qlinear_average_pool.rst", "api/reference/ops/op_qlinear_conv.rst", "api/reference/ops/op_quick_gelu.rst", "api/reference/ops/op_replace_zero.rst", "api/reference/ops/op_rotary.rst", "api/reference/ops/op_scatter_elements.rst", "api/reference/ops/op_scatternd_of_shape.rst", "api/reference/ops/op_simplified_layer_normalization.rst", "api/reference/ops/op_skip_layer_normalization.rst", "api/reference/ops/op_slice.rst", "api/reference/ops/op_transpose_cast.rst", "api/reference/ops/op_tri_matrix.rst", "api/reference/ort_evaluator.rst", "api/reference/quantized_tensor.rst", "api/skl/convert.rst", "api/skl/helpers.rst", "api/skl/index.rst", "api/torch_bench/_bash_bench_benchmark_runner.rst", "api/torch_bench/_bash_bench_benchmark_runner_agg.rst", "api/torch_bench/_bash_bench_benchmark_runner_agg_helper.rst", "api/torch_bench/_bash_bench_cmd.rst", "api/torch_bench/_bash_bench_model_runner.rst", "api/torch_bench/_bash_bench_models_helper.rst", "api/torch_bench/_bash_bench_set_dummies.rst", "api/torch_bench/_bash_bench_set_explicit.rst", "api/torch_bench/_bash_bench_set_huggingface.rst", "api/torch_bench/_bash_bench_set_timm.rst", "api/torch_bench/_bash_bench_set_torchbench.rst", "api/torch_bench/_bash_bench_set_torchbench_ado.rst", "api/torch_bench/_bash_bench_untrained.rst", "api/torch_bench/_dort_cmd_common.rst", "api/torch_bench/_dort_cmd_common_models.rst", "api/torch_bench/bash_bench_agg.rst", "api/torch_bench/bash_bench_explicit.rst", "api/torch_bench/bash_bench_huggingface.rst", "api/torch_bench/bash_bench_timm.rst", "api/torch_bench/bash_bench_torchbench.rst", "api/torch_bench/bash_bench_torchbench_ado.rst", "api/torch_bench/bash_bench_untrained.rst", "api/torch_bench/check_model.rst", "api/torch_bench/dort_bench.rst", "api/torch_bench/dort_bench_profile.rst", "api/torch_bench/dort_profile.rst", "api/torch_bench/export_model.rst", "api/torch_bench/export_model_helper.rst", "api/torch_bench/index.rst", "api/torch_dynamo/_dynamo_exporter.rst", "api/torch_dynamo/backend_helper.rst", "api/torch_dynamo/debug_backend.rst", "api/torch_dynamo/fast_backend.rst", "api/torch_dynamo/index.rst", "api/torch_dynamo/partition.rst", "api/torch_interpreter/_aten_functions.rst", "api/torch_interpreter/_aten_functions_attention.rst", "api/torch_interpreter/_aten_methods.rst", "api/torch_interpreter/_doc_.rst", "api/torch_interpreter/_exceptions.rst", "api/torch_interpreter/_non_aten_functions.rst", "api/torch_interpreter/_prims_functions.rst", "api/torch_interpreter/_torch_helper.rst", "api/torch_interpreter/aten_functions.rst", "api/torch_interpreter/aten_methods.rst", "api/torch_interpreter/dispatcher.rst", "api/torch_interpreter/export_options.rst", "api/torch_interpreter/index.rst", "api/torch_interpreter/interpreter.rst", "api/torch_interpreter/investigate_helper.rst", "api/torch_interpreter/onnx_export.rst", "api/torch_interpreter/oxs_dispatcher.rst", "api/torch_interpreter/oxs_opset.rst", "api/torch_interpreter/piece_by_piece.rst", "api/torch_interpreter/piece_by_piece_serialize.rst", "api/torch_interpreter/tracing.rst", "api/torch_models/diffusion_model_helper.rst", "api/torch_models/dump_helper.rst", "api/torch_models/index.rst", "api/torch_models/llama_helper.rst", "api/torch_models/llm_model_helper.rst", "api/torch_models/llm_model_setup.rst", "api/torch_models/mistral_helper.rst", "api/torch_models/phi3_helper.rst", "api/torch_models/phi_helper.rst", "api/torch_models/training_helper.rst", "api/torch_test_helper.rst", "api/xbuilder/_onnx_helper.rst", "api/xbuilder/graph_builder.rst", "api/xbuilder/graph_builder_opset.rst", "api/xbuilder/index.rst", "api/xbuilder/model_container.rst", "api/xbuilder/optimization_options.rst", "api/xbuilder/reverse_graph_builder.rst", "api/xoptim/graph_builder_optim.rst", "api/xoptim/index.rst", "api/xoptim/order_optim.rst", "api/xoptim/patterns/index.rst", "api/xoptim/patterns/onnx_any.rst", "api/xoptim/patterns/onnx_attention.rst", "api/xoptim/patterns/onnx_cast.rst", "api/xoptim/patterns/onnx_clip.rst", "api/xoptim/patterns/onnx_constants.rst", "api/xoptim/patterns/onnx_conv.rst", "api/xoptim/patterns/onnx_dropout.rst", "api/xoptim/patterns/onnx_equal.rst", "api/xoptim/patterns/onnx_expand.rst", "api/xoptim/patterns/onnx_functions.rst", "api/xoptim/patterns/onnx_layer_normalization.rst", "api/xoptim/patterns/onnx_matmul.rst", "api/xoptim/patterns/onnx_mul.rst", "api/xoptim/patterns/onnx_reduce.rst", "api/xoptim/patterns/onnx_reshape.rst", "api/xoptim/patterns/onnx_rotary.rst", "api/xoptim/patterns/onnx_sequence.rst", "api/xoptim/patterns/onnx_shape.rst", "api/xoptim/patterns/onnx_slice.rst", "api/xoptim/patterns/onnx_split.rst", "api/xoptim/patterns/onnx_sub.rst", "api/xoptim/patterns/onnx_transpose.rst", "api/xoptim/patterns/onnx_unsqueeze.rst", "api/xoptim/patterns_api.rst", "api/xoptim/patterns_exp/binary_operators.rst", "api/xoptim/patterns_exp/constant_of_shape_scatter_nd.rst", "api/xoptim/patterns_exp/constants.rst", "api/xoptim/patterns_exp/index.rst", "api/xoptim/patterns_exp/simple_rotary.rst", "api/xoptim/patterns_exp/unary_operators.rst", "api/xoptim/patterns_exp/where_replace.rst", "api/xoptim/patterns_fix/add_reduction_scatter_nd.rst", "api/xoptim/patterns_fix/index.rst", "api/xoptim/patterns_investigation/element_wise.rst", "api/xoptim/patterns_investigation/index.rst", "api/xoptim/patterns_investigation/llm_patterns.rst", "api/xoptim/patterns_ml/index.rst", "api/xoptim/patterns_ml/tree_ensemble.rst", "api/xoptim/patterns_ort/activation.rst", "api/xoptim/patterns_ort/activation_grad.rst", "api/xoptim/patterns_ort/batch_normalization.rst", "api/xoptim/patterns_ort/fused_conv.rst", "api/xoptim/patterns_ort/fused_matmul.rst", "api/xoptim/patterns_ort/gather_grad.rst", "api/xoptim/patterns_ort/index.rst", "api/xoptim/patterns_ort/llm_optim.rst", "api/xoptim/patterns_ort/simplified_layer_normalization.rst", "api/xoptim/repeated_optim.rst", "api/xoptim/unfused.rst", "api/xshape/_builder_runtime.rst", "api/xshape/_inference_runtime.rst", "api/xshape/_onnx_helper.rst", "api/xshape/_shape_helper.rst", "api/xshape/_shape_runtime.rst", "api/xshape/evaluate_expressions.rst", "api/xshape/index.rst", "api/xshape/rename_expressions.rst", "api/xshape/shape_builder.rst", "api/xshape/shape_builder_impl.rst", "api/xshape/shape_type_compute.rst", "api/xshape/simplify_expressions.rst", "api/xshape/type_inference.rst", "auto_examples/index.rst", "auto_examples/plot_executorch_102.rst", "auto_examples/plot_model_to_python.rst", "auto_examples/plot_onnxscript_102.rst", "auto_examples/plot_optimize_101.rst", "auto_examples/plot_profile_existing_onnx_101.rst", "auto_examples/plot_rewrite_101.rst", "auto_examples/plot_shape_inference.rst", "auto_examples/plot_torch_custom_backend_101.rst", "auto_examples/plot_torch_export_101.rst", "auto_examples/plot_torch_export_201.rst", "auto_examples/plot_torch_export_compile_102.rst", "auto_examples/plot_torch_linreg_101.rst", "auto_examples/plot_torch_sklearn_201.rst", "auto_examples/sg_execution_times.rst", "auto_recipes/index.rst", "auto_recipes/plot_exporter_exporter_draft_mode.rst", "auto_recipes/plot_exporter_exporter_phi35_piece.rst", "auto_recipes/plot_exporter_exporter_reportibility.rst", "auto_recipes/plot_exporter_exporter_scan_pdist.rst", "auto_recipes/plot_exporter_exporter_untrained_tinyllm.rst", "auto_recipes/plot_exporter_recipes_c_cond.rst", "auto_recipes/plot_exporter_recipes_c_custom_ops_fct.rst", "auto_recipes/plot_exporter_recipes_c_custom_ops_inplace.rst", "auto_recipes/plot_exporter_recipes_c_dynpad.rst", "auto_recipes/plot_exporter_recipes_c_modules.rst", "auto_recipes/sg_execution_times.rst", "bench/bash_bench.rst", "bench/dort_bench.rst", "bench/dort_profile.rst", "bench/index.rst", "bench/scripts.rst", "command_lines.rst", "design/backends.rst", "design/exporter.rst", "design/index.rst", "design/optimizer.rst", "galleries.rst", "index.rst", "license.rst", "miscellaneous/export_times.rst", "miscellaneous/index.rst", "miscellaneous/long_outputs.rst", "miscellaneous/models/index.rst", "miscellaneous/models/phi.rst", "sg_execution_times.rst", "tools/index.rst", "tools/lighten.rst", "tools/optimize.rst", "tools/print.rst", "tools/run.rst", "tutorial/docker.rst", "tutorial/errors.rst", "tutorial/index.rst", "tutorial/shape.rst", "tutorial/to_onnx.rst"], "indexentries": {}, "objects": {"": [[17, 0, 0, "-", "experimental_experiment"]], "experimental_experiment": [[1, 0, 0, "-", "_bench_test"], [2, 0, 0, "-", "_command_lines_parser"], [3, 0, 0, "-", "args"], [4, 0, 0, "-", "bench_run"], [5, 0, 0, "-", "checks"], [7, 0, 0, "-", "convert"], [9, 0, 0, "-", "export_helpers"], [10, 0, 0, "-", "ext_test_case"], [12, 0, 0, "-", "gradient"], [16, 0, 0, "-", "helpers"], [18, 0, 0, "-", "memory_peak"], [19, 0, 0, "-", "model_run"], [20, 0, 0, "-", "onnx_tools"], [21, 0, 0, "-", "ort_session"], [23, 0, 0, "-", "plotting"], [26, 0, 0, "-", "reference"], [17, 1, 1, "", "reset_torch_transformers"], [55, 0, 0, "-", "skl"], [84, 0, 0, "-", "torch_bench"], [89, 0, 0, "-", "torch_dynamo"], [103, 0, 0, "-", "torch_interpreter"], [114, 0, 0, "-", "torch_models"], [122, 0, 0, "-", "torch_test_helper"], [126, 0, 0, "-", "xbuilder"], [131, 0, 0, "-", "xoptim"], [189, 0, 0, "-", "xshape"]], "experimental_experiment.args": [[3, 1, 1, "", "check_cuda_availability"], [3, 1, 1, "", "get_parsed_args"]], "experimental_experiment.bench_run": [[4, 2, 1, "", "BenchmarkError"], [4, 1, 1, "", "get_machine"], [4, 1, 1, "", "get_processor_name"], [4, 1, 1, "", "make_configs"], [4, 1, 1, "", "make_dataframe_from_benchmark_data"], [4, 1, 1, "", "multi_run"], [4, 1, 1, "", "run_benchmark"]], "experimental_experiment.checks": [[5, 1, 1, "", "print_import_time"]], "experimental_experiment.convert": [[6, 0, 0, "-", "convert_helper"], [8, 0, 0, "-", "ort_helper"]], "experimental_experiment.convert.convert_helper": [[6, 1, 1, "", "inline_model_proto"], [6, 1, 1, "", "optimize_model_proto_oxs"], [6, 1, 1, "", "ort_optimize"]], "experimental_experiment.convert.ort_helper": [[8, 1, 1, "", "append_custom_libraries"]], "experimental_experiment.export_helpers": [[9, 1, 1, "", "torch_export"]], "experimental_experiment.ext_test_case": [[10, 3, 1, "", "ExtTestCase"], [10, 1, 1, "", "dump_dort_onnx"], [10, 1, 1, "", "get_figure"], [10, 1, 1, "", "has_cuda"], [10, 1, 1, "", "has_executorch"], [10, 1, 1, "", "has_onnx_diagnostic"], [10, 1, 1, "", "has_onnxruntime"], [10, 1, 1, "", "has_onnxruntime_training"], [10, 1, 1, "", "has_onnxscript"], [10, 1, 1, "", "has_torch"], [10, 1, 1, "", "hide_stdout"], [10, 1, 1, "", "ignore_warnings"], [10, 1, 1, "", "is_azure"], [10, 1, 1, "", "long_test"], [10, 1, 1, "", "measure_time"], [10, 1, 1, "", "never_test"], [10, 1, 1, "", "requires_cuda"], [10, 1, 1, "", "requires_diffusers"], [10, 1, 1, "", "requires_executorch"], [10, 1, 1, "", "requires_monai"], [10, 1, 1, "", "requires_numpy"], [10, 1, 1, "", "requires_onnx"], [10, 1, 1, "", "requires_onnx_array_api"], [10, 1, 1, "", "requires_onnx_diagnostic"], [10, 1, 1, "", "requires_onnxir"], [10, 1, 1, "", "requires_onnxruntime"], [10, 1, 1, "", "requires_onnxruntime_training"], [10, 1, 1, "", "requires_onnxscript"], [10, 1, 1, "", "requires_pyinstrument"], [10, 1, 1, "", "requires_sklearn"], [10, 1, 1, "", "requires_torch"], [10, 1, 1, "", "requires_transformers"], [10, 1, 1, "", "requires_vocos"], [10, 1, 1, "", "requires_zoo"], [10, 1, 1, "", "skipif_ci_apple"], [10, 1, 1, "", "skipif_ci_linux"], [10, 1, 1, "", "skipif_ci_windows"], [10, 1, 1, "", "skipif_not_onnxrt"], [10, 1, 1, "", "skipif_transformers"], [10, 1, 1, "", "statistics_on_file"], [10, 1, 1, "", "statistics_on_folder"], [10, 1, 1, "", "unit_test_going"], [10, 1, 1, "", "with_path_append"]], "experimental_experiment.ext_test_case.ExtTestCase": [[10, 4, 1, "", "assertAlmostEqual"], [10, 4, 1, "", "assertEmpty"], [10, 4, 1, "", "assertEqual"], [10, 4, 1, "", "assertEqualArray"], [10, 4, 1, "", "assertEqualArrays"], [10, 4, 1, "", "assertEqualOr"], [10, 4, 1, "", "assertExists"], [10, 4, 1, "", "assertGreaterOrEqual"], [10, 4, 1, "", "assertIn"], [10, 4, 1, "", "assertNotEmpty"], [10, 4, 1, "", "assertRaise"], [10, 4, 1, "", "assertSetContained"], [10, 4, 1, "", "assertStartsWith"], [10, 4, 1, "", "capture"], [10, 4, 1, "", "dump_onnx"], [10, 4, 1, "", "get_dump_file"], [10, 4, 1, "", "print_model"], [10, 4, 1, "", "print_onnx"], [10, 4, 1, "", "setUpClass"], [10, 4, 1, "", "tearDownClass"], [10, 4, 1, "", "todo"], [10, 4, 1, "", "tryCall"]], "experimental_experiment.gradient": [[11, 0, 0, "-", "grad_helper"], [13, 0, 0, "-", "loss_helper"], [14, 0, 0, "-", "ops"]], "experimental_experiment.gradient.grad_helper": [[11, 3, 1, "", "DerivativeOptions"], [11, 1, 1, "", "onnx_derivative"], [11, 1, 1, "", "random_feed"]], "experimental_experiment.gradient.loss_helper": [[13, 1, 1, "", "add_loss_output"], [13, 1, 1, "", "get_train_initializer"], [13, 1, 1, "", "penalty_loss_onnx"]], "experimental_experiment.gradient.ops": [[15, 0, 0, "-", "op_broadcast_gradient_args"]], "experimental_experiment.gradient.ops.op_broadcast_gradient_args": [[15, 3, 1, "", "BroadcastGradientArgs"]], "experimental_experiment.helpers": [[16, 1, 1, "", "convert_endian"], [16, 1, 1, "", "dtype_to_tensor_dtype"], [16, 1, 1, "", "flatten_object"], [16, 1, 1, "", "from_array_extended"], [16, 1, 1, "", "from_array_ml_dtypes"], [16, 1, 1, "", "get_onnx_signature"], [16, 1, 1, "", "get_sig_kwargs"], [16, 1, 1, "", "make_hash"], [16, 1, 1, "", "make_idg"], [16, 1, 1, "", "make_idn"], [16, 1, 1, "", "np_dtype_to_tensor_dtype"], [16, 1, 1, "", "onnx_dtype_name"], [16, 1, 1, "", "onnx_dtype_to_torch_dtype"], [16, 1, 1, "", "pretty_onnx"], [16, 1, 1, "", "size_type"], [16, 1, 1, "", "string_diff"], [16, 1, 1, "", "string_sig"], [16, 1, 1, "", "string_signature"], [16, 1, 1, "", "string_type"], [16, 1, 1, "", "tensor_dtype_to_np_dtype"], [16, 1, 1, "", "torch_dtype_to_onnx_dtype"], [16, 1, 1, "", "type_info"]], "experimental_experiment.memory_peak": [[18, 3, 1, "", "MemorySpy"], [18, 1, 1, "", "get_memory_rss"], [18, 1, 1, "", "start_spying_on"]], "experimental_experiment.memory_peak.MemorySpy": [[18, 4, 1, "", "start"], [18, 4, 1, "", "stop"]], "experimental_experiment.model_run": [[19, 1, 1, "", "create_feeds"], [19, 1, 1, "", "create_tensor"], [19, 1, 1, "", "model_run"]], "experimental_experiment.onnx_tools": [[20, 1, 1, "", "onnx_find"], [20, 1, 1, "", "onnx_lighten"], [20, 1, 1, "", "onnx_unlighten"]], "experimental_experiment.ort_session": [[21, 3, 1, "", "InferenceSessionForNumpy"], [21, 3, 1, "", "InferenceSessionForTorch"], [21, 1, 1, "", "investigate_onnxruntime_issue"]], "experimental_experiment.ort_session.InferenceSessionForNumpy": [[21, 4, 1, "", "run"]], "experimental_experiment.ort_session.InferenceSessionForTorch": [[21, 4, 1, "", "run"], [21, 4, 1, "", "run_dlpack"], [21, 4, 1, "", "run_training_api"]], "experimental_experiment.plotting": [[22, 0, 0, "-", "data"], [24, 0, 0, "-", "memory"]], "experimental_experiment.reference": [[26, 3, 1, "", "ExtendedReferenceEvaluator"], [25, 0, 0, "-", "evaluator"], [27, 0, 0, "-", "ops"], [51, 0, 0, "-", "ort_evaluator"], [52, 0, 0, "-", "quantized_tensor"]], "experimental_experiment.reference.ExtendedReferenceEvaluator": [[26, 4, 1, "", "run"]], "experimental_experiment.reference.ops": [[28, 0, 0, "-", "op_add_add_mul_mul"], [29, 0, 0, "-", "op_average_pool_grad"], [30, 0, 0, "-", "op_cast_like"], [31, 0, 0, "-", "op_complex"], [32, 0, 0, "-", "op_concat"], [33, 0, 0, "-", "op_constant_of_shape"], [34, 0, 0, "-", "op_fused_matmul"], [35, 0, 0, "-", "op_gather_grad"], [36, 0, 0, "-", "op_memcpy_host"], [37, 0, 0, "-", "op_mul_sigmoid"], [38, 0, 0, "-", "op_negxplus1"], [39, 0, 0, "-", "op_qlinear_average_pool"], [40, 0, 0, "-", "op_qlinear_conv"], [41, 0, 0, "-", "op_quick_gelu"], [42, 0, 0, "-", "op_replace_zero"], [43, 0, 0, "-", "op_rotary"], [44, 0, 0, "-", "op_scatter_elements"], [45, 0, 0, "-", "op_scatternd_of_shape"], [46, 0, 0, "-", "op_simplified_layer_normalization"], [47, 0, 0, "-", "op_skip_layer_normalization"], [48, 0, 0, "-", "op_slice"], [49, 0, 0, "-", "op_transpose_cast"], [50, 0, 0, "-", "op_tri_matrix"]], "experimental_experiment.reference.ops.op_add_add_mul_mul": [[28, 3, 1, "", "AddAdd"], [28, 3, 1, "", "AddMul"], [28, 3, 1, "", "AddSharedInput"], [28, 3, 1, "", "MulAdd"], [28, 3, 1, "", "MulMul"], [28, 3, 1, "", "MulSharedInput"], [28, 3, 1, "", "MulSub"], [28, 3, 1, "", "SubMul"]], "experimental_experiment.reference.ops.op_average_pool_grad": [[29, 3, 1, "", "AveragePoolGrad"]], "experimental_experiment.reference.ops.op_cast_like": [[30, 3, 1, "", "CastLike_15"], [30, 3, 1, "", "CastLike_19"]], "experimental_experiment.reference.ops.op_complex": [[31, 3, 1, "", "ComplexModule"], [31, 3, 1, "", "ToComplex"]], "experimental_experiment.reference.ops.op_concat": [[32, 3, 1, "", "Concat"]], "experimental_experiment.reference.ops.op_constant_of_shape": [[33, 3, 1, "", "ConstantOfShape"]], "experimental_experiment.reference.ops.op_fused_matmul": [[34, 3, 1, "", "FusedMatMul"]], "experimental_experiment.reference.ops.op_gather_grad": [[35, 3, 1, "", "GatherGrad"]], "experimental_experiment.reference.ops.op_memcpy_host": [[36, 3, 1, "", "MemcpyFromHost"], [36, 3, 1, "", "MemcpyToHost"]], "experimental_experiment.reference.ops.op_mul_sigmoid": [[37, 3, 1, "", "MulSigmoid"]], "experimental_experiment.reference.ops.op_negxplus1": [[38, 3, 1, "", "NegXplus1"]], "experimental_experiment.reference.ops.op_qlinear_average_pool": [[39, 3, 1, "", "QLinearAveragePool"]], "experimental_experiment.reference.ops.op_qlinear_conv": [[40, 3, 1, "", "QLinearConv"]], "experimental_experiment.reference.ops.op_quick_gelu": [[41, 3, 1, "", "QuickGelu"]], "experimental_experiment.reference.ops.op_replace_zero": [[42, 3, 1, "", "ReplaceZero"]], "experimental_experiment.reference.ops.op_rotary": [[43, 3, 1, "", "Rotary"]], "experimental_experiment.reference.ops.op_scatter_elements": [[44, 3, 1, "", "ScatterElements"]], "experimental_experiment.reference.ops.op_scatternd_of_shape": [[45, 3, 1, "", "MaskedScatterNDOfShape"], [45, 3, 1, "", "ScatterNDOfShape"]], "experimental_experiment.reference.ops.op_simplified_layer_normalization": [[46, 3, 1, "", "SimplifiedLayerNormalization"]], "experimental_experiment.reference.ops.op_skip_layer_normalization": [[47, 3, 1, "", "SkipLayerNormalization"]], "experimental_experiment.reference.ops.op_slice": [[48, 3, 1, "", "Slice_1"], [48, 3, 1, "", "Slice_10"]], "experimental_experiment.reference.ops.op_transpose_cast": [[49, 3, 1, "", "Transpose2DCastFP16"], [49, 3, 1, "", "Transpose2DCastFP32"]], "experimental_experiment.reference.ops.op_tri_matrix": [[50, 3, 1, "", "TriMatrix"]], "experimental_experiment.reference.ort_evaluator": [[51, 3, 1, "", "OrtEval"]], "experimental_experiment.reference.ort_evaluator.OrtEval": [[51, 5, 1, "", "input_names"], [51, 5, 1, "", "output_names"], [51, 4, 1, "", "run"], [51, 4, 1, "", "run_dlpack"]], "experimental_experiment.reference.quantized_tensor": [[52, 3, 1, "", "QuantizedTensor"]], "experimental_experiment.reference.quantized_tensor.QuantizedTensor": [[52, 5, 1, "", "qtensor"], [52, 5, 1, "", "scale"], [52, 5, 1, "", "shape"], [52, 5, 1, "", "zero_point"]], "experimental_experiment.skl": [[53, 0, 0, "-", "convert"], [54, 0, 0, "-", "helpers"], [55, 1, 1, "", "to_onnx"]], "experimental_experiment.skl.helpers": [[54, 1, 1, "", "flatnonzero"]], "experimental_experiment.torch_bench": [[56, 0, 0, "-", "_bash_bench_benchmark_runner"], [57, 0, 0, "-", "_bash_bench_benchmark_runner_agg"], [58, 0, 0, "-", "_bash_bench_benchmark_runner_agg_helper"], [59, 0, 0, "-", "_bash_bench_cmd"], [60, 0, 0, "-", "_bash_bench_model_runner"], [61, 0, 0, "-", "_bash_bench_models_helper"], [62, 0, 0, "-", "_bash_bench_set_dummies"], [63, 0, 0, "-", "_bash_bench_set_explicit"], [64, 0, 0, "-", "_bash_bench_set_huggingface"], [65, 0, 0, "-", "_bash_bench_set_timm"], [66, 0, 0, "-", "_bash_bench_set_torchbench"], [67, 0, 0, "-", "_bash_bench_set_torchbench_ado"], [68, 0, 0, "-", "_bash_bench_untrained"], [69, 0, 0, "-", "_dort_cmd_common"], [70, 0, 0, "-", "_dort_cmd_common_models"], [71, 0, 0, "-", "bash_bench_agg"], [72, 0, 0, "-", "bash_bench_explicit"], [73, 0, 0, "-", "bash_bench_huggingface"], [74, 0, 0, "-", "bash_bench_timm"], [75, 0, 0, "-", "bash_bench_torchbench"], [76, 0, 0, "-", "bash_bench_torchbench_ado"], [77, 0, 0, "-", "bash_bench_untrained"], [78, 0, 0, "-", "check_model"], [79, 0, 0, "-", "dort_bench"], [80, 0, 0, "-", "dort_bench_profile"], [81, 0, 0, "-", "dort_profile"], [82, 0, 0, "-", "export_model"], [83, 0, 0, "-", "export_model_helper"]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner": [[56, 3, 1, "", "BenchmarkRunner"]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner.BenchmarkRunner": [[56, 4, 1, "", "enumerate_load_models"], [56, 4, 1, "", "enumerate_model_names"], [56, 4, 1, "", "enumerate_run_models"], [56, 4, 1, "", "enumerate_test_models"], [56, 4, 1, "", "get_benchmark_indices"], [56, 4, 1, "", "get_model_name_list"], [56, 4, 1, "", "max_diff"], [56, 4, 1, "", "ort_run"]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg": [[57, 1, 1, "", "enumerate_csv_files"], [57, 1, 1, "", "merge_benchmark_reports"], [57, 1, 1, "", "open_dataframe"]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg_helper": [[58, 1, 1, "", "build_historical_report"]], "experimental_experiment.torch_bench._bash_bench_cmd": [[59, 1, 1, "", "bash_bench_main"], [59, 1, 1, "", "bash_bench_parse_args"]], "experimental_experiment.torch_bench._bash_bench_model_runner": [[60, 3, 1, "", "MakeConfig"], [60, 3, 1, "", "ModelRunner"], [60, 3, 1, "", "UseDefaultValue"], [60, 3, 1, "", "WrappedModelBase"], [60, 3, 1, "", "WrappedModelToTuple"], [60, 1, 1, "", "download_retry_decorator"], [60, 1, 1, "", "get_dynamo_stats"], [60, 1, 1, "", "get_peak_memory"]], "experimental_experiment.torch_bench._bash_bench_model_runner.ModelRunner": [[60, 4, 1, "", "allowed_configuration"], [60, 4, 1, "", "compute_weight_size"], [60, 4, 1, "", "dump_std"], [60, 4, 1, "", "export_as"], [60, 4, 1, "", "get_devices"], [60, 4, 1, "", "get_dynamic_shapes"], [60, 4, 1, "", "get_input_shapes"], [60, 4, 1, "", "get_inputs_with_copied_dynamic_cache"], [60, 4, 1, "", "is_lm"], [60, 4, 1, "", "make_dynamic_inputs"], [60, 4, 1, "", "make_export_inputs"], [60, 4, 1, "", "make_feeds"], [60, 4, 1, "", "parameters_dtype"]], "experimental_experiment.torch_bench._bash_bench_model_runner.WrappedModelBase": [[60, 4, 1, "", "forward"], [60, 4, 1, "", "parameters"]], "experimental_experiment.torch_bench._bash_bench_model_runner.WrappedModelToTuple": [[60, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_models_helper": [[61, 1, 1, "", "get_dummy_model"], [61, 1, 1, "", "get_dummy_model_fail"], [61, 1, 1, "", "get_dummy_model_fail_convert"], [61, 1, 1, "", "get_llama_model_layer"], [61, 1, 1, "", "get_speech2text2_causal_ml_not_trained_model"], [61, 1, 1, "", "ids_tensor"]], "experimental_experiment.torch_bench._bash_bench_set_dummies": [[62, 3, 1, "", "Neuron"], [62, 3, 1, "", "Neuron16"], [62, 3, 1, "", "Neuron2Inputs"], [62, 3, 1, "", "Neuron2Outputs"], [62, 3, 1, "", "NeuronIInt"], [62, 3, 1, "", "NeuronIList"], [62, 3, 1, "", "NeuronMambaCache"], [62, 3, 1, "", "NeuronNamed1"], [62, 3, 1, "", "NeuronNamed2"], [62, 3, 1, "", "NeuronNamedDict"], [62, 3, 1, "", "NeuronNoneInt"], [62, 3, 1, "", "NeuronNoneIntDefault"], [62, 3, 1, "", "NeuronNoneIntDict"], [62, 3, 1, "", "NeuronNoneListInt"], [62, 3, 1, "", "NeuronTuple"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.Neuron": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.Neuron16": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.Neuron2Inputs": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.Neuron2Outputs": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronIInt": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronIList": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronMambaCache": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNamed1": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNamed2": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNamedDict": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNoneInt": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNoneIntDefault": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNoneIntDict": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNoneListInt": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronTuple": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_explicit": [[63, 3, 1, "", "ExplicitRunner"]], "experimental_experiment.torch_bench._bash_bench_set_explicit.ExplicitRunner": [[63, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_huggingface": [[64, 3, 1, "", "HuggingfaceRunner"]], "experimental_experiment.torch_bench._bash_bench_set_huggingface.HuggingfaceRunner": [[64, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_timm": [[65, 3, 1, "", "TimmRunner"]], "experimental_experiment.torch_bench._bash_bench_set_timm.TimmRunner": [[65, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_torchbench": [[66, 3, 1, "", "TorchBenchRunner"]], "experimental_experiment.torch_bench._bash_bench_set_torchbench.TorchBenchRunner": [[66, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_torchbench_ado": [[67, 3, 1, "", "TorchBenchAdoRunner"]], "experimental_experiment.torch_bench._bash_bench_set_torchbench_ado.TorchBenchAdoRunner": [[67, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_untrained": [[68, 3, 1, "", "UntrainedRunner"]], "experimental_experiment.torch_bench._bash_bench_untrained.UntrainedRunner": [[68, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._dort_cmd_common": [[69, 1, 1, "", "create_compiled_model"], [69, 1, 1, "", "create_configuration_for_benchmark"], [69, 1, 1, "", "create_model"], [69, 1, 1, "", "get_fused_aten_ops_dispatcher"]], "experimental_experiment.torch_bench.bash_bench_agg": [[71, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_explicit": [[72, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_huggingface": [[73, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_timm": [[74, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_torchbench": [[75, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_torchbench_ado": [[76, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_untrained": [[77, 1, 1, "", "main"]], "experimental_experiment.torch_bench.check_model": [[78, 1, 1, "", "main"]], "experimental_experiment.torch_bench.dort_bench": [[79, 1, 1, "", "main"]], "experimental_experiment.torch_bench.dort_bench_profile": [[80, 1, 1, "", "main"]], "experimental_experiment.torch_bench.dort_profile": [[81, 1, 1, "", "main"]], "experimental_experiment.torch_bench.export_model_helper": [[83, 3, 1, "", "WrapExecutorchForTorch"], [83, 3, 1, "", "WrapForTorch"], [83, 3, 1, "", "WrapInferenceSessionForTorch"], [83, 1, 1, "", "common_export"], [83, 1, 1, "", "compute_weight_size"], [83, 1, 1, "", "run_inference"], [83, 1, 1, "", "run_onnx_inference"]], "experimental_experiment.torch_dynamo": [[85, 0, 0, "-", "_dynamo_exporter"], [86, 0, 0, "-", "backend_helper"], [87, 0, 0, "-", "debug_backend"], [89, 1, 1, "", "dynger_backend"], [88, 0, 0, "-", "fast_backend"], [89, 1, 1, "", "filter_decomposition_table"], [89, 1, 1, "", "get_decomposition_table"], [89, 1, 1, "", "get_decomposition_table_by_name"], [89, 1, 1, "", "get_decomposition_table_dynamo"], [89, 1, 1, "", "get_decomposition_table_onnxscript"], [89, 1, 1, "", "onnx_custom_backend"], [89, 1, 1, "", "onnx_debug_backend"], [90, 0, 0, "-", "partition"], [89, 1, 1, "", "pprint_storage"]], "experimental_experiment.torch_dynamo.fast_backend": [[88, 3, 1, "", "OrtBackend"], [88, 1, 1, "", "onnx_custom_backend"]], "experimental_experiment.torch_dynamo.fast_backend.OrtBackend": [[88, 4, 1, "", "dump_for_debug"], [88, 4, 1, "", "replay_dumped_data"]], "experimental_experiment.torch_dynamo.partition": [[90, 3, 1, "", "CustomOperatorSupport"], [90, 1, 1, "", "backend_partition_compile"]], "experimental_experiment.torch_dynamo.partition.CustomOperatorSupport": [[90, 4, 1, "", "is_node_supported"]], "experimental_experiment.torch_interpreter": [[103, 3, 1, "", "Dispatcher"], [103, 3, 1, "", "ExportOptions"], [103, 3, 1, "", "TorchOpOverload"], [91, 0, 0, "-", "_aten_functions"], [92, 0, 0, "-", "_aten_functions_attention"], [93, 0, 0, "-", "_aten_methods"], [94, 0, 0, "-", "_doc_"], [95, 0, 0, "-", "_exceptions"], [96, 0, 0, "-", "_non_aten_functions"], [97, 0, 0, "-", "_prims_functions"], [98, 0, 0, "-", "_torch_helper"], [99, 0, 0, "-", "aten_functions"], [100, 0, 0, "-", "aten_methods"], [101, 0, 0, "-", "dispatcher"], [102, 0, 0, "-", "export_options"], [104, 0, 0, "-", "interpreter"], [105, 0, 0, "-", "investigate_helper"], [103, 1, 1, "", "make_undefined_dimension"], [103, 1, 1, "", "match_input_parameters"], [106, 0, 0, "-", "onnx_export"], [107, 0, 0, "-", "oxs_dispatcher"], [108, 0, 0, "-", "oxs_opset"], [109, 0, 0, "-", "piece_by_piece"], [110, 0, 0, "-", "piece_by_piece_serialize"], [103, 1, 1, "", "to_onnx"], [111, 0, 0, "-", "tracing"]], "experimental_experiment.torch_interpreter.Dispatcher": [[103, 4, 1, "", "fallback"], [103, 4, 1, "", "find_function"], [103, 4, 1, "", "find_method"], [103, 4, 1, "", "merge"], [103, 5, 1, "", "supported"]], "experimental_experiment.torch_interpreter.ExportOptions": [[103, 4, 1, "", "clone"], [103, 4, 1, "", "export"], [103, 4, 1, "", "get_decomposition_table"], [103, 4, 1, "", "get_fallback_options"], [103, 4, 1, "", "need_run_decompositions"], [103, 4, 1, "", "post_process_exported_program"], [103, 4, 1, "", "remove_inplace_nodes"], [103, 4, 1, "", "validate_exported_program"]], "experimental_experiment.torch_interpreter._aten_functions": [[91, 3, 1, "", "Reduction"], [91, 1, 1, "", "aten_FunctionCtx"], [91, 1, 1, "", "aten___and___Tensor"], [91, 1, 1, "", "aten___or___Tensor"], [91, 1, 1, "", "aten__adaptive_avg_pool2d"], [91, 1, 1, "", "aten__assert_scalar"], [91, 1, 1, "", "aten__assert_tensor_metadata"], [91, 1, 1, "", "aten__embedding_bag"], [91, 1, 1, "", "aten__enter_autocast"], [91, 1, 1, "", "aten__exit_autocast"], [91, 1, 1, "", "aten__fft_r2c"], [91, 1, 1, "", "aten__fftn_onnx"], [91, 1, 1, "", "aten__log_api_usage_once"], [91, 1, 1, "", "aten__log_softmax"], [91, 1, 1, "", "aten__log_softmax_backward_data"], [91, 1, 1, "", "aten__native_batch_norm"], [91, 1, 1, "", "aten__native_batch_norm_legit_no_stats"], [91, 1, 1, "", "aten__native_batch_norm_legit_no_training"], [91, 1, 1, "", "aten__prelu_kernel"], [91, 1, 1, "", "aten__prelu_kernel_backward"], [91, 1, 1, "", "aten__set_grad_enabled"], [91, 1, 1, "", "aten__softmax"], [91, 1, 1, "", "aten__softmax_backward_data"], [91, 1, 1, "", "aten__sym_sqrt"], [91, 1, 1, "", "aten__to_copy"], [91, 1, 1, "", "aten__unsafe_index_Tensor"], [91, 1, 1, "", "aten__unsafe_index_put"], [91, 1, 1, "", "aten__unsafe_view"], [91, 1, 1, "", "aten_abs"], [91, 1, 1, "", "aten_acos"], [91, 1, 1, "", "aten_acosh"], [91, 1, 1, "", "aten_adaptive_avg_pool1d"], [91, 1, 1, "", "aten_adaptive_avg_pool2d"], [91, 1, 1, "", "aten_adaptive_avg_pool3d"], [91, 1, 1, "", "aten_add"], [91, 1, 1, "", "aten_add_Scalar"], [91, 1, 1, "", "aten_add_Tensor"], [91, 1, 1, "", "aten_add__Tensor"], [91, 1, 1, "", "aten_addcmul"], [91, 1, 1, "", "aten_addmm"], [91, 1, 1, "", "aten_alias"], [91, 1, 1, "", "aten_all"], [91, 1, 1, "", "aten_all_dim"], [91, 1, 1, "", "aten_amax"], [91, 1, 1, "", "aten_and"], [91, 1, 1, "", "aten_and_"], [91, 1, 1, "", "aten_any"], [91, 1, 1, "", "aten_any_dim"], [91, 1, 1, "", "aten_arange"], [91, 1, 1, "", "aten_arange_start"], [91, 1, 1, "", "aten_arange_start_step"], [91, 1, 1, "", "aten_argmax"], [91, 1, 1, "", "aten_as_strided"], [91, 1, 1, "", "aten_asin"], [91, 1, 1, "", "aten_asinh"], [91, 1, 1, "", "aten_atan"], [91, 1, 1, "", "aten_atanh"], [91, 1, 1, "", "aten_auto_functionalized"], [91, 1, 1, "", "aten_avg_pool2d"], [91, 1, 1, "", "aten_avg_pool2d_backward"], [91, 1, 1, "", "aten_avg_pool3d"], [91, 1, 1, "", "aten_baddbmm"], [91, 1, 1, "", "aten_batch_norm"], [91, 1, 1, "", "aten_bitwise_and"], [91, 1, 1, "", "aten_bitwise_and_Tensor"], [91, 1, 1, "", "aten_bitwise_not"], [91, 1, 1, "", "aten_bitwise_or"], [91, 1, 1, "", "aten_bitwise_or_Tensor"], [91, 1, 1, "", "aten_bitwise_or__Tensor"], [91, 1, 1, "", "aten_bmm"], [91, 1, 1, "", "aten_broadcast_tensors"], [91, 1, 1, "", "aten_cat"], [91, 1, 1, "", "aten_ceil"], [91, 1, 1, "", "aten_chunk"], [91, 1, 1, "", "aten_clamp"], [91, 1, 1, "", "aten_clamp_Tensor"], [91, 1, 1, "", "aten_clamp_max"], [91, 1, 1, "", "aten_clamp_min"], [91, 1, 1, "", "aten_clip"], [91, 1, 1, "", "aten_clone"], [91, 1, 1, "", "aten_col2im"], [91, 1, 1, "", "aten_cond"], [91, 1, 1, "", "aten_constant_pad_nd"], [91, 1, 1, "", "aten_contiguous"], [91, 1, 1, "", "aten_conv1d"], [91, 1, 1, "", "aten_conv2d"], [91, 1, 1, "", "aten_conv2d_padding"], [91, 1, 1, "", "aten_conv3d"], [91, 1, 1, "", "aten_conv_transpose2d_input"], [91, 1, 1, "", "aten_conv_transpose3d_input"], [91, 1, 1, "", "aten_convolution"], [91, 1, 1, "", "aten_copy"], [91, 1, 1, "", "aten_copy_"], [91, 1, 1, "", "aten_cos"], [91, 1, 1, "", "aten_cosh"], [91, 1, 1, "", "aten_cross_entropy_loss"], [91, 1, 1, "", "aten_cudnn_batch_norm"], [91, 1, 1, "", "aten_cumsum"], [91, 1, 1, "", "aten_detach"], [91, 1, 1, "", "aten_detach_"], [91, 1, 1, "", "aten_diff"], [91, 1, 1, "", "aten_div"], [91, 1, 1, "", "aten_div_Scalar"], [91, 1, 1, "", "aten_div_Tensor"], [91, 1, 1, "", "aten_div_Tensor_mode"], [91, 1, 1, "", "aten_div__Tensor"], [91, 1, 1, "", "aten_dropout"], [91, 1, 1, "", "aten_dropout_"], [91, 1, 1, "", "aten_einsum"], [91, 1, 1, "", "aten_elu"], [91, 1, 1, "", "aten_elu_"], [91, 1, 1, "", "aten_embedding"], [91, 1, 1, "", "aten_embedding_bag_padding_idx"], [91, 1, 1, "", "aten_empty_like"], [91, 1, 1, "", "aten_empty_memory_format"], [91, 1, 1, "", "aten_empty_permuted"], [91, 1, 1, "", "aten_empty_strided"], [91, 1, 1, "", "aten_eq"], [91, 1, 1, "", "aten_eq_Scalar"], [91, 1, 1, "", "aten_eq_Tensor"], [91, 1, 1, "", "aten_erf"], [91, 1, 1, "", "aten_exp"], [91, 1, 1, "", "aten_expand"], [91, 1, 1, "", "aten_expand_as"], [91, 1, 1, "", "aten_expm1"], [91, 1, 1, "", "aten_feature_dropout"], [91, 1, 1, "", "aten_fft_fft"], [91, 1, 1, "", "aten_fft_fft2"], [91, 1, 1, "", "aten_fft_ifft"], [91, 1, 1, "", "aten_fft_ifft2"], [91, 1, 1, "", "aten_fill_Scalar"], [91, 1, 1, "", "aten_fill_Tensor"], [91, 1, 1, "", "aten_flatten"], [91, 1, 1, "", "aten_flatten_using_ints"], [91, 1, 1, "", "aten_floor"], [91, 1, 1, "", "aten_floor_divide"], [91, 1, 1, "", "aten_floordiv"], [91, 1, 1, "", "aten_fmod_Scalar"], [91, 1, 1, "", "aten_full"], [91, 1, 1, "", "aten_full_like"], [91, 1, 1, "", "aten_gather"], [91, 1, 1, "", "aten_ge"], [91, 1, 1, "", "aten_ge_Scalar"], [91, 1, 1, "", "aten_ge_Tensor"], [91, 1, 1, "", "aten_gelu"], [91, 1, 1, "", "aten_getattr"], [91, 1, 1, "", "aten_grid_sampler"], [91, 1, 1, "", "aten_grid_sampler_2d"], [91, 1, 1, "", "aten_group_norm"], [91, 1, 1, "", "aten_gt"], [91, 1, 1, "", "aten_gt_Scalar"], [91, 1, 1, "", "aten_gt_Tensor"], [91, 1, 1, "", "aten_hardsigmoid"], [91, 1, 1, "", "aten_hardswish"], [91, 1, 1, "", "aten_hardswish_"], [91, 1, 1, "", "aten_hardtanh"], [91, 1, 1, "", "aten_hardtanh_"], [91, 1, 1, "", "aten_hardtanh_backward"], [91, 1, 1, "", "aten_iadd"], [91, 1, 1, "", "aten_im2col"], [91, 1, 1, "", "aten_imul"], [91, 1, 1, "", "aten_index_Tensor"], [91, 1, 1, "", "aten_index_add"], [91, 1, 1, "", "aten_index_copy"], [91, 1, 1, "", "aten_index_put"], [91, 1, 1, "", "aten_index_put_"], [91, 1, 1, "", "aten_index_select"], [91, 1, 1, "", "aten_instance_norm"], [91, 1, 1, "", "aten_interpolate"], [91, 1, 1, "", "aten_isin"], [91, 1, 1, "", "aten_isin_Tensor_Tensor"], [91, 1, 1, "", "aten_isinf"], [91, 1, 1, "", "aten_isnan"], [91, 1, 1, "", "aten_item"], [91, 1, 1, "", "aten_l1_loss"], [91, 1, 1, "", "aten_layer_norm"], [91, 1, 1, "", "aten_le"], [91, 1, 1, "", "aten_le_Scalar"], [91, 1, 1, "", "aten_le_Tensor"], [91, 1, 1, "", "aten_leaky_relu"], [91, 1, 1, "", "aten_leaky_relu_"], [91, 1, 1, "", "aten_leaky_relu_backward"], [91, 1, 1, "", "aten_lift_fresh_copy"], [91, 1, 1, "", "aten_linalg_vector_norm"], [91, 1, 1, "", "aten_linear"], [91, 1, 1, "", "aten_linspace"], [91, 1, 1, "", "aten_log"], [91, 1, 1, "", "aten_log_softmax_int"], [91, 1, 1, "", "aten_logical_and"], [91, 1, 1, "", "aten_logical_not"], [91, 1, 1, "", "aten_logical_or"], [91, 1, 1, "", "aten_lt"], [91, 1, 1, "", "aten_lt_Scalar"], [91, 1, 1, "", "aten_lt_Tensor"], [91, 1, 1, "", "aten_masked_fill_Scalar"], [91, 1, 1, "", "aten_masked_fill_Tensor"], [91, 1, 1, "", "aten_masked_fill__Scalar"], [91, 1, 1, "", "aten_masked_scatter"], [91, 1, 1, "", "aten_matmul"], [91, 1, 1, "", "aten_max"], [91, 1, 1, "", "aten_max_dim"], [91, 1, 1, "", "aten_max_other"], [91, 1, 1, "", "aten_max_pool1d"], [91, 1, 1, "", "aten_max_pool2d"], [91, 1, 1, "", "aten_max_pool2d_with_indices"], [91, 1, 1, "", "aten_max_pool3d"], [91, 1, 1, "", "aten_max_pool3d_with_indices"], [91, 1, 1, "", "aten_maximum"], [91, 1, 1, "", "aten_mean"], [91, 1, 1, "", "aten_mean_dim"], [91, 1, 1, "", "aten_meshgrid"], [91, 1, 1, "", "aten_meshgrid_indexing"], [91, 1, 1, "", "aten_min"], [91, 1, 1, "", "aten_min_other"], [91, 1, 1, "", "aten_minimum"], [91, 1, 1, "", "aten_mm"], [91, 1, 1, "", "aten_mod"], [91, 1, 1, "", "aten_mse_loss"], [91, 1, 1, "", "aten_mul"], [91, 1, 1, "", "aten_mul_Scalar"], [91, 1, 1, "", "aten_mul_Tensor"], [91, 1, 1, "", "aten_mul__Tensor"], [91, 1, 1, "", "aten_multinomial"], [91, 1, 1, "", "aten_multiply_Tensor"], [91, 1, 1, "", "aten_nan_to_num"], [91, 1, 1, "", "aten_native_dropout"], [91, 1, 1, "", "aten_native_group_norm"], [91, 1, 1, "", "aten_native_layer_norm"], [91, 1, 1, "", "aten_ne"], [91, 1, 1, "", "aten_ne_Scalar"], [91, 1, 1, "", "aten_ne_Tensor"], [91, 1, 1, "", "aten_neg"], [91, 1, 1, "", "aten_new_ones"], [91, 1, 1, "", "aten_new_zeros"], [91, 1, 1, "", "aten_nll_loss_forward"], [91, 1, 1, "", "aten_nonzero"], [91, 1, 1, "", "aten_nonzero_numpy"], [91, 1, 1, "", "aten_not"], [91, 1, 1, "", "aten_not_"], [91, 1, 1, "", "aten_numpy_T"], [91, 1, 1, "", "aten_one_hot"], [91, 1, 1, "", "aten_ones"], [91, 1, 1, "", "aten_ones_like"], [91, 1, 1, "", "aten_or"], [91, 1, 1, "", "aten_outer"], [91, 1, 1, "", "aten_pad"], [91, 1, 1, "", "aten_permute"], [91, 1, 1, "", "aten_polar"], [91, 1, 1, "", "aten_pow"], [91, 1, 1, "", "aten_pow_Scalar"], [91, 1, 1, "", "aten_pow_Tensor_Scalar"], [91, 1, 1, "", "aten_pow_Tensor_Tensor"], [91, 1, 1, "", "aten_pow__Scalar"], [91, 1, 1, "", "aten_prelu"], [91, 1, 1, "", "aten_prod"], [91, 1, 1, "", "aten_prod_dim_int"], [91, 1, 1, "", "aten_reciprocal"], [91, 1, 1, "", "aten_reflection_pad2d"], [91, 1, 1, "", "aten_relu"], [91, 1, 1, "", "aten_relu_"], [91, 1, 1, "", "aten_remainder"], [91, 1, 1, "", "aten_remainder_Scalar"], [91, 1, 1, "", "aten_remainder_Tensor"], [91, 1, 1, "", "aten_repeat"], [91, 1, 1, "", "aten_repeat_interleave"], [91, 1, 1, "", "aten_repeat_interleave_Tensor"], [91, 1, 1, "", "aten_repeat_interleave_self_Tensor"], [91, 1, 1, "", "aten_repeat_interleave_self_int"], [91, 1, 1, "", "aten_reshape"], [91, 1, 1, "", "aten_reshape_as"], [91, 1, 1, "", "aten_roll"], [91, 1, 1, "", "aten_round"], [91, 1, 1, "", "aten_rrelu_with_noise_backward"], [91, 1, 1, "", "aten_rsqrt"], [91, 1, 1, "", "aten_rsub"], [91, 1, 1, "", "aten_rsub_Scalar"], [91, 1, 1, "", "aten_scalar_tensor"], [91, 1, 1, "", "aten_scan"], [91, 1, 1, "", "aten_scatter__src"], [91, 1, 1, "", "aten_scatter_add"], [91, 1, 1, "", "aten_scatter_add_"], [91, 1, 1, "", "aten_scatter_reduce__two"], [91, 1, 1, "", "aten_scatter_reduce_two"], [91, 1, 1, "", "aten_scatter_src"], [91, 1, 1, "", "aten_select_copy_int"], [91, 1, 1, "", "aten_select_int"], [91, 1, 1, "", "aten_select_scatter"], [91, 1, 1, "", "aten_selu"], [91, 1, 1, "", "aten_setitem"], [91, 1, 1, "", "aten_sigmoid"], [91, 1, 1, "", "aten_sigmoid_"], [91, 1, 1, "", "aten_sigmoid_backward"], [91, 1, 1, "", "aten_sign"], [91, 1, 1, "", "aten_silu"], [91, 1, 1, "", "aten_silu_"], [91, 1, 1, "", "aten_sin"], [91, 1, 1, "", "aten_sinh"], [91, 1, 1, "", "aten_slice_Tensor"], [91, 1, 1, "", "aten_slice_backward"], [91, 1, 1, "", "aten_slice_scatter"], [91, 1, 1, "", "aten_softmax"], [91, 1, 1, "", "aten_softmax_int"], [91, 1, 1, "", "aten_softplus"], [91, 1, 1, "", "aten_split_Tensor"], [91, 1, 1, "", "aten_split_with_sizes"], [91, 1, 1, "", "aten_sqrt"], [91, 1, 1, "", "aten_squeeze"], [91, 1, 1, "", "aten_squeeze_dim"], [91, 1, 1, "", "aten_squeeze_dims"], [91, 1, 1, "", "aten_stack"], [91, 1, 1, "", "aten_std_dim"], [91, 1, 1, "", "aten_sub"], [91, 1, 1, "", "aten_sub_Tensor"], [91, 1, 1, "", "aten_sub__Tensor"], [91, 1, 1, "", "aten_sum"], [91, 1, 1, "", "aten_sum_dim_IntList"], [91, 1, 1, "", "aten_sym_constrain_range_for_size"], [91, 1, 1, "", "aten_sym_max"], [91, 1, 1, "", "aten_sym_min"], [91, 1, 1, "", "aten_sym_not"], [91, 1, 1, "", "aten_sym_size_int"], [91, 1, 1, "", "aten_t"], [91, 1, 1, "", "aten_take"], [91, 1, 1, "", "aten_tan"], [91, 1, 1, "", "aten_tanh"], [91, 1, 1, "", "aten_tanh_backward"], [91, 1, 1, "", "aten_tensor"], [91, 1, 1, "", "aten_threshold_backward"], [91, 1, 1, "", "aten_to"], [91, 1, 1, "", "aten_to_device"], [91, 1, 1, "", "aten_to_dtype"], [91, 1, 1, "", "aten_to_dtype_layout"], [91, 1, 1, "", "aten_topk"], [91, 1, 1, "", "aten_transpose"], [91, 1, 1, "", "aten_transpose_int"], [91, 1, 1, "", "aten_tril"], [91, 1, 1, "", "aten_triu"], [91, 1, 1, "", "aten_truediv"], [91, 1, 1, "", "aten_type_as"], [91, 1, 1, "", "aten_unbind_int"], [91, 1, 1, "", "aten_unflatten_int"], [91, 1, 1, "", "aten_unfold"], [91, 1, 1, "", "aten_unsqueeze"], [91, 1, 1, "", "aten_unsqueeze_"], [91, 1, 1, "", "aten_upsample_bicubic2d"], [91, 1, 1, "", "aten_upsample_bicubic2d_vec"], [91, 1, 1, "", "aten_upsample_bilinear2d"], [91, 1, 1, "", "aten_upsample_bilinear2d_vec"], [91, 1, 1, "", "aten_upsample_linear1d_vec"], [91, 1, 1, "", "aten_upsample_nearest2d"], [91, 1, 1, "", "aten_upsample_nearest2d_vec"], [91, 1, 1, "", "aten_upsample_nearest3d"], [91, 1, 1, "", "aten_upsample_nearest3d_vec"], [91, 1, 1, "", "aten_upsample_trilinear3d"], [91, 1, 1, "", "aten_upsample_trilinear3d_vec"], [91, 1, 1, "", "aten_view"], [91, 1, 1, "", "aten_where"], [91, 1, 1, "", "aten_where_Scalar"], [91, 1, 1, "", "aten_where_ScalarOther"], [91, 1, 1, "", "aten_where_ScalarSelf"], [91, 1, 1, "", "aten_where_self"], [91, 1, 1, "", "aten_wrap_with_autocast"], [91, 1, 1, "", "aten_wrap_with_set_grad_enabled"], [91, 1, 1, "", "aten_zero"], [91, 1, 1, "", "aten_zeros"], [91, 1, 1, "", "aten_zeros_like"]], "experimental_experiment.torch_interpreter._aten_functions_attention": [[92, 1, 1, "", "aten__scaled_dot_product_efficient_attention"], [92, 1, 1, "", "aten__scaled_dot_product_flash_attention"], [92, 1, 1, "", "aten__scaled_dot_product_flash_attention_for_cpu"], [92, 1, 1, "", "aten_scaled_dot_product_attention"]], "experimental_experiment.torch_interpreter._aten_methods": [[93, 1, 1, "", "aten_meth___eq__"], [93, 1, 1, "", "aten_meth_bool"], [93, 1, 1, "", "aten_meth_clamp_max"], [93, 1, 1, "", "aten_meth_clamp_min"], [93, 1, 1, "", "aten_meth_clone"], [93, 1, 1, "", "aten_meth_contiguous"], [93, 1, 1, "", "aten_meth_cos"], [93, 1, 1, "", "aten_meth_cpu"], [93, 1, 1, "", "aten_meth_detach"], [93, 1, 1, "", "aten_meth_eq"], [93, 1, 1, "", "aten_meth_expand"], [93, 1, 1, "", "aten_meth_expand_as"], [93, 1, 1, "", "aten_meth_float"], [93, 1, 1, "", "aten_meth_item"], [93, 1, 1, "", "aten_meth_masked_fill"], [93, 1, 1, "", "aten_meth_masked_fill_"], [93, 1, 1, "", "aten_meth_mean"], [93, 1, 1, "", "aten_meth_numel"], [93, 1, 1, "", "aten_meth_pow"], [93, 1, 1, "", "aten_meth_repeat"], [93, 1, 1, "", "aten_meth_reshape"], [93, 1, 1, "", "aten_meth_sin"], [93, 1, 1, "", "aten_meth_size"], [93, 1, 1, "", "aten_meth_sum"], [93, 1, 1, "", "aten_meth_t"], [93, 1, 1, "", "aten_meth_to"], [93, 1, 1, "", "aten_meth_transpose"], [93, 1, 1, "", "aten_meth_unsqueeze"], [93, 1, 1, "", "aten_meth_view"]], "experimental_experiment.torch_interpreter._doc_": [[94, 3, 1, "", "TorchOpOverload"]], "experimental_experiment.torch_interpreter._exceptions": [[95, 2, 1, "", "FunctionNotFoundError"]], "experimental_experiment.torch_interpreter._non_aten_functions": [[96, 1, 1, "", "onnx_symbolic__symbolic_default"]], "experimental_experiment.torch_interpreter._prims_functions": [[97, 1, 1, "", "prims_add"], [97, 1, 1, "", "prims_amax"], [97, 1, 1, "", "prims_broadcast_in_dim"], [97, 1, 1, "", "prims_cat"], [97, 1, 1, "", "prims_clone"], [97, 1, 1, "", "prims_collapse_view"], [97, 1, 1, "", "prims_convert_element_type"], [97, 1, 1, "", "prims_cos"], [97, 1, 1, "", "prims_div"], [97, 1, 1, "", "prims_empty_strided"], [97, 1, 1, "", "prims_eq"], [97, 1, 1, "", "prims_exp"], [97, 1, 1, "", "prims_ge"], [97, 1, 1, "", "prims_gt"], [97, 1, 1, "", "prims_iota"], [97, 1, 1, "", "prims_lt"], [97, 1, 1, "", "prims_mul"], [97, 1, 1, "", "prims_neg"], [97, 1, 1, "", "prims_pow"], [97, 1, 1, "", "prims_rsqrt"], [97, 1, 1, "", "prims_sin"], [97, 1, 1, "", "prims_split_dim"], [97, 1, 1, "", "prims_sub"], [97, 1, 1, "", "prims_sum"], [97, 1, 1, "", "prims_transpose"], [97, 1, 1, "", "prims_view_of"], [97, 1, 1, "", "prims_where"]], "experimental_experiment.torch_interpreter._torch_helper": [[98, 1, 1, "", "make_copy"]], "experimental_experiment.torch_interpreter.dispatcher": [[101, 3, 1, "", "ForceDispatcher"]], "experimental_experiment.torch_interpreter.dispatcher.ForceDispatcher": [[101, 4, 1, "", "fallback"]], "experimental_experiment.torch_interpreter.export_options": [[102, 1, 1, "", "insert_contiguous_between_transpose_and_view"]], "experimental_experiment.torch_interpreter.interpreter": [[104, 3, 1, "", "DynamoInterpreter"]], "experimental_experiment.torch_interpreter.interpreter.DynamoInterpreter": [[104, 4, 1, "", "add_aten_as_function"], [104, 4, 1, "", "call_function"], [104, 4, 1, "", "call_method"], [104, 4, 1, "", "call_module"], [104, 4, 1, "", "flatten_inputs"], [104, 4, 1, "", "get_attr"], [104, 4, 1, "", "get_submodule_name"], [104, 4, 1, "", "getitem"], [104, 4, 1, "", "make_nn_module_with_callable"], [104, 4, 1, "", "output"], [104, 4, 1, "", "placeholder"], [104, 4, 1, "", "register_named_modules"], [104, 4, 1, "", "run_node"]], "experimental_experiment.torch_interpreter.investigate_helper": [[105, 1, 1, "", "prepare_args_kwargs"], [105, 1, 1, "", "run_aligned"], [105, 1, 1, "", "run_fx_node"], [105, 1, 1, "", "validate_fx_outputs"], [105, 1, 1, "", "validate_fx_tensor"]], "experimental_experiment.torch_interpreter.onnx_export": [[106, 3, 1, "", "ParameterNaming"], [106, 3, 1, "", "SubModuleNaming"], [106, 1, 1, "", "get_default_aten_as_function"], [106, 1, 1, "", "is_wrapped"], [106, 1, 1, "", "match_input_parameters"], [106, 1, 1, "", "rewrite_dynamic_shapes"], [106, 1, 1, "", "validate_exported_onnx"]], "experimental_experiment.torch_interpreter.oxs_dispatcher": [[107, 3, 1, "", "OxsDebugDispatcher"], [107, 3, 1, "", "OxsDispatcher"]], "experimental_experiment.torch_interpreter.oxs_dispatcher.OxsDebugDispatcher": [[107, 4, 1, "", "fallback"]], "experimental_experiment.torch_interpreter.oxs_dispatcher.OxsDispatcher": [[107, 4, 1, "", "fallback"], [107, 5, 1, "", "submodules"]], "experimental_experiment.torch_interpreter.oxs_opset": [[108, 3, 1, "", "OxsOpset"], [108, 3, 1, "", "Var"], [108, 3, 1, "", "VarShapeType"]], "experimental_experiment.torch_interpreter.oxs_opset.OxsOpset": [[108, 4, 1, "", "make_node"]], "experimental_experiment.torch_interpreter.piece_by_piece": [[109, 3, 1, "", "CustomOpStrategy"], [109, 3, 1, "", "ModelDiagnoseOutput"], [109, 3, 1, "", "StatusExport"], [109, 3, 1, "", "StatusExportCode"], [109, 1, 1, "", "trace_execution_piece_by_piece"], [109, 1, 1, "", "trace_forward_execution"], [109, 1, 1, "", "traced_cond"]], "experimental_experiment.torch_interpreter.piece_by_piece.ModelDiagnoseOutput": [[109, 4, 1, "", "add_child"], [109, 4, 1, "", "add_inputs"], [109, 4, 1, "", "add_outputs"], [109, 4, 1, "", "build_c_schema"], [109, 4, 1, "", "build_shape_mapping_indices"], [109, 4, 1, "", "compute_onnx_discrepancies"], [109, 5, 1, "", "custom_op_name"], [109, 4, 1, "", "determine_shape_fct"], [109, 5, 1, "", "dot_name"], [109, 4, 1, "", "draft_export_local"], [109, 4, 1, "", "export_local"], [109, 5, 1, "", "full_name"], [109, 4, 1, "", "get_debug_msg"], [109, 4, 1, "", "get_export_report"], [109, 4, 1, "", "guess_dynamic_dimensions"], [109, 4, 1, "", "guess_dynamic_shape_object"], [109, 4, 1, "", "guess_dynamic_shapes"], [109, 4, 1, "", "is_customized"], [109, 5, 1, "", "module_name_type"], [109, 4, 1, "", "pretty_text"], [109, 4, 1, "", "put_custom_op_inplace"], [109, 4, 1, "", "remove_custom_op_inplace"], [109, 4, 1, "", "to_onnx_local"], [109, 5, 1, "", "true_model_name"], [109, 4, 1, "", "try_export"], [109, 4, 1, "", "verifies"]], "experimental_experiment.torch_interpreter.piece_by_piece.StatusExport": [[109, 4, 1, "", "is_ok"], [109, 4, 1, "", "pretty_text"], [109, 5, 1, "", "short_reason"]], "experimental_experiment.torch_interpreter.piece_by_piece.StatusExportCode": [[109, 4, 1, "", "remove"]], "experimental_experiment.torch_interpreter.piece_by_piece_serialize": [[110, 1, 1, "", "choose_kwargs_for_dynamic_shapes"], [110, 1, 1, "", "deserialize_args"], [110, 1, 1, "", "deserialize_args_kwargs"], [110, 1, 1, "", "extract_names_from_schema"], [110, 1, 1, "", "serialize_args"], [110, 1, 1, "", "serialize_one"], [110, 1, 1, "", "tree_spec_as_name"], [110, 1, 1, "", "tree_spec_from_name"], [110, 1, 1, "", "type_as_str_with_info"]], "experimental_experiment.torch_interpreter.tracing": [[111, 3, 1, "", "CondCCOp"], [111, 3, 1, "", "CustomAttribute"], [111, 3, 1, "", "CustomParameterProxy"], [111, 3, 1, "", "CustomProxy"], [111, 3, 1, "", "CustomProxyFloat"], [111, 3, 1, "", "CustomProxyInt"], [111, 3, 1, "", "CustomTracer"], [111, 3, 1, "", "LEAVE_INPLACE"], [111, 1, 1, "", "replace_problematic_function_before_tracing"], [111, 1, 1, "", "setitem_with_transformation"]], "experimental_experiment.torch_interpreter.tracing.CustomProxy": [[111, 4, 1, "", "cat"], [111, 4, 1, "", "instanceof"], [111, 4, 1, "", "length"]], "experimental_experiment.torch_interpreter.tracing.CustomProxyFloat": [[111, 4, 1, "", "instanceof"]], "experimental_experiment.torch_interpreter.tracing.CustomProxyInt": [[111, 4, 1, "", "instanceof"]], "experimental_experiment.torch_interpreter.tracing.CustomTracer": [[111, 4, 1, "", "create_arg"], [111, 4, 1, "", "getattr"], [111, 4, 1, "", "graph_erase_node"], [111, 4, 1, "", "proxy"], [111, 4, 1, "", "register_callable"], [111, 4, 1, "", "remove_inplace"], [111, 4, 1, "", "remove_unnecessary_slices"], [111, 4, 1, "", "trace"]], "experimental_experiment.torch_models": [[114, 1, 1, "", "assert_found"], [112, 0, 0, "-", "diffusion_model_helper"], [113, 0, 0, "-", "dump_helper"], [114, 1, 1, "", "flatten_outputs"], [115, 0, 0, "-", "llama_helper"], [116, 0, 0, "-", "llm_model_helper"], [117, 0, 0, "-", "llm_model_setup"], [118, 0, 0, "-", "mistral_helper"], [119, 0, 0, "-", "phi3_helper"], [120, 0, 0, "-", "phi_helper"], [121, 0, 0, "-", "training_helper"]], "experimental_experiment.torch_models.diffusion_model_helper": [[112, 1, 1, "", "get_stable_diffusion_2_unet"]], "experimental_experiment.torch_models.dump_helper": [[113, 1, 1, "", "assert_all_close"], [113, 1, 1, "", "build_matching_inputs"], [113, 1, 1, "", "dump_onnx"], [113, 1, 1, "", "inputs_from_onnx_model"], [113, 1, 1, "", "reorder_functions_in_proto"], [113, 1, 1, "", "results_to_string"]], "experimental_experiment.torch_models.llama_helper": [[115, 1, 1, "", "get_llama_model"]], "experimental_experiment.torch_models.llm_model_helper": [[116, 1, 1, "", "get_ai21_jamba_15_mini"], [116, 1, 1, "", "get_falcon_mamba_7b"], [116, 1, 1, "", "get_llama32_9b_vision"], [116, 1, 1, "", "get_phi2"], [116, 1, 1, "", "get_phi35_mini_instruct"], [116, 1, 1, "", "get_phi3_vision_128k_instruct"], [116, 1, 1, "", "get_phi4"], [116, 1, 1, "", "get_smollm_1_7b"], [116, 1, 1, "", "get_tiny_llm"]], "experimental_experiment.torch_models.llm_model_setup": [[117, 3, 1, "", "LLMInputKind"], [117, 1, 1, "", "finalize_llm_setup"], [117, 1, 1, "", "finalize_llm_vision_setup"], [117, 1, 1, "", "get_input_cache"]], "experimental_experiment.torch_models.mistral_helper": [[118, 1, 1, "", "get_mistral_model"]], "experimental_experiment.torch_models.phi3_helper": [[119, 1, 1, "", "get_phi3_model"], [119, 1, 1, "", "has_phi3"]], "experimental_experiment.torch_models.phi_helper": [[120, 1, 1, "", "get_phi_model"]], "experimental_experiment.torch_models.training_helper": [[121, 1, 1, "", "make_aot_ort"]], "experimental_experiment.torch_test_helper": [[122, 1, 1, "", "check_model_ort"], [122, 1, 1, "", "dummy_llm"], [122, 1, 1, "", "export_to_onnx"], [122, 1, 1, "", "to_numpy"]], "experimental_experiment.xbuilder": [[126, 3, 1, "", "FunctionOptions"], [126, 3, 1, "", "GraphBuilder"], [126, 3, 1, "", "InferShapesOptions"], [126, 3, 1, "", "OptimizationOptions"], [126, 3, 1, "", "VirtualTensor"], [123, 0, 0, "-", "_onnx_helper"], [124, 0, 0, "-", "graph_builder"], [125, 0, 0, "-", "graph_builder_opset"], [127, 0, 0, "-", "model_container"], [128, 0, 0, "-", "optimization_options"], [129, 0, 0, "-", "reverse_graph_builder"]], "experimental_experiment.xbuilder.GraphBuilder": [[126, 3, 1, "", "InitializerInfo"], [126, 3, 1, "", "ShapeConstant"], [126, 3, 1, "", "WrapDim"], [126, 3, 1, "", "WrapSym"], [126, 4, 1, "", "add_constant_node"], [126, 4, 1, "", "add_domain"], [126, 4, 1, "", "add_dynamic_object"], [126, 4, 1, "", "add_function"], [126, 4, 1, "", "add_initializer"], [126, 4, 1, "", "add_stat"], [126, 4, 1, "", "compute_constant"], [126, 4, 1, "", "constant_folding"], [126, 4, 1, "", "do_not_remove"], [126, 4, 1, "", "elem_size"], [126, 4, 1, "", "empty_copy"], [126, 4, 1, "", "evaluate_dimension_equality_with_constraints"], [126, 4, 1, "", "get_attribute"], [126, 4, 1, "", "get_attribute_with_default"], [126, 4, 1, "", "get_attributes_with_default"], [126, 4, 1, "", "get_constant"], [126, 4, 1, "", "get_constant_or_attribute"], [126, 4, 1, "", "get_debug_msg"], [126, 4, 1, "", "get_dynamic_dimension"], [126, 4, 1, "", "get_initializer_size"], [126, 4, 1, "", "get_input_dynamic_shape"], [126, 4, 1, "", "get_is_dimension"], [126, 4, 1, "", "get_local_function"], [126, 4, 1, "", "get_local_function_outputs"], [126, 4, 1, "", "get_opset"], [126, 4, 1, "", "get_rank"], [126, 4, 1, "", "get_registered_constraints"], [126, 4, 1, "", "get_sequence"], [126, 4, 1, "", "get_shape"], [126, 4, 1, "", "get_shape_renamed"], [126, 4, 1, "", "get_type"], [126, 4, 1, "", "get_type_known"], [126, 4, 1, "", "has_dynamic_object"], [126, 4, 1, "", "has_local_function"], [126, 4, 1, "", "has_name"], [126, 4, 1, "", "has_rank"], [126, 4, 1, "", "has_shape"], [126, 4, 1, "", "has_type"], [126, 4, 1, "", "infer_shapes"], [126, 4, 1, "", "inline_functions"], [126, 4, 1, "", "insert_and_remove_nodes"], [126, 4, 1, "", "io_names"], [126, 4, 1, "", "is_constant"], [126, 4, 1, "", "is_constant_or_attribute"], [126, 4, 1, "", "is_dynamic_shape"], [126, 4, 1, "", "is_exact_same_constant"], [126, 4, 1, "", "is_sequence"], [126, 5, 1, "", "main_opset"], [126, 4, 1, "", "make_dynamic_object"], [126, 4, 1, "", "make_initializer"], [126, 4, 1, "", "make_key"], [126, 4, 1, "", "make_local_function"], [126, 4, 1, "", "make_new_dynamic_shape"], [126, 4, 1, "", "make_node"], [126, 4, 1, "", "make_nodes"], [126, 4, 1, "", "make_shape_from_results"], [126, 4, 1, "", "make_subset_builder"], [126, 4, 1, "", "make_tensor_input"], [126, 4, 1, "", "make_tensor_output"], [126, 4, 1, "", "make_tensor_sequence_input"], [126, 4, 1, "", "make_tensor_value_info_from_name"], [126, 4, 1, "", "make_torch_tensor_from_np_array"], [126, 4, 1, "", "move_initializers_to_constant"], [126, 4, 1, "", "optimize"], [126, 4, 1, "", "optimize_node_subgraphs_inplace"], [126, 4, 1, "", "optimize_with_patterns"], [126, 4, 1, "", "parse_dimension_expression"], [126, 4, 1, "", "pretty_node"], [126, 4, 1, "", "pretty_text"], [126, 4, 1, "", "process"], [126, 4, 1, "", "rank"], [126, 4, 1, "", "register_constraint_dimension"], [126, 4, 1, "", "register_dynamic_objects_from_dim"], [126, 4, 1, "", "register_dynamic_objects_from_shape"], [126, 4, 1, "", "register_users"], [126, 4, 1, "", "remove_duplicated_initializer"], [126, 4, 1, "", "remove_duplicated_shape_nodes"], [126, 4, 1, "", "remove_identity_nodes"], [126, 4, 1, "", "remove_unused"], [126, 4, 1, "", "rename_in_local_functions"], [126, 4, 1, "", "rename_names"], [126, 4, 1, "", "reset_types_and_shapes"], [126, 4, 1, "", "same_dimension"], [126, 4, 1, "", "same_shape"], [126, 4, 1, "", "select_outputs"], [126, 4, 1, "", "set_name"], [126, 4, 1, "", "set_rank"], [126, 4, 1, "", "set_sequence"], [126, 4, 1, "", "set_shape"], [126, 4, 1, "", "set_type"], [126, 4, 1, "", "set_type_shape_or_rank"], [126, 4, 1, "", "set_value_shape"], [126, 4, 1, "", "shadowing_names"], [126, 4, 1, "", "to_onnx"], [126, 4, 1, "", "topological_sort"], [126, 4, 1, "", "unique_dimension_name"], [126, 4, 1, "", "unique_name"], [126, 4, 1, "", "unique_node_name"], [126, 4, 1, "", "value_as_shape"], [126, 4, 1, "", "verify_dynamic_shape"]], "experimental_experiment.xbuilder.GraphBuilder.InitializerInfo": [[126, 4, 1, "", "add_source"]], "experimental_experiment.xbuilder._onnx_helper": [[123, 1, 1, "", "choose_consistent_domain_opset"], [123, 1, 1, "", "clean_shapes"], [123, 1, 1, "", "compatible_opsets"], [123, 1, 1, "", "enumerate_subgraphs"], [123, 1, 1, "", "same_function_proto"]], "experimental_experiment.xbuilder.graph_builder_opset": [[125, 3, 1, "", "Opset"]], "experimental_experiment.xbuilder.model_container": [[127, 3, 1, "", "TorchModelContainer"]], "experimental_experiment.xbuilder.model_container.TorchModelContainer": [[127, 4, 1, "", "load"], [127, 4, 1, "", "save"], [127, 4, 1, "", "to_ir"]], "experimental_experiment.xbuilder.optimization_options": [[128, 3, 1, "", "OptimizationOptions"]], "experimental_experiment.xbuilder.reverse_graph_builder": [[129, 3, 1, "", "CustomBuilderEmitter"], [129, 1, 1, "", "to_graph_builder_code"], [129, 1, 1, "", "to_graph_pattern_matching"]], "experimental_experiment.xoptim": [[131, 3, 1, "", "EasyPatternOptimization"], [131, 3, 1, "", "GraphBuilderPatternOptimization"], [131, 3, 1, "", "MatchResult"], [131, 3, 1, "", "PatternOptimization"], [131, 1, 1, "", "get_pattern"], [131, 1, 1, "", "get_pattern_list"], [130, 0, 0, "-", "graph_builder_optim"], [132, 0, 0, "-", "order_optim"], [133, 0, 0, "-", "patterns"], [157, 0, 0, "-", "patterns_api"], [161, 0, 0, "-", "patterns_exp"], [166, 0, 0, "-", "patterns_fix"], [168, 0, 0, "-", "patterns_investigation"], [170, 0, 0, "-", "patterns_ml"], [178, 0, 0, "-", "patterns_ort"], [131, 1, 1, "", "remove_constants_for_initializers"], [181, 0, 0, "-", "repeated_optim"], [182, 0, 0, "-", "unfused"]], "experimental_experiment.xoptim.EasyPatternOptimization": [[131, 4, 1, "", "add_local_functions_to_builder"], [131, 4, 1, "", "add_validate_param"], [131, 4, 1, "", "apply"], [131, 4, 1, "", "apply_pattern"], [131, 4, 1, "", "display_pattern"], [131, 4, 1, "", "match"], [131, 4, 1, "", "match_pattern"], [131, 4, 1, "", "post_apply_pattern"], [131, 4, 1, "", "pretty_matched_pairs"], [131, 4, 1, "", "validate_attribute_mapping"], [131, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.GraphBuilderPatternOptimization": [[131, 4, 1, "", "apply_match"], [131, 4, 1, "", "do_not_remove"], [131, 4, 1, "", "get_attribute"], [131, 4, 1, "", "get_attributes_with_default"], [131, 4, 1, "", "get_axis"], [131, 4, 1, "", "get_computed_constant"], [131, 4, 1, "", "get_constant_or_attribute"], [131, 4, 1, "", "get_constant_scalar"], [131, 4, 1, "", "get_constant_shape"], [131, 4, 1, "", "get_rank"], [131, 4, 1, "", "get_registered_constraints"], [131, 4, 1, "", "get_shape"], [131, 4, 1, "", "get_shape_renamed"], [131, 4, 1, "", "get_type"], [131, 4, 1, "", "has_processor"], [131, 4, 1, "", "has_rank"], [131, 4, 1, "", "has_shape"], [131, 4, 1, "", "has_type"], [131, 5, 1, "", "input_names"], [131, 5, 1, "", "inputs"], [131, 4, 1, "", "is_constant"], [131, 4, 1, "", "is_constant_scalar"], [131, 4, 1, "", "is_output"], [131, 4, 1, "", "is_used"], [131, 4, 1, "", "is_used_by_subgraph"], [131, 4, 1, "", "is_used_more_than_once"], [131, 4, 1, "", "is_used_only_by"], [131, 4, 1, "", "iter_nodes"], [131, 5, 1, "", "main_opset"], [131, 4, 1, "", "make_initializer"], [131, 4, 1, "", "make_node"], [131, 4, 1, "", "make_node_check_opset"], [131, 4, 1, "", "next_node"], [131, 4, 1, "", "next_nodes"], [131, 4, 1, "", "node_before"], [131, 5, 1, "", "nodes"], [131, 5, 1, "", "opsets"], [131, 4, 1, "", "optimize"], [131, 4, 1, "", "optimize_node_subgraphs_inplace"], [131, 5, 1, "", "output_names"], [131, 5, 1, "", "outputs"], [131, 4, 1, "", "pretty_text"], [131, 4, 1, "", "same_shape"], [131, 4, 1, "", "try_infer_shape"], [131, 4, 1, "", "try_infer_type"], [131, 4, 1, "", "unique_name"]], "experimental_experiment.xoptim.MatchResult": [[131, 4, 1, "", "debug_string"]], "experimental_experiment.xoptim.PatternOptimization": [[131, 4, 1, "", "apply"], [131, 4, 1, "", "enumerate_matches"], [131, 4, 1, "", "match"], [131, 4, 1, "", "none"]], "experimental_experiment.xoptim.order_optim": [[132, 3, 1, "", "OrderAlgorithm"], [132, 3, 1, "", "OrderOptimization"]], "experimental_experiment.xoptim.order_optim.OrderOptimization": [[132, 4, 1, "", "optimize"], [132, 4, 1, "", "random_order"]], "experimental_experiment.xoptim.patterns": [[133, 3, 1, "", "AlmostDoNothingPattern"], [133, 1, 1, "", "get_default_patterns"], [134, 0, 0, "-", "onnx_any"], [135, 0, 0, "-", "onnx_attention"], [136, 0, 0, "-", "onnx_cast"], [137, 0, 0, "-", "onnx_clip"], [138, 0, 0, "-", "onnx_constants"], [139, 0, 0, "-", "onnx_conv"], [140, 0, 0, "-", "onnx_dropout"], [141, 0, 0, "-", "onnx_equal"], [142, 0, 0, "-", "onnx_expand"], [143, 0, 0, "-", "onnx_functions"], [144, 0, 0, "-", "onnx_layer_normalization"], [145, 0, 0, "-", "onnx_matmul"], [146, 0, 0, "-", "onnx_mul"], [147, 0, 0, "-", "onnx_reduce"], [148, 0, 0, "-", "onnx_reshape"], [149, 0, 0, "-", "onnx_rotary"], [150, 0, 0, "-", "onnx_sequence"], [151, 0, 0, "-", "onnx_shape"], [152, 0, 0, "-", "onnx_slice"], [153, 0, 0, "-", "onnx_split"], [154, 0, 0, "-", "onnx_sub"], [155, 0, 0, "-", "onnx_transpose"], [156, 0, 0, "-", "onnx_unsqueeze"]], "experimental_experiment.xoptim.patterns.AlmostDoNothingPattern": [[133, 4, 1, "", "apply"], [133, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_any": [[134, 3, 1, "", "IdentityPattern"], [134, 3, 1, "", "SameChildrenFromInputPattern"], [134, 3, 1, "", "SameChildrenPattern"], [134, 3, 1, "", "ShapeBasedIdentityPattern"], [134, 3, 1, "", "ShapeBasedSameChildrenPattern"]], "experimental_experiment.xoptim.patterns.onnx_any.IdentityPattern": [[134, 4, 1, "", "apply"], [134, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_any.SameChildrenFromInputPattern": [[134, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_any.SameChildrenPattern": [[134, 4, 1, "", "apply"], [134, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_any.ShapeBasedIdentityPattern": [[134, 4, 1, "", "apply"], [134, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_any.ShapeBasedSameChildrenPattern": [[134, 4, 1, "", "apply"], [134, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_attention": [[135, 3, 1, "", "FunctionAttentionPattern"]], "experimental_experiment.xoptim.patterns.onnx_attention.FunctionAttentionPattern": [[135, 4, 1, "", "apply"], [135, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast": [[136, 3, 1, "", "CastCastBinaryPattern"], [136, 3, 1, "", "CastCastPattern"], [136, 3, 1, "", "CastOpCastPattern"], [136, 3, 1, "", "CastPattern"], [136, 3, 1, "", "ComputationCastOpCastPattern"]], "experimental_experiment.xoptim.patterns.onnx_cast.CastCastBinaryPattern": [[136, 4, 1, "", "apply"], [136, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast.CastCastPattern": [[136, 4, 1, "", "apply"], [136, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast.CastOpCastPattern": [[136, 4, 1, "", "apply"], [136, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast.CastPattern": [[136, 4, 1, "", "apply"], [136, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast.ComputationCastOpCastPattern": [[136, 4, 1, "", "apply"], [136, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_clip": [[137, 3, 1, "", "ClipClipPattern"]], "experimental_experiment.xoptim.patterns.onnx_clip.ClipClipPattern": [[137, 4, 1, "", "apply"], [137, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_constants": [[138, 3, 1, "", "ConstantToInitializerPattern"]], "experimental_experiment.xoptim.patterns.onnx_constants.ConstantToInitializerPattern": [[138, 4, 1, "", "apply"], [138, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_conv": [[139, 3, 1, "", "ConvBiasNullPattern"]], "experimental_experiment.xoptim.patterns.onnx_conv.ConvBiasNullPattern": [[139, 4, 1, "", "apply"], [139, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_dropout": [[140, 3, 1, "", "DropoutPattern"]], "experimental_experiment.xoptim.patterns.onnx_dropout.DropoutPattern": [[140, 4, 1, "", "apply"], [140, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_equal": [[141, 3, 1, "", "UnsqueezeEqualPattern"]], "experimental_experiment.xoptim.patterns.onnx_equal.UnsqueezeEqualPattern": [[141, 4, 1, "", "apply"], [141, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand": [[142, 3, 1, "", "ExpandBroadcastPattern"], [142, 3, 1, "", "ExpandPattern"], [142, 3, 1, "", "ExpandSwapPattern"], [142, 3, 1, "", "ShapeBasedConcatExpandPattern"], [142, 3, 1, "", "ShapeBasedExpandBroadcastMatMulPattern"], [142, 3, 1, "", "ShapeBasedExpandBroadcastPattern"], [142, 3, 1, "", "ShapeBasedExpandCastWhereSwapPattern"], [142, 3, 1, "", "ShapeBasedExpandSwapPattern"], [142, 3, 1, "", "ShapeBasedStaticExpandPattern"], [142, 3, 1, "", "SwapExpandReshapePattern"]], "experimental_experiment.xoptim.patterns.onnx_expand.ExpandBroadcastPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ExpandPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ExpandSwapPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ShapeBasedConcatExpandPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ShapeBasedExpandBroadcastMatMulPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ShapeBasedExpandBroadcastPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ShapeBasedExpandCastWhereSwapPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ShapeBasedExpandSwapPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ShapeBasedStaticExpandPattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.SwapExpandReshapePattern": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_functions": [[143, 3, 1, "", "GeluPattern"], [143, 3, 1, "", "LeakyReluPattern"], [143, 3, 1, "", "SoftmaxCrossEntropyLossCastPattern"]], "experimental_experiment.xoptim.patterns.onnx_functions.GeluPattern": [[143, 4, 1, "", "apply_pattern"], [143, 4, 1, "", "match_pattern"], [143, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.patterns.onnx_functions.LeakyReluPattern": [[143, 4, 1, "", "apply_pattern"], [143, 4, 1, "", "match_pattern"], [143, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.patterns.onnx_functions.SoftmaxCrossEntropyLossCastPattern": [[143, 4, 1, "", "apply_pattern"], [143, 4, 1, "", "match_pattern"], [143, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization": [[144, 3, 1, "", "BatchNormalizationPattern"], [144, 3, 1, "", "BatchNormalizationTrainingPattern"], [144, 3, 1, "", "CastLayerNormalizationCastPattern"], [144, 3, 1, "", "LayerNormalizationPattern"], [144, 3, 1, "", "LayerNormalizationScalePattern"], [144, 3, 1, "", "RMSNormalizationPattern"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.BatchNormalizationPattern": [[144, 4, 1, "", "apply"], [144, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.BatchNormalizationTrainingPattern": [[144, 4, 1, "", "apply"], [144, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.CastLayerNormalizationCastPattern": [[144, 4, 1, "", "apply"], [144, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.LayerNormalizationPattern": [[144, 4, 1, "", "apply"], [144, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.LayerNormalizationScalePattern": [[144, 4, 1, "", "apply"], [144, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.RMSNormalizationPattern": [[144, 4, 1, "", "apply"], [144, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul": [[145, 3, 1, "", "GemmTransposePattern"], [145, 3, 1, "", "MatMulAddPattern"], [145, 3, 1, "", "MatMulReshape2Of3Pattern"], [145, 3, 1, "", "MulMulMatMulPattern"], [145, 3, 1, "", "ReshapeMatMulReshapePattern"], [145, 3, 1, "", "ShapeBasedMatMulToMulPattern"], [145, 3, 1, "", "SwitchReshapeActivationPattern"], [145, 3, 1, "", "TransposeMatMulPattern"], [145, 3, 1, "", "TransposeReshapeMatMulPattern"]], "experimental_experiment.xoptim.patterns.onnx_matmul.GemmTransposePattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.MatMulAddPattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.MatMulReshape2Of3Pattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.MulMulMatMulPattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.ReshapeMatMulReshapePattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.ShapeBasedMatMulToMulPattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.SwitchReshapeActivationPattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.TransposeMatMulPattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.TransposeReshapeMatMulPattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_mul": [[146, 3, 1, "", "MulMulMulScalarPattern"], [146, 3, 1, "", "SwitchOrderBinaryPattern"]], "experimental_experiment.xoptim.patterns.onnx_mul.MulMulMulScalarPattern": [[146, 4, 1, "", "apply"], [146, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_mul.SwitchOrderBinaryPattern": [[146, 3, 1, "", "BroadcastType"], [146, 4, 1, "", "apply"], [146, 4, 1, "", "match"], [146, 4, 1, "", "switch_order"]], "experimental_experiment.xoptim.patterns.onnx_reduce": [[147, 3, 1, "", "ReduceSumNormalizePattern"]], "experimental_experiment.xoptim.patterns.onnx_reduce.ReduceSumNormalizePattern": [[147, 4, 1, "", "apply"], [147, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape": [[148, 3, 1, "", "ConcatReshapePattern"], [148, 3, 1, "", "ReduceReshapePattern"], [148, 3, 1, "", "Reshape2Of3Pattern"], [148, 3, 1, "", "ReshapePattern"], [148, 3, 1, "", "ReshapeReshapeBinaryPattern"], [148, 3, 1, "", "ReshapeReshapePattern"], [148, 3, 1, "", "ShapeBasedEditDistanceReshapePattern"], [148, 3, 1, "", "ShapeBasedReshapeIsSqueezePattern"], [148, 3, 1, "", "ShapedBasedReshapePattern"], [148, 3, 1, "", "StaticConcatReshapePattern"], [148, 3, 1, "", "UnsqueezeReshapePattern"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ConcatReshapePattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ReduceReshapePattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.Reshape2Of3Pattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ReshapePattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ReshapeReshapeBinaryPattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ReshapeReshapePattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ShapeBasedEditDistanceReshapePattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ShapeBasedReshapeIsSqueezePattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ShapedBasedReshapePattern": [[148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.StaticConcatReshapePattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.UnsqueezeReshapePattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_rotary": [[149, 3, 1, "", "FunctionCausalMaskMulAddPattern"], [149, 3, 1, "", "FunctionCausalMaskPattern"], [149, 3, 1, "", "FunctionCosSinCachePattern"], [149, 3, 1, "", "FunctionHalfRotaryEmbeddingPattern"], [149, 3, 1, "", "RotaryConcatPartPattern"], [149, 3, 1, "", "RotaryEmbeddingPattern"]], "experimental_experiment.xoptim.patterns.onnx_rotary.FunctionCausalMaskMulAddPattern": [[149, 4, 1, "", "apply"], [149, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_rotary.FunctionCausalMaskPattern": [[149, 4, 1, "", "apply"], [149, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_rotary.FunctionCosSinCachePattern": [[149, 4, 1, "", "apply"], [149, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_rotary.FunctionHalfRotaryEmbeddingPattern": [[149, 4, 1, "", "apply"], [149, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_rotary.RotaryConcatPartPattern": [[149, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_rotary.RotaryEmbeddingPattern": [[149, 4, 1, "", "apply"], [149, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_sequence": [[150, 3, 1, "", "SequenceConstructAtPattern"]], "experimental_experiment.xoptim.patterns.onnx_sequence.SequenceConstructAtPattern": [[150, 4, 1, "", "apply"], [150, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_shape": [[151, 3, 1, "", "ShapeBasedShapeShapeAddPattern"]], "experimental_experiment.xoptim.patterns.onnx_shape.ShapeBasedShapeShapeAddPattern": [[151, 4, 1, "", "apply"], [151, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_slice": [[152, 3, 1, "", "SliceSlicePattern"]], "experimental_experiment.xoptim.patterns.onnx_slice.SliceSlicePattern": [[152, 4, 1, "", "apply"], [152, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_split": [[153, 3, 1, "", "SlicesSplitPattern"], [153, 3, 1, "", "SplitConcatPattern"]], "experimental_experiment.xoptim.patterns.onnx_split.SlicesSplitPattern": [[153, 4, 1, "", "apply"], [153, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_split.SplitConcatPattern": [[153, 4, 1, "", "apply"], [153, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_sub": [[154, 3, 1, "", "Sub1MulPattern"]], "experimental_experiment.xoptim.patterns.onnx_sub.Sub1MulPattern": [[154, 4, 1, "", "apply"], [154, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_transpose": [[155, 3, 1, "", "TransposeEqualReshapePattern"], [155, 3, 1, "", "TransposeReshapeTransposePattern"], [155, 3, 1, "", "TransposeTransposePattern"]], "experimental_experiment.xoptim.patterns.onnx_transpose.TransposeEqualReshapePattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_transpose.TransposeReshapeTransposePattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_transpose.TransposeTransposePattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_unsqueeze": [[156, 3, 1, "", "SqueezeAddPattern"], [156, 3, 1, "", "SqueezeBinaryUnsqueezePattern"], [156, 3, 1, "", "SqueezeUnsqueezePattern"], [156, 3, 1, "", "UnsqueezeUnsqueezePattern"]], "experimental_experiment.xoptim.patterns.onnx_unsqueeze.SqueezeAddPattern": [[156, 4, 1, "", "apply"], [156, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_unsqueeze.SqueezeBinaryUnsqueezePattern": [[156, 4, 1, "", "apply"], [156, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_unsqueeze.SqueezeUnsqueezePattern": [[156, 4, 1, "", "apply"], [156, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_unsqueeze.UnsqueezeUnsqueezePattern": [[156, 4, 1, "", "apply"], [156, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_api": [[157, 3, 1, "", "OnnxEasyPatternOptimization"], [157, 1, 1, "", "make_pattern_from_onnx"], [157, 1, 1, "", "pattern_table_doc"], [157, 1, 1, "", "string_to_elem_type"]], "experimental_experiment.xoptim.patterns_exp": [[158, 0, 0, "-", "binary_operators"], [159, 0, 0, "-", "constant_of_shape_scatter_nd"], [160, 0, 0, "-", "constants"], [161, 1, 1, "", "get_experimental_patterns"], [162, 0, 0, "-", "simple_rotary"], [163, 0, 0, "-", "unary_operators"], [164, 0, 0, "-", "where_replace"]], "experimental_experiment.xoptim.patterns_exp.binary_operators": [[158, 3, 1, "", "AddAddMulMulBroadcastPattern"], [158, 3, 1, "", "AddAddMulMulPattern"], [158, 3, 1, "", "AddMulBroadcastPattern"], [158, 3, 1, "", "AddMulPattern"], [158, 3, 1, "", "AddMulSharedInputBroadcastPattern"], [158, 3, 1, "", "AddMulSharedInputPattern"], [158, 3, 1, "", "AddMulTransposePattern"], [158, 3, 1, "", "MulSigmoidPattern"], [158, 3, 1, "", "NegXplus1Pattern"], [158, 3, 1, "", "SubMulBroadcastPattern"], [158, 3, 1, "", "SubMulPattern"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.AddAddMulMulPattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.AddMulPattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.AddMulSharedInputPattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "can_fuse"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.AddMulTransposePattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.MulSigmoidPattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.NegXplus1Pattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.SubMulPattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.constant_of_shape_scatter_nd": [[159, 3, 1, "", "ConstantOfShapeScatterNDPattern"], [159, 3, 1, "", "MaskedShapeScatterNDPattern"]], "experimental_experiment.xoptim.patterns_exp.constant_of_shape_scatter_nd.ConstantOfShapeScatterNDPattern": [[159, 4, 1, "", "apply"], [159, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.constant_of_shape_scatter_nd.MaskedShapeScatterNDPattern": [[159, 4, 1, "", "apply"], [159, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.constants": [[160, 3, 1, "", "TriMatrixPattern"]], "experimental_experiment.xoptim.patterns_exp.constants.TriMatrixPattern": [[160, 4, 1, "", "apply"], [160, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.simple_rotary": [[162, 3, 1, "", "SimpleRotaryPattern"]], "experimental_experiment.xoptim.patterns_exp.simple_rotary.SimpleRotaryPattern": [[162, 4, 1, "", "apply"], [162, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.unary_operators": [[163, 3, 1, "", "TransposeCastPattern"]], "experimental_experiment.xoptim.patterns_exp.unary_operators.TransposeCastPattern": [[163, 4, 1, "", "apply"], [163, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.where_replace": [[164, 3, 1, "", "ReplaceZeroPattern"]], "experimental_experiment.xoptim.patterns_exp.where_replace.ReplaceZeroPattern": [[164, 4, 1, "", "apply"], [164, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_fix": [[165, 0, 0, "-", "add_reduction_scatter_nd"], [166, 1, 1, "", "get_fix_patterns"]], "experimental_experiment.xoptim.patterns_fix.add_reduction_scatter_nd": [[165, 3, 1, "", "AddReductionScatterND"]], "experimental_experiment.xoptim.patterns_fix.add_reduction_scatter_nd.AddReductionScatterND": [[165, 4, 1, "", "apply"], [165, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_investigation": [[168, 3, 1, "", "SimplifyingEasyPatternFunction"], [167, 0, 0, "-", "element_wise"], [168, 1, 1, "", "get_investigation_patterns"], [169, 0, 0, "-", "llm_patterns"]], "experimental_experiment.xoptim.patterns_investigation.SimplifyingEasyPatternFunction": [[168, 4, 1, "", "add_local_functions_to_builder"], [168, 4, 1, "", "post_apply_pattern"]], "experimental_experiment.xoptim.patterns_investigation.element_wise": [[167, 3, 1, "", "BinaryInvestigation"]], "experimental_experiment.xoptim.patterns_investigation.element_wise.BinaryInvestigation": [[167, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_investigation.llm_patterns": [[169, 3, 1, "", "FunctionPackedMatMulPattern"], [169, 3, 1, "", "FunctionPowTanhPattern"], [169, 3, 1, "", "FunctionSplitRotaryMulPattern"]], "experimental_experiment.xoptim.patterns_investigation.llm_patterns.FunctionPackedMatMulPattern": [[169, 4, 1, "", "apply"], [169, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_investigation.llm_patterns.FunctionPowTanhPattern": [[169, 4, 1, "", "apply_pattern"], [169, 4, 1, "", "match_pattern"]], "experimental_experiment.xoptim.patterns_investigation.llm_patterns.FunctionSplitRotaryMulPattern": [[169, 4, 1, "", "apply_pattern"], [169, 4, 1, "", "match_pattern"]], "experimental_experiment.xoptim.patterns_ml": [[170, 1, 1, "", "get_ml_patterns"], [171, 0, 0, "-", "tree_ensemble"]], "experimental_experiment.xoptim.patterns_ml.tree_ensemble": [[171, 3, 1, "", "TreeEnsembleRegressorConcatPattern"], [171, 3, 1, "", "TreeEnsembleRegressorMulPattern"]], "experimental_experiment.xoptim.patterns_ml.tree_ensemble.TreeEnsembleRegressorConcatPattern": [[171, 4, 1, "", "apply"], [171, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ml.tree_ensemble.TreeEnsembleRegressorMulPattern": [[171, 4, 1, "", "apply"], [171, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort": [[172, 0, 0, "-", "activation"], [173, 0, 0, "-", "activation_grad"], [174, 0, 0, "-", "batch_normalization"], [175, 0, 0, "-", "fused_conv"], [176, 0, 0, "-", "fused_matmul"], [177, 0, 0, "-", "gather_grad"], [178, 1, 1, "", "get_onnxruntime_patterns"], [179, 0, 0, "-", "llm_optim"], [180, 0, 0, "-", "simplified_layer_normalization"]], "experimental_experiment.xoptim.patterns_ort.activation": [[172, 3, 1, "", "BiasGeluPattern"], [172, 3, 1, "", "BiasSoftmaxPattern"], [172, 3, 1, "", "FastGeluPattern"], [172, 3, 1, "", "GeluErfPattern"], [172, 3, 1, "", "GeluOrtPattern"], [172, 3, 1, "", "QuickGeluPattern"]], "experimental_experiment.xoptim.patterns_ort.activation.BiasGeluPattern": [[172, 4, 1, "", "apply"], [172, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.activation.BiasSoftmaxPattern": [[172, 4, 1, "", "apply"], [172, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.activation.FastGeluPattern": [[172, 4, 1, "", "apply"], [172, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.activation.GeluErfPattern": [[172, 4, 1, "", "apply_pattern"], [172, 4, 1, "", "match_pattern"], [172, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.patterns_ort.activation.QuickGeluPattern": [[172, 4, 1, "", "apply"], [172, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.activation_grad": [[173, 3, 1, "", "SoftmaxGradPattern"]], "experimental_experiment.xoptim.patterns_ort.activation_grad.SoftmaxGradPattern": [[173, 4, 1, "", "apply"], [173, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.batch_normalization": [[174, 3, 1, "", "OrtBatchNormalizationTrainingPattern"]], "experimental_experiment.xoptim.patterns_ort.batch_normalization.OrtBatchNormalizationTrainingPattern": [[174, 4, 1, "", "apply"], [174, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_conv": [[175, 3, 1, "", "FusedConvPattern"]], "experimental_experiment.xoptim.patterns_ort.fused_conv.FusedConvPattern": [[175, 4, 1, "", "apply"], [175, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul": [[176, 3, 1, "", "FusedMatMulDivPattern"], [176, 3, 1, "", "FusedMatMulPattern"], [176, 3, 1, "", "FusedMatMulTransposePattern"], [176, 3, 1, "", "FusedMatMulx2Pattern"], [176, 3, 1, "", "ReshapeGemmPattern"], [176, 3, 1, "", "TransposeFusedMatMulBPattern"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.FusedMatMulDivPattern": [[176, 4, 1, "", "apply"], [176, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.FusedMatMulPattern": [[176, 4, 1, "", "apply"], [176, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.FusedMatMulTransposePattern": [[176, 4, 1, "", "apply"], [176, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.FusedMatMulx2Pattern": [[176, 4, 1, "", "apply"], [176, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.ReshapeGemmPattern": [[176, 4, 1, "", "apply"], [176, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.TransposeFusedMatMulBPattern": [[176, 4, 1, "", "apply"], [176, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.gather_grad": [[177, 3, 1, "", "GatherGradPattern"]], "experimental_experiment.xoptim.patterns_ort.gather_grad.GatherGradPattern": [[177, 4, 1, "", "apply"], [177, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.llm_optim": [[179, 3, 1, "", "ContribRotaryEmbedding3DPattern"], [179, 3, 1, "", "ContribRotaryEmbeddingPattern"], [179, 3, 1, "", "MultiHeadAttention3DPattern"]], "experimental_experiment.xoptim.patterns_ort.llm_optim.ContribRotaryEmbedding3DPattern": [[179, 4, 1, "", "apply"], [179, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.llm_optim.ContribRotaryEmbeddingPattern": [[179, 4, 1, "", "apply"], [179, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.llm_optim.MultiHeadAttention3DPattern": [[179, 4, 1, "", "apply"], [179, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization": [[180, 3, 1, "", "SimplifiedLayerNormalizationMulPattern"], [180, 3, 1, "", "SimplifiedLayerNormalizationPattern"], [180, 3, 1, "", "SkipLayerNormalizationPattern"], [180, 3, 1, "", "SkipSimplifiedLayerNormalizationMulPattern"], [180, 3, 1, "", "SkipSimplifiedLayerNormalizationPattern"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization.SimplifiedLayerNormalizationMulPattern": [[180, 4, 1, "", "apply"], [180, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization.SimplifiedLayerNormalizationPattern": [[180, 4, 1, "", "apply"], [180, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization.SkipLayerNormalizationPattern": [[180, 4, 1, "", "apply"], [180, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization.SkipSimplifiedLayerNormalizationMulPattern": [[180, 4, 1, "", "apply"], [180, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization.SkipSimplifiedLayerNormalizationPattern": [[180, 4, 1, "", "apply"], [180, 4, 1, "", "match"]], "experimental_experiment.xoptim.repeated_optim": [[181, 1, 1, "", "find_largest_repeated_pattern"], [181, 1, 1, "", "make_function_from_nodes"], [181, 1, 1, "", "node_type_frequency"]], "experimental_experiment.xoptim.unfused": [[182, 1, 1, "", "unfused_nodes"]], "experimental_experiment.xshape": [[183, 0, 0, "-", "_builder_runtime"], [184, 0, 0, "-", "_inference_runtime"], [185, 0, 0, "-", "_onnx_helper"], [186, 0, 0, "-", "_shape_helper"], [187, 0, 0, "-", "_shape_runtime"], [188, 0, 0, "-", "evaluate_expressions"], [190, 0, 0, "-", "rename_expressions"], [191, 0, 0, "-", "shape_builder"], [192, 0, 0, "-", "shape_builder_impl"], [193, 0, 0, "-", "shape_type_compute"], [194, 0, 0, "-", "simplify_expressions"], [195, 0, 0, "-", "type_inference"]], "experimental_experiment.xshape._onnx_helper": [[185, 1, 1, "", "element_wise_binary_op_types"], [185, 1, 1, "", "element_wise_op_cmp_types"], [185, 1, 1, "", "enumerate_subgraphs"], [185, 1, 1, "", "overwrite_shape_in_model_proto"], [185, 1, 1, "", "str_tensor_proto_type"], [185, 1, 1, "", "unary_like_op_types"]], "experimental_experiment.xshape._shape_helper": [[186, 1, 1, "", "compatible_dimensions"], [186, 1, 1, "", "compatible_shapes"], [186, 1, 1, "", "reshape_implementation_with_zero"]], "experimental_experiment.xshape.evaluate_expressions": [[188, 1, 1, "", "evaluate_expression"]], "experimental_experiment.xshape.rename_expressions": [[190, 3, 1, "", "RenameTransformer"], [190, 3, 1, "", "RenameVariable"], [190, 1, 1, "", "parse_expression_tokens"], [190, 1, 1, "", "rename_dynamic_dimensions"], [190, 1, 1, "", "rename_dynamic_expression"], [190, 1, 1, "", "rename_expression"]], "experimental_experiment.xshape.shape_builder": [[191, 3, 1, "", "ShapeBuilder"]], "experimental_experiment.xshape.shape_builder.ShapeBuilder": [[191, 4, 1, "", "compare_with_true_inputs"], [191, 4, 1, "", "get_attribute"], [191, 4, 1, "", "get_attribute_with_default"], [191, 4, 1, "", "get_attributes_with_default"], [191, 4, 1, "", "pretty_node"], [191, 4, 1, "", "update_shapes"]], "experimental_experiment.xshape.shape_builder_impl": [[192, 3, 1, "", "BasicShapeBuilder"]], "experimental_experiment.xshape.shape_builder_impl.BasicShapeBuilder": [[192, 4, 1, "", "add_dynamic_dimension"], [192, 4, 1, "", "get_constant"], [192, 4, 1, "", "get_debug_msg"], [192, 4, 1, "", "get_rank"], [192, 4, 1, "", "get_shape"], [192, 4, 1, "", "get_type"], [192, 4, 1, "", "has_rank"], [192, 4, 1, "", "has_shape"], [192, 4, 1, "", "has_type"], [192, 4, 1, "", "is_constant"], [192, 4, 1, "", "register_constraint_dimension"], [192, 4, 1, "", "register_dynamic_objects_from_dim"], [192, 4, 1, "", "run_model"], [192, 4, 1, "", "run_node"], [192, 4, 1, "", "run_value_info"], [192, 4, 1, "", "set_constant"], [192, 4, 1, "", "set_rank"], [192, 4, 1, "", "set_shape"], [192, 4, 1, "", "set_type"], [192, 4, 1, "", "set_value_shape"], [192, 4, 1, "", "value_as_shape"]], "experimental_experiment.xshape.shape_type_compute": [[193, 1, 1, "", "broadcast_shape"], [193, 1, 1, "", "prepare_inputs_homogeneous_operator"], [193, 1, 1, "", "set_shape_type_custom"], [193, 1, 1, "", "set_shape_type_op_any"], [193, 1, 1, "", "set_type_shape_binary_op"], [193, 1, 1, "", "set_type_shape_gemm"], [193, 1, 1, "", "set_type_shape_matmul"], [193, 1, 1, "", "set_type_shape_reduce_op"], [193, 1, 1, "", "set_type_shape_reshape"], [193, 1, 1, "", "set_type_shape_unary_op"], [193, 1, 1, "", "set_type_shape_unary_op_abs"]], "experimental_experiment.xshape.simplify_expressions": [[194, 3, 1, "", "CommonTransformer"], [194, 3, 1, "", "CommonVisitor"], [194, 3, 1, "", "ExpressionSimplifierAddVisitor"], [194, 3, 1, "", "MaxToXorTransformer"], [194, 3, 1, "", "MulDivCancellerTransformer"], [194, 3, 1, "", "SimpleSimpliflyTransformer"], [194, 3, 1, "", "SimplifyParensTransformer"], [194, 1, 1, "", "simplify_expression"], [194, 1, 1, "", "simplify_two_expressions"]], "experimental_experiment.xshape.simplify_expressions.ExpressionSimplifierAddVisitor": [[194, 4, 1, "", "generic_visit"]], "experimental_experiment.xshape.type_inference": [[195, 1, 1, "", "infer_types"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "exception", "Python exception"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:exception", "3": "py:class", "4": "py:method", "5": "py:property"}, "terms": {"": [11, 16, 88, 89, 90, 91, 92, 97, 196, 197, 202, 204, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 232, 244, 249], "0": [3, 4, 6, 9, 10, 11, 13, 18, 19, 20, 21, 26, 51, 52, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 83, 88, 89, 90, 91, 92, 97, 101, 103, 105, 106, 107, 108, 109, 111, 121, 122, 123, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 232, 234, 236, 240, 241, 247, 248], "00": [105, 204, 206, 208, 210, 221, 222, 240, 241], "000": [88, 89, 206, 210, 221, 232, 241], "0000": 106, "00000": 225, "000000": 232, "000000e": 105, "00001": 225, "000018": 200, "00002": 225, "000023": 232, "00003": 225, "000034": 232, "00004": 225, "00005": 225, "000056": 206, "00006": 225, "000061": 206, "000063": 206, "000064": 206, "000065": 206, "000066": 206, "000067": 206, "00007": 225, "000072": 206, "000073": 206, "00008": 225, "00009": 225, "00010": 225, "00010114299584529363": 232, "00010349399963160977": 232, "00010481299977982417": 232, "00010550999650149606": 232, "00010567799836280756": 221, "00010730900248745456": 221, "00010851299884961918": 232, "0001092489983420819": 232, "00011": 225, "00011061099939979613": 232, "00011613699825829826": 221, "00011712299965438433": 221, "00011827461134225614": 213, "0001184169996122364": 221, "00012": 225, "00012263599637662992": 221, "0001282619959965814": 232, "00012966299982508644": 221, "00013": 225, "00013846500223735347": 232, "00014": 225, "000141": 200, "00014970499978517182": 232, "00015": 225, "00016": 225, "00016239699471043423": 221, "00016313800369971432": 221, "00016336599946953356": 221, "0001643510040594265": 221, "00016643699564156123": 221, "00016807999782031402": 221, "000168914000823861": 221, "00016919300469453447": 232, "000169676000950858": 221, "00017": 225, "00017015399862430058": 221, "0001708150011836551": 221, "00017219099754584022": 221, "00017279399980907328": 221, "00017317499441560358": 221, "00017342099818051793": 221, "00017349699555779807": 221, "0001737529964884743": 221, "00017807899712352082": 221, "00017860799562186003": 221, "00018": 225, "00018032500156550668": 221, "00018183500651502982": 221, "000184": 200, "0001852469977166038": 221, "00018564300262369215": 221, "000188": 200, "00019": 225, "00019250199693487957": 221, "0001943259994732216": 221, "00019581999731599353": 221, "0001963620015885681": 221, "00019815799896605313": 221, "00019867499577230774": 221, "00020": 225, "00020164599845884368": 221, "00020189000133541413": 221, "00020343200230854563": 221, "00020413500533322804": 221, "00020480400053202175": 221, "00020505299835349433": 221, "00020573699293890968": 221, "00020704700364149176": 221, "0002083729996229522": 221, "00020878500072285533": 221, "0002091530004690867": 221, "000209633002668852": 221, "00021": 225, "00021156100046937354": 221, "000211926999327261": 221, "00021300300795701332": 221, "0002134649948857259": 221, "0002139409989467822": 221, "00021438199837575667": 221, "0002147269988199696": 221, "00021556499996222556": 232, "00021563500558841042": 221, "00021622900021611713": 232, "00021672800357919186": 232, "00021713599562644958": 221, "00022044599973014556": 221, "00022404299670597538": 221, "00022426499708672054": 221, "0002265149960294366": 221, "0002274429971294012": 232, "00022847299987915903": 236, "00022914999863132834": 221, "00022927100144443102": 221, "00022955799795454368": 221, "00023": 225, "00023268799850484356": 236, "00023299100212170742": 221, "00023460100055672228": 221, "00023479500305256806": 221, "00023599599444423802": 221, "00023754600260872394": 221, "00023763300487189554": 221, "00023952700576046482": 221, "00023992300339159556": 221, "0002423879959678743": 221, "00024330299493158236": 221, "0002475830042385496": 221, "0002488610080035869": 221, "00024914521241428146": 213, "0002513206859227248": 213, "00025196600108756684": 221, "00025210600142600015": 221, "00025261400514864363": 221, "00025304600058007054": 221, "0002531950012780726": 221, "00025361599909956567": 221, "0002548019947425928": 221, "00025515599554637447": 221, "0002568949967098888": 221, "00025926200032699853": 221, "00026": 225, "0002619019942358136": 221, "0002621729981910903": 221, "0002626890018291306": 221, "00026276100106770173": 232, "00026353199427830987": 221, "00026368799444753677": 221, "0002637619945744518": 221, "0002650119968166109": 221, "00026523300039116293": 221, "0002659130004758481": 221, "00026768699535750784": 221, "0002677409975149203": 221, "00026782700297189876": 221, "00026942299882648513": 221, "00027": 225, "000270": 232, "0002719270050874911": 221, "0002763859993137885": 221, "00028": 225, "00028002400722471066": 221, "00028297199241933413": 221, "00028449999808799475": 221, "00028518099497887306": 221, "0002869649979402311": 221, "0002884050009015482": 221, "0002887250011553988": 221, "000288792001811089": 221, "00029": 225, "000291": 200, "00029131999690434895": 221, "0002913589996751398": 221, "00029166000240365975": 221, "0002929720030806493": 221, "0002935839911515359": 221, "00029383999935816973": 221, "00029399800405371934": 221, "00029637700208695605": 221, "000297": 200, "00029771200206596404": 221, "0002979319942824077": 221, "00029884099785704166": 221, "000299": 200, "00029985799847054295": 221, "00030": 225, "00030002400308148935": 221, "0003009449974342715": 221, "000301863005006453": 221, "000302": 200, "000302759995975066": 221, "000303": 200, "0003047139980481006": 221, "000305": 200, "00030627899468527175": 221, "000307": 200, "00030704099117428996": 221, "000308": 200, "00031085400041774847": 200, "000311": 200, "00031291599952965043": 221, "00031352799851447344": 221, "000318": 200, "00032": 225, "0003203919986844994": 221, "00032130200270330533": 221, "000321801618508033": 213, "00032250000003841706": 232, "000325": 200, "00033": 225, "0003308420018584002": 221, "000331339004333131": 221, "00033283300581388175": 221, "00033386200084351003": 221, "000334": 200, "00033527699270052835": 221, "0003353100037202239": 221, "0003358920002938248": 221, "00033589556970908943": 213, "00034": 225, "000340": 200, "0003407519980100915": 221, "00034142199729103595": 221, "0003419999957259279": 221, "000342": 200, "00034255099672009237": 221, "00034368700289633125": 221, "000344": 200, "00034472600600565784": 221, "000345": 200, "000347": 206, "000348": 200, "00034897699879365973": 221, "000351": 200, "000352": 206, "00036": 225, "0003608069964684546": 221, "000366": 206, "00037": 225, "000373": 232, "00037799599886056967": 221, "0003782540043175686": 221, "000386": 200, "0003885359983542003": 221, "00039": 225, "000395": 232, "00039616600042791106": 221, "000398": 206, "0004001300003437791": 221, "0004030209966003895": 232, "0004038720035168808": 221, "00040421200174023397": 221, "0004042430009576492": 221, "000406": 206, "00041153999700327404": 221, "000417": 200, "00042": 225, "0004235870001139119": 221, "00042388300062157214": 221, "00042650699833757244": 221, "00042982000013580546": 221, "00043": 225, "000437": 200, "00044": 225, "00045002899423707277": 221, "0004512730010901578": 221, "00045577200216939673": 221, "0004557960019155871": 221, "00045612000379664016": 213, "00046146200475050136": 221, "00047615700168535113": 221, "0004819069981749635": 221, "00049": 225, "0004917379992548376": 221, "0004953660027240403": 221, "0004960179940098897": 221, "0004968347999844506": 213, "0004974879993824288": 221, "0004999150041840039": 221, "0005022340086047587": 213, "0005033180023019668": 221, "000508": 200, "0005082269999547862": 200, "0005084000003989786": 221, "0005109339981572703": 232, "0005157309933565557": 221, "0005205150009714998": 221, "0005215269993641414": 221, "0005242270464128803": 213, "0005243599989626091": 89, "000524634997418616": 221, "0005325899983290583": 221, "0005349279999791179": 221, "0005370149992813822": 221, "0005430519995570648": 232, "0005434930026240181": 221, "000545": 206, "0005472486398074872": 213, "0005473920027725399": 221, "000560": 206, "000561": 232, "0005647260004479904": 221, "000567557002796093": 88, "0005746090027969331": 221, "000579": 200, "000581": 200, "000582": 206, "0005873189948033541": 221, "000593": 200, "000600": 200, "0006001689944241662": 232, "0006076949975977186": 221, "0006103899977460969": 221, "0006111690017860383": 221, "000615": 206, "0006251760023587849": 221, "0006320649990811944": 221, "0006369330003508367": 232, "0006537": 201, "0006554384839006295": 213, "000662": 200, "0006673770076304208": 221, "0006787250022171065": 200, "000679": 200, "000690": 200, "0007248189904203173": 221, "000725981760741718": 213, "000727": 200, "000730": 206, "0007300038644330349": 206, "0007315974304605189": 206, "000732": 206, "000736": 200, "0007406449985865038": 232, "0007625609978276771": 221, "0007636190057382919": 232, "000764": 200, "000770": 200, "0007701670001551975": 200, "000775": 200, "0007752280034765135": 221, "0007829975886448774": 213, "00080": 225, "000804": 206, "000816": 200, "000822": 206, "0008220590635097497": 206, "000842": 200, "000851": 206, "0008511455761743262": 206, "000854": 206, "0008543609078353889": 206, "000862": 200, "0008678395782653194": 206, "000868": 206, "0008683369997015689": 232, "0008714779978618026": 89, "0008889594918117405": 206, "000889": 206, "0009045129991136491": 232, "000906": 206, "000906193115655214": 206, "0009108060039579868": 221, "0009496050042798743": 221, "0009522859982098453": 200, "0009595773146410617": 213, "00096": 225, "0009601413931141349": 213, "000990": 200, "0009903299978759605": 200, "001": [88, 89, 200, 206, 221, 232], "0010000000474974513": 107, "0010018986955844984": 213, "0010038928376472432": 206, "001004": 206, "0010292709994246252": 232, "0010351263917982578": 209, "0010585889976937324": 232, "001116": 200, "001121686007536482": 221, "0011404469951230567": 221, "001142518001870485": 221, "0011498848292742368": 206, "001150": 206, "0011606995249167085": 89, "001188": 232, "0013323985129462639": 213, "001357": 232, "0013579099977505393": 221, "0013779537230895755": 213, "0014173800009302795": 232, "0014239772834912696": 213, "0014584560012735892": 221, "001469": 200, "0014776339994568843": 232, "001478354771980624": 213, "0014988333837082893": 213, "0015305269989767112": 221, "00154": 225, "0015570410268613462": 213, "0016052804804527283": 213, "00162": 225, "0016728484861043096": 213, "0016826980340410734": 213, "00169": 225, "001698016027010622": 213, "0017062612324517904": 213, "001712": 206, "001732": 206, "001777": 206, "0017911230815236144": 213, "001793": 206, "001807": 206, "001814": 206, "0018293381153955746": 213, "0018302060052519664": 221, "0018465536470916991": 213, "001868": 206, "0018855080015782733": 89, "001892": 206, "00192423242924189": 213, "0019396041174928036": 213, "00195312": 200, "001953270002559293": 232, "002": [89, 200, 202, 206, 221, 232], "0020082280025235377": 89, "0020144292883064927": 213, "002216480999777559": 88, "0022286399944277946": 221, "002265438970005376": 213, "002284174996020738": 221, "002432140001474181": 89, "0024432639984297566": 88, "0024754194930049303": 213, "0025215689893229865": 221, "002523": 206, "0025287460011895746": 221, "0026407670011394657": 221, "0026438160020916257": 221, "002655387024131212": 213, "002667088297022538": 213, "002792": 206, "0028459889981604647": 221, "0028878520024591126": 221, "0029277169960550964": 221, "002972963342330104": 213, "002977188315336813": 213, "002993": 206, "003": [206, 221], "0030279159872489045": 213, "003103918999840971": 221, "0034307012189434736": 213, "0034420840571519123": 213, "0035590259976743255": 221, "003621885000029579": 221, "003696": 206, "0036983079990022816": 221, "0037070674548913517": 213, "0037158836005567585": 213, "003743": 200, "003857112590603046": 213, "003944935086778993": 213, "004": [206, 221], "004108436204700568": 213, "0041138286069265385": 213, "004185": 200, "0042407100458016584": 213, "004361": 206, "004362": 200, "004370969003502978": 221, "004384632000437705": 221, "004407597303736644": 213, "004581": 206, "004593217720886204": 213, "00460488157800307": 213, "00461606179056549": 213, "004755": 206, "004913": 206, "004945795307380744": 213, "004980925001291325": 221, "005": [200, 202, 206, 221], "005404869003541535": 221, "005474193456785138": 213, "005725": 206, "005761": 206, "005781": 206, "005832": 206, "0058917128649292015": 213, "005971027917085949": 213, "006": [202, 206, 221], "006196": 206, "006681626997306012": 236, "007": [206, 221, 230], "007031603462185861": 213, "0073651939660016475": 213, "0076438771983349495": 213, "007700044894591e": 232, "007747": 200, "007862028797641566": 213, "0078768e": 201, "00799349": 217, "008": [198, 206, 210, 221, 241], "008020503190386484": 213, "008477595998556353": 236, "009": [206, 221], "00914": 225, "0095001673325896e": 232, "00952634206325237": 213, "009580612183": 204, "009805": 206, "009999999776482582": 107, "01": [18, 91, 109, 206, 210, 222, 241], "010": [206, 221], "0100800e": 201, "0104875564575195": 213, "0105000e": 201, "010623": 206, "010675890412661223": 213, "011": [88, 206, 221], "0113808e": 201, "0115072e": 201, "0116224": 201, "01182": 225, "012": [88, 89, 200, 206, 221], "01209": 225, "01219": 225, "012213": 201, "012354": 201, "012819": 232, "013": [89, 200, 206, 221], "013012778999836883": 88, "013172149658203": 213, "01356": 225, "013702392578125": 213, "01385": 225, "014": [89, 200, 206, 221, 232], "014065": 200, "0141007": 201, "014142234998871572": 89, "01424": 225, "01426": 225, "01435": 225, "0143651071730713e": 209, "01476": 225, "01478": 225, "01482": 225, "01483": 225, "01494": 225, "01496": 225, "015": [89, 103, 200, 206, 221, 232], "0152": 103, "01547": 225, "015491311998630408": 232, "01576": 225, "01583": 225, "01586": 225, "015924": 208, "016": [200, 206, 216, 221, 232], "016679090000252472": 89, "016706": 200, "016727828999137273": 88, "017": [206, 221], "017617": 201, "01780016545672e": 232, "018": [206, 221, 232], "01816": 225, "01825": 225, "0185568e": 201, "01867": 225, "0187580e": 201, "01879": 225, "019": [200, 206, 221], "0199997425079346": [212, 213, 214], "0199999809265137": [212, 213, 214], "02": [206, 212, 213, 214, 216, 222, 241], "020": [206, 221], "020001591998152435": 89, "0202680e": 201, "0204456e": 201, "020478": 206, "02053035": 201, "021": [203, 206, 221, 232], "022": [206, 221], "022222701460123062": 89, "022521": 206, "0227500e": 201, "023": [206, 221, 232], "0231282360411968e": 209, "023669": 230, "023973464966": 204, "024": [206, 221], "024075": 206, "024671": 206, "0247128e": 201, "025": [206, 221], "025074": 206, "0251592e": 201, "02552604675293": 213, "026": [206, 221], "026039": 206, "026444": 206, "026476": 206, "0268120e": 201, "0269064e": 201, "027": [206, 221], "027552": 206, "027718": 206, "028": [206, 221], "028765": 206, "028890": 206, "029": [206, 221], "02999877929688": [212, 213, 214], "0299997329711914": [212, 213, 214], "0299999713897705": [212, 213, 214], "03": [206, 232], "030": 221, "030074119567871": 105, "0301968e": 201, "03079020000222954": 236, "031": [206, 221], "032": [206, 221], "03255894407629967": 223, "032687": 206, "033": [206, 221], "034": [206, 221], "035": [206, 221], "0354372e": 201, "036": [206, 221], "037": [206, 221], "038": [206, 221], "0387752e": 201, "039": [206, 221], "03912353515625": 213, "04": [206, 247], "040": [206, 221], "04002048700203886": 236, "041": [200, 206, 221], "0414998036576435e": 232, "042": [206, 221], "043": [206, 221], "043026924133301": 213, "043551": 206, "0438016e": 201, "044": [206, 221], "0444768": 221, "044715": [143, 172], "045": [206, 221, 240], "0451604e": 201, "0453852e": 201, "046": [206, 221], "0461714267730713": 213, "046676431000378216": 236, "047": [206, 221], "0473864e": 201, "048": [206, 221, 230], "049": [206, 221], "0491276": 201, "049167": 201, "049330": 206, "0499999523162842": [212, 213, 214], "05": [91, 106, 113, 122, 200, 206, 212, 213, 214, 216, 221, 232], "050": [206, 221], "051": [206, 221], "05152806600017357": 236, "0516424e": 201, "052": [206, 221], "0521": 201, "0526025": 201, "053": [206, 221], "0531735": 201, "0532798100920284n33nan": 209, "053600110230036e": 232, "054": [206, 221], "0540079059827576e": 215, "0540144e": 201, "0540560e": 201, "0541406": 201, "054247": 206, "05426677": 201, "055": [206, 221], "0553608e": 201, "0556605e": 201, "056": 221, "05616349999945669": 224, "05647500000031869": 225, "0565992852207274e": 10, "056789": 206, "0568997064838186e": 232, "05694430000039574": 225, "05698019999999815": 225, "057": [197, 221], "05702159999964351": 225, "05704579500161344": 236, "05730454623699188": 89, "05731345999993209": 225, "057364700000107405": 224, "05737370000042574": 224, "05740846000007878": 224, "05755440000029921": 224, "05769109999982902": 224, "05779750000056083": 225, "05787190000046394": 224, "05797959999927116": 225, "058": [206, 214, 221, 222, 241], "058259600000383216": 224, "0586568e": 201, "059": [206, 221], "05914619999930437": 225, "0594386e": 201, "059476252645254135": 89, "06": [10, 88, 89, 107, 206, 221, 223, 232, 236], "060": [206, 221], "061": [206, 221], "0614085": 201, "062": [206, 221], "0621932e": 201, "0628596e": 201, "063": [206, 221, 230], "06316388": 201, "0636216e": 201, "064": [206, 221], "065": [206, 221], "065020561218262": 213, "0651256e": 201, "0656156e": 201, "0656640e": 201, "066": [206, 221], "067": 206, "067191": 201, "068": 206, "068978": 201, "06898": 201, "069": 206, "0693334341049194": 89, "0696597": 201, "06999969482422": [212, 213, 214], "0699999332427979": [212, 213, 214], "07": [10, 57, 105, 201, 206, 209, 215, 221, 222, 223, 241], "070": 206, "07021715492010117": 89, "0704196e": 201, "0707617": 201, "0708544e": 201, "071": 221, "0712282": 207, "07122821": 207, "072": [206, 221], "07201282680034637": 230, "07229920561228e": 105, "072299e": 105, "0728784": 201, "073": 206, "074": 206, "0742980e": 201, "0744": 208, "075": 206, "075047": 206, "075285": 206, "0754444e": 201, "075603008270264": 213, "076": 206, "0769200250506401": 213, "0772554874420166": 105, "078": 206, "07852819561958313": 213, "07859983574599e": 232, "079296": 206, "079832": 206, "0799996852874756": [212, 213, 214], "08": [10, 57, 88, 89, 105, 206, 209, 222, 241], "080": 206, "0800000429153442": [212, 213, 214], "08000183105469": [212, 213, 214], "080767273902893": 89, "081": 206, "08159560710191727": 213, "0815974771976471": 89, "081816": 230, "0819616e": 201, "082": 206, "083": 206, "0834992e": 201, "083776": 206, "0849416e": 201, "085": [217, 222, 241], "0858735": 221, "085943": 201, "086": [201, 221], "086162567138672e": 209, "0864296e": 201, "0864548e": 201, "08645778149366379": 213, "0864624e": 201, "087038993835449": 213, "087953": 201, "0879668e": 201, "088": 206, "088279": 206, "08838834764831845": 236, "08848461508750916": 105, "0892072e": 201, "0894616e": 201, "089844": 206, "0899996757507324": [212, 213, 214], "09": [10, 201, 206, 209, 223], "090": 206, "09000015258789": [212, 213, 214], "0916872e": 201, "0921696e": 201, "092517375946045": 105, "0925174951553345": 105, "092599819065072e": 232, "093": [206, 230], "094": 206, "095345": 201, "0957747": 201, "096": 206, "097": 206, "0979504e": 201, "098": 206, "0988287925720215": 213, "0989100e": 201, "099920749664307": 213, "0999999046325684": [212, 213, 214], "0c0": [200, 232], "0c0f0": [200, 232], "0c1f0": 232, "0e10": 209, "0f": 206, "0m": 236, "0x7bf6bfd6f600": 206, "0x7bf6bfd6f6a0": 206, "0x7bf6bfd6f740": 206, "0x7bf6bfd6f7e0": 206, "0x7bf748b380e0": 89, "0x7bf748c38220": 89, "0x7bf748c385e0": 89, "0x7bf748c38900": 89, "0x7bf748c389a0": 89, "0x7bf748c38cc0": 89, "0x7bf748c38d60": 89, "0x7bf748c38e00": 89, "0x7bf748c39120": 89, "0x7bf748c39760": 89, "0x7bf748c39c60": 89, "0x7bf748c39ee0": 89, "0x7bf748c3a160": 89, "0x7bf748c3a200": 89, "0x7bf748c3a2a0": 89, "0x7bf748c3a3e0": 89, "0x7bf748c3a480": 89, "0x7bf748c3a520": 89, "0x7bf748c3a5c0": 89, "0x7bf748c3a660": 89, "0x7bf748c3a700": 89, "0x7bf748c3a7a0": 89, "0x7bf748c3a840": 89, "0x7bf748c3a8e0": 89, "0x7bf748c3aa20": 89, "0x7bf748c3aac0": 89, "0x7bf748c3ab60": 89, "0x7bf748c3ac00": 89, "0x7bf748c3aca0": 89, "0x7bf748c3ad40": 89, "0x7bf748c3ade0": 89, "0x7bf748c3ae80": 89, "0x7bf748c3af20": 89, "0x7bf748c3afc0": 89, "0x7bf748c3b060": 89, "0x7bf748c3b100": 89, "0x7bf748c3b1a0": 89, "0x7bf748c3b240": 89, "0x7bf748c3b2e0": 89, "0x7bf748c3b380": 89, "0x7bf748c3b420": 89, "0x7bf748c3b4c0": 89, "0x7bf748c3b560": 89, "0x7bf748c3b600": 89, "0x7bf748c3b6a0": 89, "0x7bf748c3b740": 89, "0x7bf748c3b7e0": 89, "0x7bf748c3b880": 89, "0x7bf748c3b920": 89, "0x7bf748c3b9c0": 89, "0x7bf748c3ba60": 89, "0x7bf748c3bb00": 89, "0x7bf748c3bba0": 89, "0x7bf748c3bc40": 89, "0x7bf748c3bce0": 89, "0x7bf748c3bd80": 89, "0x7bf748c3be20": 89, "0x7bf748c3bec0": 89, "0x7bf748c3bf60": 89, "0x7bf748c5c0e0": 89, "0x7bf748c5c180": 89, "0x7bf748c5c220": 89, "0x7bf748c5c360": 89, "0x7bf748c5c400": 89, "0x7bf748c5c4a0": 89, "0x7bf748c5c540": 89, "0x7bf748c5c5e0": 89, "0x7bf748c5c680": 89, "0x7bf748c5c720": 89, "0x7bf748c5c860": 89, "0x7bf748c5c900": 89, "0x7bf748c5c9a0": 89, "0x7bf748c5cae0": 89, "0x7bf748c5cb80": 89, "0x7bf748c5cc20": 89, "0x7bf748c5cd60": 89, "0x7bf748c5ce00": 89, "0x7bf748c5cea0": 89, "0x7bf748c5cfe0": 89, "0x7bf748c5d080": 89, "0x7bf748c5d120": 89, "0x7bf748c5d1c0": 89, "0x7bf748c5d260": 89, "0x7bf748c5d300": 89, "0x7bf748c5d3a0": 89, "0x7bf748c5d580": 89, "0x7bf748c5d620": 89, "0x7bf748c5d760": 89, "0x7bf748c5d8a0": 89, "0x7bf748c5d940": 89, "0x7bf748c5d9e0": 89, "0x7bf748c5db20": 89, "0x7bf748c5dc60": 89, "0x7bf748c5dd00": 89, "0x7bf748c5dda0": 89, "0x7bf748c5de40": 89, "0x7bf748c5dee0": 89, "0x7bf748c5e020": 89, "0x7bf748c5e0c0": 89, "0x7bf748c5e160": 89, "0x7bf748c5e2a0": 89, "0x7bf748c5e340": 89, "0x7bf748c5e3e0": 89, "0x7bf748c5e520": 89, "0x7bf748c5e5c0": 89, "0x7bf748c5e660": 89, "0x7bf748c5e7a0": 89, "0x7bf748c5e840": 89, "0x7bf748c5e8e0": 89, "0x7bf748c5ea20": 89, "0x7bf748c5eac0": 89, "0x7bf748c5eb60": 89, "0x7bf748c5ec00": 89, "0x7bf748c5ede0": 89, "0x7bf748c5ee80": 89, "0x7bf748c5f100": 89, "0x7bf748c5f420": 89, "0x7bf748c5f740": 89, "0x7bf748c5fa60": 89, "0x7bf748c5fe20": 89, "0x7bf748c99120": 89, "0x7bf748c99300": 89, "0x7bf748c993a0": 89, "0x7bf748c99e40": 89, "0x7bf748c9a020": 89, "0x7bf748c9a160": 89, "0x7bf748c9a3e0": 89, "0x7bf748c9a660": 89, "0x7bf748c9af20": 89, "0x7bf748c9b100": 89, "0x7bf748c9b1a0": 89, "0x7bf748c9b420": 89, "0x7bf748c9b6a0": 89, "0x7bf748c9bd80": 89, "0x7bf748c9bf60": 89, "0x7bf748cc40e0": 89, "0x7bf748cc4360": 89, "0x7bf748cc45e0": 89, "0x7bf748cc4860": 89, "0x7bf748cc4900": 89, "0x7bf748cc49a0": 89, "0x7bf748cc5080": 89, "0x7bf748cc5440": 89, "0x7bf748cc63e0": 89, "0x7bf748cc6660": 89, "0x7bf748cc6d40": 89, "0x7bf748cc71a0": 89, "0x7bf748cc77e0": 89, "0x7bf748cc79c0": 89, "0x7bf748cc7d80": 89, "0x7bf748cc7ec0": 89, "0x7bf748cf04a0": 89, "0x7bf748cf0b80": 89, "0x7bf748cf0ea0": 89, "0x7bf748cf1620": 89, "0x7bf748cf1940": 89, "0x7bf748cf1ee0": 89, "0x7bf748cf2200": 89, "0x7bf748cf22a0": 89, "0x7bf748cf25c0": 89, "0x7bf748cf2ca0": 89, "0x7bf748cf2de0": 89, "0x7bf748cf2f20": 89, "0x7bf748cf3060": 89, "0x7bf748cf32e0": 89, "0x7bf748cf3920": 89, "0x7bf748cf3ba0": 89, "0x7bf748cf3f60": 89, "0x7bf748d10220": 89, "0x7bf748d102c0": 89, "0x7bf748d104a0": 89, "0x7bf748d10540": 89, "0x7bf748d10680": 89, "0x7bf748d107c0": 89, "0x7bf748d10ea0": 89, "0x7bf748d11260": 89, "0x7bf748d11620": 89, "0x7bf748d11bc0": 89, "0x7bf748d120c0": 89, "0x7bf748d12160": 89, "0x7bf748d125c0": 89, "0x7bf748d12980": 89, "0x7bf748d12d40": 89, "0x7bf748d13100": 89, "0x7bf748d13240": 89, "0x7bf748d13600": 89, "0x7bf748d13c40": 89, "0x7bf748d242c0": 89, "0x7bf748d24400": 89, "0x7bf748d247c0": 89, "0x7bf748d24860": 89, "0x7bf748d24b80": 89, "0x7bf748d25080": 89, "0x7bf748d25580": 89, "0x7bf748d25da0": 89, "0x7bf748d262a0": 89, "0x7bf748d267a0": 89, "0x7bf748d26ca0": 89, "0x7bf748d271a0": 89, "0x7bf748d277e0": 89, "0x7bf748d27ce0": 89, "0x7bf748d38220": 89, "0x7bf748d38c20": 89, "0x7bf748d38f40": 89, "0x7bf748d39440": 89, "0x7bf748d39e40": 89, "0x7bf748d3a340": 89, "0x7bf748d3a3e0": 89, "0x7bf748d3a840": 89, "0x7bf748d3ad40": 89, "0x7bf748d3b240": 89, "0x7bf748d3b740": 89, "0x7bf748d3bce0": 89, "0x7bf748d3bf60": 89, "0x7bf748d4c5e0": 89, "0x7bf748d4c9a0": 89, "0x7bf748d4cea0": 89, "0x7bf748d4d3a0": 89, "0x7bf748d4d8a0": 89, "0x7bf748d4dda0": 89, "0x7bf748d4e2a0": 89, "0x7bf748d4e340": 89, "0x7bf748d4e7a0": 89, "0x7bf748d4eca0": 89, "0x7bf748d4efc0": 89, "0x7bf748d4f880": 89, "0x7bf748d4fd80": 89, "0x7bf748d602c0": 89, "0x7bf748d607c0": 89, "0x7bf748d60c20": 89, "0x7bf748d61080": 89, "0x7bf748d614e0": 89, "0x7bf748d61940": 89, "0x7bf748d619e0": 89, "0x7bf748d61da0": 89, "0x7bf748d61f80": 89, "0x7bf748d62200": 89, "0x7bf748d62660": 89, "0x7bf748d62ac0": 89, "0x7bf748d62b60": 89, "0x7bf748d63600": 89, "0x7bf748d63a60": 89, "0x7bf748d63e20": 89, "0x7bf748d63ec0": 89, "0x7bf748d74900": 89, "0x7bf748d74d60": 89, "0x7bf748d751c0": 89, "0x7bf748d75620": 89, "0x7bf748d75a80": 89, "0x7bf748d75b20": 89, "0x7bf748d75ee0": 89, "0x7bf748d75f80": 89, "0x7bf748d76480": 89, "0x7bf748d768e0": 89, "0x7bf748d76d40": 89, "0x7bf748d771a0": 89, "0x7bf748d77600": 89, "0x7bf748d777e0": 89, "0x7bf748d77c40": 89, "0x7bf748d900e0": 89, "0x7bf748d90540": 89, "0x7bf748d909a0": 89, "0x7bf748d90e00": 89, "0x7bf748d91260": 89, "0x7bf748d916c0": 89, "0x7bf748d91b20": 89, "0x7bf748d91da0": 89, "0x7bf748d92200": 89, "0x7bf748d92980": 89, "0x7bf748d92d40": 89, "0x7bf748d93100": 89, "0x7bf748d93380": 89, "0x7bf748d93600": 89, "0x7bf748d936a0": 89, "0x7bf748d93740": 89, "0x7bf748d93c40": 89, "0x7bf748d93ec0": 89, "0x7bf748dbc720": 89, "0x7bf748dbc7c0": 89, "0x7bf748dbc9a0": 89, "0x7bf748dbcb80": 89, "0x7bf748dbcc20": 89, "0x7bf748dbcd60": 89, "0x7bf748dbd260": 89, "0x7bf748dbd300": 89, "0x7bf748dbd4e0": 89, "0x7bf748dbd620": 89, "0x7bf748dbdc60": 89, "0x7bf748dbe0c0": 89, "0x7bf748dbe5c0": 89, "0x7bf748dbe660": 89, "0x7bf748dbe7a0": 89, "0x7bf748dbec00": 89, "0x7bf748dbeca0": 89, "0x7bf748dbf1a0": 89, "0x7bf748dbf380": 89, "0x7bf748dbf560": 89, "0x7bf748dbf920": 89, "0x7bf748dbf9c0": 89, "0x7bf748dbfce0": 89, "0x7bf748dbfec0": 89, "0x7bf748ddc540": 89, "0x7bf748ddc900": 89, "0x7bf748ddca40": 89, "0x7bf748ddcea0": 89, "0x7bf748ddcf40": 89, "0x7bf748ddd1c0": 89, "0x7bf748ddd4e0": 89, "0x7bf748dddb20": 89, "0x7bf748dddf80": 89, "0x7bf748dde160": 89, "0x7bf748dde7a0": 89, "0x7bf748dde840": 89, "0x7bf748ddea20": 89, "0x7bf748dded40": 89, "0x7bf748ddee80": 89, "0x7bf748ddf100": 89, "0x7bf748ddf240": 89, "0x7bf748ddf420": 89, "0x7bf748ddf4c0": 89, "0x7bf748ddf600": 89, "0x7bf748ddf6a0": 89, "0x7bf748ddf7e0": 89, "0x7bf748ddfa60": 89, "0x7bf748ddfb00": 89, "0x7bf748ddfba0": 89, "0x7bf748ddfce0": 89, "0x7bf748ddfe20": 89, "0x7bf748dfca40": 89, "0x7bf748dfcae0": 89, "0x7bf748dfcc20": 89, "0x7bf748dfccc0": 89, "0x7bf748dfce00": 89, "0x7bf748dfd1c0": 89, "0x7bf748dfd440": 89, "0x7bf748dfd760": 89, "0x7bf748dfd800": 89, "0x7bf748dfda80": 89, "0x7bf748dfdd00": 89, "0x7bf748dfdee0": 89, "0x7bf748dfe340": 89, "0x7bf748dfe480": 89, "0x7bf748dfe700": 89, "0x7bf748dfe980": 89, "0x7bf748dfeb60": 89, "0x7bf748dfed40": 89, "0x7bf748dfee80": 89, "0x7bf748dff1a0": 89, "0x7bf748dff240": 89, "0x7bf748dff4c0": 89, "0x7bf748dff9c0": 89, "0x7bf748dffc40": 89, "0x7bf748dfff60": 89, "0x7bf748e34860": 89, "0x7bf748e34c20": 89, "0x7bf748e34cc0": 89, "0x7bf748e34fe0": 89, "0x7bf748e35080": 89, "0x7bf748e35260": 89, "0x7bf748e35620": 89, "0x7bf748e35bc0": 89, "0x7bf748e35da0": 89, "0x7bf748e35f80": 89, "0x7bf748e36700": 89, "0x7bf748e36840": 89, "0x7bf748e36b60": 89, "0x7bf748e36f20": 89, "0x7bf748e37240": 89, "0x7bf748e374c0": 89, "0x7bf748e37560": 89, "0x7bf748e37880": 89, "0x7bf748e37ce0": 89, "0x7bf748e37ec0": 89, "0x7bf748e500e0": 89, "0x7bf748e502c0": 89, "0x7bf748e50720": 89, "0x7bf748e50900": 89, "0x7bf748e50b80": 89, "0x7bf748e50c20": 89, "0x7bf748e50e00": 89, "0x7bf748e50f40": 89, "0x7bf748e50fe0": 89, "0x7bf748e511c0": 89, "0x7bf748e516c0": 89, "0x7bf748e518a0": 89, "0x7bf748e51bc0": 89, "0x7bf748e51e40": 89, "0x7bf748e52200": 89, "0x7bf748e523e0": 89, "0x7bf748e525c0": 89, "0x7bf748e52660": 89, "0x7bf748e527a0": 89, "0x7bf748e528e0": 89, "0x7bf748e52980": 89, "0x7bf748e53420": 89, "0x7bf748e53740": 89, "0x7bf748e537e0": 89, "0x7bf748e53b00": 89, "0x7bf748e53d80": 89, "0x7bf748e70180": 89, "0x7bf748e70540": 89, "0x7bf748e705e0": 89, "0x7bf748e709a0": 89, "0x7bf748e70ae0": 89, "0x7bf748e70c20": 89, "0x7bf748e70e00": 89, "0x7bf748e70f40": 89, "0x7bf748e70fe0": 89, "0x7bf748e71580": 89, "0x7bf748e716c0": 89, "0x7bf748e71940": 89, "0x7bf748e719e0": 89, "0x7bf748e71b20": 89, "0x7bf748e71bc0": 89, "0x7bf748e71c60": 89, "0x7bf748e71d00": 89, "0x7bf748e71da0": 89, "0x7bf748e71e40": 89, "0x7bf748e72200": 89, "0x7bf748e728e0": 89, "0x7bf748e72a20": 89, "0x7bf748e72e80": 89, "0x7bf748e73060": 89, "0x7bf748e731a0": 89, "0x7bf748e73380": 89, "0x7bf748e73560": 89, "0x7bf748e73600": 89, "0x7bf748e736a0": 89, "0x7bf748e73740": 89, "0x7bf748e73880": 89, "0x7bf748e73920": 89, "0x7bf748e739c0": 89, "0x7bf748e73b00": 89, "0x7bf748e73ba0": 89, "0x7bf748e73c40": 89, "0x7bf748e73d80": 89, "0x7bf748e73e20": 89, "0x7bf748e73ec0": 89, "0x7bf748e73f60": 89, "0x7bf748e94040": 89, "0x7bf748e94180": 89, "0x7bf748e942c0": 89, "0x7bf748e94360": 89, "0x7bf748e94400": 89, "0x7bf748e94540": 89, "0x7bf748e945e0": 89, "0x7bf748e94680": 89, "0x7bf748e95580": 89, "0x7bf748e96480": 89, "0x7bf748e96980": 89, "0x7bf748e96a20": 89, "0x7bf748e96e80": 89, "0x7bf748e97380": 89, "0x7bf748e97420": 89, "0x7bf748e97880": 89, "0x7bf748e97d80": 89, "0x7bf748fac0e0": 89, "0x7bf748fac4a0": 89, "0x7bf748fac540": 89, "0x7bf748fac900": 89, "0x7bf748facf40": 89, "0x7bf748facfe0": 89, "0x7bf748fad080": 89, "0x7bf748fad1c0": 89, "0x7bf748fad4e0": 89, "0x7bf748fad580": 89, "0x7bf748fad940": 89, "0x7bf748fadc60": 89, "0x7bf748fadd00": 89, "0x7bf748fae020": 89, "0x7bf748fae3e0": 89, "0x7bf748fae7a0": 89, "0x7bf748faeb60": 89, "0x7bf748faec00": 89, "0x7bf748faeca0": 89, "0x7bf748faefc0": 89, "0x7bf748faf060": 89, "0x7bf748faf100": 89, "0x7bf748faf560": 89, "0x7bf748faf600": 89, "0x7bf748fafd80": 89, "0x7bf748fafe20": 89, "0x7bf748faff60": 89, "0x7bf748fd4040": 89, "0x7bf748fd4220": 89, "0x7bf748fd4360": 89, "0x7bf748fd4400": 89, "0x7bf748fd4540": 89, "0x7bf748fd4680": 89, "0x7bf748fd4a40": 89, "0x7bf748fd4d60": 89, "0x7bf748fd5260": 89, "0x7bf748fd5300": 89, "0x7bf748fd53a0": 89, "0x7bf748fd59e0": 89, "0x7bf748fd5d00": 89, "0x7bf748fd6160": 89, "0x7bf748fd63e0": 89, "0x7bf748fd65c0": 89, "0x7bf748fd6660": 89, "0x7bf748fd67a0": 89, "0x7bf748fd6de0": 89, "0x7bf748fd7100": 89, "0x7bf748fd7420": 89, "0x7bf748fd74c0": 89, "0x7bf748fd7740": 89, "0x7bf748fd7b00": 89, "0x7bf748fd7e20": 89, "0x7bf748fd7ec0": 89, "0x7bf7490000e0": 89, "0x7bf749000180": 89, "0x7bf749000360": 89, "0x7bf749000400": 89, "0x7bf7490005e0": 89, "0x7bf749000680": 89, "0x7bf7490009a0": 89, "0x7bf749000a40": 89, "0x7bf749000b80": 89, "0x7bf749000c20": 89, "0x7bf749000cc0": 89, "0x7bf749000d60": 89, "0x7bf749000e00": 89, "0x7bf749000ea0": 89, "0x7bf749000fe0": 89, "0x7bf7490013a0": 89, "0x7bf749001440": 89, "0x7bf7490016c0": 89, "0x7bf749001800": 89, "0x7bf7490018a0": 89, "0x7bf7490020c0": 89, "0x7bf749002480": 89, "0x7bf749002520": 89, "0x7bf749002660": 89, "0x7bf7490027a0": 89, "0x7bf749002a20": 89, "0x7bf749002ac0": 89, "0x7bf749002c00": 89, "0x7bf749002de0": 89, "0x7bf7490034c0": 89, "0x7bf749003880": 89, "0x7bf749003920": 89, "0x7bf7490039c0": 89, "0x7bf749003c40": 89, "0x7bf7493876a0": 89, "0x7bf7495d0860": 89, "0x7bf74dcb91c0": 89, "0x7bf74dcb9bc0": 89, "0x7bf74dce00e0": 89, "0x7bf74dce0360": 89, "0x7bf74dce16c0": 89, "0x7bf74dce1940": 89, "0x7bf74dce2160": 89, "0x7bf74dce2de0": 89, "0x7bf74dce3100": 89, "0x7bf74dcf4040": 89, "0x7bf74dcf42c0": 89, "0x7bf74dcf4360": 89, "0x7bf74dcf4400": 89, "0x7bf74dcf4540": 89, "0x7bf74dcf4680": 89, "0x7bf74dcf4720": 89, "0x7bf74dcf47c0": 89, "0x7bf74dcf4860": 89, "0x7bf74dcf49a0": 89, "0x7bf74dcf4ae0": 89, "0x7bf74dcf4b80": 89, "0x7bf74dcf4cc0": 89, "0x7bf74dcf4d60": 89, "0x7bf74dcf4ea0": 89, "0x7bf74dcf4f40": 89, "0x7bf74dcf5080": 89, "0x7bf74dcf5120": 89, "0x7bf74dcf51c0": 89, "0x7bf74dcf5260": 89, "0x7bf74dcf53a0": 89, "0x7bf74dcf5440": 89, "0x7bf74dcf54e0": 89, "0x7bf74dcf5580": 89, "0x7bf74dcf5620": 89, "0x7bf74dcf56c0": 89, "0x7bf74dcf5940": 89, "0x7bf74dcf59e0": 89, "0x7bf74dcf5a80": 89, "0x7bf74dcf5b20": 89, "0x7bf74dcf5c60": 89, "0x7bf74dcf5d00": 89, "0x7bf74dcf5da0": 89, "0x7bf74dcf6020": 89, "0x7bf74dcf6200": 89, "0x7bf74dcf62a0": 89, "0x7bf74dcf6340": 89, "0x7bf74dcf63e0": 89, "0x7bf74dcf6480": 89, "0x7bf74dcf6520": 89, "0x7bf74dcf65c0": 89, "0x7bf74dcf67a0": 89, "0x7bf74dcf6980": 89, "0x7bf74dcf6a20": 89, "0x7bf74dcf6ac0": 89, "0x7bf74dcf6c00": 89, "0x7bf74dcf6d40": 89, "0x7bf74dcf6e80": 89, "0x7bf74dcf7060": 89, "0x7bf74dcf7100": 89, "0x7bf74dcf7240": 89, "0x7bf74dcf72e0": 89, "0x7bf74dcf7420": 89, "0x7bf74dcf74c0": 89, "0x7bf74dcf7600": 89, "0x7bf74dcf76a0": 89, "0x7bf74dcf7740": 89, "0x7bf74dcf77e0": 89, "0x7bf74dcf7920": 89, "0x7bf74dcf79c0": 89, "0x7bf74dcf7b00": 89, "0x7bf74dcf7ba0": 89, "0x7bf74dcf7c40": 89, "0x7bf74dcf7ce0": 89, "0x7bf74dcf7d80": 89, "0x7bf74dcf7e20": 89, "0x7bf74dcf7ec0": 89, "0x7bf74e696980": 89, "0x7bf74e6c05e0": 89, "0x7bf74e6c0e00": 89, "0x7bf74e6c13a0": 89, "0x7bf74e6c1b20": 89, "0x7bf74e6c2340": 89, "0x7bf74e6c31a0": 89, "0x7bf74e6c3d80": 89, "0x7bf74e70ee80": 89, "0x7bf74e7b09a0": 89, "0x7bf74e7b0ae0": 89, "0x7bf74e7b0fe0": 89, "0x7bf74e7b16c0": 89, "0x7bf74e7b1940": 89, "0x7bf74e7b1b20": 89, "0x7bf74e7b1c60": 89, "0x7bf74e884ea0": 89, "0x7bf74e886f20": 89, "0x7bf74e887920": 89, "0x7bf74ea0c2c0": 89, "0x7bf74ea0c720": 89, "0x7bf74ea0ca40": 89, "0x7bf74ea0cb80": 89, "0x7bf74ea0cc20": 89, "0x7bf74ea0cd60": 89, "0x7bf74ea0d6c0": 89, "0x7bf74ea0dd00": 89, "0x7bf74ea0dda0": 89, "0x7bf74ea0e0c0": 89, "0x7bf74ea0e200": 89, "0x7bf74ea0e2a0": 89, "0x7bf74ea0e3e0": 89, "0x7bf74ea0e480": 89, "0x7bf74ea0e7a0": 89, "0x7bf74ea0e8e0": 89, "0x7bf74ea0f060": 89, "0x7bf74ea0f100": 89, "0x7bf74ea0f380": 89, "0x7bf74ea0f600": 89, "0x7bf74ea0f880": 89, "0x7bf74ea0f920": 89, "0x7bf74ea0f9c0": 89, "0x7bf74ea0fa60": 89, "0x7bf74ea0fba0": 89, "0x7bf74ea0ff60": 89, "0x7bf74ea742c0": 89, "0x7bf74ea74400": 89, "0x7bf74ea744a0": 89, "0x7bf74ea74540": 89, "0x7bf74ea74860": 89, "0x7bf74ea74a40": 89, "0x7bf74ea74ae0": 89, "0x7bf74ea74b80": 89, "0x7bf74ea74ea0": 89, "0x7bf74ea75120": 89, "0x7bf74ea75300": 89, "0x7bf74ea75620": 89, "0x7bf74ea756c0": 89, "0x7bf74ea759e0": 89, "0x7bf74ea760c0": 89, "0x7bf74ea762a0": 89, "0x7bf74ea765c0": 89, "0x7bf74ea76980": 89, "0x7bf74ea76c00": 89, "0x7bf74ea76ca0": 89, "0x7bf74ea76f20": 89, "0x7bf74ea76fc0": 89, "0x7bf74ea77380": 89, "0x7bf74ea779c0": 89, "0x7bf74ea77a60": 89, "0x7bf74ea77d80": 89, "0x7bf74ea77e20": 89, "0x7bf74ea77ec0": 89, "0x7bf74ea77f60": 89, "0x7bf74eb24fe0": 89, "0x7bf74eb26b60": 89, "0x7bf74ebb4180": 89, "0x7bf74ebb4220": 89, "0x7bf74ebb42c0": 89, "0x7bf74ebb4540": 89, "0x7bf74ebb4680": 89, "0x7bf74ebb47c0": 89, "0x7bf74ebb4860": 89, "0x7bf74ebb4900": 89, "0x7bf74ebb4a40": 89, "0x7bf74ebb4e00": 89, "0x7bf74ebb4ea0": 89, "0x7bf74ebb5080": 89, "0x7bf74ebb5260": 89, "0x7bf74ebb53a0": 89, "0x7bf74ebb5440": 89, "0x7bf74ebb5760": 89, "0x7bf74ebb5a80": 89, "0x7bf74ebb5d00": 89, "0x7bf74ebb6520": 89, "0x7bf74ebb6ac0": 89, "0x7bf74ebb6fc0": 89, "0x7bf74ec005e0": 89, "0x7bf74ec00ae0": 89, "0x7bf74ec00cc0": 89, "0x7bf74ec00d60": 89, "0x7bf74ec00fe0": 89, "0x7bf74ec01120": 89, "0x7bf74ec01620": 89, "0x7bf74ec016c0": 89, "0x7bf74ec01760": 89, "0x7bf74ec01800": 89, "0x7bf74ec018a0": 89, "0x7bf74ec019e0": 89, "0x7bf74ec01b20": 89, "0x7bf74ec01c60": 89, "0x7bf74ec01da0": 89, "0x7bf74ec01ee0": 89, "0x7bf74ec01f80": 89, "0x7bf74ec022a0": 89, "0x7bf74ec02340": 89, "0x7bf74ec02520": 89, "0x7bf74ec02660": 89, "0x7bf74ec02980": 89, "0x7bf74ec02a20": 89, "0x7bf74ec02b60": 89, "0x7bf74ec02c00": 89, "0x7bf74ec02d40": 89, "0x7bf74ec02de0": 89, "0x7bf74ec02e80": 89, "0x7bf74ec02f20": 89, "0x7bf74ec02fc0": 89, "0x7bf74ec03100": 89, "0x7bf74ec031a0": 89, "0x7bf74ec03240": 89, "0x7bf74ec03600": 89, "0x7bf74ec036a0": 89, "0x7bf74ec03880": 89, "0x7bf74ec03b00": 89, "0x7bf74ec03ba0": 89, "0x7bf74ec03ce0": 89, "0x7bf74ec03ec0": 89, "0x7bf74ec03f60": 89, "0x7bf74ec24c20": 89, "0x7bf74ec25bc0": 89, "0x7bf74ec260c0": 89, "0x7bf74ec263e0": 89, "0x7bf74ec27060": 89, "0x7bf74ec27420": 89, "0x7bf74ec27600": 89, "0x7bf74ec27d80": 89, "0x7bf74ec54220": 89, "0x7bf74ec542c0": 89, "0x7bf74ec54360": 89, "0x7bf74ec544a0": 89, "0x7bf74ec54900": 89, "0x7bf74ec54c20": 89, "0x7bf74ec55080": 89, "0x7bf74ec55300": 89, "0x7bf74ec55440": 89, "0x7bf74ec55800": 89, "0x7bf74ec55940": 89, "0x7bf74ec55a80": 89, "0x7bf74ec55d00": 89, "0x7bf74ec55e40": 89, "0x7bf74ec55ee0": 89, "0x7bf74ec55f80": 89, "0x7bf74ec560c0": 89, "0x7bf74ec56200": 89, "0x7bf74ec562a0": 89, "0x7bf74ec56340": 89, "0x7bf74ec563e0": 89, "0x7bf74ec56480": 89, "0x7bf74ec56520": 89, "0x7bf74ec565c0": 89, "0x7bf74ec56700": 89, "0x7bf74ec567a0": 89, "0x7bf74ec56840": 89, "0x7bf74ec56b60": 89, "0x7bf74ec56ca0": 89, "0x7bf74ec56d40": 89, "0x7bf74ec56f20": 89, "0x7bf74ec56fc0": 89, "0x7bf74ec57060": 89, "0x7bf74ec571a0": 89, "0x7bf74ec572e0": 89, "0x7bf74ec57560": 89, "0x7bf74ec57600": 89, "0x7bf74ec576a0": 89, "0x7bf74ec57740": 89, "0x7bf74ec57880": 89, "0x7bf74ec579c0": 89, "0x7bf74ec57b00": 89, "0x7bf74ec57ba0": 89, "0x7bf74ec57c40": 89, "0x7bf74ec57ce0": 89, "0x7bf74ec57d80": 89, "0x7bf74ec57ec0": 89, "0x7bf74ec81a80": 89, "0x7bf74ec825c0": 89, "0x7bf74ec82fc0": 89, "0x7bf74f408220": 89, "0x7bf74f408400": 89, "0x7bf74f408a40": 89, "0x7bf74f408b80": 89, "0x7bf74f408ea0": 89, "0x7bf74f4098a0": 89, "0x7bf74f409940": 89, "0x7bf74f40a160": 89, "0x7bf74f40ade0": 89, "0x7bf74f40ba60": 89, "0x7bf74f40bd80": 89, "0x7bf74f4e0040": 89, "0x7bf74f4e0360": 89, "0x7bf74f4e0900": 89, "0x7bf74f4e0cc0": 89, "0x7bf74f4e0ea0": 89, "0x7bf74f4e13a0": 89, "0x7bf74f4e1440": 89, "0x7bf74f4e14e0": 89, "0x7bf74f4e1620": 89, "0x7bf74f4e2ac0": 89, "0x7bf74f4e2f20": 89, "0x7bf74f4e3060": 89, "0x7bf74f4e3100": 89, "0x7bf74f4e32e0": 89, "0x7bf74f4e3380": 89, "0x7bf74f4e3420": 89, "0x7bf74f4e34c0": 89, "0x7bf74f4e3560": 89, "0x7bf74f4e3600": 89, "0x7bf74f4e36a0": 89, "0x7bf74f4e3740": 89, "0x7bf74f4e37e0": 89, "0x7bf74f4e3ba0": 89, "0x7bf74f4e3e20": 89, "0x7bf74f5f4180": 89, "0x7bf74f5f4220": 89, "0x7bf74f5f47c0": 89, "0x7bf74f5f4c20": 89, "0x7bf74f5f4d60": 89, "0x7bf74f5f4ea0": 89, "0x7bf74f5f51c0": 89, "0x7bf74f5f5300": 89, "0x7bf74f5f5440": 89, "0x7bf74f5f5580": 89, "0x7bf74f5f5a80": 89, "0x7bf74f5f5da0": 89, "0x7bf74f5f5e40": 89, "0x7bf74f5f6340": 89, "0x7bf74f5f65c0": 89, "0x7bf74f5f6660": 89, "0x7bf74f5f77e0": 89, "0x7bf74f5f7c40": 89, "0x7bf74f6de160": 89, "0x7bf74f6dff60": 89, "0x7bf74f88ccc0": 89, "0x7bf74f88cd60": 89, "0x7bf74f88d440": 89, "0x7bf74f88e8e0": 89, "0x7bf74f88ef20": 89, "0x7bf74f88efc0": 89, "0x7bf74f88f2e0": 89, "0x7bf74f88f4c0": 89, "0x7bf74f88f7e0": 89, "0x7bf74f88fc40": 89, "0x7bf74f949da0": 89, "0x7bf74f94b6a0": 89, "0x7bf74f94b9c0": 89, "0x7bf74f94bba0": 89, "0x7bf74faa0180": 89, "0x7bf74faa0220": 89, "0x7bf74faa0360": 89, "0x7bf74faa0720": 89, "0x7bf74faa0900": 89, "0x7bf74faa0ae0": 89, "0x7bf74faa2020": 89, "0x7bf74faa2660": 89, "0x7bf74faa2700": 89, "0x7bf74faa2ac0": 89, "0x7bf74faa2b60": 89, "0x7bf74faa2c00": 89, "0x7bf74faa2ca0": 89, "0x7bf74faa3880": 89, "0x7bf74faa3a60": 89, "0x7bf74faa3e20": 89, "0x7bf74fb400e0": 89, "0x7bf74fb407c0": 89, "0x7bf74fb414e0": 89, "0x7bf74fb42160": 89, "0x7bf74fb42d40": 89, "0x7bf74fb43060": 89, "0x7bf74fb431a0": 89, "0x7bf74fb69760": 89, "0x7bf74fb6b1a0": 89, "0x7bf74fb6b560": 89, "0x7bf74fba2d40": 89, "0x7bf74fba2e80": 89, "0x7bf74fba3560": 89, "0x7bf74fba3ba0": 89, "0x7bf74fba3c40": 89, "0x7bf74fc88680": 89, "0x7bf74fc887c0": 89, "0x7bf74fc889a0": 89, "0x7bf74fc88b80": 89, "0x7bf74fc88f40": 89, "0x7bf74fc891c0": 89, "0x7bf74fc89260": 89, "0x7bf74fc8a660": 89, "0x7bf74fdd00e0": 89, "0x7bf74fdd0220": 89, "0x7bf74fdd02c0": 89, "0x7bf74fdd0720": 89, "0x7bf74fdd07c0": 89, "0x7bf74fdd0900": 89, "0x7bf74fdd0a40": 89, "0x7bf74fdd0ae0": 89, "0x7bf74fdd0b80": 89, "0x7bf74fdd0c20": 89, "0x7bf74fdd0cc0": 89, "0x7bf74fdd0d60": 89, "0x7bf74fdd0ea0": 89, "0x7bf74fdd0f40": 89, "0x7bf74fdd0fe0": 89, "0x7bf74fdd14e0": 89, "0x7bf74fdd1c60": 89, "0x7bf74fdd27a0": 89, "0x7bf74fdd2a20": 89, "0x7bf74fdd3100": 89, "0x7bf74fdd31a0": 89, "0x7bf74fdd32e0": 89, "0x7bf74fdd36a0": 89, "0x7bf74fdd3d80": 89, "0x7bf74fdd3e20": 89, "0x7bf74fdd3f60": 89, "0x7bf74fe70040": 89, "0x7bf74fe702c0": 89, "0x7bf74fe70540": 89, "0x7bf74fe70720": 89, "0x7bf74fe709a0": 89, "0x7bf74fe70c20": 89, "0x7bf74fe70ea0": 89, "0x7bf74fe71080": 89, "0x7bf74fe71260": 89, "0x7bf74fe71440": 89, "0x7bf74fe71760": 89, "0x7bf74fe71940": 89, "0x7bf74fe71d00": 89, "0x7bf74fe71da0": 89, "0x7bf74fe71f80": 89, "0x7bf74fe72340": 89, "0x7bf74fe72660": 89, "0x7bf74fe72a20": 89, "0x7bf74fe72c00": 89, "0x7bf74fe72de0": 89, "0x7bf74fe72e80": 89, "0x7bf74fe72fc0": 89, "0x7bf74fe73100": 89, "0x7bf74fe73420": 89, "0x7bf74fe73560": 89, "0x7bf74fe73880": 89, "0x7bf74fe73a60": 89, "0x7bf74fe73c40": 89, "0x7bf74ff540e0": 89, "0x7bf74ff54180": 89, "0x7bf74ff54400": 89, "0x7bf74ff54680": 89, "0x7bf74ff547c0": 89, "0x7bf74ff54c20": 89, "0x7bf74ff554e0": 89, "0x7bf74ff558a0": 89, "0x7bf74ff559e0": 89, "0x7bf74ff55c60": 89, "0x7bf74ff56160": 89, "0x7bf74ff56c00": 89, "0x7bf74ffb4720": 89, "0x7bf74ffb47c0": 89, "0x7bf74ffb4860": 89, "0x7bf74ffb4ae0": 89, "0x7bf74ffb4c20": 89, "0x7bf74ffb4e00": 89, "0x7bf74ffb4ea0": 89, "0x7bf74ffb4f40": 89, "0x7bf74ffb4fe0": 89, "0x7bf74ffb5080": 89, "0x7bf74ffb5800": 89, "0x7bf74ffb5bc0": 89, "0x7bf74ffb63e0": 89, "0x7bf74ffb65c0": 89, "0x7bf74ffb6700": 89, "0x7bf74ffb6980": 89, "0x7bf74ffb6a20": 89, "0x7bf74ffb6ac0": 89, "0x7bf74ffb6c00": 89, "0x7bf74ffb6de0": 89, "0x7bf74ffb7060": 89, "0x7bf74ffb7100": 89, "0x7bf74ffb74c0": 89, "0x7bf74ffb76a0": 89, "0x7bf74ffb7740": 89, "0x7bf74ffb77e0": 89, "0x7bf74ffb7880": 89, "0x7bf74ffb7920": 89, "0x7bf74ffb7a60": 89, "0x7bf74ffb7ce0": 89, "0x7bf74ffb7d80": 89, "0x7bf74ffb7f60": 89, "0x7bf750184220": 89, "0x7bf750184400": 89, "0x7bf750184b80": 89, "0x7bf750184f40": 89, "0x7bf750185440": 89, "0x7bf750185760": 89, "0x7bf750185940": 89, "0x7bf750186200": 89, "0x7bf750186520": 89, "0x7bf7501867a0": 89, "0x7bf750186de0": 89, "0x7bf750186e80": 89, "0x7bf7501871a0": 89, "0x7bf750187240": 89, "0x7bf7501872e0": 89, "0x7bf750187420": 89, "0x7bf7501877e0": 89, "0x7bf750448040": 89, "0x7bf750469bc0": 89, "0x7bf75046aac0": 89, "0x7bf75046ab60": 89, "0x7bf75046aca0": 89, "0x7bf75046ade0": 89, "0x7bf75046ae80": 89, "0x7bf75046b100": 89, "0x7bf75046b1a0": 89, "0x7bf75046b240": 89, "0x7bf75046b2e0": 89, "0x7bf75046bb00": 89, "0x7bf75046bf60": 89, "0x7bf7506b72e0": 89, "0x7bf750770040": 89, "0x7bf7507700e0": 89, "0x7bf750770540": 89, "0x7bf750770a40": 89, "0x7bf750770cc0": 89, "0x7bf750770ea0": 89, "0x7bf750770f40": 89, "0x7bf7507711c0": 89, "0x7bf750771260": 89, "0x7bf750771440": 89, "0x7bf7507714e0": 89, "0x7bf750771580": 89, "0x7bf7507719e0": 89, "0x7bf750771bc0": 89, "0x7bf750771d00": 89, "0x7bf750771e40": 89, "0x7bf750772020": 89, "0x7bf7507722a0": 89, "0x7bf750772480": 89, "0x7bf750772660": 89, "0x7bf750772700": 89, "0x7bf7507727a0": 89, "0x7bf750772840": 89, "0x7bf7507728e0": 89, "0x7bf750772ac0": 89, "0x7bf750772b60": 89, "0x7bf750772fc0": 89, "0x7bf750773060": 89, "0x7bf750773240": 89, "0x7bf750773380": 89, "0x7bf7507734c0": 89, "0x7bf7507736a0": 89, "0x7bf7507739c0": 89, "0x7bf750773a60": 89, "0x7bf750773ce0": 89, "0x7bf750773d80": 89, "0x7bf750773f60": 89, "0x7bf750808720": 89, "0x7bf750809080": 89, "0x7bf75080b100": 89, "0x7bf750ba4220": 89, "0x7bf750ba42c0": 89, "0x7bf750ba4860": 89, "0x7bf750ba4b80": 89, "0x7bf750ba54e0": 89, "0x7bf750ba5800": 89, "0x7bf750ba5940": 89, "0x7bf750ba5b20": 89, "0x7bf750ba5e40": 89, "0x7bf750ba60c0": 89, "0x7bf750ba65c0": 89, "0x7bf750ba7380": 89, "0x7bf750ba77e0": 89, "0x7bf750ba7c40": 89, "0x7bf750ba7ce0": 89, "0x7bf750ba7d80": 89, "0x7bf750ba7f60": 89, "0x7bf750d1d1c0": 89, "0x7bf750d1eca0": 89, "0x7bf750d1f420": 89, "0x7bf750d1f740": 89, "0x7bf750d1f920": 89, "0x7bf750da4720": 89, "0x7bf750da5b20": 89, "0x7bf750da7740": 89, "0x7bf750da7920": 89, "0x7bf752b714e0": 89, "0x7bf752b728e0": 89, "0x7bf752b72ac0": 89, "0x7bf752b72e80": 89, "0x7bf752b73060": 89, "0x7bf828526d60": 89, "0xa44b40": 206, "1": [3, 4, 10, 11, 13, 16, 19, 21, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 88, 89, 90, 91, 92, 96, 97, 101, 103, 105, 107, 109, 111, 112, 115, 116, 117, 122, 123, 126, 128, 129, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 185, 186, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 230, 232, 234, 236, 238, 240, 244, 247, 248, 250], "10": [3, 10, 11, 16, 19, 21, 56, 62, 63, 64, 65, 66, 67, 68, 88, 89, 126, 128, 131, 133, 161, 178, 185, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 216, 220, 221, 222, 223, 225, 227, 232, 234, 238, 247], "100": [62, 91, 206, 208, 221], "1000": [62, 126, 192, 201, 206, 208], "10000": [10, 212, 213, 214], "10000000149011612": 107, "1002": 201, "10061": 234, "100610733032227": 213, "1006848e": 201, "1007": 232, "100810": 206, "101": [88, 89, 196, 197, 198, 199, 203, 206, 207, 209, 210, 221, 225, 232, 241, 251], "1014": 206, "1015": 10, "10155": 206, "10185218": 206, "10189": 10, "101dummi": [57, 73, 223], "101dummy16": [57, 73, 223], "101dummytupl": 223, "102": [196, 200, 204, 206, 209, 210, 221, 232, 241], "10206207261596575": 212, "10207321": 201, "1021": 10, "1023": 206, "1024": [55, 69, 88, 89, 103, 107, 109, 115, 122, 126, 128, 200, 201, 206, 216, 221, 224, 225, 232, 236, 240], "1024x1024": 200, "1024x16": 221, "1024x512": 200, "1024x64": 238, "1026": 206, "1028": 206, "103": [107, 206, 212, 236], "10323": 10, "1033217242375595e": 206, "10363": 10, "104": [206, 208], "1040104e": 201, "1042": 213, "1044085878340066e": 209, "1048": 206, "1049": 213, "105": [206, 208, 225], "1050": 206, "1052": 206, "10540": 206, "1059": 10, "106": 206, "1060": 223, "1063": 206, "10650": 10, "1066": 206, "1067": 206, "10677402466535568": 89, "1068": [107, 206, 230, 236], "107": [10, 230], "1070": 206, "107000055839308e": 221, "1070192e": 201, "1072": 206, "1073": 206, "1074": 206, "1076": 206, "1077": 10, "1079": 206, "1079260": 206, "1079800": 206, "108": 206, "1081": 232, "1088": 206, "109": [206, 213], "10909": 10, "1091": 10, "1093552e": 201, "10950058": 201, "1097": 206, "109760394827254e": 206, "1099998950958252": [212, 213, 214], "10it": 206, "10x32": 232, "11": [10, 133, 161, 178, 185, 200, 206, 209, 213, 220, 221, 223, 232, 238, 247], "110": [206, 232], "1100": 206, "1100000143051147": [212, 213, 214], "11005": 10, "11008": 236, "1102236e": 201, "1104": 213, "1108017": 201, "111": 206, "1111": [201, 206], "1111028e": 201, "111111": 209, "11133": 10, "1114": 201, "11165": 206, "1118": [201, 205, 213, 217], "112": 206, "1120": 225, "1124": 206, "113": [206, 208], "1131": 232, "1132": 206, "113424": 201, "1136": 10, "1139": 10, "114": [10, 205, 206, 208], "1140": 10, "1141115999998874": 224, "11414": 10, "114466": 234, "1145744e": 201, "114638328552246": 213, "1147": 10, "1149": [10, 206, 232], "114900391665287e": 232, "115": [10, 205, 206, 236], "1152": 232, "1153": 206, "11533": 201, "115575": 201, "1156": [213, 236], "116": [206, 208, 223], "1164": 206, "117": [10, 206, 208, 224], "117009": 115, "117514610290527": 213, "11794": 10, "118": [10, 206, 208], "1180": 206, "118036270141602": 213, "1181942e": 201, "1182": 10, "1182747": 201, "1185": 206, "118628": 201, "118833": 201, "1189": 206, "119": [10, 201, 247], "1190": [213, 236], "119141": 201, "119158490095288": 57, "119339": 201, "119613": 201, "11967": 10, "1197": 206, "119708": 201, "1199": 213, "12": [107, 133, 161, 178, 185, 200, 204, 205, 206, 208, 212, 213, 214, 217, 219, 220, 221, 223, 230, 232, 236, 238, 247], "120": [10, 200, 206, 209, 236], "12000274658203": [212, 213, 214], "1205": 206, "12054": 10, "121": [200, 206], "1211320670": [204, 224], "1213": 10, "1214": 206, "12194164097309113": 89, "122": [206, 212, 213], "1222": 206, "12270": 10, "1228": 10, "1229": 232, "123": [200, 206, 212], "1232": 206, "12342": 10, "1235": 201, "1236": [201, 206], "1238": 201, "1239": 201, "124": [107, 201, 206, 213, 236], "1240": 206, "124064": 201, "1241": 10, "1247": 201, "12482": 10, "125": [107, 206, 236], "1251": 206, "125230646133423": 105, "1252306580543519": 105, "126": [107, 236], "1260": 10, "1263": 10, "1263068e": 201, "1266": 206, "1268072e": 201, "126876": 201, "127": [10, 212], "1270": 206, "1271": 10, "1272": 206, "1276": 206, "12765": 206, "1278": 206, "128": [10, 122, 201, 206, 212, 221, 236], "1282": 206, "1283": 10, "128k": 116, "128x16": 221, "129": [206, 212], "129270": 206, "1294158": 230, "1295636e": 201, "12i": 209, "13": [10, 88, 89, 118, 119, 120, 133, 161, 178, 185, 200, 206, 210, 221, 223, 232, 234, 238], "130": [107, 206, 212, 236, 238], "1300": [206, 223], "130000888835639e": 236, "1301": 206, "130290": 206, "13033061": 208, "130430": 206, "1307": 206, "13082": 234, "131": [107, 201, 206, 236], "131072": [212, 213, 214], "1316716e": 201, "1318": 206, "1319": 10, "132": [10, 107, 206, 212, 236], "1321": 213, "1325": 206, "132656574249268": 213, "1327152e": 201, "133": [107, 206, 236], "1333671659231186": 209, "1334796": 201, "134": [107, 205, 206, 212, 217, 230, 236], "1341": 206, "1342548e": 201, "1344": 10, "13456": 206, "13483522": 223, "1349680e": 201, "135": [107, 122, 204, 206, 236], "1350": 206, "1350913": 201, "1351368e": 201, "1352": 201, "1353": 201, "13555514812469482": 89, "1357": 213, "13579481840133667": 89, "136": 206, "1360276e": 201, "13615": 10, "136220": 206, "136235": 206, "136543": 102, "1367": 206, "137": [10, 200, 206], "1373": 206, "1375": [201, 206], "1375428": 201, "1376": 206, "1379": 213, "138": 206, "1381": 208, "1386": 206, "1388": 206, "13889": 201, "1388912e": 201, "13890": 201, "13892": 201, "13895": 201, "13898": 201, "13899": 201, "139": 206, "1390": 206, "13902307": 201, "13918132": 201, "1397": 236, "139963": 206, "1399999856948853": [212, 213, 214], "14": [10, 118, 119, 120, 133, 143, 161, 178, 185, 200, 206, 221, 232, 238], "140": [10, 225, 232], "1400032043457": [212, 213, 214], "14005": 201, "14008": 201, "1401": 10, "14011": 201, "14012": 201, "14059967524372e": 232, "140625": 208, "14081694": 201, "1408496e": 201, "141": 206, "14115": 206, "1412": 230, "14126": 201, "14130": 201, "14135": 201, "14136": 201, "14140": 201, "14141": 201, "14143": 201, "14144": 201, "14145": 201, "14146": 201, "1415088e": 201, "1417": 206, "142": 247, "1424": 10, "14248": 201, "1425": 206, "14272": 10, "142754": 201, "1428": 213, "1429": 10, "142987": 201, "143": [206, 236], "1432": 10, "14326": 10, "14340": 10, "1436920166015625": 213, "14372": 201, "14377": 201, "14394": 201, "144": 10, "14464": 10, "1447": 206, "14496": 201, "145": 206, "14506": 201, "14507": 201, "14508": 201, "14513": 201, "14517": 201, "1456": 10, "1458": 206, "145870": 234, "146": 206, "14615": 10, "14624": 201, "14638": 201, "1464": 10, "14640": 201, "14641": 201, "14642": 201, "1469": 206, "147": [10, 206], "1473328e": 201, "14748": 201, "14755": 201, "14756": 201, "14757": 201, "1475780e": 201, "14758": 201, "1476": 201, "14761": 201, "14762": 201, "1477": 201, "14771894": 201, "14786": 10, "148": [10, 206, 225, 230], "1482232e": 201, "14847556": 217, "14858362218403": 208, "14869": 201, "1487": 201, "14872": 201, "14897": 234, "149": [10, 206], "1490": 206, "14938974380493164": 89, "1493944525718689": 89, "1494788e": 201, "1499": 213, "14993": 201, "14994": 201, "14995": 201, "14996": 201, "14997": 201, "15": [10, 107, 115, 118, 119, 120, 133, 161, 178, 185, 200, 206, 209, 210, 221, 225, 232, 236, 238, 241], "150": [206, 225], "1500": 208, "15002": 201, "15005": 201, "15006": 201, "15009": 201, "15010": 201, "1505": 234, "151": 10, "1510": 10, "15119": 201, "15121": 201, "15130": 201, "15131": 201, "15134": 201, "151346": 201, "15137": 201, "152": [10, 206, 213], "1523": 225, "15245": 201, "15246": 201, "15251": 201, "15253": 10, "15254": 201, "15255": 201, "15258": 201, "15260": 201, "15261": 201, "15263": 201, "1529": 225, "153001883532852e": 221, "1533384e": 201, "1534": 206, "1535": 206, "15374": 201, "1540": 206, "1545": 206, "155": [206, 225], "1550": 10, "1551": 206, "155271": 206, "156": 206, "1560": 206, "1565576e": 201, "15685": 206, "157": [10, 206], "1570": 206, "1572": 213, "157275": 206, "1573": 206, "1579": 208, "158": 206, "1585004329681396": 213, "15856191800003": 223, "158925": 206, "1589894221542636": 213, "159": [10, 200, 206], "1590": 206, "1594": 234, "15947884321212769": 89, "1599": 206, "159990": 206, "1599998474121094": [212, 213, 214], "16": [10, 103, 107, 115, 118, 119, 120, 122, 133, 161, 178, 185, 200, 206, 221, 230, 232, 238, 240, 247], "160": 206, "1600": 103, "1609": 10, "161": 206, "1611816e": 201, "1616": 10, "1618586": 201, "1623": 213, "163": [206, 230], "163632": 201, "16378": 10, "16379": 10, "16384": 212, "164": [206, 230, 232], "1640540e": 201, "1641": 208, "164216": 201, "165": [10, 225], "1650": 206, "1651492": 201, "1652": 10, "1653": 10, "165499922237359e": 232, "16622455": 201, "16630022705067e": 232, "1664729118347168": 89, "166666666666": 213, "1669254": 201, "167355537414551": 213, "1674": 206, "1675": 206, "1677": 206, "16777216": 126, "168": 122, "1681": 206, "1685": 206, "169": 10, "1691": 225, "1693": 206, "1696": 10, "1699998378753662": [212, 213, 214], "16x1024x1024": 238, "16x1024x64": 238, "16x128": 221, "16x16": 221, "16x64x1024": 238, "17": [10, 133, 178, 185, 200, 206, 212, 213, 214, 220, 221, 230, 232, 238], "170": 206, "17029": 201, "1709": 206, "17091533541679382": 89, "17093369": 208, "171": [10, 225], "1710": [206, 225], "1711": 10, "17155": 206, "1719439029693604": 213, "17199116945266724": 89, "172": [206, 213, 234], "17200": 10, "1720250": 206, "1725945": 201, "1727680": 206, "173": [206, 222], "173123359680176": 213, "1732": 206, "1736": 213, "174": [206, 225], "1742966": 201, "1744890213012695": 213, "174954": 201, "175": 206, "1754576e": 201, "1756": 206, "176": [206, 225], "1770": 206, "1777": 10, "17770": 10, "178": 206, "1780": 213, "1788800e": 201, "179": 225, "1791": 213, "1794720e": 201, "1798673": 201, "18": [10, 21, 56, 63, 64, 65, 66, 67, 68, 83, 122, 129, 133, 148, 149, 169, 178, 185, 198, 199, 200, 202, 203, 204, 206, 207, 208, 217, 218, 219, 220, 221, 223, 230, 232, 238, 240, 247], "180": 206, "18020": 10, "180200529750437e": 232, "1807": 10, "1807060e": 201, "181": 205, "1810": 206, "181799911544658e": 232, "181878": 206, "1823": 213, "18233": 10, "18296290554159592": 213, "183": [200, 206], "1835": 206, "18371255695819855": 89, "184": [107, 206, 236], "1841072e": 201, "185": [206, 225], "1855769157409668": 213, "1857481449842453": 89, "186": 10, "186735153198242": 213, "1868": 206, "187": [206, 225], "18711": 10, "187286": 201, "18733628": 201, "188": 206, "1880001693498343e": 88, "1883072e": 201, "1887905597686768": 213, "189": [200, 213, 225], "1891544e": 201, "1893": 10, "189657688140869": 213, "189999580383301": [212, 213, 214], "19": [10, 107, 133, 178, 185, 200, 206, 221, 223, 225, 230, 232, 234, 238, 247], "190": [206, 225], "1900013962294906e": 232, "1900076e": 201, "190193772315979": 213, "190237045288086": 213, "1902371644973755": 213, "1902378797531128": 213, "1902380714238083": 212, "1904116e": 201, "1904984e": 201, "1905": 206, "1905573010444641": 89, "190681": 201, "191": [10, 206], "1914372e": 201, "1916": 206, "192": [10, 107, 212, 216, 236], "1920328e": 201, "1920928955078125e": 209, "192374": 208, "19239": 10, "193": [230, 232], "1935": 213, "1936": 213, "1943084e": 201, "194977": 201, "195": [10, 206, 225], "1951": 10, "1952": 213, "19555514": 201, "196": [10, 234], "1960": 219, "1965002310462296e": 232, "1972303": 201, "1973": 206, "19752311706543": 213, "198": 199, "1980": 206, "1983": 10, "1987": [213, 236], "1990020943339914e": 10, "19968031": 201, "1998108e": 201, "199999809265137": [212, 213, 214], "1_1": [89, 204], "1_16": 240, "1c0": 232, "1c0f0": 232, "1c1f0": 232, "1d": 126, "1e": [91, 103, 105, 106, 107, 113, 122, 204, 208, 209, 212, 213, 214, 216, 236], "1gb": 206, "1hsuttvvyh1ptew89rtpeu84ht3nqeftyhax3ypa_xj": [205, 213, 214, 217], "1l": 60, "1t": [200, 221, 232], "1x": 236, "1x1024": 238, "1x1024x1": 238, "1x1024x1x64": 238, "1x1024x64": 238, "1x16x30": 221, "1x1x1024": 200, "1x1x1024x64": 238, "1x3": 218, "1x30": 221, "1x30x1": 221, "1x30x128": 221, "1x30x16": 221, "1x30x30": 221, "1x30x32": 221, "1x32": 232, "2": [3, 10, 13, 16, 21, 56, 57, 60, 62, 69, 88, 89, 91, 92, 103, 105, 106, 107, 111, 115, 116, 117, 118, 119, 120, 122, 126, 129, 133, 134, 143, 145, 146, 148, 155, 161, 168, 172, 175, 176, 178, 179, 181, 185, 186, 194, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 230, 232, 234, 236, 238, 240, 247, 250], "20": [10, 91, 105, 133, 143, 178, 185, 196, 200, 206, 221, 225, 230, 232, 234, 238, 247], "200": [10, 206, 225], "2000": 4, "200031280517578": 213, "200369834899902": 213, "201": [10, 103, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 210, 241, 250], "2011": 103, "201699994155206e": 232, "202": [10, 206], "2021": 206, "2022": 213, "2023": 235, "2024": [57, 223, 235], "2025": 234, "202600343385711e": 221, "2027": 206, "2029": 206, "203": 232, "2032": 213, "20346029800202814": 236, "2036": 206, "204": [10, 206], "20412": 10, "2047315": 201, "2048": [200, 236], "2048540115356445": 213, "2048x1024": 200, "2048x512": 238, "205": [206, 225], "2053": 206, "20548": 10, "20564": 10, "2059": [206, 213], "207": [206, 230], "20740": 234, "20770": 206, "208": 219, "209": [10, 206], "2094508e": 201, "2097152": 240, "20l": 60, "21": [10, 105, 133, 178, 185, 200, 221, 225, 232, 238], "210": 206, "21000289916992": [212, 213, 214], "2101": [213, 236], "21049990109168e": 232, "211": [202, 206, 210, 241], "2115": 234, "2117": 10, "212": [10, 206, 221, 236], "2123064e": 201, "2124": 206, "2124248": 201, "2124476": 201, "2127": 10, "21385": 213, "214": [200, 206], "2143": 10, "215": 200, "215156555176": 204, "216": 225, "21648818": 201, "216526": 206, "2169": 10, "217": 206, "21735": 206, "2174912e": 201, "218": 10, "2184904e": 201, "2186": 206, "219": [10, 206], "2199995517730713": [212, 213, 214], "22": [10, 133, 178, 185, 200, 206, 209, 210, 221, 232, 238, 241], "220": 10, "2202": 10, "2208": 204, "2209932e": 201, "221": 230, "2216928005218506": 213, "2218556": 201, "222": [10, 206], "2220": 206, "223": 10, "223304527000437": 236, "22345": 10, "223500971508961e": 213, "22385592099999485": 223, "224": [10, 122, 200], "2240": 206, "2247788e": 201, "225": 206, "2250": 208, "227": 206, "227429223004098e": 206, "2276": 10, "2276235": 201, "228629566998279": 236, "228700031992048e": 232, "229": [107, 236], "2292": [213, 236], "2293086": 201, "2293482000004587": 224, "229532241821289": 213, "23": [10, 106, 133, 144, 149, 185, 200, 201, 221, 232, 234, 238, 241], "230": 206, "2300": 206, "2300000190734863": [212, 213, 214], "2302": 10, "23080": 206, "231": 206, "2310": 206, "232": [206, 218, 222, 232, 241], "2326717": 201, "232734": 201, "2343": [206, 213], "2345": 206, "2345872e": 201, "2347255": 201, "235": [10, 206], "2350": 206, "2366": 206, "2369186878204346": 213, "2370": 206, "237909317016602": 213, "238": 206, "2382": 213, "24": [10, 105, 107, 133, 185, 200, 206, 212, 213, 214, 220, 221, 232, 234, 236, 238, 247], "240": 206, "240597": 201, "2415": 206, "2415004": 201, "24250232589365983": 213, "2428": 10, "242998": 10, "2432": 10, "24336843800119823": 236, "2439425304378056": 213, "2439900e": 201, "243999577127397e": 89, "244": [201, 212], "2442824e": 201, "245": [10, 212], "2455": 213, "24555": 206, "24561573484404578": 213, "246": 212, "24607968": 201, "2463": 10, "246799992164597e": 232, "247": 206, "2470": 206, "248": [122, 201, 212], "248383522033691": 213, "24850811064243317": 89, "249": 212, "2497317633509858": 213, "24986": 225, "25": [10, 133, 200, 204, 206, 221, 225, 232, 238, 240], "250": [206, 212], "25052": 225, "2513": 10, "2515": 206, "252": [122, 201, 206, 232], "2522": 10, "2525": 206, "2526155": 201, "2528": 10, "253": [212, 225], "254": 10, "255": [10, 52, 201, 206, 232], "256": [88, 89, 200, 201, 221, 225], "256191": 208, "2565": 206, "256x256": 221, "257197380065918": 213, "257690": 206, "258": [201, 212], "2582": 10, "258999824523926": 221, "259910": 206, "25991818": 201, "26": [10, 133, 200, 206, 221, 232, 238, 247], "260": [206, 225], "2600353": 201, "26007509231567383": 230, "2603846": 201, "261": [10, 206], "2615": 206, "262144": [212, 213, 214], "263": [206, 225], "263592": 201, "2639994621276855": 213, "264": [10, 107, 212, 225, 236], "2641": 217, "2646": 204, "264800034230575e": 232, "2648463748395443": 105, "265": [107, 206, 236], "265399810625241e": 10, "266": [107, 236], "267": 206, "267102": 10, "268": [206, 225], "26818016": 201, "269": [107, 236], "2695427": 201, "26984775": 201, "27": [10, 133, 200, 206, 217, 221, 232, 236, 238], "2702493965625763": 89, "2703": 206, "2716144e": 201, "2720501991835507": 209, "272050228985873": 209, "272050242532383": 209, "2728": 10, "273": [206, 213], "27304": 10, "2735524e": 201, "274": 10, "2740426": 201, "275": 206, "2750": 206, "276": 212, "277": [200, 213, 236], "27723151445388794": 89, "2773747": 201, "2775": 206, "277917": 200, "278": 206, "2780205313732105": 208, "27846455574035645": 213, "27870": 206, "279": 207, "279000156908296e": 232, "2792": 10, "27it": 206, "28": [10, 133, 200, 212, 213, 214, 221, 232, 238], "280": [107, 236], "2818": 204, "28403976559638977": 89, "28481": 10, "28492": 10, "285": 122, "285300044808537e": 232, "28598186": 217, "286": 206, "28625": 225, "287": [206, 225, 232], "2874": 207, "2878": 10, "2880063": 201, "28833": 225, "2885513": 201, "289": [10, 122, 206, 225], "28920072317123413": 89, "2899998426437378": [212, 213, 214], "29": [133, 200, 206, 221, 232, 238, 247], "290": 225, "2905656397342682": 230, "291": [107, 206, 232, 236], "29144892": 201, "293": [206, 212, 225], "294": [206, 212], "295": [10, 200, 206, 212], "2956": 10, "296": [206, 212, 236], "2969093": 201, "297": 206, "2976": 10, "29780903458595276": 230, "29795": 206, "298": 206, "299": [103, 206], "2992": 10, "2994": 103, "2c0": 232, "2c0f1": 232, "2c1f1": 232, "2d": 221, "2i": [209, 213], "2x": 236, "2x1024": [200, 224, 225, 236], "2x1024x1": 200, "2x1024x1024": 200, "2x1024x2x512": 200, "2x1024x512": 238, "2x1024x8x32": 238, "2x1024x8x64": 238, "2x1x1024x1024": 238, "2x2x1024x1": 200, "2x2x1024x1024": 200, "2x2x1024x256": 200, "2x2x1024x512": 200, "2x2x512x1024": 200, "2x8": 107, "2x8x1024x1024": 238, "2x8x1024x32": 238, "2x8x1024x64": 238, "2x8x64x1024": 238, "3": [10, 21, 62, 69, 79, 88, 89, 91, 103, 105, 106, 107, 109, 116, 117, 133, 143, 145, 148, 155, 158, 161, 163, 168, 172, 176, 178, 185, 188, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 232, 234, 236, 238, 240, 241, 247], "30": [56, 63, 64, 65, 66, 67, 68, 88, 89, 117, 133, 200, 206, 209, 212, 213, 214, 216, 221, 223, 225, 232, 238], "300": [206, 214], "3000": 208, "3006744": 201, "301": 206, "3015": 206, "302": [206, 230], "3025": 10, "3027038": 208, "3029084": 201, "303": 206, "30343975": 208, "303440": 208, "3036920e": 201, "304": 10, "3045": 206, "30490030744113e": 232, "305": 206, "3050": 206, "30584": 234, "3061002391623333e": 232, "3062444": 201, "307117": 234, "3072": [212, 213, 214], "30747660994529724": 89, "30752": 201, "307599763502367e": 232, "309": 10, "30it": 206, "30x30": 221, "31": [10, 133, 200, 201, 212, 213, 214, 216, 221, 222, 232, 238], "310": [206, 247], "310724": 201, "311": [213, 236], "31119441986084": 209, "3117046": 201, "3122228e": 201, "313": 206, "3137593": 201, "31467437744140625": 206, "314703941345215": 213, "315": 206, "3156986": 201, "3157": 236, "31586": 213, "317": [10, 225], "318": 206, "3180374": 201, "3181067": 201, "3183929920196533": 89, "3185": 10, "318741": 201, "3189447836001065": 223, "319": 206, "3192263": 201, "32": [88, 89, 117, 118, 119, 120, 122, 133, 200, 201, 204, 212, 213, 214, 221, 232, 236, 238, 240], "320": [10, 206, 225], "32000": [212, 213, 214, 216, 236], "320003509521484": [212, 213, 214], "32064": [212, 213, 214], "320979": 201, "3214531": 217, "321777": 201, "3218134": 201, "322": 10, "323": [10, 206], "324": [206, 230], "3242": 236, "3243999496335164e": 221, "3250": 206, "326": 206, "32629191875457764": 230, "3270": 206, "327700010733679e": 232, "32896": 223, "32it": 206, "32x1": 232, "32x10": 232, "32x128x56x56": 155, "32x16": 221, "32x4x14x4x14x128": 155, "32x56x56x128": 155, "33": [10, 133, 200, 206, 209, 212, 213, 214, 221, 225, 232, 238], "330": 10, "3308": 206, "331": [107, 236], "331689": 234, "3318": 10, "33196115493774414": 89, "332": 10, "33227": 10, "33249": 10, "33332193": 201, "3337397940003939": 223, "334": 206, "334095001221": 204, "33554432": 126, "335691779210316e": 206, "336": [107, 205, 206, 236], "3367608e": 201, "337": [107, 232, 236], "337092": 201, "33753421902656555": 89, "338": 212, "339": 225, "339999794960022": [212, 213, 214], "339999890769832e": 232, "33it": 206, "34": [103, 133, 200, 206, 213, 221, 225, 232, 238], "340": 206, "3400": 103, "340000033378601": [212, 213, 214], "340003967285156": [212, 213, 214], "34032678604126": 213, "34155": 10, "341592189000039": 223, "341634750366211": 213, "3418": 10, "342": 232, "342244": 201, "34234193": 201, "343": [10, 212], "3433": 206, "3433418": 208, "343692": 207, "343807220458984": 209, "345": 206, "3458953": 201, "346": [10, 225], "34666494": 208, "3467": 208, "346706390380859": 213, "34724912800066e": 206, "35": [10, 133, 200, 206, 212, 213, 214, 221, 232, 238], "350": [10, 225], "3509": 208, "3521690e": 201, "3535533905932738": 107, "35365": 10, "3537183": 201, "3537717": 201, "354": [212, 222, 241], "3549614": 201, "355": 225, "3550": 206, "356": [206, 219], "3561": 10, "357": [122, 206, 208], "358": [206, 225], "35868287": 201, "358967": 201, "3598848e": 201, "35it": 206, "36": [133, 200, 206, 214, 221, 232, 238, 247], "360": [10, 201, 206, 225], "36025951": 208, "361": 201, "36155665702836e": 206, "3616364": 207, "362": 206, "36311": 216, "364": [206, 225], "36404719": 208, "36485": 206, "365": [201, 206], "365077972412109": 213, "366": [10, 206], "36652": 216, "367": 225, "36701521277427673": 89, "3671972751617432": 213, "368371": 234, "368392": 208, "369": 230, "3695": 206, "36it": 206, "37": [10, 133, 200, 210, 221, 224, 225, 232, 238, 247], "370": [10, 225], "370514": 208, "3709068298339844e": 223, "37112": 10, "371399311115965e": 232, "372": 122, "3732": 218, "37327752": 201, "3740": 206, "374839782715": 204, "375": [10, 206], "3750": 208, "3751755": 201, "3752923": 201, "377": [10, 206, 209, 210, 241], "377200068323873e": 221, "377267360687256": 213, "37745422": 201, "37762048": [224, 225], "3778": 10, "37786624": [224, 225], "378": 206, "3780": 206, "379": [206, 232], "379063": 201, "38": [10, 107, 122, 133, 221, 232, 236, 238, 240], "380": [10, 201], "3807": 10, "381": 201, "3811": 10, "381121": 201, "383": [10, 206], "383128": 201, "383424758911133": 213, "384": [10, 232], "384185791015625e": 105, "384186e": 105, "384945392608643": 213, "385": 206, "38556445": 201, "3856463": 201, "387": 206, "3888": 10, "389": 10, "39": [133, 200, 206, 221, 232, 238], "390": 206, "3919": 234, "3924384": 201, "393035": 206, "393364": 206, "394": 206, "396300792694092": 213, "3967": 10, "3979": 10, "39795": 206, "397951": 201, "39796257019043": 213, "398": 230, "398165464401245": 213, "3982": 206, "39845": 206, "3984856605529785": 213, "3985": 206, "3c0": 232, "3c0f1": 232, "3c1f1": 232, "3d": [178, 179], "3x1": 232, "3x10": 232, "3x32": 232, "4": [10, 88, 89, 91, 105, 107, 115, 116, 119, 120, 133, 155, 158, 161, 178, 181, 185, 198, 200, 201, 203, 204, 206, 208, 209, 212, 213, 214, 215, 216, 220, 221, 223, 224, 225, 230, 232, 234, 236, 238, 240, 247], "40": [10, 57, 133, 200, 206, 209, 220, 221, 225, 232, 238], "400": 10, "4000000059604645": 230, "400000095367432": [212, 213, 214], "40100": 206, "401434898376465": 213, "402": [107, 236], "4023": 10, "4028234663852886e": [107, 236], "4029136": 201, "4029784": 201, "4037": 10, "403e": 240, "404118061065674": 213, "406": [206, 236], "4060": 206, "4069": 230, "407": [107, 213, 236], "4071": 10, "4073": 10, "4080032997298986e": 89, "408377": 201, "4087": 10, "409": [107, 212, 232, 236], "4090": 10, "40901002": 201, "4096": [118, 206, 212, 213, 214, 216, 236], "409656": 201, "40970457": 201, "41": [133, 220, 221, 232, 236, 238], "410": 225, "41000366210938": [212, 213, 214], "410438": 201, "412437652000031": 223, "413": 232, "41339": 230, "413700586766936e": 221, "414": [122, 212], "414030": 208, "4147257804870605": 213, "41660118103027344": 230, "4167766": 207, "4167894423007965": 209, "4167898893356323": 209, "417": 212, "418": [10, 225], "4182": 247, "418759462172092e": 105, "418759e": 105, "419": 206, "4195": 206, "41it": 206, "42": [10, 133, 212, 213, 214, 220, 221, 223, 232, 234, 238], "420": 206, "420001983642578": [212, 213, 214], "42133337": 201, "422715": 208, "4246": 10, "4254813": 201, "426": 206, "426188": 201, "4266": 10, "427": [212, 225], "4277993361465633e": 232, "429263": 201, "429463654756546": 89, "42it": 206, "43": [10, 133, 221, 232, 238], "430": 122, "431": [206, 234], "4312962196268": 208, "432": [10, 206], "4320693": 201, "4328": 10, "433": 206, "433100108755752e": 221, "4334533": 201, "434": [10, 230], "4345636": 201, "43465593457221985": 89, "435": 206, "437": 106, "4370": 106, "4378467": 201, "43785": 10, "4378743": 201, "439": 10, "439800199586898e": 232, "43it": 206, "44": [10, 133, 200, 212, 213, 214, 221, 232, 238, 247], "440": 206, "44040192": [224, 225], "440536": 201, "4409103": 201, "441": 232, "441152": 201, "444": 206, "44476703": 201, "445300146471709e": 232, "4453788450009597": 236, "4466": 10, "4468001356581226e": 232, "447": [10, 206, 225], "447107791900635": 213, "448325": 201, "44980645179748535": 230, "45": [133, 206, 208, 220, 221, 232, 238], "45000457763672": [212, 213, 214], "450580596923828e": 209, "450900451047346e": 232, "452": 206, "452300006756559e": 232, "4524": 206, "45250430703163147": 89, "4526353": 201, "45278": 234, "453": 10, "453491": 201, "4537476301193237": 105, "454": 206, "4547749": 201, "454799560946412e": 232, "455": 10, "4567": 234, "457": 206, "4571": 218, "458": 10, "4588537": 201, "45974": 234, "45it": 206, "46": [10, 133, 201, 221, 223, 225, 232, 238], "46000099182129": [212, 213, 214], "460498332977295": 213, "4605": 206, "46073616": 201, "46272069215774536": 89, "462736041040783e": 206, "463": 206, "464": 200, "4641": 207, "46453735": 201, "465": 230, "46506": 10, "466": 225, "4662996768020093e": 232, "4666998544707894e": 232, "467": 216, "467248": 234, "467319488525391": 213, "469": [10, 206, 230], "469363": 201, "46951342": 201, "4695835": 201, "47": [10, 133, 221, 232, 238], "4731402": 201, "473395": 201, "475": 206, "475574970245361": 213, "47610461711883545": 209, "4762004108633846e": 232, "47703722": 201, "478": 206, "4780304": 201, "4781360626220703": 213, "479": 10, "48": [10, 133, 206, 212, 213, 216, 221, 232, 238], "4800033569336": [212, 213, 214], "481": 10, "48130989074707": 213, "481800013105385e": 232, "4830269813537598": 213, "48337352": 201, "4838": 10, "484": 201, "485": [206, 225], "48558617": 201, "4856777787208557": 89, "485885": 206, "4861": 213, "4862523": 201, "486702561378479": 213, "486716866493225": 213, "486774": 201, "4870998711558059e": 232, "4873": 10, "48805": 206, "48810425": 201, "4887": 10, "48875": 206, "4889014405915013e": 209, "489": 201, "49": [10, 133, 198, 221, 232, 238], "4901161193847656e": 88, "49021852016448975": 230, "49022748": 208, "491": 201, "492": [10, 201], "492177963256836": 213, "4926353": 201, "493": [201, 206], "4931307": 201, "4935155": 201, "4938955": 201, "494": 103, "4943": 103, "49433857": 201, "496": 122, "4962053298950195": 209, "496205806732178": 209, "49667543": 201, "497": [10, 201], "4974": 206, "497811794281006": 213, "4978508949279785": 213, "49835652": 201, "4989085": 201, "498999649309553e": 232, "499": 206, "4c0": 232, "4c0f1": 232, "4c1f1": 232, "4i": 209, "4x1024x1024": 200, "4x1024x512": 200, "4x512x1024": 200, "5": [3, 10, 13, 19, 21, 60, 62, 69, 79, 83, 88, 89, 91, 103, 105, 106, 109, 116, 117, 133, 155, 161, 178, 185, 188, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 230, 232, 234, 236, 238, 240, 241, 247], "50": [10, 133, 206, 208, 209, 212, 213, 214, 216, 221, 225, 232, 238], "500": 206, "5007": 10, "501015663146973": 213, "50285": 117, "503": 201, "5032": [107, 230, 236], "5046086": 201, "505": 206, "507457": 206, "508": [10, 212], "508799636620097e": 232, "509": 10, "5098467": 201, "50it": 206, "51": [10, 133, 200, 221, 232, 238], "510": [206, 232], "51000213623047": [212, 213, 214], "511": [206, 232], "51137394": 201, "5116": 204, "512": [118, 119, 120, 200, 206, 213, 232, 240], "51237": 201, "512x512": 238, "513": [122, 232], "5135181e": 201, "514": 232, "5144003049936146e": 232, "515": [10, 232], "515564": 201, "51598513": 201, "516": 206, "517799996188842e": 232, "519": 10, "519223213195801": 213, "519912719727": 204, "51994": 216, "52": [133, 206, 221, 232, 238], "521": 206, "521635": 201, "5223": 206, "522799983737059e": 232, "523": 230, "5237": 204, "524": 225, "524557979816584e": 209, "525": [221, 222, 241], "5252": 10, "526": 230, "5262": 206, "527907": 201, "528": 10, "5281": 204, "5287": 10, "529": 10, "52999877929688": [212, 213, 214], "53": [10, 133, 221, 232, 238], "530": 10, "53057": 10, "531": [10, 206], "532": 206, "534": 206, "534334": 201, "534926": 201, "535": 206, "535599924158305e": 232, "536": [122, 225], "5365": 206, "537": 10, "5378": 10, "538": [204, 213], "539": 225, "53928": 10, "54": [10, 133, 213, 221, 230, 232, 238], "540": 206, "5408": 204, "5410": 10, "54115295": 217, "541412353515625": 213, "5420575": 201, "5428920984268188": 89, "5444997997255996e": 232, "544852": 201, "5450310707092285": 213, "545590877532959": 213, "547": 225, "547399657894857e": 232, "5484": 204, "549": 206, "549198150634766": 213, "55": [133, 206, 208, 221, 232, 238], "55000305175781": [212, 213, 214], "5502433": 201, "55091107": 201, "5513": 208, "552": 206, "55397576": 201, "55431": 10, "55613972": 223, "556578": 201, "5579": 10, "5580": 204, "55820461": 208, "55mb": 206, "56": [133, 206, 221, 232, 238], "560": [206, 213, 232], "5600": 206, "563300459878519e": 232, "565": 206, "5660": 10, "566528081893921": 213, "567": 10, "5677": 10, "569": [206, 230], "57": [122, 133, 206, 212, 213, 214, 221, 232, 238], "57000160217285": [212, 213, 214], "571": 206, "5730": 206, "573023319244385": 213, "5735249519348145": 213, "5739": 234, "5740": 206, "5743": 219, "575": 225, "5765": 206, "576765060424805": 213, "578243": 201, "578326": 201, "58": [10, 133, 212, 213, 214, 221, 232, 238], "580": 206, "5809229e": 201, "582": 225, "58344287": 201, "584": 10, "5840": 10, "5844102": 201, "58470011735335e": 221, "585": [10, 225], "585910958862882e": 206, "5885717": 201, "5886": 10, "589925": 234, "5899994373321533": [212, 213, 214], "5899999141693115": [212, 213, 214], "59": [10, 133, 221, 232, 238], "590003967285156": [212, 213, 214], "5905277": 208, "591": 10, "5928552": 201, "593": 232, "5930903": 201, "593600093969144e": 232, "594053": 208, "5941": 10, "5956": 106, "595881": 201, "5959": 206, "596": [106, 210], "5975": 10, "598": [122, 206], "5994554": 201, "5995802283287048": 89, "5c0": 232, "5c0f0": 232, "5l": 60, "5x3": 230, "6": [10, 16, 21, 57, 88, 89, 105, 133, 143, 161, 178, 185, 200, 201, 203, 206, 209, 213, 220, 221, 223, 227, 230, 232, 238, 247], "60": [133, 206, 212, 213, 214, 221, 225, 232, 238], "600": 4, "6000000238418579": 230, "600000023841858": [212, 213, 214], "604": 225, "605299833812751e": 232, "605799404089339e": 232, "6060": 206, "6078503608703614": 209, "6078503847122192": 209, "608": 10, "609": [10, 206], "60911006": 201, "60969": 234, "609882831573486": 213, "61": [10, 133, 206, 221, 232, 238], "610": [201, 225], "61000442504883": [212, 213, 214], "611": 201, "611177921295166": 213, "6115998732857406e": 232, "611700230976567e": 232, "6129472255706787": 213, "613": 10, "613043661566299e": 206, "6132678860012675": 236, "614": 201, "6143": 10, "6144": 212, "615": 201, "615914": 201, "616182804107666": 213, "6163974": 201, "617": 201, "617188": 206, "6179": 10, "618": 206, "6180026654619724e": 236, "62": [133, 206, 212, 213, 214, 221, 232, 238], "620": 201, "6200000047683716": [212, 213, 214], "620000123977661": [212, 213, 214], "62000274658203": [212, 213, 214], "620253": 201, "62096": 10, "62198": 10, "624": 206, "6242": 234, "6246": 10, "62513673": 201, "626": [201, 206], "627": 10, "627417": 200, "628": 201, "6285": 10, "6285653114318848": 213, "628900155192241e": 232, "629": [10, 213], "629271": 201, "63": [133, 212, 213, 214, 221, 232, 238], "630": 206, "6313323974609375": 213, "63175607": 201, "632": [206, 213], "6336": 206, "635": 206, "635222": 201, "636": 206, "636288642883301": 213, "63634922500205": 236, "636761": 201, "6376118659973145": 213, "64": [10, 107, 133, 206, 212, 213, 214, 221, 230, 232, 236, 238], "640": 206, "642": 200, "642461": 201, "6435721": 201, "645": 122, "6450": 208, "645051956176758": 213, "6451": 206, "6455602645874023": 89, "64635": 206, "647": 10, "64783275": 201, "6486": 218, "65": [10, 107, 133, 206, 221, 232, 236, 238, 247], "65011712": [224, 225], "6515": 206, "6519290208816528": 213, "652115345001221": 213, "6522174": 201, "6540": 206, "655": [215, 222, 241], "65506876": 201, "65537": 223, "6567993": 201, "6568272113800049": 213, "659": [213, 222, 232, 241], "66": [10, 107, 133, 221, 232, 236, 238], "6605": 206, "661": 206, "662": 230, "66219664": 201, "662999344873242e": 232, "663": [10, 206], "664800169644877e": 232, "665": 206, "667": 10, "6671": 206, "6672080159187317": 89, "6677213": 201, "6678185": 201, "6693394400179387": 105, "6695001249900088e": 232, "6699": 10, "67": [107, 133, 208, 221, 232, 236, 238], "670000076293945": [212, 213, 214], "6704760789871216": 89, "671": 10, "67108864": 247, "671518": 208, "67454195022583": 213, "675": 225, "67588544": 201, "676405104745221e": 206, "677": 206, "677954196929932": 213, "67811406": 201, "6782": 206, "678400076343678e": 232, "679": 230, "679068088531494": 213, "679999828338623": [212, 213, 214], "68": [133, 208, 221, 232, 238], "680": 206, "683": 206, "68301034": 208, "684": 10, "6844": 10, "685616": 201, "685660": 206, "6859": 10, "686625957489014": 213, "6870723962783813": 213, "688": 122, "6889033": 201, "6889565": 201, "68962045799981": 223, "69": [10, 133, 221, 225, 232, 238], "69229": 201, "6923842": 201, "6924": 10, "6926937270000053": 236, "694": [230, 232], "695584237575531": 89, "6957988219983235": 236, "6967266919530886e": 209, "6976248": 201, "698": 206, "698259": 206, "698766708374023": 105, "6993283033370972": 89, "6998000723542646e": 232, "6a0": 247, "6a9edc38bf9b941b7d369af5103fa8fe0b121d61": 247, "6i": 209, "7": [10, 57, 88, 89, 107, 115, 118, 119, 120, 133, 161, 178, 185, 200, 201, 206, 209, 212, 213, 214, 216, 220, 221, 223, 227, 230, 232, 234, 236, 238, 247], "70": [10, 133, 206, 221, 232, 238], "700000286102295": [212, 213, 214], "700020790100098": 213, "7006003013812e": 232, "701": 206, "702121": 208, "7034": 10, "7037830352783203": 213, "704": 206, "7040": 10, "704699": 201, "705480073112994": 57, "7067922353744507": 89, "7072873": 201, "708": [220, 222, 225, 241], "7085536": 201, "71": [133, 221, 232, 238], "710": 232, "71000289916992": [212, 213, 214], "7103391289710999": 89, "7108": 204, "7129333875218435": 213, "7136000426253304e": 232, "71390393": 208, "714": 206, "714844": 206, "715": 206, "715588": 206, "7171001167735085e": 232, "7172837": 201, "72": [133, 221, 232, 238], "720": [122, 206, 236], "721": 225, "7214": 10, "721664428710938": 213, "722": 206, "722652": 201, "7227": 10, "724": 122, "725149631500244": 213, "726004696451128e": 10, "7265625": 208, "72827005": 201, "7297": 213, "7297525": 201, "729999542236328": [212, 213, 214], "73": [10, 133, 200, 208, 212, 221, 232, 238], "730": [206, 225], "7300982": 201, "7306": 204, "7306232": 201, "7310": 204, "732128": 201, "7323503494262695": 213, "733": 225, "733430325666783": 223, "7336698": 201, "735": 225, "735348": 201, "736899664858356e": 232, "737": 201, "7372484": 201, "7376804": 201, "738": 201, "7383677959442139": 105, "73850": 206, "739": [201, 225], "7397": 213, "74": [10, 133, 221, 230, 232, 238], "740": 206, "7400016076862812e": 232, "741": 201, "7420": 213, "743": 206, "743461": 201, "744": [10, 201, 206], "7443995": 201, "7444644": 201, "7450412511825562": 213, "7457404136657715": 213, "746652018013669": 213, "7477827": 201, "7478275": 201, "7491493": 201, "749999523162842": [212, 213, 214], "75": [133, 206, 221, 225, 232, 238], "750": [201, 208], "7502780473095363n1333nan": 209, "751": [10, 201], "752": [201, 206], "753": 201, "753966808319092": 213, "754": [10, 201], "755": [106, 225], "7552": 106, "7553312": 201, "757": 206, "758": [206, 232], "75861": 208, "759": 225, "7590": 206, "76": [10, 133, 206, 221, 232, 238], "7604604": 201, "7608642578125": 204, "7611668705940247": 89, "7617": 10, "7618985": 201, "762": [122, 230], "76388": 208, "7641": 213, "764199911733158e": 232, "76837158203125e": [105, 221], "768372e": 105, "76839703": 201, "769": 241, "77": [133, 221, 225, 232, 238], "77000427246094": [212, 213, 214], "771": 232, "7717674": 201, "7719806": 201, "772": 225, "772794": 201, "7742003516759723e": 232, "776": [206, 225], "77602195739746": 105, "777": 230, "779": 230, "78": [133, 201, 208, 221, 232, 238], "780": 10, "7801": 10, "780268669128418": 213, "781171": 206, "781899694236927e": 232, "782": 225, "782499647466466e": 232, "783446936799147e": 209, "784": 122, "785": 206, "786": [10, 206], "788": 206, "789": 206, "7892001778818667e": 232, "7899998426437378": [212, 213, 214], "789999961853027": [212, 213, 214], "79": [88, 89, 200, 208, 221, 232, 238], "7909586": 201, "791219234466553": 213, "7931430999997247": 225, "794": 230, "794866": 201, "7951": 10, "7951488": 201, "795259": 201, "796875": 208, "798": [206, 240], "798318862915": 204, "799199475906789e": 232, "799720": 206, "7b": 116, "7t": [200, 221, 232], "8": [10, 105, 107, 115, 118, 119, 120, 133, 161, 178, 185, 188, 199, 200, 201, 206, 209, 213, 220, 221, 223, 225, 232, 238, 240, 247], "80": [117, 126, 131, 191, 206, 221, 225, 232, 238], "80000024556648e": 200, "8030105": 201, "8031": 10, "80362266": 201, "804": 206, "8060503": 201, "8069825": 201, "8074": 10, "80855435": 201, "8092999855289236e": 232, "8095374300028197": 236, "8096515910001472": 236, "81": [221, 238], "810": 206, "810827": 201, "813127040863037": 213, "815": 206, "81608504": 201, "8165927": 201, "8166332": 201, "817": 10, "8178": 234, "8183161": 201, "8192": [212, 213, 214], "8193919": 201, "819581": 201, "8199998140335083": [212, 213, 214], "82": [10, 221, 238], "821": 225, "82207": 208, "823": 206, "82329999411013e": 232, "8239728e": 201, "82496136": 201, "825": 10, "826569": 201, "827": 206, "82848": 10, "8299": 213, "83": [221, 238], "8300000849412754e": 232, "830885171890259": 105, "831": 122, "83137": [204, 224], "8315": 217, "832600047346205e": 232, "8332553": 201, "833333333334": 213, "833969": 201, "835": 206, "837": 213, "8376047611236572": 89, "8387718200683594": 213, "839": 10, "839702": 201, "83999633789062": [212, 213, 214], "8399994373321533": [212, 213, 214], "84": [10, 206, 221, 238], "840002059936523": [212, 213, 214], "841": 122, "841597080230713": 213, "8424244e": 201, "8430048": 201, "8433152e": 201, "843696": 206, "844": [206, 213], "8446493": 201, "845": [10, 206], "845219": 201, "845287799835205": 213, "8469324": 201, "847968101501465": 213, "848800381296314e": 232, "8493340015411377": 213, "849763000011444": 105, "8497630298137664": 105, "849763035774231": 105, "8499997854232788": [212, 213, 214], "85": [201, 206, 221, 238], "8503176e": 201, "8505000449949875e": 232, "8513728380203247": 213, "851748466491699": 213, "8519": 207, "852": [10, 225], "8523507": 201, "8525002057431266e": 232, "853": 10, "8530": 219, "855399336316623e": 232, "8554616": 201, "857957": 201, "858": 201, "8580": 206, "8587728": 201, "859": 201, "85907": 208, "859375": 208, "86": [10, 221, 225, 238], "860590934753418": 213, "86066": 201, "861": 122, "862": [201, 206, 230], "8628344535827637": 213, "866": 232, "868": 206, "868335382495807e": 105, "868335e": 105, "868622110278257e": 213, "8689923": 201, "869": [206, 213], "869273103000069": 223, "87": [10, 206, 221], "871": 206, "871149": 201, "8727493": 201, "873": 122, "8739": 10, "873998": 206, "874": 201, "875618": 201, "876003": 201, "877": [206, 230], "87765": 206, "878788948059082": 213, "879": [206, 230], "8799997568130493": [212, 213, 214], "88": [10, 221, 225], "8805988": 201, "881502394000563": 236, "8817997847218066e": 232, "881990909576416": 213, "882133960723877": 213, "882212": 206, "882221": 201, "882812": 201, "88368404": 201, "885": 206, "8864794": 201, "88695": 206, "8877859": 201, "8878960609436035": 213, "888000017264858e": 232, "8883824e": 201, "889": 122, "89": [10, 221], "890300260740332e": 232, "8912257": 201, "89307386": 201, "894": 230, "896499740425497e": 232, "896876": 201, "897": 10, "8979726": 201, "898": 200, "899": 200, "8992736e": 201, "8996908": 201, "9": [10, 21, 56, 89, 91, 105, 115, 129, 133, 161, 178, 185, 198, 199, 200, 202, 203, 206, 212, 213, 214, 220, 221, 223, 225, 230, 232, 238, 240, 247], "90": [206, 221], "900": 200, "9004974": 201, "901": 200, "902": 200, "903": [200, 206], "90326646876946": 208, "9039568e": 201, "904": [206, 232], "906500180368312e": 232, "9065616": 201, "907": 206, "9071256e": 201, "907875": 201, "9080": 206, "9089201999995566": 225, "909": 206, "9092493": 201, "909782": 201, "9097867": 201, "9099997282028198": [212, 213, 214], "91": 221, "910": 206, "912": 206, "912899622577243e": 232, "913": 225, "9155": 206, "917182": 208, "91755": 206, "91788": 201, "92": 221, "920303": 201, "9216": 212, "922": 219, "9223372036854775807": [107, 111, 212, 236], "922994": 201, "925": 10, "9255896e": 201, "926053": 201, "927": [216, 222, 241], "9281": 10, "9283855678953188e": 209, "9291642": 201, "9297096e": 201, "93": [122, 221], "93000411987305": [212, 213, 214], "9313568e": 201, "931474685668945": 213, "9326": 10, "934544": 201, "934799163602293e": 232, "9362488e": 201, "9394937": 201, "9396112e": 201, "9399996995925903": [212, 213, 214], "94": [206, 221], "9407": 10, "9407508": 201, "9435696e": 201, "944": 206, "9468803": 201, "947": [10, 206], "948": [10, 230], "949165": 201, "95": [10, 206, 216, 221], "95130": 206, "9514841": 201, "952": 106, "9522": 106, "952299812226556e": 232, "95254046": 201, "952600157703273e": 232, "9534040e": 201, "9547407e": 201, "956": 10, "9571428571428572": 213, "957799971336499e": 232, "9580": 206, "95810": 206, "958700057817623e": 232, "95870274": 201, "959": 234, "959609031677246": 213, "96": [206, 208, 212, 213, 214, 216, 221, 225], "960": 206, "96000289916992": [212, 213, 214], "9601248e": 201, "960464477539063e": 209, "9610": 206, "9613088e": 201, "9621424674987793": 213, "9624520e": 201, "963": 230, "964": 122, "9641888e": 201, "964289": 201, "964844": 206, "964862407949802e": 209, "9649414": 201, "9669440e": 201, "967316": 201, "9684243": 201, "969": 205, "9694001568714157e": 232, "9696969696969697": 213, "9698065": 201, "96m": 236, "96mthi": 236, "97": [10, 221], "970": 206, "970001220703125": [212, 213, 214], "9702396392822266": 209, "970448340754956": 57, "971": [219, 222, 241], "9715738": 201, "972126": 201, "9736595": 201, "97494649887085": 213, "974993669986725": 105, "974993717670441": 105, "97669978660997e": 232, "977": [10, 205, 206, 230], "9783000e": 201, "98": 221, "980": 206, "9802322387695312e": [89, 209], "98146534": 201, "982023522107275e": 10, "9820968e": 201, "982599345268682e": 221, "983": 232, "9839": 10, "9843999072909355e": 232, "9849740e": 201, "98565435": 201, "986": 206, "986849784851074": 213, "9899996519088745": [212, 213, 214], "99": [118, 119, 120, 206, 221, 247], "9900758": 201, "990225": 201, "991": 206, "992": 201, "9921": 10, "992841203680981": 208, "9928731076910735": 208, "9928922183565837": 208, "993": 230, "994": [201, 206, 232], "9940324": 201, "9946136e": 201, "994941711426": 204, "9954272e": 201, "99610": 206, "996285915374756": 213, "997": 201, "997002052841708e": 221, "9975672e": 201, "998": 201, "998725414276123": 221, "9988": 10, "9989987": 206, "9999390240009234": 236, "9t": [200, 221], "A": [88, 89, 103, 105, 106, 111, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 192, 196, 198, 199, 201, 205, 206, 207, 208, 209, 210, 211, 213, 216, 232, 235, 241], "AND": 235, "AS": 235, "And": [185, 200, 202, 205, 208, 212, 213, 217, 218, 219, 220, 221, 240], "As": [205, 217, 218, 219], "At": 230, "BE": 235, "BUT": 235, "But": [103, 205, 213, 221], "By": [131, 133, 145, 155, 204, 230, 232, 237], "FOR": 235, "For": [111, 205, 208, 213, 215, 216, 217, 223, 230, 250], "IN": 235, "If": [57, 88, 89, 103, 104, 106, 107, 109, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 191, 192, 199, 205, 209, 213, 215, 216, 217, 221, 223, 230, 232, 236], "In": [10, 60, 126, 133, 134, 205, 213, 230], "It": [9, 16, 18, 21, 51, 60, 89, 91, 101, 103, 107, 109, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 192, 196, 197, 200, 204, 209, 213, 215, 216, 221, 223, 230, 231, 232, 244, 246, 248, 250, 251], "NO": 235, "NOT": [111, 235], "No": [107, 182, 212, 213, 236], "Not": [185, 209, 232, 240], "OF": 235, "ON": 247, "OR": 235, "On": 230, "One": [182, 216, 223, 244, 248], "Or": [79, 185], "THE": 235, "TO": 235, "That": [11, 83, 131, 207, 208, 215, 221, 232], "The": [8, 10, 11, 13, 18, 20, 21, 26, 56, 57, 58, 60, 79, 80, 81, 82, 88, 89, 94, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 115, 117, 118, 119, 120, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 190, 192, 196, 200, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 221, 223, 229, 230, 231, 232, 234, 235, 236, 244, 247, 248, 249, 250], "Their": 230, "Then": [133, 142, 199, 209, 221, 223], "There": [91, 101, 126, 131, 168, 230, 231, 232], "These": [11, 60, 211, 223], "To": [79, 111, 194, 206, 216, 217, 245, 247], "WITH": 235, "Will": 223, "With": [79, 232, 234, 236], "_": [201, 204, 206, 212, 213, 214, 216, 221, 225, 240], "__and__": [89, 107, 212, 236], "__and___tensor": 91, "__bool__": 214, "__call__": [206, 225, 236], "__doc__": 206, "__enter__": [206, 225], "__exit__": [206, 225], "__file__": [10, 200, 201, 206], "__getattr__": 225, "__getattribute__": 225, "__getitem__": [204, 206, 225], "__hash__": 206, "__iand__": 89, "__ilshift__": 89, "__init__": [10, 88, 89, 103, 106, 107, 197, 204, 205, 206, 207, 208, 209, 213, 217, 220, 221, 225, 230, 232, 236], "__instancecheck__": 206, "__ior__": 89, "__irshift__": 89, "__ixor__": 89, "__len__": 204, "__main__": [10, 209, 213, 217], "__name__": [206, 230], "__new__": [88, 89, 206], "__or__": 89, "__or___tensor": 91, "__post_init__": 206, "__qualname__": 230, "__repr__": 206, "__set__": 206, "__setattr__": 206, "__subclasscheck__": 206, "__torch_dispatch__": 206, "__torch_function__": [205, 206, 213, 217], "__xor__": 89, "_abstract_fn": 218, "_adaptive_avg_pool2d": [89, 91], "_add_batch_dim": [89, 107, 212, 236], "_add_batch_dim_1": 212, "_add_batch_dim_2": [107, 212, 236], "_add_batch_dim_3": [107, 212, 236], "_add_shape_inform": [88, 89, 232], "_addmm_activ": 89, "_all_nan": 209, "_alloc_from_pool": 89, "_aot_autograd": [204, 206, 213, 224, 225], "_aot_export_non_strict": 213, "_apply_to_graph_or_funct": 206, "_assert_scalar": 91, "_assert_tensor_metadata": [91, 107, 212, 236], "_assert_tensor_metadata_default": 212, "_assert_tensor_metadata_default_1": 212, "_assert_tensor_metadata_default_10": 212, "_assert_tensor_metadata_default_11": 212, "_assert_tensor_metadata_default_12": 212, "_assert_tensor_metadata_default_13": 212, "_assert_tensor_metadata_default_14": 212, "_assert_tensor_metadata_default_15": 212, "_assert_tensor_metadata_default_16": 212, "_assert_tensor_metadata_default_17": 212, "_assert_tensor_metadata_default_18": 212, "_assert_tensor_metadata_default_19": 212, "_assert_tensor_metadata_default_2": 212, "_assert_tensor_metadata_default_20": 212, "_assert_tensor_metadata_default_21": 212, "_assert_tensor_metadata_default_22": 212, "_assert_tensor_metadata_default_3": [212, 236], "_assert_tensor_metadata_default_4": [212, 236], "_assert_tensor_metadata_default_5": [212, 236], "_assert_tensor_metadata_default_6": [107, 212, 236], "_assert_tensor_metadata_default_7": [107, 212, 236], "_assert_tensor_metadata_default_8": [212, 236], "_assert_tensor_metadata_default_9": [212, 236], "_aten_funct": [10, 103, 206, 230, 231], "_aten_functions_attent": [10, 103], "_aten_method": [10, 103, 230, 231], "_attention_1__val_22": 238, "_attention_1__val_29": 238, "_attention_1__val_32": 238, "_attention_1__val_35": 238, "_attention_1__val_37": 238, "_attention_1__val_38": 238, "_attention_1__val_39": 238, "_attention_1_add": 238, "_attention_1_add_2": 238, "_attention_1_aten_cat_143_n0": 238, "_attention_1_aten_mul_106_n0": 238, "_attention_1_aten_mul_144_n0": 238, "_attention_1_aten_neg_141_n0": 238, "_attention_1_aten_softmax_no_dtype_163_r": 238, "_attention_1_aten_unsqueeze_55_n2": 238, "_attention_1_aten_unsqueeze_65_n2": 238, "_attention_1_attention_k_proj_1": 238, "_attention_1_attention_q_proj_1": 238, "_attention_1_attention_v_proj_1": 238, "_attention_1_bmm": 238, "_attention_1_bmm_1": 238, "_attention_1_cat": 238, "_attention_1_div": 238, "_attention_1_mul": 238, "_attention_1_mul_1": 238, "_attention_1_neg": 238, "_attention_1_slice_123": 238, "_attention_1_slice_140": 238, "_attention_1_slice_3": 238, "_attention_1_slice_4": 238, "_attention_1_transpos": 238, "_attention_1_transpose_2": 238, "_attention_1_transpose_3": 238, "_attention_1_transpose_4": 238, "_attention_1_unsqueez": 238, "_attention_1_unsqueeze_1": 238, "_attention_1_view_10": 238, "_attention_1_view_11": 238, "_attention_1_view_12": 238, "_attention_1_view_13": 238, "_attention_1_view_14": 238, "_attention_1_view_15": 238, "_attention_1_view_6": 238, "_attention_1_view_7": 238, "_attention_1_view_8": 238, "_attention_1_view_9": 238, "_attention_k_proj_1_mm_1": 238, "_attention_k_proj_1_t_1": 238, "_attention_o_proj_1_mm_3": 238, "_attention_o_proj_1_t_3": 238, "_attention_o_proj_1_view_16": 238, "_attention_q_proj_1_mm": 238, "_attention_q_proj_1_t": 238, "_attention_v_proj_1_mm_2": 238, "_attention_v_proj_1_t_2": 238, "_attention_v_proj_1_view_4": 238, "_attn_implement": [115, 118, 119, 120, 224, 225, 236, 240], "_b": 221, "_backward": 89, "_bash_bench_benchmark_runn": [10, 84], "_bash_bench_benchmark_runner_agg": [10, 84], "_bash_bench_benchmark_runner_agg_help": [10, 84], "_bash_bench_cmd": [10, 84], "_bash_bench_model_runn": [10, 84, 223], "_bash_bench_models_help": [10, 84], "_bash_bench_set_dummi": [10, 84], "_bash_bench_set_explicit": [10, 84], "_bash_bench_set_huggingfac": [10, 84], "_bash_bench_set_timm": [10, 84], "_bash_bench_set_torchbench": [10, 84], "_bash_bench_set_torchbench_ado": [10, 84], "_bash_bench_untrain": [10, 84], "_batch_norm_impl_index_backward": 89, "_batch_norm_no_upd": 89, "_batch_norm_with_upd": 89, "_batch_norm_with_update_funct": 89, "_bench_test": [10, 17], "_bind": 236, "_block_diag_iter": 89, "_build": 206, "_build_initi": [88, 89, 206, 232], "_build_pattern": 206, "_build_pattern1_axi": 232, "_build_pattern1_b": 232, "_build_pattern1_indic": 232, "_build_pattern1_slop": 232, "_build_pattern1_x": 232, "_build_pattern1_zero": 232, "_build_pattern1_zerof": 232, "_build_pattern1_zeroi": 232, "_builder_runtim": [10, 189], "_builderruntim": 250, "_c": [206, 207, 213, 225, 248], "_cache_kei": 206, "_cache_shap": [126, 230], "_cached_dispatch_impl": 206, "_calc_imput": 209, "_call_impl": [213, 225], "_call_method_with_signature_check": 206, "_captur": 236, "_capture_strategi": 236, "_carri": 215, "_cast_byt": 89, "_cast_char": 89, "_cast_doubl": 89, "_cast_float": 89, "_cast_half": 89, "_cast_input": [217, 220, 221, 240], "_cast_int": 89, "_cast_long": 89, "_cast_short": 89, "_check_dynamic_shap": 213, "_check_graph": 206, "_check_graph_nod": 206, "_check_valid_to_preserv": 206, "_choose_qparams_per_tensor": 89, "_chunk_cat": 89, "_clean_shap": 232, "_col_cond": 209, "_collect_all_valid_cia_op": 206, "_collect_all_valid_cia_ops_for_namespac": 206, "_collections_abc": [206, 225], "_combine_arg": 236, "_command_lines_pars": [10, 17], "_compat": 236, "_compil": 213, "_comput": 206, "_concatenate_ind": 209, "_config": [9, 103], "_config_modul": 225, "_constant_fold": 206, "_constantfunct": [107, 236], "_context": 126, "_contextlib": 213, "_conv_forward": 206, "_convolut": 89, "_convolution_double_backward": 89, "_convolution_mod": 89, "_core": [206, 236], "_create_graph_module_for_export": 206, "_cuda_getdevicecount": 248, "_cuda_synchron": 225, "_cuda_vers": 89, "_cufft_clear_plan_cach": 89, "_cufft_get_plan_cache_max_s": 89, "_cufft_get_plan_cache_s": 89, "_cufft_set_plan_cache_max_s": 89, "_debug_constant_fold": 126, "_debug_dyn_dim": 126, "_debug_foldnot": 126, "_debug_get_const": 126, "_debug_has_internal_overlap": 89, "_debug_local_funct": 126, "_debug_node_output": 126, "_debug_node_typ": 126, "_debug_noquiet_nam": 109, "_debug_null_shap": 126, "_debug_print_export": 109, "_debug_print_statu": 109, "_debug_quiet": 126, "_debug_shape_miss": 126, "_debug_stop": 126, "_debug_stop_shap": 126, "_debug_stop_typ": 126, "_debug_value_shap": 126, "_decomp": [89, 91, 206], "_deepcopy_dict": 206, "_deepcopy_list": 206, "_deriveddim": 126, "_detect_attribute_assign": 206, "_dim_": 204, "_dim_arang": 89, "_dimhint": 213, "_dispatch_get_registrations_for_dispatch_kei": 206, "_dispatch_impl": 206, "_do_infer": 206, "_doc": [196, 205, 206, 217, 220, 247], "_doc_": [10, 103], "_donors_idx": 209, "_donotremove_": 126, "_dort_cmd_common": [10, 84], "_dort_cmd_common_model": [10, 84], "_draft_export": 212, "_dynamic_alia": [126, 230], "_dynamic_exampl": [107, 126, 230, 236], "_dynamo": [89, 103, 107, 204, 205, 212, 213, 225, 236], "_dynamo_export": [10, 89], "_embedding_bag": 91, "_embedding_bag_sparse_backward": 89, "_engine_run_backward": 225, "_enginebas": 225, "_enum": 206, "_error": 236, "_euclidean_dist": 89, "_eval_constant_expr": 206, "_eval_typ": 206, "_evalu": 206, "_evaluate_expr": 213, "_event": 126, "_except": [10, 103, 230], "_exec_with_sourc": 206, "_export": [205, 206, 213, 214, 217, 236], "_export_for_train": [213, 236], "_export_to_aten_ir_make_fx": 213, "_exported_program_to_onnx_program": 206, "_extract_symbolized_tb": 206, "_extract_tensor_metadata": 206, "_f": 216, "_fft_r2c": 91, "_fftn_onnx": 91, "_fit_ind": 209, "_fit_x": 209, "_flag": 236, "_flatten_into": 206, "_fn": [89, 213, 225], "_forward_": 216, "_forward_from_src": 206, "_framework_api": 206, "_free_unbacked_symbols_with_path": 206, "_functorch": [107, 204, 206, 212, 213, 224, 225, 236], "_fused_dropout": 89, "_fused_dropout_decomposit": 89, "_fused_rms_norm": 89, "_fused_rms_norm_backward": 89, "_fx_pass": 206, "_gather_sparse_backward": 89, "_gen_python_cod": 206, "_generate_tokens_from_c_token": 206, "_get_allowed_types_from_type_annot": 206, "_get_available_device_typ": 225, "_get_current_device_index": 225, "_get_decomp_for_cia": 89, "_get_device_attr": 225, "_get_device_index": 225, "_get_mask": 209, "_get_match_pattern": 206, "_get_node_typ": 206, "_get_ortvalues_from_torch_tensor": 225, "_get_output_tensor_from_cache_entri": 206, "_get_weight": 209, "_grid_sampler_2d_cpu_fallback_backward": 89, "_h": 206, "_handle_call_function_node_with_low": 206, "_has_compatible_shallow_copy_typ": 89, "_higher_order_op": [89, 107, 206, 236], "_ident": 209, "_index": [56, 57, 223], "_inference_runtim": [10, 189, 206], "_inferenceruntim": 250, "_inlfunc_aten_add": 238, "_inner_evaluate_expr": 213, "_intern": [10, 206, 236], "_is_compil": [225, 248], "_is_compiled_against_turbo": 89, "_is_mkldnn_acl_support": 89, "_is_mkldnn_bf16_support": 89, "_is_mkldnn_fp16_support": 89, "_is_param_expr": 206, "_is_preservable_cia_op": 206, "_is_tensor_typ": 206, "_is_view": 225, "_is_zerotensor": 89, "_jit_intern": [206, 225], "_jpeg_vers": 89, "_known_const": [107, 230, 236], "_known_nam": [126, 230], "_known_rank": [107, 126, 230, 236], "_known_sequ": 126, "_known_shap": [107, 126, 230, 236], "_known_typ": [107, 126, 230, 236], "_known_value_shap": [107, 126, 230, 236], "_kwarg": 192, "_lazy_graph_modul": 206, "_lazy_init": 225, "_librari": [206, 219], "_load_large_initi": 127, "_log": 206, "_log_api_usage_onc": 91, "_log_softmax": [89, 91], "_log_softmax_backward_data": [89, 91], "_lu_with_info": 89, "_make": 206, "_make_alia": 89, "_make_builder_interpret": [88, 89], "_make_data_dependent_error": 213, "_make_dict_idx_map": 209, "_make_fx_help": 213, "_make_grad": 225, "_make_graph_modul": 206, "_make_new_neight": 209, "_make_node_set_type_shap": 206, "_make_node_set_type_shape_const": 206, "_mask_fit_x": 209, "_match_nod": 206, "_match_single_output_nod": 206, "_matcher": 206, "_materialize_cpp_cia_op": 206, "_materialize_if_need": 206, "_math_funct": 10, "_max_pool2d": 206, "_method_from_src": 206, "_miss": 209, "_name_or_path": [212, 213, 214], "_native_batch_norm": 91, "_native_batch_norm_legit": 89, "_native_batch_norm_legit_funct": 89, "_native_batch_norm_legit_no_stat": [89, 91], "_native_batch_norm_legit_no_train": [89, 91], "_new_patch": 206, "_nn": [206, 207], "_nnpack_avail": 89, "_node": 206, "_non_aten_funct": [10, 103], "_non_strict_export": [213, 236], "_none_": 204, "_nvml_based_avail": [225, 248], "_o": 221, "_onnx_help": [10, 126, 189], "_onnx_program": 206, "_onx_add_expand_4": 240, "_onx_add_mul_split_x_0": 169, "_onx_add_sym_size_int_4": 220, "_onx_add_tanh_mul_add_x": 169, "_onx_add_x": 169, "_onx_and_new_on": 240, "_onx_cast0": 200, "_onx_concat0": 200, "_onx_concat02": 200, "_onx_concat03": 200, "_onx_concat04": 200, "_onx_concat_add_mul_split_x_0": 169, "_onx_concat_max_pool2d_1": 206, "_onx_concat_neg_split_split_x_0_1": 169, "_onx_concat_neg_split_x_1": 240, "_onx_concat_sym_size_int_3": 220, "_onx_constantofshape0": 200, "_onx_constantofshape02": 200, "_onx_constantofshape03": 200, "_onx_constantofshape04": 200, "_onx_constantofshape05": 200, "_onx_div0": 200, "_onx_div02": 200, "_onx_div03": 200, "_onx_div_reducesum_where_not_equal_indices2": 232, "_onx_div_sub": 220, "_onx_div_sub_add": 221, "_onx_div_sub_add_1": 221, "_onx_div_sub_add_7": 240, "_onx_div_sub_clon": 240, "_onx_equal_indic": 232, "_onx_gather__to_copi": 240, "_onx_gatherelements_logsoftmax_x": 232, "_onx_greater_x": 232, "_onx_lessorequal_detach_1": 204, "_onx_log_add": 105, "_onx_logsoftmax_x": 232, "_onx_matmul0": 230, "_onx_matmul_cat": 221, "_onx_matmul_layer_norm": 240, "_onx_matmul_layer_norm2": 240, "_onx_matmul_layer_norm3": 240, "_onx_matmul_layer_norm4": 240, "_onx_matmul_layer_norm_1": [221, 240], "_onx_matmul_layer_norm_12": 240, "_onx_matmul_layer_norm_13": 240, "_onx_matmul_layer_norm_14": 240, "_onx_matmul_mul_11": 240, "_onx_matmul_mul_20": 240, "_onx_matmul_relu": [221, 232], "_onx_matmul_view_12": 240, "_onx_matmul_view_8": 240, "_onx_matmul_x": [230, 232], "_onx_matmul_x2": 230, "_onx_mul0": 200, "_onx_mul010": 200, "_onx_mul011": 200, "_onx_mul012": 200, "_onx_mul013": 200, "_onx_mul014": 200, "_onx_mul015": 200, "_onx_mul016": 200, "_onx_mul017": 200, "_onx_mul018": 200, "_onx_mul019": 200, "_onx_mul02": 200, "_onx_mul020": 200, "_onx_mul021": 200, "_onx_mul022": 200, "_onx_mul023": 200, "_onx_mul024": 200, "_onx_mul025": 200, "_onx_mul026": 200, "_onx_mul027": 200, "_onx_mul028": 200, "_onx_mul029": 200, "_onx_mul03": 200, "_onx_mul030": 200, "_onx_mul031": 200, "_onx_mul032": 200, "_onx_mul033": 200, "_onx_mul034": 200, "_onx_mul035": 200, "_onx_mul04": 200, "_onx_mul05": 200, "_onx_mul06": 200, "_onx_mul07": 200, "_onx_mul08": 200, "_onx_mul09": 200, "_onx_mul__to_copy_1": 240, "_onx_mul_add_11": 240, "_onx_mul_add_4": 240, "_onx_mul_add_x": 169, "_onx_mul_concat_neg_split_split_x_0_1": 169, "_onx_mul_concat_neg_split_x_1": 240, "_onx_mul_expand": 240, "_onx_mul_floordiv": 220, "_onx_mul_linear_10": 240, "_onx_mul_linear_4": 240, "_onx_mul_matmul": 221, "_onx_mul_matmul2": 221, "_onx_mul_matmul_1": 240, "_onx_mul_matmul_2": 221, "_onx_mul_matmul_3": 240, "_onx_mul_mul_x": 169, "_onx_mul_pow_1": 240, "_onx_mul_pow_2": 240, "_onx_mul_pow_x": 169, "_onx_mul_split_x_0": 169, "_onx_mul_x": [169, 232, 240], "_onx_neg_gatherelements_logsoftmax_x": 232, "_onx_neg_split_split_x_0_1": 169, "_onx_neg_split_x_1": 240, "_onx_not_equal_indic": 232, "_onx_pow_x": 169, "_onx_reducesum0": 200, "_onx_reducesum_not_equal_indic": 232, "_onx_reducesum_where_not_equal_indices2": 232, "_onx_scatternd0": 200, "_onx_split_split_x_0_0": 169, "_onx_split_split_x_0_1": 169, "_onx_split_x_0": [169, 240], "_onx_split_x_1": [169, 240], "_onx_tanh_mul_add_x": 169, "_onx_unsqueeze0": 200, "_onx_where0": 200, "_onx_where_greater_x": 232, "_onx_where_not_equal_indic": 232, "_onx_where_not_equal_indices2": 232, "_op": [94, 103, 206, 225, 230], "_opset": 126, "_optim": 206, "_optimize_apply_step": 206, "_optimize_matching_step": 206, "_orig_mod": 204, "_orig_module_cal": 213, "_ortvalues_to_torch_tensor": 225, "_output_from_cache_entri": 206, "_output_index": 109, "_overrid": 206, "_override_composite_implicit_decomp": 206, "_pack_padded_sequence_backward": 89, "_pad_circular": 89, "_pad_enum": 89, "_pad_packed_sequ": 89, "_parameter_renam": [107, 126, 230, 236], "_parent": 126, "_pass": 206, "_pass_infra": 206, "_pattern_to_str": [149, 169], "_plot_torch_sklearn_201_knnpi": 209, "_post_process": 225, "_prelu_kernel": 89, "_prelu_kernel_backward": [89, 91], "_prep_args_for_hash": 206, "_prims_common": 206, "_prims_funct": [10, 103, 230], "_produce_aten_artifact": 206, "_profil": 206, "_propagate_xla_data": 89, "_proxy_placehold": 206, "_python_cod": 206, "_pytre": [107, 205, 206, 213, 236], "_raise_list": 126, "_reconstruct": 206, "_record_function_ent": 89, "_record_function_enter_new": 89, "_record_function_exit": 89, "_recordfunct": 89, "_reflection_pad": 89, "_reflection_pad_backward": 89, "_refresh_values_cach": 206, "_registr": 206, "_remove_annot": 206, "_remove_batch_dim": [89, 107, 212, 236], "_remove_batch_dim_1": [107, 212, 236], "_remove_batch_dim_2": [107, 212, 236], "_remove_batch_dim_3": [107, 212, 236], "_replace_unbacked_bind": 206, "_replace_with_hop_pass_help": 206, "_replication_pad": 89, "_report": 212, "_reshape_alia": 89, "_reshape_from_tensor": 89, "_resolved_onnx_exporter_opt": 6, "_retriev": 104, "_rewrite_rul": 206, "_rowwise_prun": 89, "_run": 206, "_run_onnx_session_with_ortvaluevector": 225, "_safe_softmax": 89, "_saturate_weight_to_fp16": 89, "_scaled_dot_product_attention_math": 89, "_scaled_dot_product_efficient_attent": 92, "_scaled_dot_product_flash_attent": 92, "_scaled_dot_product_flash_attention_for_cpu": 89, "_scaled_dot_product_flash_attention_for_cpu_default": 92, "_schema": 206, "_set_current_nod": 206, "_set_grad_en": 213, "_set_grad_enabled_1": 213, "_shapabl": 126, "_shape_as_tensor": 89, "_shape_help": [10, 189], "_shape_runtim": [10, 189], "_shaperuntim": 250, "_signature_from_cal": 206, "_signature_from_funct": 206, "_sobol_engine_draw": 89, "_softmax": 89, "_softmax_backward_data": [89, 91, 200], "_sparse_bsc_tensor_unsaf": 89, "_sparse_bsr_tensor_unsaf": 89, "_sparse_compressed_tensor_unsaf": 89, "_sparse_coo_tensor_unsaf": 89, "_sparse_csc_tensor_unsaf": 89, "_sparse_csr_tensor_unsaf": 89, "_sparse_log_softmax": 89, "_sparse_mm": 89, "_sparse_softmax": 89, "_sparse_sum": 89, "_spec_0": 205, "_spec_1": 205, "_spec_2": 205, "_special_op_to_decompose_cia": 89, "_split_decomp_table_to_cia_and_python_decomp": 206, "_stacklevel": 91, "_stat": 206, "_stochastic_gradi": 208, "_subclass": [103, 106, 206, 214], "_swap": 205, "_swap_modul": 205, "_sym_sqrt": 91, "_symbol": 96, "_symbolic_trac": [206, 213, 225], "_tensor": 225, "_tensor_or_tensors_to_tupl": 225, "_test": 89, "_test_ambiguous_default": 89, "_test_autograd_multiple_dispatch": 89, "_test_check_tensor": 89, "_test_serialization_subcmul": 89, "_test_string_default": 89, "_thnn_differentiable_gru_cell_backward": 89, "_thnn_differentiable_lstm_cell_backward": 89, "_thnn_fused_lstm_cell_backward": 89, "_to_aten_func": 213, "_to_copi": [89, 240], "_to_copy_1": 240, "_to_copy_22": 240, "_to_cpu": 89, "_to_functional_tensor": 206, "_torch_help": [10, 103], "_trace": [206, 213, 236], "_trace_forward_execut": 213, "_trace_inn": 213, "_trace_wrapped_higher_order_op": [107, 212, 236], "_traceback": 206, "_transform_ind": 209, "_translate_function_signature_common": 206, "_translate_fx_graph": 206, "_tree_map_with_path": 213, "_try_export_no_bypass_export": 213, "_type_check": 206, "_unique_nam": [126, 230], "_unique_node_nam": [126, 230], "_unittest": 247, "_unlift": 206, "_unlift_exported_program_lifted_st": 206, "_unsafe_index": 89, "_unsafe_index_put": [89, 91], "_unsafe_index_tensor": 91, "_unsafe_masked_index": 89, "_unsafe_masked_index_put_accumul": 89, "_unsafe_view": [89, 225], "_unsafe_view_3": 200, "_unsafe_view_4": 200, "_unsafe_view_5": 200, "_unsafe_view_6": 200, "_untrace_forward_execut": 213, "_update_metadata_prop": 206, "_update_shape_types_with_proto": 232, "_update_shape_types_with_proto_one_result": 232, "_update_structures_with_proto": [200, 232], "_upsample_bicubic2d_aa": 89, "_upsample_bilinear2d_aa": 89, "_upsample_linear_vec": 89, "_upsample_nearest_exact1d": 89, "_upsample_nearest_exact2d": 89, "_upsample_nearest_exact3d": 89, "_upsample_nearest_exact_vec": 89, "_upsample_nearest_vec": 89, "_use_cudnn_rnn_flatten_weight": 89, "_util": 225, "_valid_mask": 209, "_validate_sparse_bsc_tensor_arg": 89, "_validate_sparse_bsr_tensor_arg": 89, "_validate_sparse_compressed_tensor_arg": 89, "_validate_sparse_coo_tensor_arg": 89, "_validate_sparse_csc_tensor_arg": 89, "_validate_sparse_csr_tensor_arg": 89, "_valu": [126, 230], "_version": 89, "_vmap_decrement_nest": 212, "_vmap_decrement_nesting_1": 212, "_vmap_decrement_nesting_2": 212, "_vmap_decrement_nesting_3": 212, "_vmap_increment_nest": 212, "_vmap_increment_nesting_1": 212, "_vmap_increment_nesting_2": 212, "_vmap_increment_nesting_3": 212, "_weight": 209, "_weight_norm": 89, "_weight_norm_differentiable_backward": 89, "_weight_norm_interfac": 89, "_wrapped_call_impl": [213, 225], "_wrapped_linear_prepack": 89, "_wrapped_quantized_linear_prepack": 89, "_zn3c105errorc2ens_14sourcelocationenst7__cxx1112basic_stringicst11char_traitsicesaicee": 247, "a0": [105, 213], "a1": [105, 209, 213, 219], "a14388": 213, "a14911": 213, "a1s1": 105, "a1s10x5": 209, "a1s1x10": 209, "a1s1x11": 209, "a1s40x50": 209, "a1s5x4": 105, "a2": [105, 209], "a3": [105, 213], "a31": 213, "a32": 213, "a4": 105, "a684e2a": 247, "a7": 213, "aaa": 221, "aaaa": [221, 238], "aazb": 221, "aazi": 221, "ab": [56, 89, 91, 105, 185, 193, 197, 209, 215, 220, 221], "abaa": 221, "abaz": 221, "abc": 206, "abl": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 209, 211, 212, 221, 232], "abolut": 56, "about": [10, 16, 18, 83, 103, 109, 110, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 192, 205, 213, 215, 216, 217, 230, 231, 232], "abov": [55, 103, 109, 126, 128, 205, 213, 215, 216, 217, 223, 235, 236], "abs_": 89, "abs_1": 105, "absolut": [89, 109, 113], "absolute_error": 13, "abspath": 206, "abza": 221, "acceler": 247, "accept": 16, "access": 111, "accessor": 52, "accord": 60, "account": [91, 230], "accumul": 91, "accur": 209, "accuracy_dynamic_r": 57, "accuracy_r": 57, "aco": [89, 91, 185], "acos_": 89, "acosh": [89, 91, 185], "acosh_": 89, "act_fn": [107, 236], "action": 235, "activ": [10, 107, 178, 206, 212, 236], "activation_fn": [212, 213], "activation_grad": [10, 178], "ad": [11, 21, 101, 109, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 200, 208, 221, 230, 243], "adam": 204, "adapt": [91, 131], "adaptive_avg_pool1d": [89, 91], "adaptive_avg_pool2d": [89, 91], "adaptive_avg_pool3d": [89, 91], "adaptive_max_pool1d": 89, "add": [8, 10, 11, 13, 21, 26, 55, 56, 57, 89, 91, 97, 103, 104, 105, 107, 109, 111, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 192, 193, 199, 200, 205, 209, 212, 213, 214, 217, 220, 221, 230, 232, 236, 238, 240, 247], "add_": [89, 91, 107, 205, 212, 236], "add_1": [105, 107, 212, 221, 236, 238, 240], "add_10": [200, 212, 240], "add_11": [200, 212, 240], "add_12": [200, 212, 240], "add_13": [200, 212, 240], "add_14": [200, 240], "add_15": 200, "add_16": 200, "add_17": 200, "add_18": 200, "add_19": 200, "add_1_nod": 172, "add_2": [107, 212, 221, 236, 240], "add_20": 200, "add_21": 200, "add_22": 200, "add_2_output_0": 238, "add_3": [107, 212, 236, 240], "add_4": [107, 212, 236, 240], "add_5": [107, 212, 236, 240], "add_6": [107, 212, 236, 240], "add_7": [107, 212, 236, 240], "add_8": [200, 212, 240], "add_9": [200, 212, 240], "add__1": 205, "add__tensor": 91, "add_aten_as_funct": 104, "add_child": 109, "add_constant_nod": 126, "add_domain": 126, "add_dynamic_dimens": 192, "add_dynamic_object": 126, "add_funct": 126, "add_fx_graph": [126, 131], "add_ind": 209, "add_initi": [126, 206], "add_input": 109, "add_local_functions_to_build": [131, 168], "add_loss_output": 13, "add_nod": [135, 144, 145, 149, 151, 160, 172, 180], "add_output": 109, "add_output_0": 238, "add_paramet": 205, "add_reduction_scatter_nd": [10, 166], "add_scalar": 91, "add_session_config_entri": 206, "add_sourc": 126, "add_stat": 126, "add_submodul": 205, "add_tensor": 91, "add_tensor13": 200, "add_tensor14": 200, "add_tensor3": 200, "add_tensor4": 200, "add_validate_param": 131, "addadd": [26, 28, 158, 161], "addaddmulmul": 161, "addaddmulmulbroadcast": 161, "addaddmulmulbroadcastpattern": [158, 161, 244], "addaddmulmulpattern": [158, 161, 244], "addbmm_": 89, "addcdiv": 89, "addcdiv_": 89, "addcmul": [89, 91], "addcmul_": 89, "addit": [3, 13, 51, 60, 69, 108, 126, 131, 133, 151, 209, 230, 232], "additional_input": [91, 215], "addmm": [89, 204, 230], "addmm_": 89, "addmmbackward0": 204, "addmul": [26, 28, 158, 161], "addmulbroadcast": 161, "addmulbroadcastpattern": [158, 161, 244], "addmulpattern": [158, 161, 244], "addmulsharedinput": 161, "addmulsharedinputbroadcast": 161, "addmulsharedinputbroadcastpattern": [158, 161, 244], "addmulsharedinputpattern": [158, 161, 244], "addmultranspos": 161, "addmultransposepattern": [158, 161, 244], "addmv": 89, "addmv_": 89, "addr": 89, "addreductionscatternd": [165, 166], "addsharedinput": [26, 28, 158, 161], "addtion": [133, 146], "adinplaceorview": 219, "adjust": [88, 89, 209], "aei": 232, "affine_grid_gener": 89, "affine_grid_generator_backward": 89, "after": [4, 10, 11, 56, 60, 88, 89, 91, 101, 103, 104, 107, 109, 111, 121, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 191, 200, 202, 204, 206, 209, 221, 223, 230, 232, 250], "afterward": [60, 62, 126], "aftr": 126, "again": [126, 215, 217, 218, 219, 221, 247], "against": [11, 103, 236], "agg": [200, 232], "aggreg": [10, 57, 58, 170, 171, 232], "ai": [123, 170, 206, 244], "ai21": 116, "ai21lab": 116, "aim": 223, "albertformaskedlm": 223, "albertforquestionansw": 223, "algorithm": [69, 88, 89, 121, 126, 128, 131, 132, 203, 230], "alia": [89, 94, 103, 107, 126, 212, 236], "alias": 215, "alias_1": 212, "alias_2": 212, "alias_3": 212, "alias_4": 212, "alias_5": 212, "alias_6": 212, "alias_copi": 89, "align": [133, 148, 221, 251], "align_a": 89, "align_corn": 91, "align_tensor": 89, "all": [3, 4, 10, 11, 13, 21, 51, 57, 58, 59, 60, 62, 69, 89, 91, 103, 109, 110, 111, 113, 123, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 186, 190, 192, 193, 195, 196, 200, 205, 206, 209, 211, 213, 215, 216, 217, 219, 221, 223, 225, 230, 232, 235, 241, 244, 247, 250, 251], "all_dim": 91, "all_gather_into_tensor": 89, "all_gather_into_tensor_coalesc": 89, "all_inst": 181, "all_keypath_leav": 213, "all_nan_dist_mask": 209, "all_nan_receivers_idx": 209, "all_out": 89, "all_reduc": 89, "all_reduce_coalesc": 89, "all_tensors_to_one_fil": 127, "all_to_all_singl": 89, "allenailongformerbas": 223, "alloc": [133, 142, 224, 225], "allow": [13, 26, 60, 88, 89, 91, 103, 110, 125, 126, 131, 133, 142, 145, 158, 161, 192, 208, 223], "allow_empti": 126, "allow_new_dynamic_dimens": 126, "allow_non": 126, "allow_reshap": 145, "allow_running_as_root": 247, "allow_unknown": 125, "allow_untyped_output": [103, 126], "allow_zero": 126, "allowed_configur": 60, "allows_single_node_partit": 90, "allowzero": [186, 206], "almost": 104, "almostdonothingpattern": 133, "along": [213, 232], "alpha": [13, 91, 172, 178, 204, 206, 221, 230], "alpha_dropout": 89, "alreadi": [13, 56, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 230, 232, 236], "also": [103, 109, 126, 129, 131, 133, 145, 192, 196, 197, 203, 205, 209, 211, 213, 214, 217, 219, 220, 221, 230, 231, 244], "alter": [131, 232, 251], "although": [60, 62], "altogeth": 103, "alwai": [4, 109, 126, 192, 211, 230], "always_fals": 225, "amax": [89, 91, 105, 209], "ambigu": [131, 193], "ami": 230, "amin": 89, "aminmax": 89, "among": 89, "amp": 225, "amp_definitely_not_avail": 225, "an": [10, 11, 13, 16, 18, 21, 26, 51, 58, 60, 62, 83, 88, 89, 91, 101, 103, 104, 105, 107, 109, 110, 111, 113, 122, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 206, 207, 209, 210, 211, 213, 216, 217, 221, 223, 230, 231, 232, 235, 236, 241, 242, 244, 247, 248, 250], "anann100nan": 209, "anann10nan": 209, "anann1333nan": 209, "anann1nan": 209, "anann20nan": 209, "anann33nan": 209, "anann80nan": 209, "and_": 91, "and_1": [107, 212, 236, 240], "and_2": [107, 212, 236, 240], "and_3": 212, "and_4": 212, "angl": 91, "ani": [4, 6, 9, 10, 11, 13, 15, 16, 19, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 83, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 122, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 186, 190, 191, 192, 193, 201, 204, 206, 208, 209, 212, 213, 214, 216, 218, 219, 221, 223, 230, 231, 232, 235], "anoth": [18, 104, 109, 113, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 207, 213, 215, 220, 221, 232, 246, 249], "antialia": 91, "anyop": 202, "anyth": [126, 132, 192], "anywai": 126, "aocq": 221, "aot": [6, 206], "aot0": 206, "aot1": 206, "aot_autograd": [89, 204, 225], "aot_compil": [89, 204], "aot_export": 213, "aotautograd": [204, 224], "api": [10, 21, 109, 191, 197, 198, 205, 213, 214, 217, 231, 234, 247, 248], "appear": [104, 193, 230, 247], "append": [8, 91, 126, 131, 198, 206, 209, 225, 232, 240], "append_custom_librari": 8, "appi": 215, "appli": [55, 56, 60, 69, 83, 88, 89, 103, 109, 121, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 193, 200, 202, 204, 208, 217, 221, 225, 230, 231, 240, 244, 250], "applic": [69, 168, 169], "apply_castpattern": [200, 221], "apply_constant_fold": [200, 232], "apply_constant_folding__reshap": 232, "apply_constant_folding__transpos": 232, "apply_constant_folding_new_init": [200, 232], "apply_expandbroadcastpattern": 200, "apply_fusedmatmulpattern": 221, "apply_gemmtransposepattern": 232, "apply_identitypattern": 221, "apply_layernormalizationpattern": 221, "apply_match": [131, 206, 232], "apply_matmuladdpattern": [200, 232], "apply_matmulreshape2of3pattern": 200, "apply_model": 157, "apply_mulmulmulscalarpattern": 200, "apply_patch": 56, "apply_pattern": [131, 143, 169, 172, 202], "apply_rotary_pos_emb": [107, 212, 236], "apply_runtime_assertion_pass": 206, "apply_skiplayernormalizationpattern": 221, "apply_step": [200, 232], "apply_to_model": 206, "apply_transposeequalreshapepattern": 232, "approach": 205, "appropri": [104, 230], "approrpi": 104, "approxim": [10, 91], "ar": [10, 11, 13, 16, 21, 57, 60, 91, 92, 103, 104, 107, 109, 110, 111, 113, 115, 118, 119, 120, 123, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 186, 190, 195, 202, 205, 206, 208, 209, 211, 212, 213, 217, 219, 221, 223, 230, 232, 236, 244, 249, 250], "arang": [89, 91, 97, 107, 209, 212, 236], "arange_1": [107, 212, 236], "arange_2": [107, 212, 236], "arange_3": 212, "arange_default": 89, "arange_start": 89, "arcco": 89, "arccosh": 89, "architectur": [57, 212, 213, 214, 216, 230], "arcsin": 89, "arcsinh": 89, "arctan": 89, "arctan2": 89, "arctanh": 89, "arg": [9, 10, 16, 17, 26, 55, 59, 60, 62, 71, 72, 73, 74, 75, 76, 77, 79, 83, 88, 89, 90, 91, 93, 96, 101, 103, 104, 105, 106, 107, 109, 110, 111, 122, 126, 127, 131, 193, 197, 201, 204, 205, 206, 207, 209, 213, 215, 216, 217, 218, 219, 221, 230, 236], "arg0_1": [205, 213, 217, 230], "arg1_1": [205, 213, 217, 230], "arg2_1": [205, 213, 217, 230], "arg3_1": [205, 217], "arg4_1": [205, 217], "arg5_1": 205, "arg6_1": 205, "arg7_1": 205, "argm": 209, "argmax": 91, "args_0": 205, "args_1": 205, "args_activation_s": 201, "args_nam": 110, "args_node_index": 201, "args_op_nam": 201, "args_output_s": 201, "args_parameter_s": 201, "args_provid": 201, "args_thread_scheduling_stat": 201, "argsort": 89, "argument": [3, 4, 10, 13, 18, 55, 57, 58, 59, 88, 89, 101, 103, 107, 108, 109, 110, 111, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 193, 204, 206, 214, 224, 230, 232, 236, 242, 244, 245], "argwher": 89, "aris": 235, "arnir0": [116, 216], "around": [9, 60, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 196, 206, 230, 231, 232, 249], "arr": 16, "arrai": [10, 16, 19, 51, 89, 103, 106, 126, 129, 186, 192, 198, 200, 201, 204, 206, 207, 208, 209, 217, 219, 220, 221, 230, 231, 232, 240, 247], "as_funct": [55, 103, 109, 126], "as_graph_proto": 126, "as_list": [89, 131], "as_proto": 182, "as_rst": [133, 157, 161, 166, 168, 170, 178], "as_shap": [126, 192], "as_strid": [89, 91], "as_strided_copi": 89, "as_strided_scatt": 89, "as_tupl": [91, 209], "asin": [89, 91, 185, 230], "asin_": 89, "asinh": [89, 91, 185], "asinh_": 89, "ask": 230, "assert": [91, 126, 182, 206, 209, 216, 218, 219, 230], "assert_all_clos": 113, "assert_found": 114, "assertalmostequ": 10, "assertempti": 10, "assertequ": 10, "assertequalarrai": 10, "assertequalor": 10, "assertexist": 10, "assertgreaterorequ": 10, "assertin": 10, "assertionerror": [206, 217, 218, 219, 230], "assertnotempti": 10, "assertrais": 10, "assertsetcontain": 10, "assertstartswith": 10, "asserttru": 10, "assess": 248, "assign": [170, 171], "associ": [60, 213, 216, 235], "assum": [11, 13, 16, 20, 91, 105, 110, 113, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 193, 202, 213, 223, 230, 232], "assume_uniqu": 91, "ast": [190, 203, 206, 250], "ast_util": 206, "astyp": [21, 198, 200, 201, 203, 206, 208, 209, 230, 232], "atan": [89, 91, 185], "atan2": 89, "atan2_": 89, "atan_": 89, "atanh": [89, 91, 185], "atanh_": 89, "aten": [69, 89, 91, 92, 101, 103, 104, 105, 106, 107, 111, 121, 126, 197, 205, 206, 207, 212, 213, 215, 217, 219, 220, 221, 225, 230, 236], "aten___and___tensor": 91, "aten___or___tensor": 91, "aten__adaptive_avg_pool2d": 91, "aten__assert_scalar": 91, "aten__assert_tensor_metadata": 91, "aten__embedding_bag": 91, "aten__enter_autocast": 91, "aten__exit_autocast": 91, "aten__fft_r2c": 91, "aten__fftn_onnx": 91, "aten__log_api_usage_onc": 91, "aten__log_softmax": 91, "aten__log_softmax_backward_data": 91, "aten__native_batch_norm": 91, "aten__native_batch_norm_legit_no_stat": 91, "aten__native_batch_norm_legit_no_train": 91, "aten__prelu_kernel": 91, "aten__prelu_kernel_backward": 91, "aten__scaled_dot_product_efficient_attent": 92, "aten__scaled_dot_product_flash_attent": 92, "aten__scaled_dot_product_flash_attention_for_cpu": 92, "aten__set_grad_en": 91, "aten__softmax": 91, "aten__softmax_backward_data": 91, "aten__sym_sqrt": 91, "aten__to_copi": 91, "aten__unsafe_index_put": 91, "aten__unsafe_index_tensor": 91, "aten__unsafe_view": 91, "aten_ab": 91, "aten_aco": 91, "aten_acosh": 91, "aten_adaptive_avg_pool1d": 91, "aten_adaptive_avg_pool2d": 91, "aten_adaptive_avg_pool3d": 91, "aten_add": 91, "aten_add__tensor": 91, "aten_add_scalar": 91, "aten_add_tensor": 91, "aten_addcmul": 91, "aten_addmm": [91, 230], "aten_al": 91, "aten_alia": 91, "aten_all_dim": 91, "aten_amax": 91, "aten_and": 91, "aten_and_": 91, "aten_ani": 91, "aten_any_dim": 91, "aten_arang": 91, "aten_arange_start": 91, "aten_arange_start_step": 91, "aten_argmax": 91, "aten_as_funct": [103, 107, 230, 236], "aten_as_strid": 91, "aten_asin": [91, 230], "aten_asinh": 91, "aten_atan": 91, "aten_atanh": 91, "aten_auto_function": 91, "aten_avg_pool2d": 91, "aten_avg_pool2d_backward": 91, "aten_avg_pool3d": 91, "aten_baddbmm": 91, "aten_batch_norm": 91, "aten_bitwise_and": 91, "aten_bitwise_and_tensor": 91, "aten_bitwise_not": 91, "aten_bitwise_or": 91, "aten_bitwise_or__tensor": 91, "aten_bitwise_or_tensor": 91, "aten_bmm": 91, "aten_broadcast_tensor": 91, "aten_cat": 91, "aten_ceil": 91, "aten_celu": 230, "aten_chunk": 91, "aten_clamp": 91, "aten_clamp_max": 91, "aten_clamp_min": 91, "aten_clamp_tensor": 91, "aten_clip": 91, "aten_clon": 91, "aten_co": 91, "aten_col2im": 91, "aten_cond": 91, "aten_constant_pad_nd": 91, "aten_contigu": 91, "aten_conv1d": 91, "aten_conv2d": 91, "aten_conv2d_pad": 91, "aten_conv3d": 91, "aten_conv_transpose2d_input": 91, "aten_conv_transpose3d_input": 91, "aten_conversion_chang": 121, "aten_convolut": 91, "aten_copi": [91, 230], "aten_copy_": 91, "aten_cosh": 91, "aten_cross_entropy_loss": 91, "aten_cudnn_batch_norm": 91, "aten_cumsum": 91, "aten_detach": 91, "aten_detach_": 91, "aten_diff": 91, "aten_div": 91, "aten_div__tensor": 91, "aten_div_scalar": 91, "aten_div_tensor": 91, "aten_div_tensor_mod": 91, "aten_dropout": 91, "aten_dropout_": 91, "aten_einsum": 91, "aten_elu": [91, 103], "aten_elu_": 91, "aten_embed": 91, "aten_embedding_bag_padding_idx": 91, "aten_empty_lik": 91, "aten_empty_memory_format": 91, "aten_empty_permut": 91, "aten_empty_strid": 91, "aten_eq": 91, "aten_eq_scalar": 91, "aten_eq_tensor": 91, "aten_erf": 91, "aten_exp": 91, "aten_expand": 91, "aten_expand_a": 91, "aten_expm1": 91, "aten_export_artifact": 213, "aten_feature_dropout": 91, "aten_fft_fft": 91, "aten_fft_fft2": 91, "aten_fft_ifft": 91, "aten_fft_ifft2": 91, "aten_fill_scalar": 91, "aten_fill_tensor": 91, "aten_flatten": 91, "aten_flatten_using_int": [91, 206], "aten_floor": 91, "aten_floor_divid": 91, "aten_floordiv": 91, "aten_fmod_scalar": 91, "aten_ful": 91, "aten_full_lik": 91, "aten_funct": [10, 103, 236], "aten_functionctx": 91, "aten_g": 91, "aten_gath": 91, "aten_ge_scalar": 91, "aten_ge_tensor": 91, "aten_gelu": 91, "aten_getattr": 91, "aten_grid_sampl": 91, "aten_grid_sampler_2d": 91, "aten_group_norm": 91, "aten_gt": 91, "aten_gt_scalar": 91, "aten_gt_tensor": 91, "aten_hardsigmoid": 91, "aten_hardswish": 91, "aten_hardswish_": 91, "aten_hardtanh": 91, "aten_hardtanh_": 91, "aten_hardtanh_backward": 91, "aten_iadd": 91, "aten_im2col": 91, "aten_imul": 91, "aten_index_add": 91, "aten_index_copi": 91, "aten_index_put": 91, "aten_index_put_": 91, "aten_index_select": 91, "aten_index_tensor": 91, "aten_instance_norm": 91, "aten_interpol": 91, "aten_isin": 91, "aten_isin_tensor_tensor": 91, "aten_isinf": 91, "aten_isnan": 91, "aten_item": 91, "aten_l": 91, "aten_l1_loss": 91, "aten_layer_norm": 91, "aten_le_scalar": 91, "aten_le_tensor": 91, "aten_leaky_relu": 91, "aten_leaky_relu_": 91, "aten_leaky_relu_backward": 91, "aten_lift_fresh_copi": 91, "aten_linalg_vector_norm": 91, "aten_linear": [91, 206], "aten_linspac": 91, "aten_local_funct": [207, 221, 230], "aten_log": 91, "aten_log_softmax_int": 91, "aten_logical_and": 91, "aten_logical_not": 91, "aten_logical_or": 91, "aten_lt": 91, "aten_lt_scalar": 91, "aten_lt_tensor": 91, "aten_masked_fill__scalar": 91, "aten_masked_fill_scalar": 91, "aten_masked_fill_tensor": 91, "aten_masked_scatt": 91, "aten_matmul": 91, "aten_max": 91, "aten_max_dim": 91, "aten_max_oth": 91, "aten_max_pool1d": 91, "aten_max_pool2d": 91, "aten_max_pool2d_with_indic": 91, "aten_max_pool3d": 91, "aten_max_pool3d_with_indic": 91, "aten_maximum": 91, "aten_mean": 91, "aten_mean_dim": 91, "aten_meshgrid": 91, "aten_meshgrid_index": 91, "aten_meth___eq__": 93, "aten_meth_bool": 93, "aten_meth_clamp_max": 93, "aten_meth_clamp_min": 93, "aten_meth_clon": 93, "aten_meth_co": 93, "aten_meth_contigu": 93, "aten_meth_cpu": 93, "aten_meth_detach": 93, "aten_meth_eq": 93, "aten_meth_expand": 93, "aten_meth_expand_a": 93, "aten_meth_float": 93, "aten_meth_item": 93, "aten_meth_masked_fil": 93, "aten_meth_masked_fill_": 93, "aten_meth_mean": 93, "aten_meth_numel": 93, "aten_meth_pow": 93, "aten_meth_repeat": 93, "aten_meth_reshap": 93, "aten_meth_s": 93, "aten_meth_sin": 93, "aten_meth_sum": 93, "aten_meth_t": 93, "aten_meth_to": 93, "aten_meth_transpos": 93, "aten_meth_unsqueez": 93, "aten_meth_view": 93, "aten_method": [10, 103], "aten_min": 91, "aten_min_oth": 91, "aten_minimum": 91, "aten_mm": 91, "aten_mod": 91, "aten_mse_loss": 91, "aten_mul": 91, "aten_mul__tensor": 91, "aten_mul_scalar": 91, "aten_mul_tensor": 91, "aten_multinomi": 91, "aten_multiply_tensor": 91, "aten_n": 91, "aten_nan_to_num": 91, "aten_native_dropout": 91, "aten_native_group_norm": 91, "aten_native_layer_norm": 91, "aten_ne_scalar": 91, "aten_ne_tensor": 91, "aten_neg": 91, "aten_new_on": 91, "aten_new_zero": 91, "aten_nll_loss_forward": 91, "aten_nonzero": 91, "aten_nonzero_numpi": 91, "aten_not": 91, "aten_not_": 91, "aten_numpy_t": 91, "aten_on": 91, "aten_one_hot": 91, "aten_ones_lik": 91, "aten_or": 91, "aten_out": 91, "aten_pad": 91, "aten_permut": 91, "aten_polar": 91, "aten_pow": 91, "aten_pow__scalar": 91, "aten_pow_scalar": 91, "aten_pow_tensor_scalar": 91, "aten_pow_tensor_tensor": 91, "aten_prelu": 91, "aten_prod": 91, "aten_prod_dim_int": 91, "aten_reciproc": 91, "aten_reflection_pad2d": 91, "aten_relu": 91, "aten_relu_": 91, "aten_remaind": 91, "aten_remainder_scalar": 91, "aten_remainder_tensor": 91, "aten_repeat": 91, "aten_repeat_interleav": 91, "aten_repeat_interleave_self_int": 91, "aten_repeat_interleave_self_tensor": 91, "aten_repeat_interleave_tensor": 91, "aten_reshap": 91, "aten_reshape_a": 91, "aten_rol": 91, "aten_round": 91, "aten_rrelu_with_noise_backward": 91, "aten_rsqrt": 91, "aten_rsub": 91, "aten_rsub_scalar": 91, "aten_scalar_tensor": 91, "aten_scaled_dot_product_attent": 92, "aten_scan": 91, "aten_scatter__src": 91, "aten_scatter_add": 91, "aten_scatter_add_": 91, "aten_scatter_reduce__two": 91, "aten_scatter_reduce_two": 91, "aten_scatter_src": 91, "aten_select_copy_int": 91, "aten_select_int": 91, "aten_select_scatt": 91, "aten_selu": 91, "aten_setitem": 91, "aten_sigmoid": 91, "aten_sigmoid_": 91, "aten_sigmoid_backward": 91, "aten_sign": 91, "aten_silu": 91, "aten_silu_": 91, "aten_sin": 91, "aten_sinh": 91, "aten_slice_backward": 91, "aten_slice_scatt": 91, "aten_slice_tensor": 91, "aten_softmax": 91, "aten_softmax_int": 91, "aten_softplu": 91, "aten_split_tensor": 91, "aten_split_with_s": 91, "aten_sqrt": 91, "aten_squeez": 91, "aten_squeeze_dim": 91, "aten_stack": 91, "aten_std_dim": 91, "aten_sub": 91, "aten_sub__tensor": 91, "aten_sub_tensor": 91, "aten_sum": 91, "aten_sum_dim_intlist": 91, "aten_sym_constrain_range_for_s": 91, "aten_sym_max": 91, "aten_sym_min": 91, "aten_sym_not": 91, "aten_sym_size_int": 91, "aten_t": 91, "aten_tak": 91, "aten_tan": 91, "aten_tanh": 91, "aten_tanh_backward": 91, "aten_tensor": 91, "aten_threshold_backward": 91, "aten_to": 91, "aten_to_devic": 91, "aten_to_dtyp": 91, "aten_to_dtype_layout": 91, "aten_topk": 91, "aten_transpos": 91, "aten_transpose_int": 91, "aten_tril": 91, "aten_triu": 91, "aten_truediv": 91, "aten_type_a": 91, "aten_unbind_int": 91, "aten_unflatten_int": 91, "aten_unfold": 91, "aten_unsqueez": 91, "aten_unsqueeze_": 91, "aten_upsample_bicubic2d": 91, "aten_upsample_bicubic2d_vec": 91, "aten_upsample_bilinear2d": 91, "aten_upsample_bilinear2d_vec": 91, "aten_upsample_linear1d_vec": 91, "aten_upsample_nearest2d": 91, "aten_upsample_nearest2d_vec": 91, "aten_upsample_nearest3d": 91, "aten_upsample_nearest3d_vec": 91, "aten_upsample_trilinear3d": 91, "aten_upsample_trilinear3d_vec": 91, "aten_view": 91, "aten_wher": 91, "aten_where_scalar": 91, "aten_where_scalaroth": 91, "aten_where_scalarself": 91, "aten_where_self": 91, "aten_wrap_with_autocast": 91, "aten_wrap_with_set_grad_en": 91, "aten_zero": 91, "aten_zeros_lik": 91, "atleast_1d": 89, "atleast_2d": 89, "atleast_3d": 89, "atol": [10, 105, 106, 109, 113, 209], "atol_rtol_float": 89, "atol_rtol_tensor": 89, "att": [16, 201, 217], "att_nam": [126, 131, 191], "attach": [110, 236], "attempt": [60, 205, 214, 248], "attent": [26, 56, 122, 133, 135, 179, 182, 221, 238, 247], "attention_0": 221, "attention_1": [221, 238], "attention_bia": [212, 213, 214], "attention_dropout": [212, 213, 214], "attention_interfac": [107, 212, 236], "attention_mask": [107, 117, 212, 213, 214, 216, 236, 240], "attention_norm": 221, "attention_sc": [107, 212, 236], "attentionblock": [122, 221], "attn": 247, "attn_bia": 92, "attn_impl": [56, 60, 63, 64, 65, 66, 67, 68], "attn_mask": 92, "attn_output": [107, 126, 212, 236], "attn_weight": [92, 107, 212, 236], "attr": 111, "attr_float": 96, "attr_int": 96, "attr_kei": 96, "attr_nam": 91, "attr_po": 96, "attr_str": 96, "attr_typ": 96, "attr_val": 111, "attribut": [16, 55, 60, 103, 104, 109, 111, 126, 131, 191, 230, 232], "attributeerror": [88, 89], "attributeproto": [126, 131, 191], "aulv": 238, "author": 235, "auto": [9, 103, 208, 215], "auto_exampl": 210, "auto_examples_jupyt": 196, "auto_examples_python": 196, "auto_function": 219, "auto_map": [212, 213, 214], "auto_pad": [91, 206], "auto_recip": 222, "auto_recipes_jupyt": 211, "auto_recipes_python": 211, "autocast": [60, 230], "autocast_mod": 225, "autoconfig": [212, 213, 214], "autograd": [206, 225], "autograd_not_implemented_inn": 206, "autom": [21, 60], "automac": 109, "automat": [9, 109, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 209, 230, 232], "automodelforcausallm": [212, 213, 214, 216], "autotoken": 216, "autowrap_funct": 111, "autowrap_modul": 111, "avail": [3, 10, 72, 73, 74, 75, 76, 77, 103, 106, 109, 111, 114, 126, 133, 148, 192, 204, 206, 230, 231, 234, 244, 248, 250], "averag": [10, 206, 209], "averagepool": 91, "averagepoolgrad": [26, 29, 91], "avg": [208, 224, 225], "avg_pool1d": 89, "avg_pool2d": 91, "avg_pool3d": 91, "avgpool": 91, "avoi": 10, "avoid": [4, 60, 109, 126, 128, 133, 136, 144, 154, 190, 209, 216, 217, 220, 230, 232, 248], "ax": [10, 193, 201, 206], "axb": 230, "axfk": 238, "axi": [91, 93, 111, 126, 131, 133, 143, 152, 170, 171, 172, 178, 198, 200, 203, 209, 215, 220, 221, 232, 240], "ayaa": 221, "azaa": 221, "azur": 10, "b": [10, 71, 89, 91, 111, 126, 131, 133, 143, 145, 146, 158, 161, 168, 169, 172, 176, 178, 194, 200, 202, 203, 206, 230, 232, 246, 248], "b8": [107, 212, 213, 217, 236], "b_": 221, "b_decoder_attention_attention_0_mask": 221, "b_decoder_attention_attention_1_mask": 221, "b_model_rotary_emb_inv_freq": [107, 212, 236], "baaa": [221, 238], "back": [207, 212, 248], "backed_size_oblivi": [9, 103, 213], "backend": [26, 69, 79, 80, 81, 88, 89, 90, 113, 121, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 217, 224, 225, 227, 230, 231, 237, 241, 247], "backend_api": 197, "backend_debug": 89, "backend_funct": 90, "backend_help": [10, 89], "backend_partition_compil": 90, "backend_with_compiler_demo": 197, "backendwithcompilerdemo": 197, "backpropag": 208, "backward": [89, 91, 111, 200, 204, 208, 225, 230], "baddbmm": [89, 91], "baddbmm_": 89, "badw": 221, "baew": 221, "ban_prefix": 190, "bar": [103, 126, 206], "barh": 206, "bartforcausallm": 223, "bartforconditionalgener": 223, "base": [4, 60, 69, 88, 89, 103, 104, 109, 113, 126, 131, 133, 148, 168, 196, 197, 198, 199, 201, 202, 204, 205, 206, 208, 210, 216, 229, 230, 232, 241, 250, 251], "baseestim": 55, "baselin": 57, "basemodeloutputwithpast": 213, "bash": [59, 247], "bash_bench": 59, "bash_bench_agg": [10, 84, 223], "bash_bench_explicit": [10, 84, 223], "bash_bench_huggingfac": [10, 84, 223], "bash_bench_main": 59, "bash_bench_parse_arg": 59, "bash_bench_timm": [10, 84, 223], "bash_bench_torchbench": [10, 84, 223], "bash_bench_torchbench_ado": [10, 84, 223], "bash_bench_untrain": [10, 84, 223], "bash_benchmark": 57, "basic": [192, 230, 244], "basicshapebuild": [192, 203, 250], "batch": [11, 19, 56, 69, 91, 105, 116, 117, 174, 178, 194, 208, 212, 213, 214, 216, 220, 223, 230, 240, 246], "batch1": 91, "batch2": 91, "batch_norm": [10, 91, 178], "batch_norm_backward": 89, "batch_siz": [19, 116, 117, 204, 208, 212, 213, 214, 216], "batch_size_on": [56, 60], "batchnorm": [133, 144], "batchnormalizationpattern": [131, 133, 144, 221, 232, 244], "batchnormalizationtrain": 133, "batchnormalizationtrainingpattern": [131, 133, 144, 221, 232, 244], "battlewat": 216, "bbba": 221, "bcve": 221, "becam": 131, "becaus": [89, 133, 148, 193, 202, 209, 213, 215], "becom": [21, 101], "befor": [6, 10, 19, 55, 56, 60, 63, 64, 65, 66, 67, 68, 88, 89, 103, 105, 109, 110, 121, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 206, 208, 209, 223, 230, 232, 244, 251], "begin": [56, 89, 109, 193, 206, 236], "behav": [89, 126], "behavior": [60, 126], "behaviour": [205, 221], "being": [126, 209], "belong": 126, "below": [13, 57, 58, 89, 126, 128, 131, 181, 191, 230, 244], "bench1": 223, "bench2": 223, "bench_run": [10, 17], "benchark": 223, "benchmark": [56, 60, 63, 64, 65, 66, 67, 68, 223, 228, 249], "benchmarkerror": 4, "benchmarkrunn": [56, 223], "bernoulli": 89, "bertformaskedlm": 223, "bertforquestionansw": 223, "besid": [133, 134, 230], "bessel_j0": 89, "bessel_j1": 89, "best": [9, 208, 230, 232], "beta": [13, 91, 204, 206, 230], "better": [10, 16, 109, 110, 131, 133, 145, 196, 198, 201, 202, 205, 207, 208, 210, 223, 230, 241, 250], "between": [18, 57, 102, 104, 131, 209], "beyond": [10, 133, 136, 148], "bfloat16": [107, 185, 212, 213, 214, 236], "bia": [91, 107, 122, 133, 139, 144, 204, 205, 206, 207, 208, 212, 217, 221, 230, 232, 236, 240], "bias2": [221, 230], "biasgelu": [172, 178], "biasgelupattern": [172, 178, 221, 244], "biassoftmax": [26, 172, 178], "biassoftmaxpattern": [172, 178, 221, 244], "big": [20, 103, 126, 129, 131, 192, 196, 202, 203, 205, 209, 210, 213, 221, 232, 241, 243], "bigger": [221, 236], "bilinear": [89, 91], "bin": [223, 247], "binari": [13, 133, 136, 142, 148, 156, 193], "binary_cross_entropi": 89, "binary_cross_entropy_backward": 89, "binary_cross_entropy_with_logit": 89, "binary_nod": [142, 156], "binary_oper": [10, 161], "binaryinvestig": [167, 168], "bind": 236, "bit": 206, "bitshift": 185, "bitwis": 91, "bitwise_and": [89, 91], "bitwise_and_": 89, "bitwise_left_shift": 89, "bitwise_left_shift_": 89, "bitwise_not": [89, 91, 240], "bitwise_not_": 89, "bitwise_or": [89, 91], "bitwise_or_": 89, "bitwise_or__tensor": 91, "bitwise_or_tensor": 91, "bitwise_right_shift": 89, "bitwise_right_shift_": 89, "bitwise_xor": 89, "bitwise_xor_": 89, "bkaa": 238, "black": 247, "black_list_funct": 109, "blenderbotforcausallm": 223, "blenderbotforconditionalgener": 223, "blenderbotsmallforcausallm": 223, "blenderbotsmallforconditionalgener": 223, "blob": [91, 115, 212, 213, 214], "block_diag": 89, "bmm": 91, "bmm_2": 200, "bmm_3": 200, "bmm_4": 200, "bmm_5": 200, "bn_node": 174, "bool": [4, 6, 9, 10, 16, 18, 21, 51, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 83, 88, 89, 90, 91, 92, 93, 97, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 143, 145, 157, 158, 161, 164, 172, 181, 182, 185, 186, 191, 192, 193, 195, 199, 202, 209, 212, 213, 216, 221, 230, 232, 236, 240, 248], "boolean": [9, 103, 109, 126, 131, 230], "bos_token_id": [212, 213, 214, 216], "both": [56, 60, 91, 105, 110, 113, 126, 131, 186, 230, 244], "bound": 26, "boundari": [11, 60, 91, 109, 117, 126, 132, 146], "box": [204, 224], "bqu": 230, "bracket": 104, "branch": [109, 248], "break": [182, 209, 213, 217], "bridg": 108, "broadcast": [89, 97, 126, 131, 133, 142, 145, 146, 158, 161, 193, 214], "broadcast_dimens": 97, "broadcast_shap": 193, "broadcast_tensor": [89, 91], "broadcastgradientarg": 15, "broadcasttyp": 146, "broken": [57, 209], "bucket": [57, 89], "buffer": [107, 197, 205, 212, 236], "bug": [126, 128, 131], "build": [11, 58, 88, 89, 109, 113, 126, 129, 131, 143, 157, 168, 169, 172, 190, 196, 211, 224, 225, 230, 232, 247], "build_c_schema": 109, "build_dir": 247, "build_ext": 247, "build_graph_for_pattern": [200, 221, 232], "build_historical_report": 58, "build_matching_input": 113, "build_model": 129, "build_shape_mapping_indic": 109, "build_shared_lib": 247, "build_wheel": 247, "builder": [55, 89, 101, 103, 104, 107, 108, 109, 122, 125, 126, 131, 132, 203, 230, 236, 245], "builder_emitt": 129, "builderemitt": 129, "built": [89, 103, 104, 106, 107, 111, 206, 225, 230, 232, 236], "builtin": [206, 225], "bupd": 238, "busi": 249, "bvmj": 238, "bypass": [94, 103, 109, 193, 209], "byte": 126, "c": [89, 91, 109, 110, 131, 133, 145, 146, 158, 161, 200, 202, 203, 205, 213, 214, 217, 221, 230, 232, 235, 248], "c04": 143, "c05": 172, "c1": [169, 198, 232], "c10": 232, "c10d_function": 89, "c2": [143, 169, 198], "c3": 143, "c_lifted_tensor_0": 212, "c_lifted_tensor_1": 212, "c_lifted_tensor_2": 212, "c_lifted_tensor_3": 212, "c_model_lifted_tensor_0": [107, 236], "c_model_rotary_emb_lifted_tensor_4": 212, "c_torchknnimputer_columns_0_": 209, "c_torchknnimputer_columns_0___calc_imput": 209, "c_torchknnimputer_dist": 209, "ca": 221, "caaa": 221, "caab": 221, "cach": [60, 116, 117, 126, 133, 149, 212, 213, 214, 230], "cache2": [212, 213, 214], "cache_en": 91, "cache_help": [212, 213, 214, 216], "cache_kwarg": 212, "cache_last_dim": [117, 216], "cache_length": 216, "cache_posit": [107, 212, 213, 216, 236], "cache_util": [62, 213, 216], "calcimput": 209, "calcul": 209, "call": [3, 4, 6, 9, 10, 11, 16, 18, 21, 60, 62, 69, 71, 90, 91, 101, 103, 104, 107, 109, 110, 111, 121, 126, 131, 193, 194, 205, 206, 207, 209, 213, 215, 216, 217, 221, 230, 231, 236, 248, 250, 251], "call_func_at_runtime_with_arg": 225, "call_funct": [104, 105, 107, 111, 197, 205, 206, 207, 209, 215, 217, 218, 219, 221, 230, 236], "call_method": [104, 230], "call_modul": [104, 205, 207, 213, 221, 230], "call_on_ent": 225, "callabl": [4, 10, 16, 21, 60, 61, 83, 88, 89, 90, 101, 103, 104, 107, 109, 111, 121, 131, 193], "can": [9, 11, 13, 16, 18, 20, 57, 58, 60, 69, 89, 90, 101, 103, 105, 107, 109, 111, 117, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 190, 192, 193, 197, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 220, 221, 223, 229, 230, 231, 232, 244, 246, 247, 248, 250], "can_cast": 89, "can_fus": 158, "can_set": 104, "candid": 57, "cannot": [16, 107, 109, 111, 126, 131, 149, 192, 195, 205, 209, 213, 215, 216, 217, 230, 232], "cap": 247, "capability_as_str": 4, "capabl": [57, 223, 249, 251], "capi": 225, "captur": [10, 205, 209, 217, 230], "care": [60, 62], "case": [11, 57, 60, 88, 89, 109, 111, 123, 126, 131, 133, 134, 146, 193, 209, 213, 221, 223, 230, 232, 251], "cast": [91, 93, 97, 126, 128, 131, 133, 136, 140, 142, 144, 161, 163, 185, 193, 198, 199, 200, 232, 240], "cast1": 136, "cast2": 136, "cast2_nod": 147, "cast_1": 144, "cast_2": 144, "cast_aft": 144, "cast_befor": 144, "cast_in_left": 136, "cast_in_right": 136, "cast_nod": [142, 147, 149, 164], "cast_node_aft": 163, "cast_node_befor": 163, "cast_out_nod": 136, "castcast": 133, "castcastbinari": 133, "castcastbinarypattern": [131, 133, 136, 221, 232, 244], "castcastpattern": [131, 133, 136, 221, 232, 244], "castlayernormalizationcast": 133, "castlayernormalizationcastpattern": [131, 133, 144, 221, 232, 244], "castlik": [91, 185, 230], "castlike_15": [26, 30], "castlike_19": [26, 30], "castopcast": 133, "castopcastpattern": [131, 133, 136, 221, 232, 244], "castpattern": [133, 136, 200, 221, 232, 244], "cat": [89, 91, 107, 111, 201, 209, 212, 220, 221, 236], "cat_1": [107, 212, 236], "cat_10": 212, "cat_11": 212, "cat_12": 212, "cat_13": 212, "cat_14": 212, "cat_15": 212, "cat_16": 212, "cat_2": [107, 212, 236], "cat_3": [212, 240], "cat_4": 212, "cat_5": 212, "cat_6": 212, "cat_7": 212, "cat_8": 212, "cat_9": [212, 240], "catch": [10, 56, 109], "catch_warn": [206, 209, 236], "cauchi": 89, "cauchy_": 89, "caus": [131, 205, 236], "causal_mask": [107, 212, 236], "causallmoutputwithpast": [213, 216], "causalmask": [133, 149], "ccol_row_valu": 89, "ccol_row_value_s": 89, "cd": 247, "cdist": [89, 215], "ceil": [89, 91, 185], "ceil_": 89, "ceil_mod": [91, 206], "ceiltoint": 203, "celu": [89, 185, 230], "celu_": 89, "celu_default": 230, "center": [89, 206], "cerberu": 247, "chain_matmul": 89, "chalf": 89, "chang": [4, 56, 60, 101, 103, 107, 109, 126, 127, 131, 132, 133, 136, 142, 185, 205, 211, 212, 215, 217, 225, 230, 232, 234, 246], "channel": 206, "channel_shuffl": 89, "channels_last": 206, "char": [10, 234], "charg": 235, "check": [3, 4, 8, 10, 17, 56, 60, 89, 91, 103, 107, 109, 113, 114, 123, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 192, 206, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 232, 236, 241, 246, 247, 248], "check_a": [200, 232], "check_b": [200, 232], "check_c": [200, 232], "check_contiguous_sizes_strid": 206, "check_conversion_cl": [105, 109, 209], "check_cuda_avail": 3, "check_current_backend": 225, "check_da": [200, 232], "check_db": [200, 232], "check_ea": [200, 232], "check_eb": [200, 232], "check_empty_sourc": 126, "check_f": [200, 232], "check_g": [200, 232], "check_h": [200, 232], "check_model": [10, 21, 84], "check_model_ort": 122, "check_obj_id": 225, "check_pattern_00": [200, 221, 232], "check_pattern_a0": [221, 232], "check_pattern_b0": [200, 221, 232], "check_shap": [193, 213], "check_token": 126, "check_type_id": 225, "checkcach": 206, "checker": 21, "child": [109, 209], "childc": 109, "children": [88, 89, 109, 200, 221, 232], "choos": [110, 122, 123, 126, 193, 221], "choose_consistent_domain_opset": 123, "choose_kwargs_for_dynamic_shap": 110, "choose_qparams_optim": 89, "chosen": [115, 118, 119, 120, 247], "chronos_model_help": 10, "chunk": [91, 209, 212], "chunk_1": 212, "ci": 91, "ci_build": 247, "cikk": 238, "cikm": 238, "cjyf": 238, "ckim": 238, "cksa": 238, "cl": [11, 21, 105, 111, 209, 221, 232], "claim": 235, "clamp": [89, 91], "clamp_": 89, "clamp_max": [89, 91], "clamp_max_": 89, "clamp_min": [89, 91], "clamp_min_": 89, "clamp_tensor": 91, "class": [10, 11, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 60, 62, 63, 64, 65, 66, 67, 68, 83, 88, 89, 90, 91, 94, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 190, 191, 192, 194, 197, 202, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 230, 231, 232, 236, 248, 250], "classic": 230, "classif": 13, "classmethod": [10, 56, 60, 88, 111, 143, 232], "clean": [113, 123, 232], "clean_shap": 123, "clean_text": 206, "clear": [227, 247], "clip": [89, 91, 133, 137, 185, 209], "clip_1": 223, "clip_2": 223, "clipclip": 133, "clipclippattern": [131, 133, 137, 221, 232, 244], "clone": [89, 91, 103, 110, 111, 196, 206, 209, 211, 215, 247], "closer": 206, "clr": 208, "cls_name": 122, "cmake": 247, "cmake_extra_defin": 247, "cmd": 242, "cmp_op": 193, "co": [10, 89, 91, 93, 97, 107, 133, 145, 149, 185, 212, 213, 214, 236, 240], "coad": 221, "code": [18, 92, 103, 107, 109, 110, 111, 115, 126, 129, 131, 133, 142, 149, 182, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 232, 236, 248], "coef_": 208, "coeffici": [13, 208], "col": 209, "col2im": [89, 91], "col_mask": 209, "col_processor": 209, "col_sum": 209, "colimn": 57, "coll": 225, "collect": [206, 223, 225, 231, 249], "collis": 16, "coloredlog": 247, "colprocessor": 209, "colprocessorallnan": 209, "colprocessorcond": 209, "colprocessorident": 209, "column": [13, 57, 105, 200, 201, 206, 209, 223, 232], "column1": [57, 58], "column2": [57, 58], "column_kei": 57, "column_stack": 89, "com": [75, 76, 91, 102, 115, 161, 162, 165, 166, 172, 177, 196, 204, 205, 206, 211, 213, 214, 216, 217, 221, 224, 247], "combin": [89, 109], "combine_fn": 215, "combined_arg": [213, 236], "come": [57, 101, 103, 105, 107, 110, 126, 131, 143, 146, 172, 192, 218, 219, 221, 223, 230, 232, 238], "comma": [3, 4, 58, 69, 88, 89, 121, 126, 128, 131], "command": [4, 59, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 131, 223, 234, 243, 244], "comment": [131, 221], "commit": 247, "common": [16, 89, 105, 126, 128, 204, 225, 230, 232, 233], "common_dynamic_shap": [116, 117, 216], "common_export": 83, "commontransform": 194, "commonvisitor": 194, "compar": [57, 123, 131, 133, 142, 191, 197, 206, 232, 233, 250], "compare_onnx_execut": 221, "compare_with_true_input": 191, "comparison": [57, 123, 185], "compat": [111, 123, 186], "compatible_dimens": 186, "compatible_opset": 123, "compatible_shap": 186, "compil": [69, 72, 73, 74, 75, 76, 77, 88, 89, 109, 204, 206, 216, 217, 224, 225, 247], "compiled_model": [88, 89, 204], "compiledfunctionbackward": 204, "compiler_ir": [91, 92], "complet": [107, 196, 230, 236], "complex": [89, 113, 122, 211, 250], "complex128": 185, "complex64": 185, "complexmodul": [26, 31], "compon": [221, 236], "compos": 109, "comprison": 10, "comput": [10, 11, 13, 57, 60, 62, 109, 126, 131, 132, 133, 136, 181, 191, 192, 193, 196, 204, 206, 208, 209, 221, 230, 231, 232, 250], "computationcastopcast": 133, "computationcastopcastpattern": [131, 133, 136, 221, 232, 244], "compute_const": [126, 200, 206], "compute_log_sumexp": 92, "compute_onnx_discrep": 109, "compute_weight_s": [60, 83], "computed_valu": [126, 192], "concat": [26, 32, 89, 91, 97, 126, 128, 133, 142, 148, 153, 168, 169, 170, 171, 198, 200, 203, 220, 221, 232, 238, 240], "concat_1": 238, "concat_co": [149, 179], "concat_nod": [142, 149, 153, 162, 171, 179], "concat_output_0": 238, "concat_sin": [149, 179], "concatempti": 133, "concatemptypattern": [131, 133, 221, 232, 244], "concaten": [57, 89, 126, 133, 230], "concatgath": 133, "concatgatherpattern": [131, 133, 221, 232, 244], "concatreshap": 133, "concatreshapepattern": [131, 133, 148, 221, 232, 244], "concattwiceunari": 133, "concattwiceunarypattern": [131, 133, 221, 232, 244], "concret": 111, "concrete_arg": [111, 213], "cond": [91, 109, 111, 133, 142, 209, 217, 220, 248], "condccop": 111, "condit": [91, 97, 111, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 223, 232, 235], "conf": [206, 212, 213, 214, 216], "config": [4, 60, 69, 79, 82, 112, 114, 116, 212, 213, 214, 216, 224, 225, 227, 240, 247], "config_": 57, "config_dict": 69, "configur": [4, 60, 69, 112, 115, 116, 118, 119, 120, 212, 213, 214, 216, 247], "configuration_phi3": [212, 213, 214], "conflict": 192, "confus": 126, "congratu": 212, "conj_phys": [89, 91], "conj_physical_": 89, "connect": 235, "consecut": [133, 136, 137, 152, 155], "consid": [3, 13, 56, 57, 103, 109, 112, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 205, 208, 213, 217, 230, 232], "constant": [10, 11, 55, 91, 103, 109, 111, 126, 128, 131, 133, 138, 142, 145, 154, 161, 190, 192, 199, 200, 204, 206, 207, 211, 212, 214, 215, 217, 221, 222, 230, 231, 241, 244, 250, 251], "constant_1_output_0": 238, "constant_fold": [126, 128, 206, 207, 208, 217, 221, 230, 232, 240], "constant_fus": [126, 128], "constant_of_shape_scatter_nd": [10, 161], "constant_output_0": 238, "constant_pad_nd": [89, 91], "constant_s": [126, 128], "constant_tensor": [107, 212, 236], "constantinteg": 248, "constantofshap": [26, 33, 91, 97, 126, 128, 129, 159, 161, 162, 165, 166, 177, 200, 219, 220], "constantofshapescatternd": 161, "constantofshapescatterndpattern": [159, 161, 244], "constants_": [126, 230], "constants_alias_": 126, "constants_computed_": [126, 230], "constants_node_": 126, "constanttoinitializerpattern": 138, "constraint": [107, 126, 131, 190, 192, 193, 212, 215, 220, 230, 232, 236], "constraints_": 126, "construct": 149, "constructor": 126, "consum": [20, 111, 131, 176, 178, 232, 242], "consumpt": 206, "contain": [3, 10, 56, 57, 69, 103, 105, 109, 110, 117, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 208, 217, 219, 221, 232], "content": [103, 126, 203], "context": [10, 113, 126, 131, 188], "context_s": [10, 221], "contextlib": [206, 209, 212], "contigu": [91, 102, 107, 209, 212, 225, 236, 240], "contiguous_1": 212, "continu": [4, 205, 206, 209, 216], "contract": 235, "contrib": 26, "contribrotaryembed": 178, "contribrotaryembedding3d": 178, "contribrotaryembedding3dpattern": [178, 179, 221, 244], "contribrotaryembeddingpattern": [178, 179, 221, 244], "contribut": 221, "control": [103, 111, 209, 213, 215, 217, 230, 251], "control_flow": [10, 57], "conv": [91, 133, 139, 175, 178, 206], "conv1": 206, "conv1d": [89, 91], "conv1d_unpack": 89, "conv2": 206, "conv2d": [89, 91, 206], "conv2d_1": 206, "conv2d_dil": 89, "conv2d_group": 89, "conv2d_output_pad": 89, "conv2d_pad": [89, 91], "conv2d_strid": 89, "conv2d_transpos": 89, "conv2d_unpack": 89, "conv2d_unpack_s": 89, "conv3d": [89, 91], "conv3d_dil": 89, "conv3d_group": 89, "conv3d_output_pad": 89, "conv3d_pad": 89, "conv3d_strid": 89, "conv3d_transpos": 89, "conv3d_unpack": 89, "conv_tbc_backward": 89, "conv_transpose1d": 89, "conv_transpose1d_unpack": 89, "conv_transpose2d": [89, 91], "conv_transpose2d_dil": 89, "conv_transpose2d_group": 89, "conv_transpose2d_input": 91, "conv_transpose2d_output_pad": 89, "conv_transpose2d_pad": 89, "conv_transpose2d_strid": 89, "conv_transpose2d_transpos": 89, "conv_transpose2d_unpack": 89, "conv_transpose3d": [89, 91], "conv_transpose3d_dil": 89, "conv_transpose3d_group": 89, "conv_transpose3d_input": 91, "conv_transpose3d_output_pad": 89, "conv_transpose3d_pad": 89, "conv_transpose3d_strid": 89, "conv_transpose3d_transpos": 89, "conv_transpose3d_unpack": 89, "conv_unpack": 89, "convbiasnul": 133, "convbiasnullpattern": [131, 133, 139, 221, 232, 244], "convent": 208, "converg": 208, "convergencewarn": 208, "convers": [88, 89, 109, 121, 126, 127, 131, 192, 197, 200, 209, 211, 216, 218, 219, 230], "convert": [10, 16, 17, 55, 60, 69, 101, 103, 104, 106, 107, 109, 110, 111, 126, 129, 157, 193, 204, 206, 207, 208, 209, 211, 213, 218, 219, 221, 223, 231, 232, 234, 249, 251], "convert_endian": 16, "convert_help": [7, 10, 206], "convert_into_initi": 126, "convert_vers": 230, "convet": 122, "convolut": 91, "copi": [60, 91, 98, 103, 109, 126, 127, 204, 206, 209, 230, 235], "copy_": [111, 215], "copy__1": 215, "copy__2": 215, "copyright": 235, "copysign": 89, "copysign_": 89, "core": [206, 219], "corrcoef": 89, "correct": [57, 89, 91, 126, 128, 181], "correction_nam": 89, "correction_names_out": 89, "correction_out": 89, "correl": 57, "correspind": 16, "correspond": [10, 16, 111, 244], "cos_": 89, "cos_cach": 240, "cos_cast": 149, "cosh": [89, 91, 133, 145, 185], "cosh_": 89, "cosine_embedding_loss": 89, "cosine_similar": 89, "cost": [232, 248], "coudl": 221, "could": [26, 126, 186, 204, 205, 213, 214, 217, 219, 230, 248], "count_include_pad": 91, "count_nonzero": 89, "counter": 126, "coupl": [192, 196, 199, 204, 211, 223, 251], "cov": [89, 247], "cpi": 143, "cpp": 219, "cprofil": 206, "cpu": [6, 19, 21, 57, 69, 88, 89, 107, 116, 117, 121, 122, 126, 128, 131, 201, 204, 208, 212, 215, 218, 219, 220, 221, 223, 236, 244, 246], "cpu_count": 206, "cpu_sess": 21, "cpuep": 201, "cpuexecutionprovid": [21, 201, 204, 206, 208, 209, 221, 223], "cpython": 247, "crash": 21, "creat": [4, 10, 11, 16, 19, 20, 60, 61, 69, 88, 89, 91, 103, 108, 109, 111, 113, 117, 121, 122, 126, 128, 131, 157, 160, 161, 181, 204, 205, 209, 213, 214, 216, 217, 218, 219, 230, 232, 236, 247, 251], "create_arg": [111, 206, 213], "create_args_for_root": 206, "create_causal_mask": [107, 236], "create_compiled_model": 69, "create_configuration_for_benchmark": 69, "create_fe": 19, "create_graph": 129, "create_model": 69, "create_model_and_input": 206, "create_nam": 206, "create_nod": 206, "create_onnx_friendly_decomposition_t": [89, 206], "create_proxi": 206, "create_random_input": 201, "create_sess": 201, "create_tensor": 19, "creation": [126, 133, 149, 154, 231], "critic": 209, "cross": 89, "cross_entropy_loss": [89, 91], "crow_col_valu": 89, "crow_col_value_s": 89, "cst": [105, 126, 129, 200, 232], "cst2": [172, 200], "cst_node": 160, "csv": [57, 71, 200, 201, 206, 223], "ct1s1x3x96": 213, "ct1s1x4x96": 213, "ct1s2x32x30x96": 213, "ct1s2x32x33x96": 213, "ct1s2x3x16384": 213, "ct1s2x3x3072": 213, "ct1s2x3x32064": 213, "ct1s2x3x8192": 213, "ct1s2x3x9216": 213, "ct1s3x32x31x96": 213, "ct1s3x32x35x96": 213, "ct1s3x4x16384": 213, "ct1s3x4x3072": 213, "ct1s3x4x32064": 213, "ct1s3x4x8192": 213, "ct1s3x4x9216": 213, "ct7s1x3": 213, "ct7s1x4": 213, "ct7s2x3": 213, "ct7s2x33": 213, "ct7s3": 213, "ct7s3x35": 213, "ct7s3x4": 213, "ct7s4": 213, "ct9s2x1x3x33": 213, "ct9s3x1x4x35": 213, "ctc_loss": 89, "cu118": [223, 224, 225], "cu12": 247, "cu124": 247, "cu130": 234, "cubla": 247, "cuda": [3, 6, 10, 18, 21, 57, 79, 80, 81, 82, 92, 107, 122, 126, 202, 204, 224, 225, 227, 236, 244, 246, 247, 249], "cuda120": 247, "cuda_capa": 206, "cuda_count": 206, "cuda_hom": 247, "cuda_nam": 206, "cuda_vers": 247, "cudacxx": 247, "cudaexecutionprovid": 206, "cudagetdevicecount": 248, "cudnn": 247, "cudnn_batch_norm": [89, 91], "cudnn_batch_norm_backward": 89, "cudnn_en": 91, "cudnn_hom": 247, "cudnn_is_accept": 89, "cufft": 247, "cuinit": 248, "cummax": 89, "cummaxmin_backward": 89, "cummin": 89, "cumprod": 89, "cumprod_": 89, "cumprod_backward": 89, "cumsum": [89, 91], "cumsum_": 89, "cumtim": 206, "cumul": 206, "cumulative_trapezoid": 89, "cupti": 247, "curand": 247, "current": [18, 123, 127, 131, 221, 230, 248], "current_devic": 225, "current_loss": 204, "current_priority_index": [88, 89, 200, 202, 221, 232], "currentfram": [129, 131, 198, 232], "cus_p0": 206, "cusolv": 247, "cuspars": 247, "custom": [8, 26, 57, 69, 72, 73, 74, 75, 76, 77, 79, 83, 88, 89, 103, 109, 110, 111, 126, 128, 129, 196, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 220, 221, 222, 223, 224, 225, 227, 229, 231, 237, 241, 247, 248, 251], "custom0": 206, "custom2": 206, "custom__1": 200, "custom_def": 218, "custom_op": 219, "custom_op_nam": 109, "customattribut": 111, "custombuilderemitt": 129, "customop": 109, "customopdef": 218, "customoperatorsupport": 90, "customopstrategi": [109, 209], "customparameterproxi": 111, "customproxi": 111, "customproxyfloat": 111, "customproxyint": 111, "customtrac": 111, "cvt": 131, "cyi": 107, "cython": 247, "d": [91, 126, 133, 145, 186, 203, 205, 209, 213, 214, 215, 216, 217, 250, 251], "d1": [126, 209, 250], "d2": [126, 186, 209], "daaa": 238, "dai": 57, "dali": 247, "damag": [131, 235], "data": [4, 10, 16, 23, 57, 58, 80, 88, 89, 116, 186, 196, 200, 201, 204, 205, 206, 209, 212, 213, 214, 216, 217, 223, 232, 240, 247], "data1": 206, "data_mem_first_run": 206, "data_mem_load": 206, "data_mem_run": 206, "data_ptr": 225, "data_typ": 16, "datafram": [4, 57, 105, 200, 206, 232], "dataload": [204, 208], "dataset": [204, 208], "date": [57, 231], "date_start": [57, 223], "dc": [62, 221], "dd": 186, "ddag": 221, "de": 221, "deal": [111, 133, 148, 192, 232, 235], "debbug": [55, 89, 103, 109], "debug": [51, 56, 69, 103, 107, 109, 126, 131, 192, 205, 213, 214, 217, 219, 232, 236], "debug_backend": [10, 89], "debug_info": 56, "debug_str": 131, "decid": [55, 103, 109, 126, 221], "decim": 89, "decimals_out": 89, "decis": 230, "declar": [126, 230], "decod": [122, 216, 221], "decode_gif": 89, "decode_imag": 89, "decode_jpeg": 89, "decode_jpegs_cuda": 89, "decode_png": 89, "decode_webp": 89, "decoderlay": [122, 221], "decomp_util": 206, "decompisit": 103, "decompos": [89, 91, 133, 143, 172, 178, 204], "decomposit": [89, 90, 91, 103, 111, 204, 209, 236, 251], "decomposition_t": [89, 103, 204, 219, 240], "deconstruct": 10, "decor": [60, 230], "decorate_context": 213, "dedent": 206, "dedic": 230, "deduc": 250, "deep": 16, "deepcopi": [204, 206], "def": [16, 60, 88, 89, 103, 105, 106, 107, 129, 182, 197, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 232, 236, 240, 248], "default": [3, 10, 11, 13, 16, 26, 56, 57, 60, 69, 79, 88, 89, 103, 105, 106, 107, 109, 111, 121, 126, 128, 131, 133, 143, 145, 161, 166, 168, 170, 172, 178, 191, 197, 200, 204, 205, 207, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 227, 230, 232, 236, 240, 244, 247, 248], "default_axi": 131, "default_decomposit": 206, "default_initi": 126, "default_op": 26, "default_opset": 199, "default_valu": [104, 126, 131, 191], "defin": [11, 13, 16, 57, 60, 62, 88, 89, 103, 105, 109, 111, 113, 117, 126, 128, 131, 132, 133, 137, 197, 209, 217, 218, 219, 220, 232, 244, 250, 251], "definin": 57, "definit": [26, 60, 103, 251], "deg2rad": 89, "deg2rad_": 89, "delai": [18, 60], "delet": [126, 131, 143, 172], "deleted_nod": [131, 143, 172, 202], "demand": 230, "demonstr": 197, "dens": 240, "deoa": 221, "depend": [75, 76, 103, 106, 126, 161, 163, 203, 205, 209, 213, 214, 217, 230], "deprec": [89, 107, 205, 236], "depth": 109, "dequantizelinear": 185, "derivativeopt": 11, "dermin": 131, "descent": 208, "describ": [208, 230], "describe_tensor": 206, "descript": [3, 206], "deseri": 110, "deserialize_arg": 110, "deserialize_args_kwarg": 110, "deseriz": 110, "deserv": 230, "design": [206, 234, 249], "desir": [195, 211], "det": 89, "detach": [89, 103, 106, 208, 225], "detach_": [107, 212, 236], "detach__1": 212, "detach__2": 212, "detach__3": 212, "detail": [4, 109, 200, 221, 231, 232], "detect": [126, 131, 133, 143, 145, 172, 178, 230], "determin": [90, 109, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 232], "determine_shape_fct": 109, "dev": [196, 211, 234], "dev0": [216, 234], "dev20240314": [224, 225], "dev20240522": 247, "dev20240705": 223, "dev20251016": 234, "developp": [126, 192, 230, 232], "deviat": 10, "devic": [16, 18, 21, 56, 57, 60, 63, 64, 65, 66, 67, 68, 79, 81, 82, 88, 91, 97, 107, 109, 116, 117, 208, 212, 213, 215, 218, 219, 220, 223, 224, 225, 227, 236, 247, 249], "device_count": [10, 206, 248], "device_nam": [57, 223], "device_typ": [91, 219], "devop": 10, "df": [105, 200, 201, 206, 232], "df1": 206, "df_init": 206, "dfi": 206, "dfmem": 206, "dfmemfr": 206, "dfmemr": 206, "diabetesdataset": 204, "diag": [89, 109, 213], "diag_emb": 89, "diag_lib": 209, "diagflat": 89, "diagnam": 109, "diagnost": [10, 206], "diagon": [89, 91, 92], "diagonal_backward": 89, "diagonal_copi": 89, "diagonal_scatt": 89, "diagprintexport": 109, "diagprintstatu": 109, "dict": [3, 4, 6, 9, 10, 11, 13, 15, 16, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 60, 69, 83, 88, 89, 91, 92, 93, 96, 97, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 122, 123, 126, 131, 132, 157, 181, 188, 190, 191, 192, 194, 203, 206, 207, 209, 212, 213, 214, 216, 218, 219, 221, 230, 232], "dictcomp": 225, "dictionari": [4, 10, 11, 13, 16, 20, 21, 51, 55, 56, 57, 60, 62, 69, 83, 89, 103, 106, 109, 110, 112, 116, 122, 126, 190, 212, 213, 214, 216, 230], "dictionnair": 232, "did": [107, 127, 205, 236], "diff": [16, 88, 89, 91, 113, 197, 200, 209, 212, 220, 221, 238], "differ": [16, 55, 56, 57, 60, 69, 82, 88, 89, 91, 103, 106, 109, 111, 115, 123, 126, 131, 133, 148, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 221, 223, 229, 241, 251], "differentx": 202, "difficult": [111, 232], "diffusion_model_help": [10, 114], "dig": [57, 126], "digamma": 89, "digamma_": 89, "dilat": [91, 206], "dim": [89, 91, 92, 93, 97, 105, 106, 107, 111, 126, 186, 192, 203, 208, 209, 212, 215, 216, 220, 221, 230, 236, 240, 248], "dim0": [91, 93], "dim1": [91, 93], "dim_dimnam": 89, "dim_dimnamelist": 89, "dim_dtyp": 89, "dim_int": 89, "dim_intlist": [89, 215], "dim_intlist_out": 89, "dim_nam": [126, 192], "dim_out": 89, "dim_param": 203, "dim_squeeze1": 149, "dim_squeeze2": 149, "dim_to_pad": 220, "dim_valu": 203, "dimens": [11, 60, 91, 103, 109, 126, 131, 133, 145, 148, 151, 155, 158, 161, 170, 171, 186, 188, 190, 192, 203, 204, 208, 211, 212, 214, 215, 217, 221, 222, 230, 241, 250, 251], "dimhin": 213, "dimhint": [209, 213], "dimnam": 89, "dimname_out": 89, "dimname_scalar": 89, "dimname_src": 89, "dimname_st": 89, "dimname_tensor": 89, "dimname_valu": 89, "dims_out": 89, "dir": [10, 234], "direct": [60, 236], "directli": [107, 236], "directori": 247, "dirnam": [10, 200, 201, 206], "disabl": [6, 9, 10, 11, 56, 69, 83, 88, 89, 121, 122, 126, 206, 209, 232], "disable_aot": 6, "disable_aot_function_inlin": [21, 206], "disable_fn": 213, "disable_pattern": [69, 83, 88, 89, 121, 224, 225, 227], "disc": [57, 109], "discoveri": 248, "discrep": [16, 56, 83, 88, 89, 105, 109, 191, 197, 209, 213, 215, 220, 221], "discrepancies_": 57, "discrepancies_ab": [57, 223], "discrepancies_rel": [57, 223], "disjoint": [133, 152], "disk": [56, 196], "dispatch": [10, 69, 88, 89, 104, 107, 109, 206, 218, 219, 230], "dispatch_trac": 213, "dispatech": 103, "displai": [10, 16, 57, 89, 109, 126, 131, 191, 213, 230, 247], "display_pattern": 131, "disrep": 209, "dist": [89, 209, 215, 247], "dist_chunk": 209, "dist_idx_map": 209, "dist_pot_donor": 209, "dist_subset": 209, "distanc": [209, 221], "distinct": [170, 171], "distribut": 235, "div": [89, 91, 97, 126, 128, 133, 134, 144, 146, 176, 178, 185, 200, 209, 220, 232, 238], "div_": 89, "div_1": 200, "div_2": 200, "div_3": 200, "div_4": 200, "div__tensor": 91, "div_by_numb": 10, "div_nod": [172, 176], "div_output_0": 238, "div_tensor": 91, "div_tensor_mod": 91, "divid": [10, 89, 209], "divisor_overrid": 91, "djvl": 238, "dnan": 209, "do": [4, 10, 26, 55, 89, 103, 109, 111, 112, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 185, 191, 192, 205, 206, 209, 221, 223, 230, 232, 235, 250], "do_not_remov": [126, 131], "do_sampl": 216, "do_that": 199, "do_thi": 199, "do_this_or_do_that": 199, "do_this_or_do_that_as_bool": 199, "doabl": 209, "dob": 105, "doc": [59, 91, 92, 126, 133, 161, 166, 168, 170, 178, 205, 213, 214, 216, 217, 236, 247], "doc_str": [126, 218, 240], "docker": 249, "document": [57, 59, 94, 103, 205, 213, 214, 217, 234, 235], "doe": [11, 56, 105, 109, 113, 117, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 203, 204, 205, 206, 209, 213, 217, 218, 219, 220, 221, 230, 232, 244, 247, 248, 250, 251], "doesn": [204, 224], "domain": [88, 89, 96, 101, 104, 108, 123, 126, 129, 131, 143, 161, 162, 165, 166, 172, 177, 181, 198, 199, 200, 202, 204, 206, 207, 208, 217, 218, 219, 220, 221, 230, 232, 240, 244], "done": [21, 55, 88, 89, 91, 103, 109, 126, 127, 131, 182, 200, 202, 206, 209, 221, 223, 224, 225, 232, 250], "donor": 209, "donors_dist": 209, "donors_idx": 209, "donors_mask": 209, "dort": [10, 121, 200, 201, 247], "dort_bench": [10, 80, 84, 226, 227, 228, 247], "dort_bench_profil": [10, 84], "dort_profil": [10, 84, 226, 228], "dot": [89, 196, 211], "dot_nam": [109, 209], "doubl": [13, 185, 198], "down_proj": [107, 212, 213, 236], "download": [60, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 247], "download_funct": 60, "download_retry_decor": 60, "draft": 109, "draft_export": [205, 211, 213, 214, 215, 216, 217, 222, 241], "draft_export_loc": 109, "draw": 196, "driver": 248, "drop": [4, 16, 131, 200], "drop_kei": 16, "dropout": [89, 91, 92, 107, 133, 208, 212, 213, 236], "dropout_": 91, "dropout_1": 212, "dropout_2": 212, "dropout_3": 212, "dropout_nod": 140, "dropout_p": 92, "dropoutpattern": [131, 133, 140, 221, 232, 244], "droppattern": 131, "ds_arg": 110, "ds_kwarg": 110, "dsiz": 238, "dstack": 89, "dt": 16, "dtg": 202, "dtni": 238, "dtype": [13, 16, 19, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 88, 89, 91, 92, 96, 97, 103, 106, 107, 108, 109, 126, 129, 192, 198, 200, 201, 202, 204, 206, 207, 208, 209, 212, 215, 217, 218, 219, 220, 221, 223, 230, 232, 236, 240], "dtype_layout": [107, 212, 236], "dtype_out": 89, "dtype_to_tensor_dtyp": 16, "due": [109, 206, 247], "dummi": [21, 61, 62, 79, 81, 83, 91, 103, 112, 116, 117, 122, 196, 199, 200, 203, 204, 206, 210, 211, 212, 213, 214, 219, 221, 222, 241, 246], "dummy_llm": 122, "dummyc": 206, "dump": [4, 10, 21, 56, 60, 69, 88, 89, 103, 113, 121, 122, 126, 128, 131, 244], "dump3bug": 78, "dump_applied_pattern": [126, 128, 131, 244], "dump_bash_bench": 223, "dump_dort_onnx": 10, "dump_fil": 122, "dump_filenam": 21, "dump_first_input": 88, "dump_fold": [57, 223], "dump_for_debug": 88, "dump_help": [10, 114], "dump_onnx": [10, 113], "dump_ort": [56, 63, 64, 65, 66, 67, 68], "dump_pattern": [69, 88, 89, 121], "dump_prefix": [69, 88, 89, 121], "dump_std": [4, 60], "dump_test": 122, "dump_test_model": [56, 223], "duplic": [57, 126, 128, 131, 133, 134, 200, 232], "dur": 201, "durat": [10, 206], "dure": [88, 89, 111, 126, 212, 230], "dx": 89, "dyn": [190, 213], "dynam": [56, 57, 60, 69, 83, 88, 89, 90, 103, 106, 109, 110, 116, 121, 122, 126, 133, 142, 157, 185, 186, 190, 192, 193, 205, 209, 214, 215, 216, 217, 220, 221, 223, 224, 225, 232, 247, 248, 251], "dynamic_alia": [107, 230, 236], "dynamic_dimension_nam": [200, 232], "dynamic_dimensions_sourc": [107, 230, 236], "dynamic_dimensions_source_flat": [107, 230, 236], "dynamic_object": [107, 126, 230, 236], "dynamic_objects_rev": [107, 126, 230, 236], "dynamic_rop": [116, 216], "dynamic_shap": [9, 60, 69, 83, 89, 103, 105, 106, 107, 109, 115, 122, 126, 208, 213, 215, 216, 220, 230, 236, 248], "dynamiccach": [212, 213, 214, 216], "dynamicquantizelinear": 185, "dynamo": [17, 72, 73, 74, 75, 76, 77, 88, 89, 103, 109, 209, 231], "dynamointerpret": [103, 104, 107, 126, 206, 207, 208, 217, 221, 231, 232, 236, 240], "dynger": [227, 247], "dynger_backend": 10, "e": [88, 89, 92, 203, 205, 206, 209, 213, 215, 216, 217, 218, 219, 236], "eaaa": 221, "each": [60, 91, 109, 131, 204, 223, 232], "eager": [56, 60, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 89, 115, 118, 119, 120, 217, 224, 225, 227, 236, 240, 247], "eaq": 230, "easi": 230, "easier": [60, 103, 104, 111, 125, 133, 145, 230, 232], "easili": [204, 230], "easypatternoptim": [157, 202], "echo": 227, "ecr": 221, "edge_program": 197, "edgeprogrammanag": 197, "edit": [205, 213, 214, 217, 221], "eeaa": 221, "eeee": 221, "eetp": 221, "effdet": [75, 76], "effici": [88, 89, 209, 221, 230, 231, 232], "einsum": [89, 91], "either": [89, 111, 131, 215, 230], "elast": 13, "electraforquestionansw": 223, "elem_s": 126, "elem_typ": [126, 203], "element": [13, 16, 56, 91, 109, 110, 126, 133, 142, 148, 154, 157, 185, 192, 195, 230], "element_wis": [10, 168], "element_wise_binary_op_typ": 185, "element_wise_op_cmp_typ": 185, "elementwise_affin": 122, "elif": 206, "els": [92, 199, 200, 201, 206, 209, 213, 216, 248], "else_branch": [199, 217], "elsegraph_3": 199, "elu": [89, 91, 133, 145, 185], "elu_": [89, 91], "elu_backward": 89, "em": 221, "emb": [107, 212, 236], "embd_pdrop": [212, 213, 214], "embed": [56, 89, 91, 92, 107, 111, 117, 122, 212, 213, 221, 236, 240], "embed_token": [107, 212, 213, 214, 236, 240], "embedding2": 221, "embedding_1": 221, "embedding_backward": 89, "embedding_bag": [89, 91], "embedding_bag_unpack": 89, "embedding_dense_backward": 89, "embedding_dim": 221, "embedding_sparse_backward": 89, "emit_nod": 206, "empti": [3, 6, 62, 69, 83, 88, 89, 103, 104, 109, 110, 122, 126, 133, 192, 209, 215, 230], "empty_copi": 126, "empty_dimens": 11, "empty_input": 62, "empty_lik": [89, 218], "empty_mean_std": 91, "empty_permut": 91, "empty_strid": [89, 91], "emsdk": 247, "enabl": [6, 10, 18, 21, 60, 69, 83, 88, 89, 91, 103, 113, 121, 122, 126, 128, 131, 206, 230, 232], "enable_activation_checkpoint": 56, "enable_gqa": 92, "enable_grad": 91, "enable_nvtx_profil": 247, "enable_pattern": [69, 79, 83, 88, 89, 121, 224, 225, 227, 247], "enable_profil": [21, 201], "enable_train": 247, "enable_training_op": 247, "encod": [216, 225], "encode_jpeg": 89, "encode_jpegs_cuda": 89, "encode_png": 89, "end": [3, 18, 56, 91, 97, 126, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 232], "end_dim": 91, "end_profil": 201, "endian": 16, "engin": 247, "enough": [10, 16, 21, 119, 133, 134, 209], "ensur": [126, 128, 193, 223, 232], "entr": 89, "enumer": [56, 57, 97, 131, 185, 204, 206], "enumerate_csv_fil": 57, "enumerate_load_model": 56, "enumerate_match": [131, 200, 206, 232], "enumerate_model_nam": 56, "enumerate_run_model": 56, "enumerate_subgraph": [123, 185], "enumerate_test_model": 56, "env": 248, "environ": [10, 103, 109, 126, 131, 192, 247], "eos_token_id": [212, 213, 214, 216], "ep": [91, 105, 122, 207, 209, 212, 213, 215, 216, 220, 221, 236], "ep_id_nod": 105, "ep_nam": 105, "epilog": 3, "epkg": 113, "epoch": [204, 208], "epsilon": [221, 240], "eq": [89, 91, 212, 213, 214, 217, 221], "eq2": 221, "eq_": 89, "eq_1": 221, "eq_2": 200, "eq_tensor": 91, "equal": [10, 11, 21, 69, 91, 93, 97, 103, 110, 117, 123, 126, 131, 133, 141, 142, 155, 159, 161, 166, 170, 178, 185, 186, 190, 192, 200, 219, 221, 230, 232], "equal_nod": 159, "equal_to": [126, 192], "equat": 91, "equival": [91, 92, 105, 126, 133, 144, 147, 153, 178, 180, 205, 221, 230], "eras": 56, "erf": [89, 91, 133, 145, 172, 178, 185], "erf_": 89, "erf_nod": 172, "erfc": 89, "erfc_": 89, "erfcx": 89, "erfinv": 89, "erfinv_": 89, "erkv": 238, "eror": [217, 218, 219], "err": 212, "err_": 57, "err_ab": 105, "err_export": 57, "err_rel": 105, "err_warmup": 57, "error": [10, 56, 57, 103, 109, 110, 111, 113, 122, 126, 205, 206, 208, 209, 212, 213, 215, 216, 217, 230, 233, 236, 249], "estim": [55, 181], "et_runtim": 197, "eval": [56, 206, 212, 213, 214, 216], "eval_fram": [213, 225], "evalu": [10, 26, 126, 186, 188, 192, 196, 197, 198, 199, 200, 201, 205, 209, 210, 241], "evaluate_dimension_equality_with_constraint": 126, "evaluate_expr": 213, "evaluate_express": [10, 189], "evaluate_shap": 203, "evaluate_sym_nod": 213, "even": [21, 107, 126, 186, 203, 213, 221], "event": [21, 56, 60, 235], "event_nam": 201, "everi": [4, 13, 18, 21, 51, 55, 57, 60, 62, 103, 104, 109, 110, 113, 126, 127, 128, 131, 134, 181, 203, 209, 213, 216, 221, 223, 230, 231, 232, 250], "everyth": [56, 88, 109, 126, 213, 230], "everytim": [126, 128], "evolv": [131, 232], "exact": 181, "exactli": [133, 134], "exampl": [3, 13, 18, 21, 60, 79, 80, 81, 88, 89, 103, 105, 106, 109, 110, 111, 112, 113, 116, 117, 126, 129, 131, 157, 182, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 234, 241, 244, 247, 249, 250, 251], "example_4700": 201, "example_args_collect": 236, "example_input": [83, 104, 207], "example_shap": 126, "example_valu": [126, 230], "exc": [57, 103, 111, 126, 131, 191, 192, 193, 195, 205, 213], "exc_typ": 10, "excel": [57, 58], "excel_output": 57, "except": [4, 9, 10, 21, 56, 57, 60, 88, 89, 95, 107, 109, 111, 126, 131, 191, 192, 195, 197, 201, 205, 206, 209, 215, 216, 217, 218, 219, 223, 230, 236], "exclud": [56, 57], "exclude_model_nam": [56, 63, 64, 65, 66, 67, 68], "exe_path": [104, 126], "exec": 230, "execut": [4, 10, 51, 57, 89, 105, 109, 111, 126, 127, 131, 209, 210, 213, 221, 222, 223, 229, 232, 241], "executorch": [10, 83, 196, 199, 200, 207, 209, 210, 241], "executorch_program": 197, "executorchbackendconfig": 197, "executorchprogrammanag": 197, "exepath": [107, 230, 236], "exhaust": 190, "exir": 197, "exist": [10, 60, 88, 89, 101, 105, 107, 113, 122, 123, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 192, 194, 196, 200, 202, 203, 204, 206, 207, 210, 230, 231, 232, 241], "existing_nam": 13, "existing_t": 89, "exit": [126, 206, 242, 243, 244, 245, 246], "exit_point": [200, 232], "exp": [89, 91, 97, 105, 126, 128, 133, 142, 145, 185, 193, 232], "exp1": 194, "exp2": [89, 194], "exp2_": 89, "exp_": 89, "expand": [60, 89, 91, 93, 97, 107, 133, 134, 142, 145, 200, 212, 236, 238, 240], "expand_1": [107, 212, 236], "expand_4": 240, "expand_5": 200, "expand_6": 200, "expand_7": 200, "expand_a": [91, 93], "expand_copi": 89, "expand_left": 142, "expand_nod": [142, 179], "expand_right": 142, "expandbroadcast": 133, "expandbroadcastpattern": [131, 133, 142, 200, 221, 232, 244], "expandpattern": [131, 133, 142, 221, 232, 244], "expandswap": 133, "expandswappattern": [131, 133, 142, 221, 232, 244], "expans": [133, 142], "expect": [10, 11, 13, 56, 88, 89, 103, 105, 106, 109, 110, 113, 125, 126, 191, 197, 203, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 230, 243], "expected_output": 216, "expected_shap": 105, "expected_typ": 110, "experi": [4, 10, 57, 107, 196, 205, 206, 211, 213, 216, 217, 220, 230, 231, 236, 242, 247, 249], "experiment": [9, 79, 103, 107, 111, 126, 128, 131, 161, 166, 196, 205, 206, 211, 213, 217, 220, 227, 230, 236, 242, 244, 247], "experimental_experi": [3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 190, 191, 192, 193, 194, 195, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, 220, 221, 223, 226, 227, 228, 230, 232, 236, 240, 242, 247, 250], "explain": 249, "explicit": [10, 60, 194, 223], "explicitrunn": 63, "explor": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 232], "expm1": [89, 91], "expm1_": 89, "expon": [91, 93, 97], "exponenti": 89, "exponential_": 89, "export": [6, 9, 51, 55, 56, 57, 60, 79, 80, 83, 88, 89, 102, 103, 104, 105, 106, 107, 109, 122, 126, 190, 197, 198, 199, 200, 201, 203, 204, 210, 217, 218, 219, 221, 222, 228, 231, 233, 237, 238, 241, 247, 249], "export_": 206, "export_a": 60, "export_artifact": [213, 236], "export_as_funct": [88, 89, 126, 240], "export_compat": 236, "export_correl": 57, "export_cus_p0": 206, "export_cus_p2": 206, "export_dynamo": 206, "export_dynopt": 206, "export_for_train": 205, "export_func": [213, 236], "export_funct": 206, "export_help": [10, 17, 103, 213], "export_loc": 109, "export_model": [10, 84], "export_model_help": [10, 84], "export_modules_as_funct": [103, 207, 221, 230], "export_opt": [10, 55, 60, 88, 89, 103, 104, 107, 109, 122, 204, 219, 230, 236, 240], "export_output": 206, "export_script": 206, "export_simpl": [57, 58], "export_to_onnx": 122, "exportdb": [213, 216, 236], "exported_mod": 206, "exported_program": [102, 103, 106, 109, 111, 197, 205, 206, 207, 213, 236], "exportedprogram": [102, 103, 105, 106, 107, 111, 209, 212, 213, 220, 230, 236], "exporter_kwarg": [109, 209, 213], "exporter_statu": [109, 209], "exportopt": [88, 89, 104, 107, 109, 122, 204, 219, 230, 236, 240], "expos": [3, 201, 206, 211], "expr": [126, 190, 194], "expr1": 194, "expr2": 194, "express": [110, 126, 131, 157, 188, 190, 191, 194, 205, 213, 214, 217, 223, 232, 235, 250], "expressions_torch": 10, "expressionsimplifieraddvisitor": 194, "ext": [10, 206, 234], "ext_test_cas": [17, 206], "extend": [111, 170, 171, 201, 205, 206, 213, 214, 217, 230, 244, 247], "extendedreferenceevalu": [89, 103, 105, 106, 209, 220, 221, 230], "extens": [75, 76, 178, 179, 243, 247], "extern": [55, 83, 103, 109, 126, 127, 131, 185, 247], "external_threshold": [55, 88, 89, 103, 109, 126, 232], "external_util": 225, "extra": [75, 76, 193, 230, 247], "extract": [4, 110, 182, 190, 205], "extract_names_from_schema": 110, "extract_tensor_metadata": 206, "extract_v": 206, "exttestcas": 10, "ey": 89, "eybt": 221, "f": [10, 13, 16, 88, 89, 104, 107, 126, 182, 193, 197, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 217, 220, 221, 230, 232, 236, 244, 250], "f1": [123, 198], "f2": [123, 198], "f32": [107, 205, 212, 213, 217, 220, 230, 236], "f_lineno": [129, 131, 198, 232], "f_node": 145, "fact": 186, "factor": 216, "fail": [4, 10, 60, 61, 101, 107, 109, 111, 123, 125, 126, 131, 192, 209, 216, 217, 218, 219, 230, 232, 236, 248, 251], "fail_childc": 209, "failur": [109, 126, 223], "faith": 103, "fake": 209, "fake_impl": 206, "fake_mod": [103, 106], "fake_quantize_per_channel_affin": 89, "fake_quantize_per_channel_affine_cachemask_backward": 89, "fake_quantize_per_tensor_affin": 89, "fake_quantize_per_tensor_affine_cachemask_backward": 89, "fake_tensor": [56, 60, 63, 64, 65, 66, 67, 68, 103, 106, 206], "fake_tensor_convert": [103, 106], "fake_x": [103, 106], "faketensor": 126, "faketensormod": [103, 106], "fakifi": 206, "fall": [55, 89, 103, 109, 126, 248], "fallback": [101, 103, 107, 230], "fals": [4, 6, 9, 10, 16, 18, 21, 51, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 83, 88, 89, 90, 91, 92, 93, 97, 101, 103, 104, 107, 109, 110, 111, 112, 113, 115, 116, 117, 121, 122, 125, 126, 128, 129, 131, 145, 157, 158, 181, 182, 186, 191, 192, 193, 200, 201, 202, 204, 206, 209, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 230, 232, 234, 236, 248], "false_fn": 109, "false_graph": 91, "false_graph_0": 217, "falset": [200, 221, 232], "far": [101, 103, 107, 126, 131, 230], "fast": [57, 230, 232], "fast_backend": [10, 89, 225], "fast_detach": 206, "fast_script": 57, "fasten": [126, 230], "faster": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 232, 244], "fastgelu": [172, 178], "fastgelupattern": [172, 178, 221, 244], "fbgemm_gpu_nightli": [75, 76], "fbgemm_linear_fp16_weight": 89, "fbgemm_linear_fp16_weight_fp32_activ": 89, "fbgemm_linear_int8_weight": 89, "fbgemm_linear_int8_weight_fp32_activ": 89, "fbgemm_linear_quantize_weight": 89, "fbgemm_pack_gemm_matrix_fp16": 89, "fbgemm_pack_quantized_matrix": 89, "fc": 206, "fc1": [206, 240], "fc2": [206, 240], "fc3": 206, "fca": 206, "fcb": 206, "fcc": 206, "fcd": 206, "fce": 206, "fcf": 206, "fcfb": 221, "fcg": 206, "fch": 206, "fci": 206, "fck": 206, "fcl": 206, "fcm": 206, "fcn": 206, "fct": [10, 101, 103, 104, 107, 109, 131, 218], "fct_shape": 218, "featur": 209, "feature_dropout": 91, "feb": 216, "feed": [19, 21, 56, 60, 113, 201, 203, 206, 209, 221, 230], "feed_forward": [122, 221], "feed_input": 51, "feedforward": [122, 221], "feeds0": 209, "few": [79, 81, 111, 221, 230, 250], "ff": 221, "ff_dim": 221, "fft": 89, "fft2": 89, "fft_fft": [89, 91], "fft_fft2": [89, 91], "fft_fftn": 89, "fft_fftshift": 89, "fft_hfft": 89, "fft_hfft2": 89, "fft_hfftn": 89, "fft_ifft": [89, 91], "fft_ifft2": [89, 91], "fft_ifftn": 89, "fft_ifftshift": 89, "fft_ihfft": 89, "fft_ihfft2": 89, "fft_ihfftn": 89, "fft_irfft": 89, "fft_irfft2": 89, "fft_irfftn": 89, "fft_rfft": 89, "fft_rfft2": 89, "fft_rfftn": 89, "fftn": 89, "fftshift": 89, "fhge": 221, "field": [126, 223], "fig": [201, 206], "figsiz": [201, 206, 220], "figur": 10, "filanam": 51, "file": [4, 6, 10, 20, 55, 57, 58, 83, 103, 107, 109, 113, 122, 127, 197, 201, 205, 210, 212, 213, 217, 220, 222, 223, 230, 235, 236, 241, 243, 247], "file_path": 127, "filenam": [10, 20, 55, 57, 60, 83, 103, 106, 109, 113, 122, 200, 201, 206, 223], "fill": [11, 89, 103, 106, 192, 200, 209, 230], "fill_": 89, "fill_kwarg": 110, "fill_scalar": [89, 91], "fill_tensor": [89, 91], "fill_valu": 91, "fillgrad": 11, "fillna": [200, 232], "filter": [56, 57, 58, 126, 204, 223], "filter_decomposition_t": [89, 204], "filter_fct": 89, "filter_funct": 4, "filter_in": [57, 58, 223], "filter_out": [57, 58, 223], "final": [4, 21, 88, 89, 103, 105, 126, 202, 213, 230, 232], "finalize_llm_setup": 117, "finalize_llm_vision_setup": 117, "find": [103, 107, 126, 128, 131, 133, 151, 181, 221, 230, 232, 242, 243], "find_funct": 103, "find_largest_repeated_pattern": 181, "find_method": 103, "findsourc": 206, "fine": 209, "finfo": 206, "finish": 204, "first": [0, 10, 56, 60, 107, 109, 113, 123, 126, 158, 161, 186, 193, 196, 199, 200, 201, 207, 210, 213, 216, 218, 219, 223, 231, 241], "first_it_out": 201, "fit": [208, 209, 235], "fit_x_col": 209, "fix": [20, 89, 209, 213, 215, 221], "fixtur": 10, "flacon": 116, "flag": [10, 213, 247], "flag_fake_tensor": [57, 223], "flag_no_grad": [57, 223], "flag_train": [57, 223], "flash": 247, "flash_attention_force_build": 247, "flash_attn_2_cuda": 247, "flat_appli": [107, 212, 236], "flat_fn": 213, "flatbuff": 247, "flatnonzero": [54, 209], "flatten": [16, 18, 56, 60, 91, 104, 114, 198, 206, 209], "flatten_dense_tensor": 89, "flatten_input": 104, "flatten_object": 16, "flatten_output": 114, "flatten_using_int": 91, "flattened_input": 109, "flattened_output": 109, "flip": 89, "fliplr": 89, "flipud": 89, "float": [3, 4, 10, 13, 16, 18, 20, 21, 56, 57, 60, 91, 92, 93, 96, 103, 106, 107, 109, 111, 113, 126, 129, 131, 133, 136, 146, 185, 186, 191, 192, 193, 198, 201, 202, 203, 212, 221, 230, 236], "float16": [62, 185], "float32": [21, 69, 88, 89, 103, 106, 107, 129, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 212, 215, 216, 217, 218, 219, 220, 221, 223, 230, 232, 236, 238, 240], "float4e2m1": 185, "float64": 10, "float8e4m3fn": 185, "float8e4m3fnuz": 185, "float8e5m2": 185, "float8e5m2fnuz": 185, "float8e8m0": 185, "float_float": 89, "float_float_out": 89, "float_pow": 89, "float_power_": 89, "float_tensor": 89, "float_tensor_out": 89, "floor": [89, 91], "floor_": 89, "floor_divid": [89, 91], "floor_divide_": 89, "floordiv": 220, "flow": [103, 111, 209, 213, 215, 217, 251], "fmaili": 221, "fmax": 89, "fmin": 89, "fmod": [89, 91], "fmod_": 89, "fmod_scalar": 91, "fmt1": [57, 58], "fmt2": [57, 58], "fn": [10, 11, 111, 206, 213, 236], "fname": [17, 218], "focu": 216, "fold": [126, 128, 200, 206, 207, 208, 217, 221, 230, 232, 240, 244], "fold_const": 232, "folded_1_n3": 238, "folded_2_other_1": 238, "folder": [4, 10, 56, 83, 88, 113, 122, 126, 128, 131, 196, 211, 244], "follow": [4, 13, 26, 57, 58, 88, 89, 102, 103, 107, 109, 111, 131, 133, 142, 149, 150, 161, 166, 170, 178, 185, 186, 200, 205, 208, 209, 212, 213, 217, 221, 223, 230, 231, 232, 234, 235, 236, 244, 247, 248], "force_typ": 193, "forcedispatch": 101, "forese": 232, "fork": 248, "format": [20, 57, 58, 223, 245], "former": [21, 60, 62], "formula": [57, 250], "forward": [60, 62, 88, 89, 103, 105, 106, 107, 109, 133, 142, 197, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 225, 230, 232, 236], "forward_": 109, "forward_arg": 109, "forward_arg_nam": 207, "forward_cal": 213, "forward_custom_op_schema": 109, "forward_kwarg": 109, "forward_method": 83, "forward_nam": 110, "forward_need_seri": 109, "forward_ordered_parameter_nam": 109, "forward_parameter_nam": 109, "forwardwithcontrolflowtest": 217, "found": [4, 10, 21, 95, 101, 103, 107, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 211, 212, 213, 232, 236], "four": 16, "fqn": 207, "frac": [89, 143, 172], "frac_": 89, "free": [111, 235], "freedom": 232, "freez": 247, "freq": [107, 212, 236], "frequenc": 181, "frequent": [181, 211, 220], "frexp": 89, "friendli": [213, 214, 217], "fro": 105, "frobenius_norm": 89, "from": [4, 6, 10, 11, 13, 16, 18, 21, 26, 57, 73, 74, 75, 76, 88, 89, 90, 101, 103, 105, 106, 107, 109, 110, 111, 112, 115, 119, 120, 122, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 190, 192, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 223, 228, 230, 231, 232, 235, 236, 238, 240, 241, 243, 244, 248, 249, 250, 251], "from_arrai": [129, 198], "from_array_extend": 16, "from_array_ml_dtyp": 16, "from_cal": 206, "from_funct": 206, "from_numpi": [204, 209, 215, 218], "from_pretrain": 216, "from_real_tensor": [103, 106, 206], "from_tensor": 206, "from_torchlib": 206, "frontend_util": 206, "frozen": 206, "fucntion": 103, "full": [10, 21, 89, 91, 92, 126, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 236, 247], "full_graph": 90, "full_lik": 91, "full_nam": 109, "full_parameter_nam": 126, "fullgraph": [88, 89, 204, 207], "fulli": [230, 231], "func": [103, 209, 213, 236], "function": [4, 6, 8, 10, 11, 13, 16, 18, 20, 21, 51, 57, 60, 62, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 91, 92, 95, 101, 104, 105, 106, 107, 109, 110, 111, 113, 123, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 190, 192, 193, 194, 198, 204, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 229, 231, 232, 236, 240, 241, 247, 249, 250, 251], "function_const_func_spec0": [107, 212, 236], "function_ir": 206, "function_nam": 129, "function_opt": [55, 88, 89, 103, 104, 109, 126, 240], "functional_cal": 213, "functional_tensor": [206, 214], "functional_util": 206, "functionalized_rng_runtime_epilogu": 225, "functionattent": 133, "functionattentionpattern": [131, 133, 135, 178, 179, 221, 232, 244], "functioncausalmask": 133, "functioncausalmaskmuladd": 133, "functioncausalmaskmuladdpattern": [131, 133, 149, 221, 232, 244], "functioncausalmaskpattern": [131, 133, 149, 221, 232, 244], "functioncossincach": 133, "functioncossincachepattern": [131, 133, 149, 221, 232, 244], "functionhalfrotaryembed": 133, "functionhalfrotaryembeddingpattern": [131, 133, 149, 221, 232, 244], "functionnotfounderror": [95, 230], "functionopt": [55, 88, 89, 103, 104, 109, 129, 240], "functionpackedmatmul": 168, "functionpackedmatmulpattern": [168, 169], "functionpowtanh": 168, "functionpowtanhpattern": [168, 169], "functionproto": [16, 26, 51, 55, 103, 105, 109, 123, 126, 128, 129, 131, 157, 181, 192], "functionsplitrotarymul": 168, "functionsplitrotarymulpattern": [168, 169], "functool": 89, "functorch": [204, 224], "funtcion": [133, 135], "fur": 122, "furnish": 235, "furo": 247, "fuse": [69, 126, 128, 133, 144, 149, 176, 178, 180, 182, 221, 242, 244], "fused_conv": [10, 178], "fused_matmul": [10, 178], "fused_nod": 182, "fusedconv": [175, 178], "fusedconvpattern": [175, 178, 221, 244], "fusedgemm": 206, "fusedmatmu": 238, "fusedmatmul": [26, 34, 126, 128, 176, 178, 221], "fusedmatmuldiv": 178, "fusedmatmuldivpattern": [176, 178, 221, 244], "fusedmatmulpattern": [176, 178, 221, 244], "fusedmatmultranspos": 178, "fusedmatmultransposepattern": [176, 178, 221, 244], "fusedmatmulx2": 178, "fusedmatmulx2pattern": [176, 178, 221, 244], "futur": 230, "futurewarn": [107, 205, 236], "fuzzi": 17, "fw_compil": [89, 204], "fx": [9, 88, 89, 90, 101, 103, 104, 105, 106, 109, 111, 126, 205, 206, 207, 209, 213, 217, 218, 219, 221, 225, 231], "g": [16, 91, 92, 93, 96, 97, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 193, 198, 202, 206, 218, 219, 225, 230, 232], "g1": 217, "g2": [131, 168, 217], "gaaa": 238, "galleri": [17, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 234, 241], "gallery_conf": 17, "gap": 209, "gate": 212, "gate_proj": [107, 236], "gate_up_proj": [212, 213], "gather": [26, 89, 91, 103, 133, 199, 221, 238, 240], "gather_1_output_0": 238, "gather_backward": 89, "gather_grad": [10, 178], "gather_output_0": 238, "gatherel": [26, 232], "gathergrad": [26, 35, 177], "gathergradpattern": 177, "gathernd": 238, "gave": 213, "gb": 10, "gcd": 89, "gcd_": 89, "gcxz": 221, "ge": [89, 91], "ge_": 89, "geforc": [206, 223], "gelu": [89, 91, 133, 143, 145, 172, 178], "gelu_": 89, "gelu_backward": 89, "gelu_nod": 172, "geluerf": 178, "geluerfpattern": [172, 178, 221, 244], "geluort": 178, "geluortpattern": [172, 178, 221, 244], "gelupattern": [131, 133, 143, 221, 232, 244], "gemm": [89, 91, 133, 145, 176, 178, 193, 200, 204, 206, 207, 208, 217, 221, 230, 232], "gemm_nod": 176, "gemmtranspos": 133, "gemmtransposepattern": [131, 133, 145, 206, 207, 208, 217, 221, 230, 232, 244], "gener": [88, 89, 91, 113, 116, 117, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 232, 236, 247], "generated_text": 216, "generic_visit": 194, "genexpr": [206, 213, 225], "geometr": 89, "geometric_": 89, "ger": 89, "get": [10, 18, 55, 103, 104, 109, 112, 116, 126, 133, 151, 197, 205, 206, 209, 212, 213, 214, 215, 216, 217, 225, 230, 231, 233, 242, 250], "get_ai21_jamba_15_mini": 116, "get_attr": [104, 107, 205, 215, 217, 230, 236], "get_attribut": [126, 131, 191, 230, 232], "get_attribute_with_default": [126, 191], "get_attributes_with_default": [126, 131, 191], "get_available_provid": 206, "get_axi": 131, "get_benchmark_indic": 56, "get_computed_const": [131, 232], "get_const": [126, 192, 230], "get_constant_or_attribut": [126, 131], "get_constant_scalar": 131, "get_constant_shap": 131, "get_debug_msg": [109, 126, 192, 230], "get_decomposition_t": [89, 103, 204], "get_decomposition_table_by_nam": 89, "get_decomposition_table_dynamo": 89, "get_decomposition_table_onnxscript": 89, "get_default_aten_as_funct": [103, 106], "get_default_pattern": [133, 206], "get_devic": [60, 225], "get_device_cap": 206, "get_device_nam": 206, "get_dummy_model": 61, "get_dummy_model_fail": 61, "get_dummy_model_fail_convert": 61, "get_dump_fil": 10, "get_dynamic_dimens": 126, "get_dynamic_shap": 60, "get_dynamo_stat": 60, "get_experimental_pattern": 161, "get_export_report": [109, 209, 213], "get_falcon_mamba_7b": 116, "get_fallback_opt": 103, "get_figur": [10, 206], "get_first": 89, "get_fix_pattern": 166, "get_fused_aten_ops_dispatch": 69, "get_gradi": 89, "get_initializer_s": 126, "get_input": [201, 206], "get_input_cach": 117, "get_input_dynamic_shap": 126, "get_input_shap": 60, "get_inputs_with_copied_dynamic_cach": 60, "get_investigation_pattern": 168, "get_is_dimens": 126, "get_llama32_9b_vis": 116, "get_llama_model": [107, 115, 236], "get_llama_model_lay": 61, "get_local_funct": 126, "get_local_function_output": 126, "get_machin": 4, "get_memory_rss": 18, "get_mistral_model": 118, "get_ml_pattern": 170, "get_model_name_list": 56, "get_onnx_signatur": 16, "get_onnxruntime_pattern": 178, "get_opset": [126, 230], "get_origin": 206, "get_parsed_arg": [3, 201, 206], "get_pattern": [131, 206], "get_pattern_list": [126, 128, 131, 157, 206, 244], "get_peak_memori": 60, "get_phi2": 116, "get_phi35_mini_instruct": 116, "get_phi35_untrain": [212, 213, 214], "get_phi3_model": 119, "get_phi3_vision_128k_instruct": 116, "get_phi4": 116, "get_phi_model": 120, "get_processor_nam": 4, "get_rank": [126, 131, 192, 230, 232], "get_registered_constraint": [126, 131], "get_sequ": [126, 230], "get_shap": [126, 131, 192, 202, 230, 232], "get_shape_renam": [126, 131], "get_sig_kwarg": 16, "get_smollm_1_7b": 116, "get_speech2text2_causal_ml_not_trained_model": 61, "get_src_and_ast": 206, "get_stable_diffusion_2_unet": 112, "get_submodule_nam": 104, "get_tiny_llm": [116, 216], "get_torchlib_op": 206, "get_train_initi": 13, "get_typ": [126, 131, 192, 230, 232], "get_type_hint": 206, "get_type_known": 126, "get_xi": 209, "getattr": [91, 111, 201, 206], "getblock": 206, "getclosurevar": 206, "geteffectivelevel": 225, "getenv": [225, 248], "getitem": [104, 107, 205, 215, 217, 236], "getitem_1": [205, 215, 219], "getitem_14": 212, "getitem_15": 212, "getitem_16": 212, "getitem_17": 212, "getitem_2": 205, "getitem_4": 205, "getlin": 206, "getpid": 18, "getsourc": 206, "getsourcefil": 206, "getsourcelin": 206, "getvalu": [206, 212], "gggg": 21, "ginebas": 225, "git": [196, 211, 247], "github": [75, 76, 91, 102, 107, 115, 196, 204, 205, 206, 211, 212, 213, 216, 217, 220, 224, 230, 236, 247, 248], "give": [88, 89, 104, 106, 126, 127, 200, 213, 221, 230, 231, 232], "give_uniqu": [126, 131], "given": [11, 16, 57, 60, 69, 91, 103, 106, 109, 117, 123, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 230, 232], "glet": 221, "glob": 230, "global": [200, 232, 247], "glu": 89, "glu_backward": 89, "gm": [205, 207, 213], "gma": 221, "gnu": 247, "go": [109, 126, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230], "goal": [221, 232, 244], "goe": [10, 60, 88, 89, 126, 131, 221, 230], "good": [221, 230], "googl": [205, 213, 214, 217], "got": [56, 88, 89, 103, 106, 209, 220, 221], "gpu": [196, 206, 211, 247], "gpu0_end": 206, "gr": [200, 202, 230, 232], "grad_fn": [103, 106, 204, 207, 217], "grad_help": [10, 12], "grad_input": 89, "grad_mod": [206, 225], "grad_output": 91, "gradient": [10, 17, 89, 208, 234], "grain": 209, "grant": 235, "graph": [11, 13, 16, 51, 56, 58, 88, 89, 90, 91, 101, 103, 104, 105, 106, 107, 109, 111, 123, 125, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 191, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 225, 229, 230, 231, 236, 244, 249, 251], "graph_build": [10, 104, 107, 125, 126, 193, 200, 202, 206, 230, 236], "graph_builder_opset": [10, 126, 206], "graph_builder_optim": [10, 131, 206], "graph_capture_wrapp": 213, "graph_erase_nod": 111, "graph_modul": [88, 89, 90, 107, 126, 206, 230, 236], "graph_optimization_level": [21, 206], "graph_signatur": 213, "graphbuil": 103, "graphbuild": [55, 88, 89, 91, 92, 93, 96, 97, 101, 103, 104, 107, 108, 122, 125, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 193, 200, 202, 206, 207, 208, 217, 218, 219, 221, 231, 232, 236, 240], "graphbuilderpatternoptim": [88, 89, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 200, 202, 221, 231, 232], "graphmodul": [88, 89, 90, 103, 107, 126, 205, 209, 212, 220, 230, 236], "graphmoduleimpl": [88, 89], "graphoptimizationlevel": [21, 206], "graphproto": [16, 51, 123, 126, 129, 181, 185, 192], "graphviz_help": [200, 202, 204, 208, 217, 218, 219, 220, 221], "grdu": 221, "greater": [89, 91, 97, 185, 217, 232], "greater_equ": 89, "greaterorequ": 185, "grid": 91, "grid_sampl": [89, 91], "grid_sampler_2d": [89, 91], "group": [91, 206], "group_norm": [89, 91], "groupbi": [200, 232], "grow": 230, "gru": 89, "gru_cel": 89, "gru_impl": 89, "gru_impl_data": 89, "gsec": 238, "gt": [89, 91, 212, 213, 217], "gt_": 89, "gt_1": 212, "gt_scalar": 217, "gtx": 223, "guarante": [111, 131, 232], "guard": [205, 209, 213, 214, 217, 225], "guard_bool": 213, "guard_or_fals": [213, 214, 217], "guard_or_tru": [213, 214, 217], "guardondatadependentsymnod": [205, 213, 214], "guess": [109, 126, 209, 213, 232], "guess_dynamic_dimens": 109, "guess_dynamic_shap": [109, 209, 213], "guess_dynamic_shape_object": 109, "gweq": 238, "h": [242, 243, 244, 245, 246], "ha": [10, 104, 109, 113, 126, 129, 131, 133, 139, 168, 169, 186, 192, 198, 204, 209, 230, 248, 250], "had": 214, "half": [9, 133, 149, 169], "half_nod": [149, 172, 179], "half_to_float": 91, "halfrotaryembed": 240, "handl": [60, 107, 109, 126, 182, 188, 204, 221, 224, 236, 251], "handle_dispatch_mod": 206, "handle_torch_funct": 206, "handler": 206, "happen": [16, 91, 122, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 230, 232], "hard": 221, "hardshrink": 89, "hardsigmoid": [89, 91], "hardsigmoid_": 89, "hardsigmoid_backward": 89, "hardswish": [89, 91], "hardswish_": [89, 91], "hardswish_backward": 89, "hardtanh": [89, 91], "hardtanh_": [89, 91], "hardtanh_backward": [89, 91], "has_cuda": [10, 206, 223], "has_dynamic_object": [126, 230], "has_executorch": 10, "has_local_funct": 126, "has_nam": [126, 230], "has_onnx_diagnost": 10, "has_onnxruntim": 10, "has_onnxruntime_train": [10, 234], "has_onnxscript": 10, "has_phi3": 119, "has_processor": 131, "has_rank": [126, 131, 192, 230, 232], "has_shap": [126, 131, 192, 202, 230, 232], "has_torch": 10, "has_typ": [126, 131, 192, 230, 232], "hasattr": [206, 209, 216, 225], "hash": [16, 206], "have": [4, 101, 105, 106, 107, 109, 123, 126, 131, 170, 171, 181, 204, 221, 223, 230, 247], "he": 104, "head": [126, 223], "head_dim": 212, "heavi": 243, "heavisid": 89, "heaviside_": 89, "help": [72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 104, 109, 111, 126, 192, 205, 206, 209, 213, 214, 217, 230, 242, 243, 244, 245, 246, 247], "helper": [10, 17, 21, 55, 109, 122, 129, 182, 198, 200, 202, 203, 204, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 230, 232, 240], "here": [60, 91, 111, 126], "herebi": 235, "hfft": 89, "hfft2": 89, "hfftn": 89, "hghh": 221, "hhhh": 221, "hidden": [69, 117, 185], "hidden_act": [212, 213, 214, 216], "hidden_s": [115, 118, 119, 120, 212, 213, 214, 216, 224, 225, 236, 240], "hidden_shap": [107, 212, 236], "hidden_st": [107, 212, 213, 236], "hide": [10, 230], "hide_stdout": 10, "hierarchi": 221, "high": [88, 89, 232], "higher": [10, 200, 202], "higher_ord": [107, 111, 212, 215, 217, 236], "highlight": [16, 182], "hinge_embedding_loss": 89, "hire": 149, "histogramdd": 89, "histor": 58, "hksv": 238, "hlzc": 221, "hold": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 230, 232], "holder": 235, "home": [107, 204, 205, 206, 208, 212, 213, 217, 219, 220, 230, 236], "hood": 221, "hook": [10, 60, 62], "hope": [16, 109], "host": 247, "how": [11, 13, 88, 89, 104, 109, 110, 126, 168, 200, 202, 213, 218, 219, 220, 221, 231, 232, 248, 249, 251], "howev": [215, 221, 232], "hstack": 89, "html": [91, 92, 213, 216, 236], "http": [75, 76, 91, 92, 102, 115, 196, 204, 205, 211, 212, 213, 214, 216, 217, 224, 236, 247], "huber_loss": 89, "huber_loss_backward": 89, "huber_loss_backward_out": 89, "huge": 216, "huggingfac": [73, 74, 75, 76, 115, 211, 212, 213, 214, 219, 221, 222, 223, 241], "huggingfacerunn": 64, "hurt": 211, "hxw": 91, "hypot": 89, "hypot_": 89, "i": [3, 4, 10, 11, 13, 16, 18, 20, 21, 51, 55, 56, 57, 58, 60, 69, 88, 89, 90, 91, 92, 94, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 117, 119, 121, 122, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 230, 231, 232, 234, 235, 236, 243, 244, 247, 249, 250, 251], "i0": 89, "i0_": 89, "i1": [89, 198], "i2": 198, "i32": 205, "i64": [107, 212, 213, 236], "i_input": [62, 205], "i_nan": 209, "iaaa": 238, "iadd": 91, "iaja": 238, "id": [16, 18, 56, 223, 225], "idea": [109, 234, 247], "ident": [72, 73, 74, 75, 76, 77, 91, 93, 97, 104, 107, 126, 128, 129, 131, 133, 134, 138, 153, 156, 198, 200, 202, 204, 209, 218, 219, 230, 232, 244], "identifi": [126, 230], "identity2": 217, "identitypattern": [131, 133, 134, 200, 221, 232, 244], "ids_tensor": [61, 240], "idx": 97, "ifft": 89, "ifft2": 89, "ifftn": 89, "ifftshift": 89, "ifg": 200, "igamma": 89, "igamma_": 89, "igammac": 89, "igammac_": 89, "ignor": [10, 16, 60, 62, 88, 89, 107, 206, 209, 213, 223, 236], "ignore_index": 91, "ignore_warn": 10, "ihfft": 89, "ihfft2": 89, "ihfftn": 89, "ikkc": 221, "illustr": [196, 211], "im2col": [89, 91], "imag": [89, 117], "image_s": 117, "impact": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 232], "impl": [88, 219], "implement": [8, 21, 26, 56, 69, 88, 89, 91, 101, 107, 111, 113, 126, 128, 131, 157, 192, 196, 204, 211, 213, 221, 224, 225, 229, 231, 232, 249, 251], "impli": [126, 230, 235], "implicit": 91, "implicitli": 217, "import": [5, 6, 10, 16, 18, 21, 26, 88, 89, 91, 103, 105, 106, 107, 111, 122, 126, 129, 131, 133, 149, 161, 166, 168, 169, 170, 178, 182, 185, 186, 188, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 232, 236, 240, 244], "importerror": [88, 89, 197, 201, 206], "imposs": [126, 192], "improv": [109, 208, 221], "imput": 209, "imul": 91, "in_featur": [122, 204, 205, 221], "in_spec": 207, "includ": [11, 56, 83, 109, 113, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 213, 230, 232, 235], "include_last_offset": 91, "include_model_nam": [56, 63, 64, 65, 66, 67, 68], "include_self": 91, "incomplet": 127, "inconsist": [126, 192], "increas": [60, 88, 89, 103, 109, 131, 200, 202, 208, 213, 221, 232], "increment": [51, 126], "indent": [89, 109, 113], "independantli": 221, "index": [56, 89, 91, 104, 126, 129, 131, 201, 205, 206, 213, 214, 216, 230, 236, 240, 247], "index_add": [89, 91], "index_add_": 89, "index_copi": [89, 91, 103, 106, 107, 230, 236], "index_copy_": 89, "index_fil": 89, "index_fill_": 89, "index_put": [91, 103, 106, 107, 230, 236], "index_put_": [89, 91], "index_reduce_": 89, "index_select": [89, 91], "index_select_backward": 89, "index_tensor": 91, "indic": [56, 57, 89, 91, 103, 109, 111, 129, 143, 146, 181, 185, 209, 213, 232, 248], "indicator_": 209, "indices_s": 89, "inductor": [89, 227, 247], "ineffici": 204, "inf": [92, 221], "infer": [6, 19, 21, 56, 60, 83, 109, 126, 131, 133, 142, 148, 185, 192, 195, 196, 198, 201, 202, 205, 207, 208, 209, 210, 213, 221, 223, 230, 231, 241, 242, 244, 246, 250], "infer_s": 248, "infer_schema": [110, 218], "infer_shap": [21, 126, 203, 244, 250], "infer_shapes_opt": [126, 200, 202, 232], "infer_typ": 195, "inferencesess": [19, 21, 83, 88, 89, 122, 201, 206, 208, 209, 221], "inferencesessionfornumpi": 21, "inferencesessionfortorch": 21, "infinitely_differentiable_gelu_backward": 89, "info": [126, 192, 203, 219], "inform": [4, 6, 16, 18, 56, 60, 103, 104, 109, 110, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 191, 192, 205, 207, 213, 214, 215, 216, 217, 221, 230, 231, 232, 236, 244], "inherit": [10, 157, 232, 248], "init": [88, 89, 105, 113, 200, 204, 206, 207, 208, 217, 219, 220, 221, 230, 232, 240], "init1_s16_": 221, "init1_s16_2": 221, "init1_s16_22": 221, "init1_s16_3": 221, "init1_s1_": [200, 204, 221], "init1_s1_2": [200, 221], "init1_s1_3": [200, 221], "init1_s1_4": 200, "init1_s1x3_": 230, "init1_s32_": 240, "init1_s32_2": 240, "init1_s3_": 230, "init1_s3x1_": 230, "init1_s_": [105, 200, 217, 221, 240], "init1_s_10": 200, "init1_s_11": 200, "init1_s_12": 200, "init1_s_2": [200, 221, 240], "init1_s_3": [200, 240], "init1_s_4": [200, 240], "init1_s_5": [200, 240], "init1_s_6": [200, 240], "init1_s_7": [200, 240], "init1_s_8": 200, "init1_s_9": 200, "init7_s1_": [200, 206, 221, 240], "init7_s1_0": [200, 204, 220, 221], "init7_s1_02": 200, "init7_s1_1": [221, 240], "init7_s1_1024": 200, "init7_s1_10242": 200, "init7_s1_10243": 200, "init7_s1_2": 200, "init7_s1_22": 200, "init7_s1_23": 200, "init7_s1_256": 200, "init7_s1_2562": 200, "init7_s1_2563": 200, "init7_s1_2564": 200, "init7_s1_3": 200, "init7_s1_30": 221, "init7_s1_32": 200, "init7_s1_33": 200, "init7_s1_34": 200, "init7_s1_512": 200, "init7_s1_5122": 200, "init7_s2_": [89, 204], "init7_s2_0_1": 200, "init7_s2_0_12": 200, "init7_s2_0_13": 200, "init7_s2_1024_10242": 200, "init7_s2_1_": [204, 208, 217, 230, 232], "init7_s2_1_3": 219, "init7_s2_2048_1024": 200, "init7_s2_2048_10242": 200, "init7_s2_2048_10243": 200, "init7_s2_2048_10244": 200, "init7_s2_2048_10245": 200, "init7_s2_2048_10246": 200, "init7_s2_2048_10247": 200, "init7_s2_256_256": 200, "init7_s2_8_8": 240, "init7_s3_2_1024_": 240, "init7_s3_2_1024_1024": 200, "init7_s3_2_1024_102410": 200, "init7_s3_2_1024_102411": 200, "init7_s3_2_1024_102412": 200, "init7_s3_2_1024_102413": 200, "init7_s3_2_1024_102414": 200, "init7_s3_2_1024_102415": 200, "init7_s3_2_1024_10242": 200, "init7_s3_2_1024_10243": 200, "init7_s3_2_1024_10245": 200, "init7_s3_2_1024_10246": 200, "init7_s3_2_1024_10247": 200, "init7_s3_2_1024_10248": 200, "init7_s3_2_1024_10249": 200, "init7_s3_4_1024_1024": 200, "init7_s3_4_1024_512": 200, "init7_s4_2_1024_": 240, "init7_s4_2_1024_2_512": 200, "init7_s4_2_2_1024_1024": 200, "init7_s4_2_2_1024_256": 200, "init7_s4_2_2_1024_2562": 200, "init7_s4_2_2_1024_2563": 200, "init7_s4_2_2_1024_2564": 200, "init7_s4_2_2_1024_512": 200, "init7_s4_2_2_1024_5122": 200, "init7_s4_2_2_512_1024": 200, "init7_s_": 200, "init7_s_1": 220, "init7_s_4": 220, "initi": [11, 13, 20, 55, 63, 64, 65, 66, 67, 68, 88, 89, 103, 107, 109, 112, 113, 116, 126, 127, 128, 131, 138, 198, 200, 202, 212, 213, 214, 216, 221, 230, 232, 236, 248], "initia": [221, 238], "initializer_rang": [212, 213, 214, 216], "initializerinfo": 126, "initializers_dict": [126, 230], "initializers_dict_sourc": 126, "initiliaz": 126, "inlin": [6, 55, 103, 104, 109, 126, 209, 217, 220, 230], "inline_funct": 126, "inline_local_funct": 221, "inline_model_proto": 6, "inner": [89, 206, 213, 225, 231], "inp": 220, "inplac": [6, 20, 91, 102, 103, 111, 113, 123, 126, 132, 193, 211, 212, 215, 216, 217, 218, 220, 221, 222, 241, 247, 251], "inplace_op": 89, "input": [11, 13, 19, 21, 51, 55, 60, 62, 69, 80, 83, 88, 89, 91, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 122, 126, 129, 131, 133, 134, 136, 142, 148, 155, 158, 161, 181, 182, 185, 191, 192, 193, 195, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 230, 232, 236, 238, 240, 243, 244, 245, 246, 248, 250, 251], "input0": [88, 89, 107, 200, 204], "input1": [88, 89, 107, 200, 204], "input10": 200, "input11": 200, "input12": 200, "input13": 200, "input14": 200, "input15": 200, "input16": 200, "input17": 200, "input18": 200, "input19": 200, "input2": [88, 89, 200, 204], "input20": 200, "input21": 200, "input22": 200, "input23": 200, "input24": 200, "input25": 200, "input26": 200, "input27": 200, "input28": 200, "input29": 200, "input3": [88, 89, 200, 204], "input30": 200, "input31": 200, "input32": 200, "input33": 200, "input34": 200, "input35": 200, "input36": 200, "input37": 200, "input38": 200, "input39": 200, "input4": [88, 89, 200, 204], "input5": [200, 204], "input6": 200, "input7": 200, "input8": 200, "input9": 200, "input_": [69, 89, 122], "input_1": 89, "input_2": 89, "input_3": 89, "input_arg": 126, "input_cach": [116, 117, 216], "input_cache_class": 117, "input_dim": [115, 118, 119, 120, 224, 225, 236], "input_dim_0": 204, "input_dim_2": 204, "input_dtyp": [91, 107, 212, 236], "input_fil": 58, "input_i": 62, "input_id": [107, 116, 117, 212, 213, 214, 216, 221, 236, 240], "input_index": [126, 131], "input_kind": [116, 117], "input_kwarg": 126, "input_layernorm": [107, 212, 213, 214, 236], "input_mask": 240, "input_nam": [51, 55, 60, 88, 89, 91, 93, 97, 103, 107, 109, 126, 131, 182, 193, 206, 208, 209, 230, 232], "input_s": [91, 223], "input_scal": 91, "input_shap": [107, 212, 236], "input_tensor": [107, 206], "input_typ": 195, "input_x": 62, "inputs2": [60, 212, 213, 214], "inputs_as_dict": 112, "inputs_as_tupl": [116, 117], "inputs_emb": [213, 216], "inputs_from_onnx_model": 113, "inputs_to_remov": [107, 230, 236], "insert": [102, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 205, 232], "insert_and_remove_nod": [126, 221, 232], "insert_at": [126, 131], "insert_contiguous_between_transpose_and_view": 102, "insert_posit": 126, "insert_type_promotion_nod": 206, "insid": [109, 123, 190, 191, 217, 230, 247], "insignific": [133, 146], "inspect": [129, 131, 198, 206, 232, 236, 248], "inspir": [218, 221], "inst": 204, "instal": [10, 88, 89, 107, 196, 197, 201, 211, 236, 247], "install_generation_tagging_init": 225, "instanc": [60, 62, 109, 110, 111, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 200, 204, 221, 230, 231, 232], "instance_norm": [89, 91], "instanceof": 111, "instead": [51, 60, 62, 103, 107, 109, 131, 182, 205, 232, 236, 248], "instruct": [109, 116, 211, 215, 216, 218, 219, 221, 222, 241], "int": [3, 4, 6, 9, 10, 11, 13, 16, 18, 19, 20, 21, 26, 51, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 83, 88, 89, 90, 91, 93, 96, 97, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 188, 191, 192, 193, 194, 195, 197, 199, 200, 205, 207, 208, 209, 212, 213, 214, 215, 216, 220, 221, 230, 232, 236], "int16": 185, "int32": [61, 185, 205], "int4": 185, "int64": [89, 91, 107, 129, 157, 185, 198, 200, 201, 204, 206, 212, 213, 214, 216, 219, 220, 221, 232, 236, 238, 240], "int8": 185, "int_bin": 89, "int_oo": 220, "int_out": 89, "int_scalar": 89, "int_scalar_out": 89, "int_tensor": 89, "int_tensor_out": 89, "int_to_tensor": 60, "integ": [13, 60, 62, 91, 104, 111, 126, 131, 192, 193, 230], "integr": [62, 209], "intercept_": 208, "interest": [88, 89, 226, 228], "intermedi": [51, 89, 109, 126, 204, 213, 229, 230, 240], "intermediate_s": [115, 118, 119, 120, 212, 213, 214, 216, 224, 225, 236, 240], "intern": 219, "interpol": 91, "interpolation_mod": 91, "interpret": [10, 88, 89, 103, 107, 126, 128, 206, 230, 236], "interpretermodul": 221, "intial": [126, 230], "intlist": 89, "intlist_out": 89, "introduc": [91, 103, 133, 148, 204, 209, 215, 217, 221, 232, 244, 250], "inv_freq": [107, 212, 236], "inv_freq_expand": [107, 212, 236], "invalid": 103, "invers": [89, 91], "invert": 91, "investig": [10, 126, 128, 168, 223, 249], "investigate_help": [10, 103], "investigate_onnxruntime_issu": 21, "invgestig": 21, "involv": [5, 26, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 232], "io": [206, 209, 212, 247], "io1": 218, "io_nam": 126, "iopath": [75, 76], "ipc": 247, "ipynb": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "iqev": 221, "ir": [10, 126, 206, 223], "ir_vers": [21, 126, 129, 198, 199, 202, 203, 230], "irfft": 89, "irfft2": 89, "irfftn": 89, "is_attr_typ": 206, "is_avail": [225, 248], "is_azur": 10, "is_caus": 92, "is_compil": 109, "is_complex": 89, "is_conj": 89, "is_const": [126, 131, 192, 230, 232], "is_constant_or_attribut": 126, "is_constant_scalar": [131, 232], "is_contigu": 206, "is_contiguous_for_memory_format": 206, "is_contiguous_for_memory_format_or_fals": 206, "is_custom": 109, "is_dimens": [126, 129, 230], "is_dimension_in": 88, "is_dimension_out": 88, "is_distribut": 89, "is_dynamic_shap": 126, "is_exact_same_const": 126, "is_export": 216, "is_floating_point": 89, "is_fx_trac": 225, "is_grad_en": 223, "is_infer": 89, "is_initi": 225, "is_input": 192, "is_leaf": [89, 213], "is_lm": 60, "is_neg": 89, "is_node_support": 90, "is_nonzero": 89, "is_ok": 109, "is_output": [131, 232], "is_same_s": 89, "is_scalar_nan": 209, "is_script": 225, "is_sequ": [126, 230], "is_sign": 89, "is_sparse_ani": 206, "is_sparse_compress": 206, "is_sparse_coo": 206, "is_support": 90, "is_us": [131, 206], "is_used_by_subgraph": [131, 232], "is_used_more_than_onc": [129, 131, 198, 232], "is_used_only_bi": [131, 232], "is_valid_typ": 206, "is_value_typ": 206, "is_vulkan_avail": 89, "is_wrap": 106, "isck": 238, "isclass": 206, "isclos": 89, "isfinit": 89, "isidentifi": 126, "isin": [89, 91], "isin_tensor_tensor": 91, "isinf": [89, 91, 185], "isinst": [111, 206, 209, 217, 225], "isnan": [89, 91, 135, 209], "isneginf": 89, "isol": 209, "isort": 247, "isposinf": 89, "isreal": 89, "isscalar": 107, "issu": [91, 102, 126, 192, 212, 231, 236, 247, 249, 251], "issubclass": 206, "issuecom": [204, 224], "istft": 89, "item": [89, 91, 103, 106, 204, 205, 206, 209, 212, 213, 217], "iter": [4, 10, 19, 56, 57, 60, 79, 81, 83, 88, 89, 105, 114, 116, 117, 123, 126, 128, 131, 185, 200, 201, 202, 204, 208, 216, 221, 232, 244], "iter_nod": 131, "itertool": 206, "its": [109, 111, 121, 126, 131, 191, 204, 209, 213, 231, 232, 250], "itself": [89, 109, 132, 203, 249], "ityp": [16, 126, 193], "ix2": 117, "ix5x3x336x336": 117, "jamba": 116, "jit": 103, "jit_compile_runtime_wrapp": 225, "job": 10, "join": [200, 201, 206], "js_profil": 201, "js_profile_to_datafram": 201, "json": [20, 116, 212, 213, 214], "jtvv": 238, "jupyt": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 247], "just": [10, 16, 91, 101, 103, 107, 109, 110, 126, 133, 134, 136, 142, 144, 230], "k": [91, 92, 103, 106, 117, 206, 209], "k_concat": 179, "k_proj": [107, 236, 238, 240], "k_transpos": 179, "kaqg": 238, "kayer": 117, "kce": 232, "keep": [3, 11, 16, 57, 88, 89, 103, 106, 109, 126, 131, 134, 207, 213, 221, 230], "keep_const": 126, "keep_empty_featur": 209, "keep_model_forward": 216, "keep_more_rec": 57, "keepdim": [91, 93, 97, 107, 133, 148, 193, 200, 204, 209, 212, 217, 236], "keepoutput": 11, "keepyieldop": 11, "kei": [4, 16, 57, 60, 92, 109, 122, 126, 131, 219, 221, 223, 225], "kept": [4, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 232], "kernel": [8, 89, 219, 221, 247], "kernel_s": 91, "kernel_shap": 206, "key2": 221, "key_cach": [212, 213, 214, 216], "key_stat": [107, 212, 236], "keyword": [55, 60, 103], "kfew": 221, "kgsp": 221, "kind": [69, 103, 109, 126, 146, 231, 235, 249], "kkxp": 238, "kl_div": 89, "kn": 89, "knn": 209, "knn1": 209, "knn11": 209, "knn5": 209, "knn50": 209, "knn_imput": 209, "know": [10, 123, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 204, 218, 219, 221, 230, 232], "known": [57, 60, 101, 103, 107, 109, 126, 131, 133, 134, 193, 221, 230, 232], "known_shap": 230, "kqir": 221, "kroger": 216, "kron": 89, "kthvalu": 89, "kw_input": 60, "kw_inputs2": 60, "kwarg": [3, 4, 9, 13, 16, 26, 55, 60, 62, 88, 89, 90, 91, 93, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 126, 127, 131, 197, 204, 205, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 221, 230, 236], "kyi": 232, "l": [92, 113, 196, 211, 238, 251], "l1": 13, "l108": 91, "l1_loss": [89, 91], "l1_weight": 13, "l1loss": 204, "l2": [13, 208], "l2_weight": 13, "l_attention_mask_": 238, "l_hidden_states_": 238, "l_position_ids_": 238, "l_self_modules_layers_modules_0_parameters_bias_": 89, "l_self_modules_layers_modules_0_parameters_weight_": 89, "l_self_modules_layers_modules_2_parameters_bias_": 89, "l_self_modules_layers_modules_2_parameters_weight_": 89, "l_self_modules_neuron_modules_linear_parameters_bias_": 207, "l_self_modules_neuron_modules_linear_parameters_weight_": 207, "l_x_": [89, 207], "label": [11, 13], "label_nam": 13, "label_smooth": 91, "lambda": [10, 21, 88, 89, 204, 206, 209, 213, 216, 218, 225], "languag": 60, "laptop": 206, "larg": [69, 79, 88, 89, 127, 196, 206, 216, 227, 232, 247], "large_model": [55, 83, 88, 89, 103, 109, 126, 232], "larger": 206, "largest": [91, 181, 209], "last": [4, 21, 51, 56, 107, 109, 110, 205, 206, 213, 230, 236, 244], "last_error": 109, "last_hidden_st": 213, "last_issu": 21, "later": [55, 57, 103, 109, 126, 127, 250], "latest": 247, "latter": [60, 62], "launch": [229, 246], "layer": [61, 69, 88, 89, 107, 181, 204, 208, 212, 213, 214, 232, 236, 240], "layer_idx": 212, "layer_norm": [89, 91, 221], "layer_norm_1": 221, "layernorm": [122, 133, 144, 178, 180, 221, 240], "layernormalizat": 221, "layernormalizationpattern": [131, 133, 144, 221, 232, 240, 244], "layernormalizationscal": 133, "layernormalizationscalepattern": [131, 133, 144, 221, 232, 244], "layout": [91, 97, 107, 212, 236], "lazy_load_decomposit": 212, "lazy_load_decompositions_1": 212, "lazy_load_decompositions_2": 212, "lazy_load_decompositions_3": 212, "lcm": 89, "lcm_": 89, "ldexp": 89, "le": [89, 91, 107, 212, 236], "le_": 89, "lead": [133, 134], "leaki": 91, "leaky_relu": [89, 91], "leaky_relu_": [89, 91], "leaky_relu_backward": [89, 91], "leakyrelu": [133, 143, 145], "leakyrelupattern": [131, 133, 143, 221, 232, 244], "learn": [10, 16, 55, 196, 197, 201, 203, 204, 205, 206, 207, 210, 241, 247], "least": [109, 181, 209, 216], "leav": [107, 213, 232, 236], "leave_inplac": 111, "left": [126, 136, 143, 148, 172, 191, 193], "left_first": 145, "len": [107, 182, 200, 204, 205, 206, 209, 225], "length": [56, 69, 92, 97, 111, 214, 221], "lerg": 127, "lerp": 89, "lerp_": 89, "less": [89, 91, 97, 126, 185, 221], "less_equ": 89, "less_nod": 160, "less_or_equ": 149, "lessorequ": [91, 185, 204], "let": [9, 55, 103, 109, 111, 126, 128, 133, 142, 197, 202, 204, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 232], "letter": 16, "level": [21, 55, 56, 88, 89, 103, 105, 109, 121, 126, 128, 217, 230], "leverag": [204, 230, 231, 249], "lgamma": 89, "lgamma_": 89, "li": 221, "liabil": 235, "liabl": 235, "lib": [101, 107, 204, 205, 206, 208, 212, 213, 217, 219, 230, 236, 247], "libprotobuf": 247, "librari": [8, 209, 218, 219, 244], "licens": 234, "lift": 89, "lift_fresh": 89, "lift_fresh_copi": [107, 212, 236], "lift_fresh_copy_1": 212, "lift_fresh_copy_2": 212, "lift_fresh_copy_3": 212, "lifted_tensor_0": [107, 212, 236], "lifted_tensor_1": 212, "lifted_tensor_2": 212, "lifted_tensor_3": 212, "lifted_tensor_4": 212, "lighten": [228, 242], "lighter": 242, "like": [10, 91, 109, 126, 185, 190, 204, 205, 209, 213, 214, 215, 216, 217, 218, 219, 221, 230], "limit": [16, 55, 103, 109, 126, 191, 192, 206, 230, 235], "linagl_vector_norm": 91, "linalg_choleski": 89, "linalg_cond": 89, "linalg_cross": 89, "linalg_det": 89, "linalg_eigh": 89, "linalg_eigv": 89, "linalg_eigvalsh": 89, "linalg_inv": 89, "linalg_ldl_factor": 89, "linalg_lu_factor": 89, "linalg_matmul": 89, "linalg_matrix_norm": 89, "linalg_matrix_pow": 89, "linalg_matrix_rank": 89, "linalg_multi_dot": 89, "linalg_norm": 89, "linalg_pinv": 89, "linalg_slogdet": 89, "linalg_solv": 89, "linalg_solve_ex": 89, "linalg_svd": 89, "linalg_svdv": 89, "linalg_tensorinv": 89, "linalg_tensorsolv": 89, "linalg_vand": 89, "linalg_vecdot": 89, "linalg_vector_norm": 89, "line": [4, 10, 13, 59, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 107, 131, 197, 200, 205, 206, 213, 217, 223, 230, 232, 234, 236, 244], "linear": [88, 89, 91, 103, 106, 107, 122, 196, 197, 204, 205, 206, 207, 209, 210, 212, 213, 217, 221, 230, 232, 236, 241, 251], "linear1": 230, "linear2": 230, "linear_1": [107, 122, 206, 212, 217, 221, 230, 236], "linear_2": [107, 122, 206, 212, 221, 236], "linear_3": [107, 212, 221, 236], "linear_4": [107, 212, 221, 236], "linear_5": [107, 212, 221, 236], "linear_6": [107, 212, 221, 236], "linear_7": [212, 221], "linear_8": [212, 221], "linear_model": 208, "linear_unpack": 89, "linear_unpack_fp16": 89, "linearli": 60, "linearregress": 208, "linecach": 206, "lineno": [131, 206, 232], "link": [209, 247], "linspac": [89, 91], "linux": [10, 247], "linux_cuda": 247, "list": [3, 4, 6, 9, 10, 11, 13, 16, 20, 21, 26, 51, 55, 56, 57, 58, 59, 60, 62, 69, 83, 88, 89, 90, 91, 92, 93, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 122, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 190, 191, 193, 198, 200, 202, 204, 206, 207, 209, 213, 215, 216, 217, 218, 219, 225, 226, 228, 230, 232, 244, 250], "list_kei": 126, "listcomp": 225, "listdir": 206, "llama": [61, 69, 80, 81, 107, 115, 200, 212, 216, 224, 225, 236, 238, 249], "llama_help": [10, 107, 114, 225, 236], "llamaconfig": [115, 116, 216, 236], "llamaforcausallm": 216, "llamamodel": 236, "llamamodelwrapp": 236, "llbk": 238, "llm": [60, 116, 117, 122, 133, 149, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 241, 251], "llm_model_help": [10, 114], "llm_model_setup": [10, 114], "llm_optim": [10, 178], "llm_pattern": [10, 168], "llminputkind": [116, 117], "lm_head": [212, 213], "ln_node": 144, "load": [19, 20, 21, 51, 56, 60, 88, 122, 127, 182, 200, 209, 223, 224, 225, 232, 245], "load_diabet": 204, "load_large_initi": 127, "load_method": 197, "load_program": 197, "loc": 230, "local": [51, 55, 88, 89, 91, 103, 104, 106, 109, 126, 131, 133, 135, 149, 168, 169, 196, 204, 209, 211, 217, 220, 221, 232, 247], "local_domain": 126, "local_funct": [51, 126, 217], "locat": 126, "log": [13, 89, 91, 105, 185, 205, 206, 209, 213, 214, 217, 225, 234], "log10": 89, "log10_": 89, "log1p": 89, "log1p_": 89, "log2": 89, "log2_": 89, "log_": 89, "log_ndtr": 89, "log_norm": 89, "log_normal_": 89, "log_pattern_optim": 131, "log_severity_level": [21, 209], "log_sigmoid": 89, "log_sigmoid_backward": 89, "log_sigmoid_forward": 89, "log_softmax": 89, "log_softmax_int": 91, "log_verbosity_level": [21, 209], "logaddexp": 89, "logaddexp2": 89, "logcumsumexp": 89, "logdet": 89, "logic": [60, 91, 230], "logical_and": 89, "logical_and_": 89, "logical_not": [89, 91, 209], "logical_not_": 89, "logical_or": 89, "logical_or_": 89, "logical_xor": 89, "logical_xor_": 89, "logit": [89, 212, 213], "logit_": 89, "logit_backward": 89, "logsoftmax": [91, 185, 232], "logspac": 89, "logsumexp": 89, "long": [4, 10, 206, 232, 237, 240], "long_factor": [212, 213, 214], "long_output": 232, "long_test": 10, "longer": [91, 121], "longrop": [212, 213, 214], "longrope_frequency_upd": 213, "look": [11, 20, 105, 109, 126, 127, 128, 133, 142, 167, 168, 181, 182, 204, 217, 218, 219, 221, 230, 231, 244, 250], "look_for_pattern": 182, "lookup": [126, 230], "loop": [4, 57, 103, 204, 206, 209, 211, 217, 218, 220, 222, 241], "loop_iter": 225, "lose": 4, "loss": [11, 13, 204, 208], "loss_fn": 208, "loss_funct": 204, "loss_help": [10, 12], "loss_nam": 13, "low": [88, 89, 232], "lower": [91, 206], "lowered_modul": 197, "loweredbackendmodul": 197, "lr": [204, 208], "lstm": 89, "lstm_cell": 89, "lstm_data_impl": 89, "lstm_impl": 89, "lt": [89, 91], "lt_": 89, "lu_solv": 89, "m": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 89, 91, 131, 209, 213, 216, 219, 223, 224, 225, 227, 228, 242, 247], "m1": [131, 198, 200, 204], "m2": [131, 198], "m_opset": 199, "m_out": 89, "ma": 221, "mabq": 238, "mach": 244, "machin": [4, 57, 223], "made": [69, 88, 89, 113, 121, 126, 128, 131, 209, 221, 232, 247], "mai": [10, 16, 60, 91, 103, 104, 106, 107, 111, 123, 126, 131, 168, 185, 204, 205, 209, 211, 213, 215, 216, 217, 219, 221, 223, 230, 231, 232, 248, 250], "main": [10, 57, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 109, 115, 126, 131, 212, 213, 214, 216, 229, 230, 231, 242], "main_loop": 225, "main_opset": [126, 131, 200, 232], "maintain": [107, 236, 251], "make": [16, 57, 58, 60, 98, 103, 104, 105, 109, 111, 125, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 190, 193, 209, 211, 213, 218, 221, 230, 232, 242, 244], "make_aot_ort": 121, "make_boxed_func": [204, 224], "make_config": 4, "make_copi": 98, "make_dataframe_from_benchmark_data": 4, "make_dynamic_cach": [212, 213, 214, 216], "make_dynamic_input": 60, "make_dynamic_object": 126, "make_export_input": 60, "make_fake_input": [206, 213, 236], "make_fe": 60, "make_function_from_nod": 181, "make_fx": 213, "make_fx_trac": 213, "make_graph": [21, 129, 198, 202, 203], "make_hash": 16, "make_idg": 16, "make_idn": 16, "make_initi": [107, 126, 131, 206, 230, 232, 236], "make_kei": [126, 206], "make_local_funct": [126, 221], "make_model": [21, 88, 89, 129, 198, 202, 203, 232], "make_model_funct": 129, "make_my_model": 129, "make_new_dynamic_shap": 126, "make_nn_module_with_cal": 104, "make_nod": [21, 107, 108, 126, 129, 131, 198, 202, 203, 204, 206, 219, 220, 221, 230, 232, 240], "make_node_check_opset": [131, 232], "make_node_extend": 198, "make_opsetid": [21, 129, 198, 202, 203], "make_pattern_from_onnx": 157, "make_quantized_cell_params_fp16": 89, "make_regress": 208, "make_shape_from_result": [126, 230], "make_subset_build": 126, "make_tensor_input": [107, 126, 129, 230, 232, 236], "make_tensor_input_id": 107, "make_tensor_input_id2": 107, "make_tensor_output": [126, 129, 230, 232], "make_tensor_sequence_input": 126, "make_tensor_value_info": [21, 129, 198, 202, 203], "make_tensor_value_info_from_nam": 126, "make_torch_tensor_from_np_arrai": 126, "make_undefined_dimens": [103, 209], "makeconfig": 60, "makedictidxmap": 209, "makenewweight": 209, "mamba": 116, "mambacach": 62, "manag": 10, "mandatori": 230, "mani": [56, 72, 73, 74, 75, 76, 77, 126, 131, 190, 192, 193, 208, 209, 213, 223, 230, 244], "manipul": [230, 247], "map": [9, 90, 101, 103, 105, 106, 107, 109, 126, 131, 143, 172, 190, 209, 230], "margin_ranking_loss": 89, "mark": [126, 215], "mark_dynam": 215, "mark_non_differenti": 225, "marker": [126, 232], "mask": [69, 91, 93, 209, 221], "mask2": 221, "mask_": 209, "mask_fit_x": 209, "mask_fit_x_col": 209, "mask_funct": 212, "mask_output": [88, 89, 126], "mask_sum": 209, "masked_fil": [89, 92, 93, 111, 221], "masked_fill2": 221, "masked_fill_": 89, "masked_fill_1": 221, "masked_fill__scalar": 91, "masked_fill_scalar": 91, "masked_fill_tensor": 91, "masked_scatt": 91, "masked_select_backward": 89, "maskedscatterndofshap": [26, 45, 159, 161], "maskedshapescatternd": 161, "maskedshapescatterndpattern": [159, 161, 244], "mat_qk": 135, "mat_qkv": 135, "match": [88, 89, 105, 109, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 200, 202, 206, 221], "match_batchnormalizationpattern": [221, 232], "match_batchnormalizationtrainingpattern": [221, 232], "match_biasgelupattern": 221, "match_biassoftmaxpattern": 221, "match_castcastbinarypattern": [221, 232], "match_castcastpattern": [221, 232], "match_castlayernormalizationcastpattern": [221, 232], "match_castopcastpattern": [221, 232], "match_castpattern": [221, 232], "match_clipclippattern": [221, 232], "match_computationcastopcastpattern": [221, 232], "match_concatemptypattern": [221, 232], "match_concatgatherpattern": [221, 232], "match_concatreshapepattern": [221, 232], "match_concattwiceunarypattern": [221, 232], "match_contribrotaryembedding3dpattern": 221, "match_contribrotaryembeddingpattern": 221, "match_convbiasnullpattern": [221, 232], "match_dropoutpattern": [221, 232], "match_expandbroadcastpattern": [221, 232], "match_expandpattern": [221, 232], "match_expandswappattern": [221, 232], "match_fastgelupattern": 221, "match_functionattentionpattern": [221, 232], "match_functioncausalmaskmuladdpattern": [221, 232], "match_functioncausalmaskpattern": [221, 232], "match_functioncossincachepattern": [221, 232], "match_functionhalfrotaryembeddingpattern": [221, 232], "match_fusedconvpattern": 221, "match_fusedmatmuldivpattern": 221, "match_fusedmatmulpattern": 221, "match_fusedmatmultransposepattern": 221, "match_fusedmatmulx2pattern": 221, "match_geluerfpattern": 221, "match_geluortpattern": 221, "match_gelupattern": [221, 232], "match_gemmtransposepattern": [221, 232], "match_identitypattern": [221, 232], "match_index": [200, 232], "match_input_paramet": [106, 230], "match_layernormalizationpattern": [221, 232], "match_layernormalizationscalepattern": [221, 232], "match_leakyrelupattern": [221, 232], "match_matmuladdpattern": [221, 232], "match_matmulreshape2of3pattern": [221, 232], "match_model": 157, "match_mulmulmatmulpattern": [221, 232], "match_mulmulmulscalarpattern": [221, 232], "match_multiheadattention3dpattern": 221, "match_ortbatchnormalizationtrainingpattern": 221, "match_pattern": [131, 143, 168, 169, 172, 202, 206], "match_quickgelupattern": 221, "match_reducereshapepattern": [221, 232], "match_reducesumnormalizepattern": [221, 232], "match_reshape2of3pattern": [221, 232], "match_reshapegemmpattern": 221, "match_reshapematmulreshapepattern": [221, 232], "match_reshapepattern": [221, 232], "match_reshapereshapebinarypattern": [221, 232], "match_reshapereshapepattern": [221, 232], "match_rmsnormalizationpattern": [221, 232], "match_rotaryconcatpartpattern": [221, 232], "match_rotaryembeddingpattern": [221, 232], "match_samechildrenfrominputpattern": [221, 232], "match_samechildrenpattern": [221, 232], "match_sequenceconstructatpattern": [221, 232], "match_shapebasedconcatexpandpattern": [221, 232], "match_shapebasededitdistancereshapepattern": [221, 232], "match_shapebasedexpandbroadcastmatmulpattern": [221, 232], "match_shapebasedexpandbroadcastpattern": [221, 232], "match_shapebasedexpandcastwhereswappattern": [221, 232], "match_shapebasedexpandswappattern": [221, 232], "match_shapebasedidentitypattern": [221, 232], "match_shapebasedmatmultomulpattern": [221, 232], "match_shapebasedreshapeissqueezepattern": [221, 232], "match_shapebasedsamechildrenpattern": [221, 232], "match_shapebasedshapeshapeaddpattern": [221, 232], "match_shapebasedstaticexpandpattern": [221, 232], "match_shapedbasedreshapepattern": [221, 232], "match_simplifiedlayernormalizationmulpattern": 221, "match_simplifiedlayernormalizationpattern": 221, "match_skiplayernormalizationpattern": 221, "match_skipsimplifiedlayernormalizationmulpattern": 221, "match_skipsimplifiedlayernormalizationpattern": 221, "match_sliceslicepattern": [221, 232], "match_slicessplitpattern": [221, 232], "match_softmaxcrossentropylosscastpattern": [221, 232], "match_softmaxgradpattern": 221, "match_splitconcatpattern": [221, 232], "match_squeezeaddpattern": [221, 232], "match_squeezebinaryunsqueezepattern": [221, 232], "match_squeezeunsqueezepattern": [221, 232], "match_staticconcatreshapepattern": [221, 232], "match_sub1mulpattern": [221, 232], "match_swapexpandreshapepattern": [221, 232], "match_switchorderbinarypattern": [200, 221, 232], "match_switchreshapeactivationpattern": [221, 232], "match_transposeequalreshapepattern": [221, 232], "match_transposefusedmatmulbpattern": 221, "match_transposematmulpattern": [221, 232], "match_transposereshapematmulpattern": [221, 232], "match_transposereshapetransposepattern": [221, 232], "match_transposetransposepattern": [221, 232], "match_unsqueezeequalpattern": [221, 232], "match_unsqueezereshapepattern": [221, 232], "match_unsqueezeunsqueezepattern": [221, 232], "matching_step": [200, 232], "matchresult": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 202, 232], "materi": 206, "math": [10, 92, 111, 133, 178, 209], "matmul": [89, 91, 107, 133, 142, 145, 168, 169, 176, 178, 193, 198, 200, 204, 212, 221, 230, 232, 236, 238, 240], "matmul2": 221, "matmul_1": [107, 221, 236, 240], "matmul_131": 238, "matmul_132": 238, "matmul_133": 238, "matmul_169": 238, "matmul_1_output_0": 238, "matmul_2": [107, 221, 236, 240], "matmul_3": [221, 240], "matmul_4": 240, "matmul_nod": 145, "matmul_output_0": 238, "matmuladd": 133, "matmuladdpattern": [88, 89, 131, 133, 145, 200, 221, 232, 244], "matmulreshape2of3": 133, "matmulreshape2of3pattern": [88, 131, 133, 145, 200, 221, 232, 244], "matmulreshape2of3patternl__unsafe_view_3": 200, "matmulreshape2of3patternl_transpose_6": 200, "matmulreshape2of3patternl_transpose_8": 200, "matmulreshape2of3patternl_view_34": 200, "matplotlib": [10, 201, 206, 247], "matrix": [11, 13, 160, 161, 209], "matrix_exp": 89, "matrix_exp_backward": 89, "matrix_pow": 89, "max": [16, 56, 88, 89, 91, 133, 137, 194, 197, 200, 206, 212, 213, 215, 216, 221, 225, 232], "max_": [91, 93], "max_1": [212, 213], "max_diff": [16, 56, 209, 220, 221], "max_dim": 91, "max_exec": 10, "max_it": [88, 89, 126, 128, 131, 200, 202, 204, 208, 221, 232, 244], "max_length": 216, "max_norm": 91, "max_oth": 91, "max_pool1d": [89, 91], "max_pool1d_with_indic": 89, "max_pool2d": [89, 91, 206], "max_pool2d_1": 206, "max_pool3d": [89, 91], "max_position_embed": [115, 118, 119, 120, 212, 213, 214, 216, 224, 225, 236, 240], "max_t": 91, "max_tim": [10, 88, 89, 200, 202, 206, 221, 232], "max_token_id": [117, 216], "max_unpool2d": 89, "max_unpool3d": 89, "max_val": 91, "maximum": [16, 56, 89, 91, 126, 128, 131, 206, 208, 209], "maxmatch": [200, 221, 232], "maxpool": [91, 206], "maxtim": 206, "maxtoxortransform": 194, "mayb": [204, 213], "maybe_mark_dynam": 215, "mb": [206, 210, 222, 241], "mean": [4, 56, 57, 89, 91, 107, 111, 117, 123, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 206, 209, 212, 223, 230, 232, 236], "mean_1": [107, 212, 236], "mean_2": [107, 212, 236], "mean_3": 212, "mean_4": 212, "mean_squared_error": 208, "meant": [11, 51, 89, 223, 230], "measur": [10, 18, 19, 56, 83, 109, 206, 224, 225, 226, 228, 242, 246], "measure_tim": [10, 206], "median": 89, "medium": [69, 79, 82, 224, 225], "mem": [210, 222, 241], "mem_": 57, "member": 60, "memcpyfromhost": [26, 36], "memcpytohost": [26, 36], "memlock": 247, "memob": 206, "memori": [10, 18, 23, 56, 60, 88, 89, 196, 209, 213, 224, 225, 248], "memory_": 57, "memory_delta": 57, "memory_format": [91, 97, 215], "memory_peak": [10, 17, 56, 57, 206], "memory_peak_plot": 206, "memoryspi": 18, "mention": 103, "merchant": 235, "merg": [57, 103, 126, 133, 135, 137, 152, 153, 178, 179, 230, 235], "merge_allow": [88, 89, 126], "merge_benchmark_report": [57, 71], "meshgrid": [89, 91], "meshgrid_index": 91, "messag": [10, 103, 107, 110, 111, 113, 126, 209, 230, 236, 242, 243, 244, 245, 246], "met": 191, "meta_tensor": 206, "meta_util": 206, "metadata": [105, 126], "metadata_prop": [104, 126], "metadata_props_kei": 96, "metadata_props_valu": 96, "meth": 209, "meth__eq___": 93, "meth_clamp_max": 93, "meth_clamp_min": 93, "meth_eq": 93, "meth_numel": 93, "method": [10, 18, 21, 56, 83, 88, 89, 95, 103, 104, 109, 111, 125, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 192, 197, 206, 209, 216, 225, 230, 232, 248], "method_nam": [109, 197], "methodnam": 10, "metric": [4, 19, 57, 208, 209, 223], "microsoft": [172, 206, 212, 213, 214, 221, 247], "middl": 206, "might": [126, 131, 193, 215, 221, 230], "migrat": 247, "min": [16, 89, 91, 103, 117, 133, 137, 206, 209, 216, 221], "min_": [91, 93], "min_exec": 10, "min_freq": 181, "min_opset": [131, 133, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160, 162, 164, 165, 167, 168, 169, 171, 172, 173, 174, 177, 179, 180, 200, 232], "min_oth": 91, "min_t": 91, "min_val": 91, "mini": [109, 116, 211, 215, 216, 218, 219, 221, 222, 241], "mini_onnx_build": 206, "minim": [197, 230], "minimum": [10, 16, 89, 91, 106], "minimun": 10, "minut": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "miopen_batch_norm_backward": 89, "miscellan": 234, "mish": 89, "mish_": 89, "mish_backward": 89, "mismatch": [126, 214], "miss": [4, 126, 131, 168, 191, 192, 209, 232, 236, 248], "missing_i": 209, "missing_valu": 209, "missing_x": 209, "mistral_help": [10, 114], "mistralconfig": 118, "mix": [79, 224, 225, 227, 247], "mixtur": 13, "mjg": 230, "mk_fake_tensor": 206, "mkldnn": 89, "ml": [107, 123, 170, 196, 199, 206, 211, 236, 244], "ml_dtype": [16, 234], "mllama": 116, "mlp": [88, 89, 107, 204, 212, 213, 214, 217, 232, 236, 240], "mm": [198, 204, 230], "mm_10": 200, "mm_11": 200, "mm_12": 200, "mm_13": 200, "mm_14": 200, "mm_15": 200, "mm_16": 200, "mm_17": 200, "mm_18": 200, "mm_19": 200, "mm_20": 200, "mm_21": 200, "mm_8": 200, "mm_9": 200, "mm_node": 145, "mnode": 176, "mod": [9, 91, 103, 106, 185, 205, 213, 217], "mode": [9, 56, 89, 91, 107, 133, 144, 208], "model": [6, 8, 10, 16, 19, 20, 21, 51, 55, 56, 57, 60, 61, 69, 72, 73, 74, 75, 76, 77, 80, 81, 83, 88, 89, 90, 103, 104, 105, 106, 107, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 131, 132, 133, 134, 143, 157, 172, 182, 185, 190, 191, 192, 196, 198, 199, 205, 207, 208, 210, 211, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251], "model1": 113, "model2": [113, 203], "model_attn_impl": 57, "model_contain": [10, 55, 103, 109, 126], "model_input": 209, "model_nam": [56, 57, 60, 216, 223], "model_onnx": 206, "model_output": 215, "model_proto": [6, 206], "model_run": [10, 17], "model_s": 206, "model_select": 208, "model_task": 57, "model_typ": [212, 213, 214, 216], "modelbuild": 56, "modelcontain": [55, 103, 109, 126, 127], "modeldiagnoseoutput": 109, "modeling_llama": [107, 236], "modeling_output": 216, "modeling_phi": 240, "modeling_phi3": [212, 213, 214], "modeling_rope_util": 213, "modelproto": [6, 8, 10, 11, 13, 16, 19, 20, 21, 51, 55, 60, 83, 88, 89, 103, 105, 109, 113, 122, 123, 126, 127, 129, 131, 157, 181, 182, 185, 191, 192], "modelrunn": 60, "modelwithcontrolflow": 217, "modif": [91, 102, 103, 111, 127, 193, 219, 230, 240], "modifi": [6, 13, 20, 60, 102, 103, 111, 113, 115, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 232, 235, 236], "modindex": [107, 212, 236], "moduel": 221, "modul": [5, 9, 10, 11, 18, 60, 62, 69, 88, 90, 91, 101, 102, 104, 105, 106, 107, 109, 110, 111, 117, 122, 132, 146, 197, 204, 206, 207, 208, 212, 215, 217, 218, 219, 220, 221, 225, 231, 232, 236, 244, 248, 249], "module_call_graph": 207, "module_call_wrapp": 213, "module_nam": [91, 104], "module_name_typ": 109, "modulecallentri": 207, "modulecallsignatur": 207, "modulelist": [122, 209, 221], "moduletyp": 111, "modulewithacustomoper": [218, 219], "modulewithcontrolflowloop": 215, "modulewithcontrolflowloopscan": 215, "momentum": 91, "monai": 10, "monitor": 18, "more": [10, 13, 89, 109, 111, 113, 121, 122, 126, 131, 168, 169, 192, 205, 209, 211, 213, 214, 215, 216, 217, 221, 231, 232, 236], "most": [21, 57, 103, 107, 111, 126, 128, 181, 213, 230, 236], "mostli": [51, 126, 128, 234, 243, 244, 247], "move": [126, 132, 133, 136, 142, 148, 168, 169, 209], "move_initializer_to_const": [88, 89, 126], "move_initializers_to_const": 126, "mse_loss": [89, 91], "mse_loss_backward": 89, "mseloss": 208, "msg": [10, 109, 113, 126, 131, 232, 236], "msort": 89, "much": [60, 126, 128, 192, 213, 232, 250], "mul": [89, 91, 97, 107, 126, 128, 133, 134, 145, 146, 149, 158, 161, 169, 170, 171, 172, 173, 178, 180, 185, 193, 200, 202, 204, 205, 212, 215, 217, 220, 221, 232, 236, 238, 240], "mul1": [135, 145], "mul11": 200, "mul15": 200, "mul1_nod": 149, "mul2": [135, 145], "mul25": 200, "mul2_nod": 149, "mul31": 200, "mul33": 200, "mul37": 200, "mul41": 200, "mul5": 200, "mul55": 200, "mul57": 200, "mul61": 200, "mul65": 200, "mul7": 200, "mul_": 89, "mul_1": [107, 205, 212, 215, 221, 236], "mul_10": [107, 212, 236], "mul_11": [107, 212, 236, 240], "mul_12": [107, 212, 236], "mul_13": [107, 200, 212, 236], "mul_14": [200, 212], "mul_15": [200, 212], "mul_16": [200, 212], "mul_17": [200, 212], "mul_18": [200, 212], "mul_19": [200, 212], "mul_1_output_0": 238, "mul_2": [107, 212, 215, 236, 238], "mul_20": [200, 212, 240], "mul_21": [200, 212], "mul_22": 200, "mul_23": 200, "mul_24": 200, "mul_25": 200, "mul_26": 200, "mul_27": 200, "mul_28": 200, "mul_29": 200, "mul_3": [107, 212, 236, 238], "mul_30": 200, "mul_31": 200, "mul_32": 200, "mul_33": 200, "mul_34": 200, "mul_35": 200, "mul_36": 200, "mul_37": 200, "mul_38": 200, "mul_39": 200, "mul_4": [107, 212, 236], "mul_40": 200, "mul_41": 200, "mul_42": 200, "mul_43": 200, "mul_44": 200, "mul_45": 200, "mul_5": [107, 212, 236], "mul_6": [107, 212, 236], "mul_7": [107, 212, 236], "mul_8": [107, 212, 236], "mul_9": [107, 212, 236], "mul__tensor": 91, "mul_nod": [144, 147, 149, 171, 172, 173, 180], "mul_output_0": 238, "mul_tensor": [91, 221, 240], "muladd": [26, 28, 158, 161], "mulbackward0": 217, "muldivcancellertransform": 194, "mulitpl": [211, 212, 214, 215, 217, 221, 222, 241, 251], "mulmul": [26, 28, 158, 161], "mulmulmatmul": 133, "mulmulmatmulpattern": [131, 133, 145, 221, 232, 244], "mulmulmulscalar": 133, "mulmulmulscalarpattern": [131, 133, 146, 200, 221, 232, 244], "mulmulsigmoid": 202, "mulmulsigmoidpattern": 202, "mulmulsigmoidpattern2": 202, "mulsharedinput": [26, 28], "mulsigmoid": [26, 37, 158, 161], "mulsigmoidpattern": [158, 161, 244], "mulsub": [26, 28], "multi": [4, 230], "multi_margin_loss": 89, "multi_run": 4, "multiattentionblock": [122, 221], "multigammaln": 89, "multiheadattent": [178, 179], "multiheadattention3d": 178, "multiheadattention3dpattern": [178, 179, 221, 244], "multilabel_margin_loss": 89, "multilabel_margin_loss_forward": 89, "multinomi": 91, "multipl": [4, 57, 83, 91, 107, 109, 117, 126, 131, 133, 134, 146, 153, 154, 168, 169, 170, 171, 178, 179, 192, 220, 232], "multiple_output": [126, 192], "multipli": [4, 89, 91, 193], "multiply_tensor": 91, "multiprocess": 206, "must": [4, 10, 11, 13, 56, 89, 103, 109, 110, 121, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 186, 192, 208, 209, 216, 218, 219, 230, 232], "mutat": 247, "mutates_arg": [218, 219], "mutation_guard": 225, "mv": 89, "mvlgamma": 89, "mvlgamma_": 89, "my_compil": 207, "my_neuron": 205, "my_opset": 199, "mylib": [218, 219], "mymodelclass": 206, "n": [56, 91, 105, 131, 206, 209, 213, 214, 218, 230, 232], "n0": 199, "n1": [199, 230], "n2": [199, 230], "n_dim": [62, 103, 106, 197, 205, 207, 208, 230, 236], "n_element": 110, "n_featur": 208, "n_function": 206, "n_in": 185, "n_inform": 208, "n_layer": 216, "n_nan": 209, "n_neighbor": 209, "n_node": 206, "n_output": 126, "n_sub": 206, "n_target": [62, 103, 106, 197, 205, 207, 208, 230, 236], "n_tree": 3, "name": [3, 4, 10, 11, 13, 16, 20, 51, 55, 56, 59, 60, 61, 62, 69, 88, 89, 90, 91, 92, 93, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 123, 125, 126, 127, 129, 131, 132, 133, 146, 157, 161, 166, 168, 170, 178, 181, 190, 191, 192, 193, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 219, 220, 221, 223, 230, 232, 236, 240, 247, 248], "name_fct": 104, "name_to_renam": 126, "named_modul": [90, 104, 205, 217], "named_paramet": 126, "nameerror": 201, "names_dim": 89, "names_dtype_out": 89, "names_out": 89, "names_scalaropt_dim": 89, "names_scalaropt_dim_dtyp": 89, "namespac": [3, 4, 218], "nan": [200, 206, 209, 232], "nan_euclidean": 209, "nan_to_num": [89, 91, 209], "nan_to_num_": 89, "naneuclidean": 209, "nanmean": 89, "nanmedian": 89, "nanquantil": 89, "nansum": 89, "narrow": 89, "narrow_copi": 89, "native_batch_norm": 89, "native_batch_norm_backward": 89, "native_batch_norm_backward_out": 89, "native_channel_shuffl": 89, "native_dropout": [89, 91], "native_dropout_backward": 89, "native_group_norm": [89, 91], "native_group_norm_backward": 89, "native_group_norm_backward_out": 89, "native_layer_norm": [89, 91], "native_layer_norm_backward": 89, "native_layer_norm_backward_out": 89, "nbza": 221, "ncall": 206, "nccl": 247, "nchwc": 206, "nconsid": [213, 214], "nd": [198, 202], "ndarrai": [10, 11, 16, 19, 21, 126, 191, 192, 232], "ndtr": 89, "ndtri": 89, "ne": [89, 91, 212, 213, 217], "ne_": 89, "ne_scalar": 91, "ne_tensor": 91, "nearbi": 243, "necessari": [8, 107, 193, 205, 211], "necessarili": 221, "need": [60, 62, 89, 103, 110, 111, 113, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 195, 197, 204, 208, 209, 213, 215, 216, 221, 223, 230, 232], "need_run_decomposit": 103, "neg": [89, 91, 97, 107, 111, 131, 169, 185, 200, 205, 212, 217, 232, 236, 238, 240], "neg_": 89, "neg_1": [107, 212, 236, 238], "neg_2": [200, 212], "neg_3": [200, 212], "neg_nod": [149, 162], "neg_output_0": 238, "negative_list": 131, "negative_slop": 91, "neginf": 91, "negxplus1": [26, 38, 158, 161], "negxplus1pattern": [158, 161, 244], "neighbour": [209, 248], "nest": 126, "nested_to_padded_tensor": 89, "neuron": [62, 103, 106, 197, 205, 207, 230, 236], "neuron16": 62, "neuron2": [207, 230], "neuron2input": 62, "neuron2output": 62, "neuroniint": [62, 205], "neuronilist": 62, "neuronloop": 205, "neuronmambacach": 62, "neuronnamed1": 62, "neuronnamed2": 62, "neuronnameddict": 62, "neuronneuron": 205, "neuronnoneint": 62, "neuronnoneintdefault": 62, "neuronnoneintdict": 62, "neuronnonelistint": [62, 205], "neurontupl": 62, "never": [60, 126, 128, 215, 248], "never_test": 10, "new": [20, 60, 89, 103, 105, 110, 113, 117, 123, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 190, 192, 193, 200, 204, 206, 218, 219, 221, 223, 230, 232, 247, 250], "new_arg": [3, 59], "new_cst": 200, "new_empti": 89, "new_empty_strid": 89, "new_forward": 217, "new_ful": 89, "new_nam": 111, "new_nod": 126, "new_on": [89, 91, 107, 212, 236], "new_ones_1": 212, "new_op": 26, "new_proto": 202, "new_shap": [193, 204, 208, 217, 230, 232], "new_vers": 123, "new_weight": 209, "new_zero": 89, "next": [13, 60, 89, 131, 133, 142, 206, 211, 218, 219, 230, 231, 232, 236], "next_dim": 220, "next_mul_nod": 173, "next_nod": [131, 142, 145, 148, 155, 156, 232], "nextaft": 89, "nextafter_": 89, "nfeed": [103, 106], "nfor": [213, 214], "nhide": 206, "nicer": 10, "nif": [213, 214], "nightli": [196, 211, 247], "nitb": 238, "nll_loss": 89, "nll_loss2d": 89, "nll_loss2d_backward": 89, "nll_loss2d_forward": 89, "nll_loss_backward": 89, "nll_loss_forward": [89, 91], "nll_loss_nd": 89, "nmodel": 206, "nn": [88, 89, 91, 92, 103, 104, 105, 106, 107, 111, 122, 197, 204, 205, 206, 207, 208, 209, 212, 213, 215, 217, 218, 219, 220, 221, 230, 231, 232, 236, 248, 249], "nn_modul": 236, "nnno": 238, "nnumpy_sin": 218, "nnz": 208, "no_grad": [56, 60, 63, 64, 65, 66, 67, 68, 107, 223, 240], "no_stat": 89, "node": [13, 16, 20, 21, 51, 69, 88, 89, 90, 91, 101, 102, 103, 104, 105, 107, 108, 111, 121, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 191, 192, 193, 194, 195, 198, 200, 202, 203, 204, 205, 206, 209, 212, 213, 218, 219, 221, 230, 231, 236, 242, 244, 250], "node_0_cast": 198, "node_0_constantofshap": 129, "node_1_cast": 198, "node_1_scatternd": 129, "node_2_flatten": 198, "node_3_flatten": 198, "node_4_concat": 198, "node_5_concat": 198, "node_6_reshap": 198, "node_7_reshap": 198, "node_8_matmul": 198, "node_9_ident": 198, "node_act": 175, "node_add": [144, 180], "node_at": 150, "node_befor": [129, 131, 159, 177, 198, 232], "node_before_left": [145, 176], "node_before_right": [145, 176], "node_div": 176, "node_equ": 141, "node_equal_unsqueez": 141, "node_first": 156, "node_left": [136, 145, 146, 148, 154, 158], "node_left_tr": 145, "node_mul": [144, 158, 180], "node_nam": 91, "node_pow": [144, 180], "node_reciproc": [144, 180], "node_reduc": [144, 180], "node_right": [136, 145, 146, 148, 154, 158], "node_right_tr": 145, "node_second": 156, "node_seq": 150, "node_sigmoid": 158, "node_simplifi": 180, "node_sqrt": [144, 180], "node_typ": 182, "node_type_frequ": 181, "node_unsqueez": 141, "nodeproto": [15, 16, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 105, 123, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 191, 192, 193, 195, 202, 230, 232], "nois": [91, 208], "non": [9, 101, 112, 116, 212, 213, 214, 216, 230], "non_block": [91, 230], "non_missing_fix_x": 209, "non_strict_util": [205, 206, 213, 217, 236], "non_zero": 248, "none": [3, 4, 6, 9, 10, 11, 13, 15, 16, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 83, 88, 89, 90, 91, 92, 93, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 121, 122, 123, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 219, 220, 221, 230, 232, 236, 244], "none_if": 10, "noninfring": 235, "nono": 238, "nonzero": [91, 209], "nonzero_numpi": [89, 91], "nop_decomposit": 89, "noqa": 197, "norm": [13, 89, 91, 107, 208, 212, 213, 236], "norm_1": [122, 221], "norm_2": [122, 221], "norm_except_dim": 89, "norm_nod": 180, "norm_typ": 91, "normal": [89, 91, 174, 178, 208], "normal_": 89, "normalize_as_list": 225, "normalized_shap": [91, 221], "normpath": 206, "not_equ": 89, "not_fake_model": [103, 106], "not_optim": 182, "not_optimized_model": 182, "note": [111, 247, 248], "notebook": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "notensor": 217, "noth": [56, 111, 168, 225, 230], "notic": 235, "notimplementederror": [107, 209, 236], "notset": [91, 206], "now": [21, 56, 107, 202, 205, 212, 213, 216, 217, 218, 219, 221], "nowrap": 60, "np": [10, 21, 129, 198, 201, 203, 206, 208, 209, 218, 219, 230, 236, 240], "np_arrai": 126, "np_dtype_to_tensor_dtyp": 16, "nqob": 238, "nrun": 206, "nsorbas": 225, "nsy": [79, 247], "nthe": 213, "ntonli": 89, "ntzt": 238, "nuclear_norm": 89, "null": [11, 126, 133, 139], "nullshap": 126, "num_attention_head": [115, 118, 119, 120, 212, 213, 214, 216, 224, 225, 236, 240], "num_class": 91, "num_fram": 220, "num_group": 91, "num_head": 221, "num_hidden_lay": [61, 69, 112, 115, 116, 117, 118, 119, 120, 212, 213, 214, 216, 224, 225, 227, 236, 240, 247], "num_key_value_head": [117, 118, 119, 120, 212, 213, 214, 216, 240], "num_output": [203, 240], "num_sampl": 91, "num_us": [107, 111, 197, 205, 207, 215, 217, 218, 219, 221, 230, 236], "num_work": 204, "number": [3, 4, 10, 19, 56, 60, 61, 69, 83, 91, 103, 110, 111, 117, 125, 126, 128, 131, 133, 146, 148, 181, 185, 200, 206, 208, 209, 230, 232, 244, 246, 248], "numel": [206, 209], "numi": 122, "numpi": [10, 13, 16, 19, 21, 51, 54, 91, 103, 106, 126, 129, 192, 198, 201, 203, 206, 208, 209, 215, 218, 219, 220, 221, 229, 230, 231, 234, 236, 240, 247], "numpy_help": [10, 129, 198], "numpy_sin": [218, 219], "numpy_sin_shap": 219, "numpy_sin_to_onnx": [218, 219], "numpy_t": 91, "nvcc": 247, "nvcr": 247, "nvfuser": 247, "nvidia": [3, 21, 107, 196, 206, 211, 223, 236, 247], "nvimgcodec": 247, "nvjitlink": 247, "nvml": 248, "nvrtc": 247, "nvtx": [21, 56, 60, 63, 64, 65, 66, 67, 68, 83, 247], "o": [10, 18, 109, 126, 182, 200, 201, 206, 219, 225, 232, 243, 244, 248], "o_height": 169, "o_o_four": 169, "o_proj": [107, 212, 213, 214, 236], "ob": [105, 206], "obj": [16, 98, 109, 110, 131, 230], "object": [16, 88, 89, 98, 101, 103, 107, 110, 111, 126, 131, 133, 142, 181, 192, 201, 206, 225], "oblivi": 9, "obs1": 206, "obtain": [104, 126, 133, 151, 200, 207, 223, 235, 236, 244], "occur": [126, 205, 213, 215, 216, 217, 231, 249], "odd": 134, "offici": [26, 247, 249], "offset": 91, "often": [126, 128, 213], "oh": [21, 129, 198, 202, 203], "ok": [89, 109, 209, 213], "ok_childc": 209, "old": 190, "older": 126, "on_ent": 225, "onc": [56, 131, 181, 204, 219, 221, 231, 232], "one": [4, 10, 11, 13, 16, 18, 21, 51, 56, 60, 62, 91, 103, 107, 109, 110, 111, 113, 123, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 192, 193, 204, 205, 206, 209, 211, 212, 213, 214, 215, 217, 221, 222, 223, 230, 231, 232, 241, 244, 247, 248, 251], "one_hot": [89, 91], "ones": [21, 51, 60, 89, 91, 92, 109, 110, 126, 212, 213, 214, 216, 221, 240], "ones_lik": [89, 209, 225], "onesid": 91, "onh": [129, 198], "onli": [3, 13, 16, 51, 56, 57, 60, 69, 88, 89, 91, 94, 101, 103, 107, 109, 111, 123, 126, 131, 133, 142, 145, 148, 168, 169, 170, 171, 181, 200, 202, 219, 221, 230, 232, 244], "only_arrai": 126, "only_if_fail": 109, "only_regist": 101, "onnx": [4, 10, 11, 13, 16, 19, 21, 26, 51, 55, 56, 60, 69, 72, 73, 74, 75, 76, 77, 78, 80, 83, 88, 89, 91, 101, 103, 104, 105, 107, 109, 121, 122, 123, 125, 126, 127, 128, 129, 131, 157, 170, 182, 186, 190, 191, 192, 193, 196, 197, 198, 199, 201, 203, 205, 210, 211, 213, 218, 219, 220, 223, 229, 230, 231, 232, 234, 236, 238, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251], "onnx_": 57, "onnx_ani": [10, 133, 232], "onnx_array_api": [129, 131, 198, 200, 202, 204, 206, 208, 217, 218, 219, 220, 221, 236], "onnx_attent": [10, 133, 178, 179], "onnx_builder_progress": [103, 126], "onnx_cast": [10, 133, 232], "onnx_clip": [10, 133], "onnx_concat": 10, "onnx_const": [10, 133], "onnx_conv": [10, 133, 206], "onnx_custom_backend": [88, 204, 229, 230], "onnx_debug_backend": [204, 229, 230], "onnx_deriv": 11, "onnx_diagnost": [16, 206, 209, 212, 213, 214, 216, 220, 221, 230, 240], "onnx_dropout": [10, 133], "onnx_dtype_nam": 16, "onnx_dtype_to_torch_dtyp": 16, "onnx_dynamo": [72, 73, 74, 75, 76, 77, 83, 109, 223], "onnx_equ": [10, 133], "onnx_expand": [10, 133, 232], "onnx_export": [10, 103, 104, 107, 230, 236], "onnx_export_templ": 10, "onnx_extend": [201, 202], "onnx_files": 223, "onnx_find": 20, "onnx_funct": [10, 133, 206], "onnx_help": [209, 220, 221], "onnx_id_nod": 105, "onnx_input_nam": 223, "onnx_ir": [127, 206], "onnx_layer_norm": [10, 133], "onnx_lighten": 20, "onnx_matmul": [10, 133, 232], "onnx_ml_pb2": 11, "onnx_model": [6, 88, 223], "onnx_mul": [10, 133, 200], "onnx_n_input": 223, "onnx_n_output": 223, "onnx_nam": 105, "onnx_nod": [15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "onnx_optim": 223, "onnx_output_nam": 223, "onnx_program": 236, "onnx_reduc": [10, 133], "onnx_registri": [6, 89], "onnx_reshap": [10, 133, 145, 206, 232], "onnx_rotari": [10, 133, 178, 179, 232], "onnx_run_disc": 209, "onnx_sequ": [10, 133], "onnx_shap": [10, 133, 232], "onnx_shape_infer": 6, "onnx_slic": [10, 133], "onnx_split": [10, 133], "onnx_sub": [10, 133], "onnx_symbol": 96, "onnx_symbolic__symbolic_default": 96, "onnx_to_sess": 21, "onnx_tool": [10, 17], "onnx_transpos": [10, 133, 232], "onnx_unlighten": 20, "onnx_unsqueez": [10, 133, 232], "onnxconstantfold": 126, "onnxcst": [126, 192], "onnxdyndim": [126, 192], "onnxeasypatternoptim": [157, 181], "onnxfoldnot": 126, "onnxfunc": 126, "onnxmltool": 247, "onnxnodetyp": 126, "onnxquiet": 126, "onnxrt": [79, 80, 81, 113], "onnxrt_dump_path": 4, "onnxruntim": [3, 6, 8, 10, 11, 19, 21, 26, 51, 56, 69, 79, 83, 88, 89, 106, 121, 122, 126, 128, 174, 178, 196, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 221, 227, 229, 230, 232, 234, 236, 241, 244, 247], "onnxruntime_enable_aten": 247, "onnxruntime_inference_collect": 225, "onnxruntime_train": 10, "onnxruntm": 56, "onnxscript": [10, 83, 89, 107, 108, 196, 197, 206, 210, 234, 236, 241, 247], "onnxshapecomput": [126, 192], "onnxstop": 126, "onnxstopoutput": 126, "onnxstopshap": [126, 192], "onnxstoptyp": [126, 192], "onnxstopvalueshap": [126, 192], "onnxverbos": 103, "onx": [8, 11, 13, 16, 20, 103, 105, 106, 109, 122, 181, 182, 198, 206, 207, 208, 209, 217, 218, 219, 220, 221, 230, 232, 236, 240], "onx_cuda_optim": 221, "onx_inlin": 221, "onx_modul": 221, "onx_module_optim": 221, "onx_optim": 221, "oobabooga": 247, "op": [10, 12, 26, 69, 89, 103, 107, 109, 110, 111, 121, 129, 146, 197, 199, 202, 205, 207, 209, 212, 215, 217, 220, 221, 230, 236], "op_": 57, "op_add_add_mul_mul": [10, 26, 27], "op_attent": [10, 26], "op_average_pool_grad": [10, 26, 27], "op_bias_softmax": [10, 26], "op_broadcast_gradient_arg": [10, 14], "op_cast_lik": [10, 26, 27], "op_complex": [10, 26, 27], "op_concat": [10, 26, 27], "op_constant_of_shap": [10, 26, 27], "op_fused_matmul": [10, 26, 27], "op_gath": [10, 26], "op_gather_el": [10, 26], "op_gather_grad": [10, 26, 27], "op_memcpy_host": [10, 26, 27], "op_mul_sigmoid": [10, 26, 27], "op_nam": [96, 201], "op_negxplus1": [10, 26, 27], "op_qlinear_average_pool": [10, 26, 27], "op_qlinear_conv": [10, 26, 27], "op_quick_gelu": [10, 26, 27], "op_replace_zero": [10, 26, 27], "op_rotari": [10, 26, 27], "op_scatter_el": [10, 26, 27], "op_scatternd_of_shap": [10, 26, 27], "op_simplified_layer_norm": [10, 26, 27], "op_skip_layer_norm": [10, 26, 27], "op_slic": [10, 26, 27], "op_transpose_cast": [10, 26, 27], "op_tri_matrix": [10, 26, 27], "op_typ": [108, 123, 126, 129, 131, 182, 193, 198, 200, 202, 206, 218, 232], "open": [57, 197, 200, 206, 209, 232], "open_datafram": 57, "opencv": [75, 76], "openpyxl": 247, "oper": [11, 13, 26, 69, 91, 103, 107, 109, 111, 123, 125, 126, 128, 131, 133, 134, 136, 142, 145, 146, 148, 158, 160, 161, 178, 179, 185, 193, 200, 205, 209, 211, 213, 215, 216, 217, 220, 221, 222, 230, 231, 232, 236, 241, 244, 251], "operand": 109, "operatorentri": 219, "operatorsupport": 90, "opet": 131, "opetor": 69, "opoverload": [89, 230], "oprun": 26, "opset": [8, 26, 55, 56, 60, 83, 88, 89, 103, 106, 109, 122, 123, 125, 126, 131, 133, 148, 181, 192, 200, 202, 204, 206, 207, 208, 217, 218, 219, 220, 221, 230, 240], "opset18": 199, "opset2": [230, 232], "opset3": 232, "opset32": 232, "opset4": 232, "opset_import": [21, 129, 198, 199, 202, 203], "opset_vers": 6, "opt": [200, 201, 206, 209, 232, 247], "opt_onx": 232, "opt_pattern": [57, 223], "optim": [6, 26, 51, 55, 56, 60, 69, 78, 79, 83, 88, 89, 103, 104, 109, 121, 122, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 196, 197, 201, 203, 206, 208, 210, 218, 219, 228, 231, 241, 242, 246, 251], "optimization_opt": [10, 126, 200, 202, 206, 232], "optimizationopt": [55, 88, 89, 103, 107, 109, 128, 200, 202, 206, 221, 232], "optimizaton": 232, "optimize_ir": 206, "optimize_model_proto_ox": [6, 206], "optimize_node_subgraphs_inplac": [126, 131], "optimize_ox": 83, "optimize_submodul": 104, "optimize_with_pattern": [126, 206], "optimized_mod": 207, "optimized_model": [182, 206], "optimized_model_filepath": [21, 51, 206, 209], "optimized_proto": 200, "optimizedmodul": 204, "option": [8, 11, 16, 21, 51, 55, 58, 59, 60, 62, 80, 82, 88, 89, 103, 107, 109, 121, 126, 128, 131, 202, 206, 219, 221, 223, 232, 242, 243, 244, 245, 246, 247, 251], "optmiz": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182], "oqq": 230, "or_older_than": 10, "orch": 225, "ord": 91, "ord_str": 89, "order": [4, 16, 69, 83, 88, 89, 101, 103, 106, 110, 121, 126, 128, 132, 133, 146, 206, 232], "order_algorithm": [69, 88, 89, 121], "order_optim": [10, 131], "orderalgorithm": [126, 128, 132], "ordered_nam": 110, "ordereddict": 225, "orderoptim": 132, "org": [91, 92, 126, 206, 213, 216, 236, 247], "organ": [196, 211, 231], "orgqr": 89, "origin": [11, 52, 106, 126, 133, 155, 190, 221], "original_max_position_embed": [212, 213, 214], "ort": [79, 81, 88, 89, 209, 223, 227, 247], "ort_enable_al": 206, "ort_evalu": [10, 26], "ort_help": [7, 10], "ort_optim": [6, 69, 83], "ort_optimization_level": [88, 89, 121], "ort_run": 56, "ort_sess": [10, 17], "ortbackend": [88, 204], "ortbatchnormalizationtrain": 178, "ortbatchnormalizationtrainingpattern": [174, 178, 221, 244], "ortev": 51, "ortgradientforwardbackward": 11, "ortmodul": [10, 227, 247], "ortmodulegraphbuilderconfigur": 11, "ortop": 202, "ortshared_1_0_1_0_token_163": 238, "ortshared_1_0_1_1_token_164": 238, "ortshared_7_0_1_0_token_156": 238, "ortshared_7_0_1_1_token_171": 238, "ortshared_7_1_1_0_token_155": 238, "ortshared_7_1_1_0_token_73": 238, "ortshared_7_1_1_1_token_160": 238, "ortshared_7_1_1_1_token_74": 238, "ortshared_7_1_1_2_token_166": 238, "ortshared_7_1_1_2_token_75": 238, "ortshared_7_1_1_3_token_169": 238, "ortshared_7_1_1_3_token_78": 238, "ortshared_7_1_1_4_token_170": 238, "ortshared_7_1_1_4_token_79": 238, "ortshared_7_1_2_0_token_161": 238, "ortshared_7_1_2_1_token_167": 238, "ortshared_7_1_3_0_token_157": 238, "ortshared_7_1_3_0_token_80": 238, "ortshared_7_1_3_1_token_158": 238, "ortshared_7_1_3_2_token_162": 238, "ortshared_7_1_3_3_token_168": 238, "ortshared_7_1_4_0_token_154": 238, "ortshared_7_1_4_0_token_76": 238, "ortshared_7_1_4_1_token_159": 238, "ortshared_7_1_4_2_token_165": 238, "osh": 203, "ot": [131, 168, 201], "other": [10, 88, 91, 97, 109, 111, 128, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 205, 206, 211, 213, 215, 216, 217, 219, 223, 230, 232, 235, 244, 247], "other_dispatch": 103, "other_kwarg": 9, "other_scalar": 89, "other_scalar_out": 89, "otherwis": [3, 4, 56, 60, 109, 123, 125, 126, 131, 230, 235], "ou": 221, "our": 221, "out": [5, 56, 57, 58, 89, 103, 111, 126, 133, 145, 148, 204, 213, 215, 217, 219, 221, 223, 230, 235], "out_dtyp": 89, "out_dtype_decomp": 89, "out_featur": [122, 204, 205, 221], "out_grad": 91, "out_mod": 89, "out_spec": 207, "outdtypeoper": 89, "outer": [89, 91], "outer_length": 97, "output": [4, 6, 10, 11, 13, 21, 51, 55, 56, 57, 58, 60, 62, 88, 89, 91, 92, 93, 96, 97, 103, 104, 105, 107, 108, 109, 110, 113, 114, 125, 126, 128, 129, 131, 133, 134, 142, 158, 161, 163, 181, 182, 191, 192, 193, 195, 197, 198, 200, 202, 203, 204, 206, 207, 208, 212, 213, 216, 217, 218, 219, 220, 221, 223, 230, 232, 236, 237, 240, 242, 243, 244, 245, 246, 250], "output_0": [89, 105, 200, 204, 206, 207, 208, 217, 218, 219, 220, 221, 230, 232, 240], "output_1": [200, 204, 240], "output_10": 200, "output_11": 200, "output_12": 200, "output_13": 200, "output_14": 200, "output_2": [200, 204, 240], "output_3": [200, 204, 240], "output_4": [200, 204, 240], "output_5": [200, 204], "output_6": 200, "output_7": 200, "output_8": 200, "output_9": 200, "output_clean_raw_data": 57, "output_data": 223, "output_data_bash_bench_huggingfac": 223, "output_dim_4": 204, "output_dtyp": [91, 97], "output_dynamic_dimensions_source_flat": [107, 230, 236], "output_dynamic_shap": [103, 109, 126], "output_index": [13, 109], "output_nam": [21, 51, 55, 88, 103, 104, 109, 126, 131, 182, 195], "output_none_2": 204, "output_none_3": 204, "output_np": 219, "output_nr": 89, "output_of_enter_auto_cast": 91, "output_pad": 91, "output_s": [91, 223], "outscalar_oth": 89, "outscalar_self": 89, "outsid": 26, "outtensor": 89, "ouwv": 238, "over": [10, 57, 60, 131, 192], "overload": [21, 26, 83, 89, 94, 103, 107, 131, 168, 230], "overrid": [206, 219], "overridden": [60, 62, 219], "override_node_repr": 206, "overwhelm": 209, "overwrit": [10, 60, 103, 111, 112, 116, 126, 127, 131, 168, 185, 212, 213, 214, 216], "overwrite_shape_in_model_proto": 185, "own": [109, 126, 205], "owsopset": 107, "oxs_dispatch": [10, 103], "oxs_opset": [10, 103], "oxsdebugdispatch": 107, "oxsdispatch": 107, "oxsopset": 108, "p": [18, 91, 107, 131, 204, 206, 207, 208, 212, 217, 221, 230, 232, 236, 240, 244, 246], "p0": [221, 232], "p1": [200, 209, 221, 232], "p2": [209, 221], "p3": [221, 232], "p_": 221, "p_decoder_attention_attention_0_key_weight": 221, "p_decoder_attention_attention_0_query_weight": 221, "p_decoder_attention_attention_0_value_weight": 221, "p_decoder_attention_attention_1_key_weight": 221, "p_decoder_attention_attention_1_query_weight": 221, "p_decoder_attention_attention_1_value_weight": 221, "p_decoder_attention_linear_bia": 221, "p_decoder_attention_linear_weight": 221, "p_decoder_feed_forward_linear_1_bia": 221, "p_decoder_feed_forward_linear_1_weight": 221, "p_decoder_feed_forward_linear_2_bia": 221, "p_decoder_feed_forward_linear_2_weight": 221, "p_decoder_norm_1_bia": 221, "p_decoder_norm_1_weight": 221, "p_decoder_norm_2_bia": 221, "p_decoder_norm_2_weight": 221, "p_embedding_embedding_weight": 221, "p_embedding_pe_weight": 221, "p_fc1_weight": 206, "p_fc2_weight": 206, "p_fc3_weight": 206, "p_init1_s_": 105, "p_layers_0_mlp_fc1_weight": 240, "p_layers_0_mlp_fc2_weight": 240, "p_layers_0_self_attn_dense_weight": 240, "p_layers_0_self_attn_k_proj_weight": 240, "p_layers_0_self_attn_q_proj_weight": 240, "p_layers_0_self_attn_v_proj_weight": 240, "p_layers_0_weight": 232, "p_layers_1_mlp_fc1_weight": 240, "p_layers_1_mlp_fc2_weight": 240, "p_layers_1_self_attn_dense_weight": 240, "p_layers_1_self_attn_k_proj_weight": 240, "p_layers_1_self_attn_q_proj_weight": 240, "p_layers_1_self_attn_v_proj_weight": 240, "p_layers_2_weight": 232, "p_linear_bia": [197, 205, 230], "p_linear_weight": [197, 205, 208, 230], "p_lm_head_weight": 212, "p_mlp_0_bia": 217, "p_mlp_0_weight": 217, "p_mlp_1_bia": 217, "p_mlp_1_weight": 217, "p_model_embed_tokens_weight": [107, 212, 236], "p_model_layers_0_input_layernorm_weight": [107, 212, 236], "p_model_layers_0_mlp_down_proj_weight": [107, 212, 236], "p_model_layers_0_mlp_gate_proj_weight": [107, 236], "p_model_layers_0_mlp_gate_up_proj_weight": 212, "p_model_layers_0_mlp_up_proj_weight": [107, 236], "p_model_layers_0_post_attention_layernorm_weight": [107, 212, 236], "p_model_layers_0_self_attn_k_proj_weight": [107, 236], "p_model_layers_0_self_attn_o_proj_weight": [107, 212, 236], "p_model_layers_0_self_attn_q_proj_weight": [107, 236], "p_model_layers_0_self_attn_qkv_proj_weight": 212, "p_model_layers_0_self_attn_v_proj_weight": [107, 236], "p_model_layers_1_input_layernorm_weight": 212, "p_model_layers_1_mlp_down_proj_weight": 212, "p_model_layers_1_mlp_gate_up_proj_weight": 212, "p_model_layers_1_post_attention_layernorm_weight": 212, "p_model_layers_1_self_attn_o_proj_weight": 212, "p_model_layers_1_self_attn_qkv_proj_weight": 212, "p_model_linear_bia": 205, "p_model_linear_weight": 205, "p_model_norm_weight": [107, 212, 236], "p_my_neuron_linear_bia": 205, "p_my_neuron_linear_weight": 205, "p_neuron_linear_bia": 207, "p_neuron_linear_weight": 207, "p_str": 89, "packag": [3, 107, 119, 204, 205, 206, 208, 212, 213, 217, 219, 230, 234, 236, 247], "pad": [89, 91, 206, 211, 212, 214, 215, 217, 221, 222, 241, 251], "pad_is_right": 91, "pad_sequ": 89, "pad_token_id": [212, 213, 214], "padding_idx": [89, 91], "padding_mod": 91, "padtomultipl": 220, "page": [58, 196, 204, 216, 230], "pair": [131, 134, 221], "pairwis": 209, "pairwise_dist": [89, 209], "pairwisedist": 215, "panda": [105, 200, 206, 232, 247], "parallel": [105, 133, 153, 247], "param": [60, 88, 89, 111, 161, 206, 212, 213, 214, 216, 232], "param_shapes_const": 111, "paramet": [3, 4, 6, 8, 10, 11, 13, 16, 18, 19, 20, 21, 51, 52, 55, 56, 57, 58, 59, 60, 69, 83, 88, 89, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 186, 190, 191, 192, 193, 195, 204, 205, 206, 207, 208, 212, 229, 230, 236], "parameter": 247, "parameter_nam": [104, 126], "parameter_proxy_cach": 111, "parameternam": 106, "parameters_dtyp": 60, "params_dtyp": 223, "params_len": 213, "params_s": 223, "parent": [109, 126], "parent_interpret": 104, "parenthesi": 194, "pars": [3, 59, 126, 206], "parse_dimension_express": 126, "parse_expression_token": 190, "parser": 3, "part": [4, 55, 56, 103, 109, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 209, 221, 230, 232], "partial": 89, "particular": [4, 109, 123, 126, 131, 230, 235], "partit": [10, 56, 89], "partition_fn": 90, "partition_id": [56, 63, 64, 65, 66, 67, 68], "pass": [60, 62, 111, 126, 197, 206, 219], "pass_rat": 57, "past_key_valu": [117, 212, 213, 214, 216], "past_key_values_key_cache_0": 212, "past_key_values_key_cache_1": 212, "past_key_values_value_cache_0": 212, "past_key_values_value_cache_1": 212, "pat": [149, 169, 244], "patch": [9, 56, 60, 103, 206, 213, 230], "patch_method": 206, "patch_opt": 60, "patch_transform": [212, 230, 240], "path": [6, 10, 11, 56, 91, 197, 200, 201, 206, 213], "path_nam": 11, "path_to_add": 10, "pathlib": 197, "pattern": [4, 10, 26, 69, 83, 88, 89, 107, 111, 121, 122, 126, 128, 129, 131, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 196, 197, 201, 203, 206, 208, 210, 211, 221, 224, 225, 230, 231, 241, 244, 251], "pattern_list": 157, "pattern_nod": [131, 143, 172, 202], "pattern_optim": [200, 232], "pattern_table_doc": [133, 157, 161, 166, 168, 170, 178], "patternoptim": [126, 128, 133, 157, 161, 166, 168, 170, 178, 200], "patterns_api": [10, 131, 133, 161, 166, 168, 170, 178, 206], "patterns_exp": [10, 131], "patterns_fix": [10, 131], "patterns_investig": [10, 131], "patterns_ml": [10, 131], "patterns_ort": [10, 131, 200, 204, 232], "pdf": 149, "pdist": 89, "pe": [122, 221], "peak": [56, 60, 196, 206], "penalti": 13, "penalty_loss_onnx": 13, "per": [57, 127, 231], "per_sample_weight": 91, "percal": 206, "perf_count": [206, 236], "perform": [60, 62, 206, 211], "perm": [97, 155, 200, 221, 230, 232, 240], "permiss": 235, "permit": 235, "permut": 89, "permute_copi": 89, "persist": [107, 212, 236], "person": 235, "pfeed": [103, 106], "pgy": 230, "ph": 201, "phi": [109, 116, 117, 211, 215, 216, 218, 219, 221, 222, 241], "phi3": [212, 213, 214], "phi3_help": [10, 114], "phi3attent": 213, "phi3config": [212, 213, 214], "phi3decoderlay": 213, "phi3forcausallm": [212, 213, 214], "phi3mlp": 213, "phi3model": 213, "phi3rmsnorm": 213, "phi3rotaryembed": 213, "phi_help": [10, 114], "phiconfig": [119, 120, 240], "phimodel": 240, "physic": 18, "physical_layout": 91, "pi": [143, 172], "pickl": 213, "pickled_nam": 56, "pid": [18, 201], "piec": [109, 122, 126, 192, 209, 211, 212, 214, 215, 216, 218, 219, 221, 222, 230, 231, 241], "piece_by_piec": [10, 103, 209, 213], "piece_by_piece_seri": [10, 103], "pin_memori": [91, 107, 212, 215, 219, 220, 236], "pinvers": 89, "pip": [196, 211, 247], "pipelin": 10, "piv": 206, "piv_cpu": 206, "piv_gpu": 206, "pivot_t": 206, "pixel_shuffl": 89, "pixel_unshuffl": 89, "pixel_valu": 117, "pkl": 80, "place": [55, 102, 103, 109, 113, 126, 133, 148, 221, 232], "placehold": [104, 105, 107, 197, 205, 206, 207, 208, 215, 217, 218, 219, 221, 230, 232, 236, 240], "placeholder_naming_pass": 206, "plai": 220, "platform": 206, "playground": [129, 131, 196, 202, 203, 210, 232, 241], "pleas": [107, 204, 205, 224, 236], "plot": [10, 17, 113, 133, 200, 202, 204, 206, 208, 217, 218, 219, 220, 221, 234, 238], "plot_dot": [200, 202, 204, 208, 217, 218, 219, 220, 221], "plot_executorch_101": 197, "plot_executorch_102": [197, 210, 241], "plot_exporter_exporter_draft_mod": [212, 222, 241], "plot_exporter_exporter_phi35_piec": [213, 222, 241], "plot_exporter_exporter_report": [214, 222, 241], "plot_exporter_exporter_scan_pdist": [215, 222, 241], "plot_exporter_exporter_untrained_tinyllm": [216, 222, 241], "plot_exporter_recipes_c_cond": [217, 222, 241], "plot_exporter_recipes_c_custom_ops_fct": [218, 222, 241], "plot_exporter_recipes_c_custom_ops_inplac": [219, 222, 241], "plot_exporter_recipes_c_dynpad": [220, 222, 241], "plot_exporter_recipes_c_modul": [221, 222, 241], "plot_llama_bench_102": 247, "plot_model_to_python": [198, 210, 241], "plot_onnxscript_102": [199, 210, 241], "plot_optim": 200, "plot_optimize_101": [200, 210, 241], "plot_ort_profil": 201, "plot_profile_existing_onnx": 201, "plot_profile_existing_onnx_101": [201, 210, 241], "plot_rewrite_101": [202, 210, 241], "plot_shape_infer": [203, 210, 241], "plot_torch": 206, "plot_torch_custom_backend_101": [204, 210, 241], "plot_torch_export": [196, 206], "plot_torch_export_": 206, "plot_torch_export_101": [205, 210, 241], "plot_torch_export_201": [206, 210, 241], "plot_torch_export_compile_102": [207, 210, 241], "plot_torch_export_cus_p0": 206, "plot_torch_export_cus_p2": 206, "plot_torch_export_dynamo": 206, "plot_torch_export_dynopt": 206, "plot_torch_export_memori": 206, "plot_torch_export_ort_": 206, "plot_torch_export_ort_first_run_mem": 206, "plot_torch_export_ort_first_run_mem_": 206, "plot_torch_export_ort_load_mem": 206, "plot_torch_export_ort_load_mem_": 206, "plot_torch_export_ort_run_mem": 206, "plot_torch_export_ort_run_mem_": 206, "plot_torch_export_ort_tim": 206, "plot_torch_export_ort_time1_init": 206, "plot_torch_export_ort_time_2": 206, "plot_torch_export_profile_": 206, "plot_torch_export_script": 206, "plot_torch_export_tim": 206, "plot_torch_linreg_101": [208, 210, 241], "plot_torch_sklearn_201": [209, 210, 241], "plt": [201, 206], "png": [149, 201, 206], "point": 131, "poison": 248, "poisson_nll_loss": 89, "polar": [89, 91], "popul": [4, 83], "portion": 235, "posinf": 91, "posit": [109, 113, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 232, 242, 245], "position_embed": [212, 213], "position_id": [107, 117, 212, 213, 236, 238], "position_ids_expand": [107, 212, 236], "positive_list": 131, "possibl": [13, 60, 88, 89, 109, 111, 121, 126, 128, 131, 132, 133, 142, 145, 148, 158, 161, 190, 192, 193, 208, 211, 213, 221, 230, 232, 250], "possibli": 232, "post": [103, 126, 248], "post_apply_pattern": [131, 168], "post_attention_layernorm": [107, 212, 213, 236], "post_process": 105, "post_process_exported_program": 103, "postprocess": 250, "potential_donors_idx": 209, "pow": [89, 91, 93, 97, 107, 144, 169, 200, 212, 236, 240], "pow_": 89, "pow_1": [107, 212, 236, 240], "pow_2": [107, 212, 236, 240], "pow_3": [107, 212, 236], "pow_4": [200, 212], "pow_5": 212, "pow_6": 200, "pow_8": 200, "pow__scalar": 91, "pow_scalar": 91, "pow_tensor_scalar": 91, "pow_tensor_tensor": 91, "pprint": [10, 26, 89, 103, 105, 106, 131, 185, 206, 213, 214], "pprint_storag": 89, "pr": [206, 216, 236], "practic": 208, "pre": 247, "pre_ort_model_transform": [88, 89], "precis": [126, 128, 247], "pred": [109, 208], "predecessor": [111, 129, 131, 198, 232], "predefin": [89, 232], "predict": [13, 208], "predispatch": [107, 212, 236], "prefer_deferred_runtime_asserts_over_guard": [9, 103], "prefix": [10, 57, 89, 109, 111, 113, 121, 122, 126, 131, 190], "prefix_nod": 179, "prelu": [89, 91, 133, 145, 185], "prepack": 89, "prepar": 105, "prepare_args_kwarg": 105, "prepare_inputs_homogeneous_oper": 193, "prepend": [91, 111, 206], "present": 181, "present_count": 209, "present_i": 209, "present_x": 209, "preserv": [103, 104, 207, 221], "preserve_module_call_signatur": [9, 205], "preserved_modul": 104, "pretraining_tp": 216, "pretti": [89, 109, 126, 131, 191, 209, 245], "pretty_matched_pair": 131, "pretty_nod": [126, 191], "pretty_onnx": [16, 182, 200, 202, 204, 206, 207, 208, 209, 217, 218, 219, 220, 221, 230, 232, 240], "pretty_text": [109, 126, 131, 213], "prevent": [126, 131], "preview": 206, "previou": [103, 181, 206, 219, 221, 232, 242], "previous": [209, 219], "primit": [206, 230], "prims_add": 97, "prims_amax": 97, "prims_broadcast_in_dim": 97, "prims_cat": 97, "prims_clon": 97, "prims_co": 97, "prims_collapse_view": 97, "prims_convert_element_typ": 97, "prims_div": 97, "prims_empty_strid": 97, "prims_eq": 97, "prims_exp": 97, "prims_g": 97, "prims_gt": 97, "prims_iota": 97, "prims_lt": 97, "prims_mul": 97, "prims_neg": 97, "prims_pow": 97, "prims_rsqrt": 97, "prims_sin": 97, "prims_split_dim": 97, "prims_sub": 97, "prims_sum": 97, "prims_transpos": 97, "prims_view_of": 97, "prims_wher": 97, "print": [5, 10, 16, 18, 60, 88, 89, 91, 103, 105, 106, 109, 122, 129, 133, 149, 161, 166, 168, 169, 170, 178, 182, 185, 186, 188, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228, 230, 232, 236, 240, 242, 244, 248], "print_exported_program": 103, "print_graph_modul": 103, "print_import_tim": [5, 236], "print_model": 10, "print_onnx": 10, "print_stat": 206, "printer": 199, "prior": 126, "prioriti": [88, 89, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 200, 202, 221, 232], "probabl": [13, 247], "process": [18, 56, 88, 89, 103, 107, 126, 131, 204, 206, 209, 223, 230, 236], "process_nod": 206, "process_one_col": 209, "processor": [4, 19, 57, 69, 88, 89, 121, 126, 128, 131, 206, 221, 223, 244, 246], "processor_nam": 57, "prod": [89, 91], "prod_dim_int": 91, "produc": [16, 20, 57, 58, 83, 89, 109, 110, 126, 128, 129, 131, 182, 198, 209, 212, 218, 221, 223, 230, 231, 232, 242], "product": [196, 206, 211], "prof": 201, "profil": [56, 79, 89, 196, 200, 202, 203, 207, 210, 241, 247], "profile2graph": 206, "profile_funct": 206, "program": [55, 103, 105, 106, 109, 197, 207, 209, 212], "progress": [4, 103, 107, 126, 230, 236], "project": [10, 239], "promote_typ": 89, "prompt": [117, 216], "propag": [126, 213], "properti": [51, 52, 103, 107, 109, 126, 131], "prot": 16, "proto": [6, 8, 10, 21, 26, 51, 60, 83, 105, 109, 113, 123, 126, 129, 181, 199, 200, 202], "proto_from_arrai": [206, 232], "provid": [6, 21, 51, 88, 89, 122, 126, 131, 190, 192, 201, 204, 206, 208, 209, 221, 223, 230, 232, 235, 246, 250, 251], "provit": 205, "proxi": [111, 206], "proxy_cal": 206, "proxy_placehold": 206, "proxy_tensor": [206, 213], "pseudo": 209, "pstat": 206, "psutil": 18, "pt": 216, "pte": 197, "publish": [3, 235], "pull": [115, 204, 216, 224], "purpos": [122, 126, 235], "purppos": 56, "push_back_batch": 10, "put": [133, 155], "put_custom_op_inplac": 109, "pv": 232, "pwd": [215, 247], "py": [10, 80, 91, 107, 115, 119, 120, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 234, 236, 241, 247], "py3": 247, "py_impl": 206, "pybind11": 247, "pybind11_detail_function_record_v1_system_libstdcpp_gxx_abi_1xxx_use_cxx11_abi_1": 89, "pyindex": 247, "pyinstrument": 10, "pynvml": [107, 236], "pyplot": [201, 206], "pyre": [75, 76], "pytest": 247, "python": [4, 26, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 89, 110, 111, 126, 131, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 230, 242, 247], "python3": [107, 204, 205, 206, 208, 212, 213, 217, 219, 225, 230, 236, 247], "python_cod": 206, "pythonpath": [196, 211, 247], "pytorch": [3, 10, 75, 76, 91, 92, 102, 115, 126, 196, 204, 205, 206, 211, 213, 216, 217, 218, 219, 221, 223, 224, 236, 247, 249], "pytorch_nvml_based_cuda_check": 248, "q": 92, "q_proj": [107, 236, 238, 240], "q_transpos": 179, "qk": 221, "qkka": 238, "qkma": 238, "qkv": 212, "qkv_proj": [212, 213], "qlinear_unpack": 89, "qlinearaveragepool": [26, 39], "qlinearconv": [26, 40], "qmka": 238, "qr": 89, "qtensor": 52, "qualnam": [11, 60, 91, 109, 117, 126, 132, 146], "quantil": [89, 113], "quantiz": [52, 89], "quantized_gru_cel": 89, "quantized_lstm_cel": 89, "quantized_rnn_relu_cel": 89, "quantized_rnn_tanh_cel": 89, "quantized_tensor": [10, 26], "quantizedtensor": 52, "quantizelinear": 185, "queri": [92, 122, 221], "query2": 221, "query_po": 212, "query_st": [107, 212, 236], "quick": 131, "quickgelu": [26, 41, 172, 178], "quickgelupattern": [172, 178, 221, 244], "quiet": [56, 109, 209, 223], "r": [16, 79, 131, 133, 141, 182, 196, 197, 203, 206, 209, 211, 213, 223, 224, 225, 230, 232, 246, 247, 248], "r2": 208, "r2_score": 208, "rad2deg": 89, "rad2deg_": 89, "rain": 216, "rais": [57, 60, 88, 89, 95, 107, 109, 111, 126, 131, 191, 192, 195, 201, 205, 206, 209, 213, 217, 218, 219, 223, 230, 236, 248, 251], "raise_exc": [88, 89, 107], "raise_list": [55, 89, 103, 109, 126], "ran": 117, "rand": [21, 103, 106, 201, 203, 206, 230, 232, 236], "randint": [212, 213, 214, 216, 221, 240], "randn": [88, 89, 105, 197, 198, 204, 205, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 230], "random": [11, 19, 21, 61, 117, 132, 198, 201, 203, 206, 216, 230, 240, 243], "random_fe": 11, "random_ord": 132, "rang": [52, 107, 201, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 220, 221, 230, 236, 240], "range1": 149, "range2": 149, "range_nod": [149, 160], "rank": [107, 113, 126, 131, 192, 230, 232, 251], "rather": [230, 251], "rational": [204, 224], "ravel": 208, "raw": [16, 57, 206, 245], "rcond_tensor": 89, "rcrg": 238, "rd": 215, "re": [10, 107, 110, 208, 209, 213, 215, 221, 230, 236], "reach": [131, 208, 232], "read": [221, 237], "read_fil": 89, "readibl": 221, "real": [10, 11, 91, 209], "realli": [133, 136, 140, 142, 144, 148], "reason": [109, 131, 209, 213, 232], "receiv": [4, 109, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 192, 209, 232], "receivers_idx": 209, "recent": [10, 57, 107, 119, 131, 213, 230, 236], "recip": [60, 62, 217, 220, 234, 241], "reciproc": [89, 91, 126, 128, 185, 232], "reciprocal_": 89, "recommend": 204, "recompil": 206, "recompute_scale_factor": 91, "record": [206, 213], "recov": 251, "recurr": 211, "recurs": [60, 123, 126, 128, 131], "red": 144, "redirect_stderr": [209, 212], "redirect_stdout": 206, "reduc": [89, 91, 126, 133, 146, 148, 193, 221, 243, 250], "reduce_nod": 173, "reduce_prod": 91, "reduce_scatter_tensor": 89, "reduce_scatter_tensor_coalesc": 89, "reducemax": [91, 97], "reducemean": [91, 93], "reducereshap": 133, "reducereshapepattern": [131, 133, 148, 221, 232, 244], "reducesum": [91, 93, 97, 173, 178, 200, 204, 217, 232], "reducesumnorm": 133, "reducesumnormalizepattern": [131, 133, 147, 221, 232, 244], "reduct": [91, 129, 133, 147, 200], "redund": 190, "ref": [26, 89, 103, 106, 203, 209, 220, 230], "refactor": [209, 213], "refer": [10, 17, 89, 94, 103, 105, 106, 109, 113, 197, 203, 204, 205, 209, 220, 221, 229, 230, 234, 236], "referenc": 223, "referenceevalu": [26, 105, 109, 126, 192, 203, 209, 230], "reflection_pad1d": 89, "reflection_pad1d_backward": 89, "reflection_pad2d": [89, 91], "reflection_pad2d_backward": 89, "reflection_pad3d": 89, "reflection_pad3d_backward": 89, "region": 217, "regist": [60, 62, 103, 104, 111, 126, 131, 192, 193, 211, 215, 217, 219, 220, 222, 241, 251], "register_additional_serialization_funct": [212, 214], "register_buff": [205, 221], "register_cal": 111, "register_constraint_dimens": [126, 192], "register_dynamic_objects_from_dim": [126, 192], "register_dynamic_objects_from_shap": 126, "register_fak": 219, "register_inplac": 89, "register_kernel": 218, "register_named_modul": 104, "register_us": 126, "registered_funct": 103, "registr": 109, "regress": [196, 204, 205, 209, 210, 241, 251], "reject": 131, "rel": [56, 105, 109, 113, 209], "relat": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 232], "releas": [247, 248], "reli": [18, 60, 88, 89, 109, 203, 206, 221, 229, 250], "relu": [89, 91, 103, 106, 122, 133, 145, 175, 178, 185, 203, 204, 206, 207, 221, 230, 232], "relu6": 89, "relu_": [89, 91], "relu_1": 206, "relu_2": 206, "relu_3": 206, "relubackward0": [103, 106, 207], "remain": [103, 126], "remaind": [89, 91], "remainder_": 89, "remark": 117, "remov": [4, 57, 89, 91, 103, 109, 111, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 190, 200, 205, 206, 215, 221, 230, 232, 242, 243, 244], "remove_constants_for_initi": 131, "remove_custom_op_inplac": 109, "remove_duplicated_initi": [126, 200, 232], "remove_duplicated_shap": [126, 128, 131, 200, 221, 232], "remove_duplicated_shape_nod": 126, "remove_ident": [126, 128, 131, 200, 232], "remove_identity_nod": [126, 200, 206, 221, 230, 232], "remove_initi": [221, 232], "remove_inplac": [103, 111], "remove_inplace_nod": 103, "remove_int": 60, "remove_position_id": 60, "remove_shape_info": 244, "remove_unnecessary_slic": 111, "remove_unus": [126, 128, 131, 200, 206, 221, 230, 232], "renam": [55, 69, 88, 89, 103, 109, 122, 126, 190, 230], "rename_allow": [88, 89, 126], "rename_dynamic_dimens": 190, "rename_dynamic_express": 190, "rename_express": [10, 189], "rename_in_local_funct": 126, "rename_input": [69, 88, 89, 122], "rename_nam": 126, "renametransform": 190, "renamevari": 190, "render": [16, 109, 126, 131, 191, 232], "renorm": 89, "renorm_": 89, "reorder": [126, 206, 232], "reorder_functions_in_proto": 113, "reorder_token_0": 206, "reorder_token_1": 206, "reorder_token_2": 206, "reorder_token_3": 206, "reorder_token_4": 206, "reorderoutput": 206, "repeat": [3, 10, 19, 56, 60, 63, 64, 65, 66, 67, 68, 69, 83, 89, 91, 93, 181, 201, 206, 223, 224, 225, 246], "repeat_interleav": [89, 91], "repeat_interleave_self_int": 91, "repeat_interleave_self_tensor": 91, "repeat_interleave_tensor": 91, "repeated_optim": [10, 131], "repeatedpattern": 181, "repetit": 69, "replac": [4, 11, 26, 88, 89, 91, 105, 106, 107, 109, 111, 126, 128, 131, 133, 134, 138, 141, 143, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 190, 194, 202, 204, 205, 206, 209, 215, 216, 217, 229, 230, 232, 244, 250], "replace_autocast_with_hop_pass": 206, "replace_by_custom_op": [109, 209], "replace_ph": 206, "replace_problematic_function_before_trac": 111, "replace_set_grad_with_hop_pass": 206, "replace_with_hop_pass_util": 206, "replacezero": [26, 42, 161, 164], "replacezeropattern": [161, 164, 244], "replay_dumped_data": 88, "replic": 247, "replication_pad1d": 89, "replication_pad2d": 89, "replication_pad3d": 89, "report": [57, 58, 107, 109, 209, 212, 213, 214, 236], "report_export": [211, 212, 213, 216, 222, 241], "report_on": 57, "repositori": [236, 243], "repr": 206, "repres": 111, "represent": 111, "reproduct": 236, "request": [21, 190, 192, 230, 248], "requir": [51, 126, 127, 192, 196, 211, 216, 230, 232, 236], "requires_cuda": 10, "requires_diffus": 10, "requires_executorch": 10, "requires_grad": [91, 97, 208], "requires_monai": 10, "requires_numpi": 10, "requires_onnx": 10, "requires_onnx_array_api": 10, "requires_onnx_diagnost": 10, "requires_onnxir": 10, "requires_onnxruntim": 10, "requires_onnxruntime_train": 10, "requires_onnxscript": 10, "requires_pyinstru": 10, "requires_sklearn": 10, "requires_torch": 10, "requires_transform": 10, "requires_voco": 10, "requires_zoo": 10, "res1": 221, "res2": 221, "research": 247, "reserv": [224, 225], "reset": 17, "reset_torch_transform": 17, "reset_types_and_shap": 126, "reshap": [89, 91, 93, 97, 107, 126, 128, 133, 142, 145, 148, 155, 176, 178, 186, 193, 198, 200, 204, 206, 212, 215, 230, 232, 236, 238, 240, 250], "reshape2of3": 133, "reshape2of3pattern": [131, 133, 145, 148, 200, 221, 232, 244], "reshape2of3patternl_add_19": 200, "reshape2of3patternr_input28": 200, "reshape_1": 212, "reshape_1_output_0": 238, "reshape_2_output_0": 238, "reshape_3_output_0": 238, "reshape_a": 91, "reshape_implementation_with_zero": 186, "reshape_nod": [142, 149, 155, 160, 176], "reshape_output_0": 238, "reshapegemm": 178, "reshapegemmpattern": [176, 178, 221, 244], "reshapeissqueezepattern": [200, 204], "reshapematmulreshap": 133, "reshapematmulreshapepattern": [131, 133, 145, 221, 232, 244], "reshapepattern": [131, 133, 148, 221, 232, 244], "reshapereshap": 133, "reshapereshapebinari": 133, "reshapereshapebinarypattern": [131, 133, 148, 200, 221, 232, 244], "reshapereshapepattern": [131, 133, 148, 200, 221, 232, 244], "resid_attn_dropout": [212, 213, 214], "resid_mlp_dropout": [212, 213], "resid_pdrop": [212, 213, 214], "residu": [107, 212, 236], "resiz": 91, "resize_a": 89, "respect": 92, "restor": [110, 126, 213, 216, 242, 243], "restrict": [126, 128, 235], "result": [10, 20, 89, 91, 103, 105, 109, 110, 113, 114, 123, 126, 131, 181, 192, 193, 204, 206, 209, 213, 216, 221, 229, 230, 232, 238, 242], "result_typ": 89, "results_to_str": 113, "ret": 199, "ret_0": 199, "ret_1": 199, "ret_val": 213, "retains_grad": 89, "retlog": 213, "retri": 60, "retriev": [90, 103, 104, 106, 126, 131, 209, 230], "retun": 60, "return": [3, 4, 6, 10, 11, 13, 16, 18, 19, 20, 21, 51, 55, 56, 57, 59, 60, 61, 69, 83, 88, 89, 90, 91, 92, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 230, 232, 236, 240, 248], "return_al": 51, "return_build": [55, 103, 109, 122], "return_debug_mask": 92, "return_dict": 216, "return_initi": [88, 89, 126], "return_n_arg": 110, "return_optimize_report": [55, 103, 109, 126], "return_storag": 69, "return_tensor": 216, "return_v": 199, "return_x_i": 204, "reus": [16, 131], "revers": [20, 91, 126, 230], "reverse_graph_build": [10, 126, 198, 209], "revert": [206, 225], "revert_all_patch": 206, "revisit": 126, "rewrit": [109, 121, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 190, 196, 197, 198, 201, 203, 204, 206, 208, 209, 210, 211, 215, 216, 232, 241, 244, 251], "rewrite_dynamic_shap": 106, "rewrite_mor": 121, "rewritten": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 213, 231, 232], "rfft": 89, "rfft2": 89, "rfftn": 89, "rg_unsqueeze1": 149, "rg_unsqueeze2": 149, "right": [107, 136, 143, 148, 172, 230, 235], "rm": 247, "rms_norm": 89, "rms_norm_ep": [212, 213, 214, 216], "rmsnormal": [133, 144], "rmsnormalizationpattern": [131, 133, 144, 221, 232, 244], "rng": 61, "rnn_relu": 89, "rnn_relu_cel": 89, "rnn_relu_data": 89, "rnn_relu_input": 89, "rnn_tanh": 89, "rnn_tanh_cel": 89, "rnn_tanh_data": 89, "rnn_tanh_input": 89, "roll": [89, 91], "root": [111, 206, 213], "rope": [116, 216], "rope_sc": [212, 213, 214, 216], "rope_theta": [212, 213, 214], "rope_typ": 216, "rot": 206, "rot90": 89, "rotari": [26, 43, 179], "rotary_emb": [107, 212, 213, 214, 236, 238], "rotaryconcatpart": 133, "rotaryconcatpartpattern": [131, 133, 149, 200, 221, 232, 244], "rotaryembed": [133, 149], "rotaryembeddingpattern": [126, 128, 131, 133, 149, 178, 179, 221, 232, 244], "rotat": 209, "round": [89, 91, 185], "round_": 89, "rounding_mod": 91, "row": [10, 56, 91, 105, 200, 206, 230, 232], "row_missing_chunk": 209, "row_missing_idx": 209, "row_stack": 89, "rqsrt": [91, 97], "rransform": 190, "rrelu": [89, 91], "rrelu_with_noise_backward": [89, 91], "rsh": 240, "rsh1": [105, 221, 240], "rsh12": 221, "rsh122": 217, "rsh13": 240, "rsqrt": [89, 107, 212, 236], "rsqrt_": 89, "rsqrt_1": [107, 212, 236], "rsqrt_2": [107, 212, 236], "rsqrt_3": 212, "rsqrt_4": 212, "rst": 10, "rsub": [89, 91], "rtol": [10, 105, 109, 113, 209], "rtopt": [56, 57], "rtx": 206, "ru": 105, "rubp": 221, "ruff": 247, "run": [4, 6, 10, 19, 21, 26, 51, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 80, 81, 83, 88, 89, 103, 104, 105, 106, 107, 109, 121, 126, 128, 131, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228, 230, 232, 236, 242, 244, 247, 248], "run_align": 105, "run_backwa": 225, "run_backward": 225, "run_benchmark": 4, "run_decomposit": 209, "run_dlpack": [21, 51], "run_fx_nod": 105, "run_infer": 83, "run_model": [192, 203], "run_nod": [104, 107, 192, 206, 230, 236], "run_onnx_infer": 83, "run_opt": 88, "run_param": [15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "run_python_script_136296131763712": 230, "run_python_script_136296133350720": 230, "run_python_script_136296133402880": 230, "run_training_api": 21, "run_value_info": 192, "run_with_ortvaluevector": [51, 88, 225], "running_mean": 91, "running_var": 91, "runopt": 88, "runpython": [133, 168], "runpythonerror": [107, 230, 236], "runtest": 10, "runtim": [56, 88, 89, 105, 109, 197, 221, 247, 248], "runtime_wrapp": 225, "runtimeerror": [205, 206, 214, 249], "rw": 105, "ry": 105, "rz": 105, "s1": [198, 203], "s15": 190, "s2": [198, 203, 209], "s27": [213, 220], "s53": 220, "s77": [204, 213, 220], "s9": 213, "saa": 89, "saaa": 238, "safe": 247, "safe_softmax": 89, "sai": 230, "same": [21, 83, 88, 89, 91, 103, 105, 109, 113, 121, 123, 126, 128, 131, 133, 134, 158, 161, 181, 193, 200, 206, 209, 216, 217, 218, 219, 221, 223, 230, 232, 244, 246, 251], "same_a": 126, "same_dimens": 126, "same_function_proto": 123, "same_shap": [126, 131], "same_signatur": 103, "samechildren": 133, "samechildrenfrominput": 133, "samechildrenfrominputpattern": [88, 89, 131, 133, 134, 200, 221, 232, 244], "samechildrenpattern": [88, 89, 131, 133, 134, 200, 221, 232, 244], "sampl": 209, "sarg": 109, "save": [4, 11, 55, 80, 83, 88, 103, 109, 121, 126, 127, 133, 142, 182, 197, 206, 209, 220, 221, 247], "save_ep": 103, "save_for_backward": 225, "save_path": 197, "savefig": [201, 206], "scalar": [89, 91, 107, 126, 131, 133, 145, 170, 171, 176, 178, 192, 212, 213, 217, 221, 232], "scalar_mod": 89, "scalar_mode_out": 89, "scalar_oth": 89, "scalar_out": 89, "scalar_scalar": 89, "scalar_self": 89, "scalar_tensor": [89, 91], "scalar_tensor_out": 89, "scalar_typ": 91, "scalararrai": 89, "scalarint": 89, "scalaropt_dim": 89, "scalaropt_dim_dtyp": 89, "scalaropt_dtyp": 89, "scalaropt_dtype_out": 89, "scalaroth": [89, 107, 236], "scalarrayarrai": 89, "scalarrayint": 89, "scalarself": 89, "scale": [52, 91, 92, 133, 144, 176, 212, 216, 221, 240], "scale_d": 91, "scale_factor": [91, 92], "scale_grad_by_freq": 91, "scale_h": 91, "scale_w": 91, "scaled_dot_product_attent": [89, 92, 103, 212], "scaled_dot_product_attention_1": 212, "scaled_dot_product_flash_attention_for_cpu": 89, "scan": [91, 211, 217, 218, 220, 222, 241], "scan_combine_graph_0": 215, "scan_graph": 91, "scan_init": 91, "scan_input": 91, "scanned_x": 215, "scatter": [89, 91], "scatter_": 89, "scatter__src": 91, "scatter_add": [89, 91], "scatter_add_": [89, 91], "scatter_nod": 159, "scatter_reduc": 91, "scatter_reduce_": [89, 91], "scatter_reduce__two": 91, "scatter_reduce_two": 91, "scatter_src": 91, "scatterel": [26, 44], "scatternd": [129, 159, 161, 162, 165, 166, 177, 200], "scatterndofshap": [26, 45, 159, 161, 162, 165, 166], "scenario": [3, 26, 103, 206], "schedul": [131, 232], "schema": [15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 109, 110, 225], "schema_str": 218, "schh": 238, "scikit": [10, 55, 196, 197, 201, 203, 204, 205, 206, 207, 210, 241, 247], "scipi": [215, 247], "score": 13, "score_nam": 13, "scratch": 221, "script": [3, 4, 10, 57, 59, 75, 79, 80, 81, 82, 122, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 228, 236], "script_arg": [201, 206], "script_nam": [4, 59], "sdfx": 238, "sdpython": [196, 211, 234, 247], "search": [20, 230, 232], "second": [18, 60, 113, 117, 123, 133, 142, 155, 186, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 232], "secondari": 56, "section": [131, 230, 231, 232, 249, 251], "see": [10, 11, 13, 21, 26, 57, 58, 61, 88, 89, 91, 92, 102, 103, 104, 109, 111, 112, 113, 115, 116, 118, 119, 120, 122, 126, 128, 129, 131, 157, 168, 196, 197, 204, 205, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 230, 231, 232, 244, 247, 249], "seem": [117, 221, 247, 248], "seen": 230, "select": [9, 103, 109, 126, 205, 215, 230, 242], "select_1": 215, "select_2": 215, "select_backward": 89, "select_copy_int": 91, "select_int": 91, "select_output": 126, "select_scatt": [89, 91], "self": [6, 10, 56, 60, 88, 89, 91, 103, 105, 106, 107, 109, 111, 126, 127, 129, 131, 193, 197, 198, 202, 204, 205, 206, 207, 208, 209, 212, 213, 215, 217, 218, 219, 220, 221, 230, 232, 236], "self_attn": [107, 212, 213, 214, 236, 240], "self_int": 89, "self_is_result": 91, "self_out": 89, "self_scalar": 89, "self_scalar_out": 89, "self_tensor": 89, "sell": 235, "selu": [89, 133, 145, 185], "selu_": 89, "semant": 111, "send": 126, "sens": [133, 146, 230], "sent": [4, 18, 89], "separ": [3, 4, 57, 58, 69, 88, 89, 121, 126, 128, 131, 213], "seq": [133, 150, 200, 221, 232, 240], "seq_len": [213, 220], "seq_length": [190, 216], "seq_length_multipl": 117, "sequenc": [10, 55, 89, 91, 92, 93, 103, 109, 115, 118, 119, 120, 126, 131, 133, 141, 145, 146, 148, 150, 154, 155, 156, 160, 161, 173, 176, 178, 179, 180, 181, 186, 193, 195, 221, 230, 231, 232, 247], "sequence_inc": 117, "sequence_length": [117, 216], "sequence_length2": [117, 216], "sequenceat": [133, 150], "sequenceconstruct": [133, 150], "sequenceconstructat": 133, "sequenceconstructatpattern": [131, 133, 150, 221, 232, 244], "sequenti": [88, 89, 204, 217, 232], "serd": 206, "serial": [109, 110, 197], "serialize_arg": 110, "serialize_on": 110, "serializetostr": [21, 200, 206, 208, 209, 221, 232], "sero": 91, "sess": [19, 21, 56, 83, 88, 201, 206, 208, 209, 221], "session": [19, 21, 51, 206], "session_opt": 21, "sessionopt": [8, 21, 51, 201, 206, 209], "set": [4, 10, 16, 20, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 89, 90, 101, 103, 104, 107, 109, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 190, 192, 193, 206, 208, 209, 212, 213, 214, 220, 226, 228, 230, 232, 236, 244, 247, 248], "set1": 10, "set2": 10, "set_const": 192, "set_current_meta": 206, "set_descript": 206, "set_devic": 206, "set_eval_fram": 225, "set_if_more_precis": 126, "set_index": 206, "set_meta": 206, "set_nam": 126, "set_rank": [126, 192, 230, 232], "set_sequ": [126, 230], "set_shap": [126, 192, 206, 230, 232], "set_shape_type_custom": 193, "set_shape_type_op_ani": [193, 206], "set_typ": [126, 192, 230, 232], "set_type_shape_binary_op": 193, "set_type_shape_gemm": 193, "set_type_shape_matmul": 193, "set_type_shape_or_rank": 126, "set_type_shape_reduce_op": 193, "set_type_shape_reshap": 193, "set_type_shape_unary_op": [193, 230], "set_type_shape_unary_op_ab": 193, "set_value_shap": [126, 192, 230], "setattr": [109, 206], "setitem": [91, 103, 106, 107, 111, 230, 236], "setitem_with_transform": 111, "setup": [126, 247], "setupclass": 10, "sever": [131, 209], "sgdregressor": 208, "sgn": 89, "sgn_": 89, "sh": 203, "sh1": [133, 134, 186, 193, 202], "sh2": [133, 134, 186, 193, 202], "shadow": 126, "shadow_context": 126, "shadowing_nam": 126, "shall": 235, "shape": [6, 11, 16, 19, 21, 52, 56, 60, 61, 69, 83, 88, 89, 91, 93, 96, 97, 103, 105, 106, 107, 108, 109, 110, 111, 113, 116, 121, 122, 123, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 186, 190, 191, 192, 193, 196, 198, 200, 201, 202, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 231, 236, 240, 241, 244, 247, 248, 250, 251], "shape1": 220, "shape1_nod": 151, "shape2": 220, "shape2_nod": 151, "shape_again": 56, "shape_as_input": 126, "shape_before_left": 146, "shape_before_mul": 146, "shape_before_right": 146, "shape_build": [10, 189], "shape_builder_impl": [10, 189, 203], "shape_env": 213, "shape_funct": [109, 209], "shape_infer": [203, 250], "shape_left": 146, "shape_nam": 200, "shape_prop": 206, "shape_right": 146, "shape_scenario": 69, "shape_type_comput": [10, 189, 206, 217, 220, 221, 240, 250], "shapebasedconcatexpand": 133, "shapebasedconcatexpandpattern": [131, 133, 142, 221, 232, 244], "shapebasededitdistancereshap": 133, "shapebasededitdistancereshapepattern": [88, 89, 131, 133, 148, 200, 221, 232, 244], "shapebasedexpandbroadcast": 133, "shapebasedexpandbroadcastmatmul": 133, "shapebasedexpandbroadcastmatmulpattern": [131, 133, 142, 221, 232, 244], "shapebasedexpandbroadcastpattern": [131, 133, 142, 200, 221, 232, 244], "shapebasedexpandcastwhereswap": 133, "shapebasedexpandcastwhereswappattern": [131, 133, 142, 221, 232, 244], "shapebasedexpandswap": 133, "shapebasedexpandswappattern": [131, 133, 142, 200, 221, 232, 244], "shapebasedident": 133, "shapebasedidentitypattern": [131, 133, 134, 221, 232, 244], "shapebasedmatmultomul": 133, "shapebasedmatmultomulpattern": [131, 133, 145, 221, 232, 244], "shapebasedreshapeissqueez": 133, "shapebasedreshapeissqueezepattern": [131, 133, 148, 200, 221, 232, 244], "shapebasedsamechildren": 133, "shapebasedsamechildrenpattern": [131, 133, 134, 221, 232, 244], "shapebasedshapeshapeadd": 133, "shapebasedshapeshapeaddpattern": [131, 133, 151, 221, 232, 244], "shapebasedstaticexpand": 133, "shapebasedstaticexpandpattern": [131, 133, 142, 221, 232, 244], "shapebuild": [191, 192, 193, 249], "shapeconst": 126, "shapedbasedreshap": 133, "shapedbasedreshapepattern": [131, 133, 148, 221, 232, 244], "share": [193, 205, 213, 214, 217, 221, 247], "shift": 91, "short": [106, 126, 191, 198, 226, 228], "short_factor": [212, 213, 214], "short_nam": [133, 161, 166, 168, 170, 178], "short_ob": 206, "short_reason": 109, "shortcut": [126, 230], "shorten": [109, 126], "shorter": 230, "should": [6, 55, 60, 62, 69, 80, 88, 89, 103, 104, 109, 110, 111, 121, 126, 128, 131, 146, 192, 193, 196, 211, 214, 217, 218, 219, 221, 230, 232, 251], "show": [10, 13, 83, 88, 89, 103, 109, 113, 126, 131, 191, 192, 200, 202, 204, 205, 211, 213, 218, 219, 221, 229, 230, 242, 243, 244, 245, 246], "shown": 230, "shuffl": 204, "side": [146, 193], "sig": [16, 200, 213, 221, 232], "sigmoid": [88, 89, 91, 158, 161, 172, 178, 185, 197, 200, 202, 205, 207, 230, 236], "sigmoid_": [89, 91], "sigmoid_1": 230, "sigmoid_backward": 89, "sign": [89, 91, 185], "sign_": 89, "signatur": [16, 101, 103, 107, 109, 126, 206, 207, 212, 220, 221, 230, 236], "signbit": 89, "silent": [60, 62], "silu": [89, 91, 107, 212, 213, 214, 216, 236], "silu_": [89, 91], "silu_1": 212, "silu_backward": 89, "siluactiv": 213, "sim": 97, "similar": [13, 54, 103, 126, 128, 133, 142, 145, 178, 179], "simp_nod": 180, "simpl": [16, 21, 57, 104, 126, 197, 205, 206, 209, 236, 244, 251], "simple_rotari": [10, 161], "simplefilt": [206, 209, 236], "simpler": 221, "simplerotari": 161, "simplerotarypattern": [161, 162, 244], "simplesimpliflytransform": 194, "simplic": 208, "simplifi": [126, 133, 149, 194, 231], "simplified_layer_norm": [10, 178], "simplifiedlayernorm": [26, 46, 178, 180], "simplifiedlayernormalizationmul": 178, "simplifiedlayernormalizationmulpattern": [178, 180, 221, 244], "simplifiedlayernormalizationpattern": [178, 180, 221, 244], "simplify_express": [10, 189, 250], "simplify_two_express": 194, "simplifyingeasypatternfunct": 168, "simplifyparenstransform": 194, "sin": [89, 91, 93, 107, 133, 145, 149, 185, 212, 218, 219, 236, 240], "sin_": 89, "sin_cach": 240, "sin_cast": 149, "sinc": [60, 62, 89, 110, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 232], "sinc_": 89, "singl": [126, 192, 230], "sinh": [89, 91, 133, 145, 185], "sinh_": 89, "site": [107, 204, 205, 206, 208, 212, 213, 217, 219, 230, 236], "situat": [205, 208], "size": [16, 19, 56, 60, 61, 69, 83, 89, 91, 92, 93, 97, 107, 111, 116, 117, 126, 133, 142, 205, 206, 209, 212, 213, 214, 215, 216, 217, 220, 221, 223, 225, 230, 232, 234, 236, 246], "size_model": 206, "size_oblivi": 213, "size_typ": 16, "sizei": 209, "sizex": 209, "skeleton": 131, "skip": [10, 60, 206, 209, 232], "skip_kei": 223, "skip_simp_nod": 180, "skip_special_token": 216, "skip_test": 247, "skipif_ci_appl": 10, "skipif_ci_linux": 10, "skipif_ci_window": 10, "skipif_not_onnxrt": 10, "skipif_transform": 10, "skiplayernorm": [26, 47, 178, 180, 182, 221], "skiplayernormalizationpattern": [178, 180, 221, 244], "skipsimplifiedlayernorm": [178, 180], "skipsimplifiedlayernormalizationmul": 178, "skipsimplifiedlayernormalizationmulpattern": [178, 180, 221, 244], "skipsimplifiedlayernormalizationpattern": [178, 180, 221, 244], "skl": [10, 17, 209, 234], "sklearn": [204, 208, 209, 234, 247], "skwarg": 109, "sl": 221, "sl2": 208, "sleep": 3, "slice": [89, 91, 104, 107, 111, 133, 134, 152, 153, 200, 212, 215, 221, 236, 238], "slice_1": [26, 48, 107, 212, 215, 221, 236, 240], "slice_10": [26, 48, 200, 212, 240], "slice_11": [111, 200, 212, 240], "slice_12": [111, 200, 212, 240], "slice_13": [111, 200, 212], "slice_14": 212, "slice_15": 212, "slice_16": 212, "slice_17": 212, "slice_18": 212, "slice_1_output_0": 238, "slice_2": [107, 212, 215, 221, 236, 238, 240], "slice_22": 221, "slice_3": [107, 212, 215, 221, 236, 238, 240], "slice_4": [107, 212, 221, 236, 240], "slice_5": 212, "slice_6": 212, "slice_7": 212, "slice_8": 212, "slice_9": [212, 240], "slice_backward": [89, 91], "slice_forward": 89, "slice_indic": 212, "slice_output_0": 238, "slice_scatt": 89, "slice_tensor": 91, "sliceslic": 133, "sliceslicepattern": [131, 133, 152, 221, 232, 244], "sliceslicepattern_init7_s1_0_start": 221, "sliceslicepattern_init7_s1_0_start2": 221, "sliceslicepattern_init7_s1_1_axi": 221, "sliceslicepattern_init7_s1_1_axis2": 221, "sliceslicepattern_init7_s1_30_end": 221, "sliceslicepattern_init7_s1_30_end2": 221, "slicessplit": 133, "slicessplitpattern": [131, 133, 153, 200, 221, 232, 240, 244], "sliding_window": [118, 212, 213, 214], "slogdet": 89, "slope": [91, 143, 232], "slow": [57, 126, 128, 204, 223, 230, 247], "slow_conv3d": 89, "slow_script": 57, "small": [69, 126, 204, 206, 209, 221, 230, 240], "smaller": [57, 58, 133, 142], "smi": 3, "smm": 89, "smollm": 116, "smooth_l1_loss": 89, "smooth_l1_loss_backward": 89, "smooth_l1_loss_backward_out": 89, "snapshot_fak": 206, "so": [57, 60, 101, 103, 105, 107, 109, 111, 113, 126, 131, 209, 211, 213, 221, 230, 232, 235, 247], "soft_margin_loss": 89, "soft_margin_loss_backward": 89, "softmax": [89, 91, 92, 107, 133, 135, 145, 172, 178, 185, 221, 236, 238, 240], "softmax2": 221, "softmax_1": [221, 240], "softmax_nod": 172, "softmax_output_0": 238, "softmaxcrossentropyloss": [133, 143, 185], "softmaxcrossentropyloss_1286": 223, "softmaxcrossentropyloss_1288": 223, "softmaxcrossentropylosscast": 133, "softmaxcrossentropylosscastpattern": [131, 133, 143, 200, 221, 232, 244], "softmaxgrad": [173, 178], "softmaxgradpattern": [173, 178, 221, 244], "softplu": [89, 91, 133, 145, 185], "softplus_backward": 89, "softshrink": 89, "softsign": 185, "softwar": 235, "solut": 230, "solv": [126, 230, 248], "some": [9, 16, 20, 57, 58, 60, 89, 91, 103, 109, 111, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 190, 193, 196, 199, 204, 209, 210, 211, 213, 215, 216, 217, 221, 223, 230, 232, 241, 244, 250], "someth": [80, 88, 89, 104, 126, 131, 190, 213, 221], "sometim": 16, "soon": [126, 223], "sopt_aft": 131, "sort": [16, 89, 91, 209], "sort_stat": 206, "sortbi": 206, "sortkei": 206, "soundli": 212, "sourc": [3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 234, 236, 247], "space": 190, "spars": [89, 91, 107, 212, 236], "sparse_bsc_tensor": 89, "sparse_bsr_tensor": 89, "sparse_coo_tensor": 89, "sparse_csc_tensor": 89, "sparse_csr_tensor": 89, "sparse_dim": 89, "sparse_grad": 91, "sparse_initi": 198, "spatial": 215, "spd": 215, "spec_nod": 205, "special": [111, 197, 205, 215], "special_bessel_j0": 89, "special_bessel_j1": 89, "special_digamma": 89, "special_entr": 89, "special_erf": 89, "special_erfc": 89, "special_erfcx": 89, "special_erfinv": 89, "special_exp2": 89, "special_expit": 89, "special_expm1": 89, "special_gammainc": 89, "special_gammaincc": 89, "special_gammaln": 89, "special_i0": 89, "special_i1": 89, "special_log1p": 89, "special_log_ndtr": 89, "special_log_softmax": 89, "special_logit": 89, "special_logsumexp": 89, "special_multigammaln": 89, "special_ndtr": 89, "special_ndtri": 89, "special_polygamma": 89, "special_psi": 89, "special_round": 89, "special_sinc": 89, "special_softmax": 89, "special_spherical_bessel_j0": 89, "special_xlog1pi": 89, "special_xlogi": 89, "special_zeta": 89, "specif": [4, 10, 16, 61, 107, 111, 126, 128, 131, 186, 197, 200, 232, 242, 244, 247], "specifi": [4, 11, 13, 55, 60, 89, 103, 106, 109, 110, 113, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 192, 193, 213, 216, 229, 230, 232, 244], "speech2text2config": 61, "speedup": [56, 57, 213, 223], "speedup_increas": [57, 223], "speedup_m": 57, "spend": 206, "spherical_bessel_j0": 89, "sphinx": [17, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 247], "spi": 109, "split": [89, 91, 97, 126, 133, 153, 169, 200, 203, 206, 209, 240], "split1": 169, "split2": 169, "split_nod": [149, 153, 162, 179], "split_siz": 91, "split_tensor": 91, "split_to_sequ": 91, "split_with_s": [89, 91], "split_with_sizes_copi": 89, "splitconcat": 133, "splitconcatpattern": [131, 133, 153, 221, 232, 244], "splitext": 206, "spy": 18, "sq": [215, 232], "sqrt": [89, 91, 92, 126, 128, 143, 144, 172, 185, 209, 215, 232], "sqrt_": 89, "sqrt_1": 215, "sqrt_2": 215, "squar": [89, 209], "square_": 89, "squared_error": 13, "squeez": [89, 91, 126, 128, 133, 148, 156, 200, 204, 209, 220, 232], "squeeze1": 156, "squeeze2": 156, "squeeze_copi": 89, "squeeze_default": 89, "squeeze_dim": 91, "squeeze_nod": 156, "squeezeadd": 133, "squeezeaddpattern": [131, 133, 156, 221, 232, 244], "squeezebinaryunsqueez": 133, "squeezebinaryunsqueezepattern": [131, 133, 156, 221, 232, 244], "squeezeunsqueez": 133, "squeezeunsqueezepattern": [131, 133, 156, 221, 232, 244], "sr2": 208, "src": [89, 91, 107, 206, 212, 213, 219, 230, 236], "srow": 91, "sspaddmm": 89, "st": [91, 92, 93, 96, 97, 126, 193, 218, 219, 230], "st_size": 206, "stabl": [89, 91, 92, 236], "stablediffusion2unet": 112, "stack": [89, 91, 205, 213, 214, 217, 236, 247], "stacktrac": [107, 212, 213, 236], "standard": [10, 91, 101, 126, 128, 200, 209, 232, 242, 244, 245], "start": [4, 10, 11, 18, 56, 57, 60, 88, 89, 91, 97, 107, 109, 117, 126, 132, 146, 182, 190, 200, 202, 209, 212, 213, 220, 221, 223, 230, 231, 232, 233, 236, 239, 249, 250], "start_dim": 91, "start_out": 89, "start_spying_on": [18, 206], "start_step": 89, "startswith": 206, "stash_typ": [221, 240], "stat": [6, 18, 20, 57, 83, 126, 131, 200, 206, 221, 232, 243], "statement": 10, "static": [20, 60, 109, 126, 133, 148, 186, 192, 215], "statically_known_truecaus": [213, 214, 217], "staticconcatreshap": 133, "staticconcatreshapepattern": [131, 133, 148, 221, 232, 244], "statist": [10, 20, 55, 60, 83, 103, 109, 126, 131, 243], "statistc": 83, "statistics_on_fil": 10, "statistics_on_fold": 10, "statu": [57, 109, 209, 213], "statusexport": 109, "statusexportcod": [109, 209], "std": [89, 206], "std_dim": 91, "std_mean": 89, "stderr": 4, "stdin": [107, 236], "stdout": [4, 10], "step": [63, 64, 65, 66, 67, 68, 69, 91, 97, 109, 131, 133, 134, 168, 204, 206, 208, 211, 213, 216, 231, 232, 236], "stft": 89, "still": [11, 103, 111, 117, 221, 232], "stmt": 10, "stochast": 208, "stop": [4, 18, 55, 88, 89, 103, 109, 126, 128, 131, 200, 202, 206, 221, 223, 230, 232], "stop_aft": [126, 128, 131], "stop_if_except": 4, "stor": 88, "storag": [88, 89, 204], "storage_offset": 91, "storage_ord": 206, "store": [6, 20, 55, 56, 88, 89, 103, 105, 109, 126, 131, 191, 196, 213, 230, 232, 243], "stori": 215, "str": [3, 4, 6, 9, 10, 11, 13, 15, 16, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 83, 88, 89, 90, 91, 92, 93, 96, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 126, 127, 128, 129, 131, 132, 143, 146, 157, 172, 181, 182, 185, 186, 188, 190, 191, 192, 193, 194, 195, 206, 212, 213, 214, 216, 218, 219, 230, 232], "str_ord": 89, "str_tensor_proto_typ": 185, "strategi": [57, 91, 103], "stream": 206, "strict": [9, 101, 103, 209, 212, 213, 214, 220, 230, 236], "stride": [89, 91, 97, 107, 206, 212, 236], "string": [4, 10, 13, 16, 56, 57, 58, 89, 103, 106, 109, 110, 113, 123, 126, 131, 157, 185, 190, 191, 192, 213, 225, 230], "string_diff": 16, "string_limit": 4, "string_sig": 16, "string_signatur": 16, "string_to_elem_typ": 157, "string_typ": [16, 109, 212, 213, 214, 216], "stringio": [206, 209, 212], "structur": [131, 230, 232], "sub": [89, 91, 97, 113, 126, 128, 133, 134, 144, 158, 161, 173, 178, 185, 199, 200, 206, 212, 215, 220, 232], "sub1mul": 133, "sub1mulpattern": [131, 133, 154, 200, 221, 232, 244], "sub2": 149, "sub_": 89, "sub_1": [215, 220], "sub_2": 215, "sub__tensor": 91, "sub_nod": [147, 173], "sub_tensor": 91, "subclass": [60, 62, 218], "subdonorsidx": 209, "subfold": 10, "subgraph": [88, 89, 123, 126, 128, 131, 168, 182, 185, 217, 232], "subject": 235, "sublicens": 235, "submit": 236, "submod_1": [107, 212, 236], "submod_3": [107, 212, 236], "submodul": [60, 90, 103, 104, 106, 107, 109, 111, 205, 207, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 230, 241, 251], "submodule_nam": 104, "submodulenam": 106, "submul": [26, 28, 161], "submulbroadcast": 161, "submulbroadcastpattern": [158, 161, 244], "submulpattern": [158, 161, 244], "subneuron": 207, "subneuron2": [207, 230], "subplot": [201, 206], "subprocess": [4, 209], "subsequ": [126, 128], "subset": [126, 128], "substanti": 235, "substr": 10, "subtoken": 126, "subtract": 89, "subtyp": 181, "subweightmatrix": 209, "succ": 109, "succe": [109, 230, 236, 248], "success": 213, "successfulli": 109, "successor": [131, 232], "sudo": 247, "suffix": [59, 206], "sui": 221, "suit": [56, 57, 60], "suitabl": 103, "suite_nam": 56, "sum": [13, 56, 89, 91, 170, 171, 200, 209, 215, 217, 225, 232], "sum_1": [200, 215, 217], "sum_2": [200, 204, 215], "sum_3": [200, 215], "sum_4": 200, "sum_5": 200, "sum_6": 200, "sum_default": 89, "sum_i": 13, "sum_to_s": 89, "summari": [4, 71, 200, 206, 223, 236], "super": [88, 89, 103, 106, 197, 204, 205, 206, 207, 208, 209, 213, 217, 220, 221, 230, 232, 236], "support": [21, 56, 83, 90, 103, 117, 126, 127, 174, 178, 206, 209, 217, 218, 219, 223, 230, 231, 232, 237, 247, 250, 251], "supported_export": 206, "suptitl": 206, "sure": [105, 126, 209, 218, 230, 232], "surround": [133, 136], "suspect": [205, 213, 214, 217], "svd": 89, "svyx": 221, "swap": [133, 142, 155], "swapexpandreshap": 133, "swapexpandreshapepattern": [131, 133, 142, 221, 232, 244], "swapped_gm": 205, "swich": [133, 145], "switch": [88, 89, 109, 132, 133, 146, 155, 217, 232], "switch_ord": 146, "switchorderbinari": [133, 200], "switchorderbinarypattern": [131, 133, 146, 200, 221, 232, 244], "switchreshapeactiv": 133, "switchreshapeactivationpattern": [131, 133, 145, 221, 232, 244], "sy": [3, 10, 202, 206, 209], "sym": [126, 205, 212, 213, 217, 220], "sym_constrain_range_for_s": 91, "sym_is_contigu": 89, "sym_max": [91, 206], "sym_min": 91, "sym_nod": 213, "sym_not": 91, "sym_numel": 89, "sym_siz": [89, 220], "sym_size_int": 91, "sym_size_int_3": 220, "sym_size_int_4": 220, "sym_size_int_5": 220, "sym_strid": 89, "symbol": [91, 103, 126, 205, 213, 214, 217, 247, 250], "symbolic_shap": [103, 205, 206, 213], "symbolize_traceback": 206, "symfloat": [89, 126, 146, 186, 192, 193], "symint": [89, 103, 126, 146, 186, 192, 193, 230], "symints_saved_for_backwards_slic": 225, "sympi": [230, 247, 248], "synchron": 225, "syntax": [57, 58, 230], "sys_admin": 247, "system_info": 206, "t": [89, 91, 126, 172, 176, 178, 201, 203, 204, 208, 209, 213, 218, 219, 221, 224, 230, 232, 248], "t1": [91, 218, 232], "t10": [89, 206, 207, 208, 217, 221, 230, 232, 240], "t102": [221, 230], "t1022": 221, "t1023": 221, "t103": 221, "t1032": 221, "t104": 221, "t105": 221, "t106": 221, "t1_node": 155, "t1r3": 213, "t1r4": 213, "t1s0": 209, "t1s0x17": 209, "t1s1": 105, "t1s10x3": 209, "t1s10x5": 209, "t1s11x3": 209, "t1s17": 209, "t1s1x10": 209, "t1s1x11": 209, "t1s1x1x10x96": 216, "t1s1x1x11x96": 216, "t1s1x1x12x96": 216, "t1s1x1x13x96": 216, "t1s1x1x14x96": 216, "t1s1x1x15x96": 216, "t1s1x1x16x96": 216, "t1s1x1x17x96": 216, "t1s1x1x18x96": 216, "t1s1x1x19x96": 216, "t1s1x1x20x96": 216, "t1s1x1x21x96": 216, "t1s1x1x22x96": 216, "t1s1x1x23x96": 216, "t1s1x1x24x96": 216, "t1s1x1x25x96": 216, "t1s1x1x26x96": 216, "t1s1x1x27x96": 216, "t1s1x1x28x96": 216, "t1s1x1x29x96": 216, "t1s1x1x30x96": 216, "t1s1x1x31x96": 216, "t1s1x1x32x96": 216, "t1s1x1x33x96": 216, "t1s1x1x34x96": 216, "t1s1x1x35x96": 216, "t1s1x1x36x96": 216, "t1s1x1x37x96": 216, "t1s1x1x38x96": 216, "t1s1x1x39x96": 216, "t1s1x1x40x96": 216, "t1s1x1x41x96": 216, "t1s1x1x42x96": 216, "t1s1x1x43x96": 216, "t1s1x1x44x96": 216, "t1s1x1x45x96": 216, "t1s1x1x46x96": 216, "t1s1x1x47x96": 216, "t1s1x1x48x96": 216, "t1s1x1x8x96": 216, "t1s1x1x9x96": 216, "t1s1x3": 209, "t1s2x32x30x96": [212, 213, 214], "t1s3x32x31x96": 213, "t1s40x3": 209, "t1s40x50": 209, "t1s50x3": 209, "t1s5x3": 209, "t1s5x4": 105, "t2": 91, "t2_node": 155, "t7r1": 213, "t7r2": 213, "t7s1": [209, 216], "t7s1x1": 216, "t7s1x8": 216, "t7s2x3": [212, 213, 214], "t7s2x33": [212, 213, 214], "t7s3x35": 213, "t7s3x4": 213, "t7s8": 216, "t9r4": 213, "t9s17": 209, "t_10": 200, "t_12": 200, "t_13": 200, "t_14": 200, "t_16": 200, "t_17": 200, "t_18": 200, "t_2": 204, "t_20": 200, "t_21": 200, "t_22": 200, "t_24": 200, "t_25": 200, "t_26": 200, "t_28": 200, "t_29": 200, "t_3": 204, "t_30": 200, "t_32": 200, "t_33": 200, "t_34": 200, "t_8": 200, "t_9": 200, "t_copi": 89, "tabl": [89, 103, 157], "tail": 223, "take": [3, 4, 55, 60, 62, 89, 91, 102, 103, 105, 107, 109, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 196, 204, 206, 209, 224, 230, 232], "take_along_dim": 89, "taken": [13, 91, 230], "tan": [89, 91, 133, 145, 185], "tan_": 89, "tanh": [89, 91, 133, 143, 145, 169, 172, 178, 185, 240], "tanh_": 89, "tanh_1": 240, "tanh_backward": 89, "target": [55, 56, 60, 83, 91, 92, 103, 107, 109, 111, 170, 171, 197, 205, 207, 212, 215, 217, 218, 219, 221, 230, 236], "target_opset": [55, 56, 60, 63, 64, 65, 66, 67, 68, 69, 83, 88, 89, 103, 106, 109, 122, 204, 223], "target_opset_or_existing_proto": 126, "task": [60, 105, 216, 220], "teardownclass": 10, "tell": [10, 18, 57, 106, 109, 111, 119, 123, 126, 131, 133, 142, 146, 192, 218, 219, 230, 232], "temp_doc_mlp": 232, "temp_doc_mlp_opt": 232, "temp_output_data": 4, "temperatur": 216, "temporari": 4, "ten": 223, "tensor": [13, 16, 19, 21, 51, 52, 55, 56, 60, 61, 83, 88, 89, 90, 91, 92, 97, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 122, 126, 127, 133, 142, 155, 186, 192, 195, 201, 204, 205, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 221, 225, 231, 232, 236, 240], "tensor_dtyp": 16, "tensor_dtype_to_np_dtyp": 16, "tensor_float": 89, "tensor_float_out": 89, "tensor_mod": 89, "tensor_out": 89, "tensor_qparam": 89, "tensor_scalar": [89, 107, 212, 236], "tensor_scalar_out": 89, "tensor_tensor": 89, "tensor_tensor_out": 89, "tensor_typ": 203, "tensorarrai": 89, "tensorarrayint": 89, "tensorbas": [206, 225], "tensordataset": 208, "tensordot": 89, "tensorflow": 206, "tensorlist_bin": 89, "tensorproto": [16, 20, 21, 126, 129, 157, 192, 198, 202, 203, 230, 232], "tensors_saved_for_backwards_slic": 225, "test": [10, 26, 60, 78, 103, 111, 115, 118, 119, 120, 122, 196, 199, 200, 206, 207, 209, 210, 211, 213, 215, 216, 218, 219, 221, 222, 223, 241, 243, 247, 251], "test_cas": 88, "test_el": 91, "test_investigate_onnxruntime_issue_cal": 21, "test_modeling_llama": 115, "test_modeling_phi": [119, 120], "test_onnx_export_dynamic_shap": 247, "testcas": 10, "text": [3, 10, 16, 103, 109, 206, 221, 247], "textwrap": 206, "tfloat": [21, 129], "than": [13, 109, 126, 131, 133, 134, 142, 168, 169, 211, 230, 232], "thei": [11, 60, 91, 104, 105, 106, 110, 113, 123, 126, 128, 131, 158, 161, 168, 185, 186, 206, 211, 221, 230, 232], "them": [16, 55, 56, 60, 62, 103, 106, 109, 110, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 190, 196, 204, 211, 213, 223, 230, 232, 244, 251], "then_branch": [199, 217], "thengraph_3": 199, "thi": [3, 4, 6, 10, 11, 13, 21, 26, 51, 55, 56, 57, 60, 62, 69, 83, 88, 89, 90, 91, 101, 103, 104, 105, 106, 107, 109, 110, 111, 116, 121, 122, 123, 125, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 190, 191, 192, 193, 196, 197, 199, 200, 202, 204, 205, 206, 208, 209, 211, 213, 215, 216, 217, 218, 219, 220, 221, 223, 229, 230, 231, 232, 235, 236, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "this312": [107, 204, 205, 206, 208, 212, 213, 217, 219, 230, 236], "thnn_conv2d": 89, "those": [11, 57, 89, 126, 230, 251], "though": 221, "three": [169, 230], "threshold": [89, 91, 126, 128, 131, 181], "threshold_": 89, "threshold_backward": [89, 91, 204], "thresholdrelu": 185, "through": [13, 111, 131, 196, 204, 206, 223, 229, 230, 231, 232, 249, 250], "throw": [111, 248], "tid": 201, "tie_word_embed": [212, 213, 214, 216], "tight_layout": [201, 206], "tile": 89, "time": [4, 5, 10, 19, 55, 60, 83, 88, 89, 91, 103, 109, 126, 131, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 232, 237, 242, 246], "time1_init": 206, "time_": 57, "time_evaluation_constants_": [88, 89, 232], "time_export": 223, "time_in": [200, 232], "time_it": 57, "time_lat": 223, "time_latency_eag": 223, "time_load": 223, "time_sess": 223, "time_tot": 223, "time_warmup": 223, "time_warmup_eag": 223, "timeout": 4, "timer": 10, "timestamp": 57, "timestamp_column": 57, "timm": [223, 234], "timmrunn": 65, "tin": 225, "tini": [116, 209, 216, 250], "tint64": 129, "titl": 206, "tk": 209, "tl2": 208, "tn": 209, "to_1": [107, 212, 236], "to_10": [107, 212, 236], "to_11": [107, 212, 236], "to_12": [107, 212, 236], "to_13": [107, 212, 236], "to_14": [107, 212, 236], "to_15": [107, 212, 236], "to_16": [107, 212, 236], "to_17": 212, "to_18": 212, "to_19": 212, "to_2": [107, 212, 236], "to_20": 212, "to_21": 212, "to_22": 212, "to_3": [107, 212, 236], "to_4": [107, 212, 236], "to_5": [107, 212, 236], "to_6": [107, 212, 236], "to_7": [107, 212, 236], "to_8": [107, 212, 236], "to_9": [107, 212, 236], "to_backend": 197, "to_be_lowered_modul": 197, "to_csv": [200, 201, 206], "to_dens": 89, "to_dense_backward": 89, "to_devic": 91, "to_dict": 206, "to_dtyp": 91, "to_dtype_layout": 91, "to_edg": 197, "to_excel": [200, 201, 206], "to_executorch": 197, "to_fun": 206, "to_funct": 206, "to_graph_builder_cod": [129, 209], "to_graph_pattern_match": [129, 198], "to_ir": 127, "to_mkldnn_backward": 89, "to_model_proto": [6, 199], "to_numpi": 122, "to_onnx": [72, 73, 74, 75, 76, 77, 88, 89, 105, 106, 107, 109, 126, 129, 200, 202, 206, 207, 208, 211, 212, 213, 214, 215, 216, 222, 230, 231, 232, 236, 240, 241, 249], "to_onnx_loc": [109, 209], "to_pad": 220, "to_spars": 89, "to_sparse_bsc": 89, "to_sparse_bsr": 89, "to_sparse_csc": 89, "to_sparse_csr": 89, "to_str": 221, "to_text": [199, 206], "tocomplex": [26, 31], "todo": 10, "tofind": 10, "token": [190, 206, 216], "tokeneat": 206, "tol_tensor": 89, "toler": [103, 109], "too": [126, 221, 232], "tool": [55, 89, 103, 109, 126, 201, 213, 214, 221, 228, 247], "top": 126, "top_k": 216, "top_p": 216, "topic": [221, 249], "topk": [91, 209, 248], "topological_sort": 126, "torc": 225, "torch": [9, 10, 16, 17, 21, 51, 55, 60, 72, 73, 74, 75, 76, 77, 83, 88, 89, 91, 92, 94, 97, 102, 103, 104, 105, 106, 107, 109, 111, 122, 126, 127, 146, 186, 190, 192, 193, 197, 198, 199, 200, 201, 202, 203, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 230, 231, 232, 233, 234, 236, 240, 241, 247, 249, 251], "torch_": 57, "torch_2_5": 206, "torch_2_8": 206, "torch__dynamo__trace_wrapped_higher_order_op_mod_index0": [107, 212, 236], "torch__dynamo__trace_wrapped_higher_order_op_modindex0": [107, 212, 236], "torch_bench": [10, 17, 223, 226, 227, 228, 234, 247], "torch_dtyp": [212, 213, 214, 216], "torch_dtype_to_onnx_dtyp": 16, "torch_dynamo": [10, 17, 204, 225, 234], "torch_export": [9, 103, 213], "torch_export_patch": [209, 212, 214, 240], "torch_interpret": [10, 17, 72, 73, 74, 75, 76, 77, 88, 89, 204, 206, 207, 208, 209, 213, 217, 218, 219, 220, 221, 230, 232, 234, 236, 240], "torch_log": [205, 213, 214, 215, 217], "torch_model": [10, 17, 83, 107, 225, 234, 236], "torch_model_s": 206, "torch_ort": 247, "torch_result": 105, "torch_script": [57, 72, 73, 74, 76, 77, 82, 109, 122], "torch_test_help": [10, 17], "torchaudio": 247, "torchbench": 223, "torchbench_ado": 223, "torchbenchadorunn": 67, "torchbenchrunn": 66, "torchdata": 247, "torchdynamo": 206, "torchdynamo_extended_debug_cpp": [205, 213, 214, 217], "torchdynamo_extended_debug_create_symbol": [205, 213, 214, 217], "torchexporterror": 236, "torchknnimput": 209, "torchlinearregress": 208, "torchmodelcontain": [126, 127], "torchonnxevalu": 56, "torchopoverload": [94, 103], "torchrec": [75, 76], "torchscript": [83, 206], "torchtext": 247, "torchvis": [89, 247], "tort": 235, "total": [10, 56, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 241], "total_dim": 240, "total_loss": 208, "total_partit": [56, 63, 64, 65, 66, 67, 68], "tottim": 206, "tqdm": [4, 206], "tr": 221, "tr2": 208, "tr_node": 145, "trace": [10, 89, 103, 107, 109, 205, 213, 214, 217, 236], "trace_backward": 89, "trace_execution_piece_by_piec": [109, 209, 213], "trace_forward_execut": [109, 213], "trace_funct": 109, "trace_structur": 206, "traceabl": 108, "traceback": [107, 206, 213, 230, 236], "traced_cond": 109, "traced_method": 109, "tracer": [111, 209, 213], "tracerbas": 111, "tracing_mod": 103, "track": [126, 131, 207, 209, 230, 231], "track_tensor": 206, "track_tensor_tre": 206, "train": [3, 11, 13, 21, 56, 88, 89, 91, 121, 126, 133, 144, 174, 178, 206, 208, 209, 212, 247], "train_loop": 208, "train_test_split": 208, "trained_model": 204, "training_help": [10, 114], "trainload": 204, "trane": 21, "transa": [193, 200, 204, 206, 221], "transb": [133, 145, 176, 178, 193, 200, 204, 206, 207, 208, 217, 221, 230, 232], "transbatcha": 221, "transbatchb": 221, "transform": [10, 62, 88, 89, 107, 111, 115, 116, 119, 209, 212, 213, 214, 216, 223, 224, 225, 234, 236, 240, 247], "transformerengin": 247, "transformers_vers": 216, "translat": [89, 103, 198, 206, 230, 236], "translate_api": [129, 198], "translate_function_signatur": 206, "transpos": [89, 91, 92, 93, 97, 102, 107, 126, 128, 133, 134, 135, 145, 155, 158, 161, 163, 176, 178, 179, 200, 212, 221, 230, 232, 236, 238, 240], "transpose2": 221, "transpose2dcast16": [161, 163], "transpose2dcastfp16": [26, 49], "transpose2dcastfp32": [26, 49, 161, 163], "transpose_1": [107, 212, 221, 236, 240], "transpose_10": [200, 240], "transpose_11": 200, "transpose_12": 200, "transpose_13": 200, "transpose_2": [107, 212, 236, 240], "transpose_2_output_0": 238, "transpose_3": [107, 212, 236], "transpose_3_output_0": 238, "transpose_4": [107, 212, 236, 240], "transpose_4_output_0": 238, "transpose_5": [107, 200, 212, 236, 240], "transpose_6": [200, 212, 240], "transpose_7": [200, 212, 240], "transpose_8": [200, 212], "transpose_9": [200, 240], "transpose_copi": 89, "transpose_int": 91, "transpose_nod": [155, 158, 176], "transpose_output_0": 238, "transpose_token_4_out0": 238, "transpose_token_5_out0": 238, "transpose_token_6_out0": 238, "transpose_token_8_out0": 238, "transposecast": 161, "transposecastpattern": [161, 163, 244], "transposeequalreshap": 133, "transposeequalreshapepattern": [88, 89, 131, 133, 155, 204, 208, 217, 221, 230, 232, 244], "transposefusedmatmulb": 178, "transposefusedmatmulbpattern": [176, 178, 221, 244], "transposematmul": [126, 128, 133, 232], "transposematmulpattern": [88, 89, 131, 133, 145, 200, 221, 232, 244], "transposemiddl": [158, 161], "transposereshapematmul": 133, "transposereshapematmulpattern": [131, 133, 145, 200, 221, 232, 244], "transposereshapematmulpatternl_input15": 200, "transposereshapematmulpatternl_input16": 200, "transposereshapematmulpatternl_input18": 200, "transposereshapematmulpatternl_input19": 200, "transposereshapetranspos": 133, "transposereshapetransposepattern": [131, 133, 155, 221, 232, 244], "transposetranspos": [126, 128, 133, 232], "transposetransposepattern": [131, 133, 155, 200, 221, 232, 244], "trapezoid": 89, "trapz": 89, "treat": 111, "tree": [3, 170, 171, 213], "tree_ensembl": [10, 170], "tree_flatten": [205, 206], "tree_flatten_spec": 205, "tree_is_leaf": 206, "tree_map": 206, "tree_map_onli": 206, "tree_map_with_path": [206, 213], "tree_nam": 213, "tree_nod": 171, "tree_out": 213, "tree_spec": 110, "tree_spec_as_nam": 110, "tree_spec_from_nam": 110, "tree_unflatten": 205, "tree_unflatten_1": 205, "treeensembleregressor": [170, 171], "treeensembleregressorconcat": 170, "treeensembleregressorconcatpattern": [170, 171, 244], "treeensembleregressormul": 170, "treeensembleregressormulpattern": [170, 171, 244], "trees_or_sigmoid": 171, "treespec": [107, 110, 207, 213, 236], "tri": [3, 21, 60, 88, 89, 103, 107, 109, 126, 131, 133, 142, 148, 151, 195, 212, 214, 230, 232, 250], "triangular": [160, 161], "tricki": 221, "trigger": [178, 179, 205, 213, 214, 217, 219, 223], "tril": [89, 91, 92, 221, 240], "tril_": 89, "tril_indic": 89, "trilu": 91, "trimatrix": [26, 50, 160, 161], "trimatrixpattern": [160, 161, 244], "triplet_margin_loss": 89, "triu": 89, "triu_": 89, "triu_indic": 89, "trt": 227, "true": [4, 6, 9, 10, 16, 18, 21, 51, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 83, 88, 89, 90, 91, 103, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 131, 133, 143, 145, 158, 161, 166, 168, 170, 172, 178, 181, 182, 186, 191, 192, 193, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 221, 223, 230, 232, 236, 240, 247], "true_divid": 89, "true_divide_": 89, "true_fn": 109, "true_graph": 91, "true_graph_0": 217, "true_model_nam": 109, "truediv": 91, "trunc": 89, "trunc_": 89, "truncat": 4, "trust": 248, "try": [4, 88, 89, 103, 109, 197, 201, 205, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 221, 250, 251], "try_export": [109, 209, 213], "try_infer_shap": [131, 232], "try_infer_typ": [131, 232], "try_rewrit": 206, "trycal": 10, "tt": 232, "ttime": 10, "ttt": 232, "tupl": [3, 4, 9, 10, 16, 19, 20, 51, 55, 56, 57, 60, 61, 62, 69, 88, 89, 91, 92, 96, 97, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 126, 128, 131, 146, 181, 186, 191, 192, 193, 195, 203, 206, 207, 209, 212, 213, 214, 230], "turn": [178, 179, 248], "tutori": [197, 219, 234], "tvk": 88, "tweak": [196, 197, 199, 204, 209, 210, 241], "twice": [121, 213], "two": [13, 18, 60, 89, 91, 109, 117, 123, 126, 128, 131, 133, 136, 145, 146, 148, 151, 155, 176, 178, 186, 209, 212, 213, 214, 219, 221, 223, 230, 232], "txt": [196, 206, 211], "type": [10, 11, 13, 16, 19, 60, 88, 89, 91, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 121, 123, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 191, 192, 193, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 231, 236, 240, 242, 248, 250], "type_a": [89, 91], "type_annot": 206, "type_as_str_with_info": 110, "type_infer": [10, 189], "type_info": 16, "type_promot": 206, "typeerror": [209, 236], "typic": 60, "u": 230, "u0": [205, 212, 213, 214, 217], "uaq": 236, "uco": 240, "uint16": 185, "uint32": 185, "uint4": 185, "uint64": 185, "uint8": 185, "ulimit": 247, "un": 221, "unabl": [107, 111, 230, 236, 248], "unari": [185, 193], "unary_like_op_typ": 185, "unary_oper": [10, 161], "unavail": 249, "unbind": [89, 91], "unbind_copi": 89, "undefin": [13, 60, 126, 128, 185, 247], "under": 221, "underli": [111, 205], "understand": [10, 109, 110, 126, 131, 168, 192, 213], "uneasi": 237, "unexpect": [209, 249], "unexpectedli": [219, 248], "unflatten": [91, 104, 205, 206, 213, 221], "unflatten_dense_tensor": 89, "unflatten_ep": 221, "unflatten_int": 91, "unfold": [89, 91, 206, 209], "unfold_backward": 89, "unfold_copi": 89, "unfortun": 205, "unfus": [10, 131], "unfused_": 182, "unfused_nod": 182, "unhid": 10, "unhint": [205, 213, 214, 217], "uniform": 89, "uniform_": 89, "uninstal": 247, "union": 126, "uniqu": [16, 57, 60, 104, 106, 111, 126, 131, 230], "unique_dimension_nam": 126, "unique_nam": [126, 131], "unique_node_nam": 126, "unit": [10, 115, 118, 119, 120, 122, 206, 243], "unit_test_go": [10, 206], "unittest": 10, "unk__0": 203, "unk__1": 203, "unk__2": 203, "unk__3": 203, "unknonw": [126, 192], "unknown": [11, 16, 125, 126, 192, 230], "unless": [126, 217, 218, 219], "unlighten": [228, 242], "unnam": [91, 105, 110], "unnecessari": [111, 208], "unpack_prepacked_sizes_conv2d": 89, "unpack_prepacked_sizes_linear": 89, "unrol": 215, "unsafe_split": 89, "unsafe_split_with_s": 89, "unsq": 232, "unsq0": 220, "unsq_nod": 149, "unsqueez": [89, 91, 93, 97, 107, 126, 128, 133, 141, 148, 156, 200, 212, 220, 232, 236, 238, 240], "unsqueeze_": 91, "unsqueeze_1": [107, 212, 236], "unsqueeze_1_output_0": 238, "unsqueeze_2": [107, 212, 236], "unsqueeze_22": 240, "unsqueeze_3": [107, 212, 236], "unsqueeze_4": [107, 212, 236, 240], "unsqueeze_5": [107, 212, 236, 240], "unsqueeze_6": [200, 212], "unsqueeze_7": 212, "unsqueeze_copi": 89, "unsqueeze_nod": 156, "unsqueeze_output_0": 238, "unsqueezeequ": 133, "unsqueezeequalpattern": [131, 133, 141, 221, 232, 244], "unsqueezereshap": 133, "unsqueezereshapepattern": [131, 133, 148, 221, 232, 244], "unsqueezeunsqueez": 133, "unsqueezeunsqueezepattern": [131, 133, 156, 221, 232, 244], "unsuccess": 60, "unsupport": [205, 206], "unsupport_dict": 90, "unsupportedaliasmutationexcept": 215, "unsuppos": 201, "until": [10, 21, 109, 126, 131, 230, 232, 247], "untrain": [216, 223], "untrainedrunn": 68, "untyp": 126, "unus": [56, 94, 103, 126, 128, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 200, 206, 221, 230, 232, 244], "unused2": 221, "unused3": 221, "unused4": 221, "unwrap_dead_wrapp": 225, "unwrap_if_dead": 225, "uoe": 232, "up": [10, 51, 60, 131, 205, 223, 231, 247], "up_proj": [107, 236], "up_stat": 212, "updat": [16, 91, 103, 126, 129, 191, 206, 212, 213, 214, 216, 230, 232, 234, 247], "update_model_with_attribut": 111, "update_model_with_cal": 111, "update_node_const": [126, 232], "update_shap": [191, 203], "upgrad": 247, "upon": 230, "upper": [91, 206], "upsample_bicubic2d": [89, 91], "upsample_bicubic2d_aa_vec": 89, "upsample_bicubic2d_default": 89, "upsample_bicubic2d_vec": [89, 91], "upsample_bilinear2d": [89, 91], "upsample_bilinear2d_aa_vec": 89, "upsample_linear1d": [89, 91], "upsample_linear1d_vec": 91, "upsample_nearest1d": 89, "upsample_nearest2d": [89, 91], "upsample_nearest2d_vec": 91, "upsample_nearest3d": [89, 91], "upsample_nearest3d_vec": 91, "upsample_nearest_exact1d": 89, "upsample_trilinear3d": [89, 91], "upsample_trilinear3d_vec": 91, "url": 247, "us": [4, 11, 13, 16, 18, 21, 51, 56, 57, 58, 60, 61, 69, 88, 89, 91, 101, 103, 105, 107, 109, 110, 111, 116, 122, 126, 127, 128, 131, 133, 142, 145, 158, 168, 190, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 229, 235, 241, 243, 245, 247, 248, 250, 251], "usaa": 238, "usag": [60, 242, 243, 244, 245, 246], "use_aot_autograd": 90, "use_cach": [212, 213, 214, 216], "use_cuda": 247, "use_dynam": 69, "use_dynamic_shap": [109, 209, 213], "use_eval_mod": 56, "use_fused_aten_op": 69, "use_input_stat": 91, "use_left": 193, "use_ort": 209, "use_sequ": 91, "use_training_api": 21, "usedefaultvalu": 60, "user": [11, 55, 57, 103, 107, 109, 126, 128, 131, 190, 197, 208, 218, 219, 223, 230, 232, 236, 248], "user_input": [107, 212, 220, 230, 236], "user_output": [107, 212, 220, 230, 236], "usererror": 213, "userwarn": [204, 205, 217, 219, 224], "usin": 240, "usp": [205, 213, 214, 217], "usr": [206, 223, 236, 247], "usual": [103, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 208, 211, 213, 223, 230, 232], "ut_torch_interpret": 247, "util": [107, 204, 205, 206, 208, 209, 213, 224, 225, 236, 251], "uunsqueeze_4": 240, "uunsqueeze_5": 240, "uwbo": 221, "v": [91, 92, 97, 103, 106, 206, 209, 243, 244, 246, 247], "v0_0": 198, "v1": 113, "v2": 113, "v_concat": 179, "v_proj": [107, 236, 238, 240], "v_transpos": 179, "val": [107, 230, 236], "val_5": 206, "valid": [19, 60, 61, 103, 105, 106, 126, 131, 143, 172, 202, 208, 213, 216, 246], "validate_attribute_map": 131, "validate_ep": 103, "validate_exported_onnx": 106, "validate_exported_program": 103, "validate_fx_output": 105, "validate_fx_tensor": 105, "validate_map": [131, 143, 172, 202], "validate_onnx": [103, 209], "valu": [3, 4, 10, 11, 13, 16, 56, 57, 58, 60, 69, 88, 89, 91, 92, 93, 103, 106, 109, 117, 121, 122, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 190, 191, 192, 198, 199, 200, 202, 206, 207, 208, 209, 217, 219, 220, 221, 223, 230, 232, 240, 244, 248], "value2": 221, "value_as_shap": [126, 192, 230], "value_cach": [212, 213, 214, 216], "value_float": [200, 204], "value_info": [126, 203], "value_int": 199, "value_reduc": 89, "value_selecting_reduction_backward": 89, "value_st": [107, 212, 236], "value_to_mask": 209, "valueerror": [201, 206, 209], "valueinfoproto": [16, 126, 192], "valueinfotensorproto": 126, "vander": 89, "var": [60, 89, 108], "var_mean": 89, "vari": 251, "variabl": [4, 10, 103, 104, 107, 108, 109, 126, 131, 186, 190, 192, 209, 223, 248], "varianc": [107, 212, 236], "variance_epsilon": [107, 212, 236], "variou": [205, 223], "varshapetyp": 108, "vdot": 89, "vec": 89, "vector": 52, "vector_norm": 89, "verbos": [4, 6, 9, 11, 19, 20, 21, 26, 51, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 73, 83, 88, 89, 90, 101, 103, 105, 106, 107, 109, 111, 121, 122, 123, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 192, 200, 202, 206, 208, 209, 213, 221, 223, 224, 225, 230, 243, 244, 246], "verfici": 103, "veri": [10, 126, 128, 178, 179, 197, 204, 206, 221, 230, 232, 236, 247], "verif": [109, 126, 128, 193, 197], "verifi": [109, 126, 128, 131], "verify_dynamic_shap": 126, "verify_shap": 206, "verion": 10, "version": [0, 10, 96, 101, 111, 123, 126, 133, 143, 172, 178, 181, 196, 199, 200, 202, 204, 206, 207, 208, 211, 217, 218, 219, 220, 221, 223, 230, 232, 240, 247], "version_convert": 230, "version_monai": 57, "version_onnx": 57, "version_onnxruntim": [57, 223], "version_onnxscript": 57, "version_python": 57, "version_tag": 57, "version_timm": 57, "version_to_skip": 10, "version_torch": [57, 223], "version_transform": [57, 223], "via": 248, "view": [89, 91, 93, 102, 107, 205, 206, 212, 213, 215, 216, 217, 236, 240], "view_1": [107, 212, 236], "view_10": 240, "view_11": 240, "view_12": 240, "view_2": [107, 212, 236], "view_22": 200, "view_23": 200, "view_24": 200, "view_25": 200, "view_26": 200, "view_27": 200, "view_29": 200, "view_3": 212, "view_30": 200, "view_31": 200, "view_32": 200, "view_33": 200, "view_34": 200, "view_35": 200, "view_36": 200, "view_37": 200, "view_38": 200, "view_39": 200, "view_4": 212, "view_40": 200, "view_41": 200, "view_42": 200, "view_5": [212, 240], "view_6": 240, "view_7": 240, "view_8": 240, "view_9": 240, "view_copi": 89, "view_tim": 206, "violat": 215, "virtual_tensor": 10, "vision": [116, 117], "visit_graph": 206, "visit_nod": 206, "visitor": 194, "visual": [200, 202, 217, 218, 219, 220, 221, 230], "vocab": 61, "vocab_s": [61, 115, 118, 119, 120, 212, 213, 214, 216, 221, 224, 225, 236, 240], "voco": 10, "vr": [212, 220], "vstack": 89, "vv": [107, 204, 205, 206, 208, 212, 213, 217, 219, 230, 236], "vvei": 221, "vxzd": 238, "w": [13, 79, 206, 209, 223, 224, 225, 227, 246, 247], "w_i": 13, "wa": [11, 57, 95, 101, 103, 104, 107, 109, 126, 131, 133, 136, 168, 178, 179, 182, 200, 205, 206, 209, 212, 213, 214, 216, 217, 218, 221, 230, 231, 232, 234, 236, 239, 249], "wai": [11, 16, 21, 89, 103, 107, 109, 131, 133, 151, 156, 196, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 213, 223, 230, 231, 232, 241, 248], "wait_tensor": 89, "walk": [13, 230, 231, 232, 250], "want": [90, 104, 202, 212, 213, 214], "waq": 200, "warm": 223, "warmup": [3, 10, 19, 56, 60, 63, 64, 65, 66, 67, 68, 69, 83, 206, 223, 224, 225, 246], "warmup_tim": [10, 206, 224, 225], "warn": [10, 94, 103, 204, 206, 208, 209, 217, 219, 224, 236], "warranti": 235, "watch": 20, "wb": [197, 200, 206, 232], "we": [56, 90, 91, 103, 109, 111, 113, 134, 199, 202, 203, 205, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 232], "weaker": 248, "webui": 247, "weight": [11, 13, 55, 60, 83, 91, 103, 104, 106, 107, 109, 126, 205, 206, 207, 208, 209, 212, 217, 221, 230, 232, 236, 240, 242, 243], "weight2": 230, "weight_matrix": 209, "weight_nam": 13, "weights_sum": 209, "weigth": 216, "weii": 221, "well": [6, 11, 16, 21, 55, 88, 89, 103, 109, 113, 116, 122, 126, 128, 131, 133, 142, 204, 205, 216, 220, 221, 230, 236], "were": [4, 91, 103, 117, 204, 206, 209, 221, 230], "what": [10, 26, 55, 88, 89, 91, 103, 109, 117, 191, 206, 208, 217, 218, 219, 230, 231, 232, 249], "whatev": [56, 103, 109], "when": [10, 60, 69, 88, 89, 91, 95, 101, 103, 104, 107, 109, 110, 111, 126, 128, 131, 133, 155, 168, 169, 190, 191, 192, 196, 197, 200, 202, 205, 206, 209, 213, 214, 215, 216, 217, 218, 219, 229, 230, 231, 232, 248, 249], "whenev": [88, 89, 101, 230], "where": [4, 13, 56, 60, 88, 89, 91, 92, 97, 107, 109, 117, 122, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 200, 204, 209, 213, 221, 230, 232, 236], "where_nod": [135, 142, 159, 160, 164], "where_replac": [10, 161], "where_scalar": 91, "where_scalaroth": 91, "where_scalarself": 91, "where_self": 91, "wherev": [131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 203, 232], "whether": [90, 126, 235], "which": [10, 60, 89, 91, 101, 104, 106, 109, 111, 117, 126, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 192, 193, 205, 220, 221, 223, 230, 231, 232, 248], "while": [10, 13, 16, 60, 62, 89, 109, 193, 230, 232, 250, 251], "whl": 247, "whole": [51, 122, 209, 213, 232], "whom": 235, "whose": 131, "why": [123, 126, 192, 221, 230], "window": 10, "wipe": 126, "wise": [133, 142, 148, 154, 185], "with_attribut": [16, 182], "with_devic": [16, 109, 213], "with_dynamic_shap": [109, 213], "with_exist": 126, "with_input": [109, 213], "with_mask": [69, 115, 118, 119, 120], "with_min_max": [16, 109, 213], "with_path_append": 10, "with_shap": [16, 109, 212, 213, 214, 216], "within": [60, 61, 62], "without": [3, 20, 60, 116, 126, 127, 131, 149, 203, 206, 216, 221, 230, 232, 235, 243], "wjqf": 238, "wmjw": 238, "word_emb": 221, "word_p": 221, "work": [13, 17, 51, 56, 60, 69, 91, 103, 107, 109, 111, 123, 133, 142, 193, 204, 205, 206, 208, 209, 211, 213, 215, 216, 217, 218, 219, 221, 230, 247, 248, 249], "worst": 232, "would": [89, 109, 191, 205, 213, 215, 216, 217, 221], "wrap": [21, 60, 83, 88, 104, 106, 126, 204, 206, 213, 223, 224], "wrap_kind": 60, "wrap_with_autocast": [107, 212, 236], "wrap_with_proxi": 206, "wrap_with_set_grad_en": [212, 236], "wrapdim": 126, "wrapexecutorchfortorch": 83, "wrapfortorch": 83, "wrapinferencesessionfortorch": [56, 83], "wrapped_fn": 213, "wrapped_func": 91, "wrapped_mod": 213, "wrappedmodelbas": 60, "wrappedmodeltotupl": [60, 223], "wrappedneuroniint": 205, "wrapper": [9, 60, 206, 213, 236], "wrapsym": 126, "write": [125, 197, 198, 200, 206, 209, 216, 230, 232, 243], "write_fil": 89, "wrong": [88, 89, 126, 131, 247], "wvo": 232, "x": [16, 21, 54, 62, 88, 89, 91, 93, 97, 103, 104, 105, 106, 107, 110, 122, 126, 133, 134, 142, 143, 154, 158, 161, 164, 168, 169, 172, 178, 188, 193, 194, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 217, 218, 219, 220, 221, 230, 232, 236, 240, 250], "x1": [133, 150, 198], "x2": [133, 150, 198, 220], "x86_64": [206, 223, 247], "x_1": 205, "x_i": 13, "x_imput": 209, "x_indic": 209, "x_norm": 221, "x_np": [218, 219], "x_row": 215, "x_test": 208, "x_train": 208, "xadupr": [107, 204, 205, 206, 208, 212, 213, 217, 219, 220, 230, 236], "xbuilder": [10, 17, 107, 149, 169, 198, 200, 202, 206, 209, 218, 219, 221, 230, 232, 234, 236], "xc": 209, "xdoctest": 60, "xfbd": 221, "xlog1pi": 89, "xlogi": 89, "xlogy_": 89, "xlsx": [71, 200, 201, 206, 223], "xn": 209, "xoptim": [10, 17, 126, 128, 200, 202, 204, 206, 232, 234, 244], "xor": 185, "xrfp": 238, "xrk": 89, "xs_0": 205, "xs_1": 205, "xshape": [10, 17, 203, 206, 234, 250], "xtsr": 238, "xx": 209, "xy": 203, "y": [21, 62, 91, 93, 97, 103, 110, 126, 133, 143, 154, 172, 178, 188, 193, 199, 202, 203, 204, 208, 209, 215, 220, 221, 230, 240, 247], "y1": 209, "y10": 209, "y11": 209, "y2": 220, "y40": 209, "y_i": 13, "y_pred": 208, "y_row": 215, "y_test": 208, "y_train": 208, "yaxd": 221, "ycaa": 221, "ycxw": 221, "ye": 60, "yerr": 206, "yet": [109, 209], "yield": 60, "yieldop": 11, "ylabel": 206, "ynji": 238, "you": [6, 107, 109, 126, 205, 212, 213, 214, 215, 216, 217, 230, 236], "your": [204, 205, 213, 215, 216, 217, 224], "yourself": [204, 224], "yp": 13, "ysto": 238, "ysy": 202, "yt": 13, "yy": 209, "yz": [62, 205], "yzwn": 221, "z": [21, 129, 197, 203, 205, 207, 230], "z1": 230, "z2": 230, "z_1": 207, "zaaa": 238, "zero": [11, 89, 91, 126, 143, 198, 209, 219, 220, 232], "zero_": 89, "zero_grad": [204, 208], "zero_point": 52, "zerof": [143, 232], "zeroi": [143, 232], "zeros_lik": [89, 91], "zeta": 89, "zevq": 221, "zhu": 221, "zip": [57, 105, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "zoo": 10, "zzaz": 221}, "titles": ["Change Logs", "._bench_test", "._command_lines_parser", ".args", ".bench_run", ".checks", ".convert.convert_helper", ".convert", ".convert.ort_helper", ".export_helpers", ".ext_test_case", ".gradient.grad_helper", ".gradient", ".gradient.loss_helper", ".gradient.ops", ".gradient.ops.op_broadcast_gradient_args", ".helpers", "API", ".memory_peak", ".model_run", ".onnx_tools", ".ort_session", ".plotting.data", ".plotting", ".plotting.memory", ".reference.evaluator", ".reference", ".reference.ops", ".reference.ops.op_add_add_mul_mul", ".reference.ops.op_average_pool_grad", ".reference.ops.op_cast_like", ".reference.ops.op_complex", ".reference.ops.op_concat", ".reference.ops.op_constant_of_shape", ".reference.ops.op_fused_matmul", ".reference.ops.op_gather_grad", ".reference.ops.op_memcpy_host", ".reference.ops.op_mul_sigmoid", ".reference.ops.op_negxplus1", ".reference.ops.op_qlinear_average_pool", ".reference.ops.op_qlinear_conv", ".reference.ops.op_quick_gelu", ".reference.ops.op_replace_zero", ".reference.ops.op_rotary", ".reference.ops.op_scatter_elements", ".reference.ops.op_scatternd_of_shape", ".reference.ops.op_simplified_layer_normalization", ".reference.ops.op_skip_layer_normalization", ".reference.ops.op_slice", ".reference.ops.op_transpose_cast", ".reference.ops.op_tri_matrix", ".reference.ort_evaluator", ".reference.quantized_tensor", ".skl.convert", ".skl.helpers", ".skl", "experimental_experiment.torch_bench._bash_bench_benchmark_runner", "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg", "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg_helper", "experimental_experiment.torch_bench._bash_bench_cmd", "experimental_experiment.torch_bench._bash_bench_model_runner", "experimental_experiment.torch_bench._bash_bench_models_helper", "experimental_experiment.torch_bench._bash_bench_set_dummies", "experimental_experiment.torch_bench._bash_bench_set_explicit", "experimental_experiment.torch_bench._bash_bench_set_huggingface", "experimental_experiment.torch_bench._bash_bench_set_timm", "experimental_experiment.torch_bench._bash_bench_set_torchbench", "experimental_experiment.torch_bench._bash_bench_set_torchbench_ado", "experimental_experiment.torch_bench._bash_bench_untrained", "experimental_experiment.torch_bench._dort_cmd_common", "experimental_experiment.torch_bench._dort_cmd_common_models", ".torch_bench.bash_bench_agg", ".torch_bench.bash_bench_explicit", ".torch_bench.bash_bench_huggingface", ".torch_bench.bash_bench_timm", ".torch_bench.bash_bench_torchbench", ".torch_bench.bash_bench_torchbench_ado", ".torch_bench.bash_bench_untrained", ".torch_bench.check_model", ".torch_bench.dort_bench", ".torch_bench.dort_bench_profile", ".torch_bench.dort_profile", ".torch_bench.export_model", ".torch_bench.export_model_helper", ".torch_bench", ".torch_dynamo._dynamo_exporter", ".torch_dynamo.backend_helper", ".torch_dynamo.debug_backend", ".torch_dynamo.fast_backend", ".torch_dynamo", "experimental_experiment.torch_dynamo.partition", ".torch_interpreter._aten_functions", ".torch_interpreter._aten_functions_attention", ".torch_interpreter._aten_methods", ".torch_interpreter._doc_", ".torch_interpreter._exceptions", ".torch_interpreter._non_aten_functions", ".torch_interpreter._prims_functions", ".torch_interpreter._torch_helper", ".torch_interpreter.aten_functions", ".torch_interpreter.aten_methods", ".torch_interpreter.dispatcher", ".torch_interpreter.export_options", ".torch_interpreter", ".torch_interpreter.interpreter", ".torch_interpreter.investigate_helper", ".torch_interpreter.onnx_export", ".torch_interpreter.oxs_dispatcher", ".torch_interpreter.oxs_opset", ".torch_interpreter.piece_by_piece", ".torch_interpreter.piece_by_piece_serialize", ".torch_interpreter.tracing", ".torch_models.diffusion_model_helper", ".torch_models.dump_helper", ".torch_models", ".torch_models.llama_helper", ".torch_models.llm_model_helper", ".torch_models.llm_model_setup", ".torch_models.mistral_helper", ".torch_models.phi3_helper", ".torch_models.phi_helper", ".torch_models.training_helper", ".torch_test_helper", ".xbuilder._onnx_helper", ".xbuilder.graph_builder", ".xbuilder.graph_builder_opset", ".xbuilder", ".xbuilder.model_container", ".xbuilder.optimization_options", ".xbuilder.reverse_graph_builder", ".xoptim.graph_builder_optim", ".xoptim", ".xoptim.order_optim", ".xoptim.patterns", ".xoptim.patterns.onnx_any", ".xoptim.patterns.onnx_attention", ".xoptim.patterns.onnx_cast", ".xoptim.patterns.onnx_clip", ".xoptim.patterns.onnx_constants", ".xoptim.patterns.onnx_conv", ".xoptim.patterns.onnx_dropout", ".xoptim.patterns.onnx_equal", ".xoptim.patterns.onnx_expand", ".xoptim.patterns.onnx_functions", ".xoptim.patterns.onnx_layer_normalization", ".xoptim.patterns.onnx_matmul", ".xoptim.patterns.onnx_mul", ".xoptim.patterns.onnx_reduce", ".xoptim.patterns.onnx_reshape", ".xoptim.patterns.onnx_rotary", ".xoptim.patterns.onnx_sequence", ".xoptim.patterns.onnx_shape", ".xoptim.patterns.onnx_slice", ".xoptim.patterns.onnx_split", ".xoptim.patterns.onnx_sub", ".xoptim.patterns.onnx_transpose", ".xoptim.patterns.onnx_unsqueeze", ".xoptim.patterns_api", ".xoptim.patterns_exp.binary_operators", ".xoptim.patterns_exp.constant_of_shape_scatter_nd", ".xoptim.patterns_exp.constants", ".xoptim.patterns_exp", ".xoptim.patterns_exp.simple_rotary", ".xoptim.patterns_exp.unary_operators", ".xoptim.patterns_exp.where_replace", ".xoptim.patterns_fix.add_reduction_scatter_nd", ".xoptim.patterns_fix", ".xoptim.patterns_investigation.element_wise", ".xoptim.patterns_investigation", ".xoptim.patterns_investigation.llm_patterns", ".xoptim.patterns_ml", ".xoptim.patterns_ml.tree_ensemble", ".xoptim.patterns_ort.activation", ".xoptim.patterns_ort.activation_grad", ".xoptim.patterns_ort.batch_normalization", ".xoptim.patterns_ort.fused_conv", ".xoptim.patterns_ort.fused_matmul", ".xoptim.patterns_ort.gather_grad", ".xoptim.patterns_ort", ".xoptim.patterns_ort.llm_optim", ".xoptim.patterns_ort.simplified_layer_normalization", ".xoptim.repeated_optim", ".xoptim.unfused", ".xshape._builder_runtime", ".xshape._inference_runtime", ".xshape._onnx_helper", ".xshape._shape_helper", ".xshape._shape_runtime", ".xshape.evaluate_expressions", ".xshape", ".xshape.rename_expressions", ".xshape.shape_builder", ".xshape.shape_builder_impl", ".xshape.shape_type_compute", ".xshape.simplify_expressions", ".xshape.type_inference", "Examples Gallery", "102: First test with ExecuTorch", "Playground for big optimization pattern", "102: Examples with onnxscript", "101: Onnx Model Optimization based on Pattern Rewriting", "101: Profile an existing model with onnxruntime", "101: Onnx Model Rewriting", "201: Better shape inference", "101: A custom backend for torch", "101: Some dummy examples with torch.export.export", "201: Evaluate different ways to export a torch model to ONNX", "102: Tweak onnx export", "101: Linear Regression and export to ONNX", "201: Use torch to export a scikit-learn model into ONNX", "Computation times", "Exporter Recipes Gallery", "Export Phi-3.5-mini-instruct with draft_export", "Export Phi-3.5-mini-instruct piece by piece", "Export Phi-3.5-mini-instruct with report_exportability", "Export a model with a loop (scan)", "Check the exporter on a dummy from HuggingFace", "to_onnx and a model with a test", "to_onnx and a custom operator registered with a function", "to_onnx and a custom operator inplace", "to_onnx and padding one dimension to a mulitple of a constant", "to_onnx and submodules from LLMs", "Computation times", "Measuring the exporters on a short list of sets of models", "experimental_experiment.torch_bench.dort_bench", "experimental_experiment.torch_bench.dort_profile", "Benchmarks from the command line", "Interesting scripts or command lines", "Command Lines", "Dynamo Backends", "Custom Exporter", "Design", "Pattern Optimizer", "Galleries of Examples and Recipes", "experimental-experiment: fuzzy work", "License", "Export Times", "Miscellaneous", "Long Outputs uneasy to read", "Supported Models By the Custom Backend", "Phi", "Computation times", "Tools from the command line", "python -m experimental_experiment lighten and unlighten", "python -m experimental_experiment optimize", "python -m experimental_experiment print", "python -m experimental_experiment run", "Start from a docker", "Unexpected Errors", "Tutorial", "ShapeBuilder", "to_onnx: another export to investigate"], "titleterms": {"": 248, "0": 0, "1": 0, "101": [200, 201, 202, 204, 205, 208], "102": [197, 199, 207], "201": [203, 206, 209], "3": [212, 213, 214], "5": [212, 213, 214], "A": [200, 202, 203, 204, 217, 218, 219, 220, 221, 230], "And": 230, "By": 239, "One": 230, "The": [202, 206, 216], "With": [205, 208], "_aten_funct": 91, "_aten_functions_attent": 92, "_aten_method": 93, "_bash_bench_benchmark_runn": 56, "_bash_bench_benchmark_runner_agg": 57, "_bash_bench_benchmark_runner_agg_help": 58, "_bash_bench_cmd": 59, "_bash_bench_model_runn": 60, "_bash_bench_models_help": 61, "_bash_bench_set_dummi": 62, "_bash_bench_set_explicit": 63, "_bash_bench_set_huggingfac": 64, "_bash_bench_set_timm": 65, "_bash_bench_set_torchbench": 66, "_bash_bench_set_torchbench_ado": 67, "_bash_bench_untrain": 68, "_bench_test": 1, "_builder_runtim": 183, "_command_lines_pars": 2, "_doc_": 94, "_dort_cmd_common": 69, "_dort_cmd_common_model": 70, "_dynamo_export": 85, "_except": 95, "_inference_runtim": 184, "_non_aten_funct": 96, "_onnx_help": [123, 185], "_prims_funct": 97, "_shape_help": 186, "_shape_runtim": 187, "_torch_help": 98, "about": 204, "activ": 172, "activation_grad": 173, "ad": 232, "add_reduction_scatter_nd": 165, "again": 209, "aggreg": [71, 223], "algorithm": [208, 232], "an": [80, 201, 205], "anoth": 251, "api": [17, 230, 232], "appli": 232, "ar": 248, "arg": 3, "aten_funct": 99, "aten_method": 100, "avail": 232, "backend": [204, 226, 229, 239], "backend_help": 86, "base": 200, "bash_bench_agg": 71, "bash_bench_explicit": 72, "bash_bench_huggingfac": 73, "bash_bench_timm": 74, "bash_bench_torchbench": 75, "bash_bench_torchbench_ado": 76, "bash_bench_untrain": 77, "basic": 203, "batch_norm": 174, "bench_run": 4, "benchmark": [71, 72, 73, 74, 75, 76, 77, 206, 226, 247], "better": 203, "big": 198, "binary_oper": 158, "busi": 248, "cach": 216, "capabl": 248, "case": 205, "chang": 0, "check": [5, 78, 216], "check_model": 78, "classic": 203, "code": 209, "command": [226, 227, 228, 242], "common": 211, "compar": 196, "comparison": 221, "compil": [207, 226], "comput": [210, 222, 241], "constant": [160, 220, 232], "constant_of_shape_scatter_nd": 159, "contain": 230, "content": 234, "convent": 230, "convers": [208, 221], "convert": [6, 7, 8, 53, 197, 230], "convert_help": 6, "cpu": 206, "creation": 216, "cuda": [206, 221, 248], "cus_p2": 206, "custom": [199, 204, 213, 218, 219, 230, 236, 239], "data": [22, 208], "debug": 230, "debug_backend": 87, "design": 231, "devic": 248, "differ": [206, 230], "diffusion_model_help": 112, "dimens": [216, 220], "dispatch": [101, 103], "distanc": 215, "docker": 247, "dort": [79, 81], "dort_bench": [79, 224], "dort_bench_profil": 80, "dort_profil": [81, 225], "draft": 212, "draft_export": 212, "dummi": [205, 216], "dump_help": 113, "dynam": [204, 208, 213, 230], "dynamo": [206, 229, 236], "dynamointerpret": 230, "dynger_backend": 89, "dynopt": 206, "easi": 205, "easypatternoptim": 131, "element_wis": 167, "error": [211, 248], "evalu": [25, 203, 206, 208, 213], "evaluate_express": 188, "exampl": [196, 199, 205, 230, 232, 233, 238], "execut": [80, 81, 197], "executorch": 197, "exist": 201, "experi": 234, "experiment": 234, "experimental_experi": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 90, 224, 225, 243, 244, 245, 246], "export": [72, 73, 74, 75, 76, 77, 82, 196, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 220, 223, 226, 230, 236, 248, 251], "export_help": 9, "export_model": 82, "export_model_help": 83, "export_opt": 102, "exportedprogram": 216, "exportopt": 103, "express": 203, "ext_test_cas": 10, "extendedreferenceevalu": 26, "fail": 213, "fake": 230, "fast_backend": 88, "filter": 202, "final": 209, "first": [197, 206, 209, 221, 230], "focu": 200, "from": [216, 221, 226, 242, 247], "function": [26, 55, 89, 103, 126, 131, 189, 199, 218, 230], "functionopt": 126, "fused_conv": 175, "fused_matmul": 176, "fuzzi": 234, "galleri": [196, 211, 233], "gather_grad": 177, "get": [196, 211], "grad_help": 11, "gradient": [11, 12, 13, 14, 15], "graph": 232, "graph_build": 124, "graph_builder_opset": 125, "graph_builder_optim": 130, "graphbuild": [126, 230], "graphbuilderpatternoptim": 131, "guess": 216, "helper": [16, 54, 206], "huggingfac": 216, "i": 248, "implement": [209, 230], "infer": [203, 232], "infershapesopt": 126, "inlin": 221, "inplac": 219, "input": 205, "instruct": [212, 213, 214], "integ": 205, "interest": [206, 227], "intermedi": 209, "intern": 230, "interpret": 104, "investig": 251, "investigate_help": 105, "issu": 248, "knnimput": 209, "learn": [208, 209], "licens": 235, "lighten": [243, 245], "line": [226, 227, 228, 242], "linear": 208, "linrar": 208, "list": [205, 223], "llama": [79, 239, 247], "llama_help": 115, "llm": 221, "llm_model_help": 116, "llm_model_setup": 117, "llm_optim": 179, "llm_pattern": 169, "load": 206, "local": [199, 230], "log": 0, "long": 238, "loop": [205, 215], "loss_help": 13, "m": [243, 244, 245, 246], "match": [198, 232], "match_input_paramet": 103, "matchresult": 131, "max": 227, "measur": 223, "memori": [24, 206], "memory_peak": 18, "mini": [212, 213, 214], "miscellan": 237, "mistral": 239, "mistral_help": 118, "model": [78, 79, 82, 197, 200, 201, 202, 203, 204, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 239, 247], "model_contain": 127, "model_run": 19, "modelproto": 209, "modul": [7, 12, 14, 17, 23, 26, 27, 55, 84, 89, 103, 114, 126, 131, 133, 161, 166, 168, 170, 178, 189, 205, 209, 213, 230], "more": 234, "mulitpl": 220, "multipl": 223, "nan_euclidean_dist": 209, "node": 232, "object": 230, "older": 234, "one": [200, 220], "onnx": [200, 202, 204, 206, 207, 208, 209, 221, 226], "onnx_ani": 134, "onnx_attent": 135, "onnx_cast": 136, "onnx_clip": 137, "onnx_const": 138, "onnx_conv": 139, "onnx_custom_backend": 89, "onnx_debug_backend": 89, "onnx_dropout": 140, "onnx_equ": 141, "onnx_expand": 142, "onnx_export": 106, "onnx_funct": 143, "onnx_layer_norm": 144, "onnx_matmul": 145, "onnx_mul": 146, "onnx_reduc": 147, "onnx_reshap": 148, "onnx_rotari": 149, "onnx_sequ": 150, "onnx_shap": 151, "onnx_slic": 152, "onnx_split": 153, "onnx_sub": 154, "onnx_tool": 20, "onnx_transpos": 155, "onnx_unsqueez": 156, "onnxruntim": 201, "onnxscript": 199, "op": [14, 15, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 213, 218, 219], "op_add_add_mul_mul": 28, "op_average_pool_grad": 29, "op_broadcast_gradient_arg": 15, "op_cast_lik": 30, "op_complex": 31, "op_concat": 32, "op_constant_of_shap": 33, "op_fused_matmul": 34, "op_gather_grad": 35, "op_memcpy_host": 36, "op_mul_sigmoid": 37, "op_negxplus1": 38, "op_qlinear_average_pool": 39, "op_qlinear_conv": 40, "op_quick_gelu": 41, "op_replace_zero": 42, "op_rotari": 43, "op_scatter_el": 44, "op_scatternd_of_shap": 45, "op_simplified_layer_norm": 46, "op_skip_layer_norm": 47, "op_slic": 48, "op_transpose_cast": 49, "op_tri_matrix": 50, "oper": [218, 219], "opset": [199, 232], "optim": [198, 200, 202, 204, 221, 230, 232, 244], "optimization_opt": 128, "optimizationopt": 126, "option": 230, "order_optim": 132, "ort": 206, "ort_evalu": 51, "ort_help": 8, "ort_sess": 21, "other": [26, 55, 89, 103, 126, 131, 189], "output": [209, 238], "oxs_dispatch": 107, "oxs_opset": 108, "pad": 220, "pairwis": 215, "partit": 90, "patch": [215, 217], "pattern": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 198, 200, 202, 204, 232], "patternoptim": [131, 232], "patterns_api": 157, "patterns_exp": [158, 159, 160, 161, 162, 163, 164], "patterns_fix": [165, 166], "patterns_investig": [167, 168, 169], "patterns_ml": [170, 171], "patterns_ort": [172, 173, 174, 175, 176, 177, 178, 179, 180], "phi": [212, 213, 214, 239, 240], "phi3_help": 119, "phi_help": 120, "piec": 213, "piece_by_piec": 109, "piece_by_piece_seri": 110, "playground": 198, "plot": [22, 23, 24], "plot_llama_diff_export": 238, "pratic": 230, "prepar": 201, "preserv": 205, "print": 245, "profil": [80, 81, 201, 206], "python": [81, 209, 243, 244, 245, 246], "pytorch": 208, "quantized_tensor": 52, "read": 238, "recip": [211, 233], "refer": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "regist": 218, "registr": [218, 219], "regress": 208, "rename_express": 190, "repeated_optim": 181, "replac": 213, "report": 223, "report_export": 214, "reverse_graph_build": 129, "rewrit": [200, 202], "run": [79, 206, 223, 246], "runtimeerror": 248, "scan": 215, "scikit": [208, 209], "script": [206, 227], "select": 232, "set": 223, "sgd": 208, "shape": [203, 204, 208, 213, 230, 232], "shape_build": 191, "shape_builder_impl": 192, "shape_type_comput": 193, "shapebuild": 250, "short": 223, "show": 206, "simpl": [203, 208, 221, 232], "simple_rotari": 162, "simplifi": 230, "simplified_layer_norm": 180, "simplify_express": 194, "singl": 223, "size": 227, "skl": [53, 54, 55], "some": [205, 206], "speed": [206, 230], "start": [196, 211, 247], "statist": 232, "step": 209, "sub": 209, "submodul": [12, 17, 26, 131, 221], "suggest": [215, 217], "support": 239, "tensor": 230, "test": [197, 217, 220], "time": [206, 210, 222, 236, 241], "to_onnx": [55, 103, 217, 218, 219, 220, 221, 251], "tool": [232, 242], "torch": [196, 204, 205, 206, 209, 226, 248], "torch_bench": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 224, 225], "torch_dynamo": [85, 86, 87, 88, 89, 90], "torch_export_patch": 230, "torch_interpret": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "torch_model": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "torch_test_help": 122, "trace": [111, 209], "train": [204, 205], "training_help": 121, "tree_ensembl": 171, "tutori": 249, "tweak": 207, "type": [230, 232], "type_infer": 195, "unary_oper": 163, "unavail": 248, "uneasi": 238, "unexpect": 248, "unflatten": 207, "unfus": 182, "unlighten": 243, "us": [209, 230, 232], "valid": [209, 220], "verbos": 232, "version": 234, "virtualtensor": 126, "wai": 206, "what": 204, "where_replac": 164, "work": 234, "wrap": 205, "xbuilder": [123, 124, 125, 126, 127, 128, 129], "xoptim": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "xshape": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195]}})