Search.setIndex({"alltitles": {"._bench_test": [[1, null]], "._command_lines_parser": [[2, null]], ".args": [[3, null]], ".bench_run": [[4, null]], ".checks": [[5, null]], ".convert": [[7, null]], ".convert.convert_helper": [[6, null]], ".convert.ort_helper": [[8, null]], ".ext_test_case": [[9, null]], ".gradient": [[11, null]], ".gradient.grad_helper": [[10, null]], ".gradient.loss_helper": [[12, null]], ".gradient.ops": [[13, null]], ".gradient.ops.op_broadcast_gradient_args": [[14, null]], ".helpers": [[15, null]], ".memory_peak": [[17, null]], ".mini_onnx_builder": [[18, null]], ".model_run": [[19, null]], ".onnx_tools": [[20, null]], ".ort_session": [[21, null]], ".plotting": [[23, null]], ".plotting.data": [[22, null]], ".plotting.memory": [[24, null]], ".reference": [[26, null]], ".reference.evaluator": [[25, null]], ".reference.ops": [[27, null]], ".reference.ops.op_add_add_mul_mul": [[28, null]], ".reference.ops.op_average_pool_grad": [[29, null]], ".reference.ops.op_cast_like": [[30, null]], ".reference.ops.op_complex": [[31, null]], ".reference.ops.op_concat": [[32, null]], ".reference.ops.op_constant_of_shape": [[33, null]], ".reference.ops.op_fused_matmul": [[34, null]], ".reference.ops.op_gather_grad": [[35, null]], ".reference.ops.op_memcpy_host": [[36, null]], ".reference.ops.op_mul_sigmoid": [[37, null]], ".reference.ops.op_negxplus1": [[38, null]], ".reference.ops.op_qlinear_average_pool": [[39, null]], ".reference.ops.op_qlinear_conv": [[40, null]], ".reference.ops.op_quick_gelu": [[41, null]], ".reference.ops.op_replace_zero": [[42, null]], ".reference.ops.op_rotary": [[43, null]], ".reference.ops.op_scatter_elements": [[44, null]], ".reference.ops.op_scatternd_of_shape": [[45, null]], ".reference.ops.op_simplified_layer_normalization": [[46, null]], ".reference.ops.op_skip_layer_normalization": [[47, null]], ".reference.ops.op_slice": [[48, null]], ".reference.ops.op_transpose_cast": [[49, null]], ".reference.ops.op_tri_matrix": [[50, null]], ".reference.ort_evaluator": [[51, null]], ".reference.quantized_tensor": [[52, null]], ".skl": [[55, null]], ".skl.convert": [[53, null]], ".skl.helpers": [[54, null]], ".torch_bench": [[88, null]], ".torch_bench.bash_bench_agg": [[73, null]], ".torch_bench.bash_bench_explicit": [[74, null]], ".torch_bench.bash_bench_huggingface": [[75, null]], ".torch_bench.bash_bench_huggingface_big": [[76, null]], ".torch_bench.bash_bench_issues": [[77, null]], ".torch_bench.bash_bench_timm": [[78, null]], ".torch_bench.bash_bench_torchbench": [[79, null]], ".torch_bench.bash_bench_torchbench_ado": [[80, null]], ".torch_bench.bash_bench_untrained": [[81, null]], ".torch_bench.check_model": [[82, null]], ".torch_bench.dort_bench": [[83, null]], ".torch_bench.dort_bench_profile": [[84, null]], ".torch_bench.dort_profile": [[85, null]], ".torch_bench.export_model": [[86, null]], ".torch_bench.export_model_helper": [[87, null]], ".torch_dynamo": [[93, null]], ".torch_dynamo._dynamo_exporter": [[89, null]], ".torch_dynamo.backend_helper": [[90, null]], ".torch_dynamo.debug_backend": [[91, null]], ".torch_dynamo.fast_backend": [[92, null]], ".torch_interpreter": [[109, null]], ".torch_interpreter._aten_functions": [[95, null]], ".torch_interpreter._aten_functions_attention": [[96, null]], ".torch_interpreter._aten_methods": [[97, null]], ".torch_interpreter._doc_": [[98, null]], ".torch_interpreter._exceptions": [[99, null]], ".torch_interpreter._non_aten_functions": [[100, null]], ".torch_interpreter._prims_functions": [[101, null]], ".torch_interpreter._torch_helper": [[102, null]], ".torch_interpreter.aten_functions": [[103, null]], ".torch_interpreter.aten_methods": [[104, null]], ".torch_interpreter.dispatcher": [[105, null]], ".torch_interpreter.eval": [[106, null]], ".torch_interpreter.eval.model_cases": [[107, null]], ".torch_interpreter.export_options": [[108, null]], ".torch_interpreter.interpreter": [[110, null]], ".torch_interpreter.investigate_helper": [[111, null]], ".torch_interpreter.onnx_export": [[112, null]], ".torch_interpreter.oxs_dispatcher": [[113, null]], ".torch_interpreter.oxs_opset": [[114, null]], ".torch_interpreter.piece_by_piece": [[115, null]], ".torch_interpreter.piece_by_piece_serialize": [[116, null]], ".torch_interpreter.tracing": [[117, null]], ".torch_models": [[120, null]], ".torch_models.diffusion_model_helper": [[118, null]], ".torch_models.dump_helper": [[119, null]], ".torch_models.llama_helper": [[121, null]], ".torch_models.llm_model_helper": [[122, null]], ".torch_models.llm_model_setup": [[123, null]], ".torch_models.mistral_helper": [[124, null]], ".torch_models.phi3_helper": [[125, null]], ".torch_models.phi_helper": [[126, null]], ".torch_models.training_helper": [[127, null]], ".torch_test_helper": [[128, null]], ".xbuilder": [[135, null]], ".xbuilder._graph_builder_runtime": [[129, null]], ".xbuilder._onnx_helper": [[130, null]], ".xbuilder._shape_helper": [[131, null]], ".xbuilder.expression_dimension": [[132, null]], ".xbuilder.graph_builder": [[133, null]], ".xbuilder.graph_builder_opset": [[134, null]], ".xbuilder.model_container": [[136, null]], ".xbuilder.optimization_options": [[137, null]], ".xbuilder.reverse_graph_builder": [[138, null]], ".xbuilder.shape_type_compute": [[139, null]], ".xbuilder.type_inference": [[140, null]], ".xoptim": [[142, null]], ".xoptim.graph_builder_optim": [[141, null]], ".xoptim.order_optim": [[143, null]], ".xoptim.patterns": [[144, null]], ".xoptim.patterns.onnx_any": [[145, null]], ".xoptim.patterns.onnx_cast": [[146, null]], ".xoptim.patterns.onnx_clip": [[147, null]], ".xoptim.patterns.onnx_constants": [[148, null]], ".xoptim.patterns.onnx_conv": [[149, null]], ".xoptim.patterns.onnx_dropout": [[150, null]], ".xoptim.patterns.onnx_equal": [[151, null]], ".xoptim.patterns.onnx_expand": [[152, null]], ".xoptim.patterns.onnx_functions": [[153, null]], ".xoptim.patterns.onnx_layer_normalization": [[154, null]], ".xoptim.patterns.onnx_matmul": [[155, null]], ".xoptim.patterns.onnx_mul": [[156, null]], ".xoptim.patterns.onnx_reduce": [[157, null]], ".xoptim.patterns.onnx_reshape": [[158, null]], ".xoptim.patterns.onnx_rotary": [[159, null]], ".xoptim.patterns.onnx_sequence": [[160, null]], ".xoptim.patterns.onnx_slice": [[161, null]], ".xoptim.patterns.onnx_split": [[162, null]], ".xoptim.patterns.onnx_sub": [[163, null]], ".xoptim.patterns.onnx_transpose": [[164, null]], ".xoptim.patterns.onnx_unsqueeze": [[165, null]], ".xoptim.patterns_api": [[166, null]], ".xoptim.patterns_exp": [[170, null]], ".xoptim.patterns_exp.binary_operators": [[167, null]], ".xoptim.patterns_exp.constant_of_shape_scatter_nd": [[168, null]], ".xoptim.patterns_exp.constants": [[169, null]], ".xoptim.patterns_exp.simple_rotary": [[171, null]], ".xoptim.patterns_exp.unary_operators": [[172, null]], ".xoptim.patterns_exp.where_replace": [[173, null]], ".xoptim.patterns_fix": [[175, null]], ".xoptim.patterns_fix.add_reduction_scatter_nd": [[174, null]], ".xoptim.patterns_investigation": [[177, null]], ".xoptim.patterns_investigation.element_wise": [[176, null]], ".xoptim.patterns_investigation.llm_patterns": [[178, null]], ".xoptim.patterns_ml": [[179, null]], ".xoptim.patterns_ml.tree_ensemble": [[180, null]], ".xoptim.patterns_ort": [[188, null]], ".xoptim.patterns_ort.activation": [[181, null]], ".xoptim.patterns_ort.activation_grad": [[182, null]], ".xoptim.patterns_ort.attention_patterns": [[183, null]], ".xoptim.patterns_ort.batch_normalization": [[184, null]], ".xoptim.patterns_ort.fused_conv": [[185, null]], ".xoptim.patterns_ort.fused_matmul": [[186, null]], ".xoptim.patterns_ort.gather_grad": [[187, null]], ".xoptim.patterns_ort.llm_optim": [[189, null]], ".xoptim.patterns_ort.simplified_layer_normalization": [[190, null]], ".xoptim.unfused": [[191, null]], "0.1.0": [[0, "id1"]], "101: A custom backend for torch": [[204, null]], "101: Linear Regression and export to ONNX": [[209, null]], "101: Onnx Model Optimization based on Pattern Rewriting": [[200, null]], "101: Onnx Model Rewriting": [[202, null]], "101: Profile an existing model with onnxruntime": [[201, null]], "101: Some dummy examples with torch.export.export": [[206, null]], "102: Convolution and Matrix Multiplication": [[193, null]], "102: Examples with onnxscript": [[199, null]], "102: Fuse kernels in a small Llama Model": [[194, null]], "102: Measure LLAMA speed": [[195, null]], "102: Tweak onnx export": [[208, null]], "201: Evaluate DORT": [[205, null]], "201: Evaluate DORT Training": [[203, null]], "201: Evaluate different ways to export a torch model to ONNX": [[207, null]], "201: Use torch to export a scikit-learn model into ONNX": [[210, null]], "301: Compares LLAMA exporters": [[197, null]], "301: Compares LLAMA exporters for onnxrt backend": [[196, null]], "A converting function": [[247, "a-converting-function"]], "A custom backend": [[204, "a-custom-backend"]], "A dynamic dimension is replaced by a constant by function pad": [[218, "a-dynamic-dimension-is-replaced-by-a-constant-by-function-pad"]], "A dynamic dimension lost by torch.export.export": [[218, null]], "A model": [[200, "a-model"], [202, "a-model"], [204, "a-model"]], "A model with a custom ops": [[225, "a-model-with-a-custom-ops"], [226, "a-model-with-a-custom-ops"], [233, "a-model-with-a-custom-ops"], [234, "a-model-with-a-custom-ops"]], "A model with a test": [[224, "a-model-with-a-test"], [227, "a-model-with-a-test"], [232, "a-model-with-a-test"], [235, "a-model-with-a-test"]], "A model with an unknown output shape": [[229, "a-model-with-an-unknown-output-shape"], [237, "a-model-with-an-unknown-output-shape"]], "A simple LLM": [[228, "a-simple-llm"]], "API": [[16, null], [247, "api"]], "Adding a pattern": [[249, "adding-a-pattern"]], "Aggregated Report": [[240, "aggregated-report"]], "AtenAsStrided": [[267, "atenasstrided"], [268, "atenasstrided"], [269, "atenasstrided"], [270, "atenasstrided"]], "AtenInterpolate": [[267, "ateninterpolate"], [268, "ateninterpolate"], [269, "ateninterpolate"], [270, "ateninterpolate"]], "AtenNonZero": [[267, "atennonzero"], [268, "atennonzero"], [269, "atennonzero"], [270, "atennonzero"]], "AtenNonZeroTuple": [[267, "atennonzerotuple"], [268, "atennonzerotuple"], [269, "atennonzerotuple"], [270, "atennonzerotuple"]], "AtenRollPos": [[267, "atenrollpos"], [268, "atenrollpos"], [269, "atenrollpos"], [270, "atenrollpos"]], "AtenRollRelu": [[267, "atenrollrelu"], [268, "atenrollrelu"], [269, "atenrollrelu"], [270, "atenrollrelu"]], "Available Patterns and API": [[249, "available-patterns-and-api"]], "Backends": [[203, "backends"], [205, "backends"]], "Benchmark Aggregator": [[73, "benchmark-aggregator"]], "Benchmark Backends (torch.compile)": [[243, null]], "Benchmark Exporters to ONNX": [[243, null]], "Benchmark a llama model": [[264, "benchmark-a-llama-model"]], "Benchmark exported models with ORT": [[203, "benchmark-exported-models-with-ort"], [205, "benchmark-exported-models-with-ort"], [207, "benchmark-exported-models-with-ort"]], "Benchmark exporters": [[74, "benchmark-exporters"], [75, "benchmark-exporters"], [76, "benchmark-exporters"], [77, "benchmark-exporters"], [78, "benchmark-exporters"], [79, "benchmark-exporters"], [80, "benchmark-exporters"], [81, "benchmark-exporters"]], "Benchmarks from the command line": [[243, null]], "BuildInIsInstance": [[267, "buildinisinstance"], [268, "buildinisinstance"], [269, "buildinisinstance"], [270, "buildinisinstance"]], "BuildInLen": [[267, "buildinlen"], [268, "buildinlen"], [269, "buildinlen"], [270, "buildinlen"]], "Change Logs": [[0, null]], "Check Model": [[82, "check-model"]], "Check the exporter on a dummy from HuggingFace": [[222, null]], "Command Lines": [[245, null]], "Common Errors": [[212, "common-errors"]], "Compare torch exporters": [[192, "compare-torch-exporters"]], "Comparison and execution": [[196, "comparison-and-execution"], [197, "comparison-and-execution"]], "Comparison optimized and not optimized?": [[228, "comparison-optimized-and-not-optimized"]], "Compilation Profiling": [[203, "compilation-profiling"]], "Compile and Memory": [[203, "compile-and-memory"], [205, "compile-and-memory"]], "ComplexPolar": [[267, "complexpolar"], [268, "complexpolar"], [269, "complexpolar"], [270, "complexpolar"]], "Computation times": [[211, null], [239, null], [258, null]], "Constants": [[249, "constants"]], "Contents": [[251, null]], "ControlFlowCond": [[267, "controlflowcond"], [268, "controlflowcond"], [269, "controlflowcond"], [270, "controlflowcond"]], "ControlFlowCond2Inputs": [[267, "controlflowcond2inputs"], [268, "controlflowcond2inputs"], [269, "controlflowcond2inputs"], [270, "controlflowcond2inputs"]], "ControlFlowCond2Outputs": [[267, "controlflowcond2outputs"], [268, "controlflowcond2outputs"], [269, "controlflowcond2outputs"], [270, "controlflowcond2outputs"]], "ControlFlowCondConstant": [[267, "controlflowcondconstant"], [268, "controlflowcondconstant"], [269, "controlflowcondconstant"], [270, "controlflowcondconstant"]], "ControlFlowCondNestedModule": [[267, "controlflowcondnestedmodule"], [268, "controlflowcondnestedmodule"], [269, "controlflowcondnestedmodule"], [270, "controlflowcondnestedmodule"]], "ControlFlowCondNonZero": [[267, "controlflowcondnonzero"], [268, "controlflowcondnonzero"], [269, "controlflowcondnonzero"], [270, "controlflowcondnonzero"]], "ControlFlowNestCond": [[267, "controlflownestcond"], [268, "controlflownestcond"], [269, "controlflownestcond"], [270, "controlflownestcond"]], "ControlFlowScan": [[267, "controlflowscan"], [268, "controlflowscan"], [269, "controlflowscan"], [270, "controlflowscan"]], "ControlFlowScan2Carried": [[267, "controlflowscan2carried"], [268, "controlflowscan2carried"], [269, "controlflowscan2carried"], [270, "controlflowscan2carried"]], "ControlFlowScanCDist": [[267, "controlflowscancdist"], [268, "controlflowscancdist"], [269, "controlflowscancdist"], [270, "controlflowscancdist"]], "ControlFlowScanCDist2": [[267, "controlflowscancdist2"], [268, "controlflowscancdist2"], [269, "controlflowscancdist2"], [270, "controlflowscancdist2"]], "ControlFlowScanCDistXY": [[267, "controlflowscancdistxy"], [268, "controlflowscancdistxy"], [269, "controlflowscancdistxy"], [270, "controlflowscancdistxy"]], "Conv": [[193, "conv"]], "ConvTranspose": [[193, "convtranspose"]], "Conventions": [[247, "conventions"]], "Conversion to ONNX": [[209, "conversion-to-onnx"], [236, "conversion-to-onnx"]], "CreateFromShape": [[267, "createfromshape"], [268, "createfromshape"], [269, "createfromshape"], [270, "createfromshape"]], "CreateFromShapeThroughFunction": [[267, "createfromshapethroughfunction"], [268, "createfromshapethroughfunction"], [269, "createfromshapethroughfunction"], [270, "createfromshapethroughfunction"]], "CropLastDimensionWithTensorContent": [[267, "croplastdimensionwithtensorcontent"], [268, "croplastdimensionwithtensorcontent"], [269, "croplastdimensionwithtensorcontent"], [270, "croplastdimensionwithtensorcontent"]], "CropLastDimensionWithTensorShape": [[267, "croplastdimensionwithtensorshape"], [268, "croplastdimensionwithtensorshape"], [269, "croplastdimensionwithtensorshape"], [270, "croplastdimensionwithtensorshape"]], "Custom Exporter": [[247, null], [253, "custom-exporter"]], "Custom Opset and Local Functions": [[199, "custom-opset-and-local-functions"]], "Custom classes are working fine": [[217, "custom-classes-are-working-fine"]], "Debugging": [[247, "debugging"], [247, "id1"]], "Deeper into pytorch and onnx": [[271, "deeper-into-pytorch-and-onnx"]], "Design": [[248, null]], "Different Implementations": [[247, "different-implementations"]], "Dispatcher": [[109, "dispatcher"]], "Do no use Module as inputs!": [[217, null]], "Draft Export": [[214, "draft-export"]], "Dynamic Shapes": [[219, "dynamic-shapes"], [247, "dynamic-shapes"]], "DynamicCache(torch.nn.Module)": [[217, "dynamiccache-torch-nn-module"]], "Dynamo Backends": [[246, null]], "Dynamo Exporter": [[253, "dynamo-exporter"]], "DynamoInterpreter": [[247, "dynamointerpreter"]], "Easy Case": [[206, "easy-case"]], "EasyPatternOptimization": [[142, "easypatternoptimization"]], "Evaluate the export": [[219, "evaluate-the-export"]], "Evaluation": [[209, "evaluation"], [236, "evaluation"]], "Example": [[247, "example"], [249, "example"]], "Examples Gallery": [[192, null]], "Examples or Tools": [[249, "examples-or-tools"]], "Export": [[216, "export"], [227, "export"], [230, "export"], [235, "export"], [238, "export"]], "Export Options": [[247, "export-options"]], "Export Phi-3.5-mini-instruct piece by piece": [[219, null]], "Export Phi-3.5-mini-instruct with draft_export": [[214, null]], "Export Phi-3.5-mini-instruct with report_exportability": [[220, null]], "Export Times": [[253, null]], "Export a model": [[86, "export-a-model"]], "Export a model using a custom type as input": [[223, null]], "Export a model with a loop (scan)": [[221, null]], "Export for training": [[206, "export-for-training"]], "Export module as local functions": [[247, "export-module-as-local-functions"]], "Export to ONNX": [[210, "export-to-onnx"]], "ExportOptions": [[109, "exportoptions"]], "Exportability": [[220, "exportability"]], "Exported Model": [[230, "exported-model"], [238, "exported-model"]], "Exported Programs with Dynamic Shapes": [[270, null]], "Exported Programs with Static Shapes": [[269, null]], "Exported into ONNX with Dynamic Shapes": [[268, null]], "Exported into ONNX with Static Shapes": [[267, null]], "ExportedProgram": [[222, "exportedprogram"]], "Exporter Profiling": [[207, "exporter-profiling"]], "Exporter Recipes Gallery": [[212, null]], "Exporter memory": [[207, "exporter-memory"]], "Exporter speed": [[207, "exporter-speed"]], "Exporting": [[196, "exporting"], [197, "exporting"]], "ExtendedReferenceEvaluator": [[26, "extendedreferenceevaluator"]], "Fake Tensors": [[247, "fake-tensors"]], "Fallback": [[247, "fallback"]], "Filtering": [[202, "filtering"]], "Final results": [[194, "final-results"]], "Final step": [[210, "final-step"]], "First Example": [[247, "first-example"]], "First conversion to ONNX": [[228, "first-conversion-to-onnx"]], "First step: tracing intermediate outputs": [[210, "first-step-tracing-intermediate-outputs"]], "First try: it fails": [[223, "first-try-it-fails"]], "Focus on one optimizer": [[200, "focus-on-one-optimizer"]], "Frequent Exceptions or Errors with the Exporter": [[271, "frequent-exceptions-or-errors-with-the-exporter"]], "FunctionOptions": [[135, "functionoptions"]], "Functions": [[247, "functions"]], "Galleries of Examples and Recipes": [[250, null]], "Getting started": [[192, "getting-started"], [212, "getting-started"]], "Graph": [[249, "graph"]], "GraphBuilder": [[135, "graphbuilder"], [247, "graphbuilder"]], "GraphBuilderPatternOptimization": [[142, "graphbuilderpatternoptimization"]], "Guess the cache dimension": [[222, "guess-the-cache-dimension"]], "How to fix it?": [[218, "how-to-fix-it"]], "Infer dynamic shapes": [[216, "infer-dynamic-shapes"]], "Infer dynamic shapes before exporting": [[216, null]], "InferShapesOptions": [[135, "infershapesoptions"]], "Inlining": [[228, "inlining"]], "InplaceAdd": [[267, "inplaceadd"], [268, "inplaceadd"], [269, "inplaceadd"], [270, "inplaceadd"]], "InplaceAdd2": [[267, "inplaceadd2"], [268, "inplaceadd2"], [269, "inplaceadd2"], [270, "inplaceadd2"]], "InplaceAdd_Mul": [[267, "inplaceadd-mul"], [268, "inplaceadd-mul"], [269, "inplaceadd-mul"], [270, "inplaceadd-mul"]], "InplaceCloneAdd": [[267, "inplacecloneadd"], [268, "inplacecloneadd"], [269, "inplacecloneadd"], [270, "inplacecloneadd"]], "InplaceSetItemEllipsis_1": [[267, "inplacesetitemellipsis-1"], [268, "inplacesetitemellipsis-1"], [269, "inplacesetitemellipsis-1"], [270, "inplacesetitemellipsis-1"]], "InplaceSetItemEllipsis_2": [[267, "inplacesetitemellipsis-2"], [268, "inplacesetitemellipsis-2"], [269, "inplacesetitemellipsis-2"], [270, "inplacesetitemellipsis-2"]], "InplaceSetItemMask": [[267, "inplacesetitemmask"], [268, "inplacesetitemmask"], [269, "inplacesetitemmask"], [270, "inplacesetitemmask"]], "InplaceSetItemSquare": [[267, "inplacesetitemsquare"], [268, "inplacesetitemsquare"], [269, "inplacesetitemsquare"], [270, "inplacesetitemsquare"]], "InplaceSetItemSquareAdd": [[267, "inplacesetitemsquareadd"], [268, "inplacesetitemsquareadd"], [269, "inplacesetitemsquareadd"], [270, "inplacesetitemsquareadd"]], "InplaceSetItemSquareAdd2": [[267, "inplacesetitemsquareadd2"], [268, "inplacesetitemsquareadd2"], [269, "inplacesetitemsquareadd2"], [270, "inplacesetitemsquareadd2"]], "Interesting scripts or command lines": [[244, null]], "Internal containers": [[247, "internal-containers"]], "Issues with torch.export.export": [[265, "issues-with-torch-export-export"]], "License": [[252, null]], "Linear Regression and export to ONNX": [[236, null]], "Linrar Regression with pytorch": [[209, "linrar-regression-with-pytorch"], [236, "linrar-regression-with-pytorch"]], "List": [[206, "list"]], "List of models": [[240, "list-of-models"]], "Llama, Phi, Mistral": [[256, null]], "Long Outputs uneasy to read": [[255, null]], "Loops": [[206, "loops"]], "MatchResult": [[142, "matchresult"]], "Max Size": [[244, "max-size"]], "Measure of eager mode": [[194, "measure-of-eager-mode"]], "Measure with the custom backend": [[194, "measure-with-the-custom-backend"]], "Measures the exporter success on many test cases": [[213, null]], "Measuring the exporters on a short list of sets of models": [[240, null]], "Memory First Running Time (ORT)": [[203, "memory-first-running-time-ort"], [205, "memory-first-running-time-ort"], [207, "memory-first-running-time-ort"]], "Memory Loading Time (ORT)": [[207, "memory-loading-time-ort"]], "Memory Running Time (ORT)": [[203, "memory-running-time-ort"], [205, "memory-running-time-ort"], [207, "memory-running-time-ort"]], "Miscellaneous": [[254, null]], "Model": [[214, "model"], [219, "model"], [220, "model"], [230, "model"], [238, "model"]], "Model and data": [[196, "model-and-data"], [197, "model-and-data"]], "Model with unpredictable names for dynamic shapes": [[229, "model-with-unpredictable-names-for-dynamic-shapes"], [237, "model-with-unpredictable-names-for-dynamic-shapes"]], "ModelProto to python Code": [[210, "modelproto-to-python-code"]], "Module": [[210, "module"]], "Module and sub modules": [[210, "module-and-sub-modules"]], "More": [[251, null]], "Multiple Runs": [[240, "multiple-runs"]], "Nodes": [[249, "nodes"]], "ONNX with submodules": [[228, "onnx-with-submodules"]], "Older versions": [[251, "older-versions"]], "One objective: SPEED": [[247, "one-objective-speed"]], "Opsets": [[249, "opsets"]], "Optimization": [[200, "optimization"], [202, "optimization"], [236, "optimization"]], "Optimization Algorithm": [[249, "optimization-algorithm"]], "Optimization and Verification": [[196, "optimization-and-verification"]], "OptimizationOptions": [[135, "optimizationoptions"]], "Optimizations": [[228, "optimizations"], [247, "optimizations"]], "Optimizations for CUDA": [[228, "optimizations-for-cuda"]], "Other functions": [[26, "module-experimental_experiment.reference"], [55, "module-experimental_experiment.skl"], [93, "module-experimental_experiment.torch_dynamo"], [109, "module-experimental_experiment.torch_interpreter"], [135, "module-experimental_experiment.xbuilder"], [142, "module-experimental_experiment.xoptim"]], "Pairwise Distance": [[221, "pairwise-distance"], [231, "pairwise-distance"]], "Pattern Matching": [[198, "pattern-matching"]], "Pattern Optimizations": [[204, "pattern-optimizations"]], "Pattern Optimizer": [[249, null]], "PatternOptimization": [[142, "patternoptimization"]], "PatternOptimization.apply": [[249, "patternoptimization-apply"]], "PatternOptimization.match": [[249, "patternoptimization-match"]], "Patterns": [[249, "patterns"]], "Phi": [[257, null]], "Play with onnx models and onnxruntime": [[271, "play-with-onnx-models-and-onnxruntime"]], "Playground for big optimization pattern": [[198, null]], "Pratice": [[247, "pratice"]], "Preparation": [[201, "preparation"]], "Preserve Modules": [[206, "preserve-modules"]], "Profile python execution for DORT": [[85, "profile-python-execution-for-dort"]], "Profiles an execution": [[84, "profiles-an-execution"]], "Profiling": [[201, "profiling"]], "Registration": [[225, "registration"], [226, "registration"], [233, "registration"], [234, "registration"]], "Rename the dynamic shapes": [[229, "rename-the-dynamic-shapes"], [237, "rename-the-dynamic-shapes"]], "Replace the failing module by a custom op": [[219, "replace-the-failing-module-by-a-custom-op"]], "Run llama model with DORT": [[83, "run-llama-model-with-dort"]], "RuntimeError: CUDA error: CUDA-capable device(s) is/are busy or unavailable": [[265, "runtimeerror-cuda-error-cuda-capable-device-s-is-are-busy-or-unavailable"]], "Select the pattern to use": [[249, "select-the-pattern-to-use"]], "Shape inference": [[249, "shape-inference"]], "Shapes And Types": [[247, "shapes-and-types"]], "Shapes, Types": [[249, "shapes-types"]], "Show the interesting models for CPU": [[207, "show-the-interesting-models-for-cpu"]], "Show the interesting models for CUDA": [[207, "show-the-interesting-models-for-cuda"]], "SignatureFloat1": [[267, "signaturefloat1"], [268, "signaturefloat1"], [269, "signaturefloat1"], [270, "signaturefloat1"]], "SignatureInt1": [[267, "signatureint1"], [268, "signatureint1"], [269, "signatureint1"], [270, "signatureint1"]], "SignatureInt2": [[267, "signatureint2"], [268, "signatureint2"], [269, "signatureint2"], [270, "signatureint2"]], "SignatureListFixedLength": [[267, "signaturelistfixedlength"], [268, "signaturelistfixedlength"], [269, "signaturelistfixedlength"], [270, "signaturelistfixedlength"]], "SignatureListFixedWithNone": [[267, "signaturelistfixedwithnone"], [268, "signaturelistfixedwithnone"], [269, "signaturelistfixedwithnone"], [270, "signaturelistfixedwithnone"]], "SignatureListVariableLength": [[267, "signaturelistvariablelength"], [268, "signaturelistvariablelength"], [269, "signaturelistvariablelength"], [270, "signaturelistvariablelength"]], "SignatureShapeAsIndex": [[267, "signatureshapeasindex"], [268, "signatureshapeasindex"], [269, "signatureshapeasindex"], [270, "signatureshapeasindex"]], "Simple API": [[249, "simple-api"]], "Simplified API": [[247, "simplified-api"]], "Single Run": [[240, "single-run"]], "Some helpers": [[196, "some-helpers"], [197, "some-helpers"], [203, "some-helpers"], [205, "some-helpers"], [207, "some-helpers"]], "Start from a docker": [[264, null]], "Statistics": [[249, "statistics"]], "Suggested Patch": [[221, "suggested-patch"], [224, "suggested-patch"], [231, "suggested-patch"], [232, "suggested-patch"]], "Summary": [[267, "summary"], [268, "summary"], [269, "summary"], [270, "summary"]], "Supported Model Signatures": [[266, null]], "Supported Models By the Custom Backend": [[256, null]], "Tested Scenarios": [[266, "tested-scenarios"]], "The dummy model": [[194, "the-dummy-model"]], "The exporters": [[207, "the-exporters"]], "The exporting functions": [[196, "the-exporting-functions"], [197, "the-exporting-functions"]], "The model": [[203, "the-model"], [205, "the-model"], [207, "the-model"]], "The model creation": [[222, "the-model-creation"]], "The pattern": [[202, "the-pattern"]], "Tools from the command line": [[259, null]], "Training": [[204, "training"]], "Tutorial": [[271, null]], "TypeBFloat16": [[267, "typebfloat16"], [268, "typebfloat16"], [269, "typebfloat16"], [270, "typebfloat16"]], "Unexpected Errors": [[265, null]], "Unflattened": [[208, "unflattened"]], "Use DYNAMIC or AUTO when dynamic shapes has constraints": [[215, null]], "Use of local function": [[247, "use-of-local-function"]], "Validation": [[210, "validation"], [210, "id1"], [227, "validation"], [235, "validation"]], "Validation again": [[210, "validation-again"]], "Verbosity": [[249, "verbosity"]], "Verification": [[197, "verification"]], "Verification with the reference evaluator": [[197, "verification-with-the-reference-evaluator"]], "VirtualTensor": [[135, "virtualtensor"]], "Weird Errors and Dockers": [[271, "weird-errors-and-dockers"]], "What about dynamic shapes?": [[204, "what-about-dynamic-shapes"]], "What about the ONNX model?": [[204, "what-about-the-onnx-model"]], "What is ConvTranspose?": [[193, "what-is-convtranspose"]], "With an integer as input": [[206, "with-an-integer-as-input"], [206, "id1"]], "With dynamic shapes": [[209, "with-dynamic-shapes"], [236, "with-dynamic-shapes"]], "With pytorch": [[193, "with-pytorch"]], "Wrapped": [[206, "wrapped"]], "cus_p2": [[207, "cus-p2"], [207, "id2"]], "custom-dec": [[267, "custom-dec"], [267, "id3"], [267, "id9"], [267, "id15"], [267, "id21"], [267, "id27"], [267, "id33"], [267, "id39"], [267, "id45"], [267, "id51"], [267, "id57"], [267, "id63"], [267, "id69"], [267, "id75"], [267, "id81"], [267, "id87"], [267, "id93"], [267, "id99"], [267, "id105"], [267, "id111"], [267, "id117"], [267, "id123"], [267, "id129"], [267, "id135"], [267, "id141"], [267, "id147"], [267, "id153"], [267, "id159"], [267, "id165"], [267, "id171"], [267, "id177"], [267, "id183"], [267, "id189"], [267, "id195"], [267, "id201"], [267, "id207"], [267, "id213"], [267, "id219"], [267, "id225"], [267, "id231"], [267, "id237"], [267, "id243"], [267, "id249"], [268, "custom-dec"], [268, "id3"], [268, "id9"], [268, "id15"], [268, "id21"], [268, "id27"], [268, "id33"], [268, "id39"], [268, "id45"], [268, "id51"], [268, "id57"], [268, "id63"], [268, "id69"], [268, "id75"], [268, "id81"], [268, "id87"], [268, "id93"], [268, "id99"], [268, "id105"], [268, "id111"], [268, "id117"], [268, "id123"], [268, "id129"], [268, "id135"], [268, "id141"], [268, "id147"], [268, "id153"], [268, "id159"], [268, "id165"], [268, "id171"], [268, "id177"], [268, "id183"], [268, "id189"], [268, "id195"], [268, "id201"], [268, "id207"], [268, "id213"], [268, "id219"], [268, "id225"], [268, "id231"], [268, "id237"], [268, "id243"], [268, "id249"]], "custom-fallback": [[267, "custom-fallback"], [267, "id2"], [267, "id8"], [267, "id14"], [267, "id20"], [267, "id26"], [267, "id32"], [267, "id38"], [267, "id44"], [267, "id50"], [267, "id56"], [267, "id62"], [267, "id68"], [267, "id74"], [267, "id80"], [267, "id86"], [267, "id92"], [267, "id98"], [267, "id104"], [267, "id110"], [267, "id116"], [267, "id122"], [267, "id128"], [267, "id134"], [267, "id140"], [267, "id146"], [267, "id152"], [267, "id158"], [267, "id164"], [267, "id170"], [267, "id176"], [267, "id182"], [267, "id188"], [267, "id194"], [267, "id200"], [267, "id206"], [267, "id212"], [267, "id218"], [267, "id224"], [267, "id230"], [267, "id236"], [267, "id242"], [267, "id248"], [268, "custom-fallback"], [268, "id2"], [268, "id8"], [268, "id14"], [268, "id20"], [268, "id26"], [268, "id32"], [268, "id38"], [268, "id44"], [268, "id50"], [268, "id56"], [268, "id62"], [268, "id68"], [268, "id74"], [268, "id80"], [268, "id86"], [268, "id92"], [268, "id98"], [268, "id104"], [268, "id110"], [268, "id116"], [268, "id122"], [268, "id128"], [268, "id134"], [268, "id140"], [268, "id146"], [268, "id152"], [268, "id158"], [268, "id164"], [268, "id170"], [268, "id176"], [268, "id182"], [268, "id188"], [268, "id194"], [268, "id200"], [268, "id206"], [268, "id212"], [268, "id218"], [268, "id224"], [268, "id230"], [268, "id236"], [268, "id242"], [268, "id248"]], "custom-tracing": [[267, "custom-tracing"], [267, "id4"], [267, "id10"], [267, "id16"], [267, "id22"], [267, "id28"], [267, "id34"], [267, "id40"], [267, "id46"], [267, "id52"], [267, "id58"], [267, "id64"], [267, "id70"], [267, "id76"], [267, "id82"], [267, "id88"], [267, "id94"], [267, "id100"], [267, "id106"], [267, "id112"], [267, "id118"], [267, "id124"], [267, "id130"], [267, "id136"], [267, "id142"], [267, "id148"], [267, "id154"], [267, "id160"], [267, "id166"], [267, "id172"], [267, "id178"], [267, "id184"], [267, "id190"], [267, "id196"], [267, "id202"], [267, "id208"], [267, "id214"], [267, "id220"], [267, "id226"], [267, "id232"], [267, "id238"], [267, "id244"], [267, "id250"], [268, "custom-tracing"], [268, "id4"], [268, "id10"], [268, "id16"], [268, "id22"], [268, "id28"], [268, "id34"], [268, "id40"], [268, "id46"], [268, "id52"], [268, "id58"], [268, "id64"], [268, "id70"], [268, "id76"], [268, "id82"], [268, "id88"], [268, "id94"], [268, "id100"], [268, "id106"], [268, "id112"], [268, "id118"], [268, "id124"], [268, "id130"], [268, "id136"], [268, "id142"], [268, "id148"], [268, "id154"], [268, "id160"], [268, "id166"], [268, "id172"], [268, "id178"], [268, "id184"], [268, "id190"], [268, "id196"], [268, "id202"], [268, "id208"], [268, "id214"], [268, "id220"], [268, "id226"], [268, "id232"], [268, "id238"], [268, "id244"], [268, "id250"]], "data": [[209, "data"], [236, "data"]], "dort first iteration speed": [[203, "dort-first-iteration-speed"], [205, "dort-first-iteration-speed"]], "dx + dy not allowed?": [[215, "dx-dy-not-allowed"]], "dynamo": [[207, "dynamo"], [207, "id4"]], "dynamo-ir": [[267, "dynamo-ir"], [267, "id5"], [267, "id11"], [267, "id17"], [267, "id23"], [267, "id29"], [267, "id35"], [267, "id41"], [267, "id47"], [267, "id53"], [267, "id59"], [267, "id65"], [267, "id71"], [267, "id77"], [267, "id83"], [267, "id89"], [267, "id95"], [267, "id101"], [267, "id107"], [267, "id113"], [267, "id119"], [267, "id125"], [267, "id131"], [267, "id137"], [267, "id143"], [267, "id149"], [267, "id155"], [267, "id161"], [267, "id167"], [267, "id173"], [267, "id179"], [267, "id185"], [267, "id191"], [267, "id197"], [267, "id203"], [267, "id209"], [267, "id215"], [267, "id221"], [267, "id227"], [267, "id233"], [267, "id239"], [267, "id245"], [267, "id251"], [268, "dynamo-ir"], [268, "id5"], [268, "id11"], [268, "id17"], [268, "id23"], [268, "id29"], [268, "id35"], [268, "id41"], [268, "id47"], [268, "id53"], [268, "id59"], [268, "id65"], [268, "id71"], [268, "id77"], [268, "id83"], [268, "id89"], [268, "id95"], [268, "id101"], [268, "id107"], [268, "id113"], [268, "id119"], [268, "id125"], [268, "id131"], [268, "id137"], [268, "id143"], [268, "id149"], [268, "id155"], [268, "id161"], [268, "id167"], [268, "id173"], [268, "id179"], [268, "id185"], [268, "id191"], [268, "id197"], [268, "id203"], [268, "id209"], [268, "id215"], [268, "id221"], [268, "id227"], [268, "id233"], [268, "id239"], [268, "id245"], [268, "id251"]], "dynger_backend": [[93, "dynger-backend"]], "dynopt": [[207, "dynopt"], [207, "id3"]], "examples": [[255, "examples"]], "experimental-experiment: fuzzy work": [[251, null]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner": [[56, null]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg": [[57, null]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg_helper": [[58, null]], "experimental_experiment.torch_bench._bash_bench_cmd": [[59, null]], "experimental_experiment.torch_bench._bash_bench_model_runner": [[60, null]], "experimental_experiment.torch_bench._bash_bench_models_helper": [[61, null]], "experimental_experiment.torch_bench._bash_bench_set_dummies": [[62, null]], "experimental_experiment.torch_bench._bash_bench_set_explicit": [[63, null]], "experimental_experiment.torch_bench._bash_bench_set_huggingface": [[64, null]], "experimental_experiment.torch_bench._bash_bench_set_huggingface_big": [[65, null]], "experimental_experiment.torch_bench._bash_bench_set_issues": [[66, null]], "experimental_experiment.torch_bench._bash_bench_set_timm": [[67, null]], "experimental_experiment.torch_bench._bash_bench_set_torchbench": [[68, null]], "experimental_experiment.torch_bench._bash_bench_set_torchbench_ado": [[69, null]], "experimental_experiment.torch_bench._bash_bench_untrained": [[70, null]], "experimental_experiment.torch_bench._dort_cmd_common": [[71, null]], "experimental_experiment.torch_bench._dort_cmd_common_models": [[72, null]], "experimental_experiment.torch_bench.dort_bench": [[241, null]], "experimental_experiment.torch_bench.dort_profile": [[242, null]], "experimental_experiment.torch_dynamo.partition": [[94, null]], "export, unflatten and compile": [[208, "export-unflatten-and-compile"]], "fake": [[253, "fake"]], "forward": [[267, "forward"], [267, "id1"], [267, "id7"], [267, "id13"], [267, "id19"], [267, "id25"], [267, "id31"], [267, "id37"], [267, "id43"], [267, "id49"], [267, "id55"], [267, "id61"], [267, "id67"], [267, "id73"], [267, "id79"], [267, "id85"], [267, "id91"], [267, "id97"], [267, "id103"], [267, "id109"], [267, "id115"], [267, "id121"], [267, "id127"], [267, "id133"], [267, "id139"], [267, "id145"], [267, "id151"], [267, "id157"], [267, "id163"], [267, "id169"], [267, "id175"], [267, "id181"], [267, "id187"], [267, "id193"], [267, "id199"], [267, "id205"], [267, "id211"], [267, "id217"], [267, "id223"], [267, "id229"], [267, "id235"], [267, "id241"], [267, "id247"], [268, "forward"], [268, "id1"], [268, "id7"], [268, "id13"], [268, "id19"], [268, "id25"], [268, "id31"], [268, "id37"], [268, "id43"], [268, "id49"], [268, "id55"], [268, "id61"], [268, "id67"], [268, "id73"], [268, "id79"], [268, "id85"], [268, "id91"], [268, "id97"], [268, "id103"], [268, "id109"], [268, "id115"], [268, "id121"], [268, "id127"], [268, "id133"], [268, "id139"], [268, "id145"], [268, "id151"], [268, "id157"], [268, "id163"], [268, "id169"], [268, "id175"], [268, "id181"], [268, "id187"], [268, "id193"], [268, "id199"], [268, "id205"], [268, "id211"], [268, "id217"], [268, "id223"], [268, "id229"], [268, "id235"], [268, "id241"], [268, "id247"], [269, "forward"], [269, "id1"], [269, "id9"], [269, "id17"], [269, "id25"], [269, "id33"], [269, "id41"], [269, "id61"], [269, "id69"], [269, "id77"], [269, "id85"], [269, "id93"], [269, "id101"], [269, "id109"], [269, "id117"], [269, "id125"], [269, "id133"], [269, "id141"], [269, "id149"], [269, "id157"], [269, "id165"], [269, "id173"], [269, "id181"], [269, "id189"], [269, "id197"], [269, "id205"], [269, "id213"], [269, "id221"], [269, "id229"], [269, "id237"], [269, "id245"], [269, "id253"], [269, "id261"], [269, "id269"], [269, "id277"], [269, "id285"], [269, "id293"], [269, "id301"], [269, "id309"], [269, "id317"], [269, "id325"], [269, "id333"], [269, "id341"], [270, "forward"], [270, "id1"], [270, "id9"], [270, "id17"], [270, "id25"], [270, "id33"], [270, "id41"], [270, "id61"], [270, "id69"], [270, "id77"], [270, "id85"], [270, "id93"], [270, "id101"], [270, "id109"], [270, "id117"], [270, "id125"], [270, "id133"], [270, "id141"], [270, "id149"], [270, "id157"], [270, "id165"], [270, "id173"], [270, "id181"], [270, "id189"], [270, "id197"], [270, "id205"], [270, "id213"], [270, "id221"], [270, "id229"], [270, "id237"], [270, "id245"], [270, "id253"], [270, "id261"], [270, "id269"], [270, "id277"], [270, "id285"], [270, "id293"], [270, "id301"], [270, "id309"], [270, "id317"], [270, "id325"], [270, "id333"], [270, "id341"]], "fx_mode": [[253, "fx-mode"]], "im2col and col2im": [[193, "im2col-and-col2im"]], "jit": [[269, "jit"], [269, "id6"], [269, "id14"], [269, "id22"], [269, "id30"], [269, "id38"], [269, "id46"], [269, "id66"], [269, "id74"], [269, "id82"], [269, "id90"], [269, "id98"], [269, "id106"], [269, "id114"], [269, "id122"], [269, "id130"], [269, "id138"], [269, "id146"], [269, "id154"], [269, "id162"], [269, "id170"], [269, "id178"], [269, "id186"], [269, "id194"], [269, "id202"], [269, "id210"], [269, "id218"], [269, "id226"], [269, "id234"], [269, "id242"], [269, "id250"], [269, "id258"], [269, "id266"], [269, "id274"], [269, "id282"], [269, "id290"], [269, "id298"], [269, "id306"], [269, "id314"], [269, "id322"], [269, "id330"], [269, "id338"], [269, "id346"], [270, "jit"], [270, "id6"], [270, "id14"], [270, "id22"], [270, "id30"], [270, "id38"], [270, "id46"], [270, "id66"], [270, "id74"], [270, "id82"], [270, "id90"], [270, "id98"], [270, "id106"], [270, "id114"], [270, "id122"], [270, "id130"], [270, "id138"], [270, "id146"], [270, "id154"], [270, "id162"], [270, "id170"], [270, "id178"], [270, "id186"], [270, "id194"], [270, "id202"], [270, "id210"], [270, "id218"], [270, "id226"], [270, "id234"], [270, "id242"], [270, "id250"], [270, "id258"], [270, "id266"], [270, "id274"], [270, "id282"], [270, "id290"], [270, "id298"], [270, "id306"], [270, "id314"], [270, "id322"], [270, "id330"], [270, "id338"], [270, "id346"]], "jit-decall": [[269, "jit-decall"], [269, "id7"], [269, "id15"], [269, "id23"], [269, "id31"], [269, "id39"], [269, "id47"], [269, "id67"], [269, "id75"], [269, "id83"], [269, "id91"], [269, "id99"], [269, "id107"], [269, "id115"], [269, "id123"], [269, "id131"], [269, "id139"], [269, "id147"], [269, "id155"], [269, "id163"], [269, "id171"], [269, "id179"], [269, "id187"], [269, "id195"], [269, "id203"], [269, "id211"], [269, "id219"], [269, "id227"], [269, "id235"], [269, "id243"], [269, "id251"], [269, "id259"], [269, "id267"], [269, "id275"], [269, "id283"], [269, "id291"], [269, "id299"], [269, "id307"], [269, "id315"], [269, "id323"], [269, "id331"], [269, "id339"], [269, "id347"], [270, "jit-decall"], [270, "id7"], [270, "id15"], [270, "id23"], [270, "id31"], [270, "id39"], [270, "id47"], [270, "id67"], [270, "id75"], [270, "id83"], [270, "id91"], [270, "id99"], [270, "id107"], [270, "id115"], [270, "id123"], [270, "id131"], [270, "id139"], [270, "id147"], [270, "id155"], [270, "id163"], [270, "id171"], [270, "id179"], [270, "id187"], [270, "id195"], [270, "id203"], [270, "id211"], [270, "id219"], [270, "id227"], [270, "id235"], [270, "id243"], [270, "id251"], [270, "id259"], [270, "id267"], [270, "id275"], [270, "id283"], [270, "id291"], [270, "id299"], [270, "id307"], [270, "id315"], [270, "id323"], [270, "id331"], [270, "id339"], [270, "id347"]], "lighten": [[260, "lighten"], [262, "lighten"]], "match_input_parameters": [[109, "match-input-parameters"]], "modules": [[7, null], [11, null], [13, null], [16, null], [23, null], [26, null], [27, null], [55, null], [88, null], [93, null], [106, null], [109, null], [120, null], [135, null], [142, null], [144, null], [170, null], [175, null], [177, null], [179, null], [188, null]], "nostrict": [[269, "nostrict"], [269, "id4"], [269, "id12"], [269, "id20"], [269, "id28"], [269, "id36"], [269, "id44"], [269, "id64"], [269, "id72"], [269, "id80"], [269, "id88"], [269, "id96"], [269, "id104"], [269, "id112"], [269, "id120"], [269, "id128"], [269, "id136"], [269, "id144"], [269, "id152"], [269, "id160"], [269, "id168"], [269, "id176"], [269, "id184"], [269, "id192"], [269, "id200"], [269, "id208"], [269, "id216"], [269, "id224"], [269, "id232"], [269, "id240"], [269, "id248"], [269, "id256"], [269, "id264"], [269, "id272"], [269, "id280"], [269, "id288"], [269, "id296"], [269, "id304"], [269, "id312"], [269, "id320"], [269, "id328"], [269, "id336"], [269, "id344"], [270, "nostrict"], [270, "id4"], [270, "id12"], [270, "id20"], [270, "id28"], [270, "id36"], [270, "id44"], [270, "id64"], [270, "id72"], [270, "id80"], [270, "id88"], [270, "id96"], [270, "id104"], [270, "id112"], [270, "id120"], [270, "id128"], [270, "id136"], [270, "id144"], [270, "id152"], [270, "id160"], [270, "id168"], [270, "id176"], [270, "id184"], [270, "id192"], [270, "id200"], [270, "id208"], [270, "id216"], [270, "id224"], [270, "id232"], [270, "id240"], [270, "id248"], [270, "id256"], [270, "id264"], [270, "id272"], [270, "id280"], [270, "id288"], [270, "id296"], [270, "id304"], [270, "id312"], [270, "id320"], [270, "id328"], [270, "id336"], [270, "id344"]], "nostrict-decall": [[269, "nostrict-decall"], [269, "id5"], [269, "id13"], [269, "id21"], [269, "id29"], [269, "id37"], [269, "id45"], [269, "id65"], [269, "id73"], [269, "id81"], [269, "id89"], [269, "id97"], [269, "id105"], [269, "id113"], [269, "id121"], [269, "id129"], [269, "id137"], [269, "id145"], [269, "id153"], [269, "id161"], [269, "id169"], [269, "id177"], [269, "id185"], [269, "id193"], [269, "id201"], [269, "id209"], [269, "id217"], [269, "id225"], [269, "id233"], [269, "id241"], [269, "id249"], [269, "id257"], [269, "id265"], [269, "id273"], [269, "id281"], [269, "id289"], [269, "id297"], [269, "id305"], [269, "id313"], [269, "id321"], [269, "id329"], [269, "id337"], [269, "id345"], [270, "nostrict-decall"], [270, "id5"], [270, "id13"], [270, "id21"], [270, "id29"], [270, "id37"], [270, "id45"], [270, "id65"], [270, "id73"], [270, "id81"], [270, "id89"], [270, "id97"], [270, "id105"], [270, "id113"], [270, "id121"], [270, "id129"], [270, "id137"], [270, "id145"], [270, "id153"], [270, "id161"], [270, "id169"], [270, "id177"], [270, "id185"], [270, "id193"], [270, "id201"], [270, "id209"], [270, "id217"], [270, "id225"], [270, "id233"], [270, "id241"], [270, "id249"], [270, "id257"], [270, "id265"], [270, "id273"], [270, "id281"], [270, "id289"], [270, "id297"], [270, "id305"], [270, "id313"], [270, "id321"], [270, "id329"], [270, "id337"], [270, "id345"]], "numpy": [[193, "numpy"]], "onnx_custom_backend": [[93, "onnx-custom-backend"]], "onnx_debug_backend": [[93, "onnx-debug-backend"]], "onnxruntime-training": [[193, "onnxruntime-training"]], "plot_llama_diff_export": [[255, "plot-llama-diff-export"]], "python -m experimental_experiment lighten and unlighten": [[260, null]], "python -m experimental_experiment optimize": [[261, null]], "python -m experimental_experiment print": [[262, null]], "python -m experimental_experiment run": [[263, null]], "raw convolution": [[193, "raw-convolution"]], "scikit-learn: SGD algorithm": [[209, "scikit-learn-sgd-algorithm"], [236, "scikit-learn-sgd-algorithm"]], "scikit-learn: the simple regression": [[209, "scikit-learn-the-simple-regression"], [236, "scikit-learn-the-simple-regression"]], "script": [[207, "script"], [207, "id1"], [267, "script"], [267, "id6"], [267, "id12"], [267, "id18"], [267, "id24"], [267, "id30"], [267, "id36"], [267, "id42"], [267, "id48"], [267, "id54"], [267, "id60"], [267, "id66"], [267, "id72"], [267, "id78"], [267, "id84"], [267, "id90"], [267, "id96"], [267, "id102"], [267, "id108"], [267, "id114"], [267, "id120"], [267, "id126"], [267, "id132"], [267, "id138"], [267, "id144"], [267, "id150"], [267, "id156"], [267, "id162"], [267, "id168"], [267, "id174"], [267, "id180"], [267, "id186"], [267, "id192"], [267, "id198"], [267, "id204"], [267, "id210"], [267, "id216"], [267, "id222"], [267, "id228"], [267, "id234"], [267, "id240"], [267, "id246"], [267, "id252"], [268, "script"], [268, "id6"], [268, "id12"], [268, "id18"], [268, "id24"], [268, "id30"], [268, "id36"], [268, "id42"], [268, "id48"], [268, "id54"], [268, "id60"], [268, "id66"], [268, "id72"], [268, "id78"], [268, "id84"], [268, "id90"], [268, "id96"], [268, "id102"], [268, "id108"], [268, "id114"], [268, "id120"], [268, "id126"], [268, "id132"], [268, "id138"], [268, "id144"], [268, "id150"], [268, "id156"], [268, "id162"], [268, "id168"], [268, "id174"], [268, "id180"], [268, "id186"], [268, "id192"], [268, "id198"], [268, "id204"], [268, "id210"], [268, "id216"], [268, "id222"], [268, "id228"], [268, "id234"], [268, "id240"], [268, "id246"], [268, "id252"]], "strict": [[269, "strict"], [269, "id2"], [269, "id10"], [269, "id18"], [269, "id26"], [269, "id34"], [269, "id42"], [269, "id62"], [269, "id70"], [269, "id78"], [269, "id86"], [269, "id94"], [269, "id102"], [269, "id110"], [269, "id118"], [269, "id126"], [269, "id134"], [269, "id142"], [269, "id150"], [269, "id158"], [269, "id166"], [269, "id174"], [269, "id182"], [269, "id190"], [269, "id198"], [269, "id206"], [269, "id214"], [269, "id222"], [269, "id230"], [269, "id238"], [269, "id246"], [269, "id254"], [269, "id262"], [269, "id270"], [269, "id278"], [269, "id286"], [269, "id294"], [269, "id302"], [269, "id310"], [269, "id318"], [269, "id326"], [269, "id334"], [269, "id342"], [270, "strict"], [270, "id2"], [270, "id10"], [270, "id18"], [270, "id26"], [270, "id34"], [270, "id42"], [270, "id62"], [270, "id70"], [270, "id78"], [270, "id86"], [270, "id94"], [270, "id102"], [270, "id110"], [270, "id118"], [270, "id126"], [270, "id134"], [270, "id142"], [270, "id150"], [270, "id158"], [270, "id166"], [270, "id174"], [270, "id182"], [270, "id190"], [270, "id198"], [270, "id206"], [270, "id214"], [270, "id222"], [270, "id230"], [270, "id238"], [270, "id246"], [270, "id254"], [270, "id262"], [270, "id270"], [270, "id278"], [270, "id286"], [270, "id294"], [270, "id302"], [270, "id310"], [270, "id318"], [270, "id326"], [270, "id334"], [270, "id342"]], "strict-decall": [[269, "strict-decall"], [269, "id3"], [269, "id11"], [269, "id19"], [269, "id27"], [269, "id35"], [269, "id43"], [269, "id63"], [269, "id71"], [269, "id79"], [269, "id87"], [269, "id95"], [269, "id103"], [269, "id111"], [269, "id119"], [269, "id127"], [269, "id135"], [269, "id143"], [269, "id151"], [269, "id159"], [269, "id167"], [269, "id175"], [269, "id183"], [269, "id191"], [269, "id199"], [269, "id207"], [269, "id215"], [269, "id223"], [269, "id231"], [269, "id239"], [269, "id247"], [269, "id255"], [269, "id263"], [269, "id271"], [269, "id279"], [269, "id287"], [269, "id295"], [269, "id303"], [269, "id311"], [269, "id319"], [269, "id327"], [269, "id335"], [269, "id343"], [270, "strict-decall"], [270, "id3"], [270, "id11"], [270, "id19"], [270, "id27"], [270, "id35"], [270, "id43"], [270, "id63"], [270, "id71"], [270, "id79"], [270, "id87"], [270, "id95"], [270, "id103"], [270, "id111"], [270, "id119"], [270, "id127"], [270, "id135"], [270, "id143"], [270, "id151"], [270, "id159"], [270, "id167"], [270, "id175"], [270, "id183"], [270, "id191"], [270, "id199"], [270, "id207"], [270, "id215"], [270, "id223"], [270, "id231"], [270, "id239"], [270, "id247"], [270, "id255"], [270, "id263"], [270, "id271"], [270, "id279"], [270, "id287"], [270, "id295"], [270, "id303"], [270, "id311"], [270, "id319"], [270, "id327"], [270, "id335"], [270, "id343"]], "submodules": [[11, null], [16, null], [26, null], [142, null]], "symbolic": [[253, "symbolic"]], "to_onnx": [[55, "to-onnx"], [109, "to-onnx"]], "to_onnx and Phi-2": [[230, null]], "to_onnx and a custom operator inplace": [[226, null]], "to_onnx and a custom operator registered with a function": [[225, null]], "to_onnx and a model with a loop (scan)": [[231, null]], "to_onnx and a model with a test": [[224, null]], "to_onnx and padding one dimension to a mulitple of a constant": [[227, null]], "to_onnx and submodules from LLMs": [[228, null]], "to_onnx: Rename Dynamic Shapes": [[229, null]], "to_onnx: another export to investigate": [[271, "to-onnx-another-export-to-investigate"]], "torch implementation of KNNImputer": [[210, "torch-implementation-of-knnimputer"]], "torch implementation of nan_euclidean_distances": [[210, "torch-implementation-of-nan-euclidean-distances"]], "torch.export.export: export to a Graph": [[271, "torch-export-export-export-to-a-graph"]], "torch.onnx.export and Phi-2": [[238, null]], "torch.onnx.export and a custom operator inplace": [[234, null]], "torch.onnx.export and a custom operator registered with a function": [[233, null]], "torch.onnx.export and a model with a test": [[232, null]], "torch.onnx.export and padding one dimension to a mulitple of a constant": [[235, null]], "torch.onnx.export: Rename Dynamic Shapes": [[237, null]], "torch.onnx.export: export to ONNX": [[271, "torch-onnx-export-export-to-onnx"]], "torch_export_patches": [[247, "torch-export-patches"]], "tracing": [[269, "tracing"], [269, "id8"], [269, "id16"], [269, "id24"], [269, "id32"], [269, "id40"], [269, "id48"], [269, "id68"], [269, "id76"], [269, "id84"], [269, "id92"], [269, "id100"], [269, "id108"], [269, "id116"], [269, "id124"], [269, "id132"], [269, "id140"], [269, "id148"], [269, "id156"], [269, "id164"], [269, "id172"], [269, "id180"], [269, "id188"], [269, "id196"], [269, "id204"], [269, "id212"], [269, "id220"], [269, "id228"], [269, "id236"], [269, "id244"], [269, "id252"], [269, "id260"], [269, "id268"], [269, "id276"], [269, "id284"], [269, "id292"], [269, "id300"], [269, "id308"], [269, "id316"], [269, "id324"], [269, "id332"], [269, "id340"], [269, "id348"], [270, "tracing"], [270, "id8"], [270, "id16"], [270, "id24"], [270, "id32"], [270, "id40"], [270, "id48"], [270, "id68"], [270, "id76"], [270, "id84"], [270, "id92"], [270, "id100"], [270, "id108"], [270, "id116"], [270, "id124"], [270, "id132"], [270, "id140"], [270, "id148"], [270, "id156"], [270, "id164"], [270, "id172"], [270, "id180"], [270, "id188"], [270, "id196"], [270, "id204"], [270, "id212"], [270, "id220"], [270, "id228"], [270, "id236"], [270, "id244"], [270, "id252"], [270, "id260"], [270, "id268"], [270, "id276"], [270, "id284"], [270, "id292"], [270, "id300"], [270, "id308"], [270, "id316"], [270, "id324"], [270, "id332"], [270, "id340"], [270, "id348"]], "unlighten": [[260, "unlighten"]], "using Gemm?": [[193, "using-gemm"]]}, "docnames": ["CHANGELOGS", "api/_bench_test", "api/_command_lines_parser", "api/args", "api/bench_run", "api/checks", "api/convert/convert_helper", "api/convert/index", "api/convert/ort_helper", "api/ext_test_case", "api/gradient/grad_helper", "api/gradient/index", "api/gradient/loss_helper", "api/gradient/ops/index", "api/gradient/ops/op_broadcast_gradient_args", "api/helpers", "api/index", "api/memory_peak", "api/mini_onnx_builder", "api/model_run", "api/onnx_tools", "api/ort_session", "api/plotting/data", "api/plotting/index", "api/plotting/memory", "api/reference/evaluator", "api/reference/index", "api/reference/ops/index", "api/reference/ops/op_add_add_mul_mul", "api/reference/ops/op_average_pool_grad", "api/reference/ops/op_cast_like", "api/reference/ops/op_complex", "api/reference/ops/op_concat", "api/reference/ops/op_constant_of_shape", "api/reference/ops/op_fused_matmul", "api/reference/ops/op_gather_grad", "api/reference/ops/op_memcpy_host", "api/reference/ops/op_mul_sigmoid", "api/reference/ops/op_negxplus1", "api/reference/ops/op_qlinear_average_pool", "api/reference/ops/op_qlinear_conv", "api/reference/ops/op_quick_gelu", "api/reference/ops/op_replace_zero", "api/reference/ops/op_rotary", "api/reference/ops/op_scatter_elements", "api/reference/ops/op_scatternd_of_shape", "api/reference/ops/op_simplified_layer_normalization", "api/reference/ops/op_skip_layer_normalization", "api/reference/ops/op_slice", "api/reference/ops/op_transpose_cast", "api/reference/ops/op_tri_matrix", "api/reference/ort_evaluator", "api/reference/quantized_tensor", "api/skl/convert", "api/skl/helpers", "api/skl/index", "api/torch_bench/_bash_bench_benchmark_runner", "api/torch_bench/_bash_bench_benchmark_runner_agg", "api/torch_bench/_bash_bench_benchmark_runner_agg_helper", "api/torch_bench/_bash_bench_cmd", "api/torch_bench/_bash_bench_model_runner", "api/torch_bench/_bash_bench_models_helper", "api/torch_bench/_bash_bench_set_dummies", "api/torch_bench/_bash_bench_set_explicit", "api/torch_bench/_bash_bench_set_huggingface", "api/torch_bench/_bash_bench_set_huggingface_big", "api/torch_bench/_bash_bench_set_issues", "api/torch_bench/_bash_bench_set_timm", "api/torch_bench/_bash_bench_set_torchbench", "api/torch_bench/_bash_bench_set_torchbench_ado", "api/torch_bench/_bash_bench_untrained", "api/torch_bench/_dort_cmd_common", "api/torch_bench/_dort_cmd_common_models", "api/torch_bench/bash_bench_agg", "api/torch_bench/bash_bench_explicit", "api/torch_bench/bash_bench_huggingface", "api/torch_bench/bash_bench_huggingface_big", "api/torch_bench/bash_bench_issues", "api/torch_bench/bash_bench_timm", "api/torch_bench/bash_bench_torchbench", "api/torch_bench/bash_bench_torchbench_ado", "api/torch_bench/bash_bench_untrained", "api/torch_bench/check_model", "api/torch_bench/dort_bench", "api/torch_bench/dort_bench_profile", "api/torch_bench/dort_profile", "api/torch_bench/export_model", "api/torch_bench/export_model_helper", "api/torch_bench/index", "api/torch_dynamo/_dynamo_exporter", "api/torch_dynamo/backend_helper", "api/torch_dynamo/debug_backend", "api/torch_dynamo/fast_backend", "api/torch_dynamo/index", "api/torch_dynamo/partition", "api/torch_interpreter/_aten_functions", "api/torch_interpreter/_aten_functions_attention", "api/torch_interpreter/_aten_methods", "api/torch_interpreter/_doc_", "api/torch_interpreter/_exceptions", "api/torch_interpreter/_non_aten_functions", "api/torch_interpreter/_prims_functions", "api/torch_interpreter/_torch_helper", "api/torch_interpreter/aten_functions", "api/torch_interpreter/aten_methods", "api/torch_interpreter/dispatcher", "api/torch_interpreter/eval/index", "api/torch_interpreter/eval/model_cases", "api/torch_interpreter/export_options", "api/torch_interpreter/index", "api/torch_interpreter/interpreter", "api/torch_interpreter/investigate_helper", "api/torch_interpreter/onnx_export", "api/torch_interpreter/oxs_dispatcher", "api/torch_interpreter/oxs_opset", "api/torch_interpreter/piece_by_piece", "api/torch_interpreter/piece_by_piece_serialize", "api/torch_interpreter/tracing", "api/torch_models/diffusion_model_helper", "api/torch_models/dump_helper", "api/torch_models/index", "api/torch_models/llama_helper", "api/torch_models/llm_model_helper", "api/torch_models/llm_model_setup", "api/torch_models/mistral_helper", "api/torch_models/phi3_helper", "api/torch_models/phi_helper", "api/torch_models/training_helper", "api/torch_test_helper", "api/xbuilder/_graph_builder_runtime", "api/xbuilder/_onnx_helper", "api/xbuilder/_shape_helper", "api/xbuilder/expression_dimension", "api/xbuilder/graph_builder", "api/xbuilder/graph_builder_opset", "api/xbuilder/index", "api/xbuilder/model_container", "api/xbuilder/optimization_options", "api/xbuilder/reverse_graph_builder", "api/xbuilder/shape_type_compute", "api/xbuilder/type_inference", "api/xoptim/graph_builder_optim", "api/xoptim/index", "api/xoptim/order_optim", "api/xoptim/patterns/index", "api/xoptim/patterns/onnx_any", "api/xoptim/patterns/onnx_cast", "api/xoptim/patterns/onnx_clip", "api/xoptim/patterns/onnx_constants", "api/xoptim/patterns/onnx_conv", "api/xoptim/patterns/onnx_dropout", "api/xoptim/patterns/onnx_equal", "api/xoptim/patterns/onnx_expand", "api/xoptim/patterns/onnx_functions", "api/xoptim/patterns/onnx_layer_normalization", "api/xoptim/patterns/onnx_matmul", "api/xoptim/patterns/onnx_mul", "api/xoptim/patterns/onnx_reduce", "api/xoptim/patterns/onnx_reshape", "api/xoptim/patterns/onnx_rotary", "api/xoptim/patterns/onnx_sequence", "api/xoptim/patterns/onnx_slice", "api/xoptim/patterns/onnx_split", "api/xoptim/patterns/onnx_sub", "api/xoptim/patterns/onnx_transpose", "api/xoptim/patterns/onnx_unsqueeze", "api/xoptim/patterns_api", "api/xoptim/patterns_exp/binary_operators", "api/xoptim/patterns_exp/constant_of_shape_scatter_nd", "api/xoptim/patterns_exp/constants", "api/xoptim/patterns_exp/index", "api/xoptim/patterns_exp/simple_rotary", "api/xoptim/patterns_exp/unary_operators", "api/xoptim/patterns_exp/where_replace", "api/xoptim/patterns_fix/add_reduction_scatter_nd", "api/xoptim/patterns_fix/index", "api/xoptim/patterns_investigation/element_wise", "api/xoptim/patterns_investigation/index", "api/xoptim/patterns_investigation/llm_patterns", "api/xoptim/patterns_ml/index", "api/xoptim/patterns_ml/tree_ensemble", "api/xoptim/patterns_ort/activation", "api/xoptim/patterns_ort/activation_grad", "api/xoptim/patterns_ort/attention_patterns", "api/xoptim/patterns_ort/batch_normalization", "api/xoptim/patterns_ort/fused_conv", "api/xoptim/patterns_ort/fused_matmul", "api/xoptim/patterns_ort/gather_grad", "api/xoptim/patterns_ort/index", "api/xoptim/patterns_ort/llm_optim", "api/xoptim/patterns_ort/simplified_layer_normalization", "api/xoptim/unfused", "auto_examples/index", "auto_examples/plot_convolutation_matmul_102", "auto_examples/plot_custom_backend_llama_102", "auto_examples/plot_llama_bench_102", "auto_examples/plot_llama_diff_dort_301", "auto_examples/plot_llama_diff_export_301", "auto_examples/plot_model_to_python", "auto_examples/plot_onnxscript_102", "auto_examples/plot_optimize_101", "auto_examples/plot_profile_existing_onnx_101", "auto_examples/plot_rewrite_101", "auto_examples/plot_torch_aot_201", "auto_examples/plot_torch_custom_backend_101", "auto_examples/plot_torch_dort_201", "auto_examples/plot_torch_export_101", "auto_examples/plot_torch_export_201", "auto_examples/plot_torch_export_compile_102", "auto_examples/plot_torch_linreg_101", "auto_examples/plot_torch_sklearn_201", "auto_examples/sg_execution_times", "auto_recipes/index", "auto_recipes/plot_exporter_coverage", "auto_recipes/plot_exporter_exporter_draft_mode", "auto_recipes/plot_exporter_exporter_dynamic_shapes_auto", "auto_recipes/plot_exporter_exporter_infer_ds", "auto_recipes/plot_exporter_exporter_inputs", "auto_recipes/plot_exporter_exporter_lost_dynamic_dimension", "auto_recipes/plot_exporter_exporter_phi35_piece", "auto_recipes/plot_exporter_exporter_reportibility", "auto_recipes/plot_exporter_exporter_scan_pdist", "auto_recipes/plot_exporter_exporter_untrained_tinyllm", "auto_recipes/plot_exporter_exporter_with_dynamic_cache", "auto_recipes/plot_exporter_recipes_c_cond", "auto_recipes/plot_exporter_recipes_c_custom_ops_fct", "auto_recipes/plot_exporter_recipes_c_custom_ops_inplace", "auto_recipes/plot_exporter_recipes_c_dynpad", "auto_recipes/plot_exporter_recipes_c_modules", "auto_recipes/plot_exporter_recipes_c_named_ds_auto", "auto_recipes/plot_exporter_recipes_c_phi2", "auto_recipes/plot_exporter_recipes_c_scan_pdist", "auto_recipes/plot_exporter_recipes_oe_cond", "auto_recipes/plot_exporter_recipes_oe_custom_ops_fct", "auto_recipes/plot_exporter_recipes_oe_custom_ops_inplace", "auto_recipes/plot_exporter_recipes_oe_dynpad", "auto_recipes/plot_exporter_recipes_oe_lr", "auto_recipes/plot_exporter_recipes_oe_named_ds_auto", "auto_recipes/plot_exporter_recipes_oe_phi2", "auto_recipes/sg_execution_times", "bench/bash_bench", "bench/dort_bench", "bench/dort_profile", "bench/index", "bench/scripts", "command_lines", "design/backends", "design/exporter", "design/index", "design/optimizer", "galleries", "index", "license", "miscellaneous/export_times", "miscellaneous/index", "miscellaneous/long_outputs", "miscellaneous/models/index", "miscellaneous/models/phi", "sg_execution_times", "tools/index", "tools/lighten", "tools/optimize", "tools/print", "tools/run", "tutorial/docker", "tutorial/errors", "tutorial/exported", "tutorial/exported_onnx", "tutorial/exported_onnx_dynamic", "tutorial/exported_program", "tutorial/exported_program_dynamic", "tutorial/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["CHANGELOGS.rst", "api/_bench_test.rst", "api/_command_lines_parser.rst", "api/args.rst", "api/bench_run.rst", "api/checks.rst", "api/convert/convert_helper.rst", "api/convert/index.rst", "api/convert/ort_helper.rst", "api/ext_test_case.rst", "api/gradient/grad_helper.rst", "api/gradient/index.rst", "api/gradient/loss_helper.rst", "api/gradient/ops/index.rst", "api/gradient/ops/op_broadcast_gradient_args.rst", "api/helpers.rst", "api/index.rst", "api/memory_peak.rst", "api/mini_onnx_builder.rst", "api/model_run.rst", "api/onnx_tools.rst", "api/ort_session.rst", "api/plotting/data.rst", "api/plotting/index.rst", "api/plotting/memory.rst", "api/reference/evaluator.rst", "api/reference/index.rst", "api/reference/ops/index.rst", "api/reference/ops/op_add_add_mul_mul.rst", "api/reference/ops/op_average_pool_grad.rst", "api/reference/ops/op_cast_like.rst", "api/reference/ops/op_complex.rst", "api/reference/ops/op_concat.rst", "api/reference/ops/op_constant_of_shape.rst", "api/reference/ops/op_fused_matmul.rst", "api/reference/ops/op_gather_grad.rst", "api/reference/ops/op_memcpy_host.rst", "api/reference/ops/op_mul_sigmoid.rst", "api/reference/ops/op_negxplus1.rst", "api/reference/ops/op_qlinear_average_pool.rst", "api/reference/ops/op_qlinear_conv.rst", "api/reference/ops/op_quick_gelu.rst", "api/reference/ops/op_replace_zero.rst", "api/reference/ops/op_rotary.rst", "api/reference/ops/op_scatter_elements.rst", "api/reference/ops/op_scatternd_of_shape.rst", "api/reference/ops/op_simplified_layer_normalization.rst", "api/reference/ops/op_skip_layer_normalization.rst", "api/reference/ops/op_slice.rst", "api/reference/ops/op_transpose_cast.rst", "api/reference/ops/op_tri_matrix.rst", "api/reference/ort_evaluator.rst", "api/reference/quantized_tensor.rst", "api/skl/convert.rst", "api/skl/helpers.rst", "api/skl/index.rst", "api/torch_bench/_bash_bench_benchmark_runner.rst", "api/torch_bench/_bash_bench_benchmark_runner_agg.rst", "api/torch_bench/_bash_bench_benchmark_runner_agg_helper.rst", "api/torch_bench/_bash_bench_cmd.rst", "api/torch_bench/_bash_bench_model_runner.rst", "api/torch_bench/_bash_bench_models_helper.rst", "api/torch_bench/_bash_bench_set_dummies.rst", "api/torch_bench/_bash_bench_set_explicit.rst", "api/torch_bench/_bash_bench_set_huggingface.rst", "api/torch_bench/_bash_bench_set_huggingface_big.rst", "api/torch_bench/_bash_bench_set_issues.rst", "api/torch_bench/_bash_bench_set_timm.rst", "api/torch_bench/_bash_bench_set_torchbench.rst", "api/torch_bench/_bash_bench_set_torchbench_ado.rst", "api/torch_bench/_bash_bench_untrained.rst", "api/torch_bench/_dort_cmd_common.rst", "api/torch_bench/_dort_cmd_common_models.rst", "api/torch_bench/bash_bench_agg.rst", "api/torch_bench/bash_bench_explicit.rst", "api/torch_bench/bash_bench_huggingface.rst", "api/torch_bench/bash_bench_huggingface_big.rst", "api/torch_bench/bash_bench_issues.rst", "api/torch_bench/bash_bench_timm.rst", "api/torch_bench/bash_bench_torchbench.rst", "api/torch_bench/bash_bench_torchbench_ado.rst", "api/torch_bench/bash_bench_untrained.rst", "api/torch_bench/check_model.rst", "api/torch_bench/dort_bench.rst", "api/torch_bench/dort_bench_profile.rst", "api/torch_bench/dort_profile.rst", "api/torch_bench/export_model.rst", "api/torch_bench/export_model_helper.rst", "api/torch_bench/index.rst", "api/torch_dynamo/_dynamo_exporter.rst", "api/torch_dynamo/backend_helper.rst", "api/torch_dynamo/debug_backend.rst", "api/torch_dynamo/fast_backend.rst", "api/torch_dynamo/index.rst", "api/torch_dynamo/partition.rst", "api/torch_interpreter/_aten_functions.rst", "api/torch_interpreter/_aten_functions_attention.rst", "api/torch_interpreter/_aten_methods.rst", "api/torch_interpreter/_doc_.rst", "api/torch_interpreter/_exceptions.rst", "api/torch_interpreter/_non_aten_functions.rst", "api/torch_interpreter/_prims_functions.rst", "api/torch_interpreter/_torch_helper.rst", "api/torch_interpreter/aten_functions.rst", "api/torch_interpreter/aten_methods.rst", "api/torch_interpreter/dispatcher.rst", "api/torch_interpreter/eval/index.rst", "api/torch_interpreter/eval/model_cases.rst", "api/torch_interpreter/export_options.rst", "api/torch_interpreter/index.rst", "api/torch_interpreter/interpreter.rst", "api/torch_interpreter/investigate_helper.rst", "api/torch_interpreter/onnx_export.rst", "api/torch_interpreter/oxs_dispatcher.rst", "api/torch_interpreter/oxs_opset.rst", "api/torch_interpreter/piece_by_piece.rst", "api/torch_interpreter/piece_by_piece_serialize.rst", "api/torch_interpreter/tracing.rst", "api/torch_models/diffusion_model_helper.rst", "api/torch_models/dump_helper.rst", "api/torch_models/index.rst", "api/torch_models/llama_helper.rst", "api/torch_models/llm_model_helper.rst", "api/torch_models/llm_model_setup.rst", "api/torch_models/mistral_helper.rst", "api/torch_models/phi3_helper.rst", "api/torch_models/phi_helper.rst", "api/torch_models/training_helper.rst", "api/torch_test_helper.rst", "api/xbuilder/_graph_builder_runtime.rst", "api/xbuilder/_onnx_helper.rst", "api/xbuilder/_shape_helper.rst", "api/xbuilder/expression_dimension.rst", "api/xbuilder/graph_builder.rst", "api/xbuilder/graph_builder_opset.rst", "api/xbuilder/index.rst", "api/xbuilder/model_container.rst", "api/xbuilder/optimization_options.rst", "api/xbuilder/reverse_graph_builder.rst", "api/xbuilder/shape_type_compute.rst", "api/xbuilder/type_inference.rst", "api/xoptim/graph_builder_optim.rst", "api/xoptim/index.rst", "api/xoptim/order_optim.rst", "api/xoptim/patterns/index.rst", "api/xoptim/patterns/onnx_any.rst", "api/xoptim/patterns/onnx_cast.rst", "api/xoptim/patterns/onnx_clip.rst", "api/xoptim/patterns/onnx_constants.rst", "api/xoptim/patterns/onnx_conv.rst", "api/xoptim/patterns/onnx_dropout.rst", "api/xoptim/patterns/onnx_equal.rst", "api/xoptim/patterns/onnx_expand.rst", "api/xoptim/patterns/onnx_functions.rst", "api/xoptim/patterns/onnx_layer_normalization.rst", "api/xoptim/patterns/onnx_matmul.rst", "api/xoptim/patterns/onnx_mul.rst", "api/xoptim/patterns/onnx_reduce.rst", "api/xoptim/patterns/onnx_reshape.rst", "api/xoptim/patterns/onnx_rotary.rst", "api/xoptim/patterns/onnx_sequence.rst", "api/xoptim/patterns/onnx_slice.rst", "api/xoptim/patterns/onnx_split.rst", "api/xoptim/patterns/onnx_sub.rst", "api/xoptim/patterns/onnx_transpose.rst", "api/xoptim/patterns/onnx_unsqueeze.rst", "api/xoptim/patterns_api.rst", "api/xoptim/patterns_exp/binary_operators.rst", "api/xoptim/patterns_exp/constant_of_shape_scatter_nd.rst", "api/xoptim/patterns_exp/constants.rst", "api/xoptim/patterns_exp/index.rst", "api/xoptim/patterns_exp/simple_rotary.rst", "api/xoptim/patterns_exp/unary_operators.rst", "api/xoptim/patterns_exp/where_replace.rst", "api/xoptim/patterns_fix/add_reduction_scatter_nd.rst", "api/xoptim/patterns_fix/index.rst", "api/xoptim/patterns_investigation/element_wise.rst", "api/xoptim/patterns_investigation/index.rst", "api/xoptim/patterns_investigation/llm_patterns.rst", "api/xoptim/patterns_ml/index.rst", "api/xoptim/patterns_ml/tree_ensemble.rst", "api/xoptim/patterns_ort/activation.rst", "api/xoptim/patterns_ort/activation_grad.rst", "api/xoptim/patterns_ort/attention_patterns.rst", "api/xoptim/patterns_ort/batch_normalization.rst", "api/xoptim/patterns_ort/fused_conv.rst", "api/xoptim/patterns_ort/fused_matmul.rst", "api/xoptim/patterns_ort/gather_grad.rst", "api/xoptim/patterns_ort/index.rst", "api/xoptim/patterns_ort/llm_optim.rst", "api/xoptim/patterns_ort/simplified_layer_normalization.rst", "api/xoptim/unfused.rst", "auto_examples/index.rst", "auto_examples/plot_convolutation_matmul_102.rst", "auto_examples/plot_custom_backend_llama_102.rst", "auto_examples/plot_llama_bench_102.rst", "auto_examples/plot_llama_diff_dort_301.rst", "auto_examples/plot_llama_diff_export_301.rst", "auto_examples/plot_model_to_python.rst", "auto_examples/plot_onnxscript_102.rst", "auto_examples/plot_optimize_101.rst", "auto_examples/plot_profile_existing_onnx_101.rst", "auto_examples/plot_rewrite_101.rst", "auto_examples/plot_torch_aot_201.rst", "auto_examples/plot_torch_custom_backend_101.rst", "auto_examples/plot_torch_dort_201.rst", "auto_examples/plot_torch_export_101.rst", "auto_examples/plot_torch_export_201.rst", "auto_examples/plot_torch_export_compile_102.rst", "auto_examples/plot_torch_linreg_101.rst", "auto_examples/plot_torch_sklearn_201.rst", "auto_examples/sg_execution_times.rst", "auto_recipes/index.rst", "auto_recipes/plot_exporter_coverage.rst", "auto_recipes/plot_exporter_exporter_draft_mode.rst", "auto_recipes/plot_exporter_exporter_dynamic_shapes_auto.rst", "auto_recipes/plot_exporter_exporter_infer_ds.rst", "auto_recipes/plot_exporter_exporter_inputs.rst", "auto_recipes/plot_exporter_exporter_lost_dynamic_dimension.rst", "auto_recipes/plot_exporter_exporter_phi35_piece.rst", "auto_recipes/plot_exporter_exporter_reportibility.rst", "auto_recipes/plot_exporter_exporter_scan_pdist.rst", "auto_recipes/plot_exporter_exporter_untrained_tinyllm.rst", "auto_recipes/plot_exporter_exporter_with_dynamic_cache.rst", "auto_recipes/plot_exporter_recipes_c_cond.rst", "auto_recipes/plot_exporter_recipes_c_custom_ops_fct.rst", "auto_recipes/plot_exporter_recipes_c_custom_ops_inplace.rst", "auto_recipes/plot_exporter_recipes_c_dynpad.rst", "auto_recipes/plot_exporter_recipes_c_modules.rst", "auto_recipes/plot_exporter_recipes_c_named_ds_auto.rst", "auto_recipes/plot_exporter_recipes_c_phi2.rst", "auto_recipes/plot_exporter_recipes_c_scan_pdist.rst", "auto_recipes/plot_exporter_recipes_oe_cond.rst", "auto_recipes/plot_exporter_recipes_oe_custom_ops_fct.rst", "auto_recipes/plot_exporter_recipes_oe_custom_ops_inplace.rst", "auto_recipes/plot_exporter_recipes_oe_dynpad.rst", "auto_recipes/plot_exporter_recipes_oe_lr.rst", "auto_recipes/plot_exporter_recipes_oe_named_ds_auto.rst", "auto_recipes/plot_exporter_recipes_oe_phi2.rst", "auto_recipes/sg_execution_times.rst", "bench/bash_bench.rst", "bench/dort_bench.rst", "bench/dort_profile.rst", "bench/index.rst", "bench/scripts.rst", "command_lines.rst", "design/backends.rst", "design/exporter.rst", "design/index.rst", "design/optimizer.rst", "galleries.rst", "index.rst", "license.rst", "miscellaneous/export_times.rst", "miscellaneous/index.rst", "miscellaneous/long_outputs.rst", "miscellaneous/models/index.rst", "miscellaneous/models/phi.rst", "sg_execution_times.rst", "tools/index.rst", "tools/lighten.rst", "tools/optimize.rst", "tools/print.rst", "tools/run.rst", "tutorial/docker.rst", "tutorial/errors.rst", "tutorial/exported.rst", "tutorial/exported_onnx.rst", "tutorial/exported_onnx_dynamic.rst", "tutorial/exported_program.rst", "tutorial/exported_program_dynamic.rst", "tutorial/index.rst"], "indexentries": {}, "objects": {"": [[16, 0, 0, "-", "experimental_experiment"]], "experimental_experiment": [[1, 0, 0, "-", "_bench_test"], [2, 0, 0, "-", "_command_lines_parser"], [3, 0, 0, "-", "args"], [4, 0, 0, "-", "bench_run"], [5, 0, 0, "-", "checks"], [7, 0, 0, "-", "convert"], [9, 0, 0, "-", "ext_test_case"], [11, 0, 0, "-", "gradient"], [15, 0, 0, "-", "helpers"], [17, 0, 0, "-", "memory_peak"], [18, 0, 0, "-", "mini_onnx_builder"], [19, 0, 0, "-", "model_run"], [20, 0, 0, "-", "onnx_tools"], [21, 0, 0, "-", "ort_session"], [23, 0, 0, "-", "plotting"], [26, 0, 0, "-", "reference"], [16, 1, 1, "", "reset_torch_transformers"], [55, 0, 0, "-", "skl"], [88, 0, 0, "-", "torch_bench"], [93, 0, 0, "-", "torch_dynamo"], [109, 0, 0, "-", "torch_interpreter"], [120, 0, 0, "-", "torch_models"], [128, 0, 0, "-", "torch_test_helper"], [135, 0, 0, "-", "xbuilder"], [142, 0, 0, "-", "xoptim"]], "experimental_experiment.args": [[3, 1, 1, "", "check_cuda_availability"], [3, 1, 1, "", "get_parsed_args"]], "experimental_experiment.bench_run": [[4, 2, 1, "", "BenchmarkError"], [4, 1, 1, "", "get_machine"], [4, 1, 1, "", "get_processor_name"], [4, 1, 1, "", "make_configs"], [4, 1, 1, "", "make_dataframe_from_benchmark_data"], [4, 1, 1, "", "multi_run"], [4, 1, 1, "", "run_benchmark"]], "experimental_experiment.checks": [[5, 1, 1, "", "print_import_time"]], "experimental_experiment.convert": [[6, 0, 0, "-", "convert_helper"], [8, 0, 0, "-", "ort_helper"]], "experimental_experiment.convert.convert_helper": [[6, 1, 1, "", "inline_model_proto"], [6, 1, 1, "", "optimize_model_proto_oxs"], [6, 1, 1, "", "ort_optimize"]], "experimental_experiment.convert.ort_helper": [[8, 1, 1, "", "append_custom_libraries"]], "experimental_experiment.ext_test_case": [[9, 3, 1, "", "ExtTestCase"], [9, 1, 1, "", "dump_dort_onnx"], [9, 1, 1, "", "get_figure"], [9, 1, 1, "", "has_cuda"], [9, 1, 1, "", "has_executorch"], [9, 1, 1, "", "has_onnxruntime_training"], [9, 1, 1, "", "has_onnxscript"], [9, 1, 1, "", "has_torch"], [9, 1, 1, "", "hide_stdout"], [9, 1, 1, "", "ignore_warnings"], [9, 1, 1, "", "is_azure"], [9, 1, 1, "", "long_test"], [9, 1, 1, "", "measure_time"], [9, 1, 1, "", "never_test"], [9, 1, 1, "", "requires_cuda"], [9, 1, 1, "", "requires_diffusers"], [9, 1, 1, "", "requires_executorch"], [9, 1, 1, "", "requires_monai"], [9, 1, 1, "", "requires_numpy"], [9, 1, 1, "", "requires_onnx"], [9, 1, 1, "", "requires_onnx_array_api"], [9, 1, 1, "", "requires_onnx_diagnostic"], [9, 1, 1, "", "requires_onnxruntime"], [9, 1, 1, "", "requires_onnxruntime_training"], [9, 1, 1, "", "requires_onnxscript"], [9, 1, 1, "", "requires_pyinstrument"], [9, 1, 1, "", "requires_sklearn"], [9, 1, 1, "", "requires_torch"], [9, 1, 1, "", "requires_transformers"], [9, 1, 1, "", "requires_vocos"], [9, 1, 1, "", "requires_zoo"], [9, 1, 1, "", "skipif_ci_apple"], [9, 1, 1, "", "skipif_ci_linux"], [9, 1, 1, "", "skipif_ci_windows"], [9, 1, 1, "", "skipif_not_onnxrt"], [9, 1, 1, "", "skipif_transformers"], [9, 1, 1, "", "statistics_on_file"], [9, 1, 1, "", "statistics_on_folder"], [9, 1, 1, "", "unit_test_going"], [9, 1, 1, "", "with_path_append"]], "experimental_experiment.ext_test_case.ExtTestCase": [[9, 4, 1, "", "assertAlmostEqual"], [9, 4, 1, "", "assertEmpty"], [9, 4, 1, "", "assertEqual"], [9, 4, 1, "", "assertEqualArray"], [9, 4, 1, "", "assertEqualArrays"], [9, 4, 1, "", "assertEqualOr"], [9, 4, 1, "", "assertExists"], [9, 4, 1, "", "assertGreaterOrEqual"], [9, 4, 1, "", "assertIn"], [9, 4, 1, "", "assertNotEmpty"], [9, 4, 1, "", "assertRaise"], [9, 4, 1, "", "assertSetContained"], [9, 4, 1, "", "assertStartsWith"], [9, 4, 1, "", "capture"], [9, 4, 1, "", "dump_onnx"], [9, 4, 1, "", "get_dump_file"], [9, 4, 1, "", "print_model"], [9, 4, 1, "", "print_onnx"], [9, 4, 1, "", "setUpClass"], [9, 4, 1, "", "tearDownClass"], [9, 4, 1, "", "todo"], [9, 4, 1, "", "tryCall"]], "experimental_experiment.gradient": [[10, 0, 0, "-", "grad_helper"], [12, 0, 0, "-", "loss_helper"], [13, 0, 0, "-", "ops"]], "experimental_experiment.gradient.grad_helper": [[10, 3, 1, "", "DerivativeOptions"], [10, 1, 1, "", "onnx_derivative"], [10, 1, 1, "", "random_feed"]], "experimental_experiment.gradient.loss_helper": [[12, 1, 1, "", "add_loss_output"], [12, 1, 1, "", "get_train_initializer"], [12, 1, 1, "", "penalty_loss_onnx"]], "experimental_experiment.gradient.ops": [[14, 0, 0, "-", "op_broadcast_gradient_args"]], "experimental_experiment.gradient.ops.op_broadcast_gradient_args": [[14, 3, 1, "", "BroadcastGradientArgs"]], "experimental_experiment.helpers": [[15, 1, 1, "", "convert_endian"], [15, 1, 1, "", "dtype_to_tensor_dtype"], [15, 1, 1, "", "flatten_object"], [15, 1, 1, "", "from_array_extended"], [15, 1, 1, "", "from_array_ml_dtypes"], [15, 1, 1, "", "get_onnx_signature"], [15, 1, 1, "", "make_hash"], [15, 1, 1, "", "np_dtype_to_tensor_dtype"], [15, 1, 1, "", "onnx_dtype_name"], [15, 1, 1, "", "onnx_dtype_to_torch_dtype"], [15, 1, 1, "", "pretty_onnx"], [15, 1, 1, "", "rename_dynamic_dimensions"], [15, 1, 1, "", "rename_dynamic_expression"], [15, 1, 1, "", "size_type"], [15, 1, 1, "", "string_diff"], [15, 1, 1, "", "string_sig"], [15, 1, 1, "", "string_signature"], [15, 1, 1, "", "string_type"], [15, 1, 1, "", "tensor_dtype_to_np_dtype"], [15, 1, 1, "", "torch_dtype_to_onnx_dtype"], [15, 1, 1, "", "type_info"]], "experimental_experiment.memory_peak": [[17, 3, 1, "", "MemorySpy"], [17, 1, 1, "", "get_memory_rss"], [17, 1, 1, "", "start_spying_on"]], "experimental_experiment.memory_peak.MemorySpy": [[17, 4, 1, "", "start"], [17, 4, 1, "", "stop"]], "experimental_experiment.mini_onnx_builder": [[18, 3, 1, "", "MiniOnnxBuilder"], [18, 1, 1, "", "create_input_tensors_from_onnx_model"], [18, 1, 1, "", "create_onnx_model_from_input_tensors"], [18, 1, 1, "", "dtype_to_tensor_dtype"], [18, 1, 1, "", "flatten_iterator"], [18, 1, 1, "", "proto_from_array"], [18, 1, 1, "", "torch_dtype_to_onnx_dtype"], [18, 1, 1, "", "unflatten"]], "experimental_experiment.mini_onnx_builder.MiniOnnxBuilder": [[18, 4, 1, "", "append_output_dict"], [18, 4, 1, "", "append_output_initializer"], [18, 4, 1, "", "append_output_sequence"], [18, 4, 1, "", "to_onnx"]], "experimental_experiment.model_run": [[19, 1, 1, "", "create_feeds"], [19, 1, 1, "", "create_tensor"], [19, 1, 1, "", "model_run"]], "experimental_experiment.onnx_tools": [[20, 1, 1, "", "onnx_find"], [20, 1, 1, "", "onnx_lighten"], [20, 1, 1, "", "onnx_unlighten"]], "experimental_experiment.ort_session": [[21, 3, 1, "", "InferenceSessionForNumpy"], [21, 3, 1, "", "InferenceSessionForTorch"], [21, 1, 1, "", "investigate_onnxruntime_issue"]], "experimental_experiment.ort_session.InferenceSessionForNumpy": [[21, 4, 1, "", "run"]], "experimental_experiment.ort_session.InferenceSessionForTorch": [[21, 4, 1, "", "run"], [21, 4, 1, "", "run_dlpack"], [21, 4, 1, "", "run_training_api"]], "experimental_experiment.plotting": [[22, 0, 0, "-", "data"], [24, 0, 0, "-", "memory"]], "experimental_experiment.reference": [[26, 3, 1, "", "ExtendedReferenceEvaluator"], [25, 0, 0, "-", "evaluator"], [27, 0, 0, "-", "ops"], [51, 0, 0, "-", "ort_evaluator"], [52, 0, 0, "-", "quantized_tensor"]], "experimental_experiment.reference.ExtendedReferenceEvaluator": [[26, 4, 1, "", "run"]], "experimental_experiment.reference.ops": [[28, 0, 0, "-", "op_add_add_mul_mul"], [29, 0, 0, "-", "op_average_pool_grad"], [30, 0, 0, "-", "op_cast_like"], [31, 0, 0, "-", "op_complex"], [32, 0, 0, "-", "op_concat"], [33, 0, 0, "-", "op_constant_of_shape"], [34, 0, 0, "-", "op_fused_matmul"], [35, 0, 0, "-", "op_gather_grad"], [36, 0, 0, "-", "op_memcpy_host"], [37, 0, 0, "-", "op_mul_sigmoid"], [38, 0, 0, "-", "op_negxplus1"], [39, 0, 0, "-", "op_qlinear_average_pool"], [40, 0, 0, "-", "op_qlinear_conv"], [41, 0, 0, "-", "op_quick_gelu"], [42, 0, 0, "-", "op_replace_zero"], [43, 0, 0, "-", "op_rotary"], [44, 0, 0, "-", "op_scatter_elements"], [45, 0, 0, "-", "op_scatternd_of_shape"], [46, 0, 0, "-", "op_simplified_layer_normalization"], [47, 0, 0, "-", "op_skip_layer_normalization"], [48, 0, 0, "-", "op_slice"], [49, 0, 0, "-", "op_transpose_cast"], [50, 0, 0, "-", "op_tri_matrix"]], "experimental_experiment.reference.ops.op_add_add_mul_mul": [[28, 3, 1, "", "AddAdd"], [28, 3, 1, "", "AddMul"], [28, 3, 1, "", "AddSharedInput"], [28, 3, 1, "", "MulAdd"], [28, 3, 1, "", "MulMul"], [28, 3, 1, "", "MulSharedInput"], [28, 3, 1, "", "MulSub"], [28, 3, 1, "", "SubMul"]], "experimental_experiment.reference.ops.op_average_pool_grad": [[29, 3, 1, "", "AveragePoolGrad"]], "experimental_experiment.reference.ops.op_cast_like": [[30, 3, 1, "", "CastLike_15"], [30, 3, 1, "", "CastLike_19"]], "experimental_experiment.reference.ops.op_complex": [[31, 3, 1, "", "ComplexModule"], [31, 3, 1, "", "ToComplex"]], "experimental_experiment.reference.ops.op_concat": [[32, 3, 1, "", "Concat"]], "experimental_experiment.reference.ops.op_constant_of_shape": [[33, 3, 1, "", "ConstantOfShape"]], "experimental_experiment.reference.ops.op_fused_matmul": [[34, 3, 1, "", "FusedMatMul"]], "experimental_experiment.reference.ops.op_gather_grad": [[35, 3, 1, "", "GatherGrad"]], "experimental_experiment.reference.ops.op_memcpy_host": [[36, 3, 1, "", "MemcpyFromHost"], [36, 3, 1, "", "MemcpyToHost"]], "experimental_experiment.reference.ops.op_mul_sigmoid": [[37, 3, 1, "", "MulSigmoid"]], "experimental_experiment.reference.ops.op_negxplus1": [[38, 3, 1, "", "NegXplus1"]], "experimental_experiment.reference.ops.op_qlinear_average_pool": [[39, 3, 1, "", "QLinearAveragePool"]], "experimental_experiment.reference.ops.op_qlinear_conv": [[40, 3, 1, "", "QLinearConv"]], "experimental_experiment.reference.ops.op_quick_gelu": [[41, 3, 1, "", "QuickGelu"]], "experimental_experiment.reference.ops.op_replace_zero": [[42, 3, 1, "", "ReplaceZero"]], "experimental_experiment.reference.ops.op_rotary": [[43, 3, 1, "", "Rotary"]], "experimental_experiment.reference.ops.op_scatter_elements": [[44, 3, 1, "", "ScatterElements"]], "experimental_experiment.reference.ops.op_scatternd_of_shape": [[45, 3, 1, "", "MaskedScatterNDOfShape"], [45, 3, 1, "", "ScatterNDOfShape"]], "experimental_experiment.reference.ops.op_simplified_layer_normalization": [[46, 3, 1, "", "SimplifiedLayerNormalization"]], "experimental_experiment.reference.ops.op_skip_layer_normalization": [[47, 3, 1, "", "SkipLayerNormalization"]], "experimental_experiment.reference.ops.op_slice": [[48, 3, 1, "", "Slice_1"], [48, 3, 1, "", "Slice_10"]], "experimental_experiment.reference.ops.op_transpose_cast": [[49, 3, 1, "", "Transpose2DCastFP16"], [49, 3, 1, "", "Transpose2DCastFP32"]], "experimental_experiment.reference.ops.op_tri_matrix": [[50, 3, 1, "", "TriMatrix"]], "experimental_experiment.reference.ort_evaluator": [[51, 3, 1, "", "OrtEval"]], "experimental_experiment.reference.ort_evaluator.OrtEval": [[51, 5, 1, "", "input_names"], [51, 5, 1, "", "output_names"], [51, 4, 1, "", "run"], [51, 4, 1, "", "run_dlpack"]], "experimental_experiment.reference.quantized_tensor": [[52, 3, 1, "", "QuantizedTensor"]], "experimental_experiment.reference.quantized_tensor.QuantizedTensor": [[52, 5, 1, "", "qtensor"], [52, 5, 1, "", "scale"], [52, 5, 1, "", "shape"], [52, 5, 1, "", "zero_point"]], "experimental_experiment.skl": [[53, 0, 0, "-", "convert"], [54, 0, 0, "-", "helpers"], [55, 1, 1, "", "to_onnx"]], "experimental_experiment.skl.helpers": [[54, 1, 1, "", "flatnonzero"]], "experimental_experiment.torch_bench": [[56, 0, 0, "-", "_bash_bench_benchmark_runner"], [57, 0, 0, "-", "_bash_bench_benchmark_runner_agg"], [58, 0, 0, "-", "_bash_bench_benchmark_runner_agg_helper"], [59, 0, 0, "-", "_bash_bench_cmd"], [60, 0, 0, "-", "_bash_bench_model_runner"], [61, 0, 0, "-", "_bash_bench_models_helper"], [62, 0, 0, "-", "_bash_bench_set_dummies"], [63, 0, 0, "-", "_bash_bench_set_explicit"], [64, 0, 0, "-", "_bash_bench_set_huggingface"], [65, 0, 0, "-", "_bash_bench_set_huggingface_big"], [66, 0, 0, "-", "_bash_bench_set_issues"], [67, 0, 0, "-", "_bash_bench_set_timm"], [68, 0, 0, "-", "_bash_bench_set_torchbench"], [69, 0, 0, "-", "_bash_bench_set_torchbench_ado"], [70, 0, 0, "-", "_bash_bench_untrained"], [71, 0, 0, "-", "_dort_cmd_common"], [72, 0, 0, "-", "_dort_cmd_common_models"], [73, 0, 0, "-", "bash_bench_agg"], [74, 0, 0, "-", "bash_bench_explicit"], [75, 0, 0, "-", "bash_bench_huggingface"], [76, 0, 0, "-", "bash_bench_huggingface_big"], [77, 0, 0, "-", "bash_bench_issues"], [78, 0, 0, "-", "bash_bench_timm"], [79, 0, 0, "-", "bash_bench_torchbench"], [80, 0, 0, "-", "bash_bench_torchbench_ado"], [81, 0, 0, "-", "bash_bench_untrained"], [82, 0, 0, "-", "check_model"], [83, 0, 0, "-", "dort_bench"], [84, 0, 0, "-", "dort_bench_profile"], [85, 0, 0, "-", "dort_profile"], [86, 0, 0, "-", "export_model"], [87, 0, 0, "-", "export_model_helper"]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner": [[56, 3, 1, "", "BenchmarkRunner"]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner.BenchmarkRunner": [[56, 4, 1, "", "enumerate_load_models"], [56, 4, 1, "", "enumerate_model_names"], [56, 4, 1, "", "enumerate_run_models"], [56, 4, 1, "", "enumerate_test_models"], [56, 4, 1, "", "get_benchmark_indices"], [56, 4, 1, "", "get_model_name_list"], [56, 4, 1, "", "max_diff"], [56, 4, 1, "", "ort_run"]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg": [[57, 1, 1, "", "enumerate_csv_files"], [57, 1, 1, "", "merge_benchmark_reports"], [57, 1, 1, "", "open_dataframe"]], "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg_helper": [[58, 1, 1, "", "build_historical_report"]], "experimental_experiment.torch_bench._bash_bench_cmd": [[59, 1, 1, "", "bash_bench_main"], [59, 1, 1, "", "bash_bench_parse_args"]], "experimental_experiment.torch_bench._bash_bench_model_runner": [[60, 3, 1, "", "MakeConfig"], [60, 3, 1, "", "ModelRunner"], [60, 3, 1, "", "UseDefaultValue"], [60, 3, 1, "", "WrappedModelBase"], [60, 3, 1, "", "WrappedModelToTuple"], [60, 1, 1, "", "download_retry_decorator"], [60, 1, 1, "", "get_dynamo_stats"], [60, 1, 1, "", "get_peak_memory"]], "experimental_experiment.torch_bench._bash_bench_model_runner.ModelRunner": [[60, 4, 1, "", "allowed_configuration"], [60, 4, 1, "", "compute_weight_size"], [60, 4, 1, "", "dump_std"], [60, 4, 1, "", "export_as"], [60, 4, 1, "", "get_devices"], [60, 4, 1, "", "get_dynamic_shapes"], [60, 4, 1, "", "get_input_shapes"], [60, 4, 1, "", "get_inputs_with_copied_dynamic_cache"], [60, 4, 1, "", "is_lm"], [60, 4, 1, "", "make_dynamic_inputs"], [60, 4, 1, "", "make_export_inputs"], [60, 4, 1, "", "make_feeds"], [60, 4, 1, "", "parameters_dtype"]], "experimental_experiment.torch_bench._bash_bench_model_runner.WrappedModelBase": [[60, 4, 1, "", "forward"], [60, 4, 1, "", "parameters"]], "experimental_experiment.torch_bench._bash_bench_model_runner.WrappedModelToTuple": [[60, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_models_helper": [[61, 1, 1, "", "get_dummy_model"], [61, 1, 1, "", "get_dummy_model_fail"], [61, 1, 1, "", "get_dummy_model_fail_convert"], [61, 1, 1, "", "get_llama_model_layer"], [61, 1, 1, "", "get_speech2text2_causal_ml_not_trained_model"], [61, 1, 1, "", "ids_tensor"]], "experimental_experiment.torch_bench._bash_bench_set_dummies": [[62, 3, 1, "", "Neuron"], [62, 3, 1, "", "Neuron16"], [62, 3, 1, "", "Neuron2Inputs"], [62, 3, 1, "", "Neuron2Outputs"], [62, 3, 1, "", "NeuronDynamicCache"], [62, 3, 1, "", "NeuronIInt"], [62, 3, 1, "", "NeuronIList"], [62, 3, 1, "", "NeuronMambaCache"], [62, 3, 1, "", "NeuronNamed1"], [62, 3, 1, "", "NeuronNamed2"], [62, 3, 1, "", "NeuronNamedDict"], [62, 3, 1, "", "NeuronNoneInt"], [62, 3, 1, "", "NeuronNoneIntDefault"], [62, 3, 1, "", "NeuronNoneIntDict"], [62, 3, 1, "", "NeuronNoneListInt"], [62, 3, 1, "", "NeuronTuple"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.Neuron": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.Neuron16": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.Neuron2Inputs": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.Neuron2Outputs": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronDynamicCache": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronIInt": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronIList": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronMambaCache": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNamed1": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNamed2": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNamedDict": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNoneInt": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNoneIntDefault": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNoneIntDict": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronNoneListInt": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_dummies.NeuronTuple": [[62, 4, 1, "", "forward"]], "experimental_experiment.torch_bench._bash_bench_set_explicit": [[63, 3, 1, "", "ExplicitRunner"]], "experimental_experiment.torch_bench._bash_bench_set_explicit.ExplicitRunner": [[63, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_huggingface": [[64, 3, 1, "", "HuggingfaceRunner"]], "experimental_experiment.torch_bench._bash_bench_set_huggingface.HuggingfaceRunner": [[64, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_huggingface_big": [[65, 3, 1, "", "HuggingfaceBigRunner"]], "experimental_experiment.torch_bench._bash_bench_set_huggingface_big.HuggingfaceBigRunner": [[65, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_issues": [[66, 3, 1, "", "IssueRunner"]], "experimental_experiment.torch_bench._bash_bench_set_issues.IssueRunner": [[66, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_timm": [[67, 3, 1, "", "TimmRunner"]], "experimental_experiment.torch_bench._bash_bench_set_timm.TimmRunner": [[67, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_torchbench": [[68, 3, 1, "", "TorchBenchRunner"]], "experimental_experiment.torch_bench._bash_bench_set_torchbench.TorchBenchRunner": [[68, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_set_torchbench_ado": [[69, 3, 1, "", "TorchBenchAdoRunner"]], "experimental_experiment.torch_bench._bash_bench_set_torchbench_ado.TorchBenchAdoRunner": [[69, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._bash_bench_untrained": [[70, 3, 1, "", "UntrainedRunner"]], "experimental_experiment.torch_bench._bash_bench_untrained.UntrainedRunner": [[70, 4, 1, "", "initialize"]], "experimental_experiment.torch_bench._dort_cmd_common": [[71, 1, 1, "", "create_compiled_model"], [71, 1, 1, "", "create_configuration_for_benchmark"], [71, 1, 1, "", "create_model"], [71, 1, 1, "", "get_fused_aten_ops_dispatcher"]], "experimental_experiment.torch_bench.bash_bench_agg": [[73, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_explicit": [[74, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_huggingface": [[75, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_huggingface_big": [[76, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_issues": [[77, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_timm": [[78, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_torchbench": [[79, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_torchbench_ado": [[80, 1, 1, "", "main"]], "experimental_experiment.torch_bench.bash_bench_untrained": [[81, 1, 1, "", "main"]], "experimental_experiment.torch_bench.check_model": [[82, 1, 1, "", "main"]], "experimental_experiment.torch_bench.dort_bench": [[83, 1, 1, "", "main"]], "experimental_experiment.torch_bench.dort_bench_profile": [[84, 1, 1, "", "main"]], "experimental_experiment.torch_bench.dort_profile": [[85, 1, 1, "", "main"]], "experimental_experiment.torch_bench.export_model_helper": [[87, 3, 1, "", "WrapExecutorchForTorch"], [87, 3, 1, "", "WrapForTorch"], [87, 3, 1, "", "WrapInferenceSessionForTorch"], [87, 1, 1, "", "common_export"], [87, 1, 1, "", "compute_weight_size"], [87, 1, 1, "", "run_inference"], [87, 1, 1, "", "run_onnx_inference"]], "experimental_experiment.torch_dynamo": [[89, 0, 0, "-", "_dynamo_exporter"], [90, 0, 0, "-", "backend_helper"], [91, 0, 0, "-", "debug_backend"], [93, 1, 1, "", "dynger_backend"], [92, 0, 0, "-", "fast_backend"], [93, 1, 1, "", "filter_decomposition_table"], [93, 1, 1, "", "get_decomposition_table"], [93, 1, 1, "", "get_decomposition_table_by_name"], [93, 1, 1, "", "get_decomposition_table_dynamo"], [93, 1, 1, "", "get_decomposition_table_onnxscript"], [93, 1, 1, "", "onnx_custom_backend"], [93, 1, 1, "", "onnx_debug_backend"], [94, 0, 0, "-", "partition"], [93, 1, 1, "", "pprint_storage"]], "experimental_experiment.torch_dynamo.fast_backend": [[92, 3, 1, "", "OrtBackend"], [92, 1, 1, "", "onnx_custom_backend"]], "experimental_experiment.torch_dynamo.fast_backend.OrtBackend": [[92, 4, 1, "", "dump_for_debug"], [92, 4, 1, "", "replay_dumped_data"]], "experimental_experiment.torch_dynamo.partition": [[94, 3, 1, "", "CustomOperatorSupport"], [94, 1, 1, "", "backend_partition_compile"]], "experimental_experiment.torch_dynamo.partition.CustomOperatorSupport": [[94, 4, 1, "", "is_node_supported"]], "experimental_experiment.torch_interpreter": [[109, 3, 1, "", "Dispatcher"], [109, 3, 1, "", "ExportOptions"], [109, 3, 1, "", "TorchOpOverload"], [95, 0, 0, "-", "_aten_functions"], [96, 0, 0, "-", "_aten_functions_attention"], [97, 0, 0, "-", "_aten_methods"], [98, 0, 0, "-", "_doc_"], [99, 0, 0, "-", "_exceptions"], [100, 0, 0, "-", "_non_aten_functions"], [101, 0, 0, "-", "_prims_functions"], [102, 0, 0, "-", "_torch_helper"], [103, 0, 0, "-", "aten_functions"], [104, 0, 0, "-", "aten_methods"], [105, 0, 0, "-", "dispatcher"], [106, 0, 0, "-", "eval"], [108, 0, 0, "-", "export_options"], [110, 0, 0, "-", "interpreter"], [111, 0, 0, "-", "investigate_helper"], [109, 1, 1, "", "make_undefined_dimension"], [109, 1, 1, "", "match_input_parameters"], [112, 0, 0, "-", "onnx_export"], [113, 0, 0, "-", "oxs_dispatcher"], [114, 0, 0, "-", "oxs_opset"], [115, 0, 0, "-", "piece_by_piece"], [116, 0, 0, "-", "piece_by_piece_serialize"], [109, 1, 1, "", "to_onnx"], [117, 0, 0, "-", "tracing"]], "experimental_experiment.torch_interpreter.Dispatcher": [[109, 4, 1, "", "fallback"], [109, 4, 1, "", "find_function"], [109, 4, 1, "", "find_method"], [109, 4, 1, "", "merge"], [109, 5, 1, "", "supported"]], "experimental_experiment.torch_interpreter.ExportOptions": [[109, 4, 1, "", "export"], [109, 4, 1, "", "get_decomposition_table"], [109, 4, 1, "", "get_fallback_options"], [109, 4, 1, "", "post_process_exported_program"], [109, 4, 1, "", "remove_inplace_nodes"]], "experimental_experiment.torch_interpreter._aten_functions": [[95, 3, 1, "", "Reduction"], [95, 1, 1, "", "aten_FunctionCtx"], [95, 1, 1, "", "aten___and___Tensor"], [95, 1, 1, "", "aten___or___Tensor"], [95, 1, 1, "", "aten__adaptive_avg_pool2d"], [95, 1, 1, "", "aten__assert_scalar"], [95, 1, 1, "", "aten__assert_tensor_metadata"], [95, 1, 1, "", "aten__embedding_bag"], [95, 1, 1, "", "aten__enter_autocast"], [95, 1, 1, "", "aten__exit_autocast"], [95, 1, 1, "", "aten__fft_r2c"], [95, 1, 1, "", "aten__fftn_onnx"], [95, 1, 1, "", "aten__log_api_usage_once"], [95, 1, 1, "", "aten__log_softmax"], [95, 1, 1, "", "aten__log_softmax_backward_data"], [95, 1, 1, "", "aten__native_batch_norm"], [95, 1, 1, "", "aten__native_batch_norm_legit_no_stats"], [95, 1, 1, "", "aten__native_batch_norm_legit_no_training"], [95, 1, 1, "", "aten__prelu_kernel"], [95, 1, 1, "", "aten__prelu_kernel_backward"], [95, 1, 1, "", "aten__set_grad_enabled"], [95, 1, 1, "", "aten__softmax"], [95, 1, 1, "", "aten__softmax_backward_data"], [95, 1, 1, "", "aten__sym_sqrt"], [95, 1, 1, "", "aten__to_copy"], [95, 1, 1, "", "aten__unsafe_index_Tensor"], [95, 1, 1, "", "aten__unsafe_index_put"], [95, 1, 1, "", "aten__unsafe_view"], [95, 1, 1, "", "aten_abs"], [95, 1, 1, "", "aten_acos"], [95, 1, 1, "", "aten_acosh"], [95, 1, 1, "", "aten_adaptive_avg_pool1d"], [95, 1, 1, "", "aten_adaptive_avg_pool2d"], [95, 1, 1, "", "aten_adaptive_avg_pool3d"], [95, 1, 1, "", "aten_add"], [95, 1, 1, "", "aten_add_Scalar"], [95, 1, 1, "", "aten_add_Tensor"], [95, 1, 1, "", "aten_add__Tensor"], [95, 1, 1, "", "aten_addcmul"], [95, 1, 1, "", "aten_addmm"], [95, 1, 1, "", "aten_alias"], [95, 1, 1, "", "aten_all"], [95, 1, 1, "", "aten_all_dim"], [95, 1, 1, "", "aten_amax"], [95, 1, 1, "", "aten_and"], [95, 1, 1, "", "aten_and_"], [95, 1, 1, "", "aten_any"], [95, 1, 1, "", "aten_any_dim"], [95, 1, 1, "", "aten_arange"], [95, 1, 1, "", "aten_arange_start"], [95, 1, 1, "", "aten_arange_start_step"], [95, 1, 1, "", "aten_argmax"], [95, 1, 1, "", "aten_as_strided"], [95, 1, 1, "", "aten_asin"], [95, 1, 1, "", "aten_asinh"], [95, 1, 1, "", "aten_atan"], [95, 1, 1, "", "aten_atanh"], [95, 1, 1, "", "aten_auto_functionalized"], [95, 1, 1, "", "aten_avg_pool2d"], [95, 1, 1, "", "aten_avg_pool2d_backward"], [95, 1, 1, "", "aten_avg_pool3d"], [95, 1, 1, "", "aten_baddbmm"], [95, 1, 1, "", "aten_batch_norm"], [95, 1, 1, "", "aten_bitwise_not"], [95, 1, 1, "", "aten_bitwise_or"], [95, 1, 1, "", "aten_bitwise_or_Tensor"], [95, 1, 1, "", "aten_bitwise_or__Tensor"], [95, 1, 1, "", "aten_bmm"], [95, 1, 1, "", "aten_broadcast_tensors"], [95, 1, 1, "", "aten_cat"], [95, 1, 1, "", "aten_ceil"], [95, 1, 1, "", "aten_chunk"], [95, 1, 1, "", "aten_clamp"], [95, 1, 1, "", "aten_clamp_Tensor"], [95, 1, 1, "", "aten_clamp_max"], [95, 1, 1, "", "aten_clamp_min"], [95, 1, 1, "", "aten_clip"], [95, 1, 1, "", "aten_clone"], [95, 1, 1, "", "aten_col2im"], [95, 1, 1, "", "aten_cond"], [95, 1, 1, "", "aten_constant_pad_nd"], [95, 1, 1, "", "aten_contiguous"], [95, 1, 1, "", "aten_conv1d"], [95, 1, 1, "", "aten_conv2d"], [95, 1, 1, "", "aten_conv2d_padding"], [95, 1, 1, "", "aten_conv3d"], [95, 1, 1, "", "aten_conv_transpose2d_input"], [95, 1, 1, "", "aten_conv_transpose3d_input"], [95, 1, 1, "", "aten_convolution"], [95, 1, 1, "", "aten_copy"], [95, 1, 1, "", "aten_copy_"], [95, 1, 1, "", "aten_cos"], [95, 1, 1, "", "aten_cosh"], [95, 1, 1, "", "aten_cross_entropy_loss"], [95, 1, 1, "", "aten_cudnn_batch_norm"], [95, 1, 1, "", "aten_cumsum"], [95, 1, 1, "", "aten_detach"], [95, 1, 1, "", "aten_detach_"], [95, 1, 1, "", "aten_div"], [95, 1, 1, "", "aten_div_Scalar"], [95, 1, 1, "", "aten_div_Tensor"], [95, 1, 1, "", "aten_div_Tensor_mode"], [95, 1, 1, "", "aten_div__Tensor"], [95, 1, 1, "", "aten_dropout"], [95, 1, 1, "", "aten_dropout_"], [95, 1, 1, "", "aten_einsum"], [95, 1, 1, "", "aten_elu"], [95, 1, 1, "", "aten_elu_"], [95, 1, 1, "", "aten_embedding"], [95, 1, 1, "", "aten_embedding_bag_padding_idx"], [95, 1, 1, "", "aten_empty_like"], [95, 1, 1, "", "aten_empty_permuted"], [95, 1, 1, "", "aten_empty_strided"], [95, 1, 1, "", "aten_eq"], [95, 1, 1, "", "aten_eq_Scalar"], [95, 1, 1, "", "aten_eq_Tensor"], [95, 1, 1, "", "aten_erf"], [95, 1, 1, "", "aten_exp"], [95, 1, 1, "", "aten_expand"], [95, 1, 1, "", "aten_expand_as"], [95, 1, 1, "", "aten_expm1"], [95, 1, 1, "", "aten_feature_dropout"], [95, 1, 1, "", "aten_fft_fft"], [95, 1, 1, "", "aten_fft_fft2"], [95, 1, 1, "", "aten_fft_ifft"], [95, 1, 1, "", "aten_fft_ifft2"], [95, 1, 1, "", "aten_fill_Scalar"], [95, 1, 1, "", "aten_fill_Tensor"], [95, 1, 1, "", "aten_flatten"], [95, 1, 1, "", "aten_flatten_using_ints"], [95, 1, 1, "", "aten_floor"], [95, 1, 1, "", "aten_floor_divide"], [95, 1, 1, "", "aten_floordiv"], [95, 1, 1, "", "aten_fmod_Scalar"], [95, 1, 1, "", "aten_full"], [95, 1, 1, "", "aten_full_like"], [95, 1, 1, "", "aten_gather"], [95, 1, 1, "", "aten_ge"], [95, 1, 1, "", "aten_ge_Scalar"], [95, 1, 1, "", "aten_ge_Tensor"], [95, 1, 1, "", "aten_gelu"], [95, 1, 1, "", "aten_getattr"], [95, 1, 1, "", "aten_grid_sampler"], [95, 1, 1, "", "aten_grid_sampler_2d"], [95, 1, 1, "", "aten_group_norm"], [95, 1, 1, "", "aten_gt"], [95, 1, 1, "", "aten_gt_Scalar"], [95, 1, 1, "", "aten_gt_Tensor"], [95, 1, 1, "", "aten_hardsigmoid"], [95, 1, 1, "", "aten_hardswish"], [95, 1, 1, "", "aten_hardswish_"], [95, 1, 1, "", "aten_hardtanh"], [95, 1, 1, "", "aten_hardtanh_"], [95, 1, 1, "", "aten_hardtanh_backward"], [95, 1, 1, "", "aten_im2col"], [95, 1, 1, "", "aten_imul"], [95, 1, 1, "", "aten_index_Tensor"], [95, 1, 1, "", "aten_index_put"], [95, 1, 1, "", "aten_index_put_"], [95, 1, 1, "", "aten_index_select"], [95, 1, 1, "", "aten_instance_norm"], [95, 1, 1, "", "aten_interpolate"], [95, 1, 1, "", "aten_isin"], [95, 1, 1, "", "aten_isin_Tensor_Tensor"], [95, 1, 1, "", "aten_isinf"], [95, 1, 1, "", "aten_isnan"], [95, 1, 1, "", "aten_item"], [95, 1, 1, "", "aten_l1_loss"], [95, 1, 1, "", "aten_layer_norm"], [95, 1, 1, "", "aten_le"], [95, 1, 1, "", "aten_le_Scalar"], [95, 1, 1, "", "aten_le_Tensor"], [95, 1, 1, "", "aten_leaky_relu"], [95, 1, 1, "", "aten_leaky_relu_"], [95, 1, 1, "", "aten_leaky_relu_backward"], [95, 1, 1, "", "aten_lift_fresh_copy"], [95, 1, 1, "", "aten_linalg_vector_norm"], [95, 1, 1, "", "aten_linear"], [95, 1, 1, "", "aten_linspace"], [95, 1, 1, "", "aten_log"], [95, 1, 1, "", "aten_log_softmax_int"], [95, 1, 1, "", "aten_logical_and"], [95, 1, 1, "", "aten_logical_not"], [95, 1, 1, "", "aten_logical_or"], [95, 1, 1, "", "aten_lt"], [95, 1, 1, "", "aten_lt_Scalar"], [95, 1, 1, "", "aten_lt_Tensor"], [95, 1, 1, "", "aten_masked_fill_Scalar"], [95, 1, 1, "", "aten_masked_fill_Tensor"], [95, 1, 1, "", "aten_masked_fill__Scalar"], [95, 1, 1, "", "aten_masked_scatter"], [95, 1, 1, "", "aten_matmul"], [95, 1, 1, "", "aten_max"], [95, 1, 1, "", "aten_max_dim"], [95, 1, 1, "", "aten_max_other"], [95, 1, 1, "", "aten_max_pool1d"], [95, 1, 1, "", "aten_max_pool2d"], [95, 1, 1, "", "aten_max_pool2d_with_indices"], [95, 1, 1, "", "aten_max_pool3d"], [95, 1, 1, "", "aten_max_pool3d_with_indices"], [95, 1, 1, "", "aten_maximum"], [95, 1, 1, "", "aten_mean"], [95, 1, 1, "", "aten_mean_dim"], [95, 1, 1, "", "aten_min"], [95, 1, 1, "", "aten_min_other"], [95, 1, 1, "", "aten_minimum"], [95, 1, 1, "", "aten_mm"], [95, 1, 1, "", "aten_mod"], [95, 1, 1, "", "aten_mse_loss"], [95, 1, 1, "", "aten_mul"], [95, 1, 1, "", "aten_mul_Scalar"], [95, 1, 1, "", "aten_mul_Tensor"], [95, 1, 1, "", "aten_mul__Tensor"], [95, 1, 1, "", "aten_multinomial"], [95, 1, 1, "", "aten_multiply_Tensor"], [95, 1, 1, "", "aten_nan_to_num"], [95, 1, 1, "", "aten_native_dropout"], [95, 1, 1, "", "aten_native_group_norm"], [95, 1, 1, "", "aten_native_layer_norm"], [95, 1, 1, "", "aten_ne"], [95, 1, 1, "", "aten_ne_Scalar"], [95, 1, 1, "", "aten_ne_Tensor"], [95, 1, 1, "", "aten_neg"], [95, 1, 1, "", "aten_new_ones"], [95, 1, 1, "", "aten_new_zeros"], [95, 1, 1, "", "aten_nll_loss_forward"], [95, 1, 1, "", "aten_nonzero"], [95, 1, 1, "", "aten_nonzero_numpy"], [95, 1, 1, "", "aten_not"], [95, 1, 1, "", "aten_not_"], [95, 1, 1, "", "aten_numpy_T"], [95, 1, 1, "", "aten_ones"], [95, 1, 1, "", "aten_ones_like"], [95, 1, 1, "", "aten_or"], [95, 1, 1, "", "aten_pad"], [95, 1, 1, "", "aten_permute"], [95, 1, 1, "", "aten_polar"], [95, 1, 1, "", "aten_pow"], [95, 1, 1, "", "aten_pow_Scalar"], [95, 1, 1, "", "aten_pow_Tensor_Scalar"], [95, 1, 1, "", "aten_pow_Tensor_Tensor"], [95, 1, 1, "", "aten_pow__Scalar"], [95, 1, 1, "", "aten_prelu"], [95, 1, 1, "", "aten_prod"], [95, 1, 1, "", "aten_prod_dim_int"], [95, 1, 1, "", "aten_reciprocal"], [95, 1, 1, "", "aten_reflection_pad2d"], [95, 1, 1, "", "aten_relu"], [95, 1, 1, "", "aten_relu_"], [95, 1, 1, "", "aten_remainder"], [95, 1, 1, "", "aten_remainder_Scalar"], [95, 1, 1, "", "aten_remainder_Tensor"], [95, 1, 1, "", "aten_repeat"], [95, 1, 1, "", "aten_repeat_interleave"], [95, 1, 1, "", "aten_repeat_interleave_self_int"], [95, 1, 1, "", "aten_reshape"], [95, 1, 1, "", "aten_reshape_as"], [95, 1, 1, "", "aten_roll"], [95, 1, 1, "", "aten_round"], [95, 1, 1, "", "aten_rrelu_with_noise_backward"], [95, 1, 1, "", "aten_rsqrt"], [95, 1, 1, "", "aten_rsub"], [95, 1, 1, "", "aten_rsub_Scalar"], [95, 1, 1, "", "aten_scalar_tensor"], [95, 1, 1, "", "aten_scan"], [95, 1, 1, "", "aten_scatter_add"], [95, 1, 1, "", "aten_scatter_add_"], [95, 1, 1, "", "aten_scatter_reduce__two"], [95, 1, 1, "", "aten_scatter_reduce_two"], [95, 1, 1, "", "aten_select_copy_int"], [95, 1, 1, "", "aten_select_int"], [95, 1, 1, "", "aten_select_scatter"], [95, 1, 1, "", "aten_selu"], [95, 1, 1, "", "aten_setitem"], [95, 1, 1, "", "aten_sigmoid"], [95, 1, 1, "", "aten_sigmoid_"], [95, 1, 1, "", "aten_sigmoid_backward"], [95, 1, 1, "", "aten_sign"], [95, 1, 1, "", "aten_silu"], [95, 1, 1, "", "aten_silu_"], [95, 1, 1, "", "aten_sin"], [95, 1, 1, "", "aten_sinh"], [95, 1, 1, "", "aten_slice_Tensor"], [95, 1, 1, "", "aten_slice_backward"], [95, 1, 1, "", "aten_slice_scatter"], [95, 1, 1, "", "aten_softmax"], [95, 1, 1, "", "aten_softmax_int"], [95, 1, 1, "", "aten_softplus"], [95, 1, 1, "", "aten_split_Tensor"], [95, 1, 1, "", "aten_split_with_sizes"], [95, 1, 1, "", "aten_sqrt"], [95, 1, 1, "", "aten_squeeze"], [95, 1, 1, "", "aten_squeeze_dim"], [95, 1, 1, "", "aten_squeeze_dims"], [95, 1, 1, "", "aten_stack"], [95, 1, 1, "", "aten_std_dim"], [95, 1, 1, "", "aten_sub"], [95, 1, 1, "", "aten_sub_Tensor"], [95, 1, 1, "", "aten_sub__Tensor"], [95, 1, 1, "", "aten_sum"], [95, 1, 1, "", "aten_sum_dim_IntList"], [95, 1, 1, "", "aten_sym_constrain_range_for_size"], [95, 1, 1, "", "aten_sym_max"], [95, 1, 1, "", "aten_sym_min"], [95, 1, 1, "", "aten_sym_size_int"], [95, 1, 1, "", "aten_t"], [95, 1, 1, "", "aten_take"], [95, 1, 1, "", "aten_tan"], [95, 1, 1, "", "aten_tanh"], [95, 1, 1, "", "aten_tanh_backward"], [95, 1, 1, "", "aten_tensor"], [95, 1, 1, "", "aten_threshold_backward"], [95, 1, 1, "", "aten_to"], [95, 1, 1, "", "aten_to_device"], [95, 1, 1, "", "aten_to_dtype"], [95, 1, 1, "", "aten_to_dtype_layout"], [95, 1, 1, "", "aten_topk"], [95, 1, 1, "", "aten_transpose"], [95, 1, 1, "", "aten_transpose_int"], [95, 1, 1, "", "aten_tril"], [95, 1, 1, "", "aten_triu"], [95, 1, 1, "", "aten_truediv"], [95, 1, 1, "", "aten_type_as"], [95, 1, 1, "", "aten_unbind_int"], [95, 1, 1, "", "aten_unflatten_int"], [95, 1, 1, "", "aten_unfold"], [95, 1, 1, "", "aten_unsqueeze"], [95, 1, 1, "", "aten_unsqueeze_"], [95, 1, 1, "", "aten_upsample_bicubic2d"], [95, 1, 1, "", "aten_upsample_bicubic2d_vec"], [95, 1, 1, "", "aten_upsample_bilinear2d"], [95, 1, 1, "", "aten_upsample_bilinear2d_vec"], [95, 1, 1, "", "aten_upsample_nearest2d"], [95, 1, 1, "", "aten_upsample_nearest2d_vec"], [95, 1, 1, "", "aten_upsample_nearest3d"], [95, 1, 1, "", "aten_upsample_nearest3d_vec"], [95, 1, 1, "", "aten_upsample_trilinear3d"], [95, 1, 1, "", "aten_upsample_trilinear3d_vec"], [95, 1, 1, "", "aten_view"], [95, 1, 1, "", "aten_where"], [95, 1, 1, "", "aten_where_Scalar"], [95, 1, 1, "", "aten_where_ScalarOther"], [95, 1, 1, "", "aten_where_ScalarSelf"], [95, 1, 1, "", "aten_where_self"], [95, 1, 1, "", "aten_wrap_with_autocast"], [95, 1, 1, "", "aten_wrap_with_set_grad_enabled"], [95, 1, 1, "", "aten_zero"], [95, 1, 1, "", "aten_zeros"], [95, 1, 1, "", "aten_zeros_like"]], "experimental_experiment.torch_interpreter._aten_functions_attention": [[96, 1, 1, "", "aten__scaled_dot_product_efficient_attention"], [96, 1, 1, "", "aten__scaled_dot_product_flash_attention"], [96, 1, 1, "", "aten__scaled_dot_product_flash_attention_for_cpu"], [96, 1, 1, "", "aten_scaled_dot_product_attention"]], "experimental_experiment.torch_interpreter._aten_methods": [[97, 1, 1, "", "aten_meth___eq__"], [97, 1, 1, "", "aten_meth_bool"], [97, 1, 1, "", "aten_meth_clamp_max"], [97, 1, 1, "", "aten_meth_clamp_min"], [97, 1, 1, "", "aten_meth_clone"], [97, 1, 1, "", "aten_meth_contiguous"], [97, 1, 1, "", "aten_meth_cos"], [97, 1, 1, "", "aten_meth_cpu"], [97, 1, 1, "", "aten_meth_detach"], [97, 1, 1, "", "aten_meth_eq"], [97, 1, 1, "", "aten_meth_expand"], [97, 1, 1, "", "aten_meth_expand_as"], [97, 1, 1, "", "aten_meth_float"], [97, 1, 1, "", "aten_meth_item"], [97, 1, 1, "", "aten_meth_masked_fill"], [97, 1, 1, "", "aten_meth_masked_fill_"], [97, 1, 1, "", "aten_meth_mean"], [97, 1, 1, "", "aten_meth_numel"], [97, 1, 1, "", "aten_meth_pow"], [97, 1, 1, "", "aten_meth_repeat"], [97, 1, 1, "", "aten_meth_reshape"], [97, 1, 1, "", "aten_meth_sin"], [97, 1, 1, "", "aten_meth_size"], [97, 1, 1, "", "aten_meth_sum"], [97, 1, 1, "", "aten_meth_t"], [97, 1, 1, "", "aten_meth_to"], [97, 1, 1, "", "aten_meth_transpose"], [97, 1, 1, "", "aten_meth_unsqueeze"], [97, 1, 1, "", "aten_meth_view"]], "experimental_experiment.torch_interpreter._doc_": [[98, 3, 1, "", "TorchOpOverload"]], "experimental_experiment.torch_interpreter._exceptions": [[99, 2, 1, "", "FunctionNotFoundError"]], "experimental_experiment.torch_interpreter._non_aten_functions": [[100, 1, 1, "", "onnx_symbolic__symbolic_default"]], "experimental_experiment.torch_interpreter._prims_functions": [[101, 1, 1, "", "prims_add"], [101, 1, 1, "", "prims_amax"], [101, 1, 1, "", "prims_broadcast_in_dim"], [101, 1, 1, "", "prims_cat"], [101, 1, 1, "", "prims_clone"], [101, 1, 1, "", "prims_collapse_view"], [101, 1, 1, "", "prims_convert_element_type"], [101, 1, 1, "", "prims_cos"], [101, 1, 1, "", "prims_div"], [101, 1, 1, "", "prims_empty_strided"], [101, 1, 1, "", "prims_eq"], [101, 1, 1, "", "prims_exp"], [101, 1, 1, "", "prims_ge"], [101, 1, 1, "", "prims_gt"], [101, 1, 1, "", "prims_iota"], [101, 1, 1, "", "prims_lt"], [101, 1, 1, "", "prims_mul"], [101, 1, 1, "", "prims_neg"], [101, 1, 1, "", "prims_pow"], [101, 1, 1, "", "prims_rsqrt"], [101, 1, 1, "", "prims_sin"], [101, 1, 1, "", "prims_split_dim"], [101, 1, 1, "", "prims_sub"], [101, 1, 1, "", "prims_sum"], [101, 1, 1, "", "prims_transpose"], [101, 1, 1, "", "prims_view_of"], [101, 1, 1, "", "prims_where"]], "experimental_experiment.torch_interpreter._torch_helper": [[102, 1, 1, "", "make_copy"]], "experimental_experiment.torch_interpreter.dispatcher": [[105, 3, 1, "", "ForceDispatcher"]], "experimental_experiment.torch_interpreter.dispatcher.ForceDispatcher": [[105, 4, 1, "", "fallback"]], "experimental_experiment.torch_interpreter.eval": [[106, 1, 1, "", "discover"], [106, 1, 1, "", "evaluation"], [107, 0, 0, "-", "model_cases"], [106, 1, 1, "", "run_exporter"]], "experimental_experiment.torch_interpreter.eval.model_cases": [[107, 3, 1, "", "AtenAsStrided"], [107, 3, 1, "", "AtenInterpolate"], [107, 3, 1, "", "AtenNonZero"], [107, 3, 1, "", "AtenNonZeroTuple"], [107, 3, 1, "", "AtenRollPos"], [107, 3, 1, "", "AtenRollRelu"], [107, 3, 1, "", "BuildInIsInstance"], [107, 3, 1, "", "BuildInLen"], [107, 3, 1, "", "ComplexPolar"], [107, 3, 1, "", "ControlFlowCond"], [107, 3, 1, "", "ControlFlowCond2Inputs"], [107, 3, 1, "", "ControlFlowCond2Outputs"], [107, 3, 1, "", "ControlFlowCondConstant"], [107, 3, 1, "", "ControlFlowCondNestedModule"], [107, 3, 1, "", "ControlFlowCondNonZero"], [107, 3, 1, "", "ControlFlowNestCond"], [107, 3, 1, "", "ControlFlowScan"], [107, 3, 1, "", "ControlFlowScan2Carried"], [107, 3, 1, "", "ControlFlowScanCDist"], [107, 3, 1, "", "ControlFlowScanCDist2"], [107, 3, 1, "", "ControlFlowScanCDistXY"], [107, 3, 1, "", "CreateFromShape"], [107, 3, 1, "", "CreateFromShapeThroughFunction"], [107, 3, 1, "", "CropLastDimensionWithTensorContent"], [107, 3, 1, "", "CropLastDimensionWithTensorShape"], [107, 3, 1, "", "InplaceAdd"], [107, 3, 1, "", "InplaceAdd2"], [107, 3, 1, "", "InplaceAdd_Mul"], [107, 3, 1, "", "InplaceCloneAdd_"], [107, 3, 1, "", "InplaceSetItemEllipsis_1"], [107, 3, 1, "", "InplaceSetItemEllipsis_2"], [107, 3, 1, "", "InplaceSetItemMask"], [107, 3, 1, "", "InplaceSetItemSquare"], [107, 3, 1, "", "InplaceSetItemSquareAdd"], [107, 3, 1, "", "InplaceSetItemSquareAdd2"], [107, 3, 1, "", "SignatureFloat1"], [107, 3, 1, "", "SignatureInt1"], [107, 3, 1, "", "SignatureInt2"], [107, 3, 1, "", "SignatureListFixedLength"], [107, 3, 1, "", "SignatureListFixedWithNone"], [107, 3, 1, "", "SignatureListVariableLength"], [107, 3, 1, "", "SignatureShapeAsIndex"], [107, 3, 1, "", "TypeBFloat16"]], "experimental_experiment.torch_interpreter.eval.model_cases.AtenAsStrided": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.AtenInterpolate": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.AtenNonZero": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.AtenNonZeroTuple": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.AtenRollPos": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.AtenRollRelu": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.BuildInIsInstance": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.BuildInLen": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ComplexPolar": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowCond": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowCond2Inputs": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowCond2Outputs": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowCondConstant": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowCondNestedModule": [[107, 3, 1, "", "Submodule"], [107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowCondNestedModule.Submodule": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowCondNonZero": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowNestCond": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowScan": [[107, 4, 1, "", "add"], [107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowScan2Carried": [[107, 4, 1, "", "add"], [107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowScanCDist": [[107, 4, 1, "", "dist"], [107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowScanCDist2": [[107, 4, 1, "", "dist"], [107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.ControlFlowScanCDistXY": [[107, 4, 1, "", "dist"], [107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.CreateFromShape": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.CreateFromShapeThroughFunction": [[107, 4, 1, "", "add_one"], [107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.CropLastDimensionWithTensorContent": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.CropLastDimensionWithTensorShape": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceAdd": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceAdd2": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceAdd_Mul": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceCloneAdd_": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceSetItemEllipsis_1": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceSetItemEllipsis_2": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceSetItemMask": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceSetItemSquare": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceSetItemSquareAdd": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.InplaceSetItemSquareAdd2": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.SignatureFloat1": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.SignatureInt1": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.SignatureInt2": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.SignatureListFixedLength": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.SignatureListFixedWithNone": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.SignatureListVariableLength": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.SignatureShapeAsIndex": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.eval.model_cases.TypeBFloat16": [[107, 4, 1, "", "forward"]], "experimental_experiment.torch_interpreter.export_options": [[108, 1, 1, "", "insert_contiguous_between_transpose_and_view"]], "experimental_experiment.torch_interpreter.interpreter": [[110, 3, 1, "", "DynamoInterpreter"]], "experimental_experiment.torch_interpreter.interpreter.DynamoInterpreter": [[110, 4, 1, "", "add_aten_as_function"], [110, 4, 1, "", "call_function"], [110, 4, 1, "", "call_method"], [110, 4, 1, "", "call_module"], [110, 4, 1, "", "flatten_inputs"], [110, 4, 1, "", "get_attr"], [110, 4, 1, "", "get_submodule_name"], [110, 4, 1, "", "getitem"], [110, 4, 1, "", "make_nn_module_with_callable"], [110, 4, 1, "", "output"], [110, 4, 1, "", "placeholder"], [110, 4, 1, "", "register_named_modules"], [110, 4, 1, "", "run_node"]], "experimental_experiment.torch_interpreter.investigate_helper": [[111, 1, 1, "", "prepare_args_kwargs"], [111, 1, 1, "", "run_aligned"], [111, 1, 1, "", "run_fx_node"], [111, 1, 1, "", "validate_fx_outputs"], [111, 1, 1, "", "validate_fx_tensor"]], "experimental_experiment.torch_interpreter.onnx_export": [[112, 3, 1, "", "ParameterNaming"], [112, 3, 1, "", "SubModuleNaming"], [112, 1, 1, "", "is_wrapped"], [112, 1, 1, "", "match_input_parameters"], [112, 1, 1, "", "rewrite_dynamic_shapes"]], "experimental_experiment.torch_interpreter.oxs_dispatcher": [[113, 3, 1, "", "OxsDebugDispatcher"], [113, 3, 1, "", "OxsDispatcher"]], "experimental_experiment.torch_interpreter.oxs_dispatcher.OxsDebugDispatcher": [[113, 4, 1, "", "fallback"]], "experimental_experiment.torch_interpreter.oxs_dispatcher.OxsDispatcher": [[113, 4, 1, "", "fallback"], [113, 5, 1, "", "submodules"]], "experimental_experiment.torch_interpreter.oxs_opset": [[114, 3, 1, "", "OxsOpset"], [114, 3, 1, "", "Var"], [114, 3, 1, "", "VarShapeType"]], "experimental_experiment.torch_interpreter.oxs_opset.OxsOpset": [[114, 4, 1, "", "make_node"]], "experimental_experiment.torch_interpreter.piece_by_piece": [[115, 3, 1, "", "CustomOpStrategy"], [115, 3, 1, "", "ModelDiagnoseOutput"], [115, 3, 1, "", "StatusExport"], [115, 3, 1, "", "StatusExportCode"], [115, 1, 1, "", "trace_execution_piece_by_piece"], [115, 1, 1, "", "trace_forward_execution"], [115, 1, 1, "", "traced_cond"]], "experimental_experiment.torch_interpreter.piece_by_piece.ModelDiagnoseOutput": [[115, 4, 1, "", "add_child"], [115, 4, 1, "", "add_inputs"], [115, 4, 1, "", "add_outputs"], [115, 4, 1, "", "build_c_schema"], [115, 4, 1, "", "build_shape_mapping_indices"], [115, 4, 1, "", "compute_onnx_discrepancies"], [115, 5, 1, "", "custom_op_name"], [115, 4, 1, "", "determine_shape_fct"], [115, 5, 1, "", "dot_name"], [115, 4, 1, "", "draft_export_local"], [115, 4, 1, "", "export_local"], [115, 5, 1, "", "full_name"], [115, 4, 1, "", "get_debug_msg"], [115, 4, 1, "", "get_export_report"], [115, 4, 1, "", "guess_dynamic_dimensions"], [115, 4, 1, "", "guess_dynamic_shape_object"], [115, 4, 1, "", "guess_dynamic_shapes"], [115, 4, 1, "", "is_customized"], [115, 5, 1, "", "module_name_type"], [115, 4, 1, "", "pretty_text"], [115, 4, 1, "", "put_custom_op_inplace"], [115, 4, 1, "", "remove_custom_op_inplace"], [115, 4, 1, "", "to_onnx_local"], [115, 5, 1, "", "true_model_name"], [115, 4, 1, "", "try_export"], [115, 4, 1, "", "verifies"]], "experimental_experiment.torch_interpreter.piece_by_piece.StatusExport": [[115, 4, 1, "", "is_ok"], [115, 4, 1, "", "pretty_text"], [115, 5, 1, "", "short_reason"]], "experimental_experiment.torch_interpreter.piece_by_piece.StatusExportCode": [[115, 4, 1, "", "remove"]], "experimental_experiment.torch_interpreter.piece_by_piece_serialize": [[116, 1, 1, "", "choose_kwargs_for_dynamic_shapes"], [116, 1, 1, "", "deserialize_args"], [116, 1, 1, "", "deserialize_args_kwargs"], [116, 1, 1, "", "extract_names_from_schema"], [116, 1, 1, "", "serialize_args"], [116, 1, 1, "", "serialize_one"], [116, 1, 1, "", "tree_spec_as_name"], [116, 1, 1, "", "tree_spec_from_name"], [116, 1, 1, "", "type_as_str_with_info"]], "experimental_experiment.torch_interpreter.tracing": [[117, 3, 1, "", "CondCCOp"], [117, 3, 1, "", "CustomAttribute"], [117, 3, 1, "", "CustomParameterProxy"], [117, 3, 1, "", "CustomProxy"], [117, 3, 1, "", "CustomProxyFloat"], [117, 3, 1, "", "CustomProxyInt"], [117, 3, 1, "", "CustomTracer"], [117, 1, 1, "", "replace_problematic_function_before_tracing"], [117, 1, 1, "", "setitem_with_transformation"]], "experimental_experiment.torch_interpreter.tracing.CustomProxy": [[117, 4, 1, "", "cat"], [117, 4, 1, "", "instanceof"], [117, 4, 1, "", "length"]], "experimental_experiment.torch_interpreter.tracing.CustomProxyFloat": [[117, 4, 1, "", "instanceof"]], "experimental_experiment.torch_interpreter.tracing.CustomProxyInt": [[117, 4, 1, "", "instanceof"]], "experimental_experiment.torch_interpreter.tracing.CustomTracer": [[117, 4, 1, "", "create_arg"], [117, 4, 1, "", "getattr"], [117, 4, 1, "", "graph_erase_node"], [117, 4, 1, "", "proxy"], [117, 4, 1, "", "register_callable"], [117, 4, 1, "", "remove_inplace"], [117, 4, 1, "", "remove_unnecessary_slices"], [117, 4, 1, "", "trace"]], "experimental_experiment.torch_models": [[120, 1, 1, "", "assert_found"], [118, 0, 0, "-", "diffusion_model_helper"], [119, 0, 0, "-", "dump_helper"], [120, 1, 1, "", "flatten_outputs"], [121, 0, 0, "-", "llama_helper"], [122, 0, 0, "-", "llm_model_helper"], [123, 0, 0, "-", "llm_model_setup"], [124, 0, 0, "-", "mistral_helper"], [125, 0, 0, "-", "phi3_helper"], [126, 0, 0, "-", "phi_helper"], [127, 0, 0, "-", "training_helper"]], "experimental_experiment.torch_models.diffusion_model_helper": [[118, 1, 1, "", "get_stable_diffusion_2_unet"]], "experimental_experiment.torch_models.dump_helper": [[119, 1, 1, "", "assert_all_close"], [119, 1, 1, "", "build_matching_inputs"], [119, 1, 1, "", "dump_onnx"], [119, 1, 1, "", "inputs_from_onnx_model"], [119, 1, 1, "", "reorder_functions_in_proto"], [119, 1, 1, "", "results_to_string"]], "experimental_experiment.torch_models.llama_helper": [[121, 1, 1, "", "get_llama_model"]], "experimental_experiment.torch_models.llm_model_helper": [[122, 1, 1, "", "get_ai21_jamba_15_mini"], [122, 1, 1, "", "get_all_mini_ml_l6_v1"], [122, 1, 1, "", "get_falcon_mamba_7b"], [122, 1, 1, "", "get_llama32_9b_vision"], [122, 1, 1, "", "get_phi2"], [122, 1, 1, "", "get_phi35_mini_instruct"], [122, 1, 1, "", "get_phi35_vision_instruct"], [122, 1, 1, "", "get_phi3_vision_128k_instruct"], [122, 1, 1, "", "get_phi4"], [122, 1, 1, "", "get_smollm_1_7b"], [122, 1, 1, "", "get_tiny_llm"]], "experimental_experiment.torch_models.llm_model_setup": [[123, 3, 1, "", "LLMInputKind"], [123, 1, 1, "", "finalize_llm_setup"], [123, 1, 1, "", "finalize_llm_vision_setup"], [123, 1, 1, "", "get_input_cache"]], "experimental_experiment.torch_models.mistral_helper": [[124, 1, 1, "", "get_mistral_model"]], "experimental_experiment.torch_models.phi3_helper": [[125, 1, 1, "", "get_phi3_model"], [125, 1, 1, "", "has_phi3"]], "experimental_experiment.torch_models.phi_helper": [[126, 1, 1, "", "get_phi_model"]], "experimental_experiment.torch_models.training_helper": [[127, 1, 1, "", "make_aot_ort"]], "experimental_experiment.torch_test_helper": [[128, 1, 1, "", "check_model_ort"], [128, 1, 1, "", "dummy_llm"], [128, 1, 1, "", "export_to_onnx"], [128, 1, 1, "", "to_numpy"]], "experimental_experiment.xbuilder": [[135, 3, 1, "", "FunctionOptions"], [135, 3, 1, "", "GraphBuilder"], [135, 3, 1, "", "InferShapesOptions"], [135, 3, 1, "", "OptimizationOptions"], [135, 3, 1, "", "VirtualTensor"], [129, 0, 0, "-", "_graph_builder_runtime"], [130, 0, 0, "-", "_onnx_helper"], [131, 0, 0, "-", "_shape_helper"], [132, 0, 0, "-", "expression_dimension"], [133, 0, 0, "-", "graph_builder"], [134, 0, 0, "-", "graph_builder_opset"], [136, 0, 0, "-", "model_container"], [137, 0, 0, "-", "optimization_options"], [138, 0, 0, "-", "reverse_graph_builder"], [139, 0, 0, "-", "shape_type_compute"], [140, 0, 0, "-", "type_inference"]], "experimental_experiment.xbuilder.GraphBuilder": [[135, 3, 1, "", "InitializerInfo"], [135, 3, 1, "", "ShapeConstant"], [135, 3, 1, "", "WrapDim"], [135, 3, 1, "", "WrapSym"], [135, 4, 1, "", "add_constant_node"], [135, 4, 1, "", "add_domain"], [135, 4, 1, "", "add_dynamic_object"], [135, 4, 1, "", "add_function"], [135, 4, 1, "", "add_initializer"], [135, 4, 1, "", "add_stat"], [135, 4, 1, "", "compute_constant"], [135, 4, 1, "", "constant_folding"], [135, 4, 1, "", "do_not_remove"], [135, 4, 1, "", "elem_size"], [135, 4, 1, "", "empty_copy"], [135, 4, 1, "", "get_attribute"], [135, 4, 1, "", "get_attribute_with_default"], [135, 4, 1, "", "get_attributes_with_default"], [135, 4, 1, "", "get_constant"], [135, 4, 1, "", "get_constant_or_attribute"], [135, 4, 1, "", "get_debug_msg"], [135, 4, 1, "", "get_dynamic_dimension"], [135, 4, 1, "", "get_initializer_size"], [135, 4, 1, "", "get_input_dynamic_shape"], [135, 4, 1, "", "get_is_dimension"], [135, 4, 1, "", "get_local_function"], [135, 4, 1, "", "get_local_function_outputs"], [135, 4, 1, "", "get_opset"], [135, 4, 1, "", "get_rank"], [135, 4, 1, "", "get_registered_constraints"], [135, 4, 1, "", "get_sequence"], [135, 4, 1, "", "get_shape"], [135, 4, 1, "", "get_type"], [135, 4, 1, "", "get_type_known"], [135, 4, 1, "", "has_dynamic_object"], [135, 4, 1, "", "has_local_function"], [135, 4, 1, "", "has_name"], [135, 4, 1, "", "has_rank"], [135, 4, 1, "", "has_shape"], [135, 4, 1, "", "has_type"], [135, 4, 1, "", "infer_shapes"], [135, 4, 1, "", "inline_functions"], [135, 4, 1, "", "insert_and_remove_nodes"], [135, 4, 1, "", "io_names"], [135, 4, 1, "", "is_constant"], [135, 4, 1, "", "is_constant_or_attribute"], [135, 4, 1, "", "is_dynamic_shape"], [135, 4, 1, "", "is_exact_same_constant"], [135, 4, 1, "", "is_sequence"], [135, 5, 1, "", "main_opset"], [135, 4, 1, "", "make_dynamic_object"], [135, 4, 1, "", "make_initializer"], [135, 4, 1, "", "make_key"], [135, 4, 1, "", "make_local_function"], [135, 4, 1, "", "make_new_dynamic_shape"], [135, 4, 1, "", "make_node"], [135, 4, 1, "", "make_nodes"], [135, 4, 1, "", "make_shape_from_results"], [135, 4, 1, "", "make_subset_builder"], [135, 4, 1, "", "make_tensor_input"], [135, 4, 1, "", "make_tensor_output"], [135, 4, 1, "", "make_tensor_sequence_input"], [135, 4, 1, "", "make_tensor_value_info_from_name"], [135, 4, 1, "", "make_torch_tensor_from_np_array"], [135, 4, 1, "", "move_initializers_to_constant"], [135, 4, 1, "", "optimize"], [135, 4, 1, "", "optimize_node_subgraphs_inplace"], [135, 4, 1, "", "optimize_with_patterns"], [135, 4, 1, "", "parse_dimension_expression"], [135, 4, 1, "", "pretty_node"], [135, 4, 1, "", "pretty_text"], [135, 4, 1, "", "process"], [135, 4, 1, "", "rank"], [135, 4, 1, "", "register_constraint_dimension"], [135, 4, 1, "", "register_dynamic_objects_from_dim"], [135, 4, 1, "", "register_dynamic_objects_from_shape"], [135, 4, 1, "", "register_users"], [135, 4, 1, "", "remove_identity_nodes"], [135, 4, 1, "", "remove_unused"], [135, 4, 1, "", "rename_in_local_functions"], [135, 4, 1, "", "rename_names"], [135, 4, 1, "", "same_dimension"], [135, 4, 1, "", "same_shape"], [135, 4, 1, "", "select_outputs"], [135, 4, 1, "", "set_name"], [135, 4, 1, "", "set_rank"], [135, 4, 1, "", "set_sequence"], [135, 4, 1, "", "set_shape"], [135, 4, 1, "", "set_type"], [135, 4, 1, "", "set_type_shape_or_rank"], [135, 4, 1, "", "set_value_shape"], [135, 4, 1, "", "simple_update_value_shape_with_node"], [135, 4, 1, "", "to_onnx"], [135, 4, 1, "", "unique_dimension_name"], [135, 4, 1, "", "unique_name"], [135, 4, 1, "", "unique_node_name"], [135, 4, 1, "", "update_node_constant"], [135, 4, 1, "", "value_as_shape"], [135, 4, 1, "", "verify_dynamic_shape"]], "experimental_experiment.xbuilder.GraphBuilder.InitializerInfo": [[135, 4, 1, "", "add_source"]], "experimental_experiment.xbuilder._onnx_helper": [[130, 1, 1, "", "choose_consistent_domain_opset"], [130, 1, 1, "", "clean_shapes"], [130, 1, 1, "", "compatible_opsets"], [130, 1, 1, "", "element_wise_binary_op_types"], [130, 1, 1, "", "element_wise_op_cmp_types"], [130, 1, 1, "", "enumerate_subgraphs"], [130, 1, 1, "", "same_function_proto"], [130, 1, 1, "", "unary_like_op_types"]], "experimental_experiment.xbuilder._shape_helper": [[131, 1, 1, "", "compatible_dimensions"], [131, 1, 1, "", "compatible_shapes"]], "experimental_experiment.xbuilder.expression_dimension": [[132, 3, 1, "", "Expression"], [132, 1, 1, "", "parse_expression"], [132, 1, 1, "", "parse_expression_tokens"]], "experimental_experiment.xbuilder.expression_dimension.Expression": [[132, 4, 1, "", "isidentifier"]], "experimental_experiment.xbuilder.graph_builder_opset": [[134, 3, 1, "", "Opset"]], "experimental_experiment.xbuilder.model_container": [[136, 3, 1, "", "TorchModelContainer"]], "experimental_experiment.xbuilder.model_container.TorchModelContainer": [[136, 4, 1, "", "load"], [136, 4, 1, "", "save"], [136, 4, 1, "", "to_ir"]], "experimental_experiment.xbuilder.optimization_options": [[137, 3, 1, "", "OptimizationOptions"]], "experimental_experiment.xbuilder.reverse_graph_builder": [[138, 3, 1, "", "CustomBuilderEmitter"], [138, 1, 1, "", "to_graph_builder_code"], [138, 1, 1, "", "to_graph_pattern_matching"]], "experimental_experiment.xbuilder.shape_type_compute": [[139, 1, 1, "", "broadcast_shape"], [139, 1, 1, "", "prepare_inputs_homogeneous_operator"], [139, 1, 1, "", "set_shape_type_custom"], [139, 1, 1, "", "set_shape_type_op_any"], [139, 1, 1, "", "set_type_shape_binary_op"], [139, 1, 1, "", "set_type_shape_gemm"], [139, 1, 1, "", "set_type_shape_matmul"], [139, 1, 1, "", "set_type_shape_reduce_op"], [139, 1, 1, "", "set_type_shape_reshape"], [139, 1, 1, "", "set_type_shape_unary_op"], [139, 1, 1, "", "set_type_shape_unary_op_abs"]], "experimental_experiment.xbuilder.type_inference": [[140, 1, 1, "", "infer_types"]], "experimental_experiment.xoptim": [[142, 3, 1, "", "EasyPatternOptimization"], [142, 3, 1, "", "GraphBuilderPatternOptimization"], [142, 3, 1, "", "MatchResult"], [142, 3, 1, "", "PatternOptimization"], [142, 1, 1, "", "get_pattern"], [142, 1, 1, "", "get_pattern_list"], [141, 0, 0, "-", "graph_builder_optim"], [143, 0, 0, "-", "order_optim"], [144, 0, 0, "-", "patterns"], [166, 0, 0, "-", "patterns_api"], [170, 0, 0, "-", "patterns_exp"], [175, 0, 0, "-", "patterns_fix"], [177, 0, 0, "-", "patterns_investigation"], [179, 0, 0, "-", "patterns_ml"], [188, 0, 0, "-", "patterns_ort"], [142, 1, 1, "", "remove_constants_for_initializers"], [191, 0, 0, "-", "unfused"]], "experimental_experiment.xoptim.EasyPatternOptimization": [[142, 4, 1, "", "add_validate_param"], [142, 4, 1, "", "apply"], [142, 4, 1, "", "apply_pattern"], [142, 4, 1, "", "display_pattern"], [142, 4, 1, "", "match"], [142, 4, 1, "", "match_pattern"], [142, 4, 1, "", "post_apply_pattern"], [142, 4, 1, "", "pretty_matched_pairs"], [142, 4, 1, "", "validate_attribute_mapping"], [142, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.GraphBuilderPatternOptimization": [[142, 4, 1, "", "apply_match"], [142, 4, 1, "", "do_not_remove"], [142, 4, 1, "", "get_attribute"], [142, 4, 1, "", "get_attributes_with_default"], [142, 4, 1, "", "get_axis"], [142, 4, 1, "", "get_computed_constant"], [142, 4, 1, "", "get_constant_or_attribute"], [142, 4, 1, "", "get_constant_scalar"], [142, 4, 1, "", "get_constant_shape"], [142, 4, 1, "", "get_rank"], [142, 4, 1, "", "get_registered_constraints"], [142, 4, 1, "", "get_shape"], [142, 4, 1, "", "get_type"], [142, 4, 1, "", "has_processor"], [142, 4, 1, "", "has_rank"], [142, 4, 1, "", "has_shape"], [142, 4, 1, "", "has_type"], [142, 5, 1, "", "input_names"], [142, 5, 1, "", "inputs"], [142, 4, 1, "", "is_constant"], [142, 4, 1, "", "is_constant_scalar"], [142, 4, 1, "", "is_output"], [142, 4, 1, "", "is_used"], [142, 4, 1, "", "is_used_by_subgraph"], [142, 4, 1, "", "is_used_more_than_once"], [142, 4, 1, "", "is_used_only_by"], [142, 4, 1, "", "iter_nodes"], [142, 5, 1, "", "main_opset"], [142, 4, 1, "", "make_node"], [142, 4, 1, "", "make_node_check_opset"], [142, 4, 1, "", "next_node"], [142, 4, 1, "", "next_nodes"], [142, 4, 1, "", "node_before"], [142, 5, 1, "", "nodes"], [142, 5, 1, "", "opsets"], [142, 4, 1, "", "optimize"], [142, 4, 1, "", "optimize_node_subgraphs_inplace"], [142, 5, 1, "", "output_names"], [142, 5, 1, "", "outputs"], [142, 4, 1, "", "pretty_text"], [142, 4, 1, "", "same_shape"], [142, 4, 1, "", "try_infer_shape"], [142, 4, 1, "", "try_infer_type"], [142, 4, 1, "", "unique_name"]], "experimental_experiment.xoptim.MatchResult": [[142, 4, 1, "", "debug_string"]], "experimental_experiment.xoptim.PatternOptimization": [[142, 4, 1, "", "apply"], [142, 4, 1, "", "enumerate_matches"], [142, 4, 1, "", "match"], [142, 4, 1, "", "none"]], "experimental_experiment.xoptim.order_optim": [[143, 3, 1, "", "OrderAlgorithm"], [143, 3, 1, "", "OrderOptimization"]], "experimental_experiment.xoptim.order_optim.OrderOptimization": [[143, 4, 1, "", "optimize"], [143, 4, 1, "", "random_order"]], "experimental_experiment.xoptim.patterns": [[144, 3, 1, "", "AlmostDoNothingPattern"], [144, 1, 1, "", "get_default_patterns"], [145, 0, 0, "-", "onnx_any"], [146, 0, 0, "-", "onnx_cast"], [147, 0, 0, "-", "onnx_clip"], [148, 0, 0, "-", "onnx_constants"], [149, 0, 0, "-", "onnx_conv"], [150, 0, 0, "-", "onnx_dropout"], [151, 0, 0, "-", "onnx_equal"], [152, 0, 0, "-", "onnx_expand"], [153, 0, 0, "-", "onnx_functions"], [154, 0, 0, "-", "onnx_layer_normalization"], [155, 0, 0, "-", "onnx_matmul"], [156, 0, 0, "-", "onnx_mul"], [157, 0, 0, "-", "onnx_reduce"], [158, 0, 0, "-", "onnx_reshape"], [159, 0, 0, "-", "onnx_rotary"], [160, 0, 0, "-", "onnx_sequence"], [161, 0, 0, "-", "onnx_slice"], [162, 0, 0, "-", "onnx_split"], [163, 0, 0, "-", "onnx_sub"], [164, 0, 0, "-", "onnx_transpose"], [165, 0, 0, "-", "onnx_unsqueeze"]], "experimental_experiment.xoptim.patterns.AlmostDoNothingPattern": [[144, 4, 1, "", "apply"], [144, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_any": [[145, 3, 1, "", "IdentityPattern"], [145, 3, 1, "", "SameChildrenPattern"]], "experimental_experiment.xoptim.patterns.onnx_any.IdentityPattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_any.SameChildrenPattern": [[145, 4, 1, "", "apply"], [145, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast": [[146, 3, 1, "", "CastCastBinaryPattern"], [146, 3, 1, "", "CastOpCastPattern"], [146, 3, 1, "", "CastPattern"], [146, 3, 1, "", "ComputationCastOpCastPattern"]], "experimental_experiment.xoptim.patterns.onnx_cast.CastCastBinaryPattern": [[146, 4, 1, "", "apply"], [146, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast.CastOpCastPattern": [[146, 4, 1, "", "apply"], [146, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast.CastPattern": [[146, 4, 1, "", "apply"], [146, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_cast.ComputationCastOpCastPattern": [[146, 4, 1, "", "apply"], [146, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_clip": [[147, 3, 1, "", "ClipClipPattern"]], "experimental_experiment.xoptim.patterns.onnx_clip.ClipClipPattern": [[147, 4, 1, "", "apply"], [147, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_constants": [[148, 3, 1, "", "ConstantToInitializerPattern"]], "experimental_experiment.xoptim.patterns.onnx_constants.ConstantToInitializerPattern": [[148, 4, 1, "", "apply"], [148, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_conv": [[149, 3, 1, "", "ConvBiasNullPattern"]], "experimental_experiment.xoptim.patterns.onnx_conv.ConvBiasNullPattern": [[149, 4, 1, "", "apply"], [149, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_dropout": [[150, 3, 1, "", "DropoutPattern"]], "experimental_experiment.xoptim.patterns.onnx_dropout.DropoutPattern": [[150, 4, 1, "", "apply"], [150, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_equal": [[151, 3, 1, "", "UnsqueezeEqualPattern"]], "experimental_experiment.xoptim.patterns.onnx_equal.UnsqueezeEqualPattern": [[151, 4, 1, "", "apply"], [151, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand": [[152, 3, 1, "", "ExpandBroadcastPattern"], [152, 3, 1, "", "ExpandPattern"], [152, 3, 1, "", "ExpandSwapPattern"]], "experimental_experiment.xoptim.patterns.onnx_expand.ExpandBroadcastPattern": [[152, 4, 1, "", "apply"], [152, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ExpandPattern": [[152, 4, 1, "", "apply"], [152, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_expand.ExpandSwapPattern": [[152, 4, 1, "", "apply"], [152, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_functions": [[153, 3, 1, "", "GeluPattern"], [153, 3, 1, "", "LeakyReluPattern"], [153, 3, 1, "", "SoftmaxCrossEntropyLossCastPattern"]], "experimental_experiment.xoptim.patterns.onnx_functions.GeluPattern": [[153, 4, 1, "", "apply_pattern"], [153, 4, 1, "", "match_pattern"], [153, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.patterns.onnx_functions.LeakyReluPattern": [[153, 4, 1, "", "apply_pattern"], [153, 4, 1, "", "match_pattern"], [153, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.patterns.onnx_functions.SoftmaxCrossEntropyLossCastPattern": [[153, 4, 1, "", "apply_pattern"], [153, 4, 1, "", "match_pattern"], [153, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization": [[154, 3, 1, "", "BatchNormalizationPattern"], [154, 3, 1, "", "BatchNormalizationTrainingPattern"], [154, 3, 1, "", "CastLayerNormalizationCastPattern"], [154, 3, 1, "", "LayerNormalizationPattern"], [154, 3, 1, "", "LayerNormalizationScalePattern"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.BatchNormalizationPattern": [[154, 4, 1, "", "apply"], [154, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.BatchNormalizationTrainingPattern": [[154, 4, 1, "", "apply"], [154, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.CastLayerNormalizationCastPattern": [[154, 4, 1, "", "apply"], [154, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.LayerNormalizationPattern": [[154, 4, 1, "", "apply"], [154, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_layer_normalization.LayerNormalizationScalePattern": [[154, 4, 1, "", "apply"], [154, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul": [[155, 3, 1, "", "GemmTransposePattern"], [155, 3, 1, "", "MatMulAddPattern"], [155, 3, 1, "", "MatMulReshape2Of3Pattern"], [155, 3, 1, "", "MulMulMatMulPattern"], [155, 3, 1, "", "ReshapeMatMulReshapePattern"], [155, 3, 1, "", "SwitchReshapeActivationPattern"], [155, 3, 1, "", "TransposeMatMulPattern"], [155, 3, 1, "", "TransposeReshapeMatMulPattern"]], "experimental_experiment.xoptim.patterns.onnx_matmul.GemmTransposePattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.MatMulAddPattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.MatMulReshape2Of3Pattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.MulMulMatMulPattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.ReshapeMatMulReshapePattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.SwitchReshapeActivationPattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.TransposeMatMulPattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_matmul.TransposeReshapeMatMulPattern": [[155, 4, 1, "", "apply"], [155, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_mul": [[156, 3, 1, "", "MulMulMulScalarPattern"], [156, 3, 1, "", "SwitchOrderBinaryPattern"]], "experimental_experiment.xoptim.patterns.onnx_mul.MulMulMulScalarPattern": [[156, 4, 1, "", "apply"], [156, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_mul.SwitchOrderBinaryPattern": [[156, 3, 1, "", "BroadcastType"], [156, 4, 1, "", "apply"], [156, 4, 1, "", "match"], [156, 4, 1, "", "switch_order"]], "experimental_experiment.xoptim.patterns.onnx_reduce": [[157, 3, 1, "", "ReduceSumNormalizePattern"]], "experimental_experiment.xoptim.patterns.onnx_reduce.ReduceSumNormalizePattern": [[157, 4, 1, "", "apply"], [157, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape": [[158, 3, 1, "", "ReduceReshapePattern"], [158, 3, 1, "", "Reshape2Of3Pattern"], [158, 3, 1, "", "ReshapePattern"], [158, 3, 1, "", "ReshapeReshapeBinaryPattern"], [158, 3, 1, "", "ReshapeReshapePattern"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ReduceReshapePattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.Reshape2Of3Pattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ReshapePattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ReshapeReshapeBinaryPattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_reshape.ReshapeReshapePattern": [[158, 4, 1, "", "apply"], [158, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_rotary": [[159, 3, 1, "", "RotaryConcatPartPattern"]], "experimental_experiment.xoptim.patterns.onnx_rotary.RotaryConcatPartPattern": [[159, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_sequence": [[160, 3, 1, "", "SequenceConstructAtPattern"]], "experimental_experiment.xoptim.patterns.onnx_sequence.SequenceConstructAtPattern": [[160, 4, 1, "", "apply"], [160, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_slice": [[161, 3, 1, "", "SliceSlicePattern"]], "experimental_experiment.xoptim.patterns.onnx_slice.SliceSlicePattern": [[161, 4, 1, "", "apply"], [161, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_split": [[162, 3, 1, "", "SlicesSplitPattern"], [162, 3, 1, "", "SplitConcatPattern"]], "experimental_experiment.xoptim.patterns.onnx_split.SlicesSplitPattern": [[162, 4, 1, "", "apply"], [162, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_split.SplitConcatPattern": [[162, 4, 1, "", "apply"], [162, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_sub": [[163, 3, 1, "", "Sub1MulPattern"]], "experimental_experiment.xoptim.patterns.onnx_sub.Sub1MulPattern": [[163, 4, 1, "", "apply"], [163, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_transpose": [[164, 3, 1, "", "TransposeEqualReshapePattern"], [164, 3, 1, "", "TransposeReshapeTransposePattern"], [164, 3, 1, "", "TransposeTransposePattern"]], "experimental_experiment.xoptim.patterns.onnx_transpose.TransposeEqualReshapePattern": [[164, 4, 1, "", "apply"], [164, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_transpose.TransposeReshapeTransposePattern": [[164, 4, 1, "", "apply"], [164, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_transpose.TransposeTransposePattern": [[164, 4, 1, "", "apply"], [164, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_unsqueeze": [[165, 3, 1, "", "SqueezeUnsqueezePattern"], [165, 3, 1, "", "UnsqueezeUnsqueezePattern"]], "experimental_experiment.xoptim.patterns.onnx_unsqueeze.SqueezeUnsqueezePattern": [[165, 4, 1, "", "apply"], [165, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns.onnx_unsqueeze.UnsqueezeUnsqueezePattern": [[165, 4, 1, "", "apply"], [165, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_api": [[166, 3, 1, "", "OnnxEasyPatternOptimization"], [166, 1, 1, "", "make_pattern_from_onnx"], [166, 1, 1, "", "pattern_table_doc"], [166, 1, 1, "", "string_to_elem_type"]], "experimental_experiment.xoptim.patterns_exp": [[167, 0, 0, "-", "binary_operators"], [168, 0, 0, "-", "constant_of_shape_scatter_nd"], [169, 0, 0, "-", "constants"], [170, 1, 1, "", "get_experimental_patterns"], [171, 0, 0, "-", "simple_rotary"], [172, 0, 0, "-", "unary_operators"], [173, 0, 0, "-", "where_replace"]], "experimental_experiment.xoptim.patterns_exp.binary_operators": [[167, 3, 1, "", "AddAddMulMulBroadcastPattern"], [167, 3, 1, "", "AddAddMulMulPattern"], [167, 3, 1, "", "AddMulBroadcastPattern"], [167, 3, 1, "", "AddMulPattern"], [167, 3, 1, "", "AddMulSharedInputBroadcastPattern"], [167, 3, 1, "", "AddMulSharedInputPattern"], [167, 3, 1, "", "AddMulTransposePattern"], [167, 3, 1, "", "MulSigmoidPattern"], [167, 3, 1, "", "NegXplus1Pattern"], [167, 3, 1, "", "SubMulBroadcastPattern"], [167, 3, 1, "", "SubMulPattern"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.AddAddMulMulPattern": [[167, 4, 1, "", "apply"], [167, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.AddMulPattern": [[167, 4, 1, "", "apply"], [167, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.AddMulSharedInputPattern": [[167, 4, 1, "", "apply"], [167, 4, 1, "", "can_fuse"], [167, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.AddMulTransposePattern": [[167, 4, 1, "", "apply"], [167, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.MulSigmoidPattern": [[167, 4, 1, "", "apply"], [167, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.NegXplus1Pattern": [[167, 4, 1, "", "apply"], [167, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.binary_operators.SubMulPattern": [[167, 4, 1, "", "apply"], [167, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.constant_of_shape_scatter_nd": [[168, 3, 1, "", "ConstantOfShapeScatterNDPattern"], [168, 3, 1, "", "MaskedShapeScatterNDPattern"]], "experimental_experiment.xoptim.patterns_exp.constant_of_shape_scatter_nd.ConstantOfShapeScatterNDPattern": [[168, 4, 1, "", "apply"], [168, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.constant_of_shape_scatter_nd.MaskedShapeScatterNDPattern": [[168, 4, 1, "", "apply"], [168, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.constants": [[169, 3, 1, "", "TriMatrixPattern"]], "experimental_experiment.xoptim.patterns_exp.constants.TriMatrixPattern": [[169, 4, 1, "", "apply"], [169, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.simple_rotary": [[171, 3, 1, "", "SimpleRotaryPattern"]], "experimental_experiment.xoptim.patterns_exp.simple_rotary.SimpleRotaryPattern": [[171, 4, 1, "", "apply"], [171, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.unary_operators": [[172, 3, 1, "", "TransposeCastPattern"]], "experimental_experiment.xoptim.patterns_exp.unary_operators.TransposeCastPattern": [[172, 4, 1, "", "apply"], [172, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_exp.where_replace": [[173, 3, 1, "", "ReplaceZeroPattern"]], "experimental_experiment.xoptim.patterns_exp.where_replace.ReplaceZeroPattern": [[173, 4, 1, "", "apply"], [173, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_fix": [[174, 0, 0, "-", "add_reduction_scatter_nd"], [175, 1, 1, "", "get_fix_patterns"]], "experimental_experiment.xoptim.patterns_fix.add_reduction_scatter_nd": [[174, 3, 1, "", "AddReductionScatterND"]], "experimental_experiment.xoptim.patterns_fix.add_reduction_scatter_nd.AddReductionScatterND": [[174, 4, 1, "", "apply"], [174, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_investigation": [[177, 3, 1, "", "SimplifyingEasyPatternFunction"], [176, 0, 0, "-", "element_wise"], [177, 1, 1, "", "get_investigation_patterns"], [178, 0, 0, "-", "llm_patterns"]], "experimental_experiment.xoptim.patterns_investigation.SimplifyingEasyPatternFunction": [[177, 4, 1, "", "post_apply_pattern"]], "experimental_experiment.xoptim.patterns_investigation.element_wise": [[176, 3, 1, "", "BinaryInvestigation"]], "experimental_experiment.xoptim.patterns_investigation.element_wise.BinaryInvestigation": [[176, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_investigation.llm_patterns": [[178, 3, 1, "", "FunctionPackedMatMulPattern"], [178, 3, 1, "", "FunctionPowTanhPattern"], [178, 3, 1, "", "FunctionSplitRotaryMulPattern"]], "experimental_experiment.xoptim.patterns_investigation.llm_patterns.FunctionPackedMatMulPattern": [[178, 4, 1, "", "apply"], [178, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_investigation.llm_patterns.FunctionPowTanhPattern": [[178, 4, 1, "", "apply_pattern"], [178, 4, 1, "", "match_pattern"]], "experimental_experiment.xoptim.patterns_investigation.llm_patterns.FunctionSplitRotaryMulPattern": [[178, 4, 1, "", "apply_pattern"], [178, 4, 1, "", "match_pattern"]], "experimental_experiment.xoptim.patterns_ml": [[179, 1, 1, "", "get_ml_patterns"], [180, 0, 0, "-", "tree_ensemble"]], "experimental_experiment.xoptim.patterns_ml.tree_ensemble": [[180, 3, 1, "", "TreeEnsembleRegressorConcatPattern"], [180, 3, 1, "", "TreeEnsembleRegressorMulPattern"]], "experimental_experiment.xoptim.patterns_ml.tree_ensemble.TreeEnsembleRegressorConcatPattern": [[180, 4, 1, "", "apply"], [180, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ml.tree_ensemble.TreeEnsembleRegressorMulPattern": [[180, 4, 1, "", "apply"], [180, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort": [[181, 0, 0, "-", "activation"], [182, 0, 0, "-", "activation_grad"], [183, 0, 0, "-", "attention_patterns"], [184, 0, 0, "-", "batch_normalization"], [185, 0, 0, "-", "fused_conv"], [186, 0, 0, "-", "fused_matmul"], [187, 0, 0, "-", "gather_grad"], [188, 1, 1, "", "get_onnxruntime_patterns"], [189, 0, 0, "-", "llm_optim"], [190, 0, 0, "-", "simplified_layer_normalization"]], "experimental_experiment.xoptim.patterns_ort.activation": [[181, 3, 1, "", "BiasGeluPattern"], [181, 3, 1, "", "BiasSoftmaxPattern"], [181, 3, 1, "", "FastGeluPattern"], [181, 3, 1, "", "GeluErfPattern"], [181, 3, 1, "", "GeluOrtPattern"], [181, 3, 1, "", "QuickGeluPattern"]], "experimental_experiment.xoptim.patterns_ort.activation.BiasGeluPattern": [[181, 4, 1, "", "apply"], [181, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.activation.BiasSoftmaxPattern": [[181, 4, 1, "", "apply"], [181, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.activation.FastGeluPattern": [[181, 4, 1, "", "apply"], [181, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.activation.GeluErfPattern": [[181, 4, 1, "", "apply_pattern"], [181, 4, 1, "", "match_pattern"], [181, 4, 1, "", "validate_mapping"]], "experimental_experiment.xoptim.patterns_ort.activation.QuickGeluPattern": [[181, 4, 1, "", "apply"], [181, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.activation_grad": [[182, 3, 1, "", "SoftmaxGradPattern"]], "experimental_experiment.xoptim.patterns_ort.activation_grad.SoftmaxGradPattern": [[182, 4, 1, "", "apply"], [182, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.attention_patterns": [[183, 3, 1, "", "AttentionPattern"]], "experimental_experiment.xoptim.patterns_ort.attention_patterns.AttentionPattern": [[183, 4, 1, "", "apply"], [183, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.batch_normalization": [[184, 3, 1, "", "OrtBatchNormalizationTrainingPattern"]], "experimental_experiment.xoptim.patterns_ort.batch_normalization.OrtBatchNormalizationTrainingPattern": [[184, 4, 1, "", "apply"], [184, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_conv": [[185, 3, 1, "", "FusedConvPattern"]], "experimental_experiment.xoptim.patterns_ort.fused_conv.FusedConvPattern": [[185, 4, 1, "", "apply"], [185, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul": [[186, 3, 1, "", "FusedMatMulDivPattern"], [186, 3, 1, "", "FusedMatMulPattern"], [186, 3, 1, "", "FusedMatMulTransposePattern"], [186, 3, 1, "", "FusedMatMulx2Pattern"], [186, 3, 1, "", "ReshapeGemmPattern"], [186, 3, 1, "", "TransposeFusedMatMulBPattern"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.FusedMatMulDivPattern": [[186, 4, 1, "", "apply"], [186, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.FusedMatMulPattern": [[186, 4, 1, "", "apply"], [186, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.FusedMatMulTransposePattern": [[186, 4, 1, "", "apply"], [186, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.FusedMatMulx2Pattern": [[186, 4, 1, "", "apply"], [186, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.ReshapeGemmPattern": [[186, 4, 1, "", "apply"], [186, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.fused_matmul.TransposeFusedMatMulBPattern": [[186, 4, 1, "", "apply"], [186, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.gather_grad": [[187, 3, 1, "", "GatherGradPattern"]], "experimental_experiment.xoptim.patterns_ort.gather_grad.GatherGradPattern": [[187, 4, 1, "", "apply"], [187, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.llm_optim": [[189, 3, 1, "", "RotaryEmbeddingPattern"]], "experimental_experiment.xoptim.patterns_ort.llm_optim.RotaryEmbeddingPattern": [[189, 4, 1, "", "apply"], [189, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization": [[190, 3, 1, "", "SimplifiedLayerNormalizationPattern"], [190, 3, 1, "", "SkipLayerNormalizationPattern"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization.SimplifiedLayerNormalizationPattern": [[190, 4, 1, "", "apply"], [190, 4, 1, "", "match"]], "experimental_experiment.xoptim.patterns_ort.simplified_layer_normalization.SkipLayerNormalizationPattern": [[190, 4, 1, "", "apply"], [190, 4, 1, "", "match"]], "experimental_experiment.xoptim.unfused": [[191, 1, 1, "", "unfused_nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "exception", "Python exception"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:exception", "3": "py:class", "4": "py:method", "5": "py:property"}, "terms": {"": [10, 15, 92, 93, 94, 95, 96, 101, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 261, 267, 269, 270, 271], "0": [3, 4, 6, 9, 10, 12, 17, 18, 19, 20, 21, 26, 51, 52, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 92, 93, 94, 95, 96, 101, 105, 106, 107, 109, 111, 112, 113, 114, 115, 117, 127, 128, 130, 135, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 249, 251, 253, 257, 258, 264, 265, 267, 268, 269, 270], "00": [111, 194, 195, 203, 204, 205, 207, 209, 211, 213, 228, 236, 238, 239, 247, 257, 258, 267, 268], "000": [92, 93, 200, 203, 207, 211, 228, 239, 249, 258], "0000": [109, 112], "00000": 242, "000000": [195, 207, 249], "000000e": 111, "000008": 207, "000009": 249, "00001": 242, "000012": 249, "000015": [207, 249], "000016": [], "000019": [207, 249], "00002": 242, "000020": [205, 207], "000021": 205, "000024": 249, "000025": 207, "000026": 207, "00003": 242, "000030": [207, 249], "000033": 205, "000038": 207, "00004": 242, "000042": [], "000043": 207, "000044": 207, "000045": 207, "000046": 207, "000047": 207, "000048": 207, "000049": 207, "00005": 242, "000050": 207, "000056": 207, "000057": 249, "000059": 249, "00006": 242, "000062": 207, "000064": 207, "000065": 207, "000067": 207, "000068": 207, "00007": 242, "000071": 207, "000073": 207, "00008": 242, "00009": 242, "000091": [], "000097": 200, "00010": 242, "000101": 207, "00010133980525768903": 207, "00010145132649152617": 207, "00010192200011260866": 249, "000102": [], "00010598200003641978": [], "00010628899985931639": 249, "00010707599994930206": 249, "00010972899997341301": [], "00010987000041495776": 249, "00011": 242, "00011090499992860714": 253, "000111": [], "00011115799986782804": [], "0001131349999923259": [], "000115": 249, "00011588499978643085": 249, "00012": 242, "00012081049087077247": 207, "000121": 207, "00012267099373275414": 228, "000123": 205, "000126": 207, "00012630200217245147": 228, "00012699199987764587": 249, "00012797799990948988": 249, "00012818598770536482": 228, "0001285429999597909": [], "00013": 242, "00013174691782688906": 219, "0001317569985985756": 228, "0001320449955528602": 228, "0001336939967586659": 228, "0001351539999632223": [], "00013585301348939538": 228, "00013662099809153005": 228, "00013733400555793196": 228, "00013751999358646572": 228, "00013789199147140607": 228, "00013917499973103986": 249, "00013952799781691283": 228, "0001397379965055734": 228, "00013994799519423395": 228, "00014": 242, "00014003500109538436": 228, "00014064900005905656": 249, "0001409980104654096": 228, "00014124500000889384": [], "00014128500333754346": 228, "00014285900397226214": 228, "00014305799413705245": 228, "00014306599769042805": 228, "0001439319967175834": 228, "000144": 207, "0001459740087739192": 228, "000146": 207, "00014720799981660093": 249, "0001476519973948598": 228, "00014789899432798848": 228, "00014944799477234483": 228, "00015": 242, "0001514590039732866": 228, "00015165000513661653": 228, "0001526525493489491": 219, "000155": [], "00015538500883849338": 228, "00015912499657133594": 228, "0001591440086485818": 228, "0001596389920450747": 228, "00016": 242, "00016076132305897772": [], "000164": 200, "00016476198652526364": 228, "000166": 207, "0001661589994910173": 228, "0001676660103839822": 228, "00016822899999624497": [], "00016917999994348065": [], "00017": 242, "000170": 200, "00017095100020014797": 249, "000172": [205, 207], "00017202205318816205": 207, "000173": 207, "000173841996002011": 228, "000178": [203, 207], "00017848800007413956": 249, "00018": 242, "000180": 207, "0001800537610582496": 207, "00018078999994486367": [], "00018153598648495972": 228, "00018165100482292473": 228, "0001818290002120193": 200, "000182": 200, "00018430400814395398": 228, "0001854499998898973": [], "000188": 200, "00018921001174021512": 228, "00019": 242, "000193": 207, "00019362599414307624": 228, "000194": 200, "000195": 200, "00019520599016686901": 228, "000198": 200, "0001983599941013381": 228, "00020": 242, "0002007650036830455": 228, "0002011279866565019": 228, "00020128698815824464": 228, "0002014479978242889": 228, "000202": 207, "00020226900232955813": 228, "00020257899450371042": 228, "00020345000666566193": 228, "000205": [200, 207], "00020604899987120007": 253, "0002062719941022806": 228, "000207": 200, "00020742399647133425": 228, "000208": 200, "00021": 242, "0002119630080414936": 228, "00021267700503813103": 228, "000213": [200, 203], "00021369899332057685": 228, "0002137810006388463": 228, "00021736099006375298": 228, "0002174": 201, "000218": 200, "00022099500347394496": 228, "00022111900034360588": 228, "00022256100055528805": 228, "0002227019940619357": 228, "00022318900300888345": 228, "000224": [200, 205, 207], "0002243919989268761": 200, "0002281540000694804": 228, "00023": 242, "00023188299996945716": [], "00023241600024448417": 249, "0002329110211576335": 228, "000233": 205, "0002353209929424338": 228, "00023558399993817147": [], "0002374749892624095": 228, "00023889500880613923": 228, "00023889799922471866": 228, "00024007700267247856": 228, "000241": [200, 249], "00024280966237163603": 205, "000243": [205, 207], "00024333199985449028": [], "00024405600561294705": 228, "000246": 200, "00024763400870142505": 228, "000257": 205, "00026": 242, "00026056999195134267": 228, "00026441601221449673": 228, "00026462300593266264": 228, "000265": 207, "00026791998971020803": 228, "00026810899726115167": 228, "0002683900165720843": 228, "0002689320099307224": 228, "00026978999812854454": 228, "0002699020114960149": 228, "00027": 242, "000270": 249, "00027058590800271105": 219, "000272": 200, "0002720642078202218": 216, "0002740909985732287": 228, "00027438699976300995": 249, "00027579999732552096": 228, "00028": 242, "000280": 249, "00028137129325799627": 219, "0002825109986588359": 228, "000283": 205, "00028348384412027597": 205, "00028686600126093253": 228, "00028710500191664323": 228, "00028798499261029065": 228, "0002895809957408346": 228, "00029": 242, "000290": 203, "000290568990749307": 228, "000291": 205, "000296": [], "00029728899971814826": 228, "00030": 242, "000302": 207, "000302817238670344": 205, "000303": 205, "000304": 207, "00030415500077651814": 228, "00030466200405498967": 228, "000306": 207, "000307": [], "00031101864580231346": 219, "00032": 242, "00032061100023383915": 249, "00032245100010186434": 249, "000324": 207, "00032406898390036076": 228, "000327": 203, "00032823599997300335": [], "00032966199796646833": 228, "00033": 242, "00033013800566550344": 228, "00033230700000785873": 249, "00033377300132997334": 228, "000336": 200, "0003367609997440013": 249, "000338": 200, "00033824099955381826": 200, "000339": 200, "00034": 242, "00034290101029910147": 228, "00034353700175415725": 228, "000345": 200, "0003470090086921118": 228, "00034777400037455664": 249, "000349352000057479": 93, "000351": 207, "000352": 200, "00035235999894212": 200, "000354": 200, "00035403600486461073": 228, "00035725799534702674": 228, "0003577850147848949": 228, "00036": 242, "00036033200012752786": 228, "000361": [], "000362": 249, "0003633899978012778": 228, "00036891300010211125": [], "00036958400005460135": 92, "00037": 242, "00037859700023545884": 249, "0003888280116370879": 228, "00039": 242, "00039391099562635645": 228, "00039450299982490833": 93, "000403": 207, "0004113059985684231": 228, "00041245400029765733": 249, "00042": 242, "00042293995440766975": 219, "00042318199848523363": 228, "0004234040097799152": 228, "000424": 207, "000425": 200, "00042915101221296936": 228, "00043": 242, "000430": 200, "00043014800030505285": 228, "000436": 200, "0004374850000203878": 249, "00044": 242, "00044008199984091334": 249, "000445": 207, "00044869499834021553": 228, "0004520799921010621": 228, "0004544649927993305": 228, "000456": 205, "00045752099993023876": [], "0004619398607301088": 219, "00046992699935799465": 228, "000477": 200, "000489": 200, "00049": 242, "0004967470013070852": 228, "0004981929999985368": [], "0005013399999143076": [], "0005157869964023121": 228, "0005181129999982659": 249, "000519": 205, "0005196295543422972": 219, "0005376979970606044": 228, "0005759481610236131": 219, "000576": 205, "0005786661612424487": 219, "000589": 207, "000590": 200, "0005938300000707386": [], "000597": 207, "000599": 207, "000601": 207, "000607": 207, "0006071647130518922": 219, "000613": 207, "000614": 205, "000616": 205, "000626": 207, "000631": 207, "000634": 207, "000635": 207, "0006416807930874684": 207, "000642": 207, "000649": 207, "0006491793661314391": 207, "0006504120001409319": 249, "000651": 207, "0006518419977510348": 228, "0006528320009238087": 200, "000653": 200, "0006558623772832772": 219, "0006638829945586622": 228, "0006739360175280334": 207, "000674": 207, "0006744000129401684": 228, "0006744909999270021": 249, "000678": 207, "0006783051929722216": 207, "000684": 207, "000684496671464581": 207, "0006848350437041538": 207, "000685": 207, "0006879623979330063": [], "0006896273684190935": 207, "000690": 207, "000697": 203, "000700": 207, "0007011750000174288": [], "0007059930001105386": 249, "0007140373650187307": 219, "000715": 200, "000720": 207, "0007200378094956577": 207, "0007423379938700236": 228, "0007477519975509495": 228, "0007836780471339302": 205, "000784": 205, "0007899280001311126": 249, "00080": 242, "000802": 207, "0008166290062945336": 228, "0008203470000580637": [], "0008252018333532062": 219, "0008298356551676989": [], "000851": 203, "0008511715070787332": 219, "0008730196218114846": 219, "0008771919999617239": 249, "0008787743281573057": 216, "000884": 207, "0009010080001417009": [], "0009016175327949478": 207, "000902": 207, "000908": 207, "000950": 207, "00096": 242, "000960": 207, "000999": 205, "001": [92, 93, 196, 197, 202, 203, 207, 228, 249, 257, 267], "001020": 205, "001088": 203, "0010882789008990602": 203, "001093": [205, 207], "001094": 201, "001104": 207, "0011063482611651427": 219, "0011117361406822917": 219, "0011331509999763512": 93, "0011698477338398423": 219, "001173": 207, "001174": 207, "0011772960000371313": [], "0011774730000979616": 92, "0011803459999555344": 93, "001185": 205, "001217": 203, "0012261480078450404": 228, "0012481940000270697": [], "001250": 200, "0012960039998688444": 249, "001306": 200, "001308": 205, "0013105594592492447": 219, "001313906999939718": [], "001385": 207, "001395": 207, "0014024811098352075": 210, "0014058530068723485": 228, "001419": 207, "0014194360805070564": 207, "0014253464397422568": 219, "0014846519916318357": 228, "001502": 205, "0015021790940308063": 205, "0015135138111317145": 219, "001515": 207, "0015150120161706582": 228, "0015269200680454332": 219, "00154": 242, "001558": 205, "001567": 200, "0015853615327661903": 219, "001608": 207, "00162": 242, "001642": 205, "0016452607151254345": 219, "001674": 203, "00169": 242, "0016942510001172195": 249, "001707": 207, "001712": 207, "001720": 207, "001779": 200, "001793874462405861": 219, "001795277000042006": [], "0017957130112336017": 228, "001821": 207, "0018313946399454533": 219, "0019263709165381708": 219, "00195312": 200, "0019615298296192804": 219, "002": [196, 197, 200, 202, 203, 207, 228, 249], "002000": 207, "0020183759999099493": [], "0020226596567606892": 203, "002023": 203, "002035": 207, "002048662005108781": 228, "002068": 207, "002095": 200, "0021097844879451383": 219, "002159": 205, "002217433422628052": 219, "00223082799493568": 228, "002262299616445615": 219, "00228474000323331": 228, "002320": 207, "002332": 203, "002350": 207, "002370": 203, "002399967997916974": 203, "002400": 203, "0024461110000402186": [], "002462": 207, "0025560081888748925": 219, "002571067230685268": 219, "002596911304140301": 219, "0026028189895441756": 228, "002635": 203, "0026354479996371083": 203, "002674": 203, "0026902310055447742": 228, "0027640321040425736": 219, "002782": 205, "002786626275726197": 219, "002801": 203, "002809795542497976": 219, "0028149299978394993": 228, "002819": 203, "0028190020020701922": 203, "0029622109998399537": 92, "0029978743856185967": 219, "003": [196, 197, 203, 207, 228], "003028": 203, "0030436619997544767": 249, "003075333996093832": 228, "003111": 207, "003152": 203, "003152430999762146": 203, "003222": 200, "0032805673999973806": 194, "003281": 194, "003287": 203, "003287102998001501": 203, "003327302300785028": 219, "003404": 194, "0034040907999587943": 194, "0034363865852355957": 197, "003444660000013755": [], "0034533269999883487": [], "003467559814453125": 197, "003516147276544738": 219, "00353544": 201, "003541": 205, "003541014933216502": 205, "0035699260006367695": 203, "003570": 203, "003583": 207, "003596998118933412": 219, "003613": 205, "003739": 200, "003749": 200, "0037998580466028407": 219, "003801": 203, "004": [92, 93, 196, 197, 203, 207, 228], "004016680999484379": 228, "004044640444287022": 203, "004045": 203, "00408375401457306": 228, "004093693750544642": 219, "004137": 203, "004137020805703489": 203, "004140": 203, "004156": 200, "0042": 237, "004271472019650317": 219, "004314": 194, "004314023240003735": 194, "004532": 203, "004594": 203, "004654": 203, "004669641863668201": 219, "004729617000066355": [], "004826152082167923": 219, "004872": [], "005": [92, 93, 196, 197, 200, 203, 207, 228], "005004160443962273": 219, "005022": 203, "005037": 203, "005037054666495856": 203, "005214": 203, "0053": 230, "005381": 203, "005599": 249, "005745961999991778": 93, "005803250564235515": 219, "00583350200008681": 93, "005967639999880703": 92, "005982": 203, "005982100952158882": 203, "006": [196, 197, 198, 200, 203, 207, 228, 268], "0061127098600263705": 194, "006113": 194, "006317": 203, "006496929148884729": 219, "006536013000072671": [], "007": [196, 197, 200, 203, 207, 228, 249, 267, 268], "007235225691783011": 219, "007423783999911393": 253, "00745626809162382": 219, "007672169999977996": 93, "007687200885247539": 219, "007744": 207, "007759615481418791": 219, "007767": 203, "007774": 208, "007816831999889473": 93, "007823421057183724": 219, "007828533000065363": 92, "007840": 207, "008": [196, 197, 200, 203, 207, 228, 249], "0081": 229, "008390": 203, "0084779705295972": 219, "0087237": 201, "008802093999975114": [], "009": [196, 197, 203, 207, 228], "009063375785070308": [], "00914": 242, "009283433000064178": [], "009755": 207, "00it": 207, "01": [17, 95, 115, 195, 205, 207, 209, 213, 257, 258, 267, 268, 269, 270], "010": [196, 197, 200, 203, 207, 228], "010085": 207, "0102354305631973n33nan": [], "010380585000007159": [], "010925": 236, "010961083999973198": 253, "011": [196, 197, 203, 207, 228, 249], "0112905859999728": [], "011719": 203, "011722": 207, "01182": 242, "012": [196, 197, 203, 207, 228], "01209": 242, "01219": 242, "0125165": 201, "012683398000035595": [], "012760": 207, "012796351686120033": [], "012949258255610453": 219, "013": [196, 197, 203, 207, 228, 249], "013004": 207, "01301494613289833": 93, "013164340832402624": 219, "013376": 207, "01356": 242, "01385": 242, "014": [196, 197, 203, 207, 228, 249, 268], "01424": 242, "01426": 242, "01435": 242, "01458035": 209, "01476": 242, "01478": 242, "01482": 242, "01483": 242, "01494": 242, "01496": 242, "014960877597332": 268, "015": [196, 197, 203, 207, 228], "015047300999981417": [], "015180855989456177": [], "015239317000123265": 249, "015326305000030516": [], "0154": 230, "01547": 242, "01576": 242, "01583": 242, "01586": 242, "01597538600003645": [], "016": [196, 197, 203, 207, 228], "01611590012907982": 93, "016950073999851156": 253, "017": [196, 197, 200, 203, 207, 228, 249], "017001853358547377": 219, "017455": 195, "0178": 238, "018": [196, 197, 203, 207, 228], "018089336692754848": 219, "01816": 242, "018165699999940443": [], "01825": 242, "018647113798023283": 219, "01867": 242, "018742": 207, "01879": 242, "019": [196, 197, 203, 207, 228, 267], "0199": [], "019906": 207, "0199997425079346": [214, 219, 220], "0199999809265137": [214, 219, 220], "01it": [207, 213], "02": [194, 195, 203, 205, 207, 213, 214, 219, 220, 222, 230, 238, 258], "020": [196, 197, 203, 207, 228], "02034604363143444": [], "02086576260626316": [], "021": [196, 197, 203, 207, 228], "02105127": 201, "021083": 201, "021614074707": 204, "021732": 207, "021796": 207, "022": [196, 197, 203, 207, 228], "022808": 207, "023": [196, 197, 203, 207, 228, 268], "0233": 238, "0234808921813965": 219, "02371906116604805": [], "024": [196, 197, 203, 207, 228], "024577584227218348": [], "025": [196, 197, 203, 207, 228], "0250798e": 201, "0253": [], "025308": 228, "02531449800005703": [], "0255": [], "025597514293015895": 219, "025842": 207, "026": [196, 197, 203, 207, 228, 268], "026259422302246": 219, "02647053424324339": 219, "027": [196, 197, 203, 207, 228], "027651": 207, "02783561": 201, "028": [196, 197, 203, 207, 228, 268], "028021": 195, "028219053999919197": 253, "02824485": 201, "0284998754505068e": 228, "0289477109909058": 210, "029": [196, 197, 203, 207, 228], "029233980923891068": [], "029790710657835007": [], "02999877929688": [214, 219, 220], "0299997329711914": [214, 219, 220], "0299999713897705": [214, 219, 220], "02it": 207, "03": [194, 195, 203, 205, 207, 209, 213, 251, 268], "030": [196, 197, 203, 207, 228], "030237600207328796": 93, "030627": 195, "031": [196, 197, 203, 207, 228], "0311586261773601e": 219, "03173226084221493": [], "031797": 207, "0318636894226074": [], "03198922": 201, "032": [196, 197, 203, 207, 228], "032051": 207, "0321": [], "032364": 207, "03255894407629967": 240, "0327473": 201, "033": [196, 197, 203, 207, 228, 268], "033886": 207, "033960": 207, "034": [196, 197, 203, 207, 228], "034294": 207, "0343": 230, "034631773829460144": 93, "034662": 207, "034699979158177e": 249, "035": [196, 197, 203, 207, 228], "035643": 207, "03593648805029013": 210, "036": [196, 197, 203, 207, 228], "036408": 207, "03678741299995636": [], "037": [196, 197, 203, 207, 228, 267], "0374": [], "037565231323242": [], "037566184997559": [], "038": [196, 197, 203, 207, 228, 267], "038041": 207, "038402080535889": 219, "038434292000033565": [], "039": [196, 197, 203, 207, 228], "039349": 207, "03it": [207, 213], "04": [194, 196, 203, 205, 207, 213, 264], "040": [196, 197, 207, 228], "040179": 207, "0405488050000713": 253, "0408": 204, "041": [196, 197, 203, 207, 228, 267], "0413504": 201, "0415397": 201, "042": [196, 197, 203, 207, 228], "04206786": 201, "04214493900008165": 253, "042299999833631e": 249, "043": [196, 197, 203, 207, 228], "0430238764733075": [], "043081283569336e": 210, "043832714483141896": [], "04395725329717": [], "044": [196, 197, 207, 228], "04402320832014084": [], "04443645499986815": 253, "04471499": 238, "044715": [153, 181], "045": [196, 197, 207, 228, 257], "0451422780752182": [], "0454277992248535": 219, "0459": 238, "046": [196, 197, 203, 207, 228], "0469818115234375": 219, "047": [196, 197, 203, 207, 228], "047733": 207, "048": [196, 197, 203, 207, 228], "0483195036649704": [], "048405": 247, "049": [196, 197, 203, 207, 228], "0490": 209, "04904842376709": 219, "0490533113479614": 210, "0496": 238, "049982": 207, "0499999523162842": [214, 219, 220], "05": [95, 119, 128, 194, 195, 203, 205, 207, 209, 213, 214, 219, 220, 222, 228, 230, 238, 249, 251, 268], "050": [196, 197, 203, 207, 228], "051": [196, 197, 203, 207, 228], "0512806089999458": [], "0516": 230, "05161839084078868": 216, "052": [196, 197, 203, 207, 228], "05230712890625": [], "052599": 207, "053": [196, 197, 207, 228], "0531158447265625e": 197, "05360487717039445": 210, "054": [196, 197, 203, 207, 228], "05410693": 201, "054399983033363e": [], "05490697312375738": [], "055": [196, 197, 203, 207, 228, 267, 268], "0555": [], "056": [196, 197, 207, 228], "05616349999945669": 241, "05647500000031869": 242, "05657948926091194": 111, "05694430000039574": 242, "05698019999999815": 242, "057": [196, 197, 203, 207, 228], "05702159999964351": 242, "05719518661499": 219, "05731345999993209": 242, "057364700000107405": 241, "05737370000042574": 241, "05740846000007878": 241, "057411193847656": 219, "05755440000029921": 241, "05769109999982902": 241, "05779750000056083": 242, "05787190000046394": 241, "05797959999927116": 242, "058": [196, 197, 207, 228, 268], "05806791": 201, "0582107305526733": 111, "058210849761963": 111, "058211326599121": 219, "058259600000383216": 241, "059": [196, 197, 228, 268], "05914619999930437": 242, "0594156980514526": 210, "05950727": 201, "059824224561452866": [], "05it": 213, "06": [9, 194, 197, 205, 207, 213, 228, 240, 247, 249, 253], "060": [196, 197, 207, 228], "06080954521894455": [], "061": [196, 197, 203, 228, 267], "06117696400008299": [], "061180114746094": 219, "06142359673976898": 210, "0615": [], "061519622802734": 219, "062": [196, 197, 228, 247], "062261": 207, "06268533319234848": [], "063": [196, 197, 203, 207, 228], "06314025819301605": [], "06390984356403351": [], "064": [196, 197, 203, 207, 228], "064220428466797": 219, "06429": 201, "065": [196, 197, 203, 228], "0656113": 228, "066": [196, 197, 203, 228], "066242": 201, "0663717": 232, "0664": 230, "06641028821468353": [], "06690350366646752": 210, "066953659058": 204, "067": [196, 197, 203, 228, 268], "0670713484287262": 93, "067491": [], "067513465881348": 219, "068": [196, 197, 203, 207, 228], "068477": 207, "068504": 195, "069": [196, 197, 203, 207], "06979835033416748": [], "06999969482422": [214, 219, 220], "0699999332427979": [214, 219, 220], "06it": 213, "07": [9, 57, 92, 93, 111, 207, 210, 213, 221, 228, 231, 240], "070": [196, 197, 207], "0704": 229, "070444": 205, "07044439600213082": 205, "071": [196, 197, 203], "072": [196, 197, 203], "072291851043701": [], "0722919702529907": [], "073": [112, 196, 197, 207, 247], "0731": 230, "0733": 112, "0736066997051239": [], "074": [196, 197, 207], "074300011325249e": [], "074462413787842": 219, "075": [196, 197, 207], "075143": 236, "075381": 201, "0757": [], "076": [196, 197, 203], "07648692280054092": 219, "077": [196, 197, 203, 267, 268], "077300": 207, "0773153": 201, "078": [196, 197, 203, 207], "07825997471809387": 219, "07834": 201, "079": [196, 197], "0790200e": 201, "0796": 209, "0799996852874756": [214, 219, 220], "07it": 213, "08": [9, 57, 92, 93, 205, 207, 210, 213], "080": [196, 197, 203, 207], "0800000429153442": [214, 219, 220], "08000183105469": [214, 219, 220], "08039881030304565": 216, "080641269683838": 219, "080930709838867": 219, "080956": 205, "081": [196, 197, 203, 207], "0816839933395386": 210, "082": [196, 197, 203, 207, 247], "082031": 203, "08262448012828827": 219, "083": [196, 197, 203], "0833314290000544": [], "083333333332": 219, "083500006250688e": [], "084": [196, 197, 207, 267], "0841875076293945": 210, "084501": 207, "08454269170761108": 219, "085": [196, 197, 203, 207], "0855": [], "086": [196, 197, 203, 247, 268], "0865": 109, "086551189422607": 219, "08673566100003427": [], "087": [109, 196, 197], "088": [196, 197], "088063": 201, "0880863964557648": 111, "088086408376694": 111, "088086414337158": 111, "088086438179016": 111, "0885": [], "089": [196, 197], "08900838": 201, "089016": 201, "0893016": 201, "0894305557012558": 93, "08949406": 201, "089844": 203, "089899397920817e": 228, "0899996757507324": [214, 219, 220], "08it": 213, "09": [9, 201, 203, 205, 207, 210, 213, 240, 251], "090": [196, 197], "09000015258789": [214, 219, 220], "0903535": 201, "0905": 230, "09066598117351532": 268, "091": [196, 197, 203], "091382026672363": 216, "091651": 207, "092": [196, 197], "093": [196, 197, 207], "09373682": 201, "094": [196, 197, 203, 207, 267], "09411007910966873": [], "0943": 230, "09472627192735672": [], "094850": 207, "095": [196, 197, 207], "095261335372925": [], "095609188079834": 219, "096": [196, 197, 207, 247, 267], "096831202507019": 210, "097": [196, 197], "097587": 207, "098": [196, 197, 207], "09810782968997955": [], "0984085599581401": 210, "098768": 201, "099": [196, 197, 203], "0999999046325684": [214, 219, 220], "09it": 194, "0e10": 210, "0f": [203, 205, 207], "0m": [253, 267, 268], "0x7f6d04f30040": [], "0x7f6d04f300e0": [], "0x7f6d04f30180": [], "0x7f6d04f30220": [], "0x7f6d04f302c0": [], "0x7f6d04f30360": [], "0x7f6d04f304a0": [], "0x7f6d04f30540": [], "0x7f6d04f305e0": [], "0x7f6d04f30680": [], "0x7f6d04f30720": [], "0x7f6d04f307c0": [], "0x7f6d04f30860": [], "0x7f6d04f30900": [], "0x7f6d04f309a0": [], "0x7f6d04f30a40": [], "0x7f6d04f30ae0": [], "0x7f6d04f30b80": [], "0x7f6d04f30c20": [], "0x7f6d04f30cc0": [], "0x7f6d04f30d60": [], "0x7f6d04f30e00": [], "0x7f6d04f30ea0": [], "0x7f6d04f30f40": [], "0x7f6d04f30fe0": [], "0x7f6d04f31080": [], "0x7f6d04f311c0": [], "0x7f6d04f31260": [], "0x7f6d04f31300": [], "0x7f6d04f31440": [], "0x7f6d04f314e0": [], "0x7f6d04f31620": [], "0x7f6d04f316c0": [], "0x7f6d04f31760": [], "0x7f6d04f318a0": [], "0x7f6d04f319e0": [], "0x7f6d04f31a80": [], "0x7f6d04f31b20": [], "0x7f6d04f31d00": [], "0x7f6d04f31da0": [], "0x7f6d04f31e40": [], "0x7f6d04f31ee0": [], "0x7f6d04f31f80": [], "0x7f6d04f32020": [], "0x7f6d04f320c0": [], "0x7f6d04f32160": [], "0x7f6d04f32200": [], "0x7f6d04f322a0": [], "0x7f6d04f32340": [], "0x7f6d04f323e0": [], "0x7f6d04f32480": [], "0x7f6d04f32520": [], "0x7f6d04f325c0": [], "0x7f6d04f32660": [], "0x7f6d04f327a0": [], "0x7f6d04f32840": [], "0x7f6d04f328e0": [], "0x7f6d04f32980": [], "0x7f6d04f32a20": [], "0x7f6d04f32b60": [], "0x7f6d04f32c00": [], "0x7f6d04f32ca0": [], "0x7f6d04f32d40": [], "0x7f6d04f32e80": [], "0x7f6d04f32fc0": [], "0x7f6d04f33060": [], "0x7f6d04f331a0": [], "0x7f6d04f33240": [], "0x7f6d04f332e0": [], "0x7f6d04f33380": [], "0x7f6d04f33420": [], "0x7f6d04f334c0": [], "0x7f6d04f336a0": [], "0x7f6d04f33740": [], "0x7f6d04f337e0": [], "0x7f6d04f33880": [], "0x7f6d04f33920": [], "0x7f6d04f339c0": [], "0x7f6d04f33a60": [], "0x7f6d04f33b00": [], "0x7f6d04f33ba0": [], "0x7f6d04f33ce0": [], "0x7f6d04f33d80": [], "0x7f6d04f33e20": [], "0x7f6d04f33ec0": [], "0x7f6d04f33f60": [], "0x7f6d04f38220": [], "0x7f6d04f382c0": [], "0x7f6d04f38360": [], "0x7f6d04f384a0": [], "0x7f6d04f38540": [], "0x7f6d04f385e0": [], "0x7f6d04f38680": [], "0x7f6d04f38720": [], "0x7f6d04f387c0": [], "0x7f6d04f38900": [], "0x7f6d04f389a0": [], "0x7f6d04f38a40": [], "0x7f6d04f38ae0": [], "0x7f6d04f38b80": [], "0x7f6d04f38c20": [], "0x7f6d04f38cc0": [], "0x7f6d04f38d60": [], "0x7f6d04f38e00": [], "0x7f6d04f38ea0": [], "0x7f6d04f38f40": [], "0x7f6d04f38fe0": [], "0x7f6d04f39080": [], "0x7f6d04f391c0": [], "0x7f6d04f39260": [], "0x7f6d04f39300": [], "0x7f6d04f393a0": [], "0x7f6d04f39620": [], "0x7f6d04f396c0": [], "0x7f6d04f39760": [], "0x7f6d04f39800": [], "0x7f6d04f398a0": [], "0x7f6d04f39940": [], "0x7f6d04f399e0": [], "0x7f6d04f39a80": [], "0x7f6d04f39c60": [], "0x7f6d04f39d00": [], "0x7f6d04f39da0": [], "0x7f6d04f39e40": [], "0x7f6d04f39ee0": [], "0x7f6d04f3a020": [], "0x7f6d04f3a0c0": [], "0x7f6d04f3a200": [], "0x7f6d04f3a2a0": [], "0x7f6d04f3a340": [], "0x7f6d04f3a3e0": [], "0x7f6d04f3a480": [], "0x7f6d04f3a520": [], "0x7f6d04f3a5c0": [], "0x7f6d04f3a700": [], "0x7f6d04f3a7a0": [], "0x7f6d04f3a840": [], "0x7f6d04f3a8e0": [], "0x7f6d04f3a980": [], "0x7f6d04f3aa20": [], "0x7f6d04f3aac0": [], "0x7f6d04f3ab60": [], "0x7f6d04f3aca0": [], "0x7f6d04f3ad40": [], "0x7f6d04f3ade0": [], "0x7f6d04f3ae80": [], "0x7f6d04f3af20": [], "0x7f6d04f3b060": [], "0x7f6d04f3b100": [], "0x7f6d04f3b1a0": [], "0x7f6d04f3b240": [], "0x7f6d04f3b2e0": [], "0x7f6d04f3b380": [], "0x7f6d04f3b420": [], "0x7f6d04f3b4c0": [], "0x7f6d04f3b560": [], "0x7f6d04f3b600": [], "0x7f6d04f3b6a0": [], "0x7f6d04f3b7e0": [], "0x7f6d04f3b880": [], "0x7f6d04f3b920": [], "0x7f6d04f3b9c0": [], "0x7f6d04f3bb00": [], "0x7f6d04f3bba0": [], "0x7f6d04f3bc40": [], "0x7f6d04f3bce0": [], "0x7f6d04f3bd80": [], "0x7f6d04f3be20": [], "0x7f6d04f3bec0": [], "0x7f6d04f3bf60": [], "0x7f6d04f44040": [], "0x7f6d04f440e0": [], "0x7f6d04f44180": [], "0x7f6d04f44220": [], "0x7f6d04f442c0": [], "0x7f6d04f44360": [], "0x7f6d04f44400": [], "0x7f6d04f444a0": [], "0x7f6d04f445e0": [], "0x7f6d04f44680": [], "0x7f6d04f44720": [], "0x7f6d04f447c0": [], "0x7f6d04f44860": [], "0x7f6d04f44900": [], "0x7f6d04f449a0": [], "0x7f6d04f44a40": [], "0x7f6d04f44ae0": [], "0x7f6d04f44c20": [], "0x7f6d04f44cc0": [], "0x7f6d04f44e00": [], "0x7f6d04f44ea0": [], "0x7f6d04f44f40": [], "0x7f6d04f44fe0": [], "0x7f6d04f45080": [], "0x7f6d04f45120": [], "0x7f6d04f451c0": [], "0x7f6d04f45260": [], "0x7f6d04f453a0": [], "0x7f6d04f45440": [], "0x7f6d04f454e0": [], "0x7f6d04f45580": [], "0x7f6d04f45620": [], "0x7f6d04f456c0": [], "0x7f6d04f45760": [], "0x7f6d04f45800": [], "0x7f6d04f458a0": [], "0x7f6d04f45940": [], "0x7f6d04f459e0": [], "0x7f6d04f45a80": [], "0x7f6d04f45b20": [], "0x7f6d04f45bc0": [], "0x7f6d04f45c60": [], "0x7f6d04f45d00": [], "0x7f6d04f45da0": [], "0x7f6d04f45e40": [], "0x7f6d04f45ee0": [], "0x7f6d04f45f80": [], "0x7f6d04f46020": [], "0x7f6d04f460c0": [], "0x7f6d04f46160": [], "0x7f6d04f46200": [], "0x7f6d04f462a0": [], "0x7f6d04f46340": [], "0x7f6d04f463e0": [], "0x7f6d04f46480": [], "0x7f6d04f46520": [], "0x7f6d04f465c0": [], "0x7f6d04f46660": [], "0x7f6d04f46700": [], "0x7f6d04f467a0": [], "0x7f6d04f46840": [], "0x7f6d04f468e0": [], "0x7f6d04f46ac0": [], "0x7f6d04f46c00": [], "0x7f6d04f46ca0": [], "0x7f6d04f46d40": [], "0x7f6d04f46de0": [], "0x7f6d04f46e80": [], "0x7f6d04f46f20": [], "0x7f6d04f46fc0": [], "0x7f6d04f47060": [], "0x7f6d04f47100": [], "0x7f6d04f471a0": [], "0x7f6d04f47240": [], "0x7f6d04f472e0": [], "0x7f6d04f47380": [], "0x7f6d04f47420": [], "0x7f6d04f474c0": [], "0x7f6d04f47560": [], "0x7f6d04f47600": [], "0x7f6d04f476a0": [], "0x7f6d04f47740": [], "0x7f6d04f477e0": [], "0x7f6d04f47880": [], "0x7f6d04f47920": [], "0x7f6d04f479c0": [], "0x7f6d04f47a60": [], "0x7f6d04f47b00": [], "0x7f6d04f47ba0": [], "0x7f6d04f47c40": [], "0x7f6d04f47ce0": [], "0x7f6d04f47e20": [], "0x7f6d04f47ec0": [], "0x7f6d04f47f60": [], "0x7f6d04f4c040": [], "0x7f6d04f4c0e0": [], "0x7f6d04f4c220": [], "0x7f6d04f4c2c0": [], "0x7f6d04f4c360": [], "0x7f6d04f4c400": [], "0x7f6d04f4c540": [], "0x7f6d04f4c5e0": [], "0x7f6d04f4c680": [], "0x7f6d04f4c720": [], "0x7f6d04f4c7c0": [], "0x7f6d04f4c860": [], "0x7f6d04f4c900": [], "0x7f6d04f4c9a0": [], "0x7f6d04f4ca40": [], "0x7f6d04f4cae0": [], "0x7f6d04f4cb80": [], "0x7f6d04f4cc20": [], "0x7f6d04f4ccc0": [], "0x7f6d04f4cd60": [], "0x7f6d04f4ce00": [], "0x7f6d04f4cea0": [], "0x7f6d04f4cf40": [], "0x7f6d04f4cfe0": [], "0x7f6d04f4d120": [], "0x7f6d04f4d1c0": [], "0x7f6d04f4d260": [], "0x7f6d04f4d300": [], "0x7f6d04f4d3a0": [], "0x7f6d04f4d440": [], "0x7f6d04f4d4e0": [], "0x7f6d04f4d580": [], "0x7f6d04f4d620": [], "0x7f6d04f4d6c0": [], "0x7f6d04f4d760": [], "0x7f6d04f4d800": [], "0x7f6d04f4d8a0": [], "0x7f6d04f4d940": [], "0x7f6d04f4d9e0": [], "0x7f6d04f4da80": [], "0x7f6d04f4db20": [], "0x7f6d04f4dbc0": [], "0x7f6d04f4dc60": [], "0x7f6d04f4dd00": [], "0x7f6d04f4dda0": [], "0x7f6d04f4dee0": [], "0x7f6d04f4df80": [], "0x7f6d04f4e020": [], "0x7f6d04f4e0c0": [], "0x7f6d04f4e160": [], "0x7f6d04f4e200": [], "0x7f6d04f4e2a0": [], "0x7f6d04f4e340": [], "0x7f6d04f4e3e0": [], "0x7f6d04f4e480": [], "0x7f6d04f4e520": [], "0x7f6d04f4e5c0": [], "0x7f6d04f4e660": [], "0x7f6d04f4e7a0": [], "0x7f6d04f4e840": [], "0x7f6d04f4e8e0": [], "0x7f6d04f4e980": [], "0x7f6d04f4ea20": [], "0x7f6d04f4eac0": [], "0x7f6d04f4eb60": [], "0x7f6d04f4ec00": [], "0x7f6d04f4eca0": [], "0x7f6d04f4ed40": [], "0x7f6d04f4ede0": [], "0x7f6d04f4ee80": [], "0x7f6d04f4ef20": [], "0x7f6d04f4f060": [], "0x7f6d04f4f100": [], "0x7f6d04f4f240": [], "0x7f6d04f4f2e0": [], "0x7f6d04f4f380": [], "0x7f6d04f4f420": [], "0x7f6d04f4f4c0": [], "0x7f6d04f4f560": [], "0x7f6d04f4f600": [], "0x7f6d04f4f6a0": [], "0x7f6d04f4f740": [], "0x7f6d04f4f7e0": [], "0x7f6d04f4f880": [], "0x7f6d04f4f920": [], "0x7f6d04f4f9c0": [], "0x7f6d04f4fb00": [], "0x7f6d04f4fba0": [], "0x7f6d04f4fc40": [], "0x7f6d04f4fce0": [], "0x7f6d04f4fd80": [], "0x7f6d04f4fe20": [], "0x7f6d04f4fec0": [], "0x7f6d04f4ff60": [], "0x7f6d04f60040": [], "0x7f6d04f600e0": [], "0x7f6d04f60180": [], "0x7f6d04f60220": [], "0x7f6d04f602c0": [], "0x7f6d04f60360": [], "0x7f6d04f60400": [], "0x7f6d04f604a0": [], "0x7f6d04f60540": [], "0x7f6d04f605e0": [], "0x7f6d04f60680": [], "0x7f6d04f60720": [], "0x7f6d04f607c0": [], "0x7f6d04f60860": [], "0x7f6d04f60900": [], "0x7f6d04f609a0": [], "0x7f6d04f60a40": [], "0x7f6d04f60ae0": [], "0x7f6d04f60b80": [], "0x7f6d04f60c20": [], "0x7f6d04f60cc0": [], "0x7f6d04f60d60": [], "0x7f6d04f60e00": [], "0x7f6d04f60ea0": [], "0x7f6d04f60f40": [], "0x7f6d04f60fe0": [], "0x7f6d04f61080": [], "0x7f6d04f61120": [], "0x7f6d04f611c0": [], "0x7f6d04f61260": [], "0x7f6d04f61300": [], "0x7f6d04f613a0": [], "0x7f6d04f61440": [], "0x7f6d04f614e0": [], "0x7f6d04f61580": [], "0x7f6d04f61620": [], "0x7f6d04f616c0": [], "0x7f6d04f61760": [], "0x7f6d04f61800": [], "0x7f6d04f618a0": [], "0x7f6d04f61940": [], "0x7f6d04f619e0": [], "0x7f6d04f61a80": [], "0x7f6d04f61b20": [], "0x7f6d04f61bc0": [], "0x7f6d04f61c60": [], "0x7f6d04f61d00": [], "0x7f6d04f61da0": [], "0x7f6d04f61e40": [], "0x7f6d04f61ee0": [], "0x7f6d04f61f80": [], "0x7f6d04f62020": [], "0x7f6d04f620c0": [], "0x7f6d04f62160": [], "0x7f6d05141120": [], "0x7f6d051411c0": [], "0x7f6d051414e0": [], "0x7f6d05141580": [], "0x7f6d05141620": [], "0x7f6d051416c0": [], "0x7f6d05141800": [], "0x7f6d051418a0": [], "0x7f6d05141940": [], "0x7f6d051419e0": [], "0x7f6d05141b20": [], "0x7f6d05141bc0": [], "0x7f6d05141c60": [], "0x7f6d05141d00": [], "0x7f6d05141da0": [], "0x7f6d05141e40": [], "0x7f6d05141ee0": [], "0x7f6d05142020": [], "0x7f6d051420c0": [], "0x7f6d05142160": [], "0x7f6d05142200": [], "0x7f6d051422a0": [], "0x7f6d05142340": [], "0x7f6d051423e0": [], "0x7f6d05142480": [], "0x7f6d05142520": [], "0x7f6d051425c0": [], "0x7f6d05142660": [], "0x7f6d05142700": [], "0x7f6d051427a0": [], "0x7f6d05142840": [], "0x7f6d051428e0": [], "0x7f6d05142980": [], "0x7f6d05142a20": [], "0x7f6d05142ac0": [], "0x7f6d05142b60": [], "0x7f6d05142c00": [], "0x7f6d05142ca0": [], "0x7f6d05142d40": [], "0x7f6d05142de0": [], "0x7f6d05142f20": [], "0x7f6d05143060": [], "0x7f6d051431a0": [], "0x7f6d05143240": [], "0x7f6d051432e0": [], "0x7f6d05143380": [], "0x7f6d05143420": [], "0x7f6d051434c0": [], "0x7f6d05143560": [], "0x7f6d051436a0": [], "0x7f6d05143740": [], "0x7f6d05143880": [], "0x7f6d05143920": [], "0x7f6d051439c0": [], "0x7f6d05143a60": [], "0x7f6d05143b00": [], "0x7f6d05143ba0": [], "0x7f6d05143c40": [], "0x7f6d05143d80": [], "0x7f6d05143e20": [], "0x7f6d05143ec0": [], "0x7f6d05200040": [], "0x7f6d052000e0": [], "0x7f6d05200180": [], "0x7f6d05200220": [], "0x7f6d05200360": [], "0x7f6d05200400": [], "0x7f6d05200540": [], "0x7f6d052005e0": [], "0x7f6d05200680": [], "0x7f6d05200720": [], "0x7f6d052007c0": [], "0x7f6d05200860": [], "0x7f6d05200900": [], "0x7f6d05200a40": [], "0x7f6d05200ae0": [], "0x7f6d05200b80": [], "0x7f6d05200cc0": [], "0x7f6d05200d60": [], "0x7f6d05200e00": [], "0x7f6d05200ea0": [], "0x7f6d05200f40": [], "0x7f6d05200fe0": [], "0x7f6d05201120": [], "0x7f6d052011c0": [], "0x7f6d05201260": [], "0x7f6d05201300": [], "0x7f6d052013a0": [], "0x7f6d05201440": [], "0x7f6d052014e0": [], "0x7f6d05201580": [], "0x7f6d05201620": [], "0x7f6d052016c0": [], "0x7f6d05201760": [], "0x7f6d05201800": [], "0x7f6d052018a0": [], "0x7f6d05201940": [], "0x7f6d05201a80": [], "0x7f6d05201b20": [], "0x7f6d05201bc0": [], "0x7f6d05201c60": [], "0x7f6d05201d00": [], "0x7f6d05201e40": [], "0x7f6d05201ee0": [], "0x7f6d05201f80": [], "0x7f6d052020c0": [], "0x7f6d05202160": [], "0x7f6d052022a0": [], "0x7f6d05202340": [], "0x7f6d05202520": [], "0x7f6d05202660": [], "0x7f6d05202700": [], "0x7f6d052027a0": [], "0x7f6d05202980": [], "0x7f6d05202a20": [], "0x7f6d05202ac0": [], "0x7f6d05202b60": [], "0x7f6d05202c00": [], "0x7f6d05202ca0": [], "0x7f6d05202d40": [], "0x7f6d05202de0": [], "0x7f6d05202e80": [], "0x7f6d05202f20": [], "0x7f6d05202fc0": [], "0x7f6d05203060": [], "0x7f6d05203100": [], "0x7f6d052031a0": [], "0x7f6d05203240": [], "0x7f6d052032e0": [], "0x7f6d05203420": [], "0x7f6d052034c0": [], "0x7f6d05203560": [], "0x7f6d05203600": [], "0x7f6d052036a0": [], "0x7f6d052037e0": [], "0x7f6d05203880": [], "0x7f6d05203920": [], "0x7f6d052039c0": [], "0x7f6d05203b00": [], "0x7f6d05203c40": [], "0x7f6d05203ce0": [], "0x7f6d05203e20": [], "0x7f6d05203ec0": [], "0x7f6d05203f60": [], "0x7f6d05208040": [], "0x7f6d052080e0": [], "0x7f6d05208180": [], "0x7f6d05208360": [], "0x7f6d05208400": [], "0x7f6d052084a0": [], "0x7f6d05208540": [], "0x7f6d05208680": [], "0x7f6d05208720": [], "0x7f6d052087c0": [], "0x7f6d05208860": [], "0x7f6d052089a0": [], "0x7f6d05208a40": [], "0x7f6d05208b80": [], "0x7f6d05208c20": [], "0x7f6d05208ea0": [], "0x7f6d05208f40": [], "0x7f6d05208fe0": [], "0x7f6d05209120": [], "0x7f6d052091c0": [], "0x7f6d05209260": [], "0x7f6d05209300": [], "0x7f6d052093a0": [], "0x7f6d05209580": [], "0x7f6d05209620": [], "0x7f6d052096c0": [], "0x7f6d05209760": [], "0x7f6d05209800": [], "0x7f6d052098a0": [], "0x7f6d05209940": [], "0x7f6d052099e0": [], "0x7f6d05209a80": [], "0x7f6d05209b20": [], "0x7f6d05209bc0": [], "0x7f6d05209c60": [], "0x7f6d05209e40": [], "0x7f6d05209ee0": [], "0x7f6d05209f80": [], "0x7f6d0520a020": [], "0x7f6d0520a2a0": [], "0x7f6d0520a340": [], "0x7f6d0520a3e0": [], "0x7f6d0520a480": [], "0x7f6d0520a520": [], "0x7f6d0520a5c0": [], "0x7f6d0520a660": [], "0x7f6d0520a700": [], "0x7f6d0520a8e0": [], "0x7f6d0520a980": [], "0x7f6d0520aa20": [], "0x7f6d0520aac0": [], "0x7f6d0520ab60": [], "0x7f6d0520aca0": [], "0x7f6d0520ad40": [], "0x7f6d0520ae80": [], "0x7f6d0520af20": [], "0x7f6d0520afc0": [], "0x7f6d0520b060": [], "0x7f6d0520b100": [], "0x7f6d0520b1a0": [], "0x7f6d0520b240": [], "0x7f6d0520b380": [], "0x7f6d0520b420": [], "0x7f6d0520b4c0": [], "0x7f6d0520b560": [], "0x7f6d0520b600": [], "0x7f6d0520b6a0": [], "0x7f6d0520b740": [], "0x7f6d0520b7e0": [], "0x7f6d0520b920": [], "0x7f6d0520b9c0": [], "0x7f6d0520ba60": [], "0x7f6d0520bb00": [], "0x7f6d0520bba0": [], "0x7f6d0520bce0": [], "0x7f6d0520bd80": [], "0x7f6d0520be20": [], "0x7f6d0520bec0": [], "0x7f6d0520bf60": [], "0x7f6d0520c040": [], "0x7f6d0520c0e0": [], "0x7f6d0520c180": [], "0x7f6d0520c220": [], "0x7f6d0520c2c0": [], "0x7f6d0520c360": [], "0x7f6d0520c4a0": [], "0x7f6d0520c540": [], "0x7f6d0520c5e0": [], "0x7f6d0520c680": [], "0x7f6d0520c7c0": [], "0x7f6d0520c860": [], "0x7f6d0520c900": [], "0x7f6d0520c9a0": [], "0x7f6d0520ca40": [], "0x7f6d0520cae0": [], "0x7f6d0520cb80": [], "0x7f6d0520cc20": [], "0x7f6d0520ccc0": [], "0x7f6d0520cd60": [], "0x7f6d0520ce00": [], "0x7f6d0520cea0": [], "0x7f6d0520cf40": [], "0x7f6d0520cfe0": [], "0x7f6d0520d080": [], "0x7f6d0520d120": [], "0x7f6d0520d260": [], "0x7f6d0520d300": [], "0x7f6d0520d3a0": [], "0x7f6d0520d440": [], "0x7f6d0520d4e0": [], "0x7f6d0520d580": [], "0x7f6d0520d620": [], "0x7f6d0520d6c0": [], "0x7f6d0520d760": [], "0x7f6d0520d8a0": [], "0x7f6d0520d940": [], "0x7f6d0520da80": [], "0x7f6d0520db20": [], "0x7f6d0520dbc0": [], "0x7f6d0520dc60": [], "0x7f6d0520dd00": [], "0x7f6d0520dee0": [], "0x7f6d0520e020": [], "0x7f6d0520e0c0": [], "0x7f6d0520e160": [], "0x7f6d0520e200": [], "0x7f6d0520e2a0": [], "0x7f6d0520e340": [], "0x7f6d0520e3e0": [], "0x7f6d0520e480": [], "0x7f6d0520e520": [], "0x7f6d0520e5c0": [], "0x7f6d0520e660": [], "0x7f6d0520e700": [], "0x7f6d0520e7a0": [], "0x7f6d0520e840": [], "0x7f6d0520e980": [], "0x7f6d0520ea20": [], "0x7f6d0520eac0": [], "0x7f6d0520eb60": [], "0x7f6d0520ec00": [], "0x7f6d0520eca0": [], "0x7f6d0520ed40": [], "0x7f6d0520ede0": [], "0x7f6d0520ee80": [], "0x7f6d0520ef20": [], "0x7f6d0520efc0": [], "0x7f6d0520f060": [], "0x7f6d0520f100": [], "0x7f6d0520f1a0": [], "0x7f6d0520f240": [], "0x7f6d0520f2e0": [], "0x7f6d0520f380": [], "0x7f6d0520f420": [], "0x7f6d0520f4c0": [], "0x7f6d0520f560": [], "0x7f6d0520f740": [], "0x7f6d0520f880": [], "0x7f6d0520f920": [], "0x7f6d0520f9c0": [], "0x7f6d0520fa60": [], "0x7f6d0520fb00": [], "0x7f6d0520fba0": [], "0x7f6d0520fc40": [], "0x7f6d0520fce0": [], "0x7f6d0520fd80": [], "0x7f6d0520fe20": [], "0x7f6d0520fec0": [], "0x7f6d0520ff60": [], "0x7f6d05214040": [], "0x7f6d052140e0": [], "0x7f6d05214180": [], "0x7f6d05214220": [], "0x7f6d052142c0": [], "0x7f6d05214360": [], "0x7f6d05214400": [], "0x7f6d052144a0": [], "0x7f6d05214540": [], "0x7f6d05214680": [], "0x7f6d05214720": [], "0x7f6d052147c0": [], "0x7f6d05214860": [], "0x7f6d05214900": [], "0x7f6d052149a0": [], "0x7f6d05214ae0": [], "0x7f6d05214b80": [], "0x7f6d05214c20": [], "0x7f6d05214cc0": [], "0x7f6d05214d60": [], "0x7f6d05214fe0": [], "0x7f6d05215080": [], "0x7f6d052151c0": [], "0x7f6d05215260": [], "0x7f6d05215300": [], "0x7f6d052153a0": [], "0x7f6d05215440": [], "0x7f6d052154e0": [], "0x7f6d05215580": [], "0x7f6d05215620": [], "0x7f6d05215760": [], "0x7f6d05215800": [], "0x7f6d052158a0": [], "0x7f6d05215940": [], "0x7f6d052159e0": [], "0x7f6d05215a80": [], "0x7f6d05215b20": [], "0x7f6d05215bc0": [], "0x7f6d05215c60": [], "0x7f6d05215da0": [], "0x7f6d05215e40": [], "0x7f6d05215ee0": [], "0x7f6d05215f80": [], "0x7f6d05216020": [], "0x7f6d052160c0": [], "0x7f6d05216160": [], "0x7f6d05216200": [], "0x7f6d052162a0": [], "0x7f6d05216340": [], "0x7f6d052163e0": [], "0x7f6d05216480": [], "0x7f6d05216520": [], "0x7f6d052165c0": [], "0x7f6d05216660": [], "0x7f6d05216700": [], "0x7f6d052167a0": [], "0x7f6d05216840": [], "0x7f6d052168e0": [], "0x7f6d05216980": [], "0x7f6d05216a20": [], "0x7f6d05216b60": [], "0x7f6d05216c00": [], "0x7f6d05216d40": [], "0x7f6d05216de0": [], "0x7f6d05216e80": [], "0x7f6d05216f20": [], "0x7f6d05216fc0": [], "0x7f6d05217060": [], "0x7f6d05217100": [], "0x7f6d052171a0": [], "0x7f6d05217240": [], "0x7f6d052172e0": [], "0x7f6d05217420": [], "0x7f6d052174c0": [], "0x7f6d05217560": [], "0x7f6d05217600": [], "0x7f6d052176a0": [], "0x7f6d052177e0": [], "0x7f6d05217880": [], "0x7f6d05217920": [], "0x7f6d052179c0": [], "0x7f6d05217a60": [], "0x7f6d05217b00": [], "0x7f6d05217ba0": [], "0x7f6d05217ce0": [], "0x7f6d05217d80": [], "0x7f6d05217ec0": [], "0x7f6d05217f60": [], "0x7f6d05220040": [], "0x7f6d052200e0": [], "0x7f6d05220180": [], "0x7f6d05220220": [], "0x7f6d052202c0": [], "0x7f6d05220360": [], "0x7f6d05220400": [], "0x7f6d052204a0": [], "0x7f6d05220540": [], "0x7f6d052205e0": [], "0x7f6d05220680": [], "0x7f6d05220860": [], "0x7f6d05220900": [], "0x7f6d052209a0": [], "0x7f6d05220a40": [], "0x7f6d05220ae0": [], "0x7f6d05220b80": [], "0x7f6d05220c20": [], "0x7f6d05220cc0": [], "0x7f6d05220d60": [], "0x7f6d05220e00": [], "0x7f6d05220ea0": [], "0x7f6d05220f40": [], "0x7f6d05220fe0": [], "0x7f6d05221080": [], "0x7f6d05221120": [], "0x7f6d052211c0": [], "0x7f6d05221260": [], "0x7f6d05221300": [], "0x7f6d052213a0": [], "0x7f6d05221440": [], "0x7f6d052214e0": [], "0x7f6d05221580": [], "0x7f6d05221620": [], "0x7f6d052216c0": [], "0x7f6d05221760": [], "0x7f6d05221800": [], "0x7f6d052218a0": [], "0x7f6d05221940": [], "0x7f6d052219e0": [], "0x7f6d05221a80": [], "0x7f6d05221b20": [], "0x7f6d05221bc0": [], "0x7f6d05221c60": [], "0x7f6d05221d00": [], "0x7f6d05221da0": [], "0x7f6d05221e40": [], "0x7f6d05221ee0": [], "0x7f6d05221f80": [], "0x7f6d05222020": [], "0x7f6d052220c0": [], "0x7f6d05222160": [], "0x7f6d05222200": [], "0x7f6d052222a0": [], "0x7f6d05222340": [], "0x7f6d052223e0": [], "0x7f6d05222480": [], "0x7f6d05222520": [], "0x7f6d052225c0": [], "0x7f6d05222660": [], "0x7f6d05222700": [], "0x7f6d052227a0": [], "0x7f6d05222840": [], "0x7f6d052228e0": [], "0x7f6d05222980": [], "0x7f6d05222a20": [], "0x7f6d05222ac0": [], "0x7f6d05222b60": [], "0x7f6d05222c00": [], "0x7f6d05222ca0": [], "0x7f6d05222d40": [], "0x7f6d05222de0": [], "0x7f6d05419620": [], "0x7f6d05419a80": [], "0x7f6d05419b20": [], "0x7f6d05419bc0": [], "0x7f6d05419c60": [], "0x7f6d05419ee0": [], "0x7f6d05419f80": [], "0x7f6d0541a020": [], "0x7f6d0541a0c0": [], "0x7f6d0541a200": [], "0x7f6d0541a2a0": [], "0x7f6d0541a340": [], "0x7f6d0541a480": [], "0x7f6d0541a520": [], "0x7f6d0541a5c0": [], "0x7f6d0541a660": [], "0x7f6d0541a7a0": [], "0x7f6d0541a840": [], "0x7f6d0541a8e0": [], "0x7f6d0541a980": [], "0x7f6d0541aa20": [], "0x7f6d0541aac0": [], "0x7f6d0541ab60": [], "0x7f6d0541aca0": [], "0x7f6d0541ad40": [], "0x7f6d0541ade0": [], "0x7f6d0541ae80": [], "0x7f6d0541af20": [], "0x7f6d0541afc0": [], "0x7f6d0541b100": [], "0x7f6d0541b1a0": [], "0x7f6d0541b240": [], "0x7f6d0541b2e0": [], "0x7f6d0541b380": [], "0x7f6d0541b420": [], "0x7f6d0541b560": [], "0x7f6d0541b600": [], "0x7f6d0541b6a0": [], "0x7f6d0541b7e0": [], "0x7f6d0541b880": [], "0x7f6d0541b920": [], "0x7f6d0541b9c0": [], "0x7f6d0541ba60": [], "0x7f6d0541bba0": [], "0x7f6d0541bce0": [], "0x7f6d0541be20": [], "0x7f6d0541bec0": [], "0x7f6d0541bf60": [], "0x7f6d2295a480": [], "0x7f6e0ece8540": [], "0x7f6e0ece8860": [], "0x7f6e0ece8fe0": [], "0x7f6e0ece9300": [], "0x7f6e0ece98a0": [], "0x7f6e0ece9bc0": [], "0x7f6e0ece9c60": [], "0x7f6e0ece9f80": [], "0x7f6e0ecea7a0": [], "0x7f6e0ecea8e0": [], "0x7f6e0eceaa20": [], "0x7f6e0eceaca0": [], "0x7f6e0eceb2e0": [], "0x7f6e0eceb4c0": [], "0x7f6e0eceb560": [], "0x7f6e0eceb920": [], "0x7f6e0ecebba0": [], "0x7f6e0ecebc40": [], "0x7f6e0ecebe20": [], "0x7f6e0ecebec0": [], "0x7f6e0ed04040": [], "0x7f6e0ed04180": [], "0x7f6e0ed04220": [], "0x7f6e0ed04c20": [], "0x7f6e0ed04fe0": [], "0x7f6e0ed05580": [], "0x7f6e0ed05a80": [], "0x7f6e0ed05f80": [], "0x7f6e0ed06020": [], "0x7f6e0ed06340": [], "0x7f6e0ed06700": [], "0x7f6e0ed06ac0": [], "0x7f6e0ed06c00": [], "0x7f6e0ed06fc0": [], "0x7f6e0ed07600": [], "0x7f6e0ed07a60": [], "0x7f6e0ede8ae0": [], "0x7f6e0ede8d60": [], "0x7f6e0ede8e00": [], "0x7f6e0ede8fe0": [], "0x7f6e0ede9260": [], "0x7f6e0ede9300": [], "0x7f6e0ede94e0": [], "0x7f6e0ede9580": [], "0x7f6e0ede9940": [], "0x7f6e0ede9bc0": [], "0x7f6e0ede9e40": [], "0x7f6e0edea020": [], "0x7f6e0edea160": [], "0x7f6e0edea480": [], "0x7f6e0edea700": [], "0x7f6e0edea7a0": [], "0x7f6e0edeaa20": [], "0x7f6e0edeac00": [], "0x7f6e0edeade0": [], "0x7f6e0edeaf20": [], "0x7f6e0edeb2e0": [], "0x7f6e0edeb560": [], "0x7f6e0edeba60": [], "0x7f6e0edebce0": [], "0x7f6e0ee100e0": [], "0x7f6e0ee10220": [], "0x7f6e0ee102c0": [], "0x7f6e0ee10680": [], "0x7f6e0ee10a40": [], "0x7f6e0ee10e00": [], "0x7f6e0ee10ea0": [], "0x7f6e0ee111c0": [], "0x7f6e0ee11800": [], "0x7f6e0ee118a0": [], "0x7f6e0ee11d00": [], "0x7f6e0ee11da0": [], "0x7f6e0ee11f80": [], "0x7f6e0ee12020": [], "0x7f6e0ee122a0": [], "0x7f6e0ee12340": [], "0x7f6e0ee12480": [], "0x7f6e0ee12520": [], "0x7f6e0ee125c0": [], "0x7f6e0ee12660": [], "0x7f6e0ee12700": [], "0x7f6e0ee127a0": [], "0x7f6e0ee12840": [], "0x7f6e0ee128e0": [], "0x7f6e0ee12980": [], "0x7f6e0ee12a20": [], "0x7f6e0ee12ac0": [], "0x7f6e0ee12b60": [], "0x7f6e0ee12c00": [], "0x7f6e0ee12ca0": [], "0x7f6e0ee12d40": [], "0x7f6e0ee12e80": [], "0x7f6e0ee12f20": [], "0x7f6e0ee12fc0": [], "0x7f6e0ee13060": [], "0x7f6e0ee13100": [], "0x7f6e0ee131a0": [], "0x7f6e0ee13240": [], "0x7f6e0ee132e0": [], "0x7f6e0ee13380": [], "0x7f6e0ee13420": [], "0x7f6e0ee134c0": [], "0x7f6e0ee13560": [], "0x7f6e0ee13600": [], "0x7f6e0ee136a0": [], "0x7f6e0ee13740": [], "0x7f6e0ee137e0": [], "0x7f6e0ee13880": [], "0x7f6e0ee13920": [], "0x7f6e0ee139c0": [], "0x7f6e0ee13a60": [], "0x7f6e0ee13b00": [], "0x7f6e0ee13ba0": [], "0x7f6e0ee13c40": [], "0x7f6e0ee13ce0": [], "0x7f6e0ee13d80": [], "0x7f6e0ee13e20": [], "0x7f6e0ee13ec0": [], "0x7f6e0ee13f60": [], "0x7f6e0ee40040": [], "0x7f6e0ee400e0": [], "0x7f6e0ee40220": [], "0x7f6e0ee402c0": [], "0x7f6e0ee40360": [], "0x7f6e0ee404a0": [], "0x7f6e0ee40540": [], "0x7f6e0ee405e0": [], "0x7f6e0ee40720": [], "0x7f6e0ee407c0": [], "0x7f6e0ee40860": [], "0x7f6e0ee40900": [], "0x7f6e0ee409a0": [], "0x7f6e0ee40a40": [], "0x7f6e0ee40ae0": [], "0x7f6e0ee40c20": [], "0x7f6e0ee40cc0": [], "0x7f6e0ee40d60": [], "0x7f6e0ee40ea0": [], "0x7f6e0ee40f40": [], "0x7f6e0ee40fe0": [], "0x7f6e0ee41120": [], "0x7f6e0ee411c0": [], "0x7f6e0ee41260": [], "0x7f6e0ee41300": [], "0x7f6e0ee413a0": [], "0x7f6e0ee41440": [], "0x7f6e0ee414e0": [], "0x7f6e0ee41580": [], "0x7f6e0ee41620": [], "0x7f6e0ee416c0": [], "0x7f6e0ee41800": [], "0x7f6e0ee418a0": [], "0x7f6e0ee419e0": [], "0x7f6e0ee41b20": [], "0x7f6e0ee41c60": [], "0x7f6e0ee41d00": [], "0x7f6e0ee41da0": [], "0x7f6e0ee41ee0": [], "0x7f6e0ee42020": [], "0x7f6e0ee420c0": [], "0x7f6e0ee42160": [], "0x7f6e0ee42200": [], "0x7f6e0ee422a0": [], "0x7f6e0ee423e0": [], "0x7f6e0ee42520": [], "0x7f6e0ee42660": [], "0x7f6e0ee42700": [], "0x7f6e0ee427a0": [], "0x7f6e0ee428e0": [], "0x7f6e0ee42980": [], "0x7f6e0ee42a20": [], "0x7f6e0ee42b60": [], "0x7f6e0ee42c00": [], "0x7f6e0ee42de0": [], "0x7f6e0ee42e80": [], "0x7f6e0ee43060": [], "0x7f6e0ee432e0": [], "0x7f6e0ee43560": [], "0x7f6e0ee437e0": [], "0x7f6e0ee43880": [], "0x7f6e0ee889a0": [], "0x7f6e0ee88a40": [], "0x7f6e0ee88c20": [], "0x7f6e0ee88cc0": [], "0x7f6e0ee89760": [], "0x7f6e0ee89800": [], "0x7f6e0ee899e0": [], "0x7f6e0ee89c60": [], "0x7f6e0ee89ee0": [], "0x7f6e0ee8a7a0": [], "0x7f6e0ee8a980": [], "0x7f6e0ee8aa20": [], "0x7f6e0ee8aca0": [], "0x7f6e0ee8af20": [], "0x7f6e0ee8b600": [], "0x7f6e0ee8b880": [], "0x7f6e0ee8bb00": [], "0x7f6e0ee8bc40": [], "0x7f6e0ee8bec0": [], "0x7f6e0eebc180": [], "0x7f6e0eebc220": [], "0x7f6e0eebc2c0": [], "0x7f6e0eebca40": [], "0x7f6e0eebce00": [], "0x7f6e0eebdda0": [], "0x7f6e0eebe020": [], "0x7f6e0eebe700": [], "0x7f6e0eebeb60": [], "0x7f6e0eebf100": [], "0x7f6e0eebf1a0": [], "0x7f6e0eebf380": [], "0x7f6e0eebf880": [], "0x7f6e0eebfe20": [], "0x7f6e0ef084a0": [], "0x7f6e0ef085e0": [], "0x7f6e0ef089a0": [], "0x7f6e0ef08d60": [], "0x7f6e0ef09260": [], "0x7f6e0ef09760": [], "0x7f6e0ef099e0": [], "0x7f6e0ef09a80": [], "0x7f6e0ef09f80": [], "0x7f6e0ef0a480": [], "0x7f6e0ef0a980": [], "0x7f6e0ef0ae80": [], "0x7f6e0ef0b380": [], "0x7f6e0ef0b9c0": [], "0x7f6e0ef0bec0": [], "0x7f6e0ef18400": [], "0x7f6e0ef18e00": [], "0x7f6e0ef19120": [], "0x7f6e0ef19620": [], "0x7f6e0ef1a020": [], "0x7f6e0ef1a0c0": [], "0x7f6e0ef1a520": [], "0x7f6e0ef1aa20": [], "0x7f6e0ef1af20": [], "0x7f6e0ef1b420": [], "0x7f6e0ef1b4c0": [], "0x7f6e0ef1b920": [], "0x7f6e0ef30180": [], "0x7f6e0ef307c0": [], "0x7f6e0ef30b80": [], "0x7f6e0ef31080": [], "0x7f6e0ef31580": [], "0x7f6e0ef31a80": [], "0x7f6e0ef31f80": [], "0x7f6e0ef32480": [], "0x7f6e0ef32520": [], "0x7f6e0ef32980": [], "0x7f6e0ef32e80": [], "0x7f6e0ef33100": [], "0x7f6e0ef33a60": [], "0x7f6e0ef33f60": [], "0x7f6e0ef444a0": [], "0x7f6e0ef449a0": [], "0x7f6e0ef44e00": [], "0x7f6e0ef45260": [], "0x7f6e0ef456c0": [], "0x7f6e0ef45760": [], "0x7f6e0ef45b20": [], "0x7f6e0ef45f80": [], "0x7f6e0ef46160": [], "0x7f6e0ef46200": [], "0x7f6e0ef463e0": [], "0x7f6e0ef46840": [], "0x7f6e0ef46ca0": [], "0x7f6e0ef477e0": [], "0x7f6e0ef47c40": [], "0x7f6e0ef600e0": [], "0x7f6e0ef60680": [], "0x7f6e0ef60ae0": [], "0x7f6e0ef60f40": [], "0x7f6e0ef613a0": [], "0x7f6e0ef61800": [], "0x7f6e0ef61c60": [], "0x7f6e0ef61d00": [], "0x7f6e0ef620c0": [], "0x7f6e0ef62160": [], "0x7f6e0ef62660": [], "0x7f6e0ef62ac0": [], "0x7f6e0ef62f20": [], "0x7f6e0ef63380": [], "0x7f6e0ef637e0": [], "0x7f6e0ef639c0": [], "0x7f6e0ef63e20": [], "0x7f6e0ef802c0": [], "0x7f6e0ef80720": [], "0x7f6e0ef80b80": [], "0x7f6e0ef80fe0": [], "0x7f6e0ef81440": [], "0x7f6e0ef818a0": [], "0x7f6e0ef81d00": [], "0x7f6e0ef81f80": [], "0x7f6e0ef823e0": [], "0x7f6e0ef82b60": [], "0x7f6e0ef82f20": [], "0x7f6e0ef832e0": [], "0x7f6e0ef83560": [], "0x7f6e0ef837e0": [], "0x7f6e0ef83ba0": [], "0x7f6e0ef83e20": [], "0x7f6e0ef83ec0": [], "0x7f6e0ef987c0": [], "0x7f6e0ef98860": [], "0x7f6e0ef989a0": [], "0x7f6e0ef98a40": [], "0x7f6e0ef98c20": [], "0x7f6e0ef98cc0": [], "0x7f6e0ef98e00": [], "0x7f6e0ef99300": [], "0x7f6e0ef993a0": [], "0x7f6e0ef99580": [], "0x7f6e0ef99c60": [], "0x7f6e0ef9a160": [], "0x7f6e0ef9a200": [], "0x7f6e0ef9a7a0": [], "0x7f6e0ef9a8e0": [], "0x7f6e0ef9ad40": [], "0x7f6e0ef9ade0": [], "0x7f6e0ef9b2e0": [], "0x7f6e0ef9b4c0": [], "0x7f6e0ef9ba60": [], "0x7f6e0ef9bb00": [], "0x7f6e0ef9be20": [], "0x7f6e0efbc540": [], "0x7f6e0efbc720": [], "0x7f6e0efbc9a0": [], "0x7f6e0efbcae0": [], "0x7f6e0efbcea0": [], "0x7f6e0efbcf40": [], "0x7f6e0efbd1c0": [], "0x7f6e0efbd4e0": [], "0x7f6e0efbdb20": [], "0x7f6e0efbdf80": [], "0x7f6e0efbe160": [], "0x7f6e0efbe5c0": [], "0x7f6e0efbe7a0": [], "0x7f6e0efbe840": [], "0x7f6e0efbea20": [], "0x7f6e0efbeac0": [], "0x7f6e0efbede0": [], "0x7f6e0efbf1a0": [], "0x7f6e0efbf2e0": [], "0x7f6e0efbf420": [], "0x7f6e0efbf4c0": [], "0x7f6e0efbf560": [], "0x7f6e0efbf6a0": [], "0x7f6e0efbfb00": [], "0x7f6e0efbfba0": [], "0x7f6e0efbfc40": [], "0x7f6e0efbfd80": [], "0x7f6e0efbfec0": [], "0x7f6e0efbff60": [], "0x7f6e0efd8180": [], "0x7f6e0efd82c0": [], "0x7f6e0efd8720": [], "0x7f6e0efd87c0": [], "0x7f6e0efd89a0": [], "0x7f6e0efd8b80": [], "0x7f6e0efd8ea0": [], "0x7f6e0efd9440": [], "0x7f6e0efd94e0": [], "0x7f6e0efd96c0": [], "0x7f6e0efd9a80": [], "0x7f6e0efd9b20": [], "0x7f6e0efd9bc0": [], "0x7f6e0efda160": [], "0x7f6e0efda3e0": [], "0x7f6e0efda7a0": [], "0x7f6e0efda8e0": [], "0x7f6e0efdae80": [], "0x7f6e0efdaf20": [], "0x7f6e0efdb240": [], "0x7f6e0efdb600": [], "0x7f6e0efdb880": [], "0x7f6e0efdbb00": [], "0x7f6e0efdbba0": [], "0x7f6e0efdbce0": [], "0x7f6e0efdbe20": [], "0x7f6e0f0004a0": [], "0x7f6e0f0007c0": [], "0x7f6e0f000ae0": [], "0x7f6e0f000b80": [], "0x7f6e0f000cc0": [], "0x7f6e0f000e00": [], "0x7f6e0f000ea0": [], "0x7f6e0f000f40": [], "0x7f6e0f001580": [], "0x7f6e0f0018a0": [], "0x7f6e0f001bc0": [], "0x7f6e0f001c60": [], "0x7f6e0f001d00": [], "0x7f6e0f001f80": [], "0x7f6e0f002020": [], "0x7f6e0f002200": [], "0x7f6e0f0022a0": [], "0x7f6e0f0023e0": [], "0x7f6e0f002520": [], "0x7f6e0f0027a0": [], "0x7f6e0f002840": [], "0x7f6e0f002980": [], "0x7f6e0f002b60": [], "0x7f6e0f003240": [], "0x7f6e0f003600": [], "0x7f6e0f0037e0": [], "0x7f6e0f003880": [], "0x7f6e0f003ec0": [], "0x7f6e0f02c0e0": [], "0x7f6e0f02c180": [], "0x7f6e0f02c7c0": [], "0x7f6e0f02cc20": [], "0x7f6e0f02cf40": [], "0x7f6e0f02cfe0": [], "0x7f6e0f02d120": [], "0x7f6e0f02d1c0": [], "0x7f6e0f02d580": [], "0x7f6e0f02d620": [], "0x7f6e0f02d6c0": [], "0x7f6e0f02d800": [], "0x7f6e0f02d940": [], "0x7f6e0f02db20": [], "0x7f6e0f02dbc0": [], "0x7f6e0f02e520": [], "0x7f6e0f02e700": [], "0x7f6e0f02e840": [], "0x7f6e0f02eac0": [], "0x7f6e0f02eb60": [], "0x7f6e0f02ef20": [], "0x7f6e0f02f1a0": [], "0x7f6e0f02f240": [], "0x7f6e0f02f560": [], "0x7f6e0f02f880": [], "0x7f6e0f02fba0": [], "0x7f6e0f02fec0": [], "0x7f6e0f048720": [], "0x7f6e0f048900": [], "0x7f6e0f048a40": [], "0x7f6e0f048ae0": [], "0x7f6e0f048cc0": [], "0x7f6e0f049120": [], "0x7f6e0f049300": [], "0x7f6e0f049620": [], "0x7f6e0f049760": [], "0x7f6e0f049800": [], "0x7f6e0f049940": [], "0x7f6e0f0499e0": [], "0x7f6e0f049da0": [], "0x7f6e0f049f80": [], "0x7f6e0f04a160": [], "0x7f6e0f04a200": [], "0x7f6e0f04a340": [], "0x7f6e0f04a480": [], "0x7f6e0f04a520": [], "0x7f6e0f04aca0": [], "0x7f6e0f04b380": [], "0x7f6e0f04bd80": [], "0x7f6e0f070540": [], "0x7f6e0f0705e0": [], "0x7f6e0f070680": [], "0x7f6e0f070a40": [], "0x7f6e0f070b80": [], "0x7f6e0f070fe0": [], "0x7f6e0f0714e0": [], "0x7f6e0f0716c0": [], "0x7f6e0f0718a0": [], "0x7f6e0f0719e0": [], "0x7f6e0f071a80": [], "0x7f6e0f071b20": [], "0x7f6e0f071bc0": [], "0x7f6e0f071c60": [], "0x7f6e0f072020": [], "0x7f6e0f0720c0": [], "0x7f6e0f0727a0": [], "0x7f6e0f072980": [], "0x7f6e0f072a20": [], "0x7f6e0f072d40": [], "0x7f6e0f072de0": [], "0x7f6e0f072e80": [], "0x7f6e0f073060": [], "0x7f6e0f073100": [], "0x7f6e0f073240": [], "0x7f6e0f0732e0": [], "0x7f6e0f073380": [], "0x7f6e0f0737e0": [], "0x7f6e0f073880": [], "0x7f6e0f073920": [], "0x7f6e0f0739c0": [], "0x7f6e0f073b00": [], "0x7f6e0f073ba0": [], "0x7f6e0f073c40": [], "0x7f6e0f073d80": [], "0x7f6e0f073e20": [], "0x7f6e0f073ec0": [], "0x7f6e0f073f60": [], "0x7f6e0f098040": [], "0x7f6e0f098180": [], "0x7f6e0f0982c0": [], "0x7f6e0f098400": [], "0x7f6e0f098540": [], "0x7f6e0f098680": [], "0x7f6e0f0987c0": [], "0x7f6e0f098900": [], "0x7f6e0f098a40": [], "0x7f6e0f098b80": [], "0x7f6e0f09a160": [], "0x7f6e0f09a660": [], "0x7f6e0f09a700": [], "0x7f6e0f09ab60": [], "0x7f6e0f09b060": [], "0x7f6e0f09b560": [], "0x7f6e0f09ba60": [], "0x7f6e0f09bf60": [], "0x7f6e0f18c680": [], "0x7f6e0f18c720": [], "0x7f6e0f18c9a0": [], "0x7f6e0f18cb80": [], "0x7f6e0f18d1c0": [], "0x7f6e0f18d260": [], "0x7f6e0f18d300": [], "0x7f6e0f18d760": [], "0x7f6e0f18d800": [], "0x7f6e0f18dbc0": [], "0x7f6e0f18e160": [], "0x7f6e0f18e3e0": [], "0x7f6e0f18e480": [], "0x7f6e0f18e520": [], "0x7f6e0f18e8e0": [], "0x7f6e0f18ea20": [], "0x7f6e0f18ed40": [], "0x7f6e0f18ede0": [], "0x7f6e0f18efc0": [], "0x7f6e0f18f100": [], "0x7f6e0f18f1a0": [], "0x7f6e0f18f600": [], "0x7f6e0f18f6a0": [], "0x7f6e0f18f740": [], "0x7f6e0f18fec0": [], "0x7f6e0f18ff60": [], "0x7f6e0f55bba0": [], "0x7f6e0f5d43b0": [], "0x7f6e0f7aa930": [], "0x7f6f0d8f5320": [], "0x7f739f2812b0": [], "0x7f8bc0cb8530": 234, "0x7fe929da3ba0": 203, "0x7fe9be6f89a0": 93, "0x7fe9be6fa2a0": 93, "0x7fe9be6faac0": 93, "0x7fe9be6fb9c0": 93, "0x7fe9be700040": 93, "0x7fe9be7004a0": 93, "0x7fe9be700680": 93, "0x7fe9be700720": 93, "0x7fe9be700860": 93, "0x7fe9be700c20": 93, "0x7fe9be700ea0": 93, "0x7fe9be701080": 93, "0x7fe9be7016c0": 93, "0x7fe9be701940": 93, "0x7fe9be701d00": 93, "0x7fe9be701da0": 93, "0x7fe9be701f80": 93, "0x7fe9be7020c0": 93, "0x7fe9be702520": 93, "0x7fe9be702660": 93, "0x7fe9be7027a0": 93, "0x7fe9be702b60": 93, "0x7fe9be702c00": 93, "0x7fe9be702ca0": 93, "0x7fe9be702de0": 93, "0x7fe9be702f20": 93, "0x7fe9be703060": 93, "0x7fe9be7032e0": 93, "0x7fe9be703380": 93, "0x7fe9be7037e0": 93, "0x7fe9be703ec0": 93, "0x7fe9be708040": 93, "0x7fe9be7080e0": 93, "0x7fe9be708180": 93, "0x7fe9be7082c0": 93, "0x7fe9be708400": 93, "0x7fe9be708540": 93, "0x7fe9be708680": 93, "0x7fe9be708720": 93, "0x7fe9be7087c0": 93, "0x7fe9be708900": 93, "0x7fe9be708a40": 93, "0x7fe9be708b80": 93, "0x7fe9be708cc0": 93, "0x7fe9be708e00": 93, "0x7fe9be708ea0": 93, "0x7fe9be708fe0": 93, "0x7fe9be709260": 93, "0x7fe9be709300": 93, "0x7fe9be7093a0": 93, "0x7fe9be709440": 93, "0x7fe9be709580": 93, "0x7fe9be709620": 93, "0x7fe9be709760": 93, "0x7fe9be709800": 93, "0x7fe9be7098a0": 93, "0x7fe9be709940": 93, "0x7fe9be7099e0": 93, "0x7fe9be709b20": 93, "0x7fe9be709c60": 93, "0x7fe9be709d00": 93, "0x7fe9be709e40": 93, "0x7fe9be709f80": 93, "0x7fe9be70a0c0": 93, "0x7fe9be70a200": 93, "0x7fe9be70a340": 93, "0x7fe9be70a3e0": 93, "0x7fe9be70a5c0": 93, "0x7fe9be70a700": 93, "0x7fe9be70a840": 93, "0x7fe9be70a8e0": 93, "0x7fe9be70aa20": 93, "0x7fe9be70ab60": 93, "0x7fe9be70aca0": 93, "0x7fe9be70ad40": 93, "0x7fe9be70ae80": 93, "0x7fe9be70af20": 93, "0x7fe9be70afc0": 93, "0x7fe9be70b060": 93, "0x7fe9be70b240": 93, "0x7fe9be70b2e0": 93, "0x7fe9be70b560": 93, "0x7fe9be70b600": 93, "0x7fe9be70b6a0": 93, "0x7fe9be70b7e0": 93, "0x7fe9be70b920": 93, "0x7fe9be70ba60": 93, "0x7fe9be70bba0": 93, "0x7fe9be70bc40": 93, "0x7fe9be70bce0": 93, "0x7fe9be70bd80": 93, "0x7fe9be70be20": 93, "0x7fe9be70bf60": 93, "0x7fe9be718220": 93, "0x7fe9be718360": 93, "0x7fe9be718540": 93, "0x7fe9be7187c0": 93, "0x7fe9be718ae0": 93, "0x7fe9be718c20": 93, "0x7fe9be718cc0": 93, "0x7fe9be718e00": 93, "0x7fe9be718ea0": 93, "0x7fe9be718f40": 93, "0x7fe9be718fe0": 93, "0x7fe9be719080": 93, "0x7fe9be719120": 93, "0x7fe9be719260": 93, "0x7fe9be7193a0": 93, "0x7fe9be7194e0": 93, "0x7fe9be719620": 93, "0x7fe9be7196c0": 93, "0x7fe9be719760": 93, "0x7fe9be7198a0": 93, "0x7fe9be7199e0": 93, "0x7fe9be719b20": 93, "0x7fe9be719c60": 93, "0x7fe9be719e40": 93, "0x7fe9be71a0c0": 93, "0x7fe9be71a340": 93, "0x7fe9be71a3e0": 93, "0x7fe9be71a660": 93, "0x7fe9be71a700": 93, "0x7fe9be71a7a0": 93, "0x7fe9be71a840": 93, "0x7fe9be71a980": 93, "0x7fe9be71aa20": 93, "0x7fe9be71ac00": 93, "0x7fe9be71ad40": 93, "0x7fe9be71af20": 93, "0x7fe9be71afc0": 93, "0x7fe9be71b100": 93, "0x7fe9be71b240": 93, "0x7fe9be71b380": 93, "0x7fe9be71b4c0": 93, "0x7fe9be71b560": 93, "0x7fe9be71b6a0": 93, "0x7fe9be71b920": 93, "0x7fe9be71ba60": 93, "0x7fe9be71bb00": 93, "0x7fe9be71bc40": 93, "0x7fe9be71be20": 93, "0x7fe9be7202c0": 93, "0x7fe9be720400": 93, "0x7fe9be720540": 93, "0x7fe9be7205e0": 93, "0x7fe9be720720": 93, "0x7fe9be7207c0": 93, "0x7fe9be720860": 93, "0x7fe9be720900": 93, "0x7fe9be720c20": 93, "0x7fe9be720cc0": 93, "0x7fe9be720d60": 93, "0x7fe9be720f40": 93, "0x7fe9be720fe0": 93, "0x7fe9be7211c0": 93, "0x7fe9be721300": 93, "0x7fe9be7213a0": 93, "0x7fe9be7214e0": 93, "0x7fe9be721620": 93, "0x7fe9be7216c0": 93, "0x7fe9be721760": 93, "0x7fe9be7218a0": 93, "0x7fe9be7219e0": 93, "0x7fe9be721b20": 93, "0x7fe9be721c60": 93, "0x7fe9be721da0": 93, "0x7fe9be722020": 93, "0x7fe9be7220c0": 93, "0x7fe9be722340": 93, "0x7fe9be722480": 93, "0x7fe9be722700": 93, "0x7fe9be7227a0": 93, "0x7fe9be722a20": 93, "0x7fe9be722ac0": 93, "0x7fe9be722b60": 93, "0x7fe9be722c00": 93, "0x7fe9be722d40": 93, "0x7fe9be722de0": 93, "0x7fe9be722e80": 93, "0x7fe9be723100": 93, "0x7fe9be7231a0": 93, "0x7fe9be723240": 93, "0x7fe9be7232e0": 93, "0x7fe9be723420": 93, "0x7fe9be7234c0": 93, "0x7fe9be723600": 93, "0x7fe9be7236a0": 93, "0x7fe9be7237e0": 93, "0x7fe9be723920": 93, "0x7fe9be723a60": 93, "0x7fe9be723ba0": 93, "0x7fe9be723c40": 93, "0x7fe9be723ce0": 93, "0x7fe9be723e20": 93, "0x7fe9be723f60": 93, "0x7fe9be7300e0": 93, "0x7fe9be730360": 93, "0x7fe9be7305e0": 93, "0x7fe9be730860": 93, "0x7fe9be7309a0": 93, "0x7fe9be730e00": 93, "0x7fe9be731260": 93, "0x7fe9be7313a0": 93, "0x7fe9be731760": 93, "0x7fe9be7319e0": 93, "0x7fe9be7327a0": 93, "0x7fe9be732ca0": 93, "0x7fe9be733240": 93, "0x7fe9be733e20": 93, "0x7fe9be744360": 93, "0x7fe9be744400": 93, "0x7fe9be744680": 93, "0x7fe9be744860": 93, "0x7fe9be744900": 93, "0x7fe9be7449a0": 93, "0x7fe9be744ae0": 93, "0x7fe9be744b80": 93, "0x7fe9be744cc0": 93, "0x7fe9be744d60": 93, "0x7fe9be744f40": 93, "0x7fe9be745080": 93, "0x7fe9be745120": 93, "0x7fe9be745260": 93, "0x7fe9be7453a0": 93, "0x7fe9be745440": 93, "0x7fe9be7454e0": 93, "0x7fe9be745620": 93, "0x7fe9be745760": 93, "0x7fe9be7458a0": 93, "0x7fe9be7459e0": 93, "0x7fe9be745b20": 93, "0x7fe9be745bc0": 93, "0x7fe9be745d00": 93, "0x7fe9be745e40": 93, "0x7fe9be745f80": 93, "0x7fe9be746020": 93, "0x7fe9be746160": 93, "0x7fe9be746200": 93, "0x7fe9be7462a0": 93, "0x7fe9be7463e0": 93, "0x7fe9be746520": 93, "0x7fe9be746660": 93, "0x7fe9be7467a0": 93, "0x7fe9be7468e0": 93, "0x7fe9be746980": 93, "0x7fe9be746ac0": 93, "0x7fe9be746ca0": 93, "0x7fe9be746d40": 93, "0x7fe9be746de0": 93, "0x7fe9be746fc0": 93, "0x7fe9be7471a0": 93, "0x7fe9be747240": 93, "0x7fe9be7472e0": 93, "0x7fe9be747380": 93, "0x7fe9be747420": 93, "0x7fe9be7476a0": 93, "0x7fe9be747740": 93, "0x7fe9be7477e0": 93, "0x7fe9be747920": 93, "0x7fe9be7479c0": 93, "0x7fe9be747ba0": 93, "0x7fe9be747ce0": 93, "0x7fe9be747d80": 93, "0x7fe9be747ec0": 93, "0x7fe9be747f60": 93, "0x7fe9be898180": 93, "0x7fe9be8982c0": 93, "0x7fe9be898360": 93, "0x7fe9be898400": 93, "0x7fe9be898540": 93, "0x7fe9be898680": 93, "0x7fe9be8987c0": 93, "0x7fe9be898900": 93, "0x7fe9be898a40": 93, "0x7fe9be898ae0": 93, "0x7fe9be898e00": 93, "0x7fe9be898ea0": 93, "0x7fe9be898fe0": 93, "0x7fe9be8991c0": 93, "0x7fe9be899260": 93, "0x7fe9be899300": 93, "0x7fe9be8993a0": 93, "0x7fe9be899580": 93, "0x7fe9be8996c0": 93, "0x7fe9be899760": 93, "0x7fe9be899800": 93, "0x7fe9be8998a0": 93, "0x7fe9be899940": 93, "0x7fe9be8999e0": 93, "0x7fe9be899a80": 93, "0x7fe9be899b20": 93, "0x7fe9be899d00": 93, "0x7fe9be899da0": 93, "0x7fe9be899ee0": 93, "0x7fe9be899f80": 93, "0x7fe9be89a020": 93, "0x7fe9be89a160": 93, "0x7fe9be89a2a0": 93, "0x7fe9be89a3e0": 93, "0x7fe9be89a520": 93, "0x7fe9be89a660": 93, "0x7fe9be89a7a0": 93, "0x7fe9be89a840": 93, "0x7fe9be89aca0": 93, "0x7fe9be89ade0": 93, "0x7fe9be89ae80": 93, "0x7fe9be89afc0": 93, "0x7fe9be89b060": 93, "0x7fe9be89b100": 93, "0x7fe9be89b240": 93, "0x7fe9be89b380": 93, "0x7fe9be89b420": 93, "0x7fe9be89b4c0": 93, "0x7fe9be89b600": 93, "0x7fe9be89b7e0": 93, "0x7fe9be89b920": 93, "0x7fe9be89b9c0": 93, "0x7fe9be89ba60": 93, "0x7fe9be89bba0": 93, "0x7fe9be89bc40": 93, "0x7fe9be89bce0": 93, "0x7fe9be89bd80": 93, "0x7fe9be89bec0": 93, "0x7fe9be89bf60": 93, "0x7fe9be8a0180": 93, "0x7fe9be8a0400": 93, "0x7fe9be8a0540": 93, "0x7fe9be8a28e0": 93, "0x7fe9be8ac540": 93, "0x7fe9be8ac680": 93, "0x7fe9be8accc0": 93, "0x7fe9be8acf40": 93, "0x7fe9be8acfe0": 93, "0x7fe9be8ad120": 93, "0x7fe9be8ad940": 93, "0x7fe9be8ade40": 93, "0x7fe9be8ae2a0": 93, "0x7fe9be8ae5c0": 93, "0x7fe9be8ae980": 93, "0x7fe9be8aeca0": 93, "0x7fe9be8aee80": 93, "0x7fe9be8af380": 93, "0x7fe9be8af740": 93, "0x7fe9be8afc40": 93, "0x7fe9be8afec0": 93, "0x7fe9be8b4400": 93, "0x7fe9be8b44a0": 93, "0x7fe9be8b4720": 93, "0x7fe9be8b49a0": 93, "0x7fe9be8b4e00": 93, "0x7fe9be8b5080": 93, "0x7fe9be8b5260": 93, "0x7fe9be8b5da0": 93, "0x7fe9be8b5e40": 93, "0x7fe9be8b6200": 93, "0x7fe9be8b6520": 93, "0x7fe9be8b6ac0": 93, "0x7fe9be8b6d40": 93, "0x7fe9be8b77e0": 93, "0x7fe9be8b7920": 93, "0x7fe9be8b79c0": 93, "0x7fe9be8b7a60": 93, "0x7fe9be8b7ce0": 93, "0x7fe9be8b7ec0": 93, "0x7fe9be8c8180": 93, "0x7fe9be8c8360": 93, "0x7fe9be8c84a0": 93, "0x7fe9be8c87c0": 93, "0x7fe9be8c89a0": 93, "0x7fe9be8c8e00": 93, "0x7fe9be8c8ea0": 93, "0x7fe9be8c8f40": 93, "0x7fe9be8c9080": 93, "0x7fe9be8c9120": 93, "0x7fe9be8c9300": 93, "0x7fe9be8c9620": 93, "0x7fe9be8c96c0": 93, "0x7fe9be8c9760": 93, "0x7fe9be8c98a0": 93, "0x7fe9be8c99e0": 93, "0x7fe9be8c9b20": 93, "0x7fe9be8c9c60": 93, "0x7fe9be8c9e40": 93, "0x7fe9be8c9ee0": 93, "0x7fe9be8c9f80": 93, "0x7fe9be8ca020": 93, "0x7fe9be8ca160": 93, "0x7fe9be8ca200": 93, "0x7fe9be8ca2a0": 93, "0x7fe9be8ca480": 93, "0x7fe9be8ca5c0": 93, "0x7fe9be8ca7a0": 93, "0x7fe9be8ca840": 93, "0x7fe9be8ca980": 93, "0x7fe9be8caa20": 93, "0x7fe9be8caca0": 93, "0x7fe9be8caf20": 93, "0x7fe9be8cb100": 93, "0x7fe9be8cb1a0": 93, "0x7fe9be8cb380": 93, "0x7fe9be8cb420": 93, "0x7fe9be8cb4c0": 93, "0x7fe9be8cb560": 93, "0x7fe9be8cb600": 93, "0x7fe9be8cb7e0": 93, "0x7fe9be8cb880": 93, "0x7fe9be8cb920": 93, "0x7fe9be8cb9c0": 93, "0x7fe9be8cbe20": 93, "0x7fe9be8cbec0": 93, "0x7fe9be8e00e0": 93, "0x7fe9be8e0220": 93, "0x7fe9be8e02c0": 93, "0x7fe9be8e0860": 93, "0x7fe9be8e0900": 93, "0x7fe9be8e09a0": 93, "0x7fe9be8e11c0": 93, "0x7fe9be8e1300": 93, "0x7fe9be8e13a0": 93, "0x7fe9be8e1440": 93, "0x7fe9be8e16c0": 93, "0x7fe9be8e19e0": 93, "0x7fe9be8e1d00": 93, "0x7fe9be8e22a0": 93, "0x7fe9be8e23e0": 93, "0x7fe9be8e2520": 93, "0x7fe9be8e2660": 93, "0x7fe9be8e2de0": 93, "0x7fe9be8e2e80": 93, "0x7fe9be8e2f20": 93, "0x7fe9be8e31a0": 93, "0x7fe9be8e3240": 93, "0x7fe9be8e3880": 93, "0x7fe9be8e3ba0": 93, "0x7fe9be8e3c40": 93, "0x7fe9bf128540": 93, "0x7fe9bf128680": 93, "0x7fe9bf128900": 93, "0x7fe9bf128ea0": 93, "0x7fe9bf129120": 93, "0x7fe9bf129440": 93, "0x7fe9bf1294e0": 93, "0x7fe9bf1298a0": 93, "0x7fe9bf12a0c0": 93, "0x7fe9bf12a980": 93, "0x7fe9bf12ade0": 93, "0x7fe9bf12bb00": 93, "0x7fe9bf12bec0": 93, "0x7fe9bf1b3d80": 93, "0x7fe9bf2384a0": 93, "0x7fe9bf2387c0": 93, "0x7fe9bf23ab60": 93, "0x7fe9bf23ae80": 93, "0x7fe9bf23b420": 93, "0x7fe9bf474540": 93, "0x7fe9bf474900": 93, "0x7fe9bf476520": 93, "0x7fe9bf476ca0": 93, "0x7fe9bf477a60": 93, "0x7fe9bf477b00": 93, "0x7fe9bf6ed760": 93, "0x7fe9bf6eee80": 93, "0x7fe9e83bd620": 207, "0x7fe9e83bd6c0": 207, "0x7fe9e83bd8a0": 207, "0x7fe9e83bd940": 207, "0x7fea23f8c040": 93, "0x7fea23f8c180": 93, "0x7fea23f8c4a0": 93, "0x7fea23f8c720": 93, "0x7fea23f8c7c0": 93, "0x7fea23f8c860": 93, "0x7fea23f8c900": 93, "0x7fea23f8c9a0": 93, "0x7fea23f8ca40": 93, "0x7fea23f8cae0": 93, "0x7fea23f8cb80": 93, "0x7fea23f8cc20": 93, "0x7fea23f8ccc0": 93, "0x7fea23f8cd60": 93, "0x7fea23f8ce00": 93, "0x7fea23f8cf40": 93, "0x7fea23f8cfe0": 93, "0x7fea23f8d080": 93, "0x7fea23f8d120": 93, "0x7fea23f8d1c0": 93, "0x7fea23f8d260": 93, "0x7fea23f8d300": 93, "0x7fea23f8d3a0": 93, "0x7fea23f8d4e0": 93, "0x7fea23f8d580": 93, "0x7fea23f8d620": 93, "0x7fea23f8d6c0": 93, "0x7fea23f8d760": 93, "0x7fea23f8d800": 93, "0x7fea23f8d940": 93, "0x7fea23f8d9e0": 93, "0x7fea23f8da80": 93, "0x7fea23f8db20": 93, "0x7fea23f8dbc0": 93, "0x7fea23f8dc60": 93, "0x7fea23f8dd00": 93, "0x7fea23f8dda0": 93, "0x7fea23f8de40": 93, "0x7fea23f8dee0": 93, "0x7fea23f8df80": 93, "0x7fea23f8e020": 93, "0x7fea23f8e0c0": 93, "0x7fea23f8e2a0": 93, "0x7fea23f8e340": 93, "0x7fea23f8e3e0": 93, "0x7fea23f8e480": 93, "0x7fea23f8e520": 93, "0x7fea23f8e5c0": 93, "0x7fea23f8e660": 93, "0x7fea23f8e700": 93, "0x7fea23f8e7a0": 93, "0x7fea23f8e840": 93, "0x7fea23f8e980": 93, "0x7fea23f8ea20": 93, "0x7fea23f8eac0": 93, "0x7fea23f8eb60": 93, "0x7fea23f8ec00": 93, "0x7fea23f8eca0": 93, "0x7fea23f8ed40": 93, "0x7fea23f8ede0": 93, "0x7fea23f8ee80": 93, "0x7fea23f8ef20": 93, "0x7fea23f8efc0": 93, "0x7fea23f8f100": 93, "0x7fea23f8f1a0": 93, "0x7fea23f8f240": 93, "0x7fea23f8f2e0": 93, "0x7fea23f8f380": 93, "0x7fea23f8f420": 93, "0x7fea23f8f4c0": 93, "0x7fea23f8f560": 93, "0x7fea23f8f600": 93, "0x7fea23f8f6a0": 93, "0x7fea23f8f740": 93, "0x7fea23f8f7e0": 93, "0x7fea23f8f880": 93, "0x7fea23f8f920": 93, "0x7fea23f8f9c0": 93, "0x7fea23f8fa60": 93, "0x7fea23f8fb00": 93, "0x7fea23f8fba0": 93, "0x7fea23f8fc40": 93, "0x7fea23f8fce0": 93, "0x7fea23f8fd80": 93, "0x7fea23f8fe20": 93, "0x7fea23f8fec0": 93, "0x7fea23f8ff60": 93, "0x7fea23fa5400": 238, "0x7fea23fb8360": 93, "0x7fea23fb8a40": 93, "0x7fea23fb8ea0": 93, "0x7fea23fb9a80": 93, "0x7fea3dc08200": 230, "0x7fead83c80e0": 93, "0x7fead83c8220": 93, "0x7fead83c98a0": 93, "0x7fead83c99e0": 93, "0x7fead83c9bc0": 93, "0x7fead83c9e40": 93, "0x7fead83c9f80": 93, "0x7fead83ca0c0": 93, "0x7feada0e4040": 93, "0x7feada0e4180": 93, "0x7feada0e4220": 93, "0x7feada0e4c20": 93, "0x7feada0e4fe0": 93, "0x7feada0e5580": 93, "0x7feada0e5a80": 93, "0x7feada0e5f80": 93, "0x7feada0e6020": 93, "0x7feada0e6340": 93, "0x7feada0e6700": 93, "0x7feada0e6ac0": 93, "0x7feada0e6c00": 93, "0x7feada0e6fc0": 93, "0x7feada0e7600": 93, "0x7feada0e7a60": 93, "0x7feada1f00e0": 93, "0x7feada1f0220": 93, "0x7feada1f02c0": 93, "0x7feada1f0680": 93, "0x7feada1f0a40": 93, "0x7feada1f0e00": 93, "0x7feada1f0ea0": 93, "0x7feada1f11c0": 93, "0x7feada1f1800": 93, "0x7feada1f18a0": 93, "0x7feada1f1d00": 93, "0x7feada1f1da0": 93, "0x7feada1f1f80": 93, "0x7feada1f2020": 93, "0x7feada1f22a0": 93, "0x7feada1f2340": 93, "0x7feada1f2480": 93, "0x7feada1f2520": 93, "0x7feada1f25c0": 93, "0x7feada1f2660": 93, "0x7feada1f2700": 93, "0x7feada1f27a0": 93, "0x7feada1f2840": 93, "0x7feada1f28e0": 93, "0x7feada1f2980": 93, "0x7feada1f2a20": 93, "0x7feada1f2ac0": 93, "0x7feada1f2b60": 93, "0x7feada1f2c00": 93, "0x7feada1f2ca0": 93, "0x7feada1f2d40": 93, "0x7feada1f2e80": 93, "0x7feada1f2f20": 93, "0x7feada1f2fc0": 93, "0x7feada1f3060": 93, "0x7feada1f3100": 93, "0x7feada1f31a0": 93, "0x7feada1f3240": 93, "0x7feada1f32e0": 93, "0x7feada1f3380": 93, "0x7feada1f3420": 93, "0x7feada1f34c0": 93, "0x7feada1f3560": 93, "0x7feada1f3600": 93, "0x7feada1f36a0": 93, "0x7feada1f3740": 93, "0x7feada1f37e0": 93, "0x7feada1f3880": 93, "0x7feada1f3920": 93, "0x7feada1f39c0": 93, "0x7feada1f3a60": 93, "0x7feada1f3b00": 93, "0x7feada1f3ba0": 93, "0x7feada1f3c40": 93, "0x7feada1f3ce0": 93, "0x7feada1f3d80": 93, "0x7feada1f3e20": 93, "0x7feada1f3ec0": 93, "0x7feada1f3f60": 93, "0x7feada220040": 93, "0x7feada2200e0": 93, "0x7feada220220": 93, "0x7feada2202c0": 93, "0x7feada220360": 93, "0x7feada2204a0": 93, "0x7feada220540": 93, "0x7feada2205e0": 93, "0x7feada220720": 93, "0x7feada2207c0": 93, "0x7feada220860": 93, "0x7feada220900": 93, "0x7feada2209a0": 93, "0x7feada220a40": 93, "0x7feada220ae0": 93, "0x7feada220c20": 93, "0x7feada220cc0": 93, "0x7feada220d60": 93, "0x7feada220ea0": 93, "0x7feada220f40": 93, "0x7feada220fe0": 93, "0x7feada221120": 93, "0x7feada2211c0": 93, "0x7feada221260": 93, "0x7feada221300": 93, "0x7feada2213a0": 93, "0x7feada221440": 93, "0x7feada2214e0": 93, "0x7feada221580": 93, "0x7feada221620": 93, "0x7feada2216c0": 93, "0x7feada221800": 93, "0x7feada2218a0": 93, "0x7feada2219e0": 93, "0x7feada221b20": 93, "0x7feada221c60": 93, "0x7feada221d00": 93, "0x7feada221da0": 93, "0x7feada221ee0": 93, "0x7feada222020": 93, "0x7feada2220c0": 93, "0x7feada222160": 93, "0x7feada222200": 93, "0x7feada2222a0": 93, "0x7feada2223e0": 93, "0x7feada222520": 93, "0x7feada222660": 93, "0x7feada222700": 93, "0x7feada2227a0": 93, "0x7feada2228e0": 93, "0x7feada222980": 93, "0x7feada222a20": 93, "0x7feada222b60": 93, "0x7feada222c00": 93, "0x7feada222de0": 93, "0x7feada222e80": 93, "0x7feada223060": 93, "0x7feada2232e0": 93, "0x7feada223560": 93, "0x7feada2237e0": 93, "0x7feada223880": 93, "0x7feada2689a0": 93, "0x7feada268a40": 93, "0x7feada268c20": 93, "0x7feada268cc0": 93, "0x7feada269760": 93, "0x7feada269800": 93, "0x7feada2699e0": 93, "0x7feada269c60": 93, "0x7feada269ee0": 93, "0x7feada26a7a0": 93, "0x7feada26a980": 93, "0x7feada26aa20": 93, "0x7feada26aca0": 93, "0x7feada26af20": 93, "0x7feada26b600": 93, "0x7feada26b880": 93, "0x7feada26bb00": 93, "0x7feada26bc40": 93, "0x7feada26bec0": 93, "0x7feada298180": 93, "0x7feada298220": 93, "0x7feada2982c0": 93, "0x7feada298a40": 93, "0x7feada298e00": 93, "0x7feada299da0": 93, "0x7feada29a020": 93, "0x7feada29a700": 93, "0x7feada29ab60": 93, "0x7feada29b100": 93, "0x7feada29b1a0": 93, "0x7feada29b380": 93, "0x7feada29b880": 93, "0x7feada29be20": 93, "0x7feada2c4540": 93, "0x7feada2c4860": 93, "0x7feada2c4fe0": 93, "0x7feada2c5300": 93, "0x7feada2c58a0": 93, "0x7feada2c5bc0": 93, "0x7feada2c5c60": 93, "0x7feada2c5f80": 93, "0x7feada2c67a0": 93, "0x7feada2c68e0": 93, "0x7feada2c6a20": 93, "0x7feada2c6ca0": 93, "0x7feada2c72e0": 93, "0x7feada2c74c0": 93, "0x7feada2c7560": 93, "0x7feada2c7920": 93, "0x7feada2c7ba0": 93, "0x7feada2c7c40": 93, "0x7feada2c7e20": 93, "0x7feada2c7ec0": 93, "0x7feada2e84a0": 93, "0x7feada2e85e0": 93, "0x7feada2e89a0": 93, "0x7feada2e8d60": 93, "0x7feada2e9260": 93, "0x7feada2e9760": 93, "0x7feada2e99e0": 93, "0x7feada2e9a80": 93, "0x7feada2e9f80": 93, "0x7feada2ea480": 93, "0x7feada2ea980": 93, "0x7feada2eae80": 93, "0x7feada2eb380": 93, "0x7feada2eb9c0": 93, "0x7feada2ebec0": 93, "0x7feada2f8400": 93, "0x7feada2f8e00": 93, "0x7feada2f9120": 93, "0x7feada2f9620": 93, "0x7feada2fa020": 93, "0x7feada2fa0c0": 93, "0x7feada2fa520": 93, "0x7feada2faa20": 93, "0x7feada2faf20": 93, "0x7feada2fb420": 93, "0x7feada2fb4c0": 93, "0x7feada2fb920": 93, "0x7feada310180": 93, "0x7feada3107c0": 93, "0x7feada310b80": 93, "0x7feada311080": 93, "0x7feada311580": 93, "0x7feada311a80": 93, "0x7feada311f80": 93, "0x7feada312480": 93, "0x7feada312520": 93, "0x7feada312980": 93, "0x7feada312e80": 93, "0x7feada313100": 93, "0x7feada313a60": 93, "0x7feada313f60": 93, "0x7feada3244a0": 93, "0x7feada3249a0": 93, "0x7feada324e00": 93, "0x7feada325260": 93, "0x7feada3256c0": 93, "0x7feada325760": 93, "0x7feada325b20": 93, "0x7feada325f80": 93, "0x7feada326160": 93, "0x7feada326200": 93, "0x7feada3263e0": 93, "0x7feada326840": 93, "0x7feada326ca0": 93, "0x7feada3277e0": 93, "0x7feada327c40": 93, "0x7feada3400e0": 93, "0x7feada340680": 93, "0x7feada340ae0": 93, "0x7feada340f40": 93, "0x7feada3413a0": 93, "0x7feada341800": 93, "0x7feada341c60": 93, "0x7feada341d00": 93, "0x7feada3420c0": 93, "0x7feada342160": 93, "0x7feada342660": 93, "0x7feada342ac0": 93, "0x7feada342f20": 93, "0x7feada343380": 93, "0x7feada3437e0": 93, "0x7feada3439c0": 93, "0x7feada343e20": 93, "0x7feada3602c0": 93, "0x7feada360720": 93, "0x7feada360b80": 93, "0x7feada360fe0": 93, "0x7feada361440": 93, "0x7feada3618a0": 93, "0x7feada361d00": 93, "0x7feada361f80": 93, "0x7feada3623e0": 93, "0x7feada362b60": 93, "0x7feada362f20": 93, "0x7feada3632e0": 93, "0x7feada363560": 93, "0x7feada3637e0": 93, "0x7feada363ba0": 93, "0x7feada363e20": 93, "0x7feada363ec0": 93, "0x7feada3787c0": 93, "0x7feada378860": 93, "0x7feada3789a0": 93, "0x7feada378a40": 93, "0x7feada378c20": 93, "0x7feada378cc0": 93, "0x7feada378e00": 93, "0x7feada379300": 93, "0x7feada3793a0": 93, "0x7feada379580": 93, "0x7feada379c60": 93, "0x7feada37a160": 93, "0x7feada37a200": 93, "0x7feada37a7a0": 93, "0x7feada37a8e0": 93, "0x7feada37ad40": 93, "0x7feada37ade0": 93, "0x7feada37b2e0": 93, "0x7feada37b4c0": 93, "0x7feada37ba60": 93, "0x7feada37bb00": 93, "0x7feada37be20": 93, "0x7feada39c540": 93, "0x7feada39c720": 93, "0x7feada39c9a0": 93, "0x7feada39cae0": 93, "0x7feada39cea0": 93, "0x7feada39cf40": 93, "0x7feada39d1c0": 93, "0x7feada39d4e0": 93, "0x7feada39db20": 93, "0x7feada39df80": 93, "0x7feada39e160": 93, "0x7feada39e5c0": 93, "0x7feada39e7a0": 93, "0x7feada39e840": 93, "0x7feada39ea20": 93, "0x7feada39eac0": 93, "0x7feada39ede0": 93, "0x7feada39f1a0": 93, "0x7feada39f2e0": 93, "0x7feada39f420": 93, "0x7feada39f4c0": 93, "0x7feada39f560": 93, "0x7feada39f6a0": 93, "0x7feada39fb00": 93, "0x7feada39fba0": 93, "0x7feada39fc40": 93, "0x7feada39fd80": 93, "0x7feada39fec0": 93, "0x7feada39ff60": 93, "0x7feada3c4ae0": 93, "0x7feada3c4d60": 93, "0x7feada3c4e00": 93, "0x7feada3c4fe0": 93, "0x7feada3c5260": 93, "0x7feada3c5300": 93, "0x7feada3c54e0": 93, "0x7feada3c5580": 93, "0x7feada3c5940": 93, "0x7feada3c5bc0": 93, "0x7feada3c5e40": 93, "0x7feada3c6020": 93, "0x7feada3c6160": 93, "0x7feada3c6480": 93, "0x7feada3c6700": 93, "0x7feada3c67a0": 93, "0x7feada3c6a20": 93, "0x7feada3c6c00": 93, "0x7feada3c6de0": 93, "0x7feada3c6f20": 93, "0x7feada3c72e0": 93, "0x7feada3c7560": 93, "0x7feada3c7a60": 93, "0x7feada3c7ce0": 93, "0x7feada3e04a0": 93, "0x7feada3e07c0": 93, "0x7feada3e0ae0": 93, "0x7feada3e0b80": 93, "0x7feada3e0cc0": 93, "0x7feada3e0e00": 93, "0x7feada3e0ea0": 93, "0x7feada3e0f40": 93, "0x7feada3e1580": 93, "0x7feada3e18a0": 93, "0x7feada3e1bc0": 93, "0x7feada3e1c60": 93, "0x7feada3e1d00": 93, "0x7feada3e1f80": 93, "0x7feada3e2020": 93, "0x7feada3e2200": 93, "0x7feada3e22a0": 93, "0x7feada3e23e0": 93, "0x7feada3e2520": 93, "0x7feada3e27a0": 93, "0x7feada3e2840": 93, "0x7feada3e2980": 93, "0x7feada3e2b60": 93, "0x7feada3e3240": 93, "0x7feada3e3600": 93, "0x7feada3e37e0": 93, "0x7feada3e3880": 93, "0x7feada3e3ec0": 93, "0x7feada40c0e0": 93, "0x7feada40c180": 93, "0x7feada40c7c0": 93, "0x7feada40cc20": 93, "0x7feada40cf40": 93, "0x7feada40cfe0": 93, "0x7feada40d120": 93, "0x7feada40d1c0": 93, "0x7feada40d580": 93, "0x7feada40d620": 93, "0x7feada40d6c0": 93, "0x7feada40d800": 93, "0x7feada40d940": 93, "0x7feada40db20": 93, "0x7feada40dbc0": 93, "0x7feada40e520": 93, "0x7feada40e700": 93, "0x7feada40e840": 93, "0x7feada40eac0": 93, "0x7feada40eb60": 93, "0x7feada40ef20": 93, "0x7feada40f1a0": 93, "0x7feada40f240": 93, "0x7feada40f560": 93, "0x7feada40f880": 93, "0x7feada40fba0": 93, "0x7feada40fec0": 93, "0x7feada428720": 93, "0x7feada428900": 93, "0x7feada428a40": 93, "0x7feada428ae0": 93, "0x7feada428cc0": 93, "0x7feada429120": 93, "0x7feada429300": 93, "0x7feada429620": 93, "0x7feada429760": 93, "0x7feada429800": 93, "0x7feada429940": 93, "0x7feada4299e0": 93, "0x7feada429da0": 93, "0x7feada429f80": 93, "0x7feada42a160": 93, "0x7feada42a200": 93, "0x7feada42a340": 93, "0x7feada42a480": 93, "0x7feada42a520": 93, "0x7feada42aca0": 93, "0x7feada42b380": 93, "0x7feada42bd80": 93, "0x7feada450540": 93, "0x7feada4505e0": 93, "0x7feada450680": 93, "0x7feada450a40": 93, "0x7feada450b80": 93, "0x7feada450fe0": 93, "0x7feada4514e0": 93, "0x7feada4516c0": 93, "0x7feada4518a0": 93, "0x7feada4519e0": 93, "0x7feada451a80": 93, "0x7feada451b20": 93, "0x7feada451bc0": 93, "0x7feada451c60": 93, "0x7feada452020": 93, "0x7feada4520c0": 93, "0x7feada4527a0": 93, "0x7feada452980": 93, "0x7feada452a20": 93, "0x7feada452d40": 93, "0x7feada452de0": 93, "0x7feada452e80": 93, "0x7feada453060": 93, "0x7feada453100": 93, "0x7feada453240": 93, "0x7feada4532e0": 93, "0x7feada453380": 93, "0x7feada4537e0": 93, "0x7feada453880": 93, "0x7feada453920": 93, "0x7feada4539c0": 93, "0x7feada453b00": 93, "0x7feada453ba0": 93, "0x7feada453c40": 93, "0x7feada453d80": 93, "0x7feada453e20": 93, "0x7feada453ec0": 93, "0x7feada453f60": 93, "0x7feada478040": 93, "0x7feada478180": 93, "0x7feada4782c0": 93, "0x7feada478400": 93, "0x7feada478540": 93, "0x7feada478680": 93, "0x7feada4787c0": 93, "0x7feada478900": 93, "0x7feada478a40": 93, "0x7feada478b80": 93, "0x7feada47a160": 93, "0x7feada47a660": 93, "0x7feada47a700": 93, "0x7feada47ab60": 93, "0x7feada47b060": 93, "0x7feada47b560": 93, "0x7feada47ba60": 93, "0x7feada47bf60": 93, "0x7feada56c680": 93, "0x7feada56c720": 93, "0x7feada56c9a0": 93, "0x7feada56cb80": 93, "0x7feada56d1c0": 93, "0x7feada56d260": 93, "0x7feada56d300": 93, "0x7feada56d760": 93, "0x7feada56d800": 93, "0x7feada56dbc0": 93, "0x7feada56e160": 93, "0x7feada56e3e0": 93, "0x7feada56e480": 93, "0x7feada56e520": 93, "0x7feada56e8e0": 93, "0x7feada56ea20": 93, "0x7feada56ed40": 93, "0x7feada56ede0": 93, "0x7feada56efc0": 93, "0x7feada56f100": 93, "0x7feada56f1a0": 93, "0x7feada56f600": 93, "0x7feada56f6a0": 93, "0x7feada56f740": 93, "0x7feada56fec0": 93, "0x7feada56ff60": 93, "0x7feada5b4180": 93, "0x7feada5b42c0": 93, "0x7feada5b4720": 93, "0x7feada5b47c0": 93, "0x7feada5b49a0": 93, "0x7feada5b4b80": 93, "0x7feada5b4ea0": 93, "0x7feada5b5440": 93, "0x7feada5b54e0": 93, "0x7feada5b56c0": 93, "0x7feada5b5a80": 93, "0x7feada5b5b20": 93, "0x7feada5b5bc0": 93, "0x7feada5b6160": 93, "0x7feada5b63e0": 93, "0x7feada5b67a0": 93, "0x7feada5b68e0": 93, "0x7feada5b6e80": 93, "0x7feada5b6f20": 93, "0x7feada5b7240": 93, "0x7feada5b7600": 93, "0x7feada5b7880": 93, "0x7feada5b7b00": 93, "0x7feada5b7ba0": 93, "0x7feada5b7ce0": 93, "0x7feada5b7e20": 93, "0x7feada937ba0": 93, "0x7feadab8e6c0": 93, "0x7feadabb0170": [267, 268], "0x7febd8cf5320": [93, 267, 268], "0x7ff9d5517b90": [], "0xa20960": [203, 207], "1": [3, 4, 9, 10, 12, 15, 19, 21, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 83, 92, 93, 94, 95, 96, 100, 101, 105, 107, 109, 111, 112, 115, 117, 118, 121, 122, 123, 128, 130, 131, 135, 137, 138, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 247, 249, 251, 253, 255, 257, 261, 264, 265, 267, 268, 269, 270, 271], "10": [3, 9, 10, 15, 18, 19, 21, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 92, 93, 135, 137, 142, 144, 170, 188, 194, 195, 196, 200, 201, 203, 204, 205, 207, 209, 210, 213, 219, 222, 227, 228, 229, 232, 233, 236, 237, 240, 242, 244, 249, 255, 264, 267, 268], "100": [9, 62, 95, 194, 195, 196, 197, 203, 205, 207, 213, 267, 268], "1000": [62, 135, 203, 205, 207, 209, 236], "10000": [214, 219, 220, 230, 238], "1000000000": [267, 269], "10000000000": 267, "100233": 205, "1008": 207, "10084128": 207, "101": [92, 93, 192, 193, 194, 195, 196, 197, 198, 199, 203, 207, 208, 210, 211, 242, 249, 258, 271], "101267337799072": 219, "1012768745422363": 219, "1015": 9, "1016": 247, "10162513703107834": 267, "10185": 203, "10191": 9, "101dummi": [57, 75, 240], "101dummy16": [57, 75, 240], "101dummytupl": 240, "102": [192, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 236, 258, 267, 268, 271], "1020": 207, "10206207261596575": 214, "1021": [203, 207], "10210": 9, "1024": [55, 71, 92, 93, 109, 115, 121, 128, 135, 137, 194, 195, 196, 197, 200, 201, 203, 205, 207, 217, 222, 223, 228, 230, 238, 241, 242, 249, 253, 257, 267, 268, 269, 270], "10240": [230, 238], "1024x1": [196, 197], "1024x1024": 200, "1024x16": 228, "1024x1x2x1024": [196, 197], "1024x512": 200, "1024x64": 255, "1025": [267, 268, 269, 270], "1026": [], "103": [196, 197, 203, 207], "10323678168157736": 216, "1033": 249, "1034517": 201, "104": [196, 197, 203, 207], "1041": 207, "10430492": 207, "1043415": 201, "10462": [], "10485": 9, "1049": [207, 233], "105": [196, 197, 207, 242], "1050": 207, "1056": 207, "105724": 201, "106": [9, 196, 197, 207, 217], "1060": 240, "1060567": 201, "106099976932455e": [], "1062": [9, 203, 207], "106230": 205, "1063628290221156e": [], "106363e": [], "1064": 203, "1064651730000605": 253, "1065": [203, 207], "106682": 203, "106684": 203, "1067": 207, "1068": 207, "107": [9, 196, 197, 207, 217, 268], "1070": [203, 207], "107069": 201, "1071": 207, "107454299926758": 111, "107513": 207, "1077": 9, "107713368422477e": [], "108": [196, 197, 207, 217], "1087": 210, "10873": 251, "1088": 207, "109": [9, 196, 197, 203], "10909": 9, "1091": 9, "109205": 203, "1095": 207, "1097": 195, "1097300": 207, "1097820": 207, "1097865": 201, "109806": 207, "109997": 207, "1099998950958252": [214, 219, 220], "10it": [194, 213], "10x32": 249, "11": [9, 111, 144, 170, 188, 194, 200, 203, 207, 210, 213, 217, 219, 223, 227, 228, 229, 235, 240, 249, 255, 264, 267, 268], "110": [196, 197, 203, 207], "1100000143051147": [214, 219, 220], "110013": 207, "11005": 9, "11008": [194, 253], "11010": 207, "1101327999203846e": 111, "110133e": 111, "1104": 207, "1105": 207, "11051": 9, "1106": 207, "11073593": 208, "1108": 201, "110919082332138e": 210, "11095": 270, "111": [196, 197, 203, 207], "1110": 201, "1111": 203, "111111": 210, "1113": 201, "1114": [201, 203], "1118": 9, "112": [196, 201, 207, 268], "1120": 242, "1121": 9, "112105": 201, "1122": 193, "1123": [201, 204], "112359": 201, "1125": [210, 219, 253], "1127": 201, "1129": 210, "112906": 205, "113": [196, 207, 209, 267, 268], "113191": 207, "1136": 9, "1139": 9, "114": [196, 201], "1141115999998874": 241, "1142": 203, "114270": 205, "11427008400278282": 205, "1144": [203, 207], "11475": 207, "1149": 9, "11498": 9, "115": [9, 196, 201, 207], "11503": 9, "115243": 207, "11575": 207, "11576565355062485": [], "1158": [203, 207], "1159": [203, 210, 219, 253], "115990": 207, "116": [196, 201, 207, 214, 219, 240, 268], "116046": 207, "1167": [193, 195], "116855": 207, "117": [9, 196, 200, 203, 205, 207, 241, 267], "117009": 121, "1173": 195, "117458343505859": 219, "1178": 249, "1179": 210, "117926": 207, "118": [9, 196, 203, 207, 253], "118099999075639e": [], "11819536238908768": 267, "1182": 9, "118213": 205, "118403": 201, "11876261": 236, "118800": 207, "11888": 9, "118899624647952e": 221, "1189": 203, "119": [196, 200, 203, 207, 253, 264], "1190": [], "1191": 207, "119158490095288": 57, "1192": 207, "1196": [203, 207], "1198": 207, "11986815900013426": 253, "11it": 213, "12": [93, 144, 170, 188, 193, 195, 196, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 219, 220, 224, 227, 228, 231, 232, 235, 236, 237, 238, 240, 247, 249, 253, 255, 264, 267, 268, 269, 270], "120": [196, 200, 207, 210], "12000274658203": [214, 219, 220], "12019722908735275": [], "120399772655219e": 228, "120413": 200, "120453": 201, "1205": 9, "12054": 9, "120551": 201, "120799": 203, "120812": 201, "120839": 201, "12095": 207, "121": [196, 203, 207, 268], "121072": 201, "1211320670": [203, 204, 241], "1212": 193, "1213": 9, "12133": 251, "121532": 201, "121800": 207, "121900014477433e": [], "122": [9, 196, 203, 207, 249], "1220": [9, 207], "12201979011297226": 93, "122200016354327e": 249, "1223": [203, 207, 210, 219], "122495": 207, "1225": 203, "1226281150232517e": [], "122628e": [], "12270199862125": 236, "1228": 9, "123": [196, 200, 201, 203, 210, 219, 253], "123491": 207, "12381": 9, "1239": [203, 207], "124": [196, 201, 203, 207], "1240": [201, 203, 207, 238], "124035": [], "124038": 251, "1241": [9, 201], "124100013948919e": 249, "1244": 201, "125": [196, 201, 203, 214, 224, 232, 247, 267], "1250477": 201, "12528106570243835": [], "1253": 210, "125325": 207, "125624": 203, "1257": 193, "125764": 207, "1258": [203, 207], "126": [196, 207], "1260": [9, 207], "12626481": 224, "1264": [203, 207, 230], "127": [9, 196], "1272": [203, 207], "12721317": 201, "1275": 9, "1278": [210, 219], "1279": [203, 207], "127982": 203, "128": [9, 128, 196, 201, 203, 205, 207, 228, 267, 268, 269, 270], "128064": 203, "1282": 195, "1283": 9, "12847295": 224, "1285": 219, "128787": 201, "128k": 122, "128x16": 228, "129": [196, 207], "1291504": 201, "129161": 201, "12947": 9, "1295": 207, "12986": 9, "12i": 210, "12it": 213, "12site": 195, "13": [9, 92, 93, 124, 125, 126, 144, 170, 188, 194, 200, 203, 205, 207, 209, 213, 219, 228, 230, 238, 240, 249, 255], "130": [196, 203, 204, 207, 255], "1300": 240, "1302": 193, "130261": 207, "130568727850914": [], "1308": 203, "13080": 207, "131": [196, 200, 201, 207], "1310": 207, "131072": [214, 219, 220], "1316": [203, 207], "13162": 203, "131790": 207, "1319": 9, "132": [9, 196, 201, 203, 207], "13200533390045166": [], "13226519525051117": 93, "132392": 201, "1326": [214, 219, 232], "1326423": 201, "133": [196, 203, 207], "1330996": 201, "1332": 253, "1333": [203, 207], "1335": 207, "134": [193, 196, 207, 268], "134290": 207, "1344": 9, "1345": [207, 210], "13456": 207, "13483522": 240, "134973526001": 204, "135": [196, 207, 268, 270], "1350": 207, "135000017413404e": 249, "1352638602256775": 93, "135284": 209, "13548": 9, "135518": 203, "13559997570701e": 249, "1359999916749075e": [], "136": [196, 203, 207], "136000": 203, "136004": 207, "136087": 207, "1361": 201, "1365": 207, "136543": 108, "1367": 207, "136746": 207, "1368": 201, "137": [9, 196, 203, 207], "1370": [203, 207], "1371": 207, "1373": [203, 207, 214, 219, 232], "13730": 207, "1375": 207, "1375685e": 201, "138": [196, 203, 207], "13800h": 194, "13893": 201, "13896": 201, "139": [196, 267, 268], "1395": [207, 247], "13953381776809692": [], "139604091644287": 216, "1399999856948853": [214, 219, 220], "13it": 213, "13th": 194, "14": [9, 124, 125, 126, 144, 153, 170, 188, 195, 200, 203, 205, 207, 209, 213, 228, 249, 255, 267, 268], "140": [9, 93, 196, 207, 242, 249], "1400032043457": [214, 219, 220], "14003": 201, "14004": 201, "14006": 201, "14007": 201, "14008": 201, "14009": 201, "14012": 201, "14013": 201, "14015": 201, "14016": 201, "14017": 201, "14020": 201, "1405": 9, "1407": 207, "141": [196, 203, 207], "14127": 201, "14131": 201, "14137": 201, "1414": [203, 207], "14143": 201, "14144": 201, "14145": 201, "14146": 201, "141691": 207, "1418": [203, 207], "142": [9, 196, 264, 267], "1423": 210, "14251": 201, "142585": 207, "14267": 201, "14269": 201, "142776": 205, "1429": 9, "143": [196, 207], "1432": 9, "1432250909999766": 253, "14370": 9, "14376931": 201, "14385": 201, "14392": 201, "14393": 201, "14394": 201, "144": [9, 196, 203, 205, 207], "14445868134498596": 93, "1445451180140178": [], "14485": 9, "145": [196, 203, 207], "14501": 201, "14502": 201, "14503": 201, "14505": 201, "14506415": 201, "14509": 201, "14510": 201, "14514": 201, "14515": 201, "14516": 201, "14518": 201, "1453": 9, "1456": 9, "1458": [203, 207], "145805835723877": [], "1459": 203, "146": [128, 196, 203], "1461": 207, "14615": 9, "14621": 201, "14622": 201, "14626": 201, "1463": 210, "14633": 201, "14658774435520172": [], "146603584289551": 219, "147": [9, 196, 203], "1473262757062912": 93, "14744": 201, "14752": 201, "147539": 251, "14754": 201, "14755": 201, "14757": 201, "14758": 201, "1476": 201, "14765608310699463": [], "147688": 201, "14786": 9, "148": [196, 203, 207, 242, 267], "14810219407081604": [], "14813603": 201, "14817766845226288": [], "14819898": 236, "1482": 201, "148220": 207, "1485": 207, "148500": 207, "14852": 203, "1486150026321411": 93, "14868": 193, "1487": 201, "14879": 201, "14881": 201, "14884": 201, "14891": 201, "148933": 203, "149": [9, 196, 207], "1491": [203, 207], "149200021354773e": 249, "14946": 9, "149683": 205, "1497": [203, 207], "1499": 9, "14992": 201, "149920": 207, "14999": 201, "14it": 213, "15": [9, 121, 124, 125, 126, 144, 170, 188, 194, 195, 200, 205, 207, 209, 210, 213, 214, 228, 236, 242, 249, 251, 255, 268], "150": [9, 128, 196, 203, 207, 208, 242], "1500": [209, 236], "15005": 201, "15007": 201, "15009": 201, "15012": 201, "15013": 201, "15015": 201, "151": [128, 196, 207], "1510": 9, "15116": 201, "1512": 203, "15120": 201, "15122": 201, "15124": 201, "15125": 201, "15132": 201, "15135": 201, "15139": 201, "151418758401394e": 207, "1516000123920094e": [], "1518": 238, "15191704034805298": 247, "152": [9, 196, 207], "15219998962857e": 249, "152271": 195, "1523": 242, "15248": 201, "1525": 229, "15252": 201, "15253": 201, "1526": 251, "1528": [203, 207], "1529": 242, "153": [196, 247, 267], "15369": 201, "15373": 201, "1538": 203, "1539": 205, "154": [128, 196, 203, 207, 267, 268], "15408": 193, "1545": 9, "1546": 207, "1549": [], "155": [196, 207, 242, 267, 268], "1553": 238, "15539": 193, "15549": 9, "15562": 201, "1557": [203, 207], "15574": 251, "155795574188232": 219, "15594": 219, "156": [196, 207], "156250": 203, "15630463825218383": 236, "1564": [], "1567045": 207, "15675": 203, "1568": [203, 207], "157": [196, 203, 207], "1570": 207, "1574": 207, "1574890": 207, "15789936482906342": 93, "1579": 229, "158": [9, 196, 203], "1580": 207, "1582": [9, 207], "158254283000019": [], "1583": [210, 219], "158475": 207, "15856191800003": 240, "1587": [210, 219], "1589894221542636": 219, "159": [9, 194, 196, 200, 247, 249, 268], "1590": 251, "159030914306641": 219, "1595": 230, "1599": 207, "1599998474121094": [214, 219, 220], "15e": 196, "16": [9, 121, 124, 125, 126, 128, 144, 170, 188, 193, 194, 195, 200, 203, 204, 205, 207, 213, 215, 228, 229, 230, 237, 238, 247, 249, 255, 257, 264, 267, 268, 269, 270], "160": 196, "160156": 203, "160325": 207, "160494804382324": 219, "1605": [203, 207], "16055181622505188": [], "1606": [203, 207], "1607": [203, 207], "1607976206060913": 216, "1608": [209, 236], "1609": 9, "161": 196, "1611": 207, "1615": 203, "16160": 9, "1616469422976174": [], "1617": 203, "161731": 201, "1618": 9, "162": [196, 247, 249], "162037": 195, "1625": 230, "1627": 203, "16278": 203, "16295": 207, "163": [194, 196, 203], "1634": 205, "16376": [], "1637851744890213": [], "16379": 9, "16382": 9, "16384": [214, 219], "1639": 230, "164": [194, 196, 207, 267], "1641": 207, "16428888589143753": 210, "164599997442565e": 249, "1648": [203, 207], "165": [9, 196, 242, 267], "1652": 9, "1653": 9, "1655": 203, "16578": 9, "166": [9, 196, 207], "16630295": 236, "166303": 236, "16643796861171722": 93, "167": [196, 203], "1672": 195, "167281150817871": 216, "1674": [203, 207], "1674855798482895": 268, "167768": 201, "16777216": 135, "1679": [210, 219], "167969": 205, "168": [196, 203], "1681967": 201, "1682": 203, "1684": 195, "168654": 207, "169": 196, "1691": 242, "1692": 207, "16923104226589203": 93, "16956": 203, "1699998378753662": [214, 219, 220], "16x1024x1024": [196, 255], "16x1024x64": [196, 255], "16x128": 228, "16x16": 228, "16x64x1024": [196, 255], "17": [9, 144, 188, 194, 196, 200, 203, 205, 207, 209, 213, 214, 219, 220, 227, 228, 235, 247, 249, 255, 267, 268], "170": [9, 196, 207, 249], "17018": 203, "1702": [203, 207], "170313": 201, "1705": 207, "17060": 203, "17089": 9, "171": [196, 203, 207, 242, 268], "1710": 242, "17122": 203, "1715": 207, "1719439029693604": 219, "172": [196, 251], "172043": 201, "1723": 207, "1728587": 201, "1729633": 203, "173": [9, 196, 207, 223, 247, 268], "174": [9, 196, 207, 242, 267], "1741": 205, "1742": 205, "1743": [], "1749": 205, "175": [196, 203, 207], "175755": 205, "175781": 203, "176": [196, 207, 242, 268], "1760": [210, 219], "1763137": 203, "1767": [210, 219, 232, 269, 270], "177": [9, 196, 247, 268], "1771": 207, "1775": 9, "1777": 9, "17770": 9, "1778": [9, 210, 219, 232, 269, 270], "17786": 9, "178": [196, 207], "1780": 207, "178419": 207, "17866996": 201, "1787": [210, 219], "1787819117307663": 267, "179": [196, 203, 207, 242], "1791": 203, "1792": 203, "17932": 9, "1796": 203, "1798": [], "17983": 203, "17985": 9, "179913670000019": [], "18": [9, 18, 21, 56, 63, 64, 65, 66, 67, 68, 69, 70, 87, 93, 128, 138, 144, 178, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 211, 213, 216, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 238, 239, 240, 247, 249, 255, 257, 258, 264, 267, 268], "180": [196, 207], "1805": 207, "1807": 9, "18090533": 201, "180e": [], "181": 196, "18125": 207, "1819": 195, "182": [196, 203, 218], "18296290554159592": 219, "183": [196, 207, 267], "183324": 201, "183366775513": 204, "1835": [195, 203, 207], "18355778": 201, "183594": 203, "1839999842777615e": [], "184": [196, 210, 214, 219], "1843": 203, "185": [196, 200, 207, 214, 242], "1852": [203, 207], "1855769157409668": 219, "1857": [210, 219], "186": [196, 214, 236, 247], "18608": 193, "1864": 9, "1864018440246582": [], "1864996": 201, "1865": 207, "186967": 201, "187": [9, 196, 242, 267], "1871": [207, 230], "1872": 207, "1873393": 201, "187400006434473e": [], "188": [196, 207, 214, 267], "1883": 9, "1885": [112, 207, 210, 219], "1887905597686768": 219, "1889": 203, "189": [112, 196, 203, 207, 214, 242], "189062": 201, "18909": 193, "1893": 9, "1893999953827006e": [], "1898": 203, "1899786": 201, "189999580383301": [214, 219, 220], "18it": 213, "19": [9, 144, 200, 203, 205, 207, 213, 215, 228, 238, 239, 240, 242, 247, 249, 251, 255, 258, 264, 268], "190": [9, 196, 207, 214, 219, 242], "1901": [210, 219], "190193772315979": 219, "190237045288086": 219, "1902371644973755": 219, "1902378797531128": 219, "1902380714238083": 214, "190287": 201, "19034600099996624": [], "190684": 201, "190873": 201, "191": [9, 196, 200, 205, 207], "1916": 195, "1918": 9, "192": [196, 210, 222], "1920": 203, "1922": 238, "1925": [203, 207], "1926": 9, "19269": 9, "1929": 9, "193": [196, 207, 214, 249, 268], "193138296000029": [], "1933": 253, "193359": 203, "1935956478118896": [], "193595691160722": [], "194": [196, 200, 267], "1944": 207, "194536": 236, "194685935974121": 219, "195": [196, 203, 207, 242, 267], "196": [196, 268], "1960": [203, 207], "196058": 203, "1966": [195, 204], "19677": 232, "197": [9, 196, 203, 268], "1970381749999888": 253, "197069": 208, "19706935": 208, "1971": [9, 203], "1975": [210, 219], "198": [196, 214, 251], "1980147": 201, "1989": 238, "199": 196, "199999809265137": [214, 219, 220], "1_1": [93, 196, 204, 230, 267, 268], "1_12": 267, "1_16": 257, "1_1_1": [267, 268], "1_64": 196, "1d": 135, "1e": [95, 111, 119, 128, 196, 204, 209, 210, 214, 219, 220, 222, 230, 236, 238], "1e9": [267, 268, 269, 270], "1gb": [203, 205, 207], "1hsuttvvyh1ptew89rtpeu84ht3nqeftyhax3ypa_xj": [219, 220, 224, 232, 267, 268, 269, 270], "1kz_bbb3jnolbuzledt6635dhs88zvyid8jt": [214, 232], "1l": 60, "1st": [214, 232], "1t": [200, 228, 249], "1x": 253, "1x1": 196, "1x1024": 255, "1x1024x1": 255, "1x1024x1x64": [196, 197, 255], "1x1024x64": [196, 255], "1x16x30": 228, "1x1x1024": 196, "1x1x1024x64": [196, 197, 255], "1x1x64x1024": 196, "1x2x1024x1024": 196, "1x30": 228, "1x30x1": 228, "1x30x128": 228, "1x30x16": 228, "1x30x30": 228, "1x30x32": 228, "1x32": 249, "1x32x1": 196, "1x32x1024": 196, "1x64x1024": 196, "1x8192x4": 268, "1x8192x6": 268, "2": [3, 9, 12, 15, 21, 56, 57, 60, 62, 71, 92, 93, 95, 96, 107, 109, 111, 112, 113, 117, 121, 122, 123, 124, 125, 126, 128, 131, 138, 144, 145, 153, 155, 156, 158, 164, 170, 177, 181, 185, 186, 188, 189, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 249, 251, 253, 255, 257, 258, 264, 267, 268, 269, 270, 271], "20": [9, 95, 111, 144, 153, 192, 195, 200, 203, 205, 207, 228, 242, 247, 249, 253, 255, 264], "200": [9, 196, 203, 207, 242], "2000": [4, 196, 197, 203, 207], "2000x512": [196, 197], "20037": 9, "20039": 193, "2005": 207, "201": [192, 193, 194, 195, 196, 197, 198, 200, 201, 204, 206, 208, 209, 211, 258, 271], "201440": 203, "2015": 207, "20169": 203, "202": [9, 203, 253], "2023": 252, "2024": [57, 240, 252], "2025": [195, 251, 267, 268, 269, 270], "2025328278541565": 210, "2029": 207, "203": [9, 207], "203064441680908": 219, "2033": [210, 219, 233, 253], "204": [9, 207, 267], "204175": 207, "2043": 237, "2044": 237, "2048": [194, 196, 197, 200, 230, 238, 253], "20481": 9, "2048x1024": 200, "2048x2000": 196, "2048x512": [196, 255], "205": [203, 207, 242], "20542464833706617": 111, "205900015425868e": 249, "2061": 207, "20653": 203, "207": 207, "20762": 251, "20790": 193, "208": [203, 268], "20839324593544006": 93, "20882782340049744": 93, "209": [9, 226], "2090": 238, "2095": 9, "209500002616551e": 249, "2099999720667256e": 249, "20it": [194, 213], "20l": 60, "21": [9, 144, 193, 195, 196, 200, 201, 203, 207, 213, 228, 242, 247, 249, 251, 255, 268], "210": [9, 207, 210, 214], "21000289916992": [214, 219, 220], "210627": 247, "2109": 9, "21096": 9, "211": [193, 203, 267], "212": 268, "212899996971828e": [], "213": 9, "2130": 207, "213045": 209, "213200049387524e": 9, "2138999788221554e": 249, "214": [9, 200, 203, 207], "214100014607538e": 249, "21417555212974548": 93, "2143": 9, "21437117457389832": [], "214899996033637e": 249, "2149": 203, "215": [200, 203, 268], "21553374826908112": [], "2157381772994995": [], "2159": [], "216": [207, 242], "2160": 207, "217": [203, 267], "2172": [210, 219, 253], "21780": 193, "2179878850777944": 210, "218": 207, "2187": 225, "218799962378398e": 249, "2188": [], "219": [203, 207, 247, 267], "219765058117438e": [], "21978959441184998": 268, "2199": [210, 219], "2199995517730713": [214, 219, 220], "22": [9, 144, 195, 200, 203, 207, 213, 228, 249, 255, 267], "220": [9, 203, 231], "2202": 9, "221": 203, "221581": 207, "221809": 201, "2219": 207, "222": [9, 203, 214, 247], "2221": 207, "222163200378418": 111, "2223": 207, "222656": 203, "2228": [210, 219], "22280": 207, "223": [247, 268], "223117": 201, "2233": 230, "223685264587402": 216, "22385592099999485": 240, "224": 9, "224927": 201, "225": [9, 203, 207, 249, 267], "2250": [209, 236], "2254": 210, "2255": 230, "2258": 230, "226": 203, "22605": 207, "2261": [], "226182937622": 204, "226499993364996e": [], "2265451249998023": 253, "226562": 203, "22660338878631592": 267, "22671": 193, "227": 267, "227113723754883": 219, "227270126342773": 111, "227940": 207, "228": 225, "22835148870944977": [], "228707": 195, "22898489236831665": [], "2290": [207, 210, 219], "229200516827404e": 228, "2293482000004587": 241, "229443": 201, "22957706451416": 216, "22991437": 209, "23": [9, 128, 144, 195, 200, 203, 207, 209, 228, 247, 249, 251, 255], "230": [194, 207], "2300000190734863": [214, 219, 220], "230125399471292e": 210, "23040137439966202": [], "2306": 203, "23097315430641174": [], "231": 267, "231132": 236, "231445": 203, "2315": 203, "23150528967380524": 268, "2317640483379364": 93, "2319": 207, "232": 194, "232655": [], "2329": [], "2330": 207, "2339": 9, "2340": 207, "2342": 203, "234375": 195, "2344": [9, 203, 207], "234438896179199": 219, "2345": [230, 238], "234523": 207, "234721": 201, "235": [9, 194, 207], "2350": 207, "2355489730834961": [], "236": [203, 247], "23659373899863567": 205, "236594": 205, "237": [], "2370": 207, "2370534": 201, "23731732": 224, "2374": 207, "2374286": 201, "237815": 201, "238": [193, 201, 207, 249], "2383": 9, "23856408157470552": 210, "239": [214, 267], "239127": 201, "2392": 219, "23922": 193, "2392216": 201, "23930585384368896": 210, "23966": 193, "2397": 207, "23985": 207, "2399748549999": 253, "23it": 194, "24": [9, 144, 193, 194, 207, 210, 211, 213, 214, 219, 220, 227, 228, 232, 235, 236, 247, 249, 255, 258, 264, 267, 269], "240": [207, 214], "240236": 9, "2405": 207, "241": 214, "241175174713135": 219, "241359": 201, "2414": 229, "242": [207, 214, 235], "242188": 203, "2428": 9, "2430": 207, "243164539337158": 219, "243199": 195, "2432": 9, "243851": 9, "244": 9, "2441930089948916": 219, "2442865": 201, "244287": 232, "24433039": 201, "2443999998577056e": 249, "2444": 207, "24442643": 236, "2448": 9, "24493035986874703": 219, "245": 207, "24526900053024292": [], "2453": 238, "24538704169494321": 219, "2455": [9, 207], "2457": 203, "245880": 195, "246": [203, 207], "246094": 195, "24662724596589647": 219, "2469": 203, "247": [207, 239], "2470": 9, "247188": 201, "24740": 207, "2478228658437729": 93, "2479": 203, "248": [199, 268], "248435": 207, "2485895": 201, "2489305": 201, "249": 207, "2490": 210, "2490679233978508e": 210, "24986": 242, "2499052456966862e": [], "25": [9, 144, 194, 195, 203, 207, 228, 236, 242, 249, 255, 257], "250": [193, 201, 203], "2501": 207, "25015": 207, "25052": 242, "250775": 207, "251": [202, 267], "2510082": 201, "2523": 9, "2528": 9, "253": [201, 242, 267], "253993034362793": 219, "254": [9, 207], "254106": 195, "2544967234134674": [], "255": [52, 203, 207], "2552": 203, "2556": 210, "256": [92, 93, 200, 203, 207, 228, 242], "2560": [230, 238], "25616": 201, "2565106": 208, "256x256": 228, "257": 207, "2574": 207, "2576": 230, "258": 9, "2582": 9, "2585": 230, "259": [201, 247], "259133338928223": 219, "2594149214932857e": 219, "26": [9, 144, 194, 195, 200, 203, 207, 213, 228, 236, 239, 249, 255, 264], "260": [207, 242], "261": 268, "2614045": 201, "2615": 207, "2616": 203, "261719": 205, "262": [207, 247, 267, 268], "2620": 9, "262144": [214, 219, 220], "2622437477111816": 210, "2622677": 201, "2622776925563812": [], "2624974846839905": [], "262911695241928": [], "262935161590576": 219, "263": [242, 268], "2638": 203, "264": [9, 203, 207, 210, 237, 238, 242, 267], "264078": 195, "2644186": 201, "265": [9, 207, 268], "265160737309391e": 207, "265339": 195, "2654": 210, "266": 268, "26600": 207, "26650": 207, "2666": 230, "267": [109, 203], "26707154512405396": 93, "2672": 193, "2674": 109, "2676": [], "2677750276401639": 210, "2678": 195, "267812": 201, "268": [128, 207, 242], "2681867": 236, "2682": 236, "26840463280677795": [], "269": [203, 207, 267], "269128": 201, "26940831542015076": [], "2698": 203, "27": [9, 144, 193, 195, 203, 205, 213, 224, 228, 249, 255, 267], "270": 207, "2700": 210, "270052": 236, "270175": 195, "270300005122408e": [], "270368": 201, "271": 203, "27170": 9, "272": [217, 219], "27239": 9, "272783279418945": 219, "2728": 9, "273": [203, 207, 217], "27315": 193, "2732": 9, "2734023332595825": 93, "274": 207, "2742": [], "2743": 207, "274580001831": 204, "274664": 195, "2749": 9, "275": [207, 217, 229, 268], "2751444399356842": 111, "2751444727182388": 111, "275299993925728e": 249, "276": 203, "277": [9, 207, 247, 268], "2773996e": 201, "2774105": 201, "278": 207, "2782377600669861": [], "27846455574035645": 219, "278799997337046e": 249, "2792": 203, "27995": 207, "279974": 201, "27it": 194, "28": [144, 193, 200, 203, 207, 214, 216, 219, 220, 228, 249, 255], "280": [203, 207], "2802000027440954e": 249, "281": 207, "2810": 237, "282": [], "2820": [], "283": 217, "28325": 193, "283785": 207, "284": [128, 203, 217, 253], "28401065": 201, "284533": 232, "284870": 236, "285": [203, 217, 268], "285156": 205, "2852112948894501": [], "286": [194, 210, 219, 247, 253], "286121": 201, "28625": 242, "2862563": 201, "28655949234962463": 210, "286900043487549": 219, "287": [203, 242], "28727216": 224, "2878": 9, "28833": 242, "288353": 201, "2888": 238, "289": [193, 242], "2891": 203, "28911933": 201, "2893": 237, "2897205352783203": 93, "2899998426437378": [214, 219, 220], "29": [144, 194, 195, 201, 203, 213, 228, 249, 255, 264], "290": 242, "2902": [203, 207], "2905656397342682": 247, "291": [], "2912": 238, "2914": [], "2922": 9, "292285": 201, "2923467755317688": [], "293": [207, 210, 242], "2932": 203, "294": [9, 249], "2944207191467285": 219, "294676780700684": 219, "294871": 201, "295": [9, 194, 201, 207, 249, 267], "2950": 207, "2956": 9, "29597282409668": 219, "296": [9, 249], "29616": 219, "297": [203, 249], "2970": 207, "2976": 9, "29780903458595276": 247, "298": [220, 249], "29803": 9, "29808": [], "29821": 203, "298741": 201, "2987754344940186": [], "29894498699991345": 253, "299": [9, 207, 249, 267], "2990": 207, "299361": 205, "29it": 213, "2d": [193, 228], "2gb": 18, "2i": [210, 219], "2x": 253, "2x1024": [195, 196, 197, 200, 241, 242], "2x1024x1": [196, 197, 200], "2x1024x1024": 200, "2x1024x2000": [196, 197], "2x1024x2x512": 200, "2x1024x512": [196, 197, 255], "2x1024x8x32": [196, 197, 255], "2x1024x8x64": [196, 197, 255], "2x12": 267, "2x16": 267, "2x1x1024": 197, "2x1x1024x1024": [196, 197, 255], "2x1x1024x1024x4": 197, "2x1x1x1024": [196, 197], "2x2x1024x1": 200, "2x2x1024x1024": 200, "2x2x1024x256": 200, "2x2x1024x512": 200, "2x2x512x1024": 200, "2x8x1024x1024": [196, 197, 255], "2x8x1024x32": [196, 197, 255], "2x8x1024x64": [196, 197, 255], "2x8x64x1024": [196, 197, 255], "3": [9, 21, 62, 71, 83, 92, 93, 107, 109, 111, 112, 115, 122, 123, 144, 153, 155, 158, 164, 167, 170, 172, 177, 181, 183, 186, 188, 189, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 249, 251, 253, 255, 257, 258, 264, 267, 268, 269, 270, 271], "30": [56, 63, 64, 65, 66, 67, 68, 69, 70, 123, 144, 194, 195, 203, 205, 207, 210, 213, 214, 219, 220, 222, 228, 230, 238, 240, 242, 249, 255], "300": [203, 207], "3000": [209, 236], "3006": 238, "3007": 229, "300781": 205, "3008": 236, "300881862640381": 219, "301": [92, 93, 119, 192, 194, 199, 201, 203, 204, 205, 207, 210, 211, 255, 258, 267, 271], "3016374409198761": [], "302": [194, 203, 207], "3020": 207, "3025": 9, "303": [249, 268], "304": [9, 267], "3043": 230, "305": [194, 249], "30584": 251, "306": [207, 247], "306461364030838": 268, "307": 249, "30708634853363037": 93, "307199996375857e": [], "3072": [214, 219, 220], "30752": [201, 203, 205], "308": [207, 267], "308015822657684e": 207, "3081": 207, "30878": 9, "309": [9, 268], "3091744184494019": 210, "3094": [], "3099": [], "30it": 213, "30x30": 228, "31": [9, 144, 194, 196, 201, 203, 213, 214, 219, 220, 222, 228, 230, 236, 238, 247, 249, 255, 267, 268, 269, 270], "310": [203, 214, 264], "3101533055305481": [], "31037112499996056": [], "3105": 207, "310667037963867": 219, "311": [], "3119731843471527": 268, "312": [193, 268], "3122": [], "3124105632305145": [], "3126": 203, "312826": 201, "313": [], "3132155645670344e": 219, "3133": [], "313988": 201, "314": [203, 227], "31467437744140625": 207, "315": 214, "3154": 236, "31574228405952454": 93, "316": [], "3160": 9, "31649999907313e": [], "3165": 207, "317": [9, 242], "31762363200005": [], "318": [205, 207], "318179": 201, "3183303078015645": 210, "318330317735672": 210, "31844774": 201, "3185": 9, "31881204": 201, "3189447836001065": 240, "319": [9, 203, 210, 219, 247, 253], "3190": 253, "32": [9, 92, 93, 123, 124, 125, 126, 128, 144, 194, 195, 196, 201, 203, 204, 205, 207, 213, 214, 219, 220, 228, 230, 238, 249, 253, 255, 257], "320": [203, 210, 242], "3200": 210, "32000": [194, 214, 219, 220, 222, 253], "320003509521484": [214, 219, 220], "3201": [203, 210], "320211172103882": 210, "3205": 9, "32055": 193, "32064": [214, 219, 220], "321": [207, 267], "322": [9, 247], "32225972414016724": 93, "3223": 203, "3224289e": 201, "3225": 207, "323": [267, 268], "3235389292240143": 93, "324": 207, "32400": 193, "324009": 201, "3247175216674805": 219, "3248754": 201, "325": [206, 268], "3251": [], "325599998835969e": [], "3259": [203, 230], "326": [9, 232, 247], "3260": 238, "3261": 203, "32629191875457764": 247, "3264": 229, "3266": 9, "327": [207, 267, 268], "3273": 9, "32768": [267, 268], "3277": 253, "328": 193, "3285": 238, "32896": 240, "329": 203, "32974935": 201, "32gb": 195, "32x1": 249, "32x10": 249, "32x128x56x56": 164, "32x16": 228, "32x4x14x4x14x128": 164, "32x56x56x128": 164, "33": [9, 144, 193, 194, 203, 205, 210, 214, 216, 219, 220, 228, 230, 238, 242, 249, 255, 267], "3302": 210, "330677032470703": 210, "3306772708892822": 210, "330772": [], "331": 205, "33161": 9, "3318": 9, "33184515e": 209, "3319922685623169": [], "332": 267, "332031": 195, "33239": 9, "3329": 237, "333": 193, "333333333333333": 210, "3337397940003939": 240, "3338502049446106": [], "3339": 203, "334": 9, "3340": [9, 207], "33408646": 209, "3343": 207, "33437013": 238, "334378": 251, "3348": 109, "335": [109, 267], "3355": 230, "33554432": 135, "33570671081543": 219, "3357499837875366": [], "336": 193, "3361": 229, "33676815032959": 219, "3368": 210, "337": [], "3370": 207, "337400009215344e": 249, "338": [], "339": [242, 268, 270], "33928": 9, "3394317626953125": 219, "339999794960022": [214, 219, 220], "34": [9, 144, 195, 203, 207, 213, 219, 228, 242, 249, 255], "340": 207, "340000033378601": [214, 219, 220], "340000133306603e": [], "340003967285156": [214, 219, 220], "3409": 210, "341": [203, 207], "3414": 9, "341490238904953": 247, "341592189000039": 240, "34191": 193, "342": [203, 207, 249], "3429": 238, "343": 203, "344": [], "34425": 193, "344327": 209, "344999098777771": [], "3459669": 236, "346": [9, 207, 242, 267, 268], "3467366e": 201, "347": [207, 267], "34797153": 201, "348": [207, 247], "348200013737369e": 249, "349": 197, "3493902385234833": [], "349869728088379": 219, "34it": 213, "35": [9, 144, 193, 200, 203, 207, 213, 214, 219, 220, 228, 230, 236, 238, 249, 255], "350": [9, 242], "3500094": 201, "350439972999993": 253, "35054106": 201, "3508": 210, "351000009388372e": [], "3513794": 201, "35181": 247, "352": 268, "3523": 237, "353": [], "3533": 9, "3539538383483887": [], "354219208085972e": 207, "355": [242, 267, 268], "35544": 193, "35550": 9, "356": [203, 207, 267], "357": [], "3577456": 201, "358": [207, 242], "35802746": 201, "35803": 201, "359": [207, 247], "359375": 205, "35943": 193, "3596861362457275": [], "35970": 207, "35979074239730835": 247, "35it": 213, "36": [144, 200, 203, 205, 207, 213, 220, 228, 236, 249, 255, 264], "360": [128, 242], "3600": 226, "3604": 208, "36106738448143005": [], "3614": 230, "3618999964346585e": [], "362": 267, "363": 9, "3630": 207, "36311": 222, "363230895996094": 111, "363230919837951": 111, "3633": 230, "3638263": 201, "363914": 232, "364": [242, 267], "36450": 193, "3647": 229, "365": 207, "3650754840000445": [], "36508130e": 209, "365589141845703": [], "365626": 201, "3657": 238, "366": [201, 267], "3664255": 201, "36652": 222, "366800012827298e": [], "3669": 208, "367": [193, 201, 242, 253], "36720174581683": 209, "36756": 193, "367938": 251, "368": [203, 207], "368009423749157e": 210, "3683": 230, "369": 207, "36it": 213, "37": [9, 144, 200, 207, 213, 219, 228, 230, 235, 238, 241, 242, 249, 255, 264], "370": [9, 201, 217, 242], "37044": 232, "37057": 247, "3706999930655e": 249, "3707528114318848": [], "37090620398521423": [], "3709068298339844e": 240, "370986": 201, "371": [9, 201], "3712": 230, "3717625141143799": [], "372": 203, "373": [201, 203, 207], "3730": 203, "373604": 201, "374": 201, "3743": 236, "3745": 208, "375": [201, 203, 207, 214], "3750": [209, 236], "3755": 207, "376": [9, 203, 214, 267, 268, 269, 270], "3760": 207, "377": [9, 247, 267, 268, 269, 270], "3772": 230, "37762048": [241, 242], "3778": 9, "37786624": [241, 242], "378": [193, 203, 207], "378042": 236, "37874895334243774": 93, "379606193778086e": 210, "38": [9, 144, 213, 214, 219, 228, 235, 239, 249, 255, 257, 271], "380": [9, 197, 214], "3802": 9, "380581": 201, "3806": 9, "381": [203, 214], "38151": 193, "382": [193, 214], "382735252380371": 216, "3829": [], "383": [9, 214], "38370025157928467": [], "3838": 109, "384": [9, 109], "385": [207, 214], "385156": 203, "385580849647522": [], "3859": [], "3864": 247, "387": 207, "3870": [], "3876": 219, "388": 203, "3888": 9, "389085769653": 204, "3891289234161377": [], "39": [128, 144, 193, 200, 213, 228, 232, 235, 249, 255], "390": [9, 207], "3904928970000583": 253, "3907": 224, "391": 267, "3914": [], "391473": 201, "392": [128, 207], "3928": 203, "393": [210, 267], "39300582744181156": [], "394": 196, "39415": 207, "3943": 237, "395": [207, 267, 268, 269, 270], "395020484924316": 219, "39546": 193, "396": [9, 267, 268, 269, 270], "396360": 207, "3966318368911743": 93, "3969": 9, "397": [207, 267, 268, 269, 270], "3979": 9, "398400008336466e": [], "3984213": 201, "39873": 201, "39881400763988495": 210, "3989": [], "398942768573761": 268, "39it": [194, 213], "3x1": 249, "3x10": 249, "3x3": 193, "3x32": 249, "3x4": 267, "4": [9, 92, 93, 111, 121, 122, 125, 126, 144, 164, 167, 170, 188, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 235, 236, 238, 240, 241, 242, 247, 249, 251, 253, 255, 257, 264, 267, 268, 269, 270, 271], "40": [57, 144, 200, 203, 207, 210, 213, 227, 228, 242, 249, 253, 255], "400": [249, 267, 268, 269, 270], "4000": [196, 197], "4000000059604645": 247, "400000095367432": [214, 219, 220], "4000x512": [196, 197], "400763034820557": 219, "400864": 201, "400900016004016e": [], "40270003866317e": 249, "4028234": 238, "4028234663852886e": [214, 219], "402900001172384e": 249, "403": [269, 270], "4030480129999887": 253, "403322": 232, "403791": 195, "40392887592315674": 93, "403e": 257, "404": 268, "4043798446655273": 210, "4045": 207, "40479878": 201, "405": [9, 268], "405055": 236, "405400026527786e": [], "405541896820068": 219, "406": 9, "4060": [194, 203, 205, 207], "406957": 201, "407": [9, 128, 207], "407000004557631e": [], "4071": 9, "4073": 9, "408": 267, "4087": 9, "409": 268, "4090": 9, "409063": 232, "4096": [124, 194, 203, 205, 207, 214, 219, 220, 222, 230, 238, 253], "40965598821640015": 267, "4097": [], "41": [144, 195, 201, 203, 207, 213, 227, 228, 247, 249, 255], "410": [207, 242], "41000366210938": [214, 219, 220], "4106": [], "412": 267, "41223570704460144": 267, "412437652000031": 240, "41283": 193, "413": [], "4139999368344434e": 9, "414599965864909e": 249, "415": 207, "41508": 193, "4156681": 201, "416": 267, "416939": 194, "417": [128, 205], "417061148583889": [], "41712": 9, "417187": 203, "418": 242, "4182": 264, "419": [9, 203, 207, 247], "41951894760131836": 93, "42": [9, 144, 203, 214, 219, 220, 227, 228, 235, 240, 249, 251, 255, 267, 268], "420": 207, "420001983642578": [214, 219, 220], "4212": 9, "4215": 238, "42168942": 201, "4217027425765991": [], "422": [193, 203, 247, 267, 268, 269, 270], "4221": 9, "422219": 205, "422793108282423e": [], "423": [193, 267], "423107": 201, "42312086": 201, "4232": [], "424": [203, 207, 267], "424476": 201, "424978733062744": 219, "425": 268, "425382375717163": [], "425458": 201, "426": [207, 268], "426612615585327": 219, "426966905593872": 210, "427": [242, 267], "428": [203, 207], "428000011102995e": [], "4288768768310547": [], "429": 268, "4298": 238, "42it": 213, "43": [9, 144, 195, 203, 213, 216, 228, 249, 255], "430": 128, "4301": [], "431": 251, "43164": 193, "4318": 251, "432": [9, 207, 210, 267], "432141": 251, "432196": [], "4328": 9, "433": 268, "43322935700416565": [], "4337615": 201, "434": [9, 203, 207, 214, 233, 268], "4345": 207, "4347498416900635": [], "435": [207, 219], "436": 268, "4363967180252075": [], "4379235": [], "438": 268, "4384737": 201, "439": [9, 207, 267], "43it": 213, "44": [9, 144, 195, 200, 201, 207, 213, 214, 219, 220, 228, 249, 255, 258, 264, 268], "440": 207, "44040192": [241, 242], "44053447246551514": [], "4405344823996226": [], "441": [203, 207], "44122005": 201, "44141": 207, "441607": [], "4416946768760681": [], "4418979287147522": 268, "442": [203, 207], "44225": 203, "44261": 203, "443": [], "4430026113986969": [], "4432": 9, "444": [203, 207, 267], "44429383": 201, "4448936220001087": 253, "445": 267, "445052": 201, "44507095": 201, "4451240003108978": 267, "445600029612251e": 249, "44695": 251, "44697": 203, "447": [203, 207, 242, 268, 269, 270], "447999913281819e": [], "448": 203, "449": [128, 267, 268, 269, 270], "449100328609347e": 228, "449402": 232, "449433326721191": 111, "44974": 201, "44980645179748535": 247, "4499378204345703": [], "4499380588531494": [], "45": [9, 144, 193, 195, 203, 207, 227, 228, 249, 255, 267], "450": 207, "45000457763672": [214, 219, 220], "450114": 195, "450273036956787": 219, "4503844678401947": [], "45045": 193, "4504848": 201, "450580596923828e": 210, "451": [], "45100734e": 209, "4513": 207, "4514": 9, "4518147": 201, "4528": [], "453": [203, 207, 267], "45336692": 236, "454": [9, 214, 219, 268], "4540": 251, "454208": 209, "4549": [], "455": [9, 219], "4551": 237, "45642313": 201, "457": 268, "4570693969726562e": 197, "457148": 201, "45763927088542417": [], "458": [9, 267], "4583529141651237e": 219, "459": [214, 219, 220, 268], "4592": 230, "4599285": 201, "459995347540826e": 228, "45it": 194, "46": [9, 144, 195, 207, 213, 228, 240, 242, 249, 255], "460": 207, "46000099182129": [214, 219, 220], "4603": 236, "4603147506713867": [], "4606999810857815e": 249, "460705": 201, "461": [214, 219, 247, 267], "46177": 251, "463": 267, "463000083087536e": [], "4631385530000216": [], "46370596": 201, "464": 267, "464900006150856e": [], "465": 205, "46539": 203, "466": 242, "4661900997161865": 267, "4664": [], "466510": 209, "4666611019999891": 253, "467": [249, 267], "468": [203, 214, 219, 267], "4687206447124481": [], "469": 203, "47": [9, 144, 197, 228, 249, 255], "470000021683518e": 253, "470348358154297e": [], "4708": [], "47114979": 209, "47134268": 201, "471982479095459": 219, "472": [207, 268], "472055435180664": 216, "4722": 9, "472423791885376": 210, "472500010408112e": [], "473": [247, 267], "473835": 201, "474": 228, "474119186401367": 219, "47433": 203, "475": [207, 267, 268, 269, 270], "47591706": 236, "476": [203, 207, 267, 268], "4762": 230, "476562": 195, "4765625": 209, "477": [203, 207], "4777": 229, "47790": 203, "47794246673584": 219, "478": 9, "47891": 203, "479": 268, "4793177": 201, "4799054861068726": [], "47it": 213, "48": [9, 92, 93, 194, 195, 200, 214, 219, 228, 230, 249, 255], "480": [9, 193, 207], "4800033569336": [214, 219, 220], "480104923248291": 216, "480517": 209, "481": 9, "4816066324710846": [], "482": 207, "482400008029799e": [], "48323845863342285": 93, "48395354": 201, "485": [210, 242, 268], "4850": 207, "485100033794879e": 249, "4857": 207, "485799994810804e": [], "486": [267, 268], "4862864017486572": 210, "4864893": 201, "487": [], "4873": 9, "48825163": 201, "4882917404174805": 216, "4887": 9, "488981": 205, "489": 268, "4897": [], "489899976713787e": [], "49": [9, 198, 213, 222, 228, 255], "4901161193847656e": [93, 210], "4903994926717132e": 228, "490999994137383e": 249, "4913429617881775": 93, "49152": [267, 268], "4918999997680658e": [], "492": 193, "4920": 207, "493": [], "4931073": 201, "494": 267, "494138": 209, "49417442083358765": 93, "49420183": 209, "494202": 209, "495": [193, 203, 207], "4953": [], "4959401488304138": 93, "496": 268, "4961": 207, "49687": 203, "49688": 203, "497": [9, 201, 210, 267], "4972": 229, "497972": 201, "498": [9, 267], "4986": [], "499": [203, 267], "4993807": 201, "49it": 194, "4d": 193, "4i": 210, "4x1024x1024": 200, "4x1024x512": 200, "4x3": 267, "4x512x1024": 200, "5": [3, 9, 12, 19, 21, 60, 62, 71, 83, 87, 92, 93, 95, 109, 111, 112, 115, 122, 123, 144, 164, 170, 188, 193, 194, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 249, 251, 253, 255, 257, 258, 264, 267, 268, 269, 270, 271], "50": [9, 194, 203, 205, 207, 210, 214, 219, 220, 222, 228, 236, 242, 255], "500": 203, "5001": 247, "5004260540008545": 210, "5007": 9, "501": [210, 267, 268], "5010796": 201, "50155": 203, "502282": 205, "5022823369981779": 205, "50256": [230, 238], "50285": [123, 230, 238], "503": 207, "5033779740333557": [], "5037951469421387": [], "504": [193, 207], "5040097": 201, "504099999598111e": [], "5046240091323853": 247, "505": [207, 268], "507": [], "507300013756321e": [], "5075588226318359": 93, "509": [230, 239, 258, 267], "51": [9, 203, 209, 210, 213, 219, 228, 249, 255], "510": 219, "51000213623047": [214, 219, 220], "510749": 232, "511": 207, "5112836360931396": [], "51132869720459": 219, "51140703": 236, "512": [124, 125, 126, 194, 196, 197, 200, 203, 205, 207, 257], "51200": [230, 238], "512294": 201, "512810118999937": [], "512x2000": [196, 197], "512x512": [196, 197, 255], "513": 267, "51342": 9, "5139": 204, "514": [], "5141066000001047": 253, "51430082321167": 219, "514733": 201, "515": [9, 207], "5157": 230, "516": 9, "5162035987048611": 209, "5163624405860903": 210, "516362464427948": 210, "5164828300476074": [], "517": 9, "518": 207, "519": [], "5197": 207, "52": [195, 203, 207, 209, 213, 228, 230, 236, 238, 251, 255], "52056525913498": 236, "52077234": 201, "521": 207, "5215": 207, "521930": 207, "522": [], "522221": 201, "522499998278363e": [], "523": 207, "5234": 238, "5238": 207, "524": 242, "525": 193, "5255": 204, "526": 267, "5260": 207, "5263": [], "526956": 209, "5272154894967874": 216, "528": [9, 224, 268], "5287": 9, "528905": 207, "529": [], "5292606": 201, "52999877929688": [214, 219, 220], "53": [195, 207, 228, 236, 255], "5300": 9, "5300586559369392e": 111, "530059e": 111, "5307999951328384e": 249, "531": 9, "532": [], "5326056480407715": 228, "5328": 204, "533": 200, "5335559844970703": 268, "534": [9, 200, 203, 207], "53453": 201, "535": [200, 268], "536": [200, 207, 219, 242, 267], "5360": 207, "5367431640625e": 111, "536743e": 111, "537": [193, 200], "5379": 193, "538": 200, "5385": 209, "539": [9, 242], "5395": 207, "5396": [], "539807": 207, "5399": 230, "54": [9, 203, 207, 213, 228, 255, 267], "540": [], "5401992797851562": [203, 205], "540386": 207, "54083137512207": [], "5408313810825347": [], "540831398963928": [], "540831410884857": [], "5415453": 201, "5419073104858398": [], "542": [210, 219], "543": [9, 207], "5430": [], "543700012822228e": 249, "5439999262744095e": 249, "544": [], "545": [9, 267], "5450": 207, "54594523e": 209, "546": [109, 207], "5460": 109, "546440601348877": [], "546452": 232, "54683": 9, "5469270944595337": 267, "547": [9, 242, 268], "5478067": 201, "5486": 230, "5486428": 201, "548888206481934": 219, "549": 128, "55": [9, 203, 207, 213, 228, 249, 255], "55000305175781": [214, 219, 220], "5502": 238, "5505": 204, "551": [219, 267], "551091": 195, "5512176752090454": 210, "5513": 204, "5518": [], "5520": 204, "5527158379554749": 210, "553": 207, "55359560734437e": 219, "5536": 207, "554": 207, "554195278851165e": [], "5546875": 236, "554688": 205, "554962": 201, "554999999432766e": [], "555": [], "55613972": 240, "556544": 201, "556849": 201, "557": 216, "557487964630127": [], "5576830506324768": 93, "5579": 9, "5579673647880554": 268, "558": 268, "559": 268, "5590": 9, "55mb": [203, 205, 207], "56": [9, 128, 203, 228, 255, 267], "5606": 225, "5609257221221924": 268, "561019420623779": 219, "561399742262438e": 228, "5618062019348145": 219, "562": [], "5621": 205, "5623": 205, "562823": 201, "563": [203, 207, 268], "56320": 207, "5635999867954524e": [], "56370": 207, "564": [193, 207, 267], "566": [203, 207, 267], "5660": 9, "5662": 9, "566367": 201, "5667057": 201, "5668015": 201, "567": 9, "567125": 207, "56729203": 201, "5677": 9, "5678": 238, "5683467619121074": 210, "568999995375634e": [], "5691141486167908": [], "569561958312988": [], "56973773": 201, "5698020458221436": 216, "56994": 203, "57": [9, 195, 207, 209, 213, 214, 219, 220, 228, 236, 255, 267], "5700": [], "57000160217285": [214, 219, 220], "57012194": 201, "571": [193, 267], "5719130635261536": 267, "572": 204, "5720": 207, "572636351330908n1333nan": 210, "573150": 195, "5738": 237, "5739": 251, "574": 193, "574700003307953e": [], "575": [207, 242], "5758": 9, "5759496092796326": 267, "576": 267, "5769753456115723": 267, "577": 207, "5771": 207, "5778": [], "578": [210, 211, 258], "578125": 205, "5782495": 201, "5790000058332225e": [], "57995195885037": 209, "58": [194, 195, 205, 207, 213, 214, 219, 220, 228, 236, 249, 255, 267], "580": 209, "581999969057506e": [], "582": [193, 242], "5839": 9, "584": 194, "585": [203, 207, 242], "585810595088535": 210, "585899975812936e": 249, "585960": 251, "585965": [], "586": [9, 203], "586127": 201, "5862115": 201, "586300001894415e": 249, "5868373": 201, "587627410888672": [], "587628364562988": [], "5879346132278442": 219, "5886": 9, "588644027709961": 219, "588666": 201, "589": 9, "58940096": 201, "589618": 209, "5899994373321533": [214, 219, 220], "5899999141693115": [214, 219, 220], "58it": 194, "59": [9, 210, 228, 255], "590003967285156": [214, 219, 220], "59036123752594": 219, "591018": 201, "5916779041290283": [], "592": [193, 203], "592326641082764": 219, "5931": 9, "5935000167010003e": 249, "593600013118703e": 249, "59393": 9, "59428": [], "595": [193, 203], "5953": [], "596": 203, "5960211753845215": 219, "59658960": 201, "59698552": 201, "59699292": 201, "597": [128, 207], "59701616": 201, "5975": 9, "5983": [], "59876835": 201, "59903760": 201, "5996312499046326": 93, "5l": 60, "5x3": 247, "6": [9, 15, 21, 57, 92, 93, 111, 144, 153, 170, 188, 193, 195, 200, 201, 203, 205, 207, 209, 210, 213, 216, 217, 218, 219, 223, 227, 228, 229, 235, 237, 240, 244, 247, 249, 251, 255, 264, 267, 268], "60": [207, 213, 214, 219, 220, 228, 242, 255, 267], "600": 4, "6000000238418579": 247, "600000023841858": [214, 219, 220], "600499983098416e": 249, "60074352": 201, "600772857666016": 219, "6008587": 201, "60095112": 201, "60097": 9, "601": 203, "6010": 209, "601400003892195e": [], "60157236": 201, "60167544": 201, "60175340": 201, "602": [203, 207], "60368320": 201, "603874683380127": 219, "603882789611816": 216, "604": 242, "6042747": 201, "60453248": 201, "60454452": 201, "60459248": 201, "60494996": 201, "60533000": 201, "6054106": 201, "60552948": 201, "6056000049502472e": [], "60560733": 201, "60576504": 201, "606": 207, "606287479400635": 219, "60634688": 201, "60649312": 201, "606565952301025": 219, "60717852": 201, "607199990568915e": 249, "607249": 201, "607407": 195, "60751416": 201, "6076143090095785": 216, "60762400": 201, "6077604": 201, "608": 9, "60813680": 201, "609": 9, "6091394": 201, "60918748": 201, "6093": 207, "60935224": 201, "609375": 205, "6094": [], "60946248": 201, "6099": 9, "61": [9, 203, 205, 207, 213, 228, 255], "610": 242, "61000442504883": [214, 219, 220], "61001220": 201, "6101": [], "61016756": 201, "61051048": 201, "61059952": 201, "61067632": 201, "61073508": 201, "61089428": 201, "61095572": 201, "61098680": 201, "611": 207, "611039": 201, "6112512350082397": 219, "6117": 205, "612": [9, 193, 207], "61212987": 201, "61248872": 201, "61285716": 201, "613": 193, "61346160": 201, "61359244": 201, "61398376": 201, "614": [201, 203, 207], "61412040": 201, "6144": 214, "61452816": 201, "61460384": 201, "61482216": 201, "61532304": 201, "61544172": 201, "61566120": 201, "61574216": 201, "61596336": 201, "616": 207, "61619360": 201, "6162818": 209, "6163": 209, "61692488": 201, "61696724": 201, "6170": 209, "61713400": 201, "617188": [203, 205, 207], "6174": 9, "61745824": 201, "61746176": 201, "61774616": 201, "6179": 9, "618": [9, 201], "61804184": 201, "61836464": 201, "61837336": 201, "61843684": 201, "61875704": 201, "61926528": 201, "61941408": 201, "619735": 201, "61984328": 201, "61994580": 201, "61it": [194, 213], "62": [194, 203, 205, 213, 214, 219, 220, 228, 255, 267], "620": 207, "6200000047683716": [214, 219, 220], "620000123977661": [214, 219, 220], "62000274658203": [214, 219, 220], "62009328": 201, "6202578": 236, "62054184": 201, "62067800": 201, "62074096": 201, "621": 222, "62107448": 201, "62109944": 201, "62130512": 201, "6213274002075195": 219, "62147304": 201, "6215047836303711": 93, "62190488": 201, "622": [9, 247], "6221": 226, "62221136": 201, "62223184": 201, "62281944": 201, "623": [203, 207], "62300992": 201, "62346952": 201, "62354568": 201, "623800009539991e": [], "624": [201, 203, 207, 210], "62401952": 201, "6242": 251, "62465880": 201, "625": 207, "6251202821731567": [], "62518216": 201, "62530728": 201, "6254": 193, "62542712": 201, "62568496": 201, "62619224": 201, "6262": 234, "62621056": 201, "62630712": 201, "62664520": 201, "62679636": 201, "62690524": 201, "626999855041504": 219, "627": [193, 201], "62701872": 201, "6273203": 201, "627417": 200, "6276": 207, "62764144": 201, "62829600": 201, "62830504": 201, "62832744": 201, "6285": 9, "62869856": 201, "62886584": 201, "629": 201, "62928664": 201, "62949164": 201, "629525184631348": 219, "62973136": 201, "62982848": 201, "63": [214, 219, 220, 228, 255], "63030620": 201, "63054916": 201, "63079624": 201, "63080192": 201, "6308491": 224, "630859": 205, "631": 201, "63128048": 201, "63152300": 201, "63167976": 201, "63197128": 201, "63270368": 201, "63276432": 201, "63286264": 201, "63290372": 201, "63291412": 201, "6333447": 201, "63384256": 201, "63392608": 201, "634": 193, "63427484": 201, "63441584": 201, "63484704": 201, "635": [9, 215], "63580112": 201, "63638224": 201, "63664984": 201, "63674976": 201, "63703008": 201, "63709336": 201, "6371": 237, "6373000031962874e": 249, "6379000145389e": [], "6380067": 201, "63874488": 201, "639": 207, "6399190661562386e": [], "63it": 213, "64": [9, 203, 205, 207, 213, 214, 219, 220, 228, 255], "6402123": 201, "640364": 201, "64136068": 201, "641940": 195, "642072": 201, "64269114": 201, "643": 203, "6446343064308167": 210, "645": [203, 207], "64525": 207, "647": [9, 203, 207], "64705": 207, "6473352909088135": 210, "6474196": 201, "6481733": 201, "64it": 194, "65": [9, 207, 213, 228, 255, 264], "65011712": [241, 242], "6508663892745972": 219, "651": 221, "6526296228740713e": [], "652630e": [], "6530": 207, "653127670288086": 219, "654": 253, "6543391942977905": 219, "6543458932234595": [], "6543459296226501": [], "655": 193, "65537": 240, "6556878089904785": 219, "655721": 201, "655748768827917e": [], "65589": 201, "656": 210, "656119611999884": 253, "65682": 9, "65710949": 236, "6574997901916504": [], "6575323": 201, "658": 207, "6583": 229, "659e": [], "65it": 213, "66": [9, 194, 195, 207, 213, 228, 249, 255], "660": 207, "66053134": 201, "660813960705014e": 9, "6608553": 201, "6608944": 201, "662": [], "6620": 205, "6621": 205, "6622": 205, "6623": 205, "6624": 205, "6628": 205, "663": [], "6635954144100348": 216, "6636615342354311": 209, "6637": 238, "6638": [], "664062": 205, "664507": 207, "6645790100943112": 209, "665": 207, "6652072977967414": 209, "665277481079102": 219, "6654512882232666": [], "665860176086426": 219, "666": 203, "6664058566093445": 93, "6666666666666665": 210, "6669": 9, "667": [9, 203], "6672823122121372e": 231, "668": 203, "668147": 201, "668274402618408": 219, "6687": 203, "6688": 203, "6689": 203, "6690": 203, "6691": 203, "6692": 203, "6697": 237, "66it": 213, "67": [9, 203, 205, 255], "670000076293945": [214, 219, 220], "670898": 203, "671": 9, "67108864": 264, "671303749084473": 219, "672": 193, "6722": 269, "672420544815129e": 111, "672421e": 111, "672762": 195, "672793388366699": 219, "6728987495104471": 210, "6728987693786621": 210, "67299884557724": [], "673263": 201, "6733": 207, "6734": 207, "673944": 201, "674": 207, "675": [207, 242], "67514459": 236, "675187587738037": 219, "675495147705078": [], "6760": 232, "679": 207, "679248": 195, "6799": 203, "679999828338623": [214, 219, 220], "68": [209, 213, 228, 255], "680": 205, "680000635446049e": 93, "6804": 193, "680884838104248": 219, "6817601919174194": 219, "682": 207, "6824584": 201, "682e": [], "6832990050315857": 210, "6837": 237, "684": 9, "6840043315174275e": [], "684591": 236, "6846948": 201, "684732": 201, "685": [9, 203], "6850": 207, "685599982527492e": 249, "6857": [9, 219], "6858153": 201, "686": 9, "6861": 9, "6866": 9, "6876": 219, "687699995680305e": [], "688": 9, "6885": 238, "6892": 219, "6892266": 201, "68942076": 201, "68962045799981": 240, "68it": 194, "69": [203, 205, 213, 214, 236, 242, 255], "6900251": 201, "691554": [], "691973865032196": 93, "692": [9, 203], "6920000689424342e": [], "6924550533294678": [], "693": 207, "6936035240574": 236, "694": [], "6947145": 201, "695": 207, "699": 210, "6999145150184631": [], "6999558210372925": 219, "6a0": 264, "6a9edc38bf9b941b7d369af5103fa8fe0b121d61": 264, "6i": 210, "7": [9, 57, 92, 93, 121, 124, 125, 126, 144, 170, 188, 193, 195, 196, 200, 201, 203, 205, 207, 210, 213, 214, 216, 217, 219, 220, 222, 223, 227, 228, 229, 235, 237, 240, 244, 247, 249, 255, 264, 267, 268], "70": [203, 207, 214, 255], "700000286102295": [214, 219, 220], "701048374176025": 219, "7012276": 201, "7018817": 201, "702": [203, 207], "702151": 201, "7025649547576904": 93, "7043": 207, "7050": 230, "7051165103912354": 210, "705480073112994": 57, "706299989720719e": [], "7063000061389175e": [], "7065": 207, "707613": 201, "708": 242, "709": 207, "7090325355529785": 219, "70it": 213, "71": [9, 195, 203, 207, 213, 249, 255], "71000289916992": [214, 219, 220], "7126894": 201, "7129333875218435": 219, "7140": 236, "7152137871831655": 216, "716": 249, "7160": 219, "716007": 201, "716174": 207, "7163121700286865": [], "719": [], "71it": 194, "72": [9, 213, 255], "720": 207, "721": 242, "721056": 201, "7214": 9, "721521": 251, "7218371033668518": 111, "722": 247, "7221417": 201, "7227": 9, "7236": 238, "723700001501129e": [], "724475383758545": 219, "7247755527496338": [], "72499": 203, "7256274": 201, "726599980946048e": 249, "7267657859999872": [], "727023293108136e": 210, "7273778915405273": 219, "727999991402612e": [], "7286551594734192": [], "729": [], "729083776473999": 219, "729999542236328": [214, 219, 220], "73": [9, 195, 200, 203, 228, 255], "730": [207, 242], "73000169324223e": 92, "730469": 207, "73179334": 201, "7318": 204, "732": 200, "7320998166687787e": 228, "73275784e": 209, "732827": 201, "733": [207, 242], "7330": 204, "7331": 237, "7333574": 201, "733430325666783": 240, "734": [267, 268, 269, 270], "7340": 207, "7345": 207, "735": 242, "735393762588501": 216, "736": [128, 201], "7360": 207, "7363": 207, "737": [238, 239, 258], "7379": 112, "738": 112, "738092": 205, "739": [207, 242, 247], "73it": 213, "74": [195, 213, 255], "7400524616241455": 216, "7405863": 201, "741947": 201, "742": 210, "74250": 207, "7435555": 201, "744": [9, 219], "7442224621772766": 210, "745": 201, "7451527": 201, "745384693145752": 210, "7462301": 201, "7464128": 201, "7465": 207, "746652018013669": 219, "7472777": 201, "7474065": 201, "74767017364502": 219, "7478": 9, "7487": [], "7487435340881348": 219, "749999523162842": [214, 219, 220], "75": [203, 207, 210, 242, 255, 267, 268], "750": [209, 236], "751": [9, 201], "751e": [], "752047": 201, "7523741722106934": [], "752959": 209, "7537": [], "754": [9, 207], "755": [201, 242], "7569": 230, "7577": 225, "75826985": 201, "759": 242, "7593": 204, "76": [9, 128, 203, 213, 255], "760": 214, "761": 207, "76169997859688e": [], "7617": 9, "762": 207, "762608051300049": 219, "763699054718018": 219, "764": 203, "764751434326172": 219, "7651088833808899": [], "765247821807861": 219, "7659": 193, "766": 207, "76602465": 201, "7663": [], "76837158203125e": [111, 228], "768372e": 111, "7684119339295042": 216, "7686415": 201, "76905596": 201, "7693999906405224e": 249, "77": [203, 207, 209, 242, 255], "770": [203, 207], "77000427246094": [214, 219, 220], "7704": 238, "771": 207, "772": 242, "7741798e": 201, "774399994606938e": [], "774919": 195, "775": 207, "7750": 207, "7752": 229, "7755": [], "776": [242, 269, 270], "7762486": 201, "77632": 209, "77634": 209, "7764": 238, "77726": 209, "778": 210, "7789": 9, "779": [], "7795": [], "77it": 194, "78": [203, 255], "780": [9, 207, 249], "78004789352417": 111, "7804882526397705": 219, "780599999776313e": [], "781": [213, 237], "7814445": 201, "782": [207, 242], "7832313": 201, "78375": 207, "783999990351731e": 9, "7843": 229, "784681": 207, "786": 203, "786398": 195, "7866795063018799": 219, "786901": 201, "787500003862078e": 249, "788199996459298e": [], "7899998426437378": [214, 219, 220], "789999936998356e": 249, "789999961853027": [214, 219, 220], "79": [203, 213, 237, 255], "790": 9, "791": 207, "791300892829895": 219, "7919": 9, "7931430999997247": 242, "7931999991560588e": [], "79356": 203, "7936": 238, "794071197509766": 219, "794347": 201, "79450": 207, "795": 193, "7951918": 201, "795695": 194, "7958755": 201, "796": 128, "7967644333839417": [], "796875": 209, "79699": 236, "797": 207, "79749": 236, "7975": 207, "79788458": 238, "798": [128, 257], "7981742e": 201, "798816": 195, "798925399780273": 219, "7992": 238, "7997": [], "7b": 122, "7t": [200, 228, 249], "8": [111, 121, 124, 125, 126, 144, 170, 188, 193, 194, 195, 196, 197, 199, 200, 201, 203, 205, 207, 209, 213, 217, 219, 223, 227, 228, 229, 230, 232, 233, 235, 237, 238, 240, 242, 249, 251, 255, 257, 264, 267, 268, 269, 270], "80": [123, 135, 142, 203, 205, 207, 213, 229, 230, 238, 242, 249, 255], "8009469509124756": [], "801": [112, 193, 203], "8013": 112, "8018336": 201, "80199479777366e": 228, "802154": 195, "80241": 209, "8026071786880493": 210, "8033": 9, "803971805999936": 253, "804": 207, "804247549000024": [], "804400000082751e": [], "8048773": 201, "805": [203, 207], "8052435": 201, "8054000040356186e": [], "80600": 236, "806222438812256": 228, "807": 193, "808165843348978e": 210, "808523": 201, "808911505845004e": [], "8099": 238, "809e": [], "81": [9, 213, 255], "810": [203, 207], "810003280639648": 219, "8104": 9, "8111": 9, "8117": 193, "8120003814110535e": 9, "812500": 205, "813": [203, 207], "813858": 201, "81390": 207, "8146074e": 201, "815": 128, "81538266": 201, "816": [199, 207, 234, 236, 238], "816003476472602e": 207, "816602": 201, "81670": 207, "817": [203, 210], "8178": 251, "818": [210, 219], "8184505777423813": 216, "8192": [214, 219, 220, 267, 268], "8192x4": [267, 268], "8195667": 201, "8199998140335083": [214, 219, 220], "82": [9, 200, 203, 207, 213, 255], "820": 214, "8205": 237, "821": [203, 242], "821359157562256": 216, "8215927": 201, "82199407": 201, "822": [9, 207, 247], "82216066": 201, "822688": 201, "823648": 201, "8244985342025757": 219, "8245": 207, "8246638": 209, "8248": [], "825": [9, 210, 219, 258], "82511": 9, "8254": [], "827078": 201, "8272219": 201, "827565670013428": 210, "828": 210, "828048229217529": 219, "8280673": 201, "82850": 207, "829": 203, "829901695251465": 219, "82it": 213, "83": [197, 203, 205, 213, 255], "830785870552063": 93, "83137": [203, 204, 241], "835": 219, "8350": [], "8358462649999865": [], "8359375": 236, "837107": 201, "837236404419": 204, "8374": [], "8380143": 201, "83865434": 201, "839": 247, "8390218019485474": 210, "8390731811523438": 219, "8399032354354858": [], "83999633789062": [214, 219, 220], "8399994373321533": [214, 219, 220], "84": [9, 213, 255], "840": 207, "840002059936523": [214, 219, 220], "8403": 193, "8405": [], "8407484889030457": [], "8410543": 201, "842999992935802e": 249, "84375": 236, "843750": 203, "844": 9, "845": 9, "846": [203, 207], "8483": 229, "8484000128846674e": [], "8492": [], "8496": [], "8499997854232788": [214, 219, 220], "84it": 213, "85": [203, 207, 255], "850": [210, 219], "851": 207, "851127": 201, "8514": 193, "852": [9, 193, 242], "853": 9, "8540": 207, "85400000293157e": 249, "854142665863037": 210, "8542705774307251": [], "85475": 207, "854994297027588": 219, "856": [201, 203], "85677046": 201, "857": 207, "858189": 201, "859375": 209, "8595420122146606": 93, "85it": 213, "86": [9, 195, 213, 214, 219, 242, 249, 255], "8603475689888": 93, "860451": 201, "86179948085919e": 228, "862": 201, "862860": 207, "863309": 194, "864": 206, "865": [236, 267, 268, 269], "866": [], "866999995556398e": [], "8676968812942505": 216, "8686": 233, "869": [128, 207], "869273103000069": 240, "869333267211914": 219, "8693843": 201, "869578": 201, "86it": 213, "87": [9, 207, 209], "871": [203, 207], "871759": 201, "872": 206, "87534624": 201, "8762254730000905": [], "8767417669296265": [], "8799997568130493": [214, 219, 220], "87it": 194, "88": [9, 200, 213, 242], "881": 128, "882454394000092": [], "883114": 209, "884": 207, "8844815492630005": [], "8852881": 201, "8859601126983762": 111, "886": 203, "8862": 238, "888": [128, 207], "889": [128, 203], "89": [9, 203], "890": [203, 249], "890000001178123e": 93, "89062680363068": 209, "8909": 9, "890993": 201, "891329288482666": 210, "891486": 201, "892": 207, "892500434536487e": 228, "8925491659999807": 253, "893": [203, 210, 219], "893072": 201, "8946056": 201, "896": 128, "8967417478561401": 93, "897": [9, 193], "898": [], "898900001786387e": [], "8995": 238, "89it": 213, "9": [9, 21, 92, 93, 95, 111, 121, 138, 144, 170, 188, 193, 198, 199, 200, 201, 202, 203, 205, 207, 210, 213, 214, 216, 219, 220, 227, 228, 229, 235, 240, 242, 247, 249, 255, 264, 267, 268, 269, 270], "90": [128, 196, 197, 207], "900059": 209, "9007587": 201, "9020490646362305": 219, "904": 195, "906": [9, 210, 219], "9062408e": 201, "9066245555877686": 219, "9082007": 201, "9086999941464455e": [], "9089201999995566": 242, "909": 207, "9090489": 201, "9099": 237, "9099997282028198": [214, 219, 220], "90it": [194, 213], "91": [9, 93, 196], "910": 207, "910156": 207, "9105679926750085n33nan": 210, "910679578781128": 216, "912": 9, "9127621": 201, "912900188472122e": 228, "913": 242, "914": [9, 201], "914062": 207, "915": 207, "916": 207, "9164": 230, "91720724": 201, "91724664": 201, "9173": 234, "917652130127": 204, "918097734451294": 210, "9188366": 201, "91949": 201, "920313": 207, "920529": 207, "921294": 201, "9216": [214, 219], "921875": 209, "922337203": [238, 267], "9223372036854775806": [229, 237], "9223372036854775807": [117, 206, 214, 219, 221, 231, 238, 269, 270], "9223372036854775808": 238, "922835": 201, "92389999635634e": [], "924215": 201, "92466512399983": 253, "925": 9, "926": [], "9264122486114506": [], "926412272453308": [], "928": [195, 249], "9285": 9, "929": 9, "9291": [], "92it": 213, "93": [9, 207], "930": 203, "93000411987305": [214, 219, 220], "930445": 236, "9313030242919922": 210, "932": 207, "933": 207, "933266": 236, "9339978694915771": 111, "934": 196, "934107481068821e": 210, "935": 9, "9352612495422363": 219, "9360593760000029": [], "9389777183532715": 210, "939": [203, 247], "9392": [], "9395": 207, "939946": 201, "9399996995925903": [214, 219, 220], "93it": 194, "94": [9, 200, 213], "941": 207, "9419": [], "942": 193, "9440536576054526": 236, "9441479269434102": 236, "9443646784589387": 236, "9445": 207, "944552": 201, "9450": 9, "945111": 201, "945455551147461": 219, "9459595680236816": 210, "946": 203, "946299999479379e": 249, "947": 9, "9476402401924133": 93, "947733038663864": 210, "948": 128, "9482": [], "948249269874871e": 210, "9485464": 201, "9488675594329834": [], "9498243": 201, "95": [9, 203, 207, 217, 222], "950": [], "950129048390822": 210, "951": [203, 207], "95230770111084": 219, "9527": 9, "9527359008789062": [], "95295524597168": 219, "9529619": 201, "953899380983785e": 228, "955": [207, 234], "9562745094299316": 219, "9563999987658462e": 249, "958": [128, 203], "958739": 201, "9590945": 201, "96": [9, 194, 203, 213, 214, 217, 219, 220, 222, 242], "96000289916992": [214, 219, 220], "960464477539063e": 92, "9606": 229, "960836410522461": 210, "961": 251, "962808": 201, "963634": 201, "9637669": 201, "964": 207, "964181": 201, "96568": 236, "96729": 201, "967385292053223": 219, "968": [], "969": 219, "969700189074501e": 228, "96m": [253, 267, 268], "96mthi": [253, 267, 268], "97": [9, 197, 207, 210], "970": [195, 207], "970001220703125": [214, 219, 220], "97019523": 201, "970448340754956": 57, "971": 207, "973": [214, 219, 224, 232, 247, 267, 268, 269], "9739199280738831": [], "974": 207, "9744": 234, "97531270980835": 219, "9759175777435303": 219, "9763962984085084": [], "97646445": 201, "97663534": 201, "9767": 226, "9769785404205322": 210, "977": 9, "977249": 201, "978": 203, "9781647": 201, "97835": 207, "9791": 238, "9791288": 201, "9798734": 201, "98": [203, 207, 213, 217], "980": 201, "9802322387695312e": [], "980968": 201, "981": 203, "981006": 236, "981792": 201, "981919": 201, "9826": [], "982935": 201, "982978820800781": 219, "983": [], "9839": 9, "984": 207, "9845006035175174e": 228, "9868214962137642e": 210, "987": 193, "9880": 9, "988281": 195, "989": 9, "9890533": 201, "9899996519088745": [214, 219, 220], "99": [9, 124, 125, 126, 213, 264], "990": 201, "9903841018676758": 219, "9920000694546616e": 253, "992188": 207, "992247": 207, "9923": 9, "992999950241938e": [], "993": [], "994": 9, "9944": [], "994443": [], "9946": 238, "994699": 207, "9954756498336792": 216, "996094": 207, "996394": 207, "997070": 207, "9973807334899902": 219, "9985369": 201, "999": [201, 203, 207], "9990": 9, "9998126584687708n1333nan": [], "999890148639679": 216, "99999": 222, "99it": 194, "9t": [200, 228], "A": [92, 93, 109, 111, 112, 117, 132, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 203, 205, 206, 207, 209, 210, 211, 212, 216, 217, 219, 221, 236, 239, 249, 252, 258, 271], "AND": 252, "AS": 252, "And": [130, 193, 200, 202, 206, 209, 214, 216, 218, 219, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 266, 267], "As": [206, 214, 224, 225, 226, 229, 232, 233, 234, 237], "At": [193, 247], "BE": 252, "BUT": 252, "But": [109, 206, 218, 219, 228, 232], "By": [142, 144, 155, 164, 204, 236, 247, 249, 254], "FOR": 252, "For": [117, 195, 196, 209, 210, 219, 221, 224, 231, 232, 236, 240, 247, 267, 268, 269, 270], "IN": 252, "If": [18, 57, 92, 93, 109, 110, 113, 115, 131, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 196, 199, 210, 219, 221, 223, 224, 228, 230, 231, 232, 234, 240, 247, 249, 267, 268, 269, 270, 271], "In": [9, 60, 135, 193, 206, 218, 219, 247, 267, 269, 270], "It": [15, 17, 18, 21, 51, 60, 93, 95, 105, 109, 113, 115, 135, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 200, 203, 204, 205, 210, 217, 218, 219, 221, 222, 228, 231, 232, 240, 247, 248, 249, 261, 263, 265, 266, 267, 268, 269, 271], "NO": 252, "NOT": [117, 252], "No": [191, 196, 214, 219, 234, 267, 268, 269, 270], "Not": [130, 210, 249], "OF": 252, "ON": 264, "OR": 252, "On": 247, "One": [191, 196, 222, 240, 261, 265, 267, 268], "Or": [83, 130], "THE": 252, "TO": 252, "That": [10, 87, 142, 193, 208, 209, 215, 217, 221, 228, 231, 249], "The": [8, 9, 10, 12, 17, 18, 20, 21, 26, 56, 57, 58, 60, 83, 84, 85, 86, 92, 93, 98, 105, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 124, 125, 126, 134, 135, 136, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 200, 204, 206, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 246, 247, 248, 249, 251, 252, 253, 261, 264, 265, 266, 267, 268, 269, 270, 271], "Their": 247, "Then": [144, 152, 193, 196, 199, 210, 215, 216, 228, 240], "There": [105, 135, 217, 247, 248, 249], "These": [10, 60, 212, 240, 271], "To": [83, 117, 193, 196, 197, 203, 205, 207, 222, 262, 264, 267, 268], "WITH": 252, "Will": 240, "With": [83, 195, 215, 223, 249, 251, 253, 271], "_": [194, 196, 201, 203, 204, 205, 207, 214, 217, 219, 220, 222, 228, 230, 238, 242, 257], "_1": 196, "__": 196, "___": 18, "__and__": [93, 269], "__and___tensor": 95, "__bases__": 217, "__bool__": [219, 220], "__call__": [203, 207, 210, 242, 253, 269, 270], "__deepcopy__": 203, "__dict__": [267, 268], "__doc__": [194, 195, 196, 197, 203, 205, 207, 213], "__enter__": [203, 207, 242], "__exit__": [203, 207, 242], "__file__": [9, 200, 201, 203, 207], "__getattr__": 242, "__getattribute__": 242, "__getitem__": [204, 207, 242], "__hash__": [203, 207], "__iand__": 93, "__ilshift__": 93, "__init__": [9, 92, 93, 109, 112, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 219, 224, 227, 228, 232, 235, 236, 242, 247, 249, 253], "__instancecheck__": [203, 207], "__ior__": 93, "__irshift__": 93, "__ixor__": 93, "__len__": 204, "__main__": [9, 210, 216, 219, 224, 232], "__module__": 217, "__name__": [203, 205, 207, 217, 247], "__new__": [92, 93, 203, 207], "__or__": 93, "__or___tensor": 95, "__post_init__": 207, "__qualname__": 247, "__repr__": 207, "__set__": 207, "__setattr__": [203, 207], "__subclasscheck__": [203, 207], "__torch_dispatch__": [203, 207], "__torch_function__": [203, 207, 214, 219, 224, 232, 267, 268, 269], "__traceback__": 210, "__version__": [222, 230, 238], "__xor__": 93, "_abc": 207, "_abc_instancecheck": 207, "_abstract_fn": [225, 233], "_adaptive_avg_pool2d": [93, 95], "_add_batch_dim": 93, "_add_shape_inform": [92, 93, 207, 249], "_addmm_activ": 93, "_all_nan": 210, "_alloc_from_pool": 93, "_aot_autograd": [203, 204, 207, 210, 219, 241, 242], "_aot_export_non_strict": [210, 219], "_apply_to_graph_or_funct": 207, "_assert_scalar": [95, 215, 218, 227, 229, 235, 237, 269, 270], "_assert_scalar_default": [215, 218, 227, 229, 235, 237, 269, 270], "_assert_scalar_default_1": 269, "_assert_tensor_metadata": [95, 214, 218, 269, 270], "_assert_tensor_metadata_1": [269, 270], "_assert_tensor_metadata_default": [214, 218, 269, 270], "_assert_tensor_metadata_default_1": [214, 269, 270], "_assert_tensor_metadata_default_10": 214, "_assert_tensor_metadata_default_11": 214, "_assert_tensor_metadata_default_12": 214, "_assert_tensor_metadata_default_13": 214, "_assert_tensor_metadata_default_14": 214, "_assert_tensor_metadata_default_15": 214, "_assert_tensor_metadata_default_16": 214, "_assert_tensor_metadata_default_17": 214, "_assert_tensor_metadata_default_2": 214, "_assert_tensor_metadata_default_3": 214, "_assert_tensor_metadata_default_4": 214, "_assert_tensor_metadata_default_5": 214, "_assert_tensor_metadata_default_6": 214, "_assert_tensor_metadata_default_7": 214, "_assert_tensor_metadata_default_8": 214, "_assert_tensor_metadata_default_9": 214, "_aten_funct": [9, 109, 207, 247, 248], "_aten_functions_attent": [9, 109], "_aten_method": [9, 109, 247, 248], "_aten_upsample_output_s": [267, 268], "_attention_1__val_22": 255, "_attention_1__val_29": 255, "_attention_1__val_32": 255, "_attention_1__val_35": 255, "_attention_1__val_37": 255, "_attention_1__val_38": 255, "_attention_1__val_39": 255, "_attention_1_add": 255, "_attention_1_add_2": 255, "_attention_1_aten_cat_143_n0": 255, "_attention_1_aten_mul_106_n0": 255, "_attention_1_aten_mul_144_n0": 255, "_attention_1_aten_neg_141_n0": 255, "_attention_1_aten_softmax_no_dtype_163_r": 255, "_attention_1_aten_unsqueeze_55_n2": 255, "_attention_1_aten_unsqueeze_65_n2": 255, "_attention_1_attention_k_proj_1": 255, "_attention_1_attention_q_proj_1": 255, "_attention_1_attention_v_proj_1": 255, "_attention_1_bmm": 255, "_attention_1_bmm_1": 255, "_attention_1_cat": 255, "_attention_1_div": 255, "_attention_1_mul": 255, "_attention_1_mul_1": 255, "_attention_1_neg": 255, "_attention_1_slice_123": 255, "_attention_1_slice_140": 255, "_attention_1_slice_3": 255, "_attention_1_slice_4": 255, "_attention_1_transpos": 255, "_attention_1_transpose_2": 255, "_attention_1_transpose_3": 255, "_attention_1_transpose_4": 255, "_attention_1_unsqueez": 255, "_attention_1_unsqueeze_1": 255, "_attention_1_view_10": 255, "_attention_1_view_11": 255, "_attention_1_view_12": 255, "_attention_1_view_13": 255, "_attention_1_view_14": 255, "_attention_1_view_15": 255, "_attention_1_view_6": 255, "_attention_1_view_7": 255, "_attention_1_view_8": 255, "_attention_1_view_9": 255, "_attention_k_proj_1_mm_1": 255, "_attention_k_proj_1_t_1": 255, "_attention_o_proj_1_mm_3": 255, "_attention_o_proj_1_t_3": 255, "_attention_o_proj_1_view_16": 255, "_attention_q_proj_1_mm": 255, "_attention_q_proj_1_t": 255, "_attention_v_proj_1_mm_2": 255, "_attention_v_proj_1_t_2": 255, "_attention_v_proj_1_view_4": 255, "_attn_implement": [121, 124, 125, 126, 194, 196, 197, 241, 242, 253, 257], "_backward": 93, "_backward_": 203, "_bash_bench_benchmark_runn": [9, 88], "_bash_bench_benchmark_runner_agg": [9, 88], "_bash_bench_benchmark_runner_agg_help": [9, 88], "_bash_bench_cmd": [9, 88], "_bash_bench_model_runn": [9, 88, 240], "_bash_bench_models_help": [9, 88], "_bash_bench_set_dummi": [9, 88], "_bash_bench_set_explicit": [9, 88], "_bash_bench_set_huggingfac": [9, 88], "_bash_bench_set_huggingface_big": [9, 88], "_bash_bench_set_issu": [9, 88], "_bash_bench_set_timm": [9, 88], "_bash_bench_set_torchbench": [9, 88], "_bash_bench_set_torchbench_ado": [9, 88], "_bash_bench_untrain": [9, 88], "_batch_norm_impl_index_backward": 93, "_batch_norm_no_upd": 93, "_batch_norm_with_upd": 93, "_batch_norm_with_update_funct": 93, "_bench": 195, "_bench_rel": 195, "_bench_test": [9, 16], "_bench_tim": 195, "_bench_warmup_tim": 195, "_bench_with_cmd": 195, "_bind": 253, "_block_diag_iter": 93, "_bound_strid": 210, "_build": 207, "_build_initi": [92, 93, 207, 249], "_build_pattern": 207, "_build_pattern1_axi": 249, "_build_pattern1_b": 249, "_build_pattern1_indic": 249, "_build_pattern1_slop": 249, "_build_pattern1_x": 249, "_build_pattern1_zero": 249, "_build_pattern1_zerof": 249, "_build_pattern1_zeroi": 249, "_c": [203, 207, 208, 219, 242, 265], "_cach": 222, "_cache_dependant_input_prepar": [230, 238], "_cache_dependant_input_preparation_export": [230, 238], "_cache_kei": [203, 207], "_cache_shap": [135, 247], "_cached_dispatch_impl": [203, 207], "_calc_imput": 210, "_call": 203, "_call_function_and_unflatten_output": 210, "_call_impl": [207, 210, 219, 232, 242, 269, 270], "_captur": 253, "_capture_strategi": 253, "_cast_byt": 93, "_cast_char": 93, "_cast_doubl": 93, "_cast_float": 93, "_cast_half": 93, "_cast_input": [224, 227, 228, 257, 267, 268], "_cast_int": 93, "_cast_long": 93, "_cast_short": 93, "_cb_cond_else_branch_0": [267, 268, 269, 270], "_cb_cond_false_fn2_0": [269, 270], "_cb_cond_false_fn_0": [269, 270], "_cb_cond_then_branch_0": [267, 268, 269, 270], "_cb_cond_true_fn2_0": [269, 270], "_cb_cond_true_fn_0": [269, 270], "_check": [214, 232], "_check_valid_to_preserv": 207, "_choose_qparams_per_tensor": 93, "_chunk_cat": 93, "_clean_shap": 249, "_col_cond": 210, "_collect_all_valid_cia_op": [203, 207], "_collect_all_valid_cia_ops_for_namespac": [203, 207], "_collections_abc": [207, 242], "_combine_arg": 253, "_command_lines_pars": [9, 16], "_compat": 253, "_compil": [210, 219], "_compile_inn": 210, "_comput": [203, 205, 207], "_concatenate_ind": 210, "_cond_op_wrapp": 210, "_config_modul": 242, "_constant_fold": 207, "_context": 135, "_contextlib": [214, 219], "_conv_forward": 207, "_convolut": 93, "_convolution_double_backward": 93, "_convolution_mod": 93, "_core": [207, 253], "_create_graph_module_for_export": 207, "_create_onnx_supports_op_overload_t": 203, "_cuda_getdevicecount": 265, "_cuda_synchron": 242, "_cuda_vers": 93, "_cufft_clear_plan_cach": 93, "_cufft_get_plan_cache_max_s": 93, "_cufft_get_plan_cache_s": 93, "_cufft_set_plan_cache_max_s": 93, "_debug_constant_fold": 135, "_debug_get_const": 135, "_debug_has_internal_overlap": 93, "_debug_local_funct": 135, "_debug_node_output": 135, "_debug_node_typ": 135, "_debug_noquiet_nam": 115, "_debug_null_shap": 135, "_debug_print_export": 115, "_debug_print_statu": 115, "_debug_quiet": 135, "_debug_shape_miss": 135, "_debug_stop": 135, "_debug_stop_shap": 135, "_debug_stop_typ": 135, "_debug_value_shap": 135, "_decomp": [93, 95, 203, 207, 267, 268, 269, 270], "_deepcopy_dict": 203, "_deoptop": [203, 207], "_deriveddim": 135, "_detach_and_copy_item_memo": 207, "_dim_": 204, "_dim_arang": 93, "_dimhint": [210, 216, 219, 230, 238], "_dimhinttyp": [210, 216, 219, 230, 238], "_dispatch_get_registrations_for_dispatch_kei": [203, 207], "_dispatch_impl": 207, "_do_infer": 207, "_doc": [192, 195, 196, 197, 203, 205, 207, 210, 215, 216, 217, 224, 227, 229, 232, 235, 237, 264], "_doc_": [9, 109], "_donors_idx": 210, "_donotremove_": 135, "_dort_cmd_common": [9, 88], "_dort_cmd_common_model": [9, 88], "_draft_export": 214, "_dynamic_alia": [135, 247], "_dynamic_exampl": [135, 247, 267, 268], "_dynamic_shap": [237, 238], "_dynamo": [93, 109, 196, 203, 204, 205, 206, 210, 219, 230, 238, 242, 253, 268, 271], "_dynamo_export": [9, 93], "_embedding_bag": 95, "_embedding_bag_sparse_backward": 93, "_engine_run_backward": 242, "_enginebas": 242, "_enum": 207, "_error": [234, 237, 253, 267, 268], "_euclidean_dist": 93, "_eval_constant_expr": [203, 207], "_eval_typ": 207, "_evalu": 207, "_evaluate_expr": 219, "_event": 135, "_except": [9, 109, 247], "_exec_with_sourc": 207, "_export": [203, 207, 210, 214, 219, 220, 224, 232, 253, 267, 268, 269], "_export_for_train": [210, 219, 253], "_export_to_aten_ir_make_fx": [210, 219], "_exported_program_to_onnx_program": 207, "_exporter_legaci": [93, 196, 203], "_extract_fwd_bwd_modul": 203, "_extract_graph_with_inputs_output": 203, "_extract_symbolized_tb": 207, "_extract_tensor_metadata": 207, "_f": 222, "_factori": [210, 216, 219, 230, 238], "_fft_r2c": 95, "_fftn_onnx": 95, "_fit_ind": 210, "_fit_x": 210, "_fix_registr": [], "_flag": 253, "_flatten_into": [203, 207], "_fn": [93, 203, 210, 219, 242], "_forward_": 222, "_forward_from_src": 207, "_framework_api": [203, 207], "_free_unbacked_symbols_with_path": 207, "_functorch": [203, 204, 207, 210, 219, 241, 242], "_fused_dropout": 93, "_fused_dropout_decomposit": 93, "_fx_pass": 207, "_gather_sparse_backward": 93, "_gen_python_cod": [203, 207], "_generate_tokens_from_c_token": [203, 207], "_get_allowed_types_from_type_annot": 207, "_get_available_device_typ": 242, "_get_current_device_index": 242, "_get_decomp_for_cia": 93, "_get_device_attr": 242, "_get_device_index": 242, "_get_indic": 193, "_get_instructions_byt": [203, 207], "_get_mask": 210, "_get_match_pattern": 207, "_get_node_typ": 207, "_get_ortvalues_from_torch_tensor": 242, "_get_output_tensor_from_cache_entri": [203, 207], "_get_weight": 210, "_getitem_slic": [267, 268], "_getitem_slicena": 268, "_getitem_slicenb": 268, "_getitem_slicensd": [267, 268], "_graph_builder_runtim": [9, 135], "_graph_building_torch": 203, "_grid_sampler_2d_cpu_fallback_backward": 93, "_h": [203, 207], "_handle_call_function_node_with_low": 207, "_has_compatible_shallow_copy_typ": 93, "_higher_order_op": [93, 207, 210, 234, 267, 268, 270], "_ident": 210, "_in_spec": [267, 268, 269, 270], "_index": [56, 57, 240], "_initiate_registry_from_torchlib": 203, "_inlfunc_aten_add": 255, "_inlfunc_torch_nn_modules_linear_linear": 197, "_inlfunc_transformers_models_llama_modeling_llama_llamaattent": 197, "_inner_evaluate_expr": 219, "_intern": [9, 93, 183, 196, 203, 207, 234, 237, 238, 253, 267, 268], "_is_compil": [242, 265], "_is_compiled_against_turbo": 93, "_is_mkldnn_acl_support": 93, "_is_mkldnn_bf16_support": 93, "_is_mkldnn_fp16_support": 93, "_is_out": 193, "_is_preservable_cia_op": [203, 207], "_is_tensor_typ": [203, 207], "_is_view": 242, "_is_zerotensor": 93, "_jit_intern": [207, 242], "_jpeg_vers": 93, "_known": 135, "_known_const": [247, 267, 268], "_known_nam": [135, 247], "_known_rank": [135, 247, 267, 268], "_known_sequ": 135, "_known_shap": [135, 247, 267, 268], "_known_typ": [135, 247, 267, 268], "_known_value_shap": [135, 247, 267, 268], "_lazy_graph_modul": 207, "_lazy_init": 242, "_le": 269, "_led": 270, "_len": [267, 268, 269, 270], "_librari": 207, "_lo": 267, "_load_attr": 203, "_load_large_initi": 136, "_local_scalar_dens": [267, 268, 269, 270], "_local_scalar_dense_default": [267, 268, 269, 270], "_lod": 268, "_log_api_usage_onc": 95, "_log_softmax": [93, 95], "_log_softmax_backward_data": [93, 95], "_lu_with_info": 93, "_make": [203, 207], "_make_alia": 93, "_make_builder_interpret": [92, 93], "_make_data_dependent_error": 219, "_make_dict_idx_map": 210, "_make_fx_help": [210, 219], "_make_grad": 242, "_make_graph_modul": 207, "_make_new_neight": 210, "_make_node_set_type_shap": 207, "_make_node_set_type_shape_const": 207, "_mask_fit_x": 210, "_match_nod": 207, "_match_single_output_nod": 207, "_matcher": 207, "_materialize_cpp_cia_op": [203, 207], "_materialize_if_need": [203, 207], "_math_funct": 9, "_max_pool2d": 207, "_maybe_promote_nod": 203, "_merge_tensor": 210, "_messag": 207, "_method_from_src": 207, "_miss": 210, "_mkshape1_add": 230, "_mkshape1_sym_size_int_22": 230, "_mkshape__shape_unsqueeze_202": 230, "_mkshape_add": 230, "_mkshape_sym_size_int_22": 230, "_mkshape_sym_size_int_222": 230, "_name_or_path": [214, 219, 220, 230, 238], "_native_batch_norm": 95, "_native_batch_norm_legit": 93, "_native_batch_norm_legit_funct": 93, "_native_batch_norm_legit_no_stat": [93, 95], "_native_batch_norm_legit_no_train": [93, 95], "_nn": [203, 207, 208], "_nnpack_avail": 93, "_non_aten_funct": [9, 109], "_non_strict_export": [210, 219, 253], "_none_": 204, "_nvml_based_avail": [242, 265], "_o": 228, "_onnx_derivative_fw": 193, "_onnx_help": [9, 135], "_onx_add_add_mul__reshape_init7_s1_00000": [267, 268], "_onx_add_init7_s_30": 227, "_onx_add_matmul_mul_cat_3000": 230, "_onx_add_mul__reshape_init7_s1_0000": 268, "_onx_add_mul_div_sub_add_150000": 230, "_onx_add_mul_div_sub_add_90000": 230, "_onx_add_mul_div_sub_dropout0000": 230, "_onx_add_mul_split_x000": 178, "_onx_add_reducemean_pow_sub_add_150000": 230, "_onx_add_reducemean_pow_sub_add_90000": 230, "_onx_add_reducemean_pow_sub_dropout0000": 230, "_onx_add_sym_size_int_30": 268, "_onx_add_tanh_mul_add_x0000": 178, "_onx_add_x0": 178, "_onx_cast0": 200, "_onx_cast_gt0": 230, "_onx_cast_not_equal_indices000": 249, "_onx_cast_reducesum_cast_not_equal_indices00000": 249, "_onx_cast_reducesum_cast_where_not_equal_indices0002000": 249, "_onx_cast_sin_angle00": [267, 268], "_onx_cast_to0": 230, "_onx_cast_where_not_equal_indices00020": 249, "_onx_concat0": 200, "_onx_concat02": 200, "_onx_concat03": 200, "_onx_concat04": 200, "_onx_concat__shape_init7_s1_000": 268, "_onx_concat__shape_x00": 268, "_onx_concat_add_mul_split_x0000": 178, "_onx_concat_gatherelements__shape_max_pool2d_1000": 207, "_onx_concat_getitem_1_end0": 268, "_onx_concat_init7_s1_40": 267, "_onx_concat_init7_s2_2_20": 267, "_onx_concat_neg_split_split_x0100": 178, "_onx_concat_slice_x00": [267, 268], "_onx_concat_unsqueeze_sym_size_int002": 268, "_onx_concat_unsqueeze_sym_size_int_200": 268, "_onx_concat_unsqueeze_sym_size_int_2100": 230, "_onx_concat_unsqueeze_sym_size_int_21020": 230, "_onx_concat_unsqueeze_sym_size_int_21030": 230, "_onx_concat_unsqueeze_sym_size_int_2200": 230, "_onx_concat_unsqueeze_sym_size_int_300": 227, "_onx_constantofshape0": 200, "_onx_constantofshape02": 200, "_onx_constantofshape03": 200, "_onx_constantofshape04": 200, "_onx_constantofshape05": 200, "_onx_div0": 200, "_onx_div02": 200, "_onx_div03": 200, "_onx_div_add_10": 227, "_onx_div_cast_reducesum_cast_where_not_equal_indices00020000": 249, "_onx_div_sub_add00": 228, "_onx_div_sub_add_100": 228, "_onx_div_sub_add_1500": 230, "_onx_div_sub_add_700": 257, "_onx_div_sub_add_900": 230, "_onx_div_sub_clone_100": 257, "_onx_div_sub_dropout00": 230, "_onx_equal_indices0": 249, "_onx_expand_update0": [267, 268], "_onx_gather__reshape_x00": 267, "_onx_gather__shape_x00": 268, "_onx_gather_getattr_10": [267, 268], "_onx_gather_shape0": [267, 268], "_onx_gatherelements__shape_max_pool2d_100": 207, "_onx_gatherelements_init7_s32768_0": [267, 268], "_onx_gatherelements_init7_s49152_0": [267, 268], "_onx_gatherelements_logsoftmax_x00": 249, "_onx_greater_x0": 249, "_onx_lessorequal_detach_30": 204, "_onx_log_add0": 111, "_onx_logsoftmax_x0": 249, "_onx_matmul0": 247, "_onx_matmul_cat0": 228, "_onx_matmul_layer_norm0": [230, 257], "_onx_matmul_layer_norm02": [230, 257], "_onx_matmul_layer_norm03": [230, 257], "_onx_matmul_layer_norm04": [230, 257], "_onx_matmul_layer_norm_10": [228, 230, 257], "_onx_matmul_layer_norm_102": [230, 257], "_onx_matmul_layer_norm_103": [230, 257], "_onx_matmul_layer_norm_104": [230, 257], "_onx_matmul_mul_110": 257, "_onx_matmul_mul_170": 230, "_onx_matmul_mul_200": 257, "_onx_matmul_mul_90": 230, "_onx_matmul_mul_cat_300": 230, "_onx_matmul_relu0": [228, 249], "_onx_matmul_reshape_10": 230, "_onx_matmul_reshape_20": 230, "_onx_matmul_slice_450": 230, "_onx_matmul_view_40": 257, "_onx_matmul_view_80": 257, "_onx_matmul_x0": [247, 249], "_onx_matmul_x02": 247, "_onx_mul0": 200, "_onx_mul010": 200, "_onx_mul011": 200, "_onx_mul012": 200, "_onx_mul013": 200, "_onx_mul014": 200, "_onx_mul015": 200, "_onx_mul016": 200, "_onx_mul017": 200, "_onx_mul018": 200, "_onx_mul019": 200, "_onx_mul02": 200, "_onx_mul020": 200, "_onx_mul021": 200, "_onx_mul022": 200, "_onx_mul023": 200, "_onx_mul024": 200, "_onx_mul025": 200, "_onx_mul026": 200, "_onx_mul027": 200, "_onx_mul028": 200, "_onx_mul029": 200, "_onx_mul03": 200, "_onx_mul030": 200, "_onx_mul031": 200, "_onx_mul032": 200, "_onx_mul033": 200, "_onx_mul034": 200, "_onx_mul035": 200, "_onx_mul04": 200, "_onx_mul05": 200, "_onx_mul06": 200, "_onx_mul07": 200, "_onx_mul08": 200, "_onx_mul09": 200, "_onx_mul__reshape_init7_s1_000": [267, 268], "_onx_mul__reshape_init7_s8192_00": [267, 268], "_onx_mul_add_110": 257, "_onx_mul_add_120": 230, "_onx_mul_add_40": 257, "_onx_mul_add_60": 230, "_onx_mul_add_x00": 178, "_onx_mul_b_buff0": [267, 268], "_onx_mul_cat_30": 230, "_onx_mul_concat_neg_split_split_x01000": 178, "_onx_mul_div_sub_add_15000": 230, "_onx_mul_div_sub_add_9000": 230, "_onx_mul_div_sub_dropout000": 230, "_onx_mul_init7_s_40": 227, "_onx_mul_linear_100": [230, 257], "_onx_mul_linear_40": [230, 257], "_onx_mul_matmul0": 228, "_onx_mul_matmul02": 228, "_onx_mul_matmul_10": 257, "_onx_mul_matmul_20": 228, "_onx_mul_matmul_30": 257, "_onx_mul_mul_x00": 178, "_onx_mul_pow_10": [230, 257], "_onx_mul_pow_20": [230, 257], "_onx_mul_pow_x00": 178, "_onx_mul_split_x00": 178, "_onx_mul_transpose_cat_500": 230, "_onx_mul_triu0": [230, 257], "_onx_mul_view_100": 196, "_onx_mul_x0": [178, 249, 267, 268], "_onx_neg_split_split_x010": 178, "_onx_neg_squeeze_gatherelements_logsoftmax_x0000": 249, "_onx_nonzero_and_10": 267, "_onx_nonzero_x0": [267, 268], "_onx_not_equal_indices00": 249, "_onx_pow_sub_add_1500": 230, "_onx_pow_sub_add_900": 230, "_onx_pow_sub_dropout00": 230, "_onx_pow_x0": 178, "_onx_range_init7_s1_00": 268, "_onx_reducemean_add_150": 230, "_onx_reducemean_add_90": 230, "_onx_reducemean_dropout0": 230, "_onx_reducemean_pow_sub_add_15000": 230, "_onx_reducemean_pow_sub_add_9000": 230, "_onx_reducemean_pow_sub_dropout000": 230, "_onx_reducesum0": 200, "_onx_reducesum_cast_not_equal_indices0000": 249, "_onx_reducesum_cast_where_not_equal_indices000200": 249, "_onx_scatterelements__reshape_clone00": [267, 268], "_onx_scatternd0": 200, "_onx_scatternd_transpose_slice_300": [267, 268], "_onx_sigmoid__unsafe_view_70": 196, "_onx_slice_range_init7_s1_000": 268, "_onx_slice_x0": [267, 268], "_onx_slice_x02": [267, 268], "_onx_softmax_add_matmul_mul_cat_30000": 230, "_onx_split_nonzero_and_100": 267, "_onx_split_nonzero_and_101": 267, "_onx_split_nonzero_x00": [267, 268], "_onx_split_nonzero_x01": [267, 268], "_onx_split_split_x00": 178, "_onx_split_split_x01": 178, "_onx_split_x0": 178, "_onx_split_x1": 178, "_onx_sqrt_add_10": 196, "_onx_sqrt_add_60": 196, "_onx_sqrt_add_80": 196, "_onx_sqrt_add_reducemean_pow_sub_add_1500000": 230, "_onx_sqrt_add_reducemean_pow_sub_add_900000": 230, "_onx_sqrt_add_reducemean_pow_sub_dropout00000": 230, "_onx_sqrt_init1_s1_0": 230, "_onx_squeeze_gatherelements_logsoftmax_x000": 249, "_onx_sub_add_150": 230, "_onx_sub_add_90": 230, "_onx_sub_dropout0": 230, "_onx_tanh_mul_add_x000": 178, "_onx_transpose_cat_50": 230, "_onx_transpose_fill0": [267, 268], "_onx_transpose_l_self_modules_layers_modules_2_parameters_weight_0": 93, "_onx_transpose_p_decoder_attention_attention_0_key_weight0": 228, "_onx_transpose_p_decoder_attention_attention_0_query_weight0": 228, "_onx_transpose_p_decoder_attention_attention_0_value_weight0": 228, "_onx_transpose_p_decoder_attention_attention_1_key_weight0": 228, "_onx_transpose_p_decoder_attention_attention_1_query_weight0": 228, "_onx_transpose_p_decoder_attention_attention_1_value_weight0": 228, "_onx_transpose_p_decoder_attention_linear_weight0": 228, "_onx_transpose_p_decoder_feed_forward_linear_1_weight0": 228, "_onx_transpose_p_decoder_feed_forward_linear_2_weight0": 228, "_onx_transpose_p_fc1_weight0": 207, "_onx_transpose_p_fc2_weight0": 207, "_onx_transpose_p_fc3_weight0": 207, "_onx_transpose_p_layers_0_mlp_fc1_weight0": 257, "_onx_transpose_p_layers_0_mlp_fc2_weight0": 257, "_onx_transpose_p_layers_0_self_attn_dense_weight0": 257, "_onx_transpose_p_layers_0_self_attn_k_proj_weight0": 257, "_onx_transpose_p_layers_0_self_attn_q_proj_weight0": 257, "_onx_transpose_p_layers_0_self_attn_v_proj_weight0": 257, "_onx_transpose_p_layers_0_weight0": 249, "_onx_transpose_p_layers_1_mlp_fc1_weight0": 257, "_onx_transpose_p_layers_1_mlp_fc2_weight0": 257, "_onx_transpose_p_layers_1_self_attn_dense_weight0": 257, "_onx_transpose_p_layers_1_self_attn_k_proj_weight0": 257, "_onx_transpose_p_layers_1_self_attn_q_proj_weight0": 257, "_onx_transpose_p_layers_1_self_attn_v_proj_weight0": 257, "_onx_transpose_p_layers_2_weight0": 249, "_onx_transpose_p_linear_weight0": [209, 247, 267, 268], "_onx_transpose_p_lm_head_weight0": 230, "_onx_transpose_p_mlp_0_weight0": 224, "_onx_transpose_p_mlp_1_weight0": 224, "_onx_transpose_p_model_layers_0_mlp_fc1_weight0": 230, "_onx_transpose_p_model_layers_0_mlp_fc2_weight0": 230, "_onx_transpose_p_model_layers_0_self_attn_dense_weight0": 230, "_onx_transpose_p_model_layers_0_self_attn_k_proj_weight0": 230, "_onx_transpose_p_model_layers_0_self_attn_q_proj_weight0": 230, "_onx_transpose_p_model_layers_0_self_attn_v_proj_weight0": 230, "_onx_transpose_p_model_layers_1_mlp_fc1_weight0": 230, "_onx_transpose_p_model_layers_1_mlp_fc2_weight0": 230, "_onx_transpose_p_model_layers_1_self_attn_dense_weight0": 230, "_onx_transpose_p_model_layers_1_self_attn_k_proj_weight0": 230, "_onx_transpose_p_model_layers_1_self_attn_q_proj_weight0": 230, "_onx_transpose_p_model_layers_1_self_attn_v_proj_weight0": 230, "_onx_transpose_p_neuron_linear_weight0": 208, "_onx_transpose_slice_30": [267, 268], "_onx_transpose_weight0": [208, 228, 247], "_onx_transpose_weight02": [228, 247], "_onx_transpose_weight022": 228, "_onx_transpose_weight023": 228, "_onx_transpose_weight03": 228, "_onx_transpose_weight032": 228, "_onx_transpose_weight04": 228, "_onx_transpose_weight05": 228, "_onx_transpose_weight06": 228, "_onx_unsqueeze0": 200, "_onx_unsqueeze_add0": [230, 268], "_onx_unsqueeze_getitem0": 267, "_onx_unsqueeze_sub_10": 227, "_onx_unsqueeze_sym_size_int_220": 230, "_onx_unsqueeze_where_not_equal_indices0000": 249, "_onx_where0": 200, "_onx_where_greater_x00": 249, "_onx_where_not_equal_indices000": 249, "_onx_where_not_equal_indices0002": 249, "_op": [98, 109, 203, 207, 210, 242, 247], "_opset": 135, "_orig_mod": 204, "_orig_module_cal": [210, 219], "_ortvalues_to_torch_tensor": 242, "_out_spec": [267, 268, 269, 270], "_output_from_cache_entri": [203, 207], "_output_index": 115, "_overrid": 207, "_override_composite_implicit_decomp": 207, "_pack_padded_sequence_backward": 93, "_pad_circular": 93, "_pad_enum": 93, "_pad_packed_sequ": 93, "_parameter_renam": [135, 247, 267, 268], "_parent": 135, "_pass": [203, 207], "_pattern_to_str": 178, "_plot_torch_sklearn_201_knnpi": 210, "_post_process": 242, "_prelu_kernel": 93, "_prelu_kernel_backward": [93, 95], "_prep_args_for_hash": [203, 207], "_prims_common": 203, "_prims_funct": [9, 109, 247], "_print_read": 203, "_produce_aten_artifact": 207, "_produce_guards_callback": 207, "_profil": 207, "_propagate_xla_data": 93, "_proxy_placehold": 207, "_push_mod": 207, "_python_cod": [203, 207], "_python_dispatch": 207, "_pytre": [203, 206, 207, 217], "_r": 228, "_raise_list": 135, "_record_function_ent": 93, "_record_function_enter_new": 93, "_record_function_exit": 93, "_recordfunct": 93, "_reflection_pad": 93, "_reflection_pad_backward": 93, "_registr": 207, "_remove_annot": [203, 207], "_remove_batch_dim": 93, "_replace_unbacked_bind": 207, "_replace_with_hop_pass_help": 207, "_replication_pad": 93, "_report": 214, "_reshape_add_add_mul__reshape_init7_s1_000000": [267, 268], "_reshape_alia": 93, "_reshape_clone0": [267, 268], "_reshape_expand_update00": [267, 268], "_reshape_from_tensor": 93, "_reshape_index0": [267, 268], "_reshape_init1_s_0": [111, 196, 228, 230, 257, 267, 268], "_reshape_init1_s_02": 228, "_reshape_init1_s_022": 224, "_reshape_init1_s_20": [228, 267, 268], "_reshape_init1_s_202": 228, "_reshape_init1_s_203": 257, "_reshape_init1_s_204": 257, "_reshape_init1_s_30": [230, 257], "_reshape_init1_s_302": [230, 257], "_reshape_init1_s_303": 196, "_reshape_init1_s_40": [230, 257], "_reshape_init1_s_402": [230, 257], "_reshape_init1_s_50": [230, 257], "_reshape_init1_s_502": [230, 257], "_reshape_init1_s_60": [230, 257], "_reshape_init1_s_602": [230, 257], "_reshape_init7_s1_00": [267, 268], "_reshape_init7_s2_0_10": 267, "_reshape_init7_s3_0_1_20": [267, 268], "_reshape_init7_s8192_0": [267, 268], "_reshape_init7_s_": 267, "_reshape_init7_s_00": [267, 268], "_reshape_numel0": [267, 268], "_reshape_slice_range_init7_s1_0000": 268, "_reshape_x0": 267, "_resolved_onnx_exporter_opt": 6, "_retriev": 110, "_rewrite_rul": 207, "_rowwise_prun": 93, "_run": [203, 207], "_run_onnx_session_with_ortvaluevector": 242, "_safe_softmax": 93, "_saturate_weight_to_fp16": 93, "_scaled_dot_product_attention_math": 93, "_scaled_dot_product_efficient_attent": 96, "_scaled_dot_product_flash_attent": 96, "_scaled_dot_product_flash_attention_for_cpu": 93, "_scaled_dot_product_flash_attention_for_cpu_default": 96, "_schema": 207, "_seen_token": 217, "_set_current_nod": 203, "_set_grad_en": [219, 271], "_set_grad_enabled_1": 219, "_shapabl": 135, "_shape_as_tensor": 93, "_shape_clone0": 230, "_shape_help": [9, 135], "_shape_index0": 268, "_shape_init7_s1_00": 268, "_shape_init7_s8192_20": 268, "_shape_input_ids0": 230, "_shape_input_ids02": 230, "_shape_max_pool2d_10": 207, "_shape_past_key_values_key_cache_00": 230, "_shape_unsqueeze_20": 230, "_shape_unsqueeze_202": 230, "_shape_x0": [227, 268], "_shape_x02": [227, 268], "_shape_x03": 227, "_shape_y0": 268, "_should_decompose_because_unsafe_op": 207, "_signature_from_cal": 207, "_signature_from_funct": 207, "_sobol_engine_draw": 93, "_softmax": 93, "_softmax_backward_data": [93, 95, 200], "_sparse_bsc_tensor_unsaf": 93, "_sparse_bsr_tensor_unsaf": 93, "_sparse_compressed_tensor_unsaf": 93, "_sparse_coo_tensor_unsaf": 93, "_sparse_csc_tensor_unsaf": 93, "_sparse_csr_tensor_unsaf": 93, "_sparse_log_softmax": 93, "_sparse_mm": 93, "_sparse_softmax": 93, "_sparse_sum": 93, "_spec_0": 206, "_spec_1": 206, "_spec_2": 206, "_special_op_to_decompose_cia": 93, "_split": 195, "_split_decomp_table_to_cia_and_python_decomp": 207, "_stacklevel": 95, "_stat": [203, 207], "_stochastic_gradi": [209, 236], "_strip_annot": 207, "_sub_linear__onx_matmul_input_10": [267, 268], "_sub_linear__onx_transpose_weight0": [267, 268], "_sub_linear_input_1": [267, 268], "_sub_linear_linear": [267, 268], "_sub_linear_output": [267, 268], "_subclass": [109, 112, 203, 206, 207, 220], "_summari": 195, "_swap": 206, "_swap_modul": 206, "_sym_sqrt": 95, "_symbol": 100, "_symbolic_trac": [207, 210, 219, 242], "_tensor": 242, "_tensor_constant0": [267, 268, 269, 270], "_tensor_or_tensors_to_tupl": 242, "_test": 93, "_test_ambiguous_default": 93, "_test_autograd_multiple_dispatch": 93, "_test_check_tensor": 93, "_test_serialization_subcmul": 93, "_test_string_default": 93, "_thnn_differentiable_gru_cell_backward": 93, "_thnn_differentiable_lstm_cell_backward": 93, "_thnn_fused_lstm_cell_backward": 93, "_to_aten_func": [210, 219], "_to_copi": [93, 196, 238, 257, 267, 268, 269, 270], "_to_copy_1": [269, 270], "_to_copy_default": [267, 268, 269, 270], "_to_cpu": 93, "_to_functional_tensor": [203, 207], "_torch_help": [9, 109], "_torchdynamo_orig_cal": 210, "_trace": [207, 210, 219, 253], "_trace_forward_execut": 219, "_trace_inn": [210, 219], "_traceback": 207, "_transform_ind": 210, "_translate_function_signature_common": [203, 207], "_translate_fx_graph": 207, "_try_export_no_bypass_export": [210, 219], "_type_check": 207, "_unique_nam": [135, 247], "_unique_node_nam": [135, 247], "_unittest": 264, "_unlift": 207, "_unlift_exported_program_lifted_st": 207, "_unpack_oparg": [203, 207], "_unsafe_index": 93, "_unsafe_index_put": [93, 95], "_unsafe_index_tensor": 95, "_unsafe_masked_index": 93, "_unsafe_masked_index_put_accumul": 93, "_unsafe_view": [93, 242], "_unsafe_view_3": [196, 200], "_unsafe_view_4": [196, 200], "_unsafe_view_5": [196, 200], "_unsafe_view_6": [196, 200], "_unsafe_view_7": 196, "_unsafe_view_8": 196, "_unsafe_view_9": 196, "_untrace_forward_execut": 219, "_upb": 207, "_update_causal_mask": [214, 219], "_update_metadata_prop": 207, "_update_shape_types_with_proto": 249, "_update_shape_types_with_proto_one_result": 249, "_update_structures_with_proto": [200, 230, 249], "_upsample_bicubic2d_aa": 93, "_upsample_bilinear2d_aa": 93, "_upsample_linear_vec": 93, "_upsample_nearest_exact1d": 93, "_upsample_nearest_exact2d": 93, "_upsample_nearest_exact3d": 93, "_upsample_nearest_exact_vec": 93, "_upsample_nearest_vec": 93, "_use_cudnn_rnn_flatten_weight": 93, "_util": 242, "_utils_intern": 210, "_val_163": 196, "_val_215": 196, "_val_320": 196, "_val_400": 196, "_val_423": 196, "_val_424": 196, "_val_425": 196, "_val_426": 196, "_val_448": 196, "_val_449": 196, "_val_450": 196, "_val_451": 196, "_val_476": 196, "_val_498": 196, "_val_537": 196, "_val_539": 196, "_val_552": 196, "_val_558": 196, "_val_581": 196, "_val_594": 196, "_val_600": 196, "_val_604": 196, "_val_607": 196, "_val_611": 196, "_val_613": 196, "_val_615": 196, "_valid_mask": 210, "_validate_sparse_bsc_tensor_arg": 93, "_validate_sparse_bsr_tensor_arg": 93, "_validate_sparse_compressed_tensor_arg": 93, "_validate_sparse_coo_tensor_arg": 93, "_validate_sparse_csc_tensor_arg": 93, "_validate_sparse_csr_tensor_arg": 93, "_valu": [135, 247], "_value_shap": 135, "_version": 93, "_weight": 210, "_weight_norm": 93, "_weight_norm_differentiable_backward": 93, "_weight_norm_interfac": 93, "_wrap": 203, "_wrap_fx_proxi": [203, 210], "_wrap_torch_value_to_tensor": 203, "_wrapped_bw_compil": 203, "_wrapped_call_impl": [210, 219, 232, 242, 269, 270], "_wrapped_linear_prepack": 93, "_wrapped_quantized_linear_prepack": 93, "_zn3c105errorc2ens_14sourcelocationenst7__cxx1112basic_stringicst11char_traitsicesaicee": 264, "a0": [111, 210, 216, 219], "a1": [111, 210, 219], "a1s0": 210, "a1s0x1": 210, "a1s0x2": 210, "a1s0x3": 210, "a1s1": [111, 210], "a1s10x5": 210, "a1s1x10": 210, "a1s1x11": 210, "a1s1x3": 210, "a1s40x50": 210, "a1s5x4": 111, "a2": 210, "a20512": 219, "a3": [111, 210, 219], "a31": 219, "a32": 219, "a4": 111, "a5": [111, 210, 219], "a6": [], "a684e2a": 264, "a7s0x1": 210, "a7s0x2": 210, "a7s0x3": 210, "a7s1x3": 210, "a9096": 219, "a_val": 210, "aaa": [196, 197, 228], "aaaa": [196, 197, 228, 255], "aaab": [197, 228], "aaac": 228, "aacb": 228, "aaoo": 197, "ab": [56, 93, 95, 111, 130, 139, 197, 210, 213, 221, 227, 228, 231, 235, 238, 267, 268], "abaa": 228, "abab": 228, "abc": [203, 207], "abca": 196, "abil": [194, 216], "abl": [142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 210, 212, 214, 215, 216, 228, 232, 233, 237, 249], "abolut": 56, "about": [9, 15, 17, 87, 109, 115, 116, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 219, 221, 224, 230, 231, 232, 247, 248, 249, 267, 268, 269, 270, 271], "abov": [55, 109, 115, 135, 137, 219, 221, 224, 231, 232, 234, 240, 252, 253, 267, 268, 269, 270], "abs_": 93, "abs_1": [111, 267, 268], "absolut": [93, 115, 119], "absolute_error": 12, "abspath": [203, 207], "abya": 196, "acaa": [196, 228], "acceler": 264, "accept": 15, "access": 117, "accessor": 52, "accord": 60, "account": [95, 247], "accumul": 95, "accur": 210, "accuracy_dynamic_r": 57, "accuracy_r": 57, "aco": [93, 95, 130], "acos_": 93, "acosh": [93, 95, 130], "acosh_": 93, "act_fn": 197, "action": 252, "activ": [9, 188, 207, 214], "activation_fn": [214, 219], "activation_grad": [9, 188], "actual": [267, 270], "ad": [10, 21, 105, 115, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 200, 209, 228, 230, 236, 247, 260], "adam": 204, "adapt": [95, 142], "adaptive_avg_pool1d": [93, 95], "adaptive_avg_pool2d": [93, 95], "adaptive_avg_pool3d": [93, 95], "adaptive_max_pool1d": 93, "add": [8, 9, 10, 12, 18, 21, 26, 55, 56, 57, 93, 95, 101, 107, 109, 110, 111, 113, 115, 117, 130, 135, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 196, 197, 199, 200, 206, 210, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 230, 232, 235, 238, 247, 249, 255, 257, 264, 267, 268, 269, 270], "add3": 230, "add_": [93, 95, 206, 267, 268, 269, 270], "add_0": 267, "add_1": [111, 196, 197, 214, 215, 216, 217, 219, 223, 227, 228, 235, 255, 257, 267, 268, 269, 270], "add_10": [200, 214, 230, 257], "add_11": [200, 214, 230, 237, 257], "add_12": [200, 214, 230, 257, 269, 270], "add_12_false_graph_0": 268, "add_12_true_graph_0": 268, "add_13": [200, 214, 230, 257], "add_14": [200, 214, 230, 257, 270], "add_15": [200, 230, 268, 269, 270], "add_16": [200, 269, 270], "add_17": 200, "add_18": 200, "add_19": 200, "add_1_nod": 181, "add_1_output_0": 197, "add_2": [196, 197, 214, 215, 217, 219, 228, 230, 257], "add_20": 200, "add_21": 200, "add_22": 200, "add_290": 238, "add_2_": 197, "add_2_output_0": 255, "add_3": [214, 219, 230, 257, 268, 269, 270], "add_326": 238, "add_4": [196, 197, 214, 230, 238, 257, 268, 270], "add_415": 238, "add_428": 238, "add_445": 238, "add_450": 238, "add_5": [196, 197, 214, 257], "add_550": 196, "add_557": 238, "add_593": 238, "add_6": [196, 197, 214, 230, 257, 268, 269, 270], "add_682": 238, "add_695": 238, "add_7": [196, 197, 214, 230, 257], "add_712": 238, "add_717": 238, "add_8": [196, 197, 200, 214, 230, 257], "add_89": 238, "add_9": [200, 214, 230, 257], "add__1": 206, "add__tensor": 95, "add_aten_as_funct": 110, "add_child": 115, "add_constant_nod": 135, "add_domain": 135, "add_dynamic_object": 135, "add_false_graph_0": [267, 268], "add_funct": 135, "add_fx_graph": [135, 142], "add_ind": 210, "add_initi": [135, 207], "add_input": [115, 203], "add_loss_output": 12, "add_nod": [154, 155, 169, 181, 189, 190], "add_on": [107, 267, 268, 269, 270], "add_ou": 197, "add_output": 115, "add_output_0": [197, 255, 267, 268], "add_paramet": 206, "add_reduction_scatter_nd": [9, 175], "add_scalar": 95, "add_session_config_entri": 207, "add_sourc": 135, "add_stat": 135, "add_submodul": 206, "add_tensor": [95, 216, 230], "add_tensor10": 230, "add_tensor11": 230, "add_tensor12": 230, "add_tensor13": [200, 230], "add_tensor14": 200, "add_tensor2": [216, 230], "add_tensor3": [200, 230], "add_tensor4": [196, 200, 230], "add_tensor5": 230, "add_tensor6": 230, "add_tensor7": 230, "add_tensor8": 230, "add_tensor9": 230, "add_true_graph_0": 267, "add_validate_param": 142, "add_valu": [267, 268], "add_value_12": [267, 268], "addadd": [26, 28, 167, 170], "addaddmulmul": 170, "addaddmulmulbroadcast": 170, "addaddmulmulbroadcastpattern": [167, 170, 261], "addaddmulmulpattern": [167, 170, 261], "addbmm_": 93, "addcdiv": 93, "addcdiv_": 93, "addcmul": [93, 95], "addcmul_": 93, "addit": [3, 12, 51, 60, 71, 114, 135, 210, 247, 249], "additional_input": [95, 221, 231, 267, 268, 269, 270], "addmm": [93, 204, 247, 269, 270], "addmm_": 93, "addmmbackward0": 204, "addmul": [26, 28, 167, 170], "addmulbroadcast": 170, "addmulbroadcastpattern": [167, 170, 261], "addmulpattern": [167, 170, 261], "addmulsharedinput": 170, "addmulsharedinputbroadcast": 170, "addmulsharedinputbroadcastpattern": [167, 170, 261], "addmulsharedinputpattern": [167, 170, 261], "addmultranspos": 170, "addmultransposepattern": [167, 170, 261], "addmv": 93, "addmv_": 93, "addr": 93, "addreductionscatternd": [174, 175], "addsharedinput": [26, 28, 167, 170], "addtion": [144, 156], "adjust": [92, 93, 210], "adof": 196, "aeq": [], "affine_grid_gener": 93, "affine_grid_generator_backward": 93, "after": [4, 9, 10, 56, 60, 92, 93, 95, 105, 109, 110, 113, 115, 117, 127, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 197, 200, 202, 204, 207, 210, 217, 228, 230, 238, 240, 247, 249, 267, 268], "afterward": [60, 62, 107, 135], "aftr": 135, "afzt": 228, "again": [135, 221, 224, 225, 226, 228, 231, 232, 233, 234, 264], "against": [10, 193, 234, 253, 267, 268], "agg": [200, 249], "aggreg": [9, 57, 58, 179, 180, 249], "agm": [], "ai": [130, 179, 207, 261], "ai21": 122, "ai21lab": 122, "aim": 240, "albertformaskedlm": 240, "albertforquestionansw": 240, "algorithm": [71, 92, 93, 127, 135, 137, 142, 143, 247], "alia": [93, 98, 109, 135, 214], "alias": [221, 231, 267, 268, 269, 270], "alias_1": 214, "alias_2": 214, "alias_3": 214, "alias_copi": 93, "align": [196, 197, 228, 271], "align_a": 93, "align_corn": [95, 269, 270], "align_tensor": 93, "all": [3, 4, 9, 10, 12, 15, 18, 21, 51, 57, 58, 59, 60, 62, 71, 93, 95, 106, 107, 109, 115, 116, 117, 119, 122, 130, 131, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 207, 210, 212, 213, 219, 221, 224, 228, 230, 231, 232, 238, 240, 242, 247, 249, 252, 258, 261, 264, 267, 268, 269, 270, 271], "all_dim": 95, "all_gather_into_tensor": 93, "all_gather_into_tensor_coalesc": 93, "all_nan_dist_mask": 210, "all_nan_receivers_idx": 210, "all_out": 93, "all_reduc": 93, "all_reduce_coalesc": 93, "all_tensors_to_one_fil": [136, 230], "all_to_all_singl": 93, "allenailongformerbas": 240, "alloc": [144, 152, 241, 242], "allow": [12, 26, 60, 92, 93, 95, 109, 116, 134, 135, 142, 144, 155, 167, 170, 196, 209, 240], "allow_empti": 135, "allow_new_dynamic_dimens": 135, "allow_non": 135, "allow_non_graph_fak": 210, "allow_reshap": 155, "allow_running_as_root": 264, "allow_unknown": 134, "allow_untyped_output": [109, 135], "allow_zero": 135, "allowed_configur": 60, "allows_single_node_partit": 94, "allowzero": [207, 238, 267, 268], "almost": 110, "almostdonothingpattern": 144, "along": [219, 249], "alpha": [12, 95, 107, 181, 188, 204, 207, 228, 236, 247, 267, 268, 269, 270], "alpha_dropout": 93, "alreadi": [12, 56, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 247, 249, 253, 271], "also": [109, 115, 135, 138, 142, 144, 155, 192, 193, 194, 210, 212, 215, 219, 220, 224, 227, 228, 229, 231, 232, 233, 235, 237, 247, 248, 261, 266, 267, 268, 269, 270, 271], "alter": [142, 249, 271], "altern": [268, 270], "although": [60, 62, 107], "altogeth": 109, "alwai": [4, 115, 135, 212, 215, 247, 266], "always_fals": 242, "amax": [93, 95, 111, 210], "ambigu": [139, 142], "ami": 247, "amin": 93, "aminmax": 93, "among": [93, 195, 196, 197, 230, 238], "amp": 242, "amp_definitely_not_avail": 242, "an": [9, 10, 12, 15, 17, 18, 21, 26, 51, 58, 60, 62, 87, 92, 93, 105, 106, 109, 110, 111, 113, 115, 116, 117, 119, 128, 132, 135, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 207, 210, 211, 212, 213, 215, 217, 218, 219, 222, 228, 230, 234, 240, 247, 248, 249, 252, 253, 258, 259, 261, 264, 265, 267, 268, 269, 270, 271], "anann100nan": 210, "anann10nan": 210, "anann1333nan": 210, "anann1nan": 210, "anann20nan": 210, "anann33nan": 210, "anann80nan": 210, "and_": 95, "and_1": [267, 269], "angl": [95, 107, 267, 268, 269, 270], "ani": [4, 6, 9, 10, 12, 14, 15, 18, 19, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 92, 93, 94, 95, 96, 97, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 128, 132, 135, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 201, 203, 204, 206, 207, 209, 210, 213, 214, 217, 218, 219, 220, 222, 225, 226, 228, 230, 238, 240, 247, 248, 249, 252, 269, 270], "anoth": [17, 110, 115, 119, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 208, 219, 221, 227, 228, 231, 235, 237, 238, 240, 247, 249, 263], "antialia": [95, 267, 268, 269, 270], "anui": 196, "anymor": [267, 268, 269, 270], "anyop": 202, "anyth": [18, 135, 143], "anywai": 135, "aocq": 228, "aot": [6, 207], "aot0": 207, "aot1": 207, "aot_autograd": [93, 196, 203, 204, 242], "aot_compil": [93, 196, 204], "aot_export": [210, 219], "aotautograd": [203, 204, 241], "aouz": 228, "api": [9, 21, 115, 183, 198, 206, 221, 231, 248, 251, 264, 265], "appear": [110, 139, 196, 247, 264], "append": [8, 135, 142, 194, 195, 198, 203, 205, 207, 210, 217, 242, 249, 257, 267, 268, 269, 270], "append_custom_librari": 8, "append_output_dict": 18, "append_output_initi": 18, "append_output_sequ": 18, "appi": [221, 231], "appli": [55, 56, 60, 71, 87, 92, 93, 109, 115, 127, 135, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 200, 202, 204, 209, 224, 228, 235, 237, 238, 242, 247, 248, 257, 261, 266, 267, 268], "applic": [71, 177, 178], "apply_castpattern": [200, 228], "apply_constant_fold": [200, 249], "apply_constant_folding__reshap": 249, "apply_constant_folding__transpos": 249, "apply_constant_folding_new_init": [200, 249], "apply_expandbroadcastpattern": 200, "apply_fusedmatmulpattern": 228, "apply_gemmtransposepattern": 249, "apply_identitypattern": 228, "apply_layernormalizationpattern": 228, "apply_match": [142, 207, 249], "apply_matmuladdpattern": [200, 249], "apply_matmulreshape2of3pattern": 200, "apply_model": 166, "apply_mulmulmulscalarpattern": 200, "apply_patch": 56, "apply_pattern": [142, 153, 178, 181, 202], "apply_rotary_pos_emb": 214, "apply_runtime_assertion_pass": 207, "apply_skiplayernormalizationpattern": 228, "apply_to_model": 207, "apply_transposeequalreshapepattern": 249, "approach": 206, "appropri": [110, 247], "approrpi": 110, "approxim": [9, 95], "aqyo": 197, "ar": [9, 10, 12, 15, 18, 21, 57, 60, 95, 96, 109, 110, 113, 115, 116, 117, 119, 121, 124, 125, 126, 130, 131, 135, 137, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 196, 197, 202, 203, 205, 206, 207, 209, 210, 212, 215, 216, 219, 226, 228, 229, 230, 234, 236, 237, 238, 240, 247, 249, 261, 266, 267, 268, 269, 270, 271], "arang": [93, 95, 101, 113, 193, 210, 214, 218, 219, 230, 238, 269, 270], "arange2": 230, "arange_1": [214, 219, 230, 238], "arange_2": [214, 219], "arange_default": 93, "arange_start": 93, "arcco": 93, "arccosh": 93, "architectur": [57, 214, 219, 220, 222, 230, 238, 247], "arcsin": 93, "arcsinh": 93, "arctan": 93, "arctan2": 93, "arctanh": 93, "arg": [9, 15, 16, 26, 55, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 92, 93, 94, 95, 97, 100, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 128, 135, 136, 139, 142, 194, 195, 196, 197, 201, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 247, 253, 267, 268, 269, 270], "arg0_1": [219, 224, 232, 247, 267, 268, 269, 270], "arg10_1": 219, "arg11_1": 219, "arg12_1": 219, "arg13_1": 219, "arg14_1": 219, "arg15_1": 219, "arg16_1": 219, "arg17_1": 219, "arg18_1": 219, "arg19_1": 219, "arg1_1": [219, 224, 232, 247, 267, 268, 269, 270], "arg20_1": 219, "arg21_1": 219, "arg22_1": 219, "arg23_1": 219, "arg24_1": 219, "arg25_1": 219, "arg26_1": 219, "arg2_1": [219, 224, 232, 247], "arg3_1": [219, 224, 232], "arg4_1": [219, 224, 232], "arg5_1": 219, "arg6_1": 219, "arg7_1": 219, "arg8_1": 219, "arg9_1": 219, "argm": [210, 213], "argmax": 95, "args_0": 206, "args_1": 206, "args_3": 268, "args_activation_s": 201, "args_nam": 116, "args_node_index": 201, "args_op_nam": 201, "args_output_s": 201, "args_parameter_s": 201, "args_provid": 201, "args_thread_scheduling_stat": 201, "argsort": 93, "argsvar": 210, "argument": [3, 4, 9, 12, 17, 55, 57, 58, 59, 92, 93, 105, 109, 113, 114, 115, 116, 117, 128, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 203, 204, 205, 206, 207, 218, 220, 237, 241, 247, 249, 253, 259, 261, 262, 267, 268, 269, 270], "argwher": 93, "aris": 252, "arnir0": [122, 222], "around": [60, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 207, 247, 248, 249, 271], "arr": [15, 18], "arrai": [9, 15, 19, 51, 93, 109, 112, 135, 138, 193, 197, 198, 200, 201, 203, 204, 205, 207, 208, 209, 210, 224, 226, 227, 228, 236, 247, 248, 249, 257, 264, 267, 268], "as_funct": [55, 109, 115, 135], "as_graph_proto": 135, "as_list": [93, 142], "as_proto": 191, "as_rst": [144, 166, 170, 175, 177, 179, 188], "as_shap": 135, "as_strid": [93, 95, 267, 268, 269, 270], "as_strided_copi": 93, "as_strided_scatt": 93, "as_tupl": [95, 210, 267, 268, 269, 270], "asin": [93, 95, 130, 247], "asin_": 93, "asinh": [93, 95, 130], "asinh_": 93, "ask": 247, "assert": [95, 135, 191, 195, 196, 203, 205, 207, 210, 214, 215, 218, 222, 225, 226, 227, 229, 232, 233, 234, 235, 237, 247, 269, 270], "assert_all_clos": [119, 196], "assert_almost_equ": 193, "assert_found": 120, "assert_metadata_eq": 207, "assertalmostequ": 9, "assertempti": 9, "assertequ": 9, "assertequalarrai": 9, "assertequalor": 9, "assertexist": 9, "assertgreaterorequ": 9, "assertin": 9, "assertionerror": [195, 197, 203, 205, 207, 210, 215, 224, 225, 226, 230, 232, 233, 234, 237, 247], "assertnotempti": 9, "assertrais": 9, "assertsetcontain": 9, "assertstartswith": 9, "asserttru": 9, "assess": 265, "assign": [179, 180], "associ": [60, 252, 268], "assum": [10, 12, 15, 18, 20, 95, 111, 116, 119, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 202, 219, 240, 247, 249], "assume_uniqu": 95, "assumpt": [214, 232], "ast": [132, 203, 207], "ast_util": [203, 207], "astyp": [21, 193, 195, 198, 200, 201, 207, 209, 210, 236, 247, 249], "asvg": 228, "aszt": 196, "atan": [93, 95, 130], "atan2": 93, "atan2_": 93, "atan_": 93, "atanh": [93, 95, 130], "atanh_": 93, "aten": [71, 93, 95, 96, 105, 109, 110, 111, 113, 117, 127, 135, 206, 207, 208, 214, 215, 216, 217, 218, 219, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 242, 247, 266, 267, 268, 269, 270], "aten___and___tensor": 95, "aten___or___tensor": 95, "aten__adaptive_avg_pool2d": 95, "aten__assert_scalar": 95, "aten__assert_tensor_metadata": 95, "aten__embedding_bag": 95, "aten__enter_autocast": 95, "aten__exit_autocast": 95, "aten__fft_r2c": 95, "aten__fftn_onnx": 95, "aten__log_api_usage_onc": 95, "aten__log_softmax": 95, "aten__log_softmax_backward_data": 95, "aten__native_batch_norm": 95, "aten__native_batch_norm_legit_no_stat": 95, "aten__native_batch_norm_legit_no_train": 95, "aten__prelu_kernel": 95, "aten__prelu_kernel_backward": 95, "aten__scaled_dot_product_efficient_attent": 96, "aten__scaled_dot_product_flash_attent": 96, "aten__scaled_dot_product_flash_attention_for_cpu": 96, "aten__set_grad_en": 95, "aten__softmax": 95, "aten__softmax_backward_data": 95, "aten__sym_sqrt": 95, "aten__to_copi": 95, "aten__unsafe_index_put": 95, "aten__unsafe_index_tensor": 95, "aten__unsafe_view": 95, "aten_ab": 95, "aten_aco": 95, "aten_acosh": 95, "aten_adaptive_avg_pool1d": 95, "aten_adaptive_avg_pool2d": 95, "aten_adaptive_avg_pool3d": 95, "aten_add": 95, "aten_add__tensor": 95, "aten_add_scalar": 95, "aten_add_tensor": 95, "aten_addcmul": 95, "aten_addmm": [95, 247], "aten_al": 95, "aten_alia": 95, "aten_all_dim": 95, "aten_amax": 95, "aten_and": 95, "aten_and_": 95, "aten_ani": 95, "aten_any_dim": 95, "aten_arang": 95, "aten_arange_start": 95, "aten_arange_start_step": 95, "aten_argmax": 95, "aten_as_funct": [109, 247, 267, 268], "aten_as_strid": 95, "aten_asin": [95, 247], "aten_asinh": 95, "aten_atan": 95, "aten_atanh": 95, "aten_auto_function": 95, "aten_avg_pool2d": 95, "aten_avg_pool2d_backward": 95, "aten_avg_pool3d": 95, "aten_baddbmm": 95, "aten_batch_norm": 95, "aten_bitwise_not": 95, "aten_bitwise_or": 95, "aten_bitwise_or__tensor": 95, "aten_bitwise_or_tensor": 95, "aten_bmm": 95, "aten_broadcast_tensor": 95, "aten_cat": 95, "aten_ceil": 95, "aten_celu": 247, "aten_chunk": 95, "aten_clamp": 95, "aten_clamp_max": 95, "aten_clamp_min": 95, "aten_clamp_tensor": 95, "aten_clip": 95, "aten_clon": 95, "aten_co": 95, "aten_col2im": 95, "aten_cond": 95, "aten_constant_pad_nd": 95, "aten_contigu": 95, "aten_conv1d": 95, "aten_conv2d": 95, "aten_conv2d_pad": 95, "aten_conv3d": 95, "aten_conv_transpose2d_input": 95, "aten_conv_transpose3d_input": 95, "aten_conversion_chang": 127, "aten_convolut": 95, "aten_copi": [95, 247], "aten_copy_": 95, "aten_cosh": 95, "aten_cross_entropy_loss": 95, "aten_cudnn_batch_norm": 95, "aten_cumsum": 95, "aten_detach": 95, "aten_detach_": 95, "aten_div": 95, "aten_div__tensor": 95, "aten_div_scalar": 95, "aten_div_tensor": 95, "aten_div_tensor_mod": 95, "aten_dropout": 95, "aten_dropout_": 95, "aten_einsum": 95, "aten_elu": [95, 109], "aten_elu_": 95, "aten_embed": 95, "aten_embedding_bag_padding_idx": 95, "aten_empty_lik": 95, "aten_empty_permut": 95, "aten_empty_strid": 95, "aten_eq": 95, "aten_eq_scalar": 95, "aten_eq_tensor": 95, "aten_erf": 95, "aten_exp": 95, "aten_expand": 95, "aten_expand_a": 95, "aten_expm1": 95, "aten_export_artifact": [210, 219], "aten_feature_dropout": 95, "aten_fft_fft": 95, "aten_fft_fft2": 95, "aten_fft_ifft": 95, "aten_fft_ifft2": 95, "aten_fill_scalar": 95, "aten_fill_tensor": 95, "aten_flatten": 95, "aten_flatten_using_int": [95, 207], "aten_floor": 95, "aten_floor_divid": 95, "aten_floordiv": 95, "aten_fmod_scalar": 95, "aten_ful": 95, "aten_full_lik": 95, "aten_funct": [9, 109, 253], "aten_functionctx": 95, "aten_g": 95, "aten_gath": 95, "aten_ge_scalar": 95, "aten_ge_tensor": 95, "aten_gelu": 95, "aten_getattr": 95, "aten_grid_sampl": 95, "aten_grid_sampler_2d": 95, "aten_group_norm": 95, "aten_gt": 95, "aten_gt_scalar": 95, "aten_gt_tensor": 95, "aten_hardsigmoid": 95, "aten_hardswish": 95, "aten_hardswish_": 95, "aten_hardtanh": 95, "aten_hardtanh_": 95, "aten_hardtanh_backward": 95, "aten_im2col": 95, "aten_imul": 95, "aten_index_put": 95, "aten_index_put_": 95, "aten_index_select": 95, "aten_index_tensor": 95, "aten_instance_norm": 95, "aten_interpol": 95, "aten_isin": 95, "aten_isin_tensor_tensor": 95, "aten_isinf": 95, "aten_isnan": 95, "aten_item": 95, "aten_l": 95, "aten_l1_loss": 95, "aten_layer_norm": 95, "aten_le_scalar": 95, "aten_le_tensor": 95, "aten_leaky_relu": 95, "aten_leaky_relu_": 95, "aten_leaky_relu_backward": 95, "aten_lift_fresh_copi": 95, "aten_linalg_vector_norm": 95, "aten_linear": [95, 207], "aten_linspac": 95, "aten_local_funct": [208, 228, 247], "aten_log": 95, "aten_log_softmax_int": 95, "aten_logical_and": 95, "aten_logical_not": 95, "aten_logical_or": 95, "aten_lt": 95, "aten_lt_scalar": 95, "aten_lt_tensor": 95, "aten_masked_fill__scalar": 95, "aten_masked_fill_scalar": 95, "aten_masked_fill_tensor": 95, "aten_masked_scatt": 95, "aten_matmul": 95, "aten_max": 95, "aten_max_dim": 95, "aten_max_oth": 95, "aten_max_pool1d": 95, "aten_max_pool2d": 95, "aten_max_pool2d_with_indic": 95, "aten_max_pool3d": 95, "aten_max_pool3d_with_indic": 95, "aten_maximum": 95, "aten_mean": 95, "aten_mean_dim": 95, "aten_meth___eq__": 97, "aten_meth_add_": [267, 268], "aten_meth_bool": 97, "aten_meth_clamp_max": 97, "aten_meth_clamp_min": 97, "aten_meth_clon": 97, "aten_meth_co": 97, "aten_meth_contigu": 97, "aten_meth_cpu": 97, "aten_meth_detach": 97, "aten_meth_eq": 97, "aten_meth_expand": 97, "aten_meth_expand_a": [97, 113, 230], "aten_meth_expand_as2": 230, "aten_meth_float": 97, "aten_meth_item": 97, "aten_meth_masked_fil": 97, "aten_meth_masked_fill_": 97, "aten_meth_mean": 97, "aten_meth_mul": [267, 268], "aten_meth_numel": 97, "aten_meth_pow": 97, "aten_meth_repeat": 97, "aten_meth_reshap": 97, "aten_meth_s": 97, "aten_meth_sin": 97, "aten_meth_sum": [97, 267, 268], "aten_meth_t": 97, "aten_meth_to": 97, "aten_meth_transpos": 97, "aten_meth_unsqueez": 97, "aten_meth_view": 97, "aten_method": [9, 109], "aten_min": 95, "aten_min_oth": 95, "aten_minimum": 95, "aten_mm": 95, "aten_mod": 95, "aten_mse_loss": 95, "aten_mul": 95, "aten_mul__tensor": 95, "aten_mul_scalar": 95, "aten_mul_tensor": 95, "aten_multinomi": 95, "aten_multiply_tensor": 95, "aten_n": 95, "aten_nan_to_num": 95, "aten_native_dropout": 95, "aten_native_group_norm": 95, "aten_native_layer_norm": 95, "aten_ne_scalar": 95, "aten_ne_tensor": 95, "aten_neg": 95, "aten_new_on": 95, "aten_new_zero": 95, "aten_nll_loss_forward": 95, "aten_nonzero": 95, "aten_nonzero_numpi": 95, "aten_not": 95, "aten_not_": 95, "aten_numpy_t": 95, "aten_on": 95, "aten_ones_lik": 95, "aten_or": 95, "aten_pad": 95, "aten_permut": 95, "aten_polar": 95, "aten_pow": 95, "aten_pow__scalar": 95, "aten_pow_scalar": 95, "aten_pow_tensor_scalar": 95, "aten_pow_tensor_tensor": 95, "aten_prelu": 95, "aten_prod": 95, "aten_prod_dim_int": 95, "aten_reciproc": 95, "aten_reflection_pad2d": 95, "aten_relu": 95, "aten_relu_": 95, "aten_remaind": 95, "aten_remainder_scalar": 95, "aten_remainder_tensor": 95, "aten_repeat": 95, "aten_repeat_interleav": 95, "aten_repeat_interleave_self_int": 95, "aten_reshap": 95, "aten_reshape_a": 95, "aten_rol": 95, "aten_round": 95, "aten_rrelu_with_noise_backward": 95, "aten_rsqrt": 95, "aten_rsub": 95, "aten_rsub_scalar": 95, "aten_scalar_tensor": 95, "aten_scaled_dot_product_attent": [96, 230], "aten_scaled_dot_product_attention2": 230, "aten_scaled_dot_product_attention3": 230, "aten_scaled_dot_product_attention4": 230, "aten_scaled_dot_product_attention5": 230, "aten_scaled_dot_product_attention6": 230, "aten_scaled_dot_product_attention7": 230, "aten_scaled_dot_product_attention8": 230, "aten_scaled_dot_product_attention_default": 230, "aten_scan": 95, "aten_scatter_add": 95, "aten_scatter_add_": 95, "aten_scatter_reduce__two": 95, "aten_scatter_reduce_two": 95, "aten_select_copy_int": 95, "aten_select_int": 95, "aten_select_scatt": 95, "aten_selu": 95, "aten_setitem": 95, "aten_sigmoid": 95, "aten_sigmoid_": 95, "aten_sigmoid_backward": 95, "aten_sign": 95, "aten_silu": 95, "aten_silu_": 95, "aten_sin": 95, "aten_sinh": 95, "aten_slice_backward": 95, "aten_slice_scatt": 95, "aten_slice_tensor": 95, "aten_softmax": 95, "aten_softmax_int": 95, "aten_softplu": 95, "aten_split_tensor": 95, "aten_split_with_s": 95, "aten_sqrt": 95, "aten_squeez": 95, "aten_squeeze_dim": 95, "aten_stack": 95, "aten_std_dim": 95, "aten_sub": 95, "aten_sub__tensor": 95, "aten_sub_tensor": 95, "aten_sum": 95, "aten_sum_dim_intlist": 95, "aten_sym_constrain_range_for_s": 95, "aten_sym_max": 95, "aten_sym_min": 95, "aten_sym_size_int": 95, "aten_t": 95, "aten_tak": 95, "aten_tan": 95, "aten_tanh": 95, "aten_tanh_backward": 95, "aten_tensor": 95, "aten_threshold_backward": 95, "aten_to": 95, "aten_to_devic": 95, "aten_to_dtyp": 95, "aten_to_dtype_layout": 95, "aten_topk": 95, "aten_transpos": 95, "aten_transpose_int": 95, "aten_tril": 95, "aten_triu": 95, "aten_truediv": 95, "aten_type_a": 95, "aten_unbind_int": 95, "aten_unflatten_int": 95, "aten_unfold": 95, "aten_unsqueez": 95, "aten_unsqueeze_": 95, "aten_upsample_bicubic2d": 95, "aten_upsample_bicubic2d_vec": 95, "aten_upsample_bilinear2d": 95, "aten_upsample_bilinear2d_vec": 95, "aten_upsample_nearest2d": 95, "aten_upsample_nearest2d_vec": 95, "aten_upsample_nearest3d": 95, "aten_upsample_nearest3d_vec": 95, "aten_upsample_trilinear3d": 95, "aten_upsample_trilinear3d_vec": 95, "aten_view": 95, "aten_wher": 95, "aten_where_scalar": 95, "aten_where_scalaroth": 95, "aten_where_scalarself": 95, "aten_where_self": 95, "aten_wrap_with_autocast": [95, 113], "aten_wrap_with_set_grad_en": 95, "aten_zero": 95, "aten_zeros_lik": 95, "atenasstrid": [106, 107], "ateninterpol": [106, 107], "atennonzero": [106, 107], "atennonzerotupl": [106, 107], "atenrollpo": [106, 107, 213], "atenrollrelu": [106, 107, 213], "atol": [9, 111, 115, 119, 196, 210], "atol_rtol_float": 93, "atol_rtol_tensor": 93, "att": [15, 201, 224, 231, 267, 268], "att_nam": [135, 142], "attach": [116, 234, 253, 267, 268], "attempt": [60, 206, 215, 220, 265], "attent": [26, 56, 128, 183, 188, 191, 228, 230, 238, 255, 264], "attention_0": 228, "attention_1": [228, 255], "attention_bia": [214, 219, 220], "attention_dropout": [214, 219, 220, 230, 238], "attention_interfac": 214, "attention_mask": [122, 123, 197, 214, 219, 220, 222, 230, 238, 253, 257], "attention_norm": 228, "attention_pattern": [9, 188], "attention_sc": 214, "attentionblock": [128, 228], "attentionpattern": [183, 188, 228, 261], "attn": 264, "attn_bia": 96, "attn_impl": [56, 60, 63, 64, 65, 66, 67, 68, 69, 70], "attn_mask": 96, "attn_output": [135, 214], "attn_weight": [96, 214], "attr": 117, "attr_float": 100, "attr_int": 100, "attr_kei": 100, "attr_nam": 95, "attr_po": 100, "attr_str": 100, "attr_typ": 100, "attr_val": 117, "attribut": [15, 55, 60, 109, 110, 115, 117, 135, 142, 247, 249], "attributeerror": [92, 93], "attributeproto": [135, 142], "aulv": 255, "author": 252, "auto": [209, 212, 216, 218, 221, 229, 231, 236, 237, 239, 258, 271], "auto_exampl": 211, "auto_examples_jupyt": 192, "auto_examples_python": 192, "auto_function": [226, 234], "auto_map": [214, 219, 220], "auto_pad": [95, 207], "auto_recip": 239, "auto_recipes_jupyt": 212, "auto_recipes_python": 212, "autocast": [60, 196, 247], "autocast_mod": 242, "autoconfig": [214, 219, 220], "autofunction": 234, "autograd": [203, 207, 219, 242, 271], "autograd_not_implemented_inn": 207, "autom": [21, 60], "automac": 115, "automat": [115, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 210, 247, 249], "automodelforcausallm": [214, 219, 220, 222], "autotoken": 222, "autowrap_funct": 117, "autowrap_modul": 117, "avail": [3, 9, 74, 75, 76, 77, 78, 79, 80, 81, 109, 112, 115, 117, 120, 135, 195, 196, 197, 203, 204, 205, 207, 247, 248, 251, 261, 265], "averag": [9, 203, 205, 207, 210], "averagepool": 95, "averagepoolgrad": [26, 29, 95], "avg": [194, 209, 236, 241, 242], "avg_pool2d": 95, "avg_pool3d": 95, "avg_tim": 194, "avgpool": 95, "avoi": 9, "avoid": [4, 15, 60, 115, 135, 137, 144, 154, 163, 193, 210, 222, 224, 227, 232, 235, 247, 249, 265], "ax": [9, 139, 195, 201, 203, 205, 207], "axb": 247, "axfk": 255, "axi": [97, 117, 135, 142, 144, 153, 161, 179, 180, 181, 188, 195, 198, 200, 210, 215, 217, 221, 223, 227, 228, 229, 230, 231, 237, 238, 249, 257, 267, 268, 269, 270], "azef": 197, "azur": 9, "b": [9, 73, 93, 95, 117, 135, 142, 144, 153, 155, 156, 167, 170, 177, 178, 181, 186, 188, 193, 200, 202, 207, 222, 228, 238, 247, 249, 263, 265, 267, 268, 269, 270], "b8": [214, 219, 224, 232], "b_": 228, "b_buff": [267, 268], "b_decoder_attention_attention_0_mask": 228, "b_decoder_attention_attention_1_mask": 228, "b_lifted_tensor_5": 268, "b_model_rotary_emb_inv_freq": [214, 230], "b_rotary_emb_inv_freq": 257, "b_val": 210, "baaa": [196, 197, 255], "babb": 196, "baca": [196, 197], "back": [208, 265], "backen": [203, 205], "backend": [26, 71, 83, 84, 85, 86, 92, 93, 94, 119, 127, 192, 193, 195, 197, 199, 200, 206, 208, 209, 210, 211, 241, 242, 244, 247, 248, 254, 258, 264, 271], "backend_debug": 93, "backend_funct": 94, "backend_help": [9, 93], "backend_partition_compil": 94, "backendcompilerfail": 205, "backort": 195, "backpropag": [193, 209, 236], "backward": [93, 95, 117, 196, 200, 203, 204, 209, 236, 242, 247], "baddbmm": [93, 95], "baddbmm_": 93, "ban_prefix": 15, "bar": [109, 135, 194, 203, 205, 207], "barh": [195, 203, 205, 207], "bartforcausallm": 240, "bartforconditionalgener": 240, "base": [4, 60, 71, 92, 93, 109, 110, 115, 119, 135, 142, 177, 192, 194, 197, 199, 202, 203, 204, 206, 207, 211, 217, 222, 246, 247, 249, 258, 271], "basedummyclass": 217, "baseestim": 55, "baselin": [57, 194], "basemodeloutput": [], "basemodeloutputwithpast": 219, "basemodeloutputwithpoolingandcrossattent": 122, "bash": [59, 264], "bash_bench": 59, "bash_bench_agg": [9, 88, 240], "bash_bench_explicit": [9, 88, 240], "bash_bench_huggingfac": [9, 88, 240], "bash_bench_huggingface_big": [9, 88, 240], "bash_bench_issu": [9, 88, 240], "bash_bench_main": 59, "bash_bench_parse_arg": 59, "bash_bench_timm": [9, 88, 240], "bash_bench_torchbench": [9, 88, 240], "bash_bench_torchbench_ado": [9, 88, 240], "bash_bench_untrain": [9, 88, 240], "bash_benchmark": 57, "basic": [247, 261], "batch": [10, 19, 71, 95, 111, 122, 123, 184, 188, 193, 194, 195, 209, 214, 215, 217, 219, 220, 222, 223, 227, 229, 230, 235, 236, 237, 238, 240, 247, 257, 263, 268], "batch1": 95, "batch2": 95, "batch_channel": 267, "batch_norm": [9, 95, 188], "batch_norm_backward": 93, "batch_siz": [19, 122, 123, 204, 209, 214, 219, 220, 222, 230, 236, 238], "batchnorm": [144, 154], "batchnormalizationpattern": [142, 144, 154, 228, 249, 261], "batchnormalizationtrain": 144, "batchnormalizationtrainingpattern": [142, 144, 154, 228, 249, 261], "batchx12": 268, "batchx2x8x8": 268, "batchx3": 268, "batchx4": 268, "batchxseq_length": 268, "bbaz": 228, "bbyi": 196, "bcaa": [196, 197], "bdcv": 197, "becam": 142, "becaus": [93, 144, 158, 202, 210, 215, 219, 221, 229, 230, 231, 232, 237, 238], "becom": [21, 105, 218, 230], "befor": [6, 9, 19, 55, 56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 92, 93, 109, 111, 115, 116, 127, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 196, 207, 209, 210, 212, 215, 219, 229, 230, 236, 237, 238, 239, 240, 247, 249, 258, 261, 271], "begin": [56, 93, 115, 139, 194, 203, 205, 207, 253], "behav": [93, 135], "behavior": [60, 219], "behaviour": [206, 228, 271], "being": [135, 210], "belong": 135, "below": [12, 57, 58, 93, 135, 137, 142, 247, 261], "bench1": 240, "bench2": 240, "bench_run": [9, 16, 194, 195], "benchark": 240, "benchmark": [56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 195, 240, 245, 271], "benchmarkerror": [4, 195], "benchmarkrunn": [56, 240], "bernoulli": 93, "bertformaskedlm": 240, "bertforquestionansw": 240, "besid": [194, 247], "bessel_j0": 93, "bessel_j1": 93, "best": [209, 236, 247, 249], "beta": [12, 95, 204, 207, 236, 247, 267, 268], "better": [9, 15, 115, 116, 142, 144, 155, 194, 195, 197, 240, 247], "between": [17, 57, 108, 110, 142, 210, 268, 270], "beyond": [9, 144, 146, 158], "bfloat16": [214, 219, 220, 267, 268, 269, 270], "bgi": 268, "bhzx": 196, "bia": [95, 128, 144, 149, 154, 204, 206, 207, 208, 209, 214, 224, 228, 232, 236, 238, 247, 249, 257, 267, 268, 269, 270], "bias2": [228, 247], "biasgelu": [181, 188], "biasgelupattern": [181, 188, 228, 261], "biassoftmax": [26, 181, 188], "biassoftmaxpattern": [181, 188, 228, 261], "big": [18, 20, 109, 135, 138, 142, 192, 193, 202, 206, 210, 211, 219, 228, 249, 258, 260], "big_model": 9, "bigger": [18, 228, 240, 253], "bilinear": [93, 95, 267, 268, 269, 270], "bin": [240, 264], "binari": [12, 139, 144, 146, 158], "binary_cross_entropi": 93, "binary_cross_entropy_backward": 93, "binary_cross_entropy_with_logit": 93, "binary_oper": [9, 170], "binaryinvestig": [176, 177], "bind": 253, "bit": [203, 205, 207], "bitshift": 130, "bitwis": 95, "bitwise_and": [93, 269], "bitwise_and_": 93, "bitwise_left_shift": 93, "bitwise_left_shift_": 93, "bitwise_not": [93, 95], "bitwise_not_": 93, "bitwise_or": [93, 95], "bitwise_or_": [93, 214, 219], "bitwise_or__tensor": 95, "bitwise_or_tensor": 95, "bitwise_right_shift": 93, "bitwise_right_shift_": 93, "bitwise_xor": 93, "bitwise_xor_": 93, "bkaa": 255, "black": 264, "black_list_funct": 115, "blenderbotforcausallm": 240, "blenderbotforconditionalgener": 240, "blenderbotsmallforcausallm": 240, "blenderbotsmallforconditionalgener": 240, "blob": [95, 121, 214, 219, 220, 230, 238], "block": 188, "block_diag": 93, "blur": 193, "bmm": [95, 196], "bmm_1": 196, "bmm_2": [196, 200], "bmm_3": 200, "bmm_4": 200, "bmm_5": 200, "bmvk": 228, "bn_node": 184, "bnkb": 196, "bodi": [231, 267, 268], "boi2xurpqa0o": [214, 232], "bool": [4, 6, 9, 15, 17, 18, 21, 51, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 92, 93, 94, 95, 96, 97, 101, 105, 106, 109, 110, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 153, 155, 166, 167, 170, 173, 181, 191, 193, 196, 197, 199, 202, 210, 213, 219, 222, 228, 232, 247, 249, 265, 267, 268, 269, 270, 271], "boolean": [115, 135, 142, 195, 247], "bos_token_id": [214, 219, 220, 222, 230, 238], "both": [56, 60, 95, 111, 116, 119, 131, 135, 142, 195, 196, 247, 261], "bound": 26, "boundari": [10, 60, 95, 115, 123, 135, 143, 156], "box": [203, 204, 241], "bqu": 247, "bracket": 110, "branch": [115, 265], "break": [191, 194, 195, 210, 219, 224, 232, 267, 268, 269, 270], "bridg": 114, "bring": 193, "broadcast": [93, 101, 135, 139, 142, 144, 152, 156, 167, 170, 220], "broadcast_dimens": 101, "broadcast_shap": 139, "broadcast_tensor": [93, 95], "broadcastgradientarg": 14, "broadcasttyp": 156, "broken": [57, 210], "bucket": [57, 93], "buff": [267, 268, 269, 270], "buffer": [206, 214], "bug": [135, 137, 210, 267, 268, 269, 270], "buic": 228, "build": [10, 15, 18, 58, 92, 93, 115, 119, 135, 138, 142, 153, 166, 177, 178, 181, 192, 193, 196, 212, 241, 242, 247, 249, 264, 271], "build_c_schema": 115, "build_dir": 264, "build_ext": 264, "build_graph_for_pattern": [200, 228, 249], "build_historical_report": 58, "build_matching_input": [119, 196], "build_model": 138, "build_shape_mapping_indic": 115, "build_shared_lib": 264, "build_wheel": 264, "builder": [18, 55, 93, 105, 109, 110, 113, 114, 115, 128, 134, 135, 142, 143, 183, 193, 203, 210, 216, 247, 262], "builder_emitt": 138, "builderemitt": 138, "buildinisinst": [106, 107], "buildinlen": [106, 107], "built": [93, 110, 117, 193, 203, 207, 242, 247, 249, 267, 268, 271], "builtin": [203, 207, 219, 242, 269, 270], "builtin_dispatch": 203, "builtinvari": 271, "bupd": 255, "busi": 271, "bvmj": 255, "bxw": [], "bypass": [98, 109, 115, 139, 210, 217, 240, 271], "bypass_export_some_error": [], "byte": 135, "bytecode_transform": 210, "byteord": 18, "bzyz": 228, "c": [93, 95, 115, 116, 142, 144, 155, 156, 167, 170, 193, 195, 200, 202, 206, 213, 219, 220, 224, 228, 232, 247, 249, 252, 265, 267, 268, 269, 270], "c04": 153, "c05": 181, "c1": [178, 198], "c10d_function": 93, "c2": [153, 178, 198], "c3": 153, "c_bia": [267, 268], "c_lifted_tensor_0": [267, 268], "c_model_rotary_emb_lifted_tensor_0": 214, "c_param": 267, "c_torchknnimputer_columns_0_": 210, "c_torchknnimputer_columns_0___calc_imput": 210, "c_torchknnimputer_columns_0___calc_impute__donors_idx": 210, "c_torchknnimputer_columns_0___calc_impute__make_new_neight": 210, "c_torchknnimputer_columns_0___calc_impute__weight": 210, "c_torchknnimputer_columns_0___col_cond": 210, "c_torchknnimputer_dist": 210, "ca": 228, "caaa": [196, 197], "cach": [60, 122, 123, 135, 214, 217, 219, 220, 223, 230, 238, 247, 271], "cache2": [214, 219, 220, 230, 238], "cache_en": 95, "cache_help": [214, 219, 220, 223, 230, 238], "cache_kwarg": [214, 217], "cache_last_dim": [123, 222], "cache_length": [222, 230, 238], "cache_posit": [214, 219], "cache_util": [62, 217, 222, 223, 230, 238], "calcimput": 210, "calcul": 210, "call": [3, 4, 6, 9, 10, 15, 17, 21, 60, 62, 71, 73, 94, 95, 105, 107, 109, 110, 113, 115, 116, 117, 127, 135, 139, 142, 193, 195, 197, 203, 206, 207, 208, 210, 216, 219, 221, 224, 228, 230, 231, 232, 238, 247, 248, 253, 265, 266, 267, 268, 269, 270, 271], "call_func_at_runtime_with_arg": 242, "call_funct": [110, 111, 117, 203, 206, 207, 208, 210, 215, 218, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 247, 267, 268, 269, 270, 271], "call_function_ex": 210, "call_getattr": 203, "call_method": [110, 196, 247, 267, 268, 269, 270], "call_model": [203, 205], "call_modul": [110, 206, 208, 210, 219, 228, 247, 267, 268, 269, 270], "call_on_ent": 242, "call_self_handl": 203, "callabl": [4, 9, 15, 21, 60, 61, 87, 92, 93, 94, 105, 109, 110, 113, 115, 117, 127, 139, 142], "calle": [199, 234, 236, 238], "can": [10, 12, 15, 17, 18, 20, 57, 58, 60, 71, 93, 94, 105, 109, 111, 113, 115, 117, 123, 131, 135, 136, 137, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 204, 207, 208, 210, 212, 213, 215, 216, 219, 221, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 246, 247, 248, 249, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271], "can_cast": 93, "can_fus": 167, "can_set": 110, "candid": 57, "cannot": [113, 115, 117, 135, 140, 142, 206, 210, 215, 219, 221, 224, 231, 232, 247, 249, 267, 268, 269, 270], "cap": 264, "capability_as_str": 4, "capabl": [57, 195, 205, 240, 271], "capi": 242, "captur": [9, 206, 210, 247, 266, 267, 268, 269, 270], "care": [60, 62, 107], "carri": [107, 221, 231, 267, 268, 269, 270], "carry1": [107, 267, 268, 269, 270], "carry1_1": [267, 268, 269, 270], "carry2": [107, 267, 268, 269, 270], "carry2_1": [267, 268, 269, 270], "carry_1": [267, 268, 269, 270], "case": [10, 57, 60, 92, 93, 106, 115, 117, 130, 135, 139, 142, 156, 210, 212, 218, 219, 228, 239, 240, 247, 249, 258, 267, 268, 269, 270, 271], "case_ref": [267, 268, 269, 270], "cast": [95, 97, 101, 130, 135, 137, 139, 142, 144, 145, 146, 150, 154, 170, 172, 195, 198, 199, 200, 206, 230, 238, 249, 267, 268], "cast2_nod": 157, "cast_0": 267, "cast_1_output_0": 267, "cast_aft": 154, "cast_befor": 154, "cast_in_left": 146, "cast_in_right": 146, "cast_nod": [157, 173], "cast_node_aft": 172, "cast_node_befor": 172, "cast_out_nod": 146, "cast_output_0": 267, "castcastbinari": 144, "castcastbinarypattern": [92, 142, 144, 146, 228, 249, 261], "castlayernormalizationcast": 144, "castlayernormalizationcastpattern": [142, 144, 154, 228, 249, 261], "castlik": [95, 130, 247, 267, 268], "castlike_15": [26, 30], "castlike_19": [26, 30], "castopcast": 144, "castopcastpattern": [142, 144, 146, 228, 249, 261], "castpattern": [144, 146, 200, 228, 249, 261], "cat": [93, 95, 113, 117, 196, 201, 210, 214, 215, 217, 218, 223, 227, 228, 229, 230, 235, 237, 238, 257, 267, 268, 269, 270], "cat10": 230, "cat11": 230, "cat12": 230, "cat13": 230, "cat2": 230, "cat3": [196, 230], "cat4": 230, "cat5": 230, "cat6": 230, "cat7": 230, "cat8": 230, "cat9": 230, "cat_1": [196, 197, 214, 217, 223, 230, 238, 257], "cat_10": [214, 230, 238], "cat_11": [214, 230, 238], "cat_12": [214, 230, 238], "cat_2": [214, 230, 238, 257], "cat_3": [214, 230, 238, 257], "cat_4": [214, 230, 238], "cat_5": [214, 230, 238, 257], "cat_6": [214, 230, 238, 257], "cat_7": [214, 230, 238, 257], "cat_8": [214, 230, 238], "cat_9": [214, 230, 238], "cat_token_5": 196, "catch": [9, 56, 106, 115], "catch_warn": [196, 197, 203, 205, 207, 210, 253], "cauchi": 93, "cauchy_": 93, "caus": [217, 219, 224, 232, 253, 267, 268, 269, 270], "causal_mask": [214, 219], "causallmoutputwithpast": [219, 222, 230, 238], "cbkk": 197, "cc": [267, 268], "cce": [], "ccfy": 196, "ccol_row_valu": 93, "ccol_row_value_s": 93, "cd": 264, "cdca": 228, "cdist": [93, 221, 231], "cehd": 197, "cei": [], "ceil": [93, 95, 130], "ceil_": 93, "ceil_mod": [95, 207], "celu": [93, 130, 247], "celu_": 93, "celu_default": 247, "center": [93, 203, 205, 207], "cerberu": 264, "cf": 195, "chain_matmul": 93, "chalf": 93, "chang": [4, 56, 60, 105, 109, 113, 115, 130, 135, 136, 142, 143, 144, 146, 152, 206, 212, 216, 217, 218, 221, 224, 229, 231, 237, 242, 247, 249, 251, 263, 271], "channel": [193, 207, 230], "channel_shuffl": 93, "channels_last": 207, "char": [9, 251], "charg": 252, "check": [3, 4, 8, 9, 16, 56, 60, 93, 95, 113, 115, 119, 120, 130, 131, 135, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 195, 196, 203, 205, 207, 209, 210, 212, 214, 217, 218, 220, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 238, 239, 240, 249, 253, 258, 263, 264, 265, 270, 271], "check_a": [200, 249], "check_b": [200, 249], "check_c": [200, 249], "check_conversion_cl": [111, 115, 210], "check_cuda_avail": [3, 195], "check_current_backend": 242, "check_da": [200, 249], "check_db": [200, 249], "check_ea": [200, 249], "check_eb": [200, 249], "check_empty_sourc": 135, "check_f": [200, 249], "check_g": [200, 249], "check_model": [9, 21, 88], "check_model_ort": 128, "check_obj_id": 242, "check_pattern_00": [200, 228, 249], "check_pattern_a0": [228, 249], "check_pattern_b0": [200, 228, 249], "check_shap": 139, "check_token": 135, "check_type_id": 242, "checkcach": [203, 207], "checker": 21, "child": [115, 210], "childc": 115, "children": 115, "chip": 194, "choos": [116, 128, 130, 135, 139, 218, 228], "choose_consistent_domain_opset": 130, "choose_kwargs_for_dynamic_shap": 116, "choose_qparams_optim": 93, "chosen": [121, 124, 125, 126, 264], "chronos_model_help": 9, "chunk": [95, 210, 214], "chunk_1": 214, "ci_build": 264, "cikk": [196, 255], "cikm": [196, 255], "cipd": 197, "cjmj": 196, "cjyf": [196, 197, 255], "ckim": [196, 255], "cksa": [196, 255], "ckya": 196, "ckza": 197, "ckzm": [196, 197], "cl": [10, 21, 111, 117, 197, 210, 228, 249, 269, 270], "claim": 252, "clamp": [93, 95, 269], "clamp_": 93, "clamp_1": 269, "clamp_max": [93, 95, 267, 268, 269, 270], "clamp_max_": 93, "clamp_min": [93, 95, 267, 268, 269, 270], "clamp_min_": 93, "clamp_tensor": 95, "class": [9, 10, 14, 15, 17, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 87, 92, 93, 94, 95, 98, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 132, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 247, 248, 249, 253, 265, 266, 267, 268, 269, 270, 271], "classic": 247, "classif": 12, "classmethod": [9, 56, 60, 92, 117, 153, 249], "clean": [119, 130, 196, 249], "clean_nam": 197, "clean_pattern": 195, "clean_shap": 130, "clean_text": [203, 207], "clear": [244, 264], "clength": [217, 223], "clip": [93, 95, 130, 144, 147, 210, 267], "clip_1": 240, "clip_2": 240, "clipclip": 144, "clipclippattern": [142, 144, 147, 228, 249, 261], "clone": [93, 95, 113, 116, 117, 192, 207, 210, 212, 214, 219, 221, 230, 231, 264, 267, 268, 269, 270], "clone_1": [267, 268, 269, 270], "closer": [194, 207], "clr": [209, 236], "cls_model": [106, 267, 268, 269, 270], "cls_name": 128, "cma": 200, "cmake": 264, "cmake_extra_defin": 264, "cmd": [195, 259], "cmp_op": 139, "co": [9, 93, 95, 97, 101, 113, 130, 144, 155, 189, 196, 214, 219, 220, 230, 238, 257, 267, 268, 269, 270], "coad": 228, "code": [17, 96, 109, 115, 116, 117, 121, 135, 138, 142, 159, 183, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 253, 265, 267, 268, 269, 270, 271], "code_opt": 210, "codellama": 76, "coef_": [209, 236], "coeffici": [12, 193, 209, 215, 236], "col": 210, "col2im": [93, 95], "col_mask": 210, "col_processor": 210, "col_sum": 210, "colimn": 57, "coll": 242, "collect": [203, 205, 207, 240, 242, 248, 271], "coloredlog": 264, "colprocessor": 210, "colprocessorallnan": 210, "colprocessorcond": 210, "colprocessorident": 210, "column": [12, 57, 195, 200, 201, 203, 205, 207, 210, 213, 240, 249, 267, 268, 269, 270], "column1": [57, 58], "column2": [57, 58], "column_kei": 57, "column_s": [196, 197], "column_stack": 93, "com": [79, 80, 95, 108, 121, 170, 171, 174, 175, 181, 183, 187, 188, 192, 203, 204, 207, 212, 214, 219, 220, 222, 224, 228, 232, 241, 264, 267, 268, 269, 270], "combin": [93, 115], "combine_fn": [221, 231], "combined_arg": 253, "come": [57, 77, 105, 109, 111, 113, 116, 135, 142, 153, 156, 181, 225, 226, 228, 240, 247, 249, 255, 271], "comma": [3, 4, 58, 71, 92, 93, 127, 135, 137, 142, 195], "command": [4, 59, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 142, 195, 240, 251, 260, 261], "comment": 228, "commit": 264, "common": [15, 93, 111, 135, 137, 196, 203, 204, 242, 247, 249, 250, 267, 268], "common_dynamic_shap": [122, 123, 222], "common_export": 87, "compar": [57, 92, 93, 119, 130, 142, 193, 194, 199, 201, 203, 204, 205, 207, 210, 211, 249, 250, 255, 258, 271], "compare_onnx_execut": [196, 197, 228], "comparison": [57, 130, 195], "compat": [117, 130, 131, 267, 268], "compatible_dimens": 131, "compatible_opset": 130, "compatible_shap": 131, "compil": [71, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 115, 194, 196, 204, 206, 207, 210, 222, 241, 242, 264, 267, 268, 269, 270, 271], "compile_inn": 210, "compile_util": 203, "compiled_model": [92, 93, 194, 204], "compiledfunctionbackward": 204, "compiler_ir": [95, 96], "complet": [192, 247, 267, 268, 269, 270], "complex": [93, 119, 128, 212], "complex64": [267, 268], "complexmodul": [26, 31], "complexpolar": [106, 107], "compon": [228, 234, 253, 267, 268], "compos": 115, "comprison": 9, "comput": [9, 10, 12, 57, 60, 62, 107, 115, 135, 139, 142, 143, 144, 146, 192, 193, 195, 196, 197, 203, 204, 205, 207, 209, 210, 228, 236, 247, 248, 249], "computationcastopcast": 144, "computationcastopcastpattern": [142, 144, 146, 228, 249, 261], "compute_const": [135, 200, 207, 230], "compute_log_sumexp": 96, "compute_onnx_discrep": 115, "compute_weight_s": [60, 87], "computed_valu": 135, "concat": [26, 32, 93, 95, 101, 135, 137, 144, 162, 177, 178, 179, 180, 196, 197, 198, 200, 227, 228, 230, 238, 249, 255, 257, 267, 268], "concat_1": [255, 267], "concat_1_output_0": [197, 267], "concat_2": 267, "concat_408": 196, "concat_536": 196, "concat_nod": [162, 171, 180, 189], "concat_output_0": [197, 255, 267], "concatbas": [267, 268], "concaten": [57, 93, 135, 193, 247, 267, 268], "concatfromsequ": [267, 268], "concret": 117, "concrete_arg": [117, 210, 219], "cond": [95, 115, 117, 210, 224, 227, 232, 235, 265, 267, 268, 269, 270], "cond_fake_tensor_mod": 210, "cond_in": [267, 268], "cond_op": [210, 268, 270], "cond_out": [267, 268], "condcc": [267, 268, 269, 270], "condccop": 117, "condit": [95, 101, 117, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 240, 249, 252, 267, 268, 269, 270], "conf": [203, 205, 207, 214, 219, 220, 222, 230, 238], "config": [4, 71, 83, 86, 118, 120, 122, 194, 195, 214, 219, 220, 222, 230, 238, 241, 242, 244, 257, 264], "config_": 57, "config_backend": 195, "config_config": 195, "config_devic": 195, "config_dict": 71, "config_disable_pattern": 195, "config_dynam": 195, "config_enable_pattern": 195, "config_implement": 195, "config_mix": 195, "config_model": 195, "config_num_hidden_lay": 195, "config_ord": 195, "config_ort_optim": 195, "config_repeat": 195, "config_shape_scenario": 195, "config_verbos": 195, "config_warmup": 195, "config_with_mask": 195, "configur": [4, 60, 71, 118, 121, 122, 124, 125, 126, 194, 195, 214, 219, 220, 222, 230, 238, 264, 271], "configuration_phi3": [214, 219, 220], "configuration_phi3_v": 9, "confus": [135, 231], "conj_phys": [93, 95], "conj_physical_": 93, "connect": 252, "consecut": [144, 147, 161, 164], "consid": [3, 12, 56, 57, 109, 115, 118, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 195, 206, 209, 218, 219, 236, 247, 249], "consist": [268, 270], "const": [267, 268], "const_transpose_optimizer_token_": 197, "consta": 197, "constant": [9, 10, 15, 55, 95, 109, 115, 117, 135, 137, 142, 144, 148, 155, 163, 170, 199, 200, 204, 207, 208, 212, 214, 221, 224, 228, 230, 231, 232, 238, 239, 247, 248, 258, 261, 267, 268, 269, 270, 271], "constant_10_output_0": 267, "constant_11_output_0": 267, "constant_12_output_0": 267, "constant_13_output_0": [197, 267], "constant_14_output_0": [197, 267], "constant_15_output_0": 267, "constant_16_output_0": 267, "constant_17_output_0": 267, "constant_18_output_0": 267, "constant_19_output_0": [197, 267], "constant_1_output_0": [255, 267, 268], "constant_20_output_0": 267, "constant_21_output_0": 267, "constant_2_output_0": [267, 268], "constant_3_output_0": [267, 268], "constant_4_output_0": [267, 268], "constant_5_output_0": 267, "constant_6_output_0": 267, "constant_7_output_0": 267, "constant_8_output_0": 267, "constant_9_output_0": 267, "constant_fold": [135, 137, 194, 197, 207, 208, 209, 224, 228, 247, 249, 257, 267, 268], "constant_fus": [135, 137], "constant_of_shape_scatter_nd": [9, 170], "constant_output_0": [255, 267, 268], "constant_pad_nd": [93, 95], "constant_s": [135, 137], "constant_tensor": [214, 268], "constantinteg": 265, "constantofshap": [26, 33, 95, 101, 135, 137, 138, 168, 170, 171, 174, 175, 187, 200, 226, 227, 230, 267, 268], "constantofshape_1_output_0": 267, "constantofshape_output_0": 267, "constantofshapescatternd": 170, "constantofshapescatterndpattern": [168, 170, 261], "constants_": [135, 247], "constants_alias_": 135, "constants_computed_": [135, 247], "constants_node_": 135, "constanttoinitializerpattern": 148, "constantvari": [267, 268, 269, 271], "constraint": [15, 135, 139, 142, 212, 214, 216, 217, 221, 227, 229, 230, 231, 235, 237, 238, 239, 247, 249, 258, 268, 271], "constraints_": 135, "constructor": 135, "consum": [20, 117, 142, 186, 188, 249, 259], "consumpt": [203, 205, 207], "contain": [3, 9, 56, 57, 71, 109, 111, 115, 116, 123, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 209, 224, 226, 228, 232, 236, 249, 271], "content": [109, 135], "context": [9, 119, 132, 135, 142, 210, 217, 267, 268, 269, 270], "context_s": [9, 203, 205, 207, 228], "contextlib": [197, 203, 205, 207, 210, 214], "contigu": [95, 108, 113, 194, 210, 214, 230, 242, 257], "contiguous_1": [214, 230], "continu": [4, 193, 195, 203, 205, 206, 207, 210, 217, 222], "contract": 252, "contrib": 26, "contribut": 228, "control": [109, 117, 210, 219, 221, 224, 231, 232, 247, 271], "control_flow": [9, 57], "controlflowcond": [106, 107], "controlflowcond2input": [106, 107], "controlflowcond2output": [106, 107], "controlflowcondconst": [106, 107], "controlflowcondnestedmodul": [106, 107], "controlflowcondnonzero": [106, 107], "controlflownestcond": [106, 107], "controlflowscan": [106, 107], "controlflowscan2carri": [106, 107], "controlflowscancdist": [106, 107], "controlflowscancdist2": [106, 107], "controlflowscancdistxi": [106, 107], "conv": [95, 144, 149, 185, 188, 207], "conv1": [203, 205, 207], "conv1d": [93, 95], "conv1d_unpack": 93, "conv2": [203, 205, 207], "conv2d": [93, 95, 193, 203, 205, 207], "conv2d_1": 207, "conv2d_dil": 93, "conv2d_group": 93, "conv2d_output_pad": 93, "conv2d_pad": [93, 95], "conv2d_strid": 93, "conv2d_transpos": 93, "conv2d_unpack": 93, "conv2d_unpack_s": 93, "conv3d": [93, 95], "conv3d_dil": 93, "conv3d_group": 93, "conv3d_output_pad": 93, "conv3d_pad": 93, "conv3d_strid": 93, "conv3d_transpos": 93, "conv3d_unpack": 93, "conv_tbc_backward": 93, "conv_transpose1d": 93, "conv_transpose1d_unpack": 93, "conv_transpose2d": [93, 95, 193], "conv_transpose2d_dil": 93, "conv_transpose2d_group": 93, "conv_transpose2d_input": 95, "conv_transpose2d_output_pad": 93, "conv_transpose2d_pad": 93, "conv_transpose2d_strid": 93, "conv_transpose2d_transpos": 93, "conv_transpose2d_unpack": 93, "conv_transpose3d": [93, 95], "conv_transpose3d_dil": 93, "conv_transpose3d_group": 93, "conv_transpose3d_input": 95, "conv_transpose3d_output_pad": 93, "conv_transpose3d_pad": 93, "conv_transpose3d_strid": 93, "conv_transpose3d_transpos": 93, "conv_transpose3d_unpack": 93, "conv_unpack": 93, "convbiasnul": 144, "convbiasnullpattern": [142, 144, 149, 228, 249, 261], "conveni": 271, "convent": [209, 236], "converg": [209, 236], "convergencewarn": [209, 236], "convers": [18, 92, 93, 115, 127, 135, 136, 142, 200, 210, 212, 222, 225, 226, 233, 234, 247, 266, 267, 268, 271], "conversionerror": [234, 237, 267, 268], "convert": [9, 15, 16, 18, 55, 60, 71, 105, 109, 110, 112, 113, 115, 116, 117, 135, 138, 166, 194, 196, 197, 199, 203, 204, 205, 207, 208, 209, 210, 212, 219, 225, 226, 228, 229, 233, 234, 236, 237, 238, 240, 248, 249, 251, 266, 267, 268, 271], "convert_element_type_default": [238, 267, 268], "convert_element_type_default_1": 238, "convert_element_type_default_2": [267, 268], "convert_element_type_default_3": [267, 268], "convert_endian": 15, "convert_fram": 210, "convert_help": [7, 9, 196, 197, 207], "convert_into_initi": 135, "convert_vers": 247, "convet": 128, "convolut": [95, 192, 198, 199, 209, 210, 211, 258, 271], "convolv": 193, "coordinate_transformation_mod": [267, 268], "cope": 216, "copi": [60, 95, 102, 115, 135, 136, 193, 196, 203, 204, 207, 210, 230, 238, 247, 252, 267, 268, 269, 270, 271], "copy_": [117, 214, 219, 221, 231, 269, 270], "copy__1": [221, 231], "copy__2": [221, 231], "copy__default": [269, 270], "copyright": 252, "copysign": 93, "copysign_": 93, "core": [194, 203, 205, 207, 267, 268], "corner": 271, "corrcoef": 93, "correct": [57, 93, 95, 135, 137], "correction_nam": 93, "correction_names_out": 93, "correction_out": 93, "correl": 57, "correspind": 15, "correspond": [9, 15, 117, 218, 261], "cos2": [267, 268], "cos_": 93, "cos_false_graph_0": [267, 268], "cos_token_12": 196, "cos_true_graph_0": [267, 268], "cos_true_graph_0__false_graph_0": [267, 268], "cosh": [93, 95, 130, 144, 155], "cosh_": 93, "cosine_embedding_loss": 93, "cosine_similar": 93, "cost": [249, 265], "coudl": 228, "could": [26, 131, 135, 193, 204, 215, 218, 219, 220, 224, 226, 229, 232, 237, 247, 265, 267, 268, 269, 270], "count_include_pad": 95, "count_nonzero": 93, "counter": 135, "coupl": [192, 199, 204, 212, 230, 238, 240, 271], "cov": [93, 264], "coverag": 213, "cpcz": 196, "cpi": 153, "cpmb": 196, "cpp": 219, "cprc": 197, "cprofil": [203, 207], "cpu": [6, 18, 19, 21, 57, 71, 92, 93, 122, 123, 127, 128, 135, 137, 142, 194, 195, 196, 197, 201, 203, 204, 205, 209, 214, 217, 218, 219, 221, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 240, 261, 263, 267, 268, 269, 270, 271], "cpu_count": [203, 205, 207], "cpu_sess": 21, "cpuep": 201, "cpuexecutionprovid": [21, 193, 196, 197, 201, 204, 207, 209, 210, 228, 236, 240], "cpython": 264, "crash": 21, "creat": [4, 9, 10, 18, 19, 20, 60, 61, 71, 92, 93, 95, 106, 109, 114, 115, 117, 119, 123, 127, 128, 135, 137, 142, 166, 169, 170, 194, 196, 204, 210, 217, 219, 220, 222, 224, 225, 226, 232, 234, 247, 249, 253, 264, 267, 268, 269, 270, 271], "create_arg": [117, 207, 210, 219], "create_args_for_root": 207, "create_compiled_model": 71, "create_configuration_for_benchmark": 71, "create_fe": 19, "create_graph": 138, "create_input_tensors_from_onnx_model": 18, "create_model": 71, "create_model_and_input": [203, 205, 207], "create_nam": 207, "create_nod": [203, 207], "create_onnx_friendly_decomposition_t": [93, 203, 207], "create_onnx_model_from_input_tensor": 18, "create_proxi": [203, 207], "create_random_input": 201, "create_sess": 201, "create_tensor": 19, "createfromshap": [106, 107], "createfromshapethroughfunct": [106, 107], "creation": [135, 144, 163, 248], "critic": 210, "crop": [230, 238, 268], "croplastdimensionwithtensorcont": [106, 107], "croplastdimensionwithtensorshap": [106, 107], "cross": 93, "cross_entropy_loss": 95, "crow_col_valu": 93, "crow_col_value_s": 93, "crw": [], "cspe": 196, "csrc": 219, "cst": [111, 135, 138, 193, 200, 249], "cst2": [181, 200], "cst_node": 169, "csv": [57, 73, 195, 200, 201, 203, 205, 207, 213, 240], "ct": 193, "ct1s1x3x96": 219, "ct1s1x4x96": 219, "ct1s2x1x3x33": 219, "ct1s2x32x30x96": 219, "ct1s2x32x33x96": 219, "ct1s2x3x16384": 219, "ct1s2x3x3072": 219, "ct1s2x3x32064": 219, "ct1s2x3x8192": 219, "ct1s2x3x9216": 219, "ct1s3x1x4x35": 219, "ct1s3x32x31x96": 219, "ct1s3x32x35x96": 219, "ct1s3x4x16384": 219, "ct1s3x4x3072": 219, "ct1s3x4x32064": 219, "ct1s3x4x8192": 219, "ct1s3x4x9216": 219, "ct1s5x6": 216, "ct1s6x6": 216, "ct7s1x3": 219, "ct7s1x4": 219, "ct7s2x3": 219, "ct7s2x33": 219, "ct7s3": 219, "ct7s3x35": 219, "ct7s3x4": 219, "ct7s4": 219, "ctc_loss": 93, "cu118": [240, 241, 242], "cu12": 264, "cu124": 264, "cu126": [195, 230, 232, 233, 238, 251], "cubic_coeff_a": [267, 268], "cubla": 264, "cuda": [3, 6, 9, 17, 21, 57, 83, 84, 85, 86, 96, 128, 135, 194, 195, 196, 197, 202, 203, 204, 205, 241, 242, 244, 261, 263, 264, 271], "cuda120": 264, "cuda_capa": [203, 205, 207], "cuda_count": [203, 205, 207], "cuda_hom": 264, "cuda_nam": [203, 205, 207], "cuda_vers": 264, "cudacxx": 264, "cudaexecutionprovid": [196, 197, 203, 205, 207], "cudagetdevicecount": 265, "cudnn": 264, "cudnn_batch_norm": [93, 95], "cudnn_batch_norm_backward": 93, "cudnn_en": 95, "cudnn_hom": 264, "cudnn_is_accept": 93, "cufft": 264, "cuinit": 265, "cummax": 93, "cummaxmin_backward": 93, "cummin": 93, "cumprod": 93, "cumprod_": 93, "cumprod_backward": 93, "cumsum": [93, 95], "cumsum_": 93, "cumtim": [203, 207], "cumul": [203, 207], "cumulative_trapezoid": 93, "cupti": 264, "curand": 264, "current": [17, 130, 136, 142, 228, 247, 265], "current_devic": 242, "current_loss": 204, "current_priority_index": [92, 93, 200, 202, 228, 249], "currentfram": [138, 142, 198, 249], "cus_p0": 207, "cusolv": 264, "cuspars": 264, "custom": [8, 26, 57, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 92, 93, 106, 109, 115, 116, 117, 135, 137, 138, 192, 193, 195, 196, 197, 200, 206, 207, 209, 210, 211, 212, 213, 215, 221, 224, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 254, 258, 264, 265, 266, 271], "custom0": 207, "custom2": 207, "custom__1": 200, "custom_custom_backend": 194, "custom_def": [225, 233], "custom_op": [226, 234], "custom_op_nam": 115, "custom_translation_t": [233, 234], "customattribut": 117, "custombuilderemitt": 138, "customop": 115, "customopdef": [225, 233], "customoperatorsupport": 94, "customopstrategi": [115, 210], "customparameterproxi": 117, "customproxi": [117, 267, 268, 269, 270], "customproxyfloat": 117, "customproxyint": 117, "customtrac": 117, "cvt": 142, "cyaa": 228, "cython": 264, "d": [95, 131, 135, 144, 155, 193, 194, 195, 210, 214, 216, 217, 219, 220, 221, 224, 231, 232, 267, 268, 269, 270], "d1": 210, "d2": [131, 210], "d_output_0": [267, 268], "d_output_0_0": [267, 268], "d_output_1": [267, 268], "d_output_1_0": [267, 268], "d_output_2": [267, 268], "d_output_3": [267, 268], "daaa": [196, 197, 255], "dai": 57, "dali": 264, "damag": 252, "data": [4, 9, 15, 23, 57, 58, 84, 92, 93, 122, 192, 193, 194, 195, 200, 201, 203, 204, 205, 207, 210, 214, 219, 220, 222, 224, 230, 232, 238, 240, 249, 257, 264, 267, 268, 269, 270], "data1": 207, "data_collect": 195, "data_mem_first_run": [203, 205, 207], "data_mem_load": 207, "data_mem_run": [203, 205, 207], "data_ptr": 242, "data_s": 193, "data_typ": 15, "datafram": [4, 57, 111, 194, 195, 200, 203, 205, 207, 213, 249, 267, 268, 269, 270], "dataload": [204, 209, 236], "dataset": [204, 209, 236], "date": [57, 195, 248], "date_start": [57, 240], "dbwg": 196, "dc": [62, 196, 197, 217, 223, 228], "dc_key_cache_0": [217, 223], "dc_value_cache_0": [217, 223], "dd": 131, "ddvv": 197, "de": 228, "deal": [117, 144, 158, 196, 249, 252, 271], "debbug": [55, 93, 109, 115], "debug": [51, 56, 71, 109, 115, 135, 142, 196, 206, 219, 220, 224, 232, 234, 249, 253, 267, 268, 269, 270], "debug_backend": [9, 93], "debug_info": 56, "debug_str": 142, "dec": 213, "decal": [106, 266], "decid": [55, 109, 115, 135, 228], "decim": 93, "decimals_out": 93, "decis": 247, "declar": [135, 206, 247], "decod": [128, 222, 228], "decode_gif": 93, "decode_imag": 93, "decode_jpeg": 93, "decode_jpegs_cuda": 93, "decode_png": 93, "decode_webp": 93, "decoderlay": [128, 228], "decomp_util": [203, 207], "decompisit": 109, "decompos": [93, 144, 153, 181, 188, 204, 267, 268], "decomposit": [93, 94, 95, 109, 196, 203, 204, 210, 232, 233, 234, 235, 236, 237, 238, 253, 266, 267, 268, 269, 270, 271], "decomposition_t": [93, 109, 203, 204, 226, 231, 257, 267, 268], "deconstruct": 9, "decor": [60, 247], "decorate_context": [214, 219], "dedent": [203, 207, 267, 268, 269, 270], "dedic": 247, "dee": 93, "deep": [15, 193], "deepcopi": [196, 203, 204, 230, 238], "deeper": 192, "def": [15, 60, 92, 93, 109, 111, 112, 122, 138, 191, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 253, 257, 265, 267, 268, 269, 270], "default": [3, 9, 10, 12, 15, 18, 26, 56, 57, 60, 71, 83, 92, 93, 109, 111, 113, 115, 117, 127, 135, 137, 142, 144, 153, 155, 170, 175, 177, 179, 181, 183, 188, 194, 195, 200, 203, 204, 205, 206, 208, 214, 215, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 244, 247, 249, 257, 261, 264, 265, 267, 268, 269, 270, 271], "default2": 230, "default_axi": 142, "default_decomposit": 207, "default_initi": 135, "default_op": 26, "default_opset": 199, "default_valu": [110, 135, 142], "defin": [10, 12, 15, 57, 60, 62, 92, 93, 107, 109, 111, 115, 117, 119, 123, 135, 137, 142, 143, 144, 147, 193, 194, 196, 206, 210, 218, 224, 225, 226, 227, 232, 233, 234, 235, 249, 261, 271], "definin": 57, "definit": [26, 60, 109, 271], "deg2rad": 93, "deg2rad_": 93, "del": [203, 205], "delai": [17, 60], "delet": [135, 142, 153, 181], "deleted_nod": [142, 153, 181, 202], "demand": 247, "dens": [238, 257], "depend": [79, 80, 135, 170, 172, 194, 210, 214, 219, 220, 224, 232, 247, 267, 268, 269, 270], "deprec": [93, 196, 199, 234, 236, 238], "deprecationwarn": 93, "depth": 115, "dequantizelinear": 130, "derivativeopt": [10, 193], "dermin": 142, "descent": [193, 209, 236], "describ": [209, 236, 247, 267, 268, 269, 270], "describe_tensor": 207, "descript": [3, 194, 195, 196, 197, 203, 205, 207, 213], "deseri": [18, 116], "deserialize_arg": 116, "deserialize_args_kwarg": 116, "deseriz": 116, "deserv": 247, "design": [207, 251, 271], "desir": [140, 212, 218], "despit": 218, "detach": [93, 109, 112, 197, 203, 207, 209, 219, 236, 242], "detach_": [218, 269, 270], "detach_13": 196, "detail": [4, 115, 200, 206, 214, 228, 232, 248, 249], "detect": [135, 142, 144, 153, 181, 188, 229, 237, 247, 267, 268, 269, 270], "determin": [94, 115, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 249], "determine_shape_fct": 115, "dev": [192, 212], "dev0": [195, 222, 230, 238, 251], "dev20240314": [241, 242], "dev20240522": 264, "dev20240705": 240, "dev20250301": 251, "dev20250519": [195, 230, 232, 233, 238, 251], "develop": [210, 267, 268, 269, 270], "developp": [135, 247, 249], "deviat": [9, 203, 205, 207], "devic": [15, 17, 18, 21, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 83, 85, 86, 92, 95, 101, 115, 122, 123, 194, 195, 205, 209, 214, 217, 218, 219, 221, 225, 226, 227, 231, 233, 234, 235, 236, 240, 241, 242, 244, 264, 269, 270, 271], "device_count": [9, 194, 195, 196, 197, 203, 205, 207, 265], "device_nam": [57, 194, 240], "device_typ": [95, 196, 226, 234], "devop": 9, "df": [111, 194, 195, 200, 201, 203, 205, 207, 213, 249, 267, 268, 269, 270], "df1": [203, 205, 207], "df_eager": 195, "df_init": 207, "dfec": 228, "dffx": 196, "dfi": [203, 205, 207], "dfmem": 207, "dfmemfr": [203, 205, 207], "dfmemr": [203, 205, 207], "di": [203, 207], "diabetesdataset": 204, "diag": [93, 115, 216, 219], "diag_emb": 93, "diag_lib": 210, "diagflat": 93, "diagnam": 115, "diagnost": [9, 219], "diagon": [93, 95, 96, 238], "diagonal_backward": 93, "diagonal_copi": 93, "diagonal_scatt": 93, "diagprintexport": 115, "diagprintstatu": 115, "dicionari": 122, "dict": [3, 4, 6, 9, 10, 12, 14, 15, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 60, 71, 87, 92, 93, 95, 96, 97, 100, 101, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 128, 130, 132, 135, 142, 143, 166, 194, 195, 196, 197, 203, 205, 207, 208, 210, 214, 217, 219, 220, 222, 225, 226, 228, 230, 238, 247, 249, 267, 268, 269, 270], "dictcomp": 242, "dictionari": [4, 9, 10, 12, 15, 20, 21, 51, 55, 56, 57, 60, 62, 71, 87, 93, 106, 109, 112, 115, 116, 118, 122, 128, 135, 214, 219, 220, 222, 230, 238, 247, 266], "dictionnair": 249, "did": [136, 206, 217], "diff": [15, 92, 93, 200, 210, 214, 219, 227, 228, 235], "diff1": 197, "diff2": 197, "differ": [15, 55, 57, 60, 71, 86, 92, 93, 109, 112, 115, 117, 121, 130, 135, 142, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 228, 240, 246, 258, 266, 267, 268, 271], "differentx": 202, "difficult": [117, 249], "difficulti": [230, 238], "diffusion_model_help": [9, 120], "dig": [57, 135], "digamma": 93, "digamma_": 93, "dilat": [95, 207], "dim": [93, 95, 96, 97, 101, 107, 111, 112, 113, 117, 131, 135, 194, 206, 209, 210, 214, 215, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 235, 236, 237, 238, 247, 257, 265, 267, 268, 269, 270], "dim0": [95, 97], "dim1": [95, 97], "dim_dimnam": 93, "dim_dimnamelist": 93, "dim_dtyp": 93, "dim_int": 93, "dim_intlist": [93, 217, 221, 223, 231, 269, 270], "dim_intlist_out": 93, "dim_nam": 135, "dim_out": 93, "dim_tensor": [267, 268], "dim_to_pad": [227, 235], "dimens": [10, 15, 60, 95, 109, 115, 131, 132, 135, 144, 155, 158, 164, 167, 170, 179, 180, 193, 195, 204, 209, 212, 215, 216, 220, 221, 228, 229, 232, 237, 239, 247, 258, 271], "dimnam": 93, "dimname_out": 93, "dimname_scalar": 93, "dimname_src": 93, "dimname_st": 93, "dimname_tensor": 93, "dimname_valu": 93, "dims_out": 93, "dir": [9, 251], "direct": [60, 193, 253], "directli": 271, "directori": 264, "dirnam": [9, 200, 201, 203, 207], "disabl": [6, 9, 10, 56, 71, 87, 92, 93, 127, 128, 135, 195, 196, 197, 203, 205, 207, 210, 249], "disable_aot": [6, 196], "disable_aot_function_inlin": [21, 207], "disable_fn": [210, 219], "disable_pattern": [71, 87, 92, 93, 127, 195, 241, 242, 244], "disc": [57, 115], "discov": [106, 267, 268, 269, 270], "discoveri": 265, "discrep": [15, 56, 87, 92, 93, 111, 115, 210, 219, 221, 227, 228, 231, 235], "discrepancies_": 57, "discrepancies_ab": [57, 240], "discrepancies_rel": [57, 240], "disjoint": [144, 161], "disk": [56, 192], "dispatch": [9, 71, 92, 93, 110, 113, 115, 203, 207, 210, 225, 226, 247, 267, 268, 269, 270], "dispatch_and_compile_graph": 207, "dispatch_t": 210, "dispatch_trac": [210, 219], "dispatcherror": [234, 267, 268], "dispatchkei": [267, 268, 269, 270], "dispatech": 109, "displai": [9, 15, 18, 57, 93, 115, 135, 142, 219, 230, 238, 247, 264], "display_pattern": 142, "disrep": 210, "dist": [93, 107, 210, 221, 231, 264, 267, 268, 269, 270], "dist_chunk": 210, "dist_idx_map": 210, "dist_pot_donor": 210, "dist_subset": 210, "distanc": [196, 197, 210, 228], "distinct": [179, 180], "distribut": 252, "div": [93, 95, 101, 130, 144, 145, 154, 156, 186, 188, 200, 210, 227, 249, 255, 267, 268], "div_": 93, "div_1": 200, "div_2": 200, "div_3": 200, "div_4": 200, "div__tensor": 95, "div_by_numb": 9, "div_nod": [181, 186], "div_output_0": 255, "div_tensor": 95, "div_tensor_mod": 95, "div_true_graph_0__false_graph_0": [267, 268], "divid": [9, 93, 210], "divisor_overrid": 95, "dj": [], "djc": 268, "djvl": 255, "dnan": [210, 213], "do": [4, 9, 26, 55, 93, 109, 115, 118, 130, 135, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 196, 206, 207, 210, 212, 222, 223, 228, 239, 240, 247, 249, 252, 258, 267, 268, 269, 270, 271], "do_not_remov": [135, 142], "do_sampl": 222, "do_that": 199, "do_thi": 199, "do_this_or_do_that": 199, "do_this_or_do_that_as_bool": 199, "doabl": 210, "dob": 111, "doc": [59, 95, 96, 135, 144, 170, 175, 177, 179, 188, 214, 219, 220, 224, 232, 253, 264, 267, 268, 269, 270], "doc_str": 135, "document": [57, 59, 98, 109, 206, 214, 219, 220, 224, 232, 251, 252, 267, 268, 269, 270, 271], "doe": [10, 111, 115, 119, 123, 128, 134, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 203, 204, 205, 206, 207, 210, 217, 218, 219, 224, 225, 226, 227, 228, 232, 233, 234, 235, 247, 249, 261, 264, 265, 266, 271], "doesn": [203, 204, 241, 268, 270], "doi": [], "domain": [92, 93, 100, 105, 110, 114, 130, 135, 138, 142, 153, 170, 171, 174, 175, 181, 187, 194, 196, 198, 199, 200, 202, 204, 207, 208, 209, 224, 225, 226, 227, 228, 231, 236, 238, 247, 249, 257, 261, 267, 268], "done": [21, 55, 92, 93, 95, 109, 115, 135, 136, 142, 191, 193, 196, 197, 200, 202, 203, 205, 207, 210, 228, 230, 238, 240, 241, 242, 249], "donor": 210, "donors_dist": 210, "donors_idx": 210, "donors_mask": 210, "dort": [9, 127, 192, 195, 196, 197, 200, 201, 204, 207, 208, 209, 211, 258, 264, 271], "dort_bench": [9, 84, 88, 195, 243, 244, 245, 264], "dort_bench_profil": [9, 88], "dort_profil": [9, 88, 243, 245], "dot": [93, 192, 212], "dot_nam": [115, 210], "doubl": [12, 198, 267], "down_proj": [197, 214, 219], "download": [60, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 264], "download_funct": 60, "download_retry_decor": 60, "draft": [115, 232], "draft_export": [212, 219, 220, 221, 224, 230, 231, 232, 238, 239, 253, 258, 267, 268, 269, 270, 271], "draft_export_loc": 115, "draw": 192, "driver": 265, "drop": [4, 15, 195, 213], "drop_kei": 15, "dropna": 195, "dropout": [93, 95, 96, 113, 144, 209, 214, 219, 230, 236], "dropout_": 95, "dropout_1": [214, 230], "dropout_2": [214, 230], "dropout_3": [214, 230], "dropout_4": 230, "dropout_nod": 150, "dropout_p": 96, "dropoutpattern": [142, 144, 150, 228, 249, 261], "drvk": 197, "ds_arg": 116, "ds_kwarg": 116, "dsiz": 255, "dstack": 93, "dt": [15, 18], "dtni": 255, "dtype": [12, 15, 18, 19, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 92, 93, 95, 96, 100, 101, 109, 112, 113, 114, 115, 135, 138, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 218, 219, 221, 224, 225, 226, 227, 228, 231, 235, 236, 238, 240, 247, 249, 257, 267, 268, 269, 270], "dtype_layout": [113, 214, 219], "dtype_out": 93, "dtype_to_tensor_dtyp": [15, 18], "due": [115, 203, 205, 207, 230, 237, 238, 264], "dummi": [21, 61, 62, 83, 85, 87, 95, 109, 118, 122, 123, 128, 192, 200, 202, 208, 211, 212, 214, 217, 220, 223, 228, 230, 238, 239, 258, 263, 271], "dummy_funct": 218, "dummy_function_cat": 218, "dummy_input": 9, "dummy_llm": 128, "dummyc": 207, "dump": [4, 9, 21, 56, 60, 71, 92, 93, 109, 119, 127, 128, 135, 137, 142, 195, 203, 261], "dump3bug": 82, "dump_applied_pattern": [135, 137, 142, 261], "dump_bash_bench": 240, "dump_dort_onnx": 9, "dump_fil": 128, "dump_filenam": 21, "dump_first_input": 92, "dump_fold": [57, 240], "dump_for_debug": 92, "dump_help": [9, 120, 196, 197], "dump_model": 196, "dump_onnx": [9, 119, 196], "dump_onx_llama_": 194, "dump_ort": [56, 63, 64, 65, 66, 67, 68, 69, 70], "dump_pattern": [71, 92, 93, 127], "dump_prefix": [71, 92, 93, 127, 194, 196], "dump_std": [4, 60], "dump_test": 128, "dump_test_model": [56, 240], "duplic": [57, 135], "dur": 201, "durat": [9, 203, 205, 207], "dure": [92, 93, 117, 135, 214, 232, 234, 247, 267, 268], "dx": [93, 229, 237, 268], "dy": [229, 237, 268], "dy1": [267, 268, 269, 270], "dyanmic": 213, "dyn": [15, 195, 216, 219, 230], "dyn_nam": 268, "dynam": [15, 56, 57, 60, 71, 87, 92, 93, 94, 106, 112, 115, 116, 122, 127, 128, 131, 135, 166, 194, 195, 196, 203, 205, 210, 212, 213, 217, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 235, 238, 239, 240, 241, 242, 249, 258, 264, 265, 266, 267, 269, 271], "dynamic_alia": [247, 267, 268], "dynamic_cach": 217, "dynamic_dimensions_sourc": [247, 267, 268], "dynamic_dimensions_source_flat": [247, 267, 268], "dynamic_object": [135, 247, 267, 268], "dynamic_objects_rev": [135, 247, 267, 268], "dynamic_rop": [122, 222], "dynamic_shap": [60, 71, 87, 93, 109, 111, 112, 115, 121, 128, 135, 209, 215, 216, 217, 218, 219, 221, 222, 223, 227, 229, 230, 231, 235, 236, 237, 238, 247, 253, 265, 267, 268, 270], "dynamiccach": [62, 214, 219, 220, 222, 223, 230, 238], "dynamicquantizelinear": 130, "dynamo": [16, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 109, 115, 197, 210, 213, 230, 232, 233, 234, 235, 236, 237, 238, 248, 266, 269, 270], "dynamo_export": [93, 196], "dynamointerpret": [109, 110, 113, 135, 207, 208, 209, 224, 228, 248, 249, 257, 267, 268], "dynger": [195, 244, 264], "dynger_backend": 9, "dynrev": 230, "dynsrc": 230, "dz": 215, "e": [92, 93, 96, 113, 193, 195, 196, 197, 203, 205, 206, 207, 210, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 237, 238, 253, 267, 268, 269], "e501": 194, "e731": 194, "each": [60, 115, 142, 204, 240, 249], "eager": [56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 93, 121, 124, 125, 126, 195, 196, 197, 203, 205, 241, 242, 244, 253, 257, 264], "eahj": 228, "eaq": 247, "easi": [215, 247], "easier": [60, 109, 110, 117, 134, 193, 247, 249], "easili": [204, 247], "easypatternoptim": [166, 202], "eatd": 196, "ebgi": 197, "echo": 244, "edit": [196, 197, 214, 219, 220, 224, 228, 232, 267, 268, 269, 270], "eeaa": 228, "eeee": 228, "eeeg": 196, "eejj": 196, "effdet": [79, 80], "effici": [92, 93, 210, 228, 247, 248, 249], "efxm": 196, "einsum": 95, "either": [93, 117, 142, 221, 231, 247], "elast": 12, "electraforquestionansw": 240, "elem_s": 135, "elem_typ": 135, "element": [12, 15, 18, 56, 95, 115, 116, 130, 135, 140, 144, 152, 158, 163, 166, 194, 247, 267, 268, 269, 270], "element_wis": [9, 177], "element_wise_binary_op_typ": 130, "element_wise_op_cmp_typ": 130, "elementwise_affin": 128, "elif": [195, 197, 203, 205, 207, 217], "ellipsi": [267, 268, 269, 270], "els": [96, 193, 194, 195, 196, 197, 199, 200, 201, 203, 205, 207, 210, 213, 217, 219, 222, 265, 267, 268, 269, 270], "else_branch": [199, 224, 232, 267, 268, 269, 270], "elsegraph_3": 199, "elu": [93, 95, 130, 144, 155], "elu_": [93, 95], "elu_backward": 93, "em": 228, "emb": 214, "embd_pdrop": [214, 219, 220, 230, 238], "embed": [56, 93, 95, 96, 113, 117, 123, 128, 196, 197, 214, 219, 228, 230, 238, 257], "embed_token": [197, 214, 219, 220, 230, 238, 257], "embedding2": 228, "embedding_1": 228, "embedding_backward": 93, "embedding_bag": 95, "embedding_bag_unpack": 93, "embedding_dense_backward": 93, "embedding_dim": 228, "embedding_sparse_backward": 93, "emit_nod": [203, 207], "empti": [3, 6, 62, 71, 87, 92, 93, 109, 110, 115, 116, 128, 135, 193, 194, 210, 217, 221, 231, 247, 267], "empty_copi": [135, 207], "empty_dimens": 10, "empty_input": 62, "empty_lik": [93, 225, 233], "empty_mean_std": 95, "empty_permut": 95, "empty_strid": [93, 95], "emsdk": 264, "enabl": [6, 9, 17, 21, 60, 71, 87, 92, 93, 95, 109, 119, 127, 128, 135, 137, 195, 203, 207, 247, 249], "enable_activation_checkpoint": 56, "enable_gqa": 96, "enable_grad": 95, "enable_nvtx_profil": 264, "enable_pattern": [71, 83, 87, 92, 93, 127, 195, 241, 242, 244, 264], "enable_profil": [21, 201], "enable_train": 264, "enable_training_op": 264, "encod": [222, 242], "encode_jpeg": 93, "encode_jpegs_cuda": 93, "encode_png": 93, "encoder_attention_mask": 122, "encoder_hidden_st": 122, "encoderdecodercach": [230, 238], "encount": [214, 232, 267, 268, 269, 271], "end": [3, 17, 56, 95, 101, 135, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 268], "end_dim": 95, "end_profil": 201, "endian": 15, "endswith": 196, "engin": [18, 264], "eno": 268, "enough": [9, 21, 125, 210], "enrq": 197, "ensur": [135, 137, 139, 218, 240, 249], "enter_context": 207, "entir": [268, 270], "entr": 93, "enumer": [56, 57, 101, 142, 195, 196, 203, 204, 205, 207, 217, 222], "enumerate_csv_fil": 57, "enumerate_load_model": 56, "enumerate_match": [142, 200, 207, 249], "enumerate_model_nam": 56, "enumerate_run_model": 56, "enumerate_subgraph": 130, "enumerate_test_model": 56, "env": [195, 265], "environ": [9, 109, 115, 135, 142, 264], "eos_token_id": [214, 219, 220, 222, 230, 238], "ep": [95, 111, 128, 208, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 253], "ep_id_nod": 111, "ep_nam": 111, "epcat": 218, "epilog": 3, "epoch": [204, 209, 236], "epsilon": [228, 238, 257], "eq": [93, 95, 113, 196, 197, 214, 215, 219, 220, 224, 228, 230, 232, 257], "eq2": 228, "eq_": 93, "eq_1": [219, 228], "eq_10": 219, "eq_2": [200, 219], "eq_3": 219, "eq_4": 219, "eq_5": 219, "eq_6": [219, 230], "eq_60": 238, "eq_7": 219, "eq_8": 219, "eq_9": 219, "eq_tensor": 95, "equal": [9, 10, 15, 18, 21, 71, 95, 97, 101, 116, 123, 130, 131, 135, 142, 144, 151, 152, 164, 168, 170, 175, 179, 188, 193, 195, 196, 197, 200, 218, 226, 228, 230, 238, 247, 249, 257, 267, 268], "equal_1_output_0": [197, 267], "equal_nod": 168, "equal_output_0": 267, "equal_to": 135, "equat": 95, "equival": [96, 111, 135, 144, 157, 162, 228, 247, 267, 268, 269, 270], "eras": 56, "erf": [93, 95, 130, 144, 155, 181, 188], "erf_": 93, "erf_nod": 181, "erfc": 93, "erfc_": 93, "erfcx": 93, "erfinv": 93, "erfinv_": 93, "erkv": 255, "eror": [224, 225, 226, 233, 234], "err": [214, 268], "err_": 57, "err_ab": 111, "err_export": 57, "err_rel": 111, "err_std": 195, "err_stdout": 195, "err_warmup": 57, "error": [9, 18, 56, 57, 109, 115, 116, 117, 119, 128, 135, 193, 195, 196, 197, 203, 205, 206, 207, 209, 210, 213, 214, 217, 219, 221, 224, 231, 232, 234, 236, 247, 250, 253, 267, 268, 269, 270], "error_step": 213, "eryp": 196, "especi": [210, 267, 268, 269, 270], "estim": 55, "esyl": 196, "eval": [9, 56, 109, 203, 207, 213, 214, 219, 220, 222, 230, 238, 267, 268, 269, 270], "eval_fram": [210, 219, 242], "eval_with_kei": [269, 270], "evalu": [9, 26, 106, 131, 135, 192, 193, 194, 195, 196, 200, 201, 204, 206, 208, 210, 211, 213, 214, 232, 258, 271], "evaluate_expr": 219, "evaluate_sym_nod": 219, "even": [21, 113, 135, 210, 219, 228, 267, 268, 269, 270], "event": [21, 56, 60, 252], "event_nam": 201, "everi": [4, 12, 17, 21, 51, 55, 57, 60, 62, 107, 109, 110, 115, 116, 119, 135, 136, 137, 142, 145, 193, 196, 210, 218, 219, 222, 228, 240, 247, 248, 249, 269, 270], "evert": 247, "everyth": [56, 92, 115, 135, 193, 215, 217, 219, 247], "everytim": [135, 137], "evolv": [142, 249], "ex": 195, "exactli": 232, "exampl": [3, 12, 17, 21, 60, 83, 84, 85, 86, 92, 93, 109, 111, 112, 115, 116, 117, 118, 119, 122, 123, 135, 138, 142, 166, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 251, 258, 261, 264, 271], "example_4700": 201, "example_args_collect": 253, "example_input": [87, 110, 203, 205, 208], "example_shap": 135, "example_valu": [135, 210, 247, 267, 268], "exc": [57, 109, 117, 132, 135, 140, 142, 205, 206, 210, 268, 271], "exc_typ": 9, "exceed": [213, 268], "excel": [57, 58], "excel_output": 57, "except": [4, 9, 21, 56, 57, 60, 92, 93, 99, 106, 113, 115, 117, 132, 135, 140, 142, 193, 195, 196, 197, 201, 203, 205, 206, 207, 210, 212, 215, 217, 218, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 237, 238, 240, 247, 253, 267, 268], "exclud": [56, 57], "exclude_model_nam": [56, 63, 64, 65, 66, 67, 68, 69, 70], "exclude_outsid": [267, 268], "exe_path": [110, 135], "exec": 247, "execut": [4, 9, 18, 51, 57, 93, 111, 115, 117, 135, 136, 142, 193, 210, 211, 219, 228, 232, 239, 240, 246, 249, 258, 266, 267, 268, 269, 270], "executorch": [9, 87, 271], "exempl": 195, "exepath": [247, 267, 268], "exhaust": 15, "exist": [9, 60, 92, 93, 105, 111, 113, 119, 128, 130, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 195, 198, 203, 204, 207, 211, 217, 247, 248, 249, 258, 271], "existing_nam": 12, "existing_t": 93, "exit": [135, 196, 197, 203, 205, 207, 259, 260, 261, 262, 263], "exp": [93, 95, 101, 111, 130, 139, 144, 152, 155, 195], "exp2": 93, "exp2_": 93, "exp_": 93, "expand": [60, 93, 95, 97, 101, 113, 144, 152, 200, 214, 219, 230, 238, 255, 257, 267, 268], "expand_1": [196, 197, 214, 238, 257], "expand_1_output_0": 267, "expand_2": 238, "expand_27": 267, "expand_2_output_0": 267, "expand_5": 200, "expand_6": 200, "expand_7": 200, "expand_a": [95, 97, 230], "expand_b": 230, "expand_b2": 230, "expand_b_neg": 230, "expand_copi": 93, "expand_output_0": [197, 267], "expandbroadcast": 144, "expandbroadcastpattern": [142, 144, 152, 200, 228, 249, 261], "expandpattern": [142, 144, 152, 228, 249, 261], "expandswap": 144, "expandswappattern": [142, 144, 152, 228, 249, 261], "expans": [144, 152], "expect": [9, 10, 12, 56, 92, 93, 109, 111, 112, 115, 116, 119, 134, 135, 193, 196, 197, 206, 208, 210, 215, 216, 217, 220, 221, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 247, 260, 267, 268, 269, 270], "expected_onnxrt": 196, "expected_output": 222, "expected_shap": 111, "expected_typ": 116, "experi": [4, 9, 57, 93, 192, 195, 203, 205, 207, 210, 212, 215, 216, 217, 219, 222, 224, 227, 229, 232, 235, 237, 247, 248, 259, 264, 267, 268, 269, 270, 271], "experiment": [83, 93, 117, 135, 137, 142, 170, 175, 192, 194, 195, 203, 207, 210, 212, 214, 215, 216, 217, 219, 224, 227, 229, 230, 232, 235, 237, 244, 247, 259, 261, 264, 267, 268, 269, 270], "experimental_experi": [3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 214, 216, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 238, 240, 243, 244, 245, 247, 249, 253, 257, 259, 264, 267, 268, 269, 270], "explain": 271, "explan": [267, 268, 269], "explicit": [9, 60, 240], "explicitrunn": 63, "explor": [142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 249, 266], "expm1": [93, 95], "expm1_": 93, "expnam": [267, 268, 269, 270], "expo": [269, 270], "expon": [95, 97, 101], "exponenti": 93, "exponential_": 93, "export": [6, 15, 51, 55, 56, 57, 60, 83, 84, 87, 92, 93, 106, 108, 109, 110, 111, 112, 115, 119, 128, 135, 193, 194, 195, 198, 199, 200, 201, 202, 204, 211, 215, 217, 224, 225, 226, 228, 229, 231, 239, 245, 248, 250, 254, 255, 258, 264, 266], "export2numpi": 183, "export_": 207, "export_a": 60, "export_artifact": [210, 219, 253], "export_as_funct": [92, 93, 135], "export_compat": 253, "export_correl": 57, "export_cus_p0": 207, "export_cus_p2": 207, "export_custom": 197, "export_dynamo": [197, 207], "export_dynopt": 207, "export_fct": [203, 205], "export_for_train": 206, "export_func": [210, 219, 253], "export_funct": [203, 205, 207], "export_loc": 115, "export_model": [9, 88], "export_model_help": [9, 88], "export_modules_as_funct": [109, 208, 228, 247], "export_opt": [9, 55, 60, 92, 93, 109, 110, 115, 128, 204, 226, 230, 231, 247, 257, 267, 268], "export_output": [197, 207], "export_script": [197, 207], "export_simpl": [57, 58], "export_to_onnx": 128, "exportdb": [253, 268, 270], "exported_mod": 207, "exported_model": [203, 205], "exported_program": [108, 109, 112, 115, 117, 206, 207, 208, 210, 219, 253], "exportedprogram": [108, 109, 111, 112, 117, 210, 214, 215, 216, 217, 219, 227, 229, 231, 234, 235, 237, 247, 267, 268, 271], "exporter_kwarg": [115, 210, 219], "exporter_statu": [115, 210], "exportopt": [92, 93, 110, 115, 128, 204, 226, 230, 231, 247, 257, 267, 268], "expos": [3, 194, 195, 196, 197, 201, 203, 205, 207, 212, 213, 271], "expr": [132, 135], "express": [15, 116, 132, 135, 142, 166, 193, 213, 215, 218, 219, 220, 224, 227, 229, 232, 235, 237, 240, 249, 252, 267, 268, 269, 270], "expression_dimens": [9, 135], "ext": [9, 197, 207, 251], "ext_test_cas": [16, 194, 195, 196, 197, 203, 205, 207, 267, 268, 269, 270], "extend": [117, 179, 180, 194, 201, 207, 219, 220, 224, 232, 247, 261, 264, 267, 268, 269, 270, 271], "extendedreferenceevalu": [18, 93, 109, 111, 112, 196, 197, 210, 227, 228, 247], "extens": [79, 80, 260, 264], "extern": [55, 87, 109, 115, 135, 136, 264], "external_threshold": [55, 92, 93, 109, 115, 135, 249], "external_util": 242, "extra": [79, 80, 139, 247, 264], "extract": [4, 116, 132, 191, 267, 268, 269], "extract_names_from_schema": 116, "extract_tensor_metadata": [203, 207], "extract_v": 207, "extrapolation_valu": [267, 268], "exttestcas": 9, "ey": 93, "ezbv": 197, "f": [9, 12, 15, 92, 93, 110, 113, 135, 139, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 217, 219, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 247, 249, 253, 261, 267, 268, 269, 270], "f1": [130, 198], "f2": [130, 198], "f32": [214, 215, 216, 217, 219, 224, 227, 232, 235, 247, 267, 268, 269, 270], "f401": 195, "f821": 203, "f_lineno": [138, 142, 198, 249], "f_node": 155, "fact": [131, 218], "factor": 222, "fail": [4, 9, 60, 61, 105, 106, 113, 115, 130, 132, 134, 135, 142, 206, 210, 215, 218, 222, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 240, 247, 249, 253, 265, 267, 268, 269, 270, 271], "fail_childc": 210, "failur": [115, 135, 234, 240, 267, 268], "faith": 109, "fake": 210, "fake_impl": 207, "fake_mod": [109, 112], "fake_quantize_per_channel_affin": 93, "fake_quantize_per_channel_affine_cachemask_backward": 93, "fake_quantize_per_tensor_affin": 93, "fake_quantize_per_tensor_affine_cachemask_backward": 93, "fake_tensor": [56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 109, 112, 203, 206, 207], "fake_tensor_convert": [109, 112], "fake_x": [109, 112], "faketensor": [135, 206, 210, 223, 268, 270], "faketensormod": [109, 112], "fakifi": 207, "fall": [55, 93, 109, 115, 135, 265], "fallback": [105, 109, 113, 266], "fals": [4, 6, 9, 15, 17, 18, 21, 51, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 92, 93, 94, 95, 96, 97, 101, 105, 106, 109, 110, 113, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 131, 134, 135, 137, 138, 139, 142, 155, 166, 167, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 207, 210, 213, 214, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 247, 249, 253, 265, 266, 267, 268, 269, 270], "false_fn": [115, 210, 267, 268, 269, 270], "false_fn1": [267, 268, 269, 270], "false_fn2": [267, 268, 269, 270], "false_graph": 95, "false_graph_0": [224, 232, 269, 270], "false_out": 210, "falset": [200, 228, 249], "far": [105, 109, 113, 135, 142, 215, 247], "fast": [57, 193, 247, 249], "fast_backend": [9, 93, 242], "fast_detach": 207, "fast_script": 57, "fasten": [135, 247], "faster": [142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 249, 261], "fastgelu": [181, 188], "fastgelupattern": [181, 188, 228, 261], "fbgemm_gpu_nightli": [79, 80], "fbgemm_linear_fp16_weight": 93, "fbgemm_linear_fp16_weight_fp32_activ": 93, "fbgemm_linear_int8_weight": 93, "fbgemm_linear_int8_weight_fp32_activ": 93, "fbgemm_linear_quantize_weight": 93, "fbgemm_pack_gemm_matrix_fp16": 93, "fbgemm_pack_quantized_matrix": 93, "fc": [203, 205, 207], "fc1": [203, 205, 207, 238, 257], "fc2": [203, 205, 207, 238, 257], "fc3": [203, 205, 207], "fca": [203, 205, 207], "fcb": [203, 205, 207], "fcc": [203, 205, 207], "fcd": [203, 205, 207], "fce": [203, 205, 207], "fcf": [203, 205, 207], "fcg": [203, 205, 207], "fch": [203, 205, 207], "fci": [203, 205, 207], "fck": 207, "fcl": 207, "fcm": 207, "fcn": 207, "fct": [9, 105, 109, 110, 113, 115, 142, 225, 233], "fct_shape": [225, 233], "featur": 210, "feature_dropout": 95, "feed": [19, 21, 56, 60, 119, 196, 201, 207, 210, 228, 247], "feed_forward": [128, 228], "feed_input": 51, "feedforward": [128, 228], "feeds0": 210, "feeds1": 197, "feeds2": 197, "feedsrt": 196, "fegi": 197, "few": [83, 85, 117, 215, 228, 247], "ff": 228, "ff_dim": 228, "fft": 93, "fft2": 93, "fft_fft": [93, 95], "fft_fft2": [93, 95], "fft_fftn": 93, "fft_fftshift": 93, "fft_hfft": 93, "fft_hfft2": 93, "fft_hfftn": 93, "fft_ifft": [93, 95], "fft_ifft2": [93, 95], "fft_ifftn": 93, "fft_ifftshift": 93, "fft_ihfft": 93, "fft_ihfft2": 93, "fft_ihfftn": 93, "fft_irfft": 93, "fft_irfft2": 93, "fft_irfftn": 93, "fft_rfft": 93, "fft_rfft2": 93, "fft_rfftn": 93, "fftn": 93, "fftshift": 93, "fgfa": 228, "fhmb": 196, "fhsc": 196, "field": [135, 240], "fig": [195, 201, 203, 205, 207], "figsiz": [195, 201, 203, 205, 207, 227], "figur": 9, "filanam": 51, "file": [4, 6, 9, 18, 20, 55, 57, 58, 87, 109, 115, 119, 128, 136, 196, 201, 210, 211, 214, 215, 216, 217, 219, 224, 227, 229, 232, 234, 235, 237, 239, 240, 247, 252, 253, 258, 260, 264, 267, 268, 269, 270], "file1": 197, "file2": 197, "file_path": 136, "filenam": [9, 20, 55, 57, 60, 87, 109, 115, 119, 128, 183, 195, 197, 200, 201, 203, 205, 207, 240], "fill": [10, 93, 109, 112, 193, 200, 210, 217, 247, 267, 268], "fill_": [93, 269, 270], "fill_kwarg": 116, "fill_scalar": [93, 95], "fill_tensor": [93, 95], "fill_valu": [95, 193], "fillgrad": [10, 193], "fillna": [200, 213, 249], "fillvectorsfrominput": 267, "filter": [56, 57, 58, 135, 204, 240], "filter_decomposition_t": [93, 204], "filter_fct": 93, "filter_funct": 4, "filter_in": [57, 58, 240], "filter_out": [57, 58, 240], "final": [4, 21, 92, 93, 111, 135, 193, 202, 216, 218, 219, 247, 249], "final_layernorm": 238, "finalize_llm_setup": 123, "finalize_llm_vision_setup": 123, "find": [109, 113, 135, 137, 142, 228, 247, 249, 259, 260, 267, 268, 269, 270, 271], "find_funct": 109, "find_method": 109, "findlabel": [203, 207], "findsourc": [203, 207], "fine": [210, 215], "finfo": [203, 205, 207], "finish": 204, "fior": 213, "first": [0, 9, 56, 60, 113, 115, 119, 130, 131, 135, 139, 167, 170, 183, 188, 193, 195, 196, 197, 200, 201, 213, 219, 222, 225, 226, 233, 234, 240, 248, 271], "first_it_out": 201, "fit": [209, 210, 236, 252], "fit_x_col": 210, "fix": [20, 93, 210, 214, 219, 221, 228, 231, 232, 271], "fixtur": 9, "flacon": 122, "flag": [9, 210, 219, 264], "flag_fake_tensor": [57, 240], "flag_no_grad": [57, 240], "flag_train": [57, 240], "flash": 264, "flash_attention_force_build": 264, "flash_attn_2_cuda": 264, "flat": 217, "flat_fn": [210, 219], "flat_vari": 210, "flatbuff": 264, "flatnonzero": [54, 210], "flatten": [15, 17, 56, 60, 95, 110, 120, 193, 198, 203, 205, 207, 210, 266, 270], "flatten_dense_tensor": 93, "flatten_dynamic_cach": 217, "flatten_input": 110, "flatten_iter": 18, "flatten_object": 15, "flatten_output": 120, "flatten_using_int": 95, "flatten_with_keys_dynamic_cach": 217, "flatten_with_keys_fn": 217, "flattend": 18, "flattened_input": 115, "flattened_output": 115, "flip": 93, "fliplr": 93, "flipud": 93, "float": [3, 4, 9, 12, 15, 17, 18, 20, 21, 56, 57, 60, 95, 96, 97, 100, 107, 115, 117, 119, 131, 135, 138, 139, 142, 144, 146, 156, 193, 195, 198, 201, 202, 214, 219, 228, 229, 232, 233, 237, 247, 266, 267, 268, 269, 270], "float16": [62, 196, 230, 238], "float32": [21, 71, 92, 93, 109, 112, 138, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 214, 219, 221, 222, 224, 225, 226, 227, 228, 231, 235, 236, 238, 240, 247, 249, 255, 257, 267, 268, 269, 270], "float64": 9, "float_float": 93, "float_float_out": 93, "float_pow": 93, "float_power_": 93, "float_tensor": 93, "float_tensor_out": 93, "floattensor": 122, "floor": [93, 95, 267, 268], "floor_": 93, "floor_divid": [93, 95], "floor_divide_": 93, "floordiv": 215, "floordiv_1": [227, 235], "flow": [109, 117, 210, 219, 221, 224, 231, 232, 271], "fluxt5": 77, "fmaili": 228, "fmax": 93, "fmin": 93, "fmod": [93, 95, 269, 270], "fmod_": 93, "fmod_scalar": 95, "fmt1": [57, 58], "fmt2": [57, 58], "fn": [9, 10, 117, 207, 210, 219, 253], "fname": [16, 225, 233], "focu": 222, "fold": [135, 137, 193, 207, 208, 209, 224, 228, 247, 249, 257, 261, 267, 268], "fold_const": 249, "folded_1_n3": 255, "folded_2_other_1": 255, "folder": [4, 9, 56, 87, 92, 119, 128, 135, 137, 142, 192, 196, 212, 261], "follow": [4, 12, 26, 57, 58, 92, 93, 108, 109, 113, 115, 117, 142, 144, 159, 160, 170, 175, 179, 183, 188, 193, 194, 195, 196, 200, 209, 210, 214, 218, 219, 224, 228, 230, 232, 236, 240, 247, 248, 249, 251, 252, 253, 261, 264, 265, 266, 267, 268, 269, 270, 271], "force_typ": 139, "forcedispatch": 105, "forese": 249, "fork": 265, "format": [20, 57, 58, 240, 262], "former": [21, 60, 62, 107], "formula": [57, 132], "forward": [60, 62, 92, 93, 107, 109, 111, 112, 115, 122, 144, 152, 196, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 242, 247, 249, 253, 266], "forward_": 115, "forward_arg": 115, "forward_arg_nam": 208, "forward_cal": [210, 219, 269, 270], "forward_custom_op_schema": 115, "forward_kwarg": 115, "forward_method": 87, "forward_nam": 116, "forward_need_seri": 115, "forward_ordered_parameter_nam": 115, "forward_parameter_nam": 115, "forwardwithcontrolflowtest": [224, 232], "found": [4, 9, 21, 99, 105, 109, 113, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 206, 212, 213, 214, 219, 232, 234, 249, 267, 268, 269, 270, 271], "four": 15, "fqn": 208, "frac": [93, 153, 181, 193], "frac_": 93, "framework": [214, 232], "free": [117, 252], "freed": 194, "freedom": 249, "freez": 264, "freq": 214, "frequent": [212, 227, 235], "frexp": 93, "fro": 111, "frobenius_norm": 93, "from": [4, 6, 9, 10, 12, 15, 17, 21, 26, 57, 75, 76, 77, 78, 79, 80, 92, 93, 94, 105, 106, 109, 111, 112, 113, 115, 116, 117, 118, 121, 125, 126, 128, 130, 131, 132, 135, 138, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 247, 248, 249, 252, 253, 255, 257, 258, 260, 261, 265, 267, 268, 269, 270, 271], "from_arrai": [138, 198], "from_array_extend": 15, "from_array_ml_dtyp": 15, "from_batch_split": [230, 238], "from_cal": 207, "from_funct": 207, "from_name_part": 203, "from_numpi": [193, 204, 210, 221, 225, 231, 233], "from_pretrain": 222, "from_qualified_nam": 203, "from_real_tensor": [109, 112, 203, 207], "from_tensor": [203, 207], "from_torchlib": 207, "fromhub": 9, "fromlinear": [267, 268], "frozen": [203, 207], "fuaw": 196, "fucntion": 109, "full": [9, 21, 93, 95, 96, 113, 135, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 253, 264, 267, 268, 269, 270], "full_graph": 94, "full_lik": 95, "full_nam": 115, "full_parameter_nam": 135, "fulld2": 230, "fullgraph": [92, 93, 194, 196, 203, 204, 205, 208, 210], "fulli": [194, 247, 248], "func": [193, 210, 214, 219, 230, 232, 253], "funckei": 230, "function": [4, 6, 8, 9, 10, 12, 15, 17, 18, 20, 21, 51, 57, 60, 62, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 92, 95, 96, 99, 105, 107, 110, 111, 112, 113, 115, 116, 117, 119, 130, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 198, 203, 204, 205, 207, 210, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 246, 248, 249, 258, 264, 266, 267, 268, 269, 270, 271], "function_ir": [203, 207], "function_lib": 203, "function_nam": 138, "function_opt": [55, 92, 93, 109, 110, 115, 135], "function_to_profil": 203, "functional_cal": [210, 219], "functional_tensor": [203, 207, 220], "functionalized_rng_runtime_epilogu": 242, "functionnotfounderror": [99, 247], "functionopt": [55, 92, 93, 109, 110, 115, 138], "functionpackedmatmul": 177, "functionpackedmatmulpattern": [177, 178], "functionpowtanh": 177, "functionpowtanhpattern": [177, 178], "functionproto": [15, 26, 51, 55, 109, 111, 115, 130, 135, 137, 138, 142, 166], "functionsplitrotarymul": 177, "functionsplitrotarymulpattern": [177, 178], "functool": 93, "functorch": [203, 204, 241], "fur": 128, "furnish": 252, "furo": 264, "fuse": [71, 135, 137, 144, 154, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 228, 258, 259, 261, 271], "fuse_as_graphmodul": 203, "fuse_by_partit": 203, "fuse_partit": 203, "fused_conv": [9, 188], "fused_matmul": [9, 188], "fused_nod": 191, "fusedconv": [185, 188], "fusedconvpattern": [185, 188, 228, 261], "fusedgemm": 207, "fusedmatmu": 255, "fusedmatmul": [26, 34, 135, 137, 186, 188, 190, 196, 197, 228], "fusedmatmuldiv": 188, "fusedmatmuldivpattern": [186, 188, 228, 261], "fusedmatmulpattern": [186, 188, 228, 261], "fusedmatmultranspos": 188, "fusedmatmultransposepattern": [186, 188, 228, 261], "fusedmatmulx2": 188, "fusedmatmulx2pattern": [186, 188, 228, 261], "fuser_util": 203, "futur": [196, 199, 234, 236, 238, 247], "futurewarn": [196, 199, 234, 236, 238], "fuzzi": 16, "fw_compil": [93, 196, 204], "fx": [92, 93, 94, 105, 109, 110, 111, 112, 115, 117, 135, 196, 203, 206, 207, 208, 210, 214, 217, 219, 224, 225, 226, 228, 230, 232, 233, 234, 242, 248, 267, 268, 269, 270, 271], "fx_graph_cs": 203, "fx_onnx_interpret": 203, "fx_pytre": [267, 268, 269, 270], "fyep": 196, "fzc": 249, "fzcj": 196, "g": [95, 96, 97, 100, 101, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 198, 202, 203, 205, 207, 214, 225, 226, 232, 242, 247, 249, 267, 268, 269], "g1": [224, 231, 267, 268], "g2": [224, 267, 268], "g3": [267, 268], "g4": [267, 268], "gaaa": 255, "gaex": 196, "galleri": [16, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 251, 258], "gallery_conf": 16, "gap": 210, "gate": 214, "gate_proj": 197, "gate_up_proj": [214, 219], "gather": [26, 93, 95, 109, 196, 197, 199, 228, 230, 238, 255, 257, 267, 268], "gather_1": 267, "gather_1_output_0": 255, "gather_backward": 93, "gather_grad": [9, 188], "gather_outpu": 197, "gather_output_0": [255, 267, 268], "gatherel": [26, 249, 267, 268], "gathergrad": [26, 35, 187], "gathergradpattern": 187, "gathernd": 255, "gave": 219, "gb": 9, "gbg": 267, "gc": [203, 205], "gcd": 93, "gcd_": 93, "gcm": 92, "ge": [93, 95, 218, 229, 237, 267, 269, 270], "ge_": 93, "ge_1": [269, 270], "ge_2": [269, 270], "ge_3": [269, 270], "geforc": [194, 203, 205, 207, 240], "gelu": [93, 95, 144, 153, 155, 181, 188], "gelu_": 93, "gelu_backward": 93, "gelu_new": [230, 238], "gelu_nod": 181, "geluerf": 188, "geluerfpattern": [181, 188, 228, 261], "geluort": 188, "geluortpattern": [181, 188, 228, 261], "gelupattern": [142, 144, 153, 228, 249, 261], "gemm": [93, 95, 139, 144, 155, 186, 188, 196, 200, 204, 207, 208, 209, 224, 228, 236, 247, 249, 267, 268], "gemm_0": 267, "gemm_nod": 186, "gemm_output_0": [267, 268], "gemmtranspos": 144, "gemmtransposepattern": [142, 144, 155, 207, 208, 209, 224, 228, 247, 249, 261, 267, 268], "gen": 194, "gener": [18, 92, 93, 95, 119, 122, 123, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 253, 264, 268, 269, 270], "generar": [183, 188], "generated_text": 222, "genexpr": [207, 242], "geometr": 93, "geometric_": 93, "ger": 93, "get": [9, 17, 55, 109, 110, 115, 118, 122, 135, 194, 195, 203, 207, 210, 214, 216, 219, 220, 221, 222, 223, 224, 230, 231, 232, 238, 242, 247, 248, 250, 259, 267, 268, 269, 270], "get_": [203, 205], "get_ai21_jamba_15_mini": 122, "get_all_mini_ml_l6_v1": 122, "get_arg": 207, "get_attr": [110, 206, 221, 224, 231, 232, 247, 267, 268, 269, 270], "get_attribut": [135, 142, 247, 249], "get_attribute_with_default": 135, "get_attributes_with_default": [135, 142], "get_available_provid": [196, 197, 203, 205, 207], "get_axi": 142, "get_benchmark_indic": 56, "get_computed_const": [142, 249], "get_const": [135, 207, 247], "get_constant_or_attribut": [135, 142], "get_constant_scalar": 142, "get_constant_shap": 142, "get_debug_msg": [115, 135, 247], "get_decomposition_t": [93, 109, 196, 204], "get_decomposition_table_by_nam": 93, "get_decomposition_table_dynamo": 93, "get_decomposition_table_onnxscript": 93, "get_default_pattern": [144, 207], "get_devic": [60, 242], "get_device_cap": [203, 205, 207], "get_device_nam": [203, 205, 207], "get_dummy_model": 61, "get_dummy_model_fail": 61, "get_dummy_model_fail_convert": 61, "get_dump_fil": 9, "get_dynamic_dimens": 135, "get_dynamic_shap": 60, "get_dynamo_stat": 60, "get_experimental_pattern": 170, "get_export_report": [115, 210, 219], "get_fake_valu": [203, 210], "get_falcon_mamba_7b": 122, "get_fallback_opt": 109, "get_figur": [9, 203, 205, 207], "get_first": 93, "get_fix_pattern": 175, "get_fused_aten_ops_dispatch": 71, "get_gradi": 93, "get_guard_manag": 203, "get_guard_manager_from_sourc": 203, "get_initializer_s": 135, "get_input": [201, 207], "get_input_cach": 123, "get_input_dynamic_shap": 135, "get_input_shap": 60, "get_inputs_with_copied_dynamic_cach": 60, "get_instruct": [203, 207], "get_investigation_pattern": 177, "get_is_dimens": 135, "get_llama32_9b_vis": 122, "get_llama_model": [113, 121, 196, 197, 253], "get_llama_model_lay": 61, "get_local_funct": 135, "get_local_function_output": 135, "get_machin": [4, 194, 195], "get_memory_rss": 17, "get_mistral_model": 124, "get_ml_pattern": 179, "get_model_name_list": 56, "get_onnx_signatur": 15, "get_onnxruntime_pattern": 188, "get_op_funct": 203, "get_opset": [135, 247], "get_origin": [203, 207], "get_parsed_arg": [3, 194, 195, 196, 197, 201, 203, 205, 207, 213], "get_pattern": [142, 207], "get_pattern_list": [135, 137, 142, 166, 207, 261], "get_peak_memori": 60, "get_phi2": 122, "get_phi2_untrain": [230, 238], "get_phi35_mini_instruct": 122, "get_phi35_untrain": [214, 219, 220], "get_phi35_vision_instruct": 122, "get_phi3_model": 125, "get_phi3_vision_128k_instruct": 122, "get_phi4": 122, "get_phi_model": 126, "get_processor_nam": 4, "get_rank": [135, 142, 247, 249], "get_registered_constraint": [135, 142], "get_seq_length": [217, 230, 238], "get_sequ": [135, 247], "get_shap": [135, 142, 202, 247, 249], "get_smollm_1_7b": 122, "get_speech2text2_causal_ml_not_trained_model": 61, "get_src_and_ast": [203, 207], "get_stable_diffusion_2_unet": 118, "get_submodule_nam": 110, "get_tiny_llm": [122, 222], "get_torch_": [203, 205], "get_torch_default": [203, 205], "get_torch_dort": [203, 205], "get_torch_eag": [203, 205], "get_torch_opti": 205, "get_torchlib_op": [203, 207], "get_train_initi": 12, "get_typ": [135, 142, 247, 249], "get_type_hint": 207, "get_type_known": 135, "get_xi": 210, "getattr": [95, 117, 201, 203, 207, 210, 217, 269, 270], "getattr_1": [267, 268, 269, 270], "getblock": [203, 207], "getclosurevar": [203, 207], "geteffectivelevel": 242, "getenv": [242, 265], "getitem": [110, 206, 221, 224, 231, 232, 267, 268, 269, 270], "getitem_1": [206, 221, 226, 231, 267, 268, 269, 270], "getitem_10": 214, "getitem_11": 214, "getitem_12": 214, "getitem_13": 214, "getitem_1_axi": [267, 268], "getitem_1_end": 268, "getitem_1_shap": 268, "getitem_1_start": [267, 268], "getitem_1_step": [267, 268], "getitem_2": [206, 267, 268, 269, 270], "getitem_3": [267, 268, 269, 270], "getitem_4": [206, 267, 268], "getitem_axi": [267, 268], "getitem_axis_0": 268, "getitem_end": 268, "getitem_shap": 268, "getitem_true_graph_0": [267, 268], "getitemb_tupl": [267, 268], "getitemb_tuple2": [267, 268], "getitemb_tuple3": [267, 268], "getlin": 207, "getpid": 17, "getsourc": [203, 207, 267, 268, 269, 270], "getsourcefil": [203, 207], "getsourcelin": [203, 207], "getvalu": [203, 207, 214], "gfge": 228, "ggaa": [196, 197], "gggg": 21, "ggre": 196, "ggu": 200, "ggvp": 197, "gii": 249, "ginebas": 242, "git": [192, 212, 264], "github": [79, 80, 93, 95, 108, 121, 192, 199, 203, 204, 207, 210, 212, 214, 215, 216, 217, 219, 222, 224, 227, 229, 232, 234, 235, 236, 237, 238, 241, 247, 253, 264, 265, 267, 268, 269, 270], "give": [92, 93, 110, 112, 135, 136, 200, 219, 228, 229, 237, 247, 248, 249, 271], "given": [10, 15, 57, 60, 71, 95, 109, 112, 115, 123, 130, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 229, 237, 247, 249, 267, 268], "glob": 247, "global": [200, 249, 264, 271], "glu": 93, "glu_backward": 93, "gm": [203, 205, 206, 208, 210, 219], "gnu": 264, "go": [115, 135, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247], "goal": [193, 228, 249, 261], "goe": [9, 60, 92, 93, 135, 142, 228, 247, 271], "good": [228, 247], "googl": [207, 214, 219, 220, 224, 232, 267, 268, 269, 270], "got": [56, 92, 93, 109, 112, 196, 197, 210, 227, 228, 235, 237, 267, 268, 269, 270], "got1": 197, "got2": 197, "gpu": [192, 194, 195, 203, 205, 207, 212, 264], "gpu0_begin": [203, 205, 207], "gpu0_end": [203, 205, 207], "gpu0_mean": [203, 205, 207], "gpu0_n": [203, 205, 207], "gpu0_peak": [203, 205, 207], "gqdk": 197, "gqnc": 228, "gr": [200, 202, 230, 247, 249], "grad": [193, 203], "grad_fn": [109, 112, 204, 208, 224, 230, 232, 238], "grad_help": [9, 11, 193], "grad_input": 93, "grad_mod": [203, 207, 242], "grad_output": 95, "gradient": [9, 16, 93, 193, 196, 209, 236, 251], "grain": 210, "grant": 252, "graph": [10, 12, 51, 56, 58, 92, 93, 94, 95, 105, 109, 110, 111, 112, 113, 115, 117, 130, 134, 135, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 210, 212, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 242, 246, 247, 248, 253, 261, 266, 267, 268, 269, 270], "graph_break_as_hard_error": 210, "graph_build": [9, 110, 134, 135, 139, 200, 202, 203, 207, 247], "graph_builder_opset": [9, 135, 207], "graph_builder_optim": [9, 142, 207], "graph_erase_nod": 117, "graph_modul": [92, 93, 94, 135, 196, 203, 207, 247, 267, 268, 269, 270], "graph_optimization_level": [21, 207], "graph_signatur": [210, 219], "graphbuil": 109, "graphbuild": [55, 92, 93, 95, 96, 97, 100, 101, 105, 109, 110, 113, 114, 128, 134, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 200, 202, 207, 208, 209, 224, 225, 226, 228, 230, 248, 249, 257, 267, 268], "graphbuilderpatternoptim": [92, 93, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 200, 202, 228, 248, 249], "graphmodul": [92, 93, 94, 109, 135, 206, 210, 214, 215, 216, 217, 227, 229, 232, 235, 237, 247, 267, 268, 269, 270], "graphmoduleimpl": [92, 93], "graphoptimizationlevel": [21, 207], "graphproto": [15, 51, 130, 135, 138, 267, 268], "graphviz_help": [193, 200, 202, 204, 209, 216, 224, 225, 226, 227, 228, 230, 231, 235, 236, 238], "greater": [93, 95, 101, 130, 224, 230, 232, 238, 249, 267, 268], "greater_equ": 93, "greaterorequ": 130, "grgv": 197, "grid": [95, 195], "grid_sampl": 95, "grid_sampler_2d": [93, 95], "group": [95, 207], "group_norm": 95, "groupbi": [200, 249], "grow": 247, "gru": 93, "gru_cel": 93, "gru_impl": 93, "gru_impl_data": 93, "gsec": [196, 197, 255], "gsge": 197, "gt": [93, 95, 113, 214, 219, 224, 230, 232, 238, 267, 268, 269, 270], "gt2": [267, 268], "gt3": [267, 268], "gt_": 93, "gt_1": [214, 219], "gt_2": [219, 267, 268], "gt_scalar": [224, 267, 268], "gt_tensor": 230, "gtx": 240, "guarante": [117, 142, 249], "guard": [203, 219, 220, 224, 232, 242, 267, 268, 269, 270], "guard_bool": 219, "guarded_cod": 210, "guardondatadependentsymnod": [219, 220, 267, 268], "guess": [115, 135, 193, 210, 216, 219, 249], "guess_dynamic_dimens": 115, "guess_dynamic_shap": [115, 210, 216, 219], "guess_dynamic_shape_object": 115, "guidelin": 271, "gweq": 255, "h": [193, 195, 214, 232, 259, 260, 261, 262, 263], "h1": 195, "ha": [9, 110, 115, 119, 135, 138, 142, 144, 149, 177, 178, 196, 198, 204, 210, 212, 216, 217, 229, 237, 239, 247, 258, 265, 267, 268, 270, 271], "haaa": 196, "had": 220, "half": 178, "half_nod": 181, "half_pixel": 267, "half_to_float": 95, "handl": [60, 115, 135, 191, 193, 194, 203, 204, 228, 241, 271], "handle_dispatch_mod": 207, "handle_torch_funct": [203, 207], "handler": [207, 210], "happen": [95, 128, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 247, 249], "hard": 228, "hardshrink": 93, "hardsigmoid": [93, 95], "hardsigmoid_": 93, "hardsigmoid_backward": 93, "hardswish": [93, 95], "hardswish_": [93, 95], "hardswish_backward": 93, "hardtanh": [93, 95], "hardtanh_": [93, 95], "hardtanh_backward": [93, 95], "has_cuda": [9, 194, 196, 197, 203, 205, 207, 240], "has_dynamic_object": [135, 247], "has_executorch": 9, "has_local_funct": 135, "has_nam": [135, 247], "has_onnxruntime_train": [9, 251], "has_onnxscript": 9, "has_phi3": 125, "has_processor": 142, "has_rank": [135, 142, 247, 249, 267, 268], "has_shap": [135, 142, 202, 247, 249, 267, 268], "has_torch": 9, "has_typ": [135, 142, 247, 249, 267, 268], "hasattr": [196, 203, 207, 210, 217, 222, 242], "hash": [15, 203, 207], "hasn": 217, "hatw": 228, "hau": 268, "have": [4, 105, 111, 112, 113, 115, 130, 135, 142, 179, 180, 193, 204, 216, 228, 229, 237, 240, 247, 264, 270], "hca": 249, "hci": [], "he": 110, "head": [135, 195, 214, 232, 240], "head_dim": 214, "head_mask": 122, "heavi": 260, "heavisid": 93, "heaviside_": 93, "height": 193, "help": [74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 110, 115, 135, 195, 196, 197, 203, 205, 207, 210, 219, 220, 224, 232, 247, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271], "helper": [9, 16, 21, 55, 115, 128, 138, 191, 198, 200, 202, 204, 208, 209, 210, 214, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 247, 249, 257, 267, 268], "hepv": 196, "here": [60, 117, 135, 194, 215, 268, 269, 270, 271], "herebi": 252, "hfft": 93, "hfft2": 93, "hfftn": 93, "hidden": [71, 123, 194, 195], "hidden_act": [214, 219, 220, 222, 230, 238], "hidden_input_scan_0_clon": [267, 268], "hidden_s": [121, 124, 125, 126, 194, 196, 197, 214, 219, 220, 222, 230, 238, 241, 242, 253, 257], "hidden_shap": 214, "hidden_st": [214, 219, 230, 238], "hide": [9, 247], "hide_stdout": 9, "hierarchi": 228, "high": [92, 93, 249], "higher": [9, 194, 200, 202], "higher_ord": [117, 214, 221, 224, 231, 232, 234, 267, 268, 269, 270], "higher_order_op": 210, "higherorderoper": [267, 268, 269, 270], "highlight": [15, 191], "hinge_embedding_loss": 93, "hint": [267, 268, 269], "hire": 159, "histogramdd": 93, "histor": 58, "hksv": 255, "hlzc": 228, "hmsv": 197, "hnsa": 197, "hold": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 247, 249], "holder": 252, "home": [93, 196, 199, 203, 204, 206, 207, 209, 210, 214, 215, 216, 217, 219, 224, 227, 229, 232, 234, 235, 236, 237, 238, 247, 253, 267, 268, 269, 270], "homexaduprevvthis312libpython3": 195, "hood": 228, "hook": [9, 60, 62, 107, 210], "hope": 115, "host": 264, "how": [10, 12, 92, 93, 110, 115, 116, 135, 177, 193, 194, 200, 202, 217, 219, 225, 226, 227, 228, 233, 234, 235, 248, 249, 265, 266, 271], "howev": [221, 228, 231, 249], "hrcw": 197, "hstack": 93, "html": [95, 96, 253, 268, 270], "http": [79, 80, 95, 96, 108, 121, 192, 203, 204, 212, 214, 219, 220, 222, 224, 230, 232, 238, 241, 253, 264, 267, 268, 269, 270], "huber_loss": 93, "huber_loss_backward": 93, "huber_loss_backward_out": 93, "huge": 222, "huggingfac": [75, 76, 78, 79, 80, 121, 212, 214, 217, 219, 220, 223, 228, 230, 238, 239, 240, 258, 271], "huggingface_big": 240, "huggingfacebigrunn": 65, "huggingfacerunn": 64, "hurt": 212, "hxg": 267, "hxw": 95, "hypot": 93, "hypot_": 93, "i": [3, 4, 9, 10, 12, 15, 17, 18, 20, 21, 51, 55, 56, 57, 58, 60, 71, 92, 93, 94, 95, 96, 98, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 123, 125, 127, 128, 132, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 217, 219, 220, 221, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 247, 248, 249, 251, 252, 253, 260, 261, 264, 267, 268, 269, 270, 271], "i0": 93, "i0_": 93, "i1": [93, 198], "i2": 198, "i32": [267, 268, 269, 270], "i64": [214, 219, 229, 237, 267, 268, 269, 270], "i7": 194, "i_data": 193, "i_input": [62, 206], "i_kernel": 193, "i_nan": 210, "i_out": 193, "iaaa": 255, "iaja": 255, "id": [15, 17, 56, 242], "idea": [115, 251, 264], "ident": [74, 75, 76, 77, 78, 79, 80, 81, 95, 97, 101, 110, 135, 137, 138, 142, 144, 145, 148, 162, 165, 193, 196, 198, 200, 202, 204, 210, 225, 226, 231, 247, 249, 261, 267, 268, 271], "identifi": [135, 247], "identity2": [224, 232], "identitypattern": [142, 144, 145, 200, 228, 249, 261], "idlr": 197, "ids_tensor": [61, 194, 257], "idx": [101, 218], "ifft": 93, "ifft2": 93, "ifftn": 93, "ifftshift": 93, "igamma": 93, "igamma_": 93, "igammac": 93, "igammac_": 93, "ighh": 228, "ignor": [9, 15, 60, 62, 92, 93, 107, 195, 196, 197, 203, 205, 207, 210, 219, 240, 253, 268, 269, 270], "ignore_index": 95, "ignore_warn": 9, "ih": 268, "ihfft": 93, "ihfft2": 93, "ihfftn": 93, "ihhh": 228, "iku": [], "illustr": [192, 212], "im2col": [93, 95], "im2col_naive_implement": 193, "imag": [93, 123, 193, 267, 268], "image_featur": [107, 267, 268, 269, 270], "image_s": 123, "imi": 268, "impact": [142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 249], "impl": [92, 193, 195], "implement": [8, 21, 26, 56, 71, 92, 93, 95, 105, 113, 117, 119, 135, 137, 142, 166, 192, 193, 194, 195, 196, 197, 204, 212, 219, 228, 229, 234, 237, 241, 242, 246, 248, 249, 267, 268, 271], "impli": [135, 247, 252], "implicit": 95, "import": [5, 6, 9, 15, 17, 21, 26, 92, 93, 106, 109, 111, 112, 113, 117, 128, 130, 131, 135, 138, 142, 144, 170, 175, 177, 178, 179, 183, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 253, 257, 261, 267, 268, 269, 270, 271], "importerror": [92, 93, 195, 196, 197, 201, 203, 205, 207], "imposs": 135, "improv": [115, 209, 228, 236], "imput": 210, "imul": 95, "in_featur": [128, 204, 206, 228, 267, 268], "in_spec": 208, "includ": [10, 18, 56, 87, 115, 119, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 219, 247, 249, 252, 271], "include_last_offset": 95, "include_model_nam": [56, 63, 64, 65, 66, 67, 68, 69, 70], "include_self": 95, "incomplet": 136, "inconsist": 135, "incorrect": [268, 269, 270], "increas": [60, 92, 93, 109, 115, 142, 195, 200, 202, 209, 215, 219, 228, 236, 249], "increment": [51, 135], "ind": 193, "indent": [93, 115, 119, 267, 268, 269, 270], "independantli": 228, "index": [56, 93, 95, 107, 110, 135, 138, 142, 195, 201, 203, 205, 206, 207, 213, 220, 247, 253, 264, 267, 268, 269, 270], "index_add": 93, "index_add_": 93, "index_copi": 93, "index_copy_": 93, "index_fil": 93, "index_fill_": 93, "index_put": [95, 267, 268, 269, 270], "index_put_": [93, 95, 268, 269, 270], "index_put_3ioioi1x3v2_10": 268, "index_put_3ioioi1x3v2_12": 268, "index_put_3ioioi1x3v2_122": 268, "index_put_3ioioi1x3v2_13": 268, "index_put_3ioioi1x3v2_14": 268, "index_put_3ioioi1x3v2_15": 268, "index_put_3ioioi1x3v2_17": 268, "index_put_3ioioi1x3v2_18": 268, "index_put_3ioioi1x3v2_3": 268, "index_put_3ioioi1x3v2_4": 268, "index_put_3ioioi1x3v2_5": 268, "index_put_3ioioi1x3v2_6": 268, "index_put_3ioioi1x3v2_7": 268, "index_put_3ioioi1x3v2_8": 268, "index_put_3ioioi1x3v2_9": 268, "index_reduce_": 93, "index_select": [93, 95, 269, 270], "index_select_backward": 93, "index_tensor": 95, "indic": [56, 57, 93, 95, 109, 115, 138, 153, 156, 193, 210, 219, 249, 265, 267, 268], "indicator_": 210, "indices_1": [], "indices_13": [267, 268], "indices_16": [], "indices_17": [267, 268], "indices_19": [267, 268], "indices_2": [267, 268], "indices_4": [267, 268], "indices_s": 93, "inductor": [93, 195, 244, 264], "ineffici": 204, "inf": [96, 228], "infer": [6, 19, 21, 56, 60, 87, 115, 135, 140, 142, 194, 210, 212, 215, 219, 228, 229, 237, 239, 240, 247, 248, 258, 259, 261, 263, 271], "infer_node_output": 207, "infer_s": 265, "infer_schema": [116, 225, 233], "infer_shap": [21, 135, 261], "infer_shapes_opt": [135, 200, 202, 230, 249], "infer_typ": 140, "inferencesess": [19, 21, 87, 92, 93, 128, 193, 197, 201, 207, 209, 210, 228, 236], "inferencesessionfornumpi": 21, "inferencesessionfortorch": 21, "infershapesopt": 230, "infinitely_differentiable_gelu_backward": 93, "info": [135, 230, 267, 268], "inform": [4, 6, 15, 17, 56, 60, 109, 110, 115, 116, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 208, 218, 219, 220, 221, 224, 228, 229, 230, 231, 232, 234, 237, 247, 248, 249, 253, 261, 267, 268, 269, 270], "infra": 203, "inherit": [9, 166, 217, 249, 265], "init": [92, 93, 111, 119, 196, 200, 204, 207, 208, 209, 224, 226, 227, 228, 230, 236, 238, 247, 249, 257, 267, 268, 269, 270], "init1": [267, 268, 269, 270], "init1_s16_": 228, "init1_s16_2": 228, "init1_s16_22": 228, "init1_s16_3": 228, "init1_s1_": [196, 200, 204, 228, 230, 257], "init1_s1_2": [196, 200, 228], "init1_s1_3": [200, 228], "init1_s1_4": [200, 230, 257], "init1_s1x3_": 247, "init1_s2560_": 230, "init1_s2560_2": 230, "init1_s2560_3": 230, "init1_s2560_4": 230, "init1_s2560_5": 230, "init1_s2560_6": 230, "init1_s32_": 257, "init1_s32_2": 257, "init1_s3_": 247, "init1_s3x1_": 247, "init1_s_": [196, 200, 224, 228, 257, 267, 268], "init1_s_10": 200, "init1_s_11": 200, "init1_s_12": 200, "init1_s_2": [200, 228, 257, 267, 268], "init1_s_3": [196, 200, 257], "init1_s_4": [196, 200, 257], "init1_s_5": [200, 257], "init1_s_6": [200, 257], "init1_s_7": 200, "init1_s_8": 200, "init1_s_9": 200, "init2": [267, 268, 269, 270], "init2cst": 230, "init2cst2": 230, "init7_s128_": 267, "init7_s1_": [200, 207, 228, 230, 267, 268], "init7_s1_0": [200, 204, 207, 227, 228, 230, 257, 267, 268], "init7_s1_02": 200, "init7_s1_1": [196, 228, 230, 257, 267, 268], "init7_s1_1024": [200, 257], "init7_s1_10242": [200, 268], "init7_s1_10243": 200, "init7_s1_1025": 267, "init7_s1_12": [231, 267, 268], "init7_s1_2": [200, 267, 268], "init7_s1_22": 200, "init7_s1_23": 200, "init7_s1_256": 200, "init7_s1_2562": 200, "init7_s1_2563": 200, "init7_s1_2564": 200, "init7_s1_3": [200, 230, 257, 267, 268], "init7_s1_30": 228, "init7_s1_32": 200, "init7_s1_32768": [267, 268], "init7_s1_33": 200, "init7_s1_34": 200, "init7_s1_4": [267, 268], "init7_s1_49152": [267, 268], "init7_s1_512": 200, "init7_s1_5122": 200, "init7_s1_6": [267, 268], "init7_s1_80": 230, "init7_s2_": [93, 196, 204, 230, 267, 268], "init7_s2_0_1": [196, 200, 230, 257, 267], "init7_s2_0_12": 200, "init7_s2_0_13": 200, "init7_s2_0_2": [196, 230, 257], "init7_s2_1024_1024": 196, "init7_s2_1024_10242": [200, 267], "init7_s2_16_16": 230, "init7_s2_1_": [204, 209, 224, 231, 247, 249, 267, 268], "init7_s2_1_10242": [267, 268], "init7_s2_1_2": [196, 230, 257], "init7_s2_1_3": 226, "init7_s2_2048_1024": 200, "init7_s2_2048_10242": 200, "init7_s2_2048_10243": 200, "init7_s2_2048_10244": 200, "init7_s2_2048_10245": 200, "init7_s2_2048_10246": 200, "init7_s2_2048_10247": 200, "init7_s2_2048_2000": 196, "init7_s2_2048_512": 196, "init7_s2_256_256": 200, "init7_s2_2_2": 267, "init7_s2_32_32": 196, "init7_s2_32_48": 230, "init7_s2_4_4": 257, "init7_s2_4_5": 267, "init7_s2_6_8": [267, 268], "init7_s2_8_8": 257, "init7_s32768_": [267, 268], "init7_s3_": [267, 268], "init7_s3_0_1_2": [267, 268], "init7_s3_16_1024_1024": 196, "init7_s3_16_1024_64": 196, "init7_s3_16_64_1024": 196, "init7_s3_1_": [267, 268], "init7_s3_1_1_": [267, 268], "init7_s3_1_8192_4": [267, 268], "init7_s3_1_8192_6": [267, 268], "init7_s3_2_1024_": 257, "init7_s3_2_1024_1024": 200, "init7_s3_2_1024_102410": 200, "init7_s3_2_1024_102411": 200, "init7_s3_2_1024_102412": 200, "init7_s3_2_1024_102413": 200, "init7_s3_2_1024_102414": 200, "init7_s3_2_1024_102415": 200, "init7_s3_2_1024_10242": 200, "init7_s3_2_1024_10243": 200, "init7_s3_2_1024_10245": 200, "init7_s3_2_1024_10246": 200, "init7_s3_2_1024_10247": 200, "init7_s3_2_1024_10248": 200, "init7_s3_2_1024_10249": 200, "init7_s3_2_1024_2000": 196, "init7_s3_2_1024_512": 196, "init7_s3_4_1024_1024": 200, "init7_s3_4_1024_512": 200, "init7_s49152_": [267, 268], "init7_s4_2_1024_": [196, 257], "init7_s4_2_1024_2_512": 200, "init7_s4_2_1_1024_1024": [196, 257], "init7_s4_2_2_1024_1024": 200, "init7_s4_2_2_1024_10243": 200, "init7_s4_2_2_1024_256": 200, "init7_s4_2_2_1024_2562": 200, "init7_s4_2_2_1024_2563": 200, "init7_s4_2_2_1024_2564": 200, "init7_s4_2_2_1024_512": 200, "init7_s4_2_2_1024_5122": 200, "init7_s4_2_2_1024_5123": 200, "init7_s4_2_2_512_1024": 200, "init7_s4_2_2_512_10243": 200, "init7_s4_2_2_8_4": 267, "init7_s8192_": [267, 268], "init7_s8192_2": 268, "init7_s_": [200, 267], "init7_s_0": [196, 230, 267, 268], "init7_s_1": [196, 230, 267, 268], "init7_s_1024": 196, "init7_s_3": 227, "init7_s_4": 227, "init_0_detach_": [267, 268], "init_0_i": [231, 267, 268], "init_0_x": [267, 268], "init_0_zeros_lik": [267, 268], "init_1_ones_lik": [267, 268], "initi": [10, 12, 18, 20, 55, 63, 64, 65, 66, 67, 68, 69, 70, 92, 93, 109, 115, 118, 119, 122, 135, 136, 137, 142, 148, 193, 196, 198, 200, 202, 214, 219, 220, 222, 228, 230, 232, 238, 247, 249, 265, 267, 268], "initia": [196, 197, 228, 255], "initializer_rang": [214, 219, 220, 222, 230, 238], "initializerinfo": 135, "initializers_dict": [135, 247], "initializers_dict_sourc": 135, "initiliaz": 135, "inlin": [6, 55, 109, 110, 115, 135, 210, 224, 227, 231, 235, 236, 247], "inline_cal": 203, "inline_call_": 203, "inline_funct": 135, "inline_local_funct": 228, "inline_model_proto": 6, "inline_user_function_return": 203, "inlinedtensorsvector": [267, 268], "inner": [93, 207, 210, 219, 242, 248], "inner_fn": 210, "inp": [196, 227, 229, 235, 237], "inplac": [6, 20, 95, 108, 109, 117, 119, 130, 135, 139, 143, 212, 214, 221, 224, 225, 229, 231, 232, 233, 236, 237, 239, 258, 264, 271], "inplace_op": 93, "inplaceadd": [106, 107, 213], "inplaceadd2": [106, 107], "inplaceadd_mul": [106, 107], "inplacecloneadd_": [106, 107, 267, 268, 269, 270], "inplacesetitemellipsis_1": [106, 107], "inplacesetitemellipsis_2": [106, 107], "inplacesetitemmask": [106, 107], "inplacesetitemsquar": [106, 107], "inplacesetitemsquareadd": [106, 107], "inplacesetitemsquareadd2": [106, 107], "input": [10, 12, 18, 19, 21, 51, 55, 60, 62, 71, 84, 87, 92, 93, 95, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 122, 123, 128, 135, 138, 139, 140, 142, 144, 146, 152, 164, 167, 170, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 247, 249, 255, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271], "input0": [92, 93, 196, 200, 204], "input1": [92, 93, 196, 200, 204], "input10": [196, 200], "input11": [196, 200], "input12": [196, 200], "input13": [196, 200], "input14": 200, "input15": 200, "input16": 200, "input17": 200, "input18": 200, "input19": 200, "input2": [92, 93, 196, 200, 204], "input20": 200, "input21": 200, "input22": 200, "input23": 200, "input24": 200, "input25": 200, "input26": 200, "input27": 200, "input28": 200, "input29": 200, "input3": [92, 93, 196, 200, 204], "input30": 200, "input31": 200, "input32": 200, "input33": 200, "input34": 200, "input35": 200, "input36": 200, "input37": 200, "input38": 200, "input39": 200, "input4": [92, 93, 196, 200, 204], "input5": [196, 200, 204], "input6": [196, 200], "input7": [196, 200], "input8": [196, 200], "input9": [196, 200], "input_": [71, 93, 128], "input_1": 93, "input_2": 93, "input_3": 93, "input_arg": 135, "input_cach": [122, 123, 222], "input_cache_class": 123, "input_dim": [121, 124, 125, 126, 195, 196, 197, 241, 242, 253], "input_dim_0": 204, "input_dim_2": 204, "input_dtyp": [95, 214], "input_fil": 58, "input_i": 62, "input_id": [107, 122, 123, 194, 197, 214, 219, 220, 222, 228, 230, 238, 257, 267, 268, 269, 270], "input_index": [135, 142], "input_kind": [122, 123], "input_kwarg": 135, "input_layernorm": [197, 214, 219, 220, 238], "input_mask": [194, 257], "input_nam": [51, 55, 60, 92, 93, 95, 97, 101, 109, 113, 115, 135, 139, 142, 191, 197, 207, 209, 210, 230, 247, 249, 268], "input_rank": [267, 268], "input_s": [95, 240], "input_scal": 95, "input_shap": [214, 267, 268, 269, 270], "input_tensor": [113, 203, 205, 207], "input_typ": 140, "input_x": 62, "inputs2": [60, 214, 218, 219, 220, 230, 238], "inputs_as_dict": 118, "inputs_as_tupl": [122, 123], "inputs_emb": [122, 219], "inputs_from_onnx_model": [119, 196], "inputs_nam": 193, "inrl": 197, "insert": [108, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 206, 214, 232, 249], "insert_and_remove_nod": [135, 207], "insert_at": [135, 142], "insert_contiguous_between_transpose_and_view": 108, "insert_posit": 135, "insert_type_promotion_nod": 207, "insid": [115, 130, 247, 264], "insignific": [144, 156], "inspect": [138, 142, 198, 203, 207, 249, 253, 265, 267, 268, 269, 270], "inspir": [225, 228, 233], "inst": [196, 204, 210], "instal": [9, 92, 93, 192, 201, 212, 264], "install_generation_tagging_init": 242, "instanc": [60, 62, 93, 107, 115, 116, 117, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 196, 200, 204, 206, 217, 222, 228, 247, 248, 249], "instance_norm": 95, "instanceof": 117, "instead": [51, 60, 62, 93, 107, 109, 115, 142, 191, 196, 199, 206, 234, 236, 238, 249, 265], "instruct": [115, 122, 210, 212, 213, 216, 222, 228, 230, 232, 238, 239, 258, 271], "int": [3, 4, 6, 9, 10, 12, 15, 17, 18, 19, 20, 21, 26, 51, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 92, 93, 94, 95, 97, 100, 101, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 135, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 199, 200, 203, 205, 206, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 247, 249, 253, 267, 268, 269, 270], "int32": [61, 206, 267, 268, 269, 270], "int64": [93, 138, 166, 193, 196, 197, 198, 200, 201, 204, 207, 210, 214, 218, 219, 220, 222, 226, 227, 228, 229, 230, 237, 238, 249, 255, 257, 267, 268, 269, 270], "int64_0_7_cast": [267, 268], "int64_0_cast": [267, 268], "int64_1_5_cast": [267, 268], "int64_1_cast": [267, 268], "int64_m1_1d": [267, 268], "int64_m1_1d_3": [267, 268], "int_bin": 93, "int_oo": [215, 216, 227, 229, 235, 237, 268], "int_out": 93, "int_scalar": 93, "int_scalar_out": 93, "int_tensor": 93, "int_tensor_out": 93, "int_to_tensor": 60, "integ": [12, 60, 62, 110, 117, 135, 139, 142, 215, 218, 247, 266, 267, 268, 269, 270], "integr": [62, 210], "intel": 194, "intercept": 247, "intercept_": [209, 236], "interest": [92, 93, 243, 245], "intermedi": [51, 93, 115, 135, 196, 204, 216, 218, 219, 246, 247], "intermediate_s": [121, 124, 125, 126, 194, 196, 197, 214, 219, 220, 222, 230, 238, 241, 242, 253, 257], "intern": [210, 219, 234, 267, 268, 269, 270], "interpol": [95, 267, 268, 269, 270], "interpolation_mod": 95, "interpret": [9, 92, 93, 109, 135, 137, 203, 207, 247, 267, 268], "interpretermodul": 228, "intial": [135, 247], "intlist": 93, "intlist_out": 93, "introduc": [95, 109, 144, 158, 204, 210, 217, 221, 224, 228, 229, 231, 237, 249, 261], "inv_freq": 214, "inv_freq_expand": 214, "invalid": [109, 267, 268], "invalid_argu": 267, "invalid_graph": [267, 268], "invers": [93, 95], "invert": 95, "investig": [9, 135, 137, 177, 240], "investigate_help": [9, 109], "investigate_onnxruntime_issu": 21, "invgestig": 21, "invok": 206, "involv": [5, 26, 132, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 249], "io": [197, 203, 205, 207, 210, 214, 264], "io_nam": 135, "iopath": [79, 80], "ipc": 264, "ipynb": [193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "iqi": 268, "iqu": 196, "ir": [18, 135, 136, 207, 213, 240, 266], "ir_verison": 18, "ir_vers": [18, 21, 135, 138, 193, 198, 199, 202, 213, 232, 233, 247], "irfft": 93, "irfft2": 93, "irfftn": 93, "is_attr_typ": [203, 207], "is_avail": [242, 265], "is_azur": 9, "is_caus": 96, "is_compil": 115, "is_complex": 93, "is_conj": 93, "is_const": [135, 142, 247, 249], "is_constant_or_attribut": 135, "is_constant_scalar": [142, 249], "is_custom": 115, "is_dimens": [135, 138, 247], "is_dimension_in": 92, "is_dimension_out": 92, "is_distribut": 93, "is_dynamic_shap": 135, "is_empty_lay": 217, "is_exact_same_const": 135, "is_export": 222, "is_floating_point": 93, "is_fx_trac": 242, "is_grad_en": 240, "is_infer": 93, "is_initi": 242, "is_leaf": 93, "is_lm": 60, "is_neg": 93, "is_node_support": 94, "is_ok": 115, "is_output": [142, 249], "is_registered_op": 203, "is_same_s": 93, "is_scalar_nan": 210, "is_script": 242, "is_sequ": [135, 247], "is_sign": 93, "is_sparse_ani": [203, 207], "is_sparse_compress": 207, "is_sparse_coo": 207, "is_support": 94, "is_us": 142, "is_used_by_subgraph": [142, 249], "is_used_more_than_onc": [138, 142, 198, 249], "is_used_only_bi": [142, 249], "is_valid_typ": [203, 207], "is_value_typ": [203, 207], "is_vulkan_avail": 93, "is_wrap": 112, "isck": 255, "isclass": [203, 207], "isidentifi": [132, 135], "isin": [93, 95], "isin_tensor_tensor": 95, "isinf": [93, 95, 130], "isinst": [117, 193, 195, 197, 203, 207, 210, 222, 224, 230, 232, 238, 242, 267, 268, 269, 270], "isnan": [93, 95, 195, 210], "isnb": 228, "isneginf": 93, "isol": 210, "isort": 264, "isposinf": 93, "isreal": 93, "isscalar": 113, "issu": [77, 95, 108, 203, 214, 217, 230, 232, 234, 240, 248, 253, 264, 267, 268, 269, 271], "issubclass": [203, 207], "issuecom": [203, 204, 241], "issuerunn": 66, "istft": 93, "isvo": 196, "item": [93, 95, 109, 112, 195, 196, 203, 204, 205, 206, 207, 210, 214, 217, 218, 219, 222, 224, 232, 267, 268, 269, 270], "iter": [4, 9, 18, 19, 56, 57, 60, 83, 85, 87, 92, 93, 111, 120, 122, 123, 130, 135, 137, 142, 194, 195, 200, 201, 202, 204, 209, 222, 228, 236, 249, 261, 267, 268], "iter_nod": 142, "itertool": [195, 203, 205, 207], "its": [115, 117, 127, 135, 142, 204, 210, 219, 230, 238, 248, 249, 268, 270], "itself": [18, 93, 115, 143, 271], "ityp": [15, 135, 139], "ix": [], "ix2": 123, "ix5x3x336x336": 123, "ixgl": 197, "iygr": 196, "iyzc": 228, "izsi": 228, "j": [193, 267, 268], "j_tensor": [267, 268], "jamba": 122, "jcfr": 196, "jcq": 93, "jfby": 196, "jhbx": 228, "jhw": [], "jie": 202, "jiqr": 197, "jit": [109, 213, 230, 232, 238, 266, 267, 268], "jit_compile_runtime_wrapp": 242, "jkjk": 196, "jkwq": 197, "jnc": [], "job": 9, "join": [195, 196, 200, 201, 203, 207], "jqqp": 196, "jqrl": 196, "js_profil": 201, "js_profile_to_datafram": 201, "json": [20, 122, 214, 219, 220, 230, 238], "jtvv": 255, "jupyt": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 264], "jurp": 196, "just": [9, 15, 105, 109, 113, 115, 116, 135, 144, 146, 154, 193, 195, 229, 237, 247], "jwnm": 196, "jzpu": 196, "k": [95, 96, 109, 112, 123, 193, 195, 196, 203, 205, 207, 210, 217, 222], "k_proj": [197, 238, 255, 257], "kaaa": 197, "kaqg": [196, 197, 255], "kayer": 123, "kc": [217, 223], "kcdg": 196, "kcza": 197, "kdc": 267, "keep": [3, 10, 15, 57, 92, 93, 109, 115, 135, 142, 208, 217, 218, 219, 228, 247], "keep_aspect_ratio_polici": [267, 268], "keep_const": 135, "keep_empty_featur": 210, "keep_model_forward": 222, "keep_more_rec": 57, "keepdim": [95, 97, 101, 139, 144, 158, 200, 204, 210, 214, 217, 223, 224, 231, 232, 267, 268, 269, 270], "keepoutput": [10, 193], "keepyieldop": 10, "kei": [4, 15, 18, 57, 60, 96, 115, 128, 135, 142, 203, 205, 217, 222, 228, 240, 242, 267, 268, 269, 270], "kept": [4, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 249], "kernel": [8, 93, 183, 192, 193, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 228, 258, 264, 267, 268, 269, 270, 271], "kernel_s": [95, 193], "kernel_shap": [193, 207], "key2": 228, "key_cach": [214, 217, 219, 220, 222, 223, 230, 238], "key_stat": [214, 217], "key_value_pair": [217, 222], "keyentri": 217, "keyword": [55, 60, 109, 237], "kgfz": 196, "kgsp": 228, "kii": [], "kind": [71, 109, 115, 135, 156, 194, 248, 252, 266, 271], "kkkk": [196, 197], "kknn": 196, "kkxp": 255, "kl_div": 93, "kmq": [], "kn": 93, "knn": 210, "knn1": 210, "knn11": 210, "knn5": 210, "knn50": 210, "knn_imput": 210, "know": [9, 130, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 204, 225, 226, 228, 247, 249, 271], "known": [57, 60, 105, 109, 113, 115, 132, 135, 139, 142, 193, 228, 247, 249], "known_shap": 247, "known_typ": [267, 268], "kron": 93, "kthvalu": 93, "kvnl": 197, "kvre": 228, "kw_input": 60, "kw_inputs2": 60, "kwarg": [3, 4, 12, 15, 26, 55, 60, 62, 92, 93, 94, 95, 97, 105, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 135, 136, 142, 194, 196, 197, 204, 206, 208, 210, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 238, 247, 253, 267, 268, 269, 270], "kwargsvar": 210, "kwte": [196, 197], "kzod": 197, "l": [96, 206, 267, 268, 269, 271], "l1": 12, "l108": 95, "l1_loss": [93, 95], "l1_weight": 12, "l1loss": 204, "l2": [12, 209, 236], "l2_weight": 12, "l5965": 230, "l6": 122, "l__self___mlp_0": 232, "l__self___mlp_1": 232, "l_attention_mask_": 255, "l_hidden_states_": 255, "l_position_ids_": 255, "l_self_modules_layers_modules_0_parameters_bias_": 93, "l_self_modules_layers_modules_0_parameters_weight_": 93, "l_self_modules_layers_modules_2_parameters_bias_": 93, "l_self_modules_layers_modules_2_parameters_weight_": 93, "l_self_modules_neuron_modules_linear_parameters_bias_": 208, "l_self_modules_neuron_modules_linear_parameters_weight_": 208, "l_x_": [93, 208, 232], "label": [10, 12, 271], "label_nam": 12, "label_smooth": 95, "lambda": [9, 21, 92, 93, 194, 195, 196, 203, 204, 207, 210, 217, 219, 222, 225, 233, 242, 267, 268, 269, 270], "languag": 60, "laptop": [194, 203, 205, 207], "larg": [71, 83, 92, 93, 136, 192, 194, 195, 203, 205, 207, 222, 244, 249, 264], "large_model": [55, 87, 92, 93, 109, 115, 135, 230, 249], "large_onx": 230, "larger": 207, "largest": [95, 210], "last": [4, 21, 51, 56, 115, 116, 193, 203, 205, 206, 207, 210, 219, 247, 253, 261, 269, 270], "last_error": 115, "last_hidden_st": 219, "last_issu": 21, "later": [55, 57, 109, 115, 135, 136], "latest": 264, "latter": [60, 62, 107], "launch": [246, 263], "layer": [61, 71, 92, 93, 193, 194, 195, 197, 204, 209, 214, 217, 219, 220, 236, 238, 249, 257], "layer_idx": [214, 217], "layer_norm": [95, 228, 230, 238], "layer_norm13": 230, "layer_norm22": 230, "layer_norm4": 230, "layer_norm_1": [228, 230, 238], "layer_norm_2": [230, 238], "layer_norm_ep": [230, 238], "layer_seq_length": 217, "layernorm": [128, 144, 154, 188, 190, 228, 230, 238, 257], "layernormalizat": 228, "layernormalizationpattern": [142, 144, 154, 228, 230, 249, 257, 261], "layernormalizationscal": 144, "layernormalizationscalepattern": [142, 144, 154, 228, 249, 261], "layout": [95, 101, 214, 218, 219, 269, 270], "lazi": [203, 210], "lcm": 93, "lcm_": 93, "ldexp": 93, "le": [93, 95, 214, 219, 227, 235, 269], "le_": 93, "le_1": 269, "lead": 219, "leaki": 95, "leaky_relu": [93, 95], "leaky_relu_": [93, 95], "leaky_relu_backward": [93, 95], "leakyrelu": [144, 153, 155], "leakyrelupattern": [142, 144, 153, 228, 249, 261], "learn": [9, 15, 55, 192, 193, 197, 198, 208, 211, 258, 264, 271], "least": [115, 210, 222], "leav": [193, 236, 249, 268, 270], "led": 270, "left": [135, 139, 146, 153, 158, 181, 193, 195], "left_first": 155, "legend": 195, "len": [113, 191, 193, 194, 196, 197, 200, 203, 204, 205, 206, 207, 210, 217, 222, 230, 238, 242, 267, 268, 269, 270], "length": [56, 71, 96, 101, 117, 195, 217, 220, 228, 268], "lerg": 136, "lerp": 93, "lerp_": 93, "less": [93, 95, 101, 130, 135, 194, 221, 228, 231, 267, 268, 271], "less_equ": 93, "less_nod": 169, "lessorequ": [95, 130, 204], "let": [55, 109, 115, 117, 135, 137, 144, 152, 193, 194, 195, 196, 197, 202, 203, 204, 205, 207, 208, 209, 210, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249], "letter": 15, "level": [18, 21, 55, 56, 92, 93, 109, 111, 115, 127, 135, 137, 224, 231, 247, 267, 268, 270], "leverag": [194, 204, 247, 248, 271], "lgamma": 93, "lgamma_": 93, "li": 228, "liabil": 252, "liabl": 252, "lib": [93, 105, 196, 203, 204, 206, 207, 209, 210, 214, 219, 224, 232, 236, 237, 238, 247, 253, 264, 268, 269, 270], "libprotobuf": 264, "librari": [8, 196, 210, 225, 226, 233, 234, 247, 261], "licens": 251, "lift": 93, "lift_fresh": 93, "lift_fresh_copi": [269, 270], "lift_subgraph_as_modul": 203, "lifted_tensor_0": [214, 269, 270], "lifted_tensor_2": [269, 270], "lifted_tensor_3": [269, 270], "lifted_tensor_4": [269, 270], "lifted_tensor_5": [268, 269, 270], "lifted_tensor_6": [269, 270], "light_api": 193, "lighten": [245, 259], "lighter": 259, "like": [9, 15, 95, 115, 130, 135, 204, 210, 218, 219, 220, 221, 224, 225, 226, 228, 230, 231, 232, 233, 234, 247, 267, 268, 269, 270], "limit": [15, 18, 55, 109, 115, 135, 207, 247, 252], "linagl_vector_norm": 95, "linalg_choleski": 93, "linalg_cond": 93, "linalg_cross": 93, "linalg_eigh": 93, "linalg_eigv": 93, "linalg_eigvalsh": 93, "linalg_inv": 93, "linalg_ldl_factor": 93, "linalg_lu_factor": 93, "linalg_matmul": 93, "linalg_matrix_norm": 93, "linalg_matrix_pow": 93, "linalg_matrix_rank": 93, "linalg_multi_dot": 93, "linalg_norm": 93, "linalg_pinv": 93, "linalg_slogdet": 93, "linalg_solv": 93, "linalg_solve_ex": 93, "linalg_svd": 93, "linalg_svdv": 93, "linalg_tensorinv": 93, "linalg_tensorsolv": 93, "linalg_vand": 93, "linalg_vecdot": 93, "linalg_vector_norm": 93, "line": [4, 9, 12, 59, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 142, 193, 195, 196, 200, 207, 210, 218, 219, 224, 230, 232, 240, 247, 249, 251, 253, 261, 267, 268, 269, 270], "linear": [92, 93, 95, 109, 112, 113, 128, 192, 197, 203, 204, 205, 206, 207, 208, 211, 212, 214, 215, 219, 224, 228, 230, 232, 238, 239, 247, 249, 253, 258, 267, 268, 269, 270, 271], "linear1": 247, "linear2": 247, "linear_1": [128, 197, 207, 214, 224, 228, 230, 232, 238, 247, 249], "linear_10": [230, 238], "linear_11": [230, 238], "linear_12": [230, 238], "linear_2": [128, 197, 207, 214, 228, 230, 238], "linear_3": [197, 214, 228, 230, 238], "linear_4": [197, 214, 228, 230, 238], "linear_5": [197, 214, 228, 230, 238], "linear_6": [197, 214, 228, 230, 238], "linear_7": [214, 228, 230, 238], "linear_8": [214, 228, 230, 238], "linear_9": [230, 238], "linear_bia": [269, 270], "linear_model": [209, 236], "linear_unpack": 93, "linear_unpack_fp16": 93, "linear_weight": [269, 270], "linearli": 60, "linearregress": [209, 236], "linecach": [203, 207], "lineno": [142, 203, 207, 214, 232, 249], "link": [194, 210, 264], "linspac": [93, 95], "linux": [9, 264], "linux_cuda": 264, "list": [3, 4, 6, 9, 10, 12, 15, 18, 20, 21, 26, 51, 55, 56, 57, 58, 59, 60, 62, 71, 87, 92, 93, 94, 95, 96, 97, 100, 101, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 127, 128, 130, 135, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 210, 217, 219, 221, 222, 224, 225, 226, 231, 232, 242, 243, 245, 247, 249, 261, 266, 267, 268, 269, 270, 271], "list_kei": 135, "list_torch_tensor": [267, 268], "listcomp": 242, "listdir": [196, 207], "littl": 217, "ljdz": 228, "llama": [61, 71, 84, 85, 86, 92, 93, 119, 121, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 222, 241, 242, 253, 255, 258, 271], "llama_debug": 196, "llama_debug_0": 196, "llama_help": [9, 113, 120, 196, 197, 242, 253], "llama_onnxrt": 196, "llama_onnxrt_0": 196, "llamaconfig": [121, 122, 194, 222, 253], "llamaforcausallm": 222, "llamamodel": [194, 195, 253], "llamamodelwrapp": 253, "llbk": 255, "lldf": 196, "llm": [60, 122, 123, 128, 212, 213, 216, 217, 218, 222, 227, 235, 236, 239, 258, 271], "llm_dummy_input": 9, "llm_model_help": [9, 120], "llm_model_setup": [9, 120], "llm_optim": [9, 188], "llm_pattern": [9, 177], "llminputkind": [122, 123], "lm_head": [214, 219, 238], "lmu": 249, "ln_node": 154, "lo": 267, "load": [19, 20, 21, 51, 56, 60, 92, 128, 136, 183, 191, 196, 197, 200, 203, 205, 210, 230, 238, 240, 241, 242, 249, 262], "load_attr": 203, "load_diabet": 204, "load_large_initi": 136, "loc": 247, "local": [51, 55, 92, 93, 95, 109, 110, 112, 115, 135, 142, 177, 178, 192, 204, 210, 212, 214, 224, 227, 228, 231, 232, 235, 236, 249, 264, 267, 268], "local_aot_ort": [196, 203, 205], "local_domain": 135, "local_funct": [51, 135, 224, 230, 231, 267, 268], "locat": [135, 193], "lod": 268, "log": [12, 93, 95, 111, 130, 196, 197, 203, 205, 207, 210, 219, 220, 224, 230, 232, 242, 251, 267, 268, 269, 270], "log10": 93, "log10_": 93, "log1p": 93, "log1p_": 93, "log2": 93, "log2_": 93, "log_": 93, "log_ndtr": 93, "log_norm": 93, "log_normal_": 93, "log_pattern_optim": 142, "log_severity_level": [21, 210], "log_sigmoid_backward": 93, "log_sigmoid_forward": 93, "log_softmax": 93, "log_softmax_int": 95, "log_verbosity_level": [21, 210], "logaddexp": 93, "logaddexp2": 93, "logcumsumexp": 93, "loggingloggervari": 196, "logic": [60, 95, 247], "logical_and": 93, "logical_and_": 93, "logical_not": [93, 95, 210], "logical_not_": 93, "logical_or": 93, "logical_or_": 93, "logical_xor": 93, "logical_xor_": 93, "logit": [93, 214, 219, 230, 238], "logit_": 93, "logit_backward": 93, "logsoftmax": [95, 130, 249], "logspac": 93, "logsumexp": 93, "logx": [203, 205], "long": [4, 9, 194, 207, 249, 254, 257], "long_factor": [214, 219, 220], "long_output": 249, "long_test": 9, "longer": [127, 271], "longrop": [214, 219, 220], "longrope_frequency_upd": [214, 219], "look": [10, 20, 111, 115, 135, 136, 137, 176, 177, 191, 204, 217, 224, 225, 226, 228, 230, 232, 233, 234, 247, 248, 261], "look_for_pattern": 191, "lookup": [135, 247], "loop": [4, 57, 109, 203, 204, 205, 207, 210, 212, 224, 226, 239, 258, 266, 267, 268, 271], "loop_iter": 242, "lose": [4, 218], "loss": [10, 12, 203, 204, 209, 230, 236, 238], "loss_fn": [209, 236], "loss_funct": 204, "loss_help": [9, 11], "loss_nam": 12, "lost": [212, 221, 227, 229, 235, 239, 258, 271], "low": [92, 93, 249], "lower": [95, 194, 195, 207], "lr": [204, 209, 236], "lrwz": 196, "lstm": 93, "lstm_cell": 93, "lstm_data_impl": 93, "lstm_impl": 93, "lt": [93, 95, 219, 267, 268, 269], "lt_": 93, "lt_scalar": 267, "lu_solv": 93, "lx": [107, 267, 268, 269, 270], "lx_0": [267, 268, 269, 270], "lx_1": [267, 268, 269, 270], "lx_2": 268, "lz": 267, "m": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 93, 95, 142, 193, 195, 196, 210, 219, 240, 241, 242, 244, 245, 259, 264], "m1": [142, 198], "m2": [142, 198], "m2col": 193, "m_opset": 199, "m_out": 93, "ma": [195, 197, 216, 228], "mabq": 255, "mach": 261, "machin": [4, 57, 194, 195, 240], "made": [71, 92, 93, 119, 127, 135, 137, 142, 197, 210, 228, 249, 264], "mai": [9, 60, 95, 109, 110, 112, 113, 117, 130, 135, 142, 194, 196, 204, 210, 212, 216, 217, 218, 219, 221, 224, 228, 229, 231, 232, 237, 240, 247, 248, 249, 265, 267, 268, 269, 270, 271], "main": [9, 57, 59, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 95, 115, 121, 135, 142, 214, 219, 220, 230, 238, 246, 247, 248, 259, 268, 270], "main_graph": [232, 233], "main_loop": 242, "main_opset": [135, 142, 200, 249], "main_spy_phi2": 9, "main_spy_phi35_vis": 9, "main_spy_phi35_vision_dummi": 9, "maintain": 271, "make": [15, 57, 58, 60, 102, 109, 110, 111, 115, 117, 134, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 196, 210, 212, 215, 217, 219, 225, 228, 230, 238, 247, 249, 259, 261], "make_aot_ort": [127, 196, 203, 205], "make_attribut": 207, "make_boxed_func": [203, 204, 241], "make_config": [4, 195], "make_copi": 102, "make_dataframe_from_benchmark_data": 4, "make_dynamic_cach": [214, 217, 219, 220, 222, 223, 230, 238], "make_dynamic_input": 60, "make_dynamic_object": 135, "make_error_messag": 210, "make_export_input": 60, "make_fake_input": [207, 253], "make_fe": 60, "make_fx": [210, 219], "make_fx_trac": [210, 219], "make_graph": [21, 138, 198, 202], "make_hash": 15, "make_initi": [135, 207, 247, 249, 267, 268], "make_kei": 135, "make_legend": 195, "make_local_funct": [135, 228], "make_model": [21, 92, 93, 138, 198, 202, 249], "make_model_funct": 138, "make_my_model": 138, "make_new_dynamic_shap": 135, "make_nn_module_with_cal": 110, "make_nod": [21, 114, 135, 138, 142, 198, 202, 204, 207, 226, 227, 228, 247, 249, 257, 267, 268], "make_node_check_opset": [142, 249], "make_node_extend": 198, "make_nodes2": [267, 268], "make_opsetid": [21, 138, 198, 202], "make_pattern_from_onnx": 166, "make_quantized_cell_params_fp16": 93, "make_regress": [209, 236], "make_shape_from_result": [135, 247, 257], "make_subset_build": 135, "make_tensor_input": [135, 138, 247, 249, 267, 268], "make_tensor_output": [135, 138, 247, 249, 268], "make_tensor_sequence_input": 135, "make_tensor_value_info": [21, 138, 198, 202], "make_tensor_value_info_from_nam": 135, "make_torch_tensor_from_np_arrai": 135, "make_undefined_dimens": [109, 210], "makeconfig": 60, "makedictidxmap": 210, "makenewweight": 210, "mamba": 122, "mambacach": [62, 230, 238], "manag": [9, 271], "mandatori": 247, "mani": [15, 56, 74, 75, 76, 77, 78, 79, 80, 81, 135, 139, 142, 183, 188, 195, 196, 209, 210, 212, 217, 219, 223, 236, 239, 240, 247, 258, 261, 266, 267, 268, 269, 270, 271], "manipul": [247, 264], "map": [94, 105, 109, 111, 112, 113, 115, 135, 142, 153, 181, 195, 210, 247], "mappingkei": 217, "margin_ranking_loss": 93, "mark": [135, 221, 231, 267], "mark_dynam": [221, 231], "mark_non_differenti": 242, "mark_static_address": [230, 238], "marker": [135, 249], "mask": [71, 95, 97, 194, 195, 210, 228, 267, 268, 269, 270], "mask2": 228, "mask_": 210, "mask_fit_x": 210, "mask_fit_x_col": 210, "mask_output": [92, 93, 135], "mask_sum": 210, "masked_fil": [93, 96, 97, 113, 117, 196, 197, 214, 219, 228, 230, 238, 257], "masked_fill2": 228, "masked_fill_": 93, "masked_fill_1": 228, "masked_fill__scalar": 95, "masked_fill_scalar": [95, 230], "masked_fill_tensor": 95, "masked_scatt": 95, "masked_select_backward": 93, "maskedscatterndofshap": [26, 45, 168, 170], "maskedshapescatternd": 170, "maskedshapescatterndpattern": [168, 170, 261], "masmm": 216, "match": [92, 93, 111, 115, 135, 138, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 196, 200, 202, 206, 207, 222, 228, 268, 270], "match_attentionpattern": 228, "match_batchnormalizationpattern": [228, 249], "match_batchnormalizationtrainingpattern": [228, 249], "match_biasgelupattern": 228, "match_biassoftmaxpattern": 228, "match_castcastbinarypattern": [228, 249], "match_castlayernormalizationcastpattern": [228, 249], "match_castopcastpattern": [228, 249], "match_castpattern": [228, 249], "match_clipclippattern": [228, 249], "match_computationcastopcastpattern": [228, 249], "match_convbiasnullpattern": [228, 249], "match_dropoutpattern": [228, 249], "match_expandbroadcastpattern": [228, 249], "match_expandpattern": [228, 249], "match_expandswappattern": [228, 249], "match_fastgelupattern": 228, "match_fusedconvpattern": 228, "match_fusedmatmuldivpattern": 228, "match_fusedmatmulpattern": 228, "match_fusedmatmultransposepattern": 228, "match_fusedmatmulx2pattern": 228, "match_geluerfpattern": 228, "match_geluortpattern": 228, "match_gelupattern": [228, 249], "match_gemmtransposepattern": [228, 249], "match_identitypattern": [228, 249], "match_index": [200, 249], "match_input_paramet": [112, 247], "match_layernormalizationpattern": [228, 249], "match_layernormalizationscalepattern": [228, 249], "match_leakyrelupattern": [228, 249], "match_matmuladdpattern": [228, 249], "match_matmulreshape2of3pattern": [228, 249], "match_model": 166, "match_mulmulmatmulpattern": [228, 249], "match_mulmulmulscalarpattern": [228, 249], "match_ortbatchnormalizationtrainingpattern": 228, "match_pattern": [142, 153, 177, 178, 181, 202, 207], "match_quickgelupattern": 228, "match_reducereshapepattern": [228, 249], "match_reducesumnormalizepattern": [228, 249], "match_reshape2of3pattern": [228, 249], "match_reshapegemmpattern": 228, "match_reshapematmulreshapepattern": [228, 249], "match_reshapepattern": [228, 249], "match_reshapereshapebinarypattern": [228, 249], "match_reshapereshapepattern": [228, 249], "match_rotaryconcatpartpattern": [228, 249], "match_samechildrenpattern": [228, 249], "match_sequenceconstructatpattern": [228, 249], "match_simplifiedlayernormalizationpattern": 228, "match_skiplayernormalizationpattern": 228, "match_sliceslicepattern": [228, 249], "match_slicessplitpattern": [228, 249], "match_softmaxcrossentropylosscastpattern": [228, 249], "match_softmaxgradpattern": 228, "match_splitconcatpattern": [228, 249], "match_squeezeunsqueezepattern": [228, 249], "match_sub1mulpattern": [228, 249], "match_switchorderbinarypattern": [200, 228, 249], "match_switchreshapeactivationpattern": [228, 249], "match_transposeequalreshapepattern": [228, 249], "match_transposefusedmatmulbpattern": 228, "match_transposematmulpattern": [228, 249], "match_transposereshapematmulpattern": [228, 249], "match_transposereshapetransposepattern": [228, 249], "match_transposetransposepattern": [228, 249], "match_unsqueezeequalpattern": [200, 228, 249], "match_unsqueezeunsqueezepattern": [200, 228, 249], "matchresult": [144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 202, 249], "materi": [203, 207], "math": [9, 96, 117, 144, 188, 193, 210], "matm": 197, "matmul": [95, 113, 139, 144, 155, 177, 178, 186, 188, 190, 196, 197, 198, 200, 204, 214, 228, 230, 232, 238, 247, 249, 255, 257, 267, 268], "matmul2": 228, "matmul_1": [228, 257], "matmul_131": 255, "matmul_132": 255, "matmul_133": 255, "matmul_169": 255, "matmul_1_output_0": 255, "matmul_2": [197, 228, 257], "matmul_3": [228, 257], "matmul_383": 197, "matmul_399": 197, "matmul_4": 257, "matmul_400": 197, "matmul_425": 197, "matmul_426": 197, "matmul_427": 197, "matmul_428": 197, "matmul_nod": 155, "matmul_output_0": 255, "matmuladd": 144, "matmuladdpattern": [92, 93, 142, 144, 155, 200, 228, 249, 261], "matmulreshape2of3": 144, "matmulreshape2of3pattern": [142, 144, 155, 200, 228, 249, 261], "matmulreshape2of3patternl__unsafe_view_3": 200, "matmulreshape2of3patternl_transpose_6": 200, "matmulreshape2of3patternl_transpose_8": 200, "matmulreshape2of3patternl_view_34": 200, "matplotlib": [9, 195, 201, 203, 205, 207, 264], "matric": 193, "matrix": [10, 12, 169, 170, 192, 198, 199, 209, 210, 211, 258, 271], "matrix_exp": 93, "matrix_exp_backward": 93, "matrix_pow": 93, "matter": [196, 218], "max": [15, 56, 92, 93, 95, 144, 147, 195, 197, 200, 203, 205, 207, 210, 214, 216, 217, 218, 219, 221, 222, 223, 228, 230, 231, 238, 242, 249, 268], "max_": [95, 97], "max_1": [214, 218, 219], "max_diff": [15, 56, 210, 227, 228, 235], "max_dim": 95, "max_exec": [9, 203, 205, 207], "max_it": [135, 137, 142, 204, 209, 236, 249, 261], "max_length": 222, "max_norm": 95, "max_oth": 95, "max_pool1d": 95, "max_pool2d": [95, 203, 205, 207], "max_pool2d_1": 207, "max_pool3d": 95, "max_position_embed": [121, 124, 125, 126, 194, 196, 197, 214, 219, 220, 222, 230, 238, 241, 242, 253, 257], "max_t": 95, "max_tim": [9, 92, 93, 200, 202, 203, 205, 207, 228, 249], "max_token_id": [123, 222], "max_unpool2d": 93, "max_unpool3d": 93, "max_val": 95, "maximum": [15, 56, 93, 95, 135, 137, 142, 203, 205, 207, 209, 210, 236], "maxmatch": [200, 228, 249], "maxpool": [95, 207], "maxsplit": [269, 270], "maxtim": [203, 205, 207], "mayb": [204, 219], "maybe_handle_decomp": 203, "maybe_mark_dynam": [221, 231], "maybe_run_autograd": 210, "mb": [203, 205, 207, 211, 239, 258], "mdk": [], "mean": [4, 57, 93, 95, 113, 123, 130, 131, 135, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 196, 197, 203, 205, 207, 210, 214, 240, 247, 249], "mean_1": [196, 197, 214], "mean_2": [196, 197, 214], "mean_3": 214, "mean_4": 214, "mean_squared_error": [209, 236], "meant": [10, 51, 93, 240, 247], "measur": [9, 17, 19, 56, 87, 115, 192, 198, 201, 203, 205, 207, 211, 212, 239, 241, 242, 243, 245, 258, 259, 263, 271], "measure_tim": [9, 203, 205, 207], "mechan": 247, "median": 93, "medium": [71, 83, 86, 194, 195, 241, 242], "mem": [211, 239, 258], "mem_": 57, "member": 60, "memcpyfromhost": [26, 36], "memcpytohost": [26, 36], "memlock": 264, "memob": [203, 205, 207], "memori": [9, 17, 23, 56, 60, 92, 93, 192, 194, 195, 210, 219, 241, 242, 265], "memory_": 57, "memory_begin": 195, "memory_delta": 57, "memory_end": 195, "memory_format": [95, 101, 221, 231], "memory_gpu0_begin": 195, "memory_gpu0_end": 195, "memory_gpu0_mean": 195, "memory_gpu0_n": 195, "memory_gpu0_peak": 195, "memory_mean": 195, "memory_n": 195, "memory_peak": [9, 16, 56, 57, 195, 203, 205, 207], "memory_peak_plot": [203, 205, 207], "memoryspi": 17, "mention": 271, "merchant": 252, "merg": [57, 109, 135, 144, 147, 161, 162, 247, 252], "merge_allow": [92, 93, 135], "merge_benchmark_report": [57, 73], "merged_out": 210, "merged_strid": 210, "meshgrid": 93, "messag": [9, 109, 116, 117, 119, 135, 210, 234, 247, 259, 260, 261, 262, 263, 267, 268], "meta": [223, 267, 268], "meta_tensor": [203, 207], "meta_util": [203, 207], "metadata": [111, 135], "metadata_prop": [110, 135], "metadata_props_kei": 100, "metadata_props_valu": 100, "meth": 210, "meth__eq___": 97, "meth_clamp_max": 97, "meth_clamp_min": 97, "meth_eq": 97, "meth_numel": [97, 267, 268], "method": [9, 17, 21, 56, 87, 92, 93, 99, 109, 110, 115, 117, 134, 135, 136, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 203, 207, 210, 222, 236, 242, 247, 249, 265, 266, 267, 268, 271], "method_nam": 115, "methodnam": 9, "metric": [4, 19, 57, 209, 210, 236, 240], "metrics_context": 203, "mfrj": 196, "mhob": 196, "mi": 195, "microsoft": [181, 183, 188, 207, 214, 219, 220, 228, 230, 238, 264], "middl": [193, 203, 205, 207], "might": [135, 139, 142, 221, 228, 231, 247, 267, 268, 269, 270], "migrat": 264, "min": [15, 93, 95, 109, 123, 144, 147, 195, 203, 205, 207, 210, 215, 216, 217, 219, 222, 223, 228, 230, 238, 268], "min_": [95, 97], "min_cut_rematerialization_partit": 203, "min_eag": 195, "min_exec": [9, 203, 205, 207], "min_opset": [142, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 171, 173, 174, 176, 177, 178, 180, 181, 182, 184, 187, 190, 200, 249], "min_oth": 95, "min_t": 95, "min_val": 95, "mini": [115, 122, 212, 213, 216, 222, 228, 230, 238, 239, 258, 271], "mini_onnx_build": [9, 16, 207], "minilm": 122, "minim": 247, "minimum": [9, 15, 93, 95], "minimun": 9, "minionnxbuild": 18, "minut": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240], "miopen_batch_norm_backward": 93, "miq": [], "misc": [196, 269, 270], "miscellan": 251, "mish": 93, "mish_": 93, "mish_backward": 93, "mismatch": [135, 193, 220, 267, 268, 270], "miss": [4, 135, 196, 210, 234, 249, 253, 265, 267, 268], "missing_i": 210, "missing_valu": 210, "missing_x": 210, "mistral_help": [9, 120], "mistralconfig": 124, "mivh": 196, "miw": 196, "mix": [83, 195, 196, 241, 242, 244, 264], "mixtur": 12, "mjg": 247, "mk_fake_tensor": 207, "mkldnn": 93, "mkxo": 197, "ml": [130, 179, 199, 207, 261], "ml_dtype": [15, 251], "mlky": 196, "mllama": 122, "mlp": [92, 93, 197, 204, 214, 219, 220, 224, 232, 238, 249, 257], "mm": [196, 198, 204, 216, 247], "mm_1": 196, "mm_10": 200, "mm_11": 200, "mm_12": 200, "mm_13": 200, "mm_14": 200, "mm_15": 200, "mm_16": 200, "mm_17": 200, "mm_18": 200, "mm_19": 200, "mm_2": 196, "mm_20": 200, "mm_21": 200, "mm_3": 196, "mm_4": 196, "mm_5": 196, "mm_6": 196, "mm_8": 200, "mm_9": 200, "mm_node": 155, "mnjj": 197, "mnode": 186, "mod": [95, 109, 112, 130, 206, 210, 219, 224, 232, 269, 270], "mode": [56, 93, 95, 113, 144, 154, 193, 196, 203, 205, 206, 209, 210, 236, 267, 268, 269, 270], "model": [6, 8, 9, 15, 18, 19, 20, 21, 51, 55, 56, 57, 60, 61, 71, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 87, 92, 93, 94, 106, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 137, 138, 142, 143, 153, 166, 181, 183, 188, 191, 192, 193, 195, 198, 199, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 228, 236, 239, 241, 242, 243, 245, 246, 247, 248, 249, 251, 253, 254, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270], "model1": [119, 197], "model2": [119, 197], "model_cas": [9, 106, 213, 267, 268, 269, 270], "model_cl": 213, "model_contain": [9, 55, 109, 115, 135], "model_debug": 196, "model_input": 210, "model_nam": [56, 57, 60, 222, 240], "model_onnx": 207, "model_onnxrt": 196, "model_output": 221, "model_proto": [6, 197, 207, 232, 233, 234, 235, 236, 237], "model_run": [9, 16], "model_s": [203, 205, 207], "model_select": [209, 236], "model_task": 57, "model_typ": [214, 219, 220, 222, 230, 238], "modelcat": 218, "modelcontain": [55, 109, 115, 135, 136], "modeldf": 195, "modeldiagnoseoutput": 115, "modeling_llama": [194, 253], "modeling_output": 222, "modeling_phi": 257, "modeling_phi3": [214, 219, 220], "modeling_phi3_v": 9, "modeling_rope_util": [214, 219], "modelproto": [6, 8, 9, 10, 12, 15, 18, 19, 20, 21, 51, 55, 60, 87, 92, 93, 109, 111, 115, 119, 128, 130, 135, 136, 138, 142, 166, 191], "modelrunn": 60, "modeltakingdynamiccacheasinput": [217, 223], "modelwithcontrolflow": 224, "modelwithcontrolflowtest": 232, "modg": 196, "modif": [95, 108, 109, 117, 136, 139, 226, 230, 234, 238, 247, 257, 271], "modifi": [6, 12, 20, 60, 108, 109, 117, 119, 121, 135, 136, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 230, 238, 249, 252, 253, 268], "moduel": 228, "modul": [5, 9, 10, 17, 60, 62, 71, 92, 94, 95, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 123, 128, 143, 156, 196, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 242, 248, 249, 253, 258, 261, 265, 267, 268, 269, 270, 271], "module_call_graph": 208, "module_call_wrapp": [210, 219], "module_nam": [95, 110], "module_name_typ": 115, "modulecallentri": 208, "modulecallsignatur": 208, "modulelist": [128, 210, 228], "moduletyp": 117, "modulewithacustomoper": [225, 226, 233, 234], "modulewithcontrolflowloop": [221, 231], "modulewithcontrolflowloopscan": [221, 231], "moment": [267, 268, 269, 270], "momentum": 95, "monai": 9, "monitor": 17, "more": [9, 12, 93, 115, 117, 119, 127, 128, 135, 142, 177, 178, 195, 196, 210, 212, 214, 219, 220, 221, 224, 228, 230, 231, 232, 234, 248, 249, 253, 267, 268, 269, 270], "most": [21, 57, 109, 117, 135, 137, 206, 210, 219, 247, 253, 269, 270, 271], "mostli": [51, 135, 137, 251, 260, 261, 264], "move": [18, 135, 143, 144, 146, 152, 158, 177, 178, 194, 196, 210], "move_initializer_to_const": [92, 93, 135], "move_initializers_to_const": 135, "mse_loss": [93, 95, 203], "mse_loss_backward": 93, "mseloss": [209, 236], "msg": [9, 115, 119, 135, 142, 230, 249, 253], "msort": 93, "much": [60, 135, 137, 219, 249], "mul": [93, 95, 101, 113, 130, 139, 144, 145, 156, 167, 170, 178, 179, 180, 181, 182, 188, 196, 197, 200, 202, 206, 214, 216, 221, 224, 227, 228, 230, 231, 232, 238, 249, 255, 257, 267, 268, 269, 270], "mul1": 155, "mul11": 200, "mul15": 200, "mul2": [155, 267, 268], "mul25": 200, "mul31": 200, "mul33": 200, "mul37": 200, "mul41": 200, "mul5": 200, "mul55": 200, "mul57": 200, "mul61": 200, "mul65": 200, "mul7": 200, "mul_": [93, 113, 214, 219, 230], "mul_1": [206, 214, 221, 227, 228, 231, 235, 267, 268, 269, 270], "mul_10": [196, 197, 214, 230], "mul_11": [196, 197, 214, 230, 257], "mul_12": [196, 197, 214, 230, 257], "mul_13": [196, 197, 200, 214, 230, 257], "mul_14": [196, 197, 200, 214, 230, 257], "mul_15": [200, 214, 230, 257], "mul_16": [200, 214, 230, 238], "mul_17": [200, 214, 230], "mul_18": [200, 214], "mul_19": [200, 214], "mul_1_": 197, "mul_1_output_0": [255, 267], "mul_1_true_graph_0__true_graph_0": 268, "mul_2": [197, 214, 221, 230, 231, 255, 268, 270], "mul_20": [200, 214, 257], "mul_21": [200, 214], "mul_213": 238, "mul_22": 200, "mul_23": 200, "mul_230": 238, "mul_238": 238, "mul_24": 200, "mul_25": 200, "mul_255": 238, "mul_26": 200, "mul_27": 200, "mul_28": 200, "mul_29": 200, "mul_3": [196, 197, 214, 230, 255, 257], "mul_30": 200, "mul_31": 200, "mul_32": 200, "mul_326": 238, "mul_33": 200, "mul_333": 238, "mul_34": 200, "mul_340": 238, "mul_35": 200, "mul_350": 238, "mul_36": 200, "mul_37": 200, "mul_38": 200, "mul_39": 200, "mul_4": [196, 197, 214, 230, 257, 268, 269, 270], "mul_40": 200, "mul_41": 200, "mul_416": 238, "mul_42": 200, "mul_43": 200, "mul_433": 238, "mul_44": 200, "mul_441": 238, "mul_45": 200, "mul_458": 238, "mul_4_": 197, "mul_5": [196, 197, 214, 230, 257], "mul_529": 238, "mul_536": 238, "mul_541": 196, "mul_543": 238, "mul_546": 196, "mul_553": 238, "mul_6": [196, 197, 214, 230, 257], "mul_7": [214, 230], "mul_72": 231, "mul_8": [214, 230], "mul_9": [196, 197, 214, 230], "mul__tensor": [95, 230], "mul__tensor2": 230, "mul_nod": [154, 157, 180, 181, 182], "mul_node_co": 189, "mul_node_sin": 189, "mul_o": 197, "mul_ou": 197, "mul_output_0": [197, 255, 267], "mul_tensor": [95, 216, 228, 230, 257, 267, 268], "mul_tensor12": 230, "mul_tensor14": [196, 230], "mul_tensor15": [196, 230], "mul_tensor16": 230, "mul_tensor17": 230, "mul_tensor18": 230, "mul_tensor2": 230, "mul_tensor20": 230, "mul_tensor23": 230, "mul_tensor26": 230, "mul_tensor28": 230, "mul_tensor3": 230, "mul_tensor4": 230, "mul_tensor6": 230, "mul_tensor9": 230, "mul_true_graph_0": 232, "mul_true_graph_0__true_graph_0": 267, "muladd": [26, 28, 167, 170], "mulbackward0": [224, 232], "mulitpl": [212, 218, 228, 232, 239, 258, 271], "mulmul": [26, 28, 167, 170], "mulmulmatmul": 144, "mulmulmatmulpattern": [142, 144, 155, 228, 249, 261], "mulmulmulscalar": 144, "mulmulmulscalarpattern": [142, 144, 156, 200, 228, 249, 261], "mulmulsigmoid": 202, "mulmulsigmoidpattern": 202, "mulmulsigmoidpattern2": 202, "mulsharedinput": [26, 28], "mulsigmoid": [26, 37, 167, 170], "mulsigmoidpattern": [167, 170, 261], "mulsub": [26, 28], "multi": [4, 247], "multi_margin_loss": 93, "multi_run": 4, "multiattentionblock": [128, 228], "multigammaln": 93, "multilabel_margin_loss": 93, "multilabel_margin_loss_forward": 93, "multinomi": 95, "multipl": [4, 57, 87, 113, 115, 123, 135, 142, 144, 156, 162, 163, 177, 178, 179, 180, 192, 195, 198, 199, 209, 210, 211, 227, 235, 249, 258, 271], "multiple_output": 135, "multipli": [4, 93, 139, 193, 196], "multiply_tensor": 95, "multiprocess": [203, 205, 207], "must": [4, 9, 10, 12, 93, 109, 115, 116, 127, 131, 135, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 197, 209, 210, 222, 225, 226, 233, 234, 236, 247, 249, 267, 268, 269, 270], "mutat": 264, "mutates_arg": [225, 226, 233, 234], "mutation_guard": 242, "mutipli": 193, "mv": 93, "mvlgamma": 93, "mvlgamma_": 93, "mxc": 247, "my_compil": [203, 205, 208], "my_neuron": 206, "my_opset": 199, "mylib": [225, 226, 233, 234], "mymodelclass": [203, 205, 207], "mzv": 196, "n": [56, 95, 111, 142, 193, 194, 195, 196, 203, 205, 207, 210, 213, 219, 220, 230, 238, 247, 249, 267, 268], "n0": [199, 233], "n1": [199, 247], "n2": [199, 247], "n20": [267, 268], "n6_2": [267, 268], "n_cach": 222, "n_custom_op": 194, "n_dim": [62, 107, 109, 112, 206, 208, 209, 236, 247, 253], "n_element": 116, "n_featur": [209, 236], "n_function": 207, "n_inform": [209, 236], "n_layer": 222, "n_nan": 210, "n_neighbor": 210, "n_node": 207, "n_output": 135, "n_sub": 207, "n_target": [62, 107, 109, 112, 206, 208, 209, 236, 247, 253], "n_tree": 3, "naiv": 193, "name": [3, 4, 9, 10, 12, 15, 18, 20, 51, 55, 56, 59, 60, 61, 62, 71, 92, 93, 94, 95, 96, 97, 100, 101, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 130, 134, 135, 136, 138, 139, 142, 143, 144, 156, 166, 170, 175, 177, 179, 188, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 236, 238, 240, 247, 249, 257, 264, 265, 267, 268, 269, 270], "name___kei": 18, "name___valu": 18, "name_fct": 110, "name_to_renam": 135, "named_modul": [94, 110, 206, 224, 232], "named_paramet": 135, "nameerror": 201, "names_dim": 93, "names_dtype_out": 93, "names_out": 93, "names_scalaropt_dim": 93, "names_scalaropt_dim_dtyp": 93, "namespac": [3, 4, 225, 233], "nan": [194, 195, 200, 207, 210, 213, 249], "nan_euclidean": 210, "nan_to_num": [93, 95, 210], "nan_to_num_": 93, "naneuclidean": 210, "nanmean": 93, "nanmedian": 93, "nanquantil": 93, "nansum": 93, "narrow": 93, "narrow_copi": 93, "nativ": 271, "native_batch_norm": 93, "native_batch_norm_backward": 93, "native_batch_norm_backward_out": 93, "native_channel_shuffl": 93, "native_dropout": [93, 95], "native_dropout_backward": 93, "native_group_norm": [93, 95], "native_group_norm_backward": 93, "native_group_norm_backward_out": 93, "native_layer_norm": [93, 95], "native_layer_norm_backward": 93, "native_layer_norm_backward_out": 93, "nbdy": 228, "nbuq": 196, "ncall": [203, 207], "ncaus": [219, 220, 267, 268], "nccl": 264, "nchwc": 207, "nd": [198, 202], "ndarrai": [9, 10, 15, 18, 19, 21, 135, 193, 249], "ndtr": 93, "ndtri": 93, "ndynamic_shap": 268, "ne": [93, 95, 214, 219, 224, 232, 268], "ne_": 93, "ne_1": 219, "ne_2": 219, "ne_scalar": 95, "ne_tensor": 95, "nearbi": 260, "nearest_mod": [267, 268], "necessari": [8, 113, 206, 212], "necessarili": 228, "need": [60, 62, 93, 107, 116, 117, 119, 135, 136, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 196, 204, 209, 210, 216, 219, 221, 222, 228, 229, 230, 231, 233, 237, 238, 240, 247, 249, 267, 268, 269, 270, 271], "neee": 268, "neg": [93, 95, 101, 113, 130, 142, 178, 196, 197, 200, 206, 214, 224, 230, 232, 238, 249, 255, 257, 267, 268], "neg2": [196, 230], "neg3": 230, "neg4": 230, "neg_": 93, "neg_1": [197, 214, 230, 238, 255, 257, 267, 268], "neg_2": [200, 214, 230, 238, 257], "neg_3": [200, 214, 230, 238, 257], "neg_526": 196, "neg_false_graph_0": [232, 267, 268], "neg_nod": [171, 189], "neg_ou": 197, "neg_output_0": 255, "negative_list": 142, "negative_slop": 95, "neginf": 95, "negxplus1": [26, 38, 167, 170], "negxplus1pattern": [167, 170, 261], "neighbour": [210, 265], "neq": 193, "nest": [135, 268, 269, 270], "nested_to_padded_tensor": 93, "network": 193, "neural": 193, "neuron": [62, 109, 112, 206, 208, 247, 253], "neuron16": 62, "neuron2": [208, 247], "neuron2input": 62, "neuron2output": 62, "neurondynamiccach": 62, "neuroniint": [62, 206], "neuronilist": 62, "neuronloop": 206, "neuronmambacach": 62, "neuronnamed1": 62, "neuronnamed2": 62, "neuronnameddict": 62, "neuronneuron": 206, "neuronnoneint": 62, "neuronnoneintdefault": 62, "neuronnoneintdict": 62, "neuronnonelistint": [62, 206], "neurontupl": 62, "never": [60, 135, 137, 221, 231, 265], "never_test": 9, "new": [15, 20, 60, 93, 109, 111, 116, 119, 123, 130, 135, 137, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 200, 204, 207, 225, 226, 228, 229, 233, 234, 237, 240, 247, 249, 264], "new_arg": [3, 59], "new_axi": 257, "new_cst": 200, "new_empti": 93, "new_empty_strid": 93, "new_forward": [224, 232], "new_ful": 93, "new_model": 197, "new_nam": 117, "new_nod": 135, "new_on": [93, 95], "new_onnx": 183, "new_onx": 183, "new_op": 26, "new_proto": 202, "new_shap": [139, 204, 209, 224, 247, 249, 267, 268], "new_vers": 130, "new_weight": 210, "new_zero": 93, "newaxi": 193, "newdim_nonzero": [229, 267, 268], "next": [12, 60, 93, 142, 144, 152, 203, 207, 212, 225, 226, 233, 234, 247, 248, 249, 253, 267, 268, 271], "next_dim": [227, 235], "next_mul_nod": 182, "next_nod": [142, 152, 155, 158, 164, 165, 249], "nextaft": 93, "nextafter_": 93, "nfeed": [109, 112], "nfor": [219, 220, 267, 268], "nfrom": [210, 267, 268], "nfyc": 228, "ngraph": [213, 268], "ngraphmodul": [267, 268], "nhide": 207, "nhit": 228, "nhnh": 196, "nicer": 9, "nif": [219, 220, 267, 268], "nightli": [192, 212, 264], "nitb": 255, "nkq": 249, "nlg": 268, "nll_loss": 93, "nll_loss2d": 93, "nll_loss2d_backward": 93, "nll_loss2d_forward": 93, "nll_loss_backward": 93, "nll_loss_forward": [93, 95], "nll_loss_nd": 93, "nmodel": 207, "nn": [92, 93, 95, 96, 109, 110, 111, 112, 117, 128, 193, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 247, 248, 249, 253, 265, 267, 268, 269, 270, 271], "nn_modul": [203, 253], "nnmodul": 210, "nnno": 255, "nnone": [267, 268], "nnsg": 197, "nnz": [209, 236], "no_cach": 222, "no_grad": [56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 113, 194, 240, 257, 271], "no_stat": 93, "node": [12, 15, 20, 21, 51, 71, 92, 93, 94, 95, 105, 108, 109, 110, 111, 114, 117, 127, 130, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 198, 200, 202, 203, 204, 206, 207, 210, 213, 214, 215, 218, 219, 223, 225, 226, 227, 228, 229, 234, 235, 237, 247, 248, 259, 261, 267, 268, 269, 270, 271], "node_0_cast": 198, "node_0_constantofshap": 138, "node_1_cast": 198, "node_1_scatternd": 138, "node_2_flatten": 198, "node_3_flatten": 198, "node_4_concat": 198, "node_5_concat": 198, "node_6_reshap": 198, "node_7_reshap": 198, "node_8_matmul": 198, "node_9_ident": 198, "node_act": 185, "node_add": 190, "node_add_1": [267, 268], "node_add_2": 232, "node_add_371": 197, "node_add_5": 232, "node_at": 160, "node_befor": [138, 142, 168, 187, 198, 249], "node_before_left": [155, 186], "node_before_right": [155, 186], "node_concat_369": 197, "node_constant_1": 232, "node_constant_10": 232, "node_constant_11": 232, "node_constant_12": 232, "node_constant_13": 232, "node_constant_9": 232, "node_copi": 203, "node_div": 186, "node_equ": 151, "node_equal_unsqueez": 151, "node_greater_9": 232, "node_if_10": 232, "node_if_3": [267, 268], "node_if_4": [267, 268], "node_if_4_2": [267, 268], "node_left": [146, 155, 156, 158, 163, 167], "node_left_tr": 155, "node_matmul_1": 232, "node_matmul_4": 232, "node_mul": [167, 190], "node_mul_2": 232, "node_mul_317": 197, "node_mul_345": 197, "node_mul_370": 197, "node_mul_8": 232, "node_nam": 95, "node_neg_0": 232, "node_neg_368": 197, "node_pow": 190, "node_reciproc": 190, "node_reduc": 190, "node_reducesum_6": 232, "node_right": [146, 155, 156, 158, 163, 167], "node_right_tr": 155, "node_seq": 160, "node_sigmoid": 167, "node_slice_356": 197, "node_slice_367": 197, "node_sqrt": 190, "node_squ": 165, "node_typ": 191, "node_un": 165, "node_unsqueez": 151, "nodeproto": [14, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 111, 130, 135, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 202, 247, 249], "nois": [95, 209, 236], "non": [105, 118, 122, 214, 219, 220, 222, 230, 238, 247, 267, 268], "non_block": [95, 247], "non_missing_fix_x": 210, "non_strict_util": [207, 214, 219, 224, 232, 253, 267, 268, 269], "non_zero": 265, "none": [3, 4, 6, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 92, 93, 94, 95, 96, 97, 100, 101, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 123, 127, 128, 130, 132, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 247, 249, 253, 261, 267, 268, 269, 270], "none_if": 9, "nonetyp": [113, 267, 268, 269, 270], "noninfring": 252, "nono": 255, "nonzero": [95, 210, 229, 237, 267, 268, 269, 270], "nonzero_0": 267, "nonzero_numpi": [93, 95, 269, 270], "nonzero_output_0": 267, "noop_with_empty_ax": [232, 267, 268], "nop_decomposit": 93, "noqa": [194, 195, 203], "norigin": [267, 268], "norm": [12, 93, 95, 197, 209, 214, 219, 236], "norm_1": [128, 228], "norm_2": [128, 228], "norm_except_dim": 93, "norm_nod": 190, "norm_typ": 95, "normal": [93, 95, 184, 188, 209, 236], "normal_": 93, "normalize_as_list": 242, "normalized_shap": [95, 228], "normpath": [203, 207], "nostrict": [106, 213, 266], "not_equ": 93, "not_fake_model": [109, 112], "not_impl": [267, 268], "not_optim": 191, "not_optimized_model": 191, "note": [117, 264, 265], "notebook": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "notensor": [224, 231, 267, 268], "noth": [56, 177, 242, 247], "notic": 252, "notimplementederror": [197, 210, 215, 271], "notset": [95, 207], "now": [21, 56, 93, 113, 193, 196, 202, 206, 215, 217, 219, 222, 223, 224, 225, 226, 228, 232, 233, 234], "nowrap": 60, "np": [9, 21, 138, 193, 194, 195, 197, 198, 201, 203, 205, 207, 209, 210, 225, 226, 233, 234, 236, 247, 253, 257], "np_arrai": 135, "np_dtype_to_tensor_dtyp": 15, "np_input": 197, "nqob": 255, "nqu": [], "nrun": [203, 205, 207], "nset": [210, 267, 268], "nsorbas": 242, "nsy": [83, 264], "nthe": [219, 267, 268], "ntonli": 93, "ntzt": 255, "nu": 213, "nuclear_norm": 93, "null": [10, 135, 144, 149, 193], "nullshap": 135, "num_attention_head": [121, 124, 125, 126, 194, 196, 197, 214, 219, 220, 222, 230, 238, 241, 242, 253, 257], "num_fram": [227, 235], "num_group": 95, "num_head": 228, "num_hidden_lay": [61, 71, 118, 121, 122, 123, 124, 125, 126, 194, 195, 196, 197, 214, 217, 219, 220, 222, 230, 238, 241, 242, 244, 253, 257, 264], "num_key_value_head": [123, 124, 125, 126, 214, 219, 220, 222, 230, 238, 257], "num_output": [267, 268], "num_sampl": 95, "num_scan_input": [231, 267, 268], "num_us": [117, 196, 206, 208, 215, 218, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 247, 267, 268, 269, 270], "num_work": 204, "num_zero": [229, 237], "number": [3, 4, 9, 19, 56, 60, 61, 71, 87, 95, 109, 116, 117, 123, 134, 135, 137, 142, 144, 156, 194, 196, 200, 203, 205, 207, 209, 210, 213, 236, 247, 249, 261, 263, 265, 267, 268, 270], "numel": [203, 205, 207, 210, 267, 268, 269, 270], "numi": 128, "numpi": [9, 12, 15, 18, 19, 21, 51, 54, 95, 109, 112, 135, 138, 194, 195, 197, 198, 201, 203, 205, 207, 209, 210, 221, 225, 226, 227, 228, 231, 233, 234, 235, 236, 246, 247, 248, 251, 253, 257, 264, 269, 270], "numpy_help": [9, 138, 198], "numpy_sin": [225, 226, 233, 234], "numpy_sin_shap": [226, 234], "numpy_sin_to_onnx": [225, 226, 233, 234], "numpy_t": 95, "nvcc": 264, "nvcr": 264, "nvfuser": 264, "nvidia": [3, 21, 194, 203, 205, 207, 240, 264, 271], "nvimgcodec": 264, "nvjitlink": 264, "nvml": 265, "nvrtc": 264, "nvtx": [21, 56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 87, 264], "nwhile": [267, 268], "nyut": 196, "nzaw": 196, "o": [9, 17, 115, 135, 191, 196, 197, 200, 201, 203, 207, 226, 242, 249, 260, 261, 265, 267, 268], "o_height": 178, "o_o_four": 178, "o_proj": [197, 214, 219, 220], "ob": [111, 203, 205, 207, 213, 267, 268, 269, 270], "obg": 268, "obj": [15, 18, 102, 115, 116, 142, 247, 269, 270], "object": [15, 18, 92, 93, 102, 105, 109, 113, 116, 117, 135, 142, 144, 152, 201, 203, 205, 207, 230, 234, 238, 242, 267, 268], "obs1": 207, "obtain": [110, 135, 200, 208, 215, 216, 232, 233, 234, 235, 236, 238, 240, 252, 253, 261, 271], "occur": [135, 206, 214, 219, 221, 224, 231, 232, 248, 267, 268, 269, 270, 271], "occurr": [214, 232], "ocument": 271, "oczo": 196, "odd": 145, "oehw": 197, "offici": [26, 264, 271], "offset": 95, "often": [135, 137, 193, 219, 267, 268, 269], "ogu": [], "oh": [21, 138, 198, 202], "ok": [93, 115, 210, 219], "ok_childc": 210, "old": 271, "older": 135, "on_ent": 242, "onc": [56, 142, 204, 228, 248, 249], "one": [4, 9, 10, 12, 15, 17, 21, 51, 56, 60, 62, 107, 109, 113, 115, 116, 117, 119, 130, 135, 136, 137, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 197, 204, 206, 207, 210, 212, 215, 218, 219, 228, 232, 239, 240, 247, 248, 249, 258, 261, 264, 265, 267, 268, 271], "one_graph": 210, "one_hot": 93, "one_seq": [267, 268], "one_seq_1": [267, 268], "one_seq_15": [267, 268], "one_seq_16": [267, 268], "one_seq_17": [], "one_seq_2": [], "ones": [21, 51, 60, 93, 95, 96, 115, 116, 135, 193, 194, 214, 217, 219, 220, 222, 223, 228, 230, 238, 257, 267, 268, 269, 270], "ones2": [267, 268], "ones32": [267, 268], "ones_2": [267, 268], "ones_lik": [93, 210, 242, 267, 268, 269, 270], "onesid": 95, "onh": [138, 198], "onli": [3, 12, 15, 51, 57, 60, 71, 92, 93, 95, 98, 105, 109, 113, 115, 117, 130, 135, 142, 144, 155, 158, 177, 178, 179, 180, 193, 194, 196, 200, 202, 205, 215, 217, 218, 228, 229, 237, 247, 249, 261, 267, 268, 269, 270, 271], "only_arrai": 135, "only_if_fail": 115, "only_regist": 105, "onnx": [4, 9, 10, 12, 15, 18, 19, 21, 26, 51, 55, 56, 60, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 92, 93, 95, 105, 109, 110, 111, 113, 115, 127, 128, 130, 134, 135, 136, 137, 138, 139, 142, 166, 179, 183, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 239, 240, 246, 247, 248, 249, 251, 253, 255, 258, 259, 260, 261, 262, 263, 264, 266, 270], "onnx_": 57, "onnx_ani": [9, 144, 249], "onnx_array_api": [138, 142, 183, 193, 196, 197, 198, 200, 202, 203, 204, 207, 209, 216, 224, 225, 226, 227, 228, 230, 231, 235, 236, 238, 253], "onnx_builder_progress": [109, 135], "onnx_cast": [9, 144, 249], "onnx_clip": [9, 144], "onnx_const": [9, 144], "onnx_conv": [9, 144], "onnx_custom_backend": [92, 194, 204, 246, 247], "onnx_debug_backend": [196, 204, 246, 247], "onnx_deriv": [10, 193], "onnx_diagnost": [15, 210, 214, 219, 220, 223, 227, 228, 230, 235, 238, 247, 257, 271], "onnx_dropout": [9, 144], "onnx_dtype_nam": 15, "onnx_dtype_to_torch_dtyp": 15, "onnx_dynamo": [74, 75, 76, 77, 78, 79, 80, 81, 87, 115, 240], "onnx_equ": [9, 144], "onnx_expand": [9, 144], "onnx_export": [9, 109, 110, 183, 247], "onnx_export_templ": 9, "onnx_extend": [194, 195, 201, 202, 207], "onnx_files": 240, "onnx_find": 20, "onnx_funct": [9, 144, 207], "onnx_help": [210, 227, 228], "onnx_id_nod": 111, "onnx_input_nam": 240, "onnx_layer_norm": [9, 144], "onnx_lighten": 20, "onnx_matmul": [9, 144, 249], "onnx_ml_pb2": 10, "onnx_mod": 196, "onnx_model": [6, 92, 194, 196, 240], "onnx_mul": [9, 144, 200], "onnx_n_input": 240, "onnx_n_output": 240, "onnx_nam": 111, "onnx_nod": [14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "onnx_optim": 240, "onnx_output_nam": 240, "onnx_program": 253, "onnx_reduc": [9, 144], "onnx_registri": [6, 93], "onnx_reshap": [9, 144, 155, 249], "onnx_rotari": [9, 144], "onnx_run_disc": 210, "onnx_sequ": [9, 144], "onnx_shape_infer": 6, "onnx_slic": [9, 144], "onnx_split": [9, 144], "onnx_sub": [9, 144], "onnx_symbol": 100, "onnx_symbolic__symbolic_default": 100, "onnx_to_sess": 21, "onnx_tool": [9, 16], "onnx_transpos": [9, 144, 249], "onnx_typ": [233, 234], "onnx_unlighten": 20, "onnx_unsqueez": [9, 144], "onnxconstantfold": 135, "onnxcst": 135, "onnxeasypatternoptim": 166, "onnxfunc": 135, "onnxfunct": [196, 234, 236, 238], "onnxfunction_dispatch": [196, 203], "onnxmltool": 264, "onnxnodetyp": 135, "onnxprogram": 271, "onnxquiet": 135, "onnxregistri": 93, "onnxrt": [83, 84, 85, 86, 92, 93, 119, 192, 194, 197, 199, 203, 204, 205, 211, 258, 271], "onnxrt_dump_path": [4, 195], "onnxruntim": [3, 6, 8, 9, 10, 18, 19, 21, 26, 51, 56, 71, 83, 87, 92, 93, 127, 128, 135, 137, 183, 184, 188, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 207, 209, 210, 211, 212, 228, 236, 244, 246, 247, 249, 251, 253, 258, 261, 264, 267, 268], "onnxruntime_enable_aten": 264, "onnxruntime_inference_collect": 242, "onnxruntime_train": 9, "onnxruntimeerror": [267, 268], "onnxruntm": 56, "onnxscript": [9, 87, 93, 113, 114, 136, 192, 196, 202, 203, 207, 211, 233, 234, 236, 238, 247, 251, 253, 258, 264, 271], "onnxshapecomput": 135, "onnxstop": 135, "onnxstopoutput": 135, "onnxstopshap": 135, "onnxstoptyp": 135, "onnxstopvalueshap": 135, "onnxverbos": 109, "onx": [8, 10, 12, 15, 20, 109, 111, 112, 115, 128, 183, 191, 197, 198, 207, 208, 209, 210, 216, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 238, 247, 249, 253, 257], "onx_cuda_optim": 228, "onx_inlin": 228, "onx_modul": 228, "onx_module_optim": 228, "onx_optim": 228, "oo": 195, "oobabooga": 264, "oomg": 197, "oono": [196, 197], "oooo": 197, "oozz": 196, "op": [9, 11, 26, 71, 93, 109, 113, 115, 116, 117, 127, 138, 156, 194, 199, 202, 206, 208, 210, 214, 215, 216, 217, 218, 221, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 238, 247, 267, 268, 269, 270, 271], "op_": 57, "op_add_add_mul_mul": [9, 26, 27], "op_attent": [9, 26], "op_average_pool_grad": [9, 26, 27], "op_bias_softmax": [9, 26], "op_broadcast_gradient_arg": [9, 13], "op_cast_lik": [9, 26, 27], "op_complex": [9, 26, 27], "op_concat": [9, 26, 27], "op_constant_of_shap": [9, 26, 27], "op_fused_matmul": [9, 26, 27], "op_gath": [9, 26], "op_gather_el": [9, 26], "op_gather_grad": [9, 26, 27], "op_memcpy_host": [9, 26, 27], "op_mul_sigmoid": [9, 26, 27], "op_nam": [100, 201], "op_negxplus1": [9, 26, 27], "op_qlinear_average_pool": [9, 26, 27], "op_qlinear_conv": [9, 26, 27], "op_quick_gelu": [9, 26, 27], "op_replace_zero": [9, 26, 27], "op_rotari": [9, 26, 27], "op_scatter_el": [9, 26, 27], "op_scatternd_of_shap": [9, 26, 27], "op_signatur": [196, 199, 234, 236, 238], "op_simplified_layer_norm": [9, 26, 27], "op_skip_layer_norm": [9, 26, 27], "op_slic": [9, 26, 27], "op_transpose_cast": [9, 26, 27], "op_tri_matrix": [9, 26, 27], "op_typ": [114, 130, 135, 138, 139, 142, 191, 198, 200, 202, 207, 225, 249], "opcod": 210, "open": [57, 196, 197, 200, 203, 207, 210, 249], "open_datafram": 57, "opencv": [79, 80], "openpyxl": 264, "oper": [10, 12, 26, 71, 95, 109, 115, 117, 130, 134, 135, 137, 139, 142, 144, 145, 146, 152, 156, 158, 167, 169, 170, 194, 196, 200, 206, 210, 212, 215, 218, 219, 221, 223, 224, 228, 229, 231, 232, 236, 237, 239, 247, 248, 249, 258, 261, 267, 268, 269, 270, 271], "operand": [115, 210, 268, 269, 270], "operatorsupport": 94, "opet": 142, "opetor": 71, "opkernelcontext": [267, 268], "opoverload": [93, 113, 247], "opqc": 196, "oprun": 26, "opset": [8, 18, 26, 55, 56, 60, 87, 92, 93, 109, 115, 128, 130, 134, 135, 142, 193, 196, 197, 200, 202, 204, 207, 208, 209, 216, 224, 225, 226, 227, 228, 230, 231, 236, 238, 247, 257, 267, 268], "opset12": 230, "opset14": 230, "opset17": 230, "opset18": [199, 233, 234], "opset19": 230, "opset2": [230, 247, 249, 267, 268], "opset21": 230, "opset23": 230, "opset26": 230, "opset28": 230, "opset3": 249, "opset31": 230, "opset32": 249, "opset34": 230, "opset36": 230, "opset4": 249, "opset5": 230, "opset7": 230, "opset9": 230, "opset_import": [21, 138, 198, 199, 202, 232, 233], "opset_vers": [6, 197], "opt": [195, 196, 197, 201, 207, 210, 264], "opt_filenam": 197, "opt_onx": 249, "opt_pattern": [57, 240], "optim": [6, 26, 51, 55, 56, 60, 71, 82, 83, 87, 92, 93, 109, 110, 115, 127, 128, 135, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 207, 209, 210, 211, 225, 226, 232, 238, 245, 248, 258, 259, 263, 266, 267, 268, 269, 270, 271], "optimization_opt": [9, 135, 183, 200, 202, 207, 249], "optimizationopt": [55, 92, 93, 109, 113, 115, 137, 183, 194, 197, 200, 202, 207, 228, 249], "optimizaton": 249, "optimize_model_proto_ox": [6, 196, 207], "optimize_node_subgraphs_inplac": [135, 142], "optimize_ox": 87, "optimize_submodul": 110, "optimize_with_pattern": [135, 207], "optimized_mod": [196, 203, 205, 208], "optimized_model": [191, 207], "optimized_model_filepath": [21, 51, 207, 210], "optimized_proto": 200, "optimizedmodul": 204, "option": [8, 10, 15, 21, 51, 55, 58, 59, 60, 62, 84, 86, 92, 93, 109, 113, 115, 122, 127, 135, 137, 142, 193, 194, 195, 197, 202, 206, 207, 217, 226, 228, 240, 249, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271], "optmiz": [142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191], "or_older_than": 9, "orch": 242, "ord": 95, "ord_str": 93, "order": [4, 15, 71, 87, 92, 93, 105, 109, 112, 116, 127, 135, 137, 143, 144, 156, 195, 196, 203, 207, 249], "order_algorithm": [71, 92, 93, 127], "order_optim": [9, 142], "orderalgorithm": [135, 137, 143, 195], "ordered_nam": 116, "ordereddict": 242, "orderoptim": 143, "org": [95, 96, 135, 207, 253, 264, 268, 270], "organ": [192, 212, 248], "orgqr": 93, "origin": [10, 15, 52, 112, 135, 144, 164, 214, 218, 228, 232, 267, 268, 269, 270], "original_max_position_embed": [214, 219, 220], "ort": [83, 85, 92, 93, 195, 210, 240, 244, 264], "ort_enable_al": 207, "ort_evalu": [9, 26], "ort_help": [7, 9], "ort_optim": [6, 71, 87, 195, 196, 197], "ort_optimization_level": [92, 93, 127], "ort_run": 56, "ort_sess": [9, 16], "ortbackend": [92, 204], "ortbatchnormalizationtrain": 188, "ortbatchnormalizationtrainingpattern": [184, 188, 228, 261], "ortev": 51, "ortgradientforwardbackward": 10, "ortmodul": [9, 195, 244, 264], "ortmodulegraphbuild": 193, "ortmodulegraphbuilderconfigur": 10, "ortop": [194, 202, 207], "ortopt": [196, 197], "ortshared_1_0_1_0_token_163": 255, "ortshared_1_0_1_1_token_164": 255, "ortshared_7_0_1_0_token_156": 255, "ortshared_7_0_1_1_token_171": 255, "ortshared_7_1_1_0_token_155": 255, "ortshared_7_1_1_0_token_73": 255, "ortshared_7_1_1_1_token_160": 255, "ortshared_7_1_1_1_token_74": 255, "ortshared_7_1_1_2_token_166": 255, "ortshared_7_1_1_2_token_75": 255, "ortshared_7_1_1_3_token_169": 255, "ortshared_7_1_1_3_token_78": 255, "ortshared_7_1_1_4_token_170": 255, "ortshared_7_1_1_4_token_79": 255, "ortshared_7_1_2_0_token_161": 255, "ortshared_7_1_2_1_token_167": 255, "ortshared_7_1_3_0_token_157": 255, "ortshared_7_1_3_0_token_80": 255, "ortshared_7_1_3_1_token_158": 255, "ortshared_7_1_3_2_token_162": 255, "ortshared_7_1_3_3_token_168": 255, "ortshared_7_1_4_0_token_154": 255, "ortshared_7_1_4_0_token_76": 255, "ortshared_7_1_4_1_token_159": 255, "ortshared_7_1_4_2_token_165": 255, "ot": 201, "other": [9, 92, 95, 101, 115, 117, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 195, 203, 205, 207, 212, 217, 218, 219, 221, 223, 224, 230, 231, 232, 238, 240, 247, 249, 252, 261, 264, 267, 268, 269, 270, 271], "other_dispatch": 109, "other_scalar": 93, "other_scalar_out": 93, "otherwis": [3, 4, 60, 115, 130, 134, 135, 142, 247, 252], "ou": 228, "our": 228, "out": [5, 56, 57, 58, 93, 109, 117, 135, 144, 155, 158, 204, 210, 219, 221, 223, 224, 226, 228, 229, 230, 231, 232, 234, 237, 240, 247, 252, 267, 268, 269, 270], "out1": [267, 268, 269, 270], "out2": [267, 268, 269, 270], "out_cod": 210, "out_debug": 196, "out_dtyp": 93, "out_dtype_decomp": 93, "out_featur": [128, 204, 206, 228, 267, 268], "out_grad": 95, "out_mod": 93, "out_onnxrt": 196, "out_spec": 208, "outdtypeoper": 93, "outer": 93, "outer_length": 101, "output": [4, 6, 9, 10, 12, 18, 21, 51, 55, 56, 57, 58, 60, 62, 92, 93, 95, 96, 97, 100, 101, 109, 110, 111, 114, 115, 116, 119, 120, 134, 135, 138, 139, 140, 142, 167, 170, 172, 191, 193, 195, 196, 197, 198, 200, 202, 203, 204, 207, 208, 209, 214, 215, 216, 217, 219, 222, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 240, 247, 249, 254, 257, 259, 260, 261, 262, 263, 267, 268, 269, 270], "output2": [267, 268], "output3": [267, 268], "output_0": [93, 111, 196, 200, 204, 207, 208, 209, 216, 224, 225, 226, 227, 228, 229, 230, 231, 247, 249, 257, 267, 268], "output_1": [196, 200, 204, 230, 231, 257, 267, 268], "output_10": [196, 200], "output_11": [196, 200], "output_12": [196, 200], "output_13": [196, 200], "output_14": [196, 200], "output_15": 196, "output_16": 196, "output_17": 196, "output_18": 196, "output_19": 196, "output_2": [196, 200, 204, 230, 257, 267, 268], "output_20": 196, "output_21": 196, "output_22": 196, "output_23": 196, "output_24": 196, "output_25": 196, "output_26": 196, "output_27": 196, "output_28": 196, "output_29": 196, "output_3": [196, 200, 204, 230, 257, 267, 268], "output_30": 196, "output_31": 196, "output_32": 196, "output_33": 196, "output_34": 196, "output_35": 196, "output_36": 196, "output_37": 196, "output_4": [196, 200, 204, 230, 257], "output_5": [196, 200, 204], "output_6": [196, 200], "output_7": [196, 200], "output_8": [196, 200], "output_9": [196, 200], "output_attent": [122, 219], "output_clean_raw_data": 57, "output_data": 240, "output_data_bash_bench_huggingfac": 240, "output_dim_4": 204, "output_dtyp": [95, 101], "output_dynamic_dimensions_source_flat": [247, 267, 268], "output_dynamic_shap": [109, 115, 135, 229, 237], "output_hidden_st": [122, 219], "output_index": [12, 115], "output_nam": [21, 51, 55, 92, 109, 110, 115, 135, 140, 142, 191, 229, 237], "output_none_2": 204, "output_none_3": 204, "output_np": [226, 234], "output_nr": 93, "output_of_enter_auto_cast": 95, "output_pad": 95, "output_s": [95, 193, 240], "output_shap": 193, "output_typ": 217, "outscalar_oth": 93, "outscalar_self": 93, "outsid": 26, "outtensor": 93, "ouwv": 255, "ouzx": 196, "over": [9, 57, 60, 142], "overhead": [203, 205], "overload": [21, 26, 87, 93, 98, 109, 113, 142, 177, 206, 247], "overrid": [203, 207], "overridden": [60, 62, 107], "override_node_repr": 207, "overwhelm": 210, "overwrit": [9, 60, 109, 117, 118, 122, 135, 136, 142, 194, 214, 219, 220, 222, 230, 238], "own": [115, 135, 206], "owsopset": 113, "oxs_dispatch": [9, 109, 247], "oxs_opset": [9, 109], "oxsdebugdispatch": 113, "oxsdispatch": [113, 247], "oxsopset": 114, "p": [17, 95, 142, 193, 203, 204, 205, 207, 208, 209, 214, 224, 228, 236, 247, 249, 257, 261, 263, 267, 268], "p0": [228, 249], "p1": [200, 210, 228, 249], "p2": [210, 228], "p3": [228, 249], "p__reshape_init1_s_0": 111, "p_decoder_attention_attention_0_key_weight": 228, "p_decoder_attention_attention_0_query_weight": 228, "p_decoder_attention_attention_0_value_weight": 228, "p_decoder_attention_attention_1_key_weight": 228, "p_decoder_attention_attention_1_query_weight": 228, "p_decoder_attention_attention_1_value_weight": 228, "p_decoder_attention_linear_bia": 228, "p_decoder_attention_linear_weight": 228, "p_decoder_feed_forward_linear_1_bia": 228, "p_decoder_feed_forward_linear_1_weight": 228, "p_decoder_feed_forward_linear_2_bia": 228, "p_decoder_feed_forward_linear_2_weight": 228, "p_decoder_norm_1_bia": 228, "p_decoder_norm_1_weight": 228, "p_decoder_norm_2_bia": 228, "p_decoder_norm_2_weight": 228, "p_embedding_embedding_weight": 228, "p_embedding_pe_weight": 228, "p_fc1_weight": 207, "p_fc2_weight": 207, "p_fc3_weight": 207, "p_layers_0_bia": 249, "p_layers_0_mlp_fc1_weight": 257, "p_layers_0_mlp_fc2_weight": 257, "p_layers_0_self_attn_dense_weight": 257, "p_layers_0_self_attn_k_proj_weight": 257, "p_layers_0_self_attn_q_proj_weight": 257, "p_layers_0_self_attn_v_proj_weight": 257, "p_layers_0_weight": 249, "p_layers_1_mlp_fc1_weight": 257, "p_layers_1_mlp_fc2_weight": 257, "p_layers_1_self_attn_dense_weight": 257, "p_layers_1_self_attn_k_proj_weight": 257, "p_layers_1_self_attn_q_proj_weight": 257, "p_layers_1_self_attn_v_proj_weight": 257, "p_layers_2_bia": 249, "p_layers_2_weight": 249, "p_linear_bia": [206, 247], "p_linear_weight": [206, 209, 247, 267, 268], "p_lm_head_weight": 214, "p_mlp_0_bia": [224, 232], "p_mlp_0_weight": [224, 232], "p_mlp_1_bia": [224, 232], "p_mlp_1_weight": [224, 232], "p_model_embed_tokens_weight": 214, "p_model_layers_0_input_layernorm_weight": 214, "p_model_layers_0_mlp_down_proj_weight": 214, "p_model_layers_0_mlp_gate_up_proj_weight": 214, "p_model_layers_0_post_attention_layernorm_weight": 214, "p_model_layers_0_self_attn_o_proj_weight": 214, "p_model_layers_0_self_attn_qkv_proj_weight": 214, "p_model_layers_1_input_layernorm_weight": 214, "p_model_layers_1_mlp_down_proj_weight": 214, "p_model_layers_1_mlp_gate_up_proj_weight": 214, "p_model_layers_1_post_attention_layernorm_weight": 214, "p_model_layers_1_self_attn_o_proj_weight": 214, "p_model_layers_1_self_attn_qkv_proj_weight": 214, "p_model_linear_bia": 206, "p_model_linear_weight": 206, "p_model_norm_weight": 214, "p_my_neuron_linear_bia": 206, "p_my_neuron_linear_weight": 206, "p_neuron_linear_bia": 208, "p_neuron_linear_weight": 208, "p_str": 93, "packag": [3, 93, 125, 194, 195, 196, 203, 204, 206, 207, 209, 210, 214, 219, 222, 224, 232, 236, 237, 238, 247, 251, 253, 264, 268, 269, 270], "pad": [93, 95, 193, 207, 212, 228, 232, 239, 258, 271], "pad_is_right": 95, "pad_sequ": 93, "pad_token_id": [214, 219, 220], "padding_idx": 95, "padding_mod": 95, "padtomultipl": [227, 235], "page": [58, 192, 204, 213, 222, 247, 266, 271], "pair": [142, 145, 196, 197, 217, 222, 228], "pairwis": 210, "pairwise_dist": [93, 210], "pairwisedist": [221, 231], "panda": [111, 194, 195, 200, 203, 205, 207, 213, 249, 264, 267, 268, 269, 270], "parallel": [111, 144, 162, 264], "param": [60, 92, 93, 117, 170, 193, 203, 205, 207, 214, 217, 219, 220, 222, 230, 238, 249, 267, 268, 269, 270], "param_schema": [196, 199, 234, 236, 238], "param_shapes_const": 117, "paramet": [3, 4, 6, 8, 9, 10, 12, 15, 17, 18, 19, 20, 21, 51, 52, 55, 56, 57, 58, 59, 60, 71, 87, 92, 93, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 203, 204, 205, 206, 207, 208, 209, 214, 236, 246, 247, 267, 268, 271], "parameter": 264, "parameter_nam": [110, 135], "parameter_proxy_cach": 117, "parameternam": 112, "parameters_dtyp": 60, "params_dtyp": 240, "params_len": [210, 219], "params_s": 240, "parent": [115, 135], "parent_interpret": 110, "pars": [3, 59, 132, 135, 203, 207], "parse_dimension_express": 135, "parse_express": 132, "parse_expression_token": 132, "parsed_arg": 195, "parser": 3, "part": [4, 55, 56, 109, 115, 131, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 196, 197, 210, 228, 240, 247, 249], "partial": 93, "partial_rotary_factor": [230, 238], "particular": [4, 115, 130, 135, 218, 247, 252], "partit": [9, 56, 93], "partition": 203, "partition_and_fus": 203, "partition_fn": 94, "partition_id": [56, 63, 64, 65, 66, 67, 68, 69, 70], "pass": [60, 62, 107, 117, 135, 203, 205, 207, 217, 226, 234], "pass_rat": 57, "past_key_valu": [122, 123, 214, 219, 220, 222, 230, 238], "past_key_values_key_cache_0": [214, 230, 238], "past_key_values_key_cache_1": [214, 230, 238], "past_key_values_value_cache_0": [214, 230, 238], "past_key_values_value_cache_1": [214, 230, 238], "past_seen_token": 219, "pat": [178, 261], "patch": [56, 60, 207, 219, 230, 238, 247, 271], "patch_method": 207, "patch_module_or_class": [230, 238], "patch_opt": 60, "patch_transform": [230, 238, 247, 257, 271], "patched_attentionmaskconvert": [230, 238], "patched_dynamiccach": [230, 238], "patched_generationmixin": [230, 238], "path": [6, 9, 10, 56, 95, 196, 197, 200, 201, 203, 207], "path_nam": 10, "path_to_add": 9, "pattern": [4, 9, 26, 71, 87, 92, 93, 113, 117, 127, 128, 135, 137, 138, 142, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 207, 210, 211, 212, 228, 235, 237, 238, 241, 242, 247, 248, 258, 261, 271], "pattern_list": 166, "pattern_nod": [142, 153, 181, 202], "pattern_optim": [200, 249], "pattern_table_doc": [144, 166, 170, 175, 177, 179, 188], "patternoptim": [135, 137, 144, 166, 170, 175, 177, 179, 188, 200], "patterns_api": [9, 142, 144, 170, 175, 177, 179, 188, 207], "patterns_exp": [9, 142], "patterns_fix": [9, 142], "patterns_investig": [9, 142], "patterns_ml": [9, 142], "patterns_ort": [9, 142, 200, 204, 249], "pbdt": 197, "pdf": 159, "pdist": 93, "pdw": [], "pe": [128, 228], "peak": [56, 60, 192, 203, 205, 207], "penalti": 12, "penalty_loss_onnx": 12, "per": [57, 136, 248], "per_sample_weight": 95, "percal": [203, 207], "perf_count": [194, 203, 205, 207, 253], "perform": [60, 62, 107, 207, 212, 267, 268, 269], "perm": [101, 164, 200, 228, 238, 247, 249, 257, 267, 268], "permiss": 252, "permit": 252, "permut": [93, 269, 270], "permute_copi": 93, "persist": 214, "person": 252, "pfcx": 197, "pfeed": [109, 112], "ph": 201, "phi": [115, 122, 123, 212, 213, 215, 216, 217, 222, 223, 228, 239, 258, 271], "phi3": [214, 219, 220], "phi35": 271, "phi3_help": [9, 120], "phi3attent": 219, "phi3config": [214, 219, 220], "phi3decoderlay": 219, "phi3forcausallm": [214, 219, 220], "phi3mlp": 219, "phi3model": 219, "phi3rmsnorm": 219, "phi3rotaryembed": 219, "phi_help": [9, 120], "phiconfig": [125, 126, 230, 238, 257], "phiforcausallm": [230, 238], "phimodel": 257, "physic": 17, "physical_layout": 95, "pi": [153, 181], "pickl": [203, 205, 219], "pickled_nam": 56, "pid": [17, 201], "piec": [115, 128, 135, 210, 212, 213, 214, 216, 220, 222, 225, 226, 228, 230, 233, 234, 238, 239, 247, 248, 258, 271], "piece_by_piec": [9, 109, 210, 216, 219], "piece_by_piece_seri": [9, 109], "pin_memori": [95, 214, 217, 218, 219, 221, 226, 227, 231, 234, 235, 267, 268, 269, 270], "pinvers": 93, "pip": [192, 212, 264], "pipelin": 9, "piv": [203, 205, 207, 213, 267, 268, 269, 270], "piv_cpu": [203, 205, 207], "piv_gpu": [203, 205, 207], "pivot": [213, 267, 268, 269, 270], "pivot_t": [203, 205, 207], "pixel_shuffl": 93, "pixel_unshuffl": 93, "pixel_valu": 123, "pkg": 196, "pkl": 84, "place": [55, 108, 109, 115, 119, 135, 196, 228, 230, 238, 249], "placehold": [110, 111, 196, 203, 206, 207, 208, 209, 215, 218, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 247, 249, 257, 267, 268, 269, 270], "placeholder_naming_pass": 207, "plai": [193, 227, 235], "platform": [203, 205, 207], "playground": [138, 142, 192, 193, 202, 210, 211, 249, 258], "pleas": [93, 196, 199, 203, 204, 210, 214, 215, 232, 234, 236, 237, 238, 241, 267, 268, 269, 270], "plot": [9, 16, 144, 193, 194, 195, 200, 202, 203, 204, 205, 207, 209, 213, 216, 224, 225, 226, 227, 228, 230, 231, 235, 236, 238, 251, 271], "plot_": 195, "plot_convolutation_matmul_102": [193, 211, 258], "plot_custom_backend_llama": 194, "plot_custom_backend_llama_102": [194, 211, 258], "plot_dot": [193, 200, 202, 204, 209, 216, 224, 225, 226, 227, 228, 230, 231, 235, 236, 238], "plot_exporter_coverag": [213, 239, 258], "plot_exporter_exporter_draft_mod": [214, 239, 258], "plot_exporter_exporter_dynamic_shapes_auto": [215, 239, 258], "plot_exporter_exporter_infer_d": [216, 239, 258], "plot_exporter_exporter_input": [217, 239, 258], "plot_exporter_exporter_lost_dynamic_dimens": [218, 239, 258], "plot_exporter_exporter_phi35_piec": [219, 239, 258], "plot_exporter_exporter_report": [220, 239, 258], "plot_exporter_exporter_scan_pdist": [221, 239, 258], "plot_exporter_exporter_untrained_tinyllm": [222, 239, 258], "plot_exporter_exporter_with_dynamic_cach": [223, 239, 258], "plot_exporter_recipes_c_cond": [224, 239, 258], "plot_exporter_recipes_c_custom_ops_fct": [225, 239, 258], "plot_exporter_recipes_c_custom_ops_inplac": [226, 239, 258], "plot_exporter_recipes_c_dynpad": [227, 239, 258], "plot_exporter_recipes_c_modul": [228, 239, 258], "plot_exporter_recipes_c_named_ds_auto": [229, 239, 258], "plot_exporter_recipes_c_phi2": [230, 239, 258], "plot_exporter_recipes_c_scan_pdist": [231, 239, 258], "plot_exporter_recipes_oe_cond": [232, 239, 258], "plot_exporter_recipes_oe_custom_ops_fct": [233, 239, 258], "plot_exporter_recipes_oe_custom_ops_inplac": [234, 239, 258], "plot_exporter_recipes_oe_dynpad": [235, 239, 258], "plot_exporter_recipes_oe_lr": [236, 239, 258], "plot_exporter_recipes_oe_named_ds_auto": [237, 239, 258], "plot_exporter_recipes_oe_phi2": [238, 239, 258], "plot_llama_bench": 195, "plot_llama_bench_102": [195, 211, 258, 264], "plot_llama_diff_dort": 196, "plot_llama_diff_dort_301": [196, 211, 258], "plot_llama_diff_export": [196, 197], "plot_llama_diff_export_301": [197, 211, 258], "plot_model_to_python": [198, 211, 258], "plot_onnxscript_102": [199, 211, 258], "plot_optim": 200, "plot_optimize_101": [200, 211, 258], "plot_ort_profil": 201, "plot_profile_existing_onnx": 201, "plot_profile_existing_onnx_101": [201, 211, 258], "plot_rewrite_101": [202, 211, 258], "plot_torch": 207, "plot_torch_aot": 203, "plot_torch_aot_": 203, "plot_torch_aot_1_memori": 203, "plot_torch_aot_1_memory_": 203, "plot_torch_aot_1_tim": 203, "plot_torch_aot_201": [203, 211, 258], "plot_torch_aot_first_run_mem_": 203, "plot_torch_aot_ort_first_run_mem": 203, "plot_torch_aot_ort_run_mem": 203, "plot_torch_aot_ort_tim": 203, "plot_torch_aot_profile_": 203, "plot_torch_aot_run_mem_": 203, "plot_torch_custom_backend_101": [204, 211, 258], "plot_torch_dort": 205, "plot_torch_dort_": 205, "plot_torch_dort_1_memori": 205, "plot_torch_dort_1_memory_": 205, "plot_torch_dort_1_tim": 205, "plot_torch_dort_201": [205, 211, 258], "plot_torch_dort_first_run_mem_": 205, "plot_torch_dort_ort_first_run_mem": 205, "plot_torch_dort_ort_run_mem": 205, "plot_torch_dort_ort_tim": 205, "plot_torch_dort_run_mem_": 205, "plot_torch_export": [192, 207], "plot_torch_export_": 207, "plot_torch_export_101": [206, 211, 258], "plot_torch_export_201": [207, 211, 258], "plot_torch_export_compile_102": [208, 211, 258], "plot_torch_export_cus_p0": 207, "plot_torch_export_cus_p2": 207, "plot_torch_export_dynamo": 207, "plot_torch_export_dynopt": 207, "plot_torch_export_memori": 207, "plot_torch_export_ort_": 207, "plot_torch_export_ort_first_run_mem": 207, "plot_torch_export_ort_first_run_mem_": 207, "plot_torch_export_ort_load_mem": 207, "plot_torch_export_ort_load_mem_": 207, "plot_torch_export_ort_run_mem": 207, "plot_torch_export_ort_run_mem_": 207, "plot_torch_export_ort_tim": 207, "plot_torch_export_ort_time1_init": 207, "plot_torch_export_ort_time_2": 207, "plot_torch_export_profile_": 207, "plot_torch_export_script": 207, "plot_torch_export_tim": 207, "plot_torch_linreg_101": [209, 211, 258], "plot_torch_sklearn_201": [210, 211, 258], "plsf": 196, "plt": [195, 201, 203, 205, 207], "plug": 195, "png": [159, 195, 201, 203, 205, 207], "po": [18, 267, 268, 269, 270], "point": [142, 193], "poison": 265, "poisson_nll_loss": 93, "polar": [93, 95, 267, 268, 269, 270], "polar5": [267, 268], "pop": 217, "popul": [4, 87], "portion": 252, "posinf": 95, "posit": [115, 119, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 206, 249, 259, 262, 267, 268, 269, 270], "position_embed": [214, 219], "position_id": [122, 123, 214, 219, 255], "position_ids_expand": 214, "positive_list": 142, "possibl": [12, 15, 60, 92, 93, 115, 117, 127, 135, 137, 142, 143, 144, 155, 158, 167, 170, 209, 212, 219, 228, 230, 236, 238, 247, 249, 267, 268, 269, 271], "possibli": [249, 268, 269, 270], "post": [109, 265, 271], "post_apply_pattern": [142, 177], "post_attention_l": 197, "post_attention_la": 197, "post_attention_layernorm": [214, 219], "post_process": 111, "post_process_exported_program": 109, "potential_donors_idx": 210, "pow": [93, 95, 97, 101, 113, 154, 178, 196, 197, 200, 214, 230, 238, 257], "pow_": 93, "pow_1": [196, 197, 214, 230, 238, 257], "pow_2": [196, 197, 214, 230, 238, 257], "pow_3": [196, 197, 214], "pow_4": [200, 214], "pow_5": 214, "pow_6": 200, "pow_8": 200, "pow__scalar": 95, "pow_scalar": 95, "pow_tensor_scalar": [95, 230], "pow_tensor_scalar2": 230, "pow_tensor_tensor": 95, "ppiw": 197, "pprint": [9, 26, 93, 106, 109, 111, 130, 142, 203, 205, 207, 219, 220], "pprint_storag": 93, "pr": [203, 207, 222, 234, 253, 267, 268], "practic": [209, 236], "prc": [], "pre": 264, "pre_ort_model_transform": [92, 93], "precis": [135, 137, 195, 196, 264], "pred": [115, 209, 210, 236, 268, 270], "predecessor": [117, 138, 142, 198, 249], "predefin": [93, 249], "predict": [12, 209, 236], "prefer": 193, "prefix": [9, 15, 18, 57, 93, 115, 117, 119, 127, 128, 135, 142, 195, 267, 268], "prelu": [93, 95, 130, 144, 155], "prepack": 93, "prepar": [111, 267, 268], "prepare_args_kwarg": 111, "prepare_inputs_for_gener": [230, 238], "prepare_inputs_homogeneous_oper": 139, "prepareforcomput": [267, 268], "prepend": [117, 203, 207], "present_count": 210, "present_i": 210, "present_x": 210, "preserv": [109, 110, 208, 228], "preserve_module_call_signatur": 206, "preserved_modul": 110, "pretraining_tp": 222, "pretti": [93, 115, 135, 142, 210, 216, 262], "pretty_matched_pair": 142, "pretty_nod": 135, "pretty_onnx": [15, 191, 200, 202, 204, 207, 208, 209, 210, 224, 225, 226, 227, 228, 229, 231, 236, 237, 238, 247, 249, 257, 267, 268], "pretty_text": [115, 135, 142, 216, 219, 230], "prevent": [135, 142], "preview": 207, "previou": [109, 193, 207, 228, 249, 259], "previous": [210, 217], "prim": 207, "primals_1": 196, "primals_10": 196, "primals_11": 196, "primals_12": 196, "primals_13": 196, "primals_14": 196, "primals_2": 196, "primals_3": 196, "primals_4": 196, "primals_5": 196, "primals_6": 196, "primals_7": 196, "primals_8": 196, "primals_9": 196, "primit": [203, 207, 247, 271], "prims_add": 101, "prims_amax": 101, "prims_broadcast_in_dim": 101, "prims_cat": 101, "prims_clon": 101, "prims_co": 101, "prims_collapse_view": 101, "prims_convert_element_typ": 101, "prims_div": 101, "prims_empty_strid": 101, "prims_eq": 101, "prims_exp": 101, "prims_g": 101, "prims_gt": 101, "prims_iota": 101, "prims_lt": 101, "prims_mul": 101, "prims_neg": 101, "prims_pow": 101, "prims_rsqrt": 101, "prims_sin": 101, "prims_split_dim": 101, "prims_sub": 101, "prims_sum": 101, "prims_transpos": 101, "prims_view_of": 101, "prims_wher": 101, "print": [5, 9, 15, 17, 60, 92, 93, 109, 111, 112, 115, 128, 131, 138, 144, 170, 175, 177, 178, 179, 183, 188, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 247, 249, 253, 257, 259, 261, 265, 267, 268, 269, 270], "print_exported_program": 109, "print_graph_modul": 109, "print_import_tim": [5, 253], "print_model": 9, "print_onnx": 9, "print_read": [203, 267, 268], "print_stat": [203, 207], "printer": [199, 232, 233, 234], "prior": 135, "prioriti": [92, 93, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 200, 202, 228, 249], "probabl": [12, 264, 271], "process": [17, 56, 92, 93, 109, 135, 142, 194, 195, 203, 204, 205, 207, 210, 240, 247, 267, 268], "process_nod": 207, "process_one_col": 210, "processor": [4, 19, 57, 71, 92, 93, 127, 135, 137, 142, 194, 203, 205, 207, 228, 240, 261, 263], "processor_nam": [57, 194], "prod": [93, 95, 193], "prod_dim_int": 95, "produc": [15, 20, 57, 58, 87, 93, 115, 116, 135, 138, 142, 191, 193, 196, 198, 210, 214, 218, 225, 228, 232, 240, 247, 248, 249, 259, 266, 271], "produce_guard": 207, "produce_guards_and_solve_constraint": 207, "produce_guards_verbos": 207, "producer_nam": [232, 233], "producer_vers": [232, 233], "product": [192, 193, 195, 203, 205, 207, 212], "prof": 201, "profil": [56, 83, 93, 192, 195, 198, 211, 258, 264, 271], "profile2graph": [203, 207], "profile_funct": [203, 207], "program": [55, 109, 111, 112, 115, 208, 210, 213, 214, 218, 234, 266, 267, 268], "progress": [4, 109, 135, 247, 267, 268, 271], "project": [9, 256], "promote_typ": 93, "prompt": [123, 222], "propag": [135, 193, 219], "properli": [230, 238], "properti": [51, 52, 109, 113, 115, 135, 142], "prot": 15, "proto": [6, 8, 9, 18, 21, 26, 51, 60, 87, 111, 115, 119, 130, 135, 138, 199, 200, 202], "proto_from_arrai": [18, 207, 249], "protobuf": 18, "provid": [6, 15, 21, 51, 92, 93, 128, 135, 142, 193, 194, 196, 197, 201, 204, 207, 209, 210, 213, 228, 236, 240, 247, 249, 252, 263, 267, 268, 271], "provit": 206, "proxi": [117, 203, 207, 210], "proxy_cal": [203, 207], "proxy_placehold": 207, "proxy_tensor": [203, 207, 210, 214, 219, 232], "pseudo": 210, "pstat": [203, 207], "psutil": 17, "pt": 222, "pt2": [234, 267, 268], "publish": [3, 252], "pull": [121, 203, 204, 222, 241], "purpos": [128, 135, 193, 252], "purppos": 56, "push": 210, "push_back_batch": 9, "put": [144, 164, 230, 238], "put_custom_op_inplac": 115, "pv": 222, "pwd": [221, 231, 264], "pwle": 196, "pwpl": 196, "py": [9, 84, 93, 95, 121, 125, 126, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 251, 253, 258, 264, 267, 268, 269, 270], "py3": 264, "py_impl": 207, "pybind11": 264, "pybind11_detailed_error_messag": 206, "pycapsul": 93, "pyindex": 264, "pyinstrument": 9, "pynvml": [192, 212], "pyplot": [195, 201, 203, 205, 207], "pyre": [79, 80], "pytest": 264, "python": [4, 26, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 93, 116, 117, 135, 142, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 247, 259, 264], "python3": [93, 196, 203, 204, 206, 207, 209, 210, 214, 219, 224, 232, 236, 237, 238, 242, 247, 253, 264, 268, 269, 270], "python_cod": [203, 207], "python_variable_method": 219, "pythonpath": [192, 212, 264], "pytorch": [3, 9, 79, 80, 95, 96, 108, 121, 135, 192, 194, 196, 197, 203, 204, 207, 210, 212, 217, 219, 224, 225, 226, 228, 230, 232, 233, 234, 238, 240, 241, 253, 264, 267, 268, 269, 270], "pytorch_half_pixel": [267, 268], "pytorch_nvml_based_cuda_check": 265, "pytre": [267, 268, 269, 270], "q": 96, "q_proj": [197, 238, 255, 257], "qcgg": 228, "qeho": 197, "qisr": 196, "qjxu": 196, "qk": 228, "qk_layernorm": [230, 238], "qkka": [196, 255], "qkma": [196, 255], "qksl": 196, "qkv": 214, "qkv_proj": [214, 219], "qlinear_unpack": 93, "qlinearaveragepool": [26, 39], "qlinearconv": [26, 40], "qlqj": 228, "qlut": 196, "qmka": [196, 255], "qqll": 196, "qr": 93, "qrzf": 196, "qtensor": 52, "qua": [], "qualnam": [10, 60, 95, 115, 123, 135, 143, 156], "quantil": [93, 119], "quantiz": [52, 93], "quantized_gru_cel": 93, "quantized_lstm_cel": 93, "quantized_rnn_relu_cel": 93, "quantized_rnn_tanh_cel": 93, "quantized_tensor": [9, 26], "quantizedtensor": 52, "quantizelinear": 130, "queri": [96, 128, 228], "query2": 228, "query_po": 214, "query_st": 214, "quick": 142, "quickgelu": [26, 41, 181, 188, 196, 197], "quickgelupattern": [181, 188, 228, 261], "quiet": [56, 106, 115, 210, 213, 240, 267, 268, 269, 270], "quvb": 196, "r": [15, 83, 142, 144, 151, 191, 192, 193, 194, 195, 196, 197, 203, 205, 207, 210, 212, 219, 240, 241, 242, 247, 249, 263, 264, 265, 267, 268, 269, 270], "r2": [209, 236], "r2_score": [209, 236], "rad2deg": 93, "rad2deg_": 93, "rain": 222, "rais": [18, 57, 60, 92, 93, 99, 106, 113, 115, 117, 132, 135, 140, 142, 193, 195, 196, 197, 201, 203, 205, 207, 210, 215, 219, 224, 225, 226, 230, 232, 233, 234, 237, 240, 247, 253, 265, 267, 268, 269, 270, 271], "raise_exc": [92, 93, 113, 196, 197], "raise_list": [55, 93, 109, 115, 135], "ran": 123, "rand": [21, 109, 112, 201, 203, 205, 207, 247, 249, 253], "randint": [194, 214, 219, 220, 222, 228, 229, 230, 237, 238, 257], "randn": [92, 93, 111, 198, 204, 206, 208, 210, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 247], "random": [10, 18, 19, 21, 61, 123, 143, 194, 198, 201, 207, 222, 247, 257, 260], "random_fe": 10, "random_ord": 143, "rang": [52, 113, 193, 194, 197, 201, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 219, 220, 221, 222, 227, 228, 229, 230, 231, 235, 236, 237, 238, 247, 257, 267, 268], "range_nod": 169, "rank": [113, 119, 135, 142, 196, 216, 247, 249, 267, 268, 271], "rank_0": [267, 268], "rank_3_cast": [267, 268], "rank_tensor": [267, 268], "rather": [247, 271], "rational": [203, 204, 241], "rau": [], "ravel": [209, 236], "raw": [15, 57, 203, 207, 262], "raw_convolut": 193, "rcond_tensor": 93, "rcrg": 255, "rcyw": 228, "rd": [221, 231], "re": [9, 116, 193, 203, 205, 209, 210, 219, 228, 236, 247, 267, 268, 269, 270], "reach": [142, 209, 236, 249], "read": [228, 254], "read_csv": 195, "read_fil": 93, "readibl": 228, "real": [9, 10, 95, 194, 210, 234, 267, 268], "realiz": [203, 210], "realize_and_forward": [203, 210], "realli": [144, 145, 146, 150, 152, 154, 158], "reason": [115, 142, 210, 219, 230, 238, 249], "receiv": [4, 115, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 206, 210, 249], "receivers_idx": 210, "recent": [9, 57, 125, 142, 210, 219, 247, 253, 269, 270], "recip": [60, 62, 107, 215, 216, 217, 224, 227, 229, 232, 235, 237, 251, 258], "reciproc": [93, 95, 130, 196, 197], "reciprocal_": 93, "recommend": [204, 271], "recompil": [203, 207], "recompute_scale_factor": [95, 267, 268, 269, 270], "record": [203, 207, 219], "record_compilation_metr": 203, "recov": 271, "recurr": 212, "recurs": [60, 130, 135, 137, 142, 196], "red": 154, "redirect_stderr": [210, 214], "redirect_stdout": [197, 203, 205, 207], "reduc": [93, 95, 135, 139, 144, 156, 158, 203, 205, 228, 260, 271], "reduce_nod": 182, "reduce_prod": 95, "reduce_scatter_tensor": 93, "reduce_scatter_tensor_coalesc": 93, "reducemax": [95, 101], "reducemean": [95, 97, 196, 197], "reducereshap": 144, "reducereshapepattern": [142, 144, 158, 200, 228, 249, 261], "reducesum": [95, 97, 101, 182, 188, 200, 204, 224, 231, 232, 249, 267, 268], "reducesum_2": 267, "reducesum_6": 267, "reducesum_7": 267, "reducesum_9": 267, "reducesum_output_0": 267, "reducesumnorm": 144, "reducesumnormalizepattern": [142, 144, 157, 228, 249, 261], "reduct": [95, 138, 144, 157, 200, 238, 267, 268], "redund": 15, "ref": [26, 93, 109, 112, 193, 210, 227, 235, 247, 267, 268, 269, 270], "refactor": [210, 219, 232], "refer": [9, 16, 93, 98, 109, 111, 112, 115, 119, 193, 196, 204, 206, 207, 210, 214, 227, 228, 232, 234, 235, 246, 247, 251, 253, 267, 268], "reference_rank": [267, 268], "referenceevalu": [26, 111, 115, 135, 193, 210, 235, 247], "reflection_pad1d": 93, "reflection_pad1d_backward": 93, "reflection_pad2d": [93, 95], "reflection_pad2d_backward": 93, "reflection_pad3d": 93, "reflection_pad3d_backward": 93, "regist": [60, 62, 93, 107, 109, 110, 117, 135, 139, 142, 196, 212, 215, 217, 221, 223, 224, 226, 230, 231, 232, 234, 238, 239, 258, 267, 268, 269, 270, 271], "register_additional_serialization_funct": [214, 220], "register_buff": [206, 228], "register_cache_seri": [230, 238], "register_cal": 117, "register_constraint_dimens": 135, "register_custom_op": [93, 196], "register_dynamic_objects_from_dim": 135, "register_dynamic_objects_from_shap": 135, "register_fak": [226, 234], "register_inplac": 93, "register_kernel": [225, 233], "register_named_modul": 110, "register_pytree_flatten_spec": 217, "register_pytree_nod": 217, "register_us": 135, "registered_funct": 109, "registr": [115, 203], "registri": [234, 267, 268], "regress": [192, 204, 211, 212, 239, 258, 271], "regular": 213, "reject": 142, "rel": [56, 111, 115, 119, 210, 213], "relat": [193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 271], "releas": [264, 265], "reli": [17, 18, 60, 92, 93, 115, 193, 207, 228, 246, 271], "relu": [93, 95, 109, 112, 128, 130, 144, 155, 185, 188, 203, 204, 205, 207, 208, 228, 247, 249, 267, 268, 269, 270], "relu6": 93, "relu_": [93, 95], "relu_1": 207, "relu_2": 207, "relu_3": 207, "relubackward0": [109, 112, 208], "remain": [109, 135], "remaind": [93, 95], "remainder_": 93, "remark": 123, "remov": [4, 57, 93, 95, 109, 115, 117, 135, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 196, 199, 200, 207, 217, 221, 228, 230, 231, 234, 236, 238, 247, 249, 259, 260, 261, 271], "remove_constants_for_initi": 142, "remove_custom_op_inplac": 115, "remove_ident": [135, 137, 142, 249], "remove_identity_nod": [135, 200, 228, 247, 249], "remove_initi": [228, 249], "remove_inplac": [109, 117], "remove_inplace_nod": 109, "remove_int": 60, "remove_shape_info": 261, "remove_unnecessary_slic": 117, "remove_unus": [135, 137, 197, 200, 207, 228, 247, 249], "renam": [15, 55, 71, 92, 93, 109, 115, 128, 135, 193, 212, 215, 216, 218, 227, 232, 239, 247, 258, 271], "rename_allow": [92, 93, 135], "rename_dynamic_dimens": 15, "rename_dynamic_express": 15, "rename_in_local_funct": 135, "rename_input": [71, 92, 93, 128], "rename_nam": 135, "render": [15, 115, 135, 142, 249], "renorm": 93, "renorm_": 93, "reob": 197, "reorder": [196, 207, 249], "reorder_cach": [230, 238], "reorder_functions_in_proto": [119, 196, 197], "reorder_token_0": 207, "reorder_token_1": 207, "reorder_token_2": 207, "reorder_token_3": 207, "reorder_token_4": 207, "reorderoutput": 207, "repeat": [3, 9, 19, 56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 93, 95, 97, 194, 195, 201, 203, 205, 207, 240, 241, 242, 263], "repeat1": [203, 205], "repeat_interleav": [93, 95], "repeat_interleave_self_int": 95, "repeatedcompositecontain": 207, "repetit": 71, "replac": [4, 10, 15, 18, 26, 92, 93, 95, 111, 112, 113, 115, 117, 135, 137, 142, 144, 145, 148, 151, 153, 155, 156, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 202, 203, 204, 205, 207, 210, 221, 224, 229, 230, 231, 232, 237, 238, 246, 247, 249, 261, 267, 268, 269, 270], "replace_autocast_with_hop_pass": 207, "replace_by_custom_op": [115, 210], "replace_ph": 207, "replace_problematic_function_before_trac": 117, "replace_set_grad_with_hop_pass": 207, "replace_with_hop_pass_util": 207, "replacezero": [26, 42, 170, 173], "replacezeropattern": [170, 173, 261], "replay_dumped_data": 92, "replic": 264, "replica": 217, "replication_pad1d": 93, "replication_pad2d": 93, "replication_pad3d": 93, "report": [57, 58, 115, 210, 214, 219, 220, 232, 234, 267, 268, 269, 270], "report_export": [212, 214, 219, 230, 238, 239, 258, 271], "report_on": 57, "repositori": [234, 253, 260, 267, 268], "repr": 207, "repres": [117, 193], "represent": 117, "reproduct": [253, 267, 268], "request": [15, 21, 247, 265], "requir": [51, 135, 136, 192, 193, 194, 212, 222, 247, 249, 253, 267, 268], "requires_cuda": 9, "requires_diffus": 9, "requires_executorch": 9, "requires_grad": [95, 101, 209, 219, 236], "requires_monai": 9, "requires_numpi": 9, "requires_onnx": 9, "requires_onnx_array_api": 9, "requires_onnx_diagnost": 9, "requires_onnxruntim": 9, "requires_onnxruntime_train": 9, "requires_onnxscript": 9, "requires_pyinstru": 9, "requires_sklearn": 9, "requires_torch": 9, "requires_transform": 9, "requires_voco": 9, "requires_zoo": 9, "rerun": 213, "res1": [196, 197, 228], "res2": [196, 197, 228], "research": 264, "reserv": [241, 242], "reset": [16, 203, 205, 253], "reset_index": 213, "reset_torch_transform": 16, "reshap": [93, 95, 97, 101, 113, 135, 137, 139, 144, 155, 158, 164, 186, 188, 193, 196, 197, 198, 200, 204, 207, 214, 218, 219, 221, 230, 231, 238, 247, 249, 255, 257, 267, 268], "reshape2": [230, 267, 268], "reshape2of3": 144, "reshape2of3pattern": [93, 142, 144, 155, 158, 200, 228, 249, 261], "reshape2of3patternl_add_19": 200, "reshape2of3patternl_output_29": 196, "reshape2of3patternr__onx_sigmoid": 196, "reshape2of3patternr_input28": 200, "reshape3": 230, "reshape_0": 267, "reshape_1": [214, 218, 219, 230], "reshape_1_output_0": 255, "reshape_2": [214, 230], "reshape_2_output_0": 255, "reshape_3": 214, "reshape_380_new_shap": 196, "reshape_3_output_0": 255, "reshape_a": 95, "reshape_nod": [164, 169, 186], "reshape_output_0": [197, 255, 267], "reshapegemm": 188, "reshapegemmpattern": [186, 188, 228, 261], "reshapematmulreshap": 144, "reshapematmulreshapepattern": [142, 144, 155, 228, 249, 261], "reshapepattern": [142, 144, 158, 228, 249, 261], "reshapereshap": 144, "reshapereshapebinari": 144, "reshapereshapebinarypattern": [142, 144, 158, 200, 228, 249, 261], "reshapereshapepattern": [142, 144, 158, 200, 228, 249, 261], "resid_attn_dropout": [214, 219, 220], "resid_mlp_dropout": [214, 219], "resid_pdrop": [214, 219, 220, 230, 238], "residu": 214, "resiz": [95, 267, 268], "resize_a": 93, "resolv": [267, 268, 269, 270], "respect": 96, "rest": 193, "restor": [18, 116, 135, 219, 222, 230, 238, 259, 260], "restrict": [135, 137, 252], "result": [9, 20, 93, 95, 106, 109, 111, 115, 116, 119, 120, 130, 135, 139, 142, 193, 196, 197, 203, 204, 205, 207, 210, 213, 214, 215, 218, 219, 222, 228, 229, 231, 232, 237, 246, 247, 249, 255, 259, 266, 267, 268, 269, 270], "result_typ": 93, "results_to_str": [119, 196], "ret": 199, "ret_0": 199, "ret_1": 199, "ret_val": [210, 219], "retains_grad": 93, "retlog": 219, "retri": 60, "retriev": [94, 109, 110, 112, 135, 142, 194, 210, 247, 267, 268, 269, 270], "retun": 60, "return": [3, 4, 6, 9, 10, 12, 15, 17, 18, 19, 20, 21, 51, 55, 56, 57, 59, 60, 61, 71, 87, 92, 93, 94, 95, 96, 101, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 247, 249, 253, 257, 265, 267, 268, 269, 270], "return_al": 51, "return_build": [55, 109, 115, 128, 216], "return_debug_mask": 96, "return_dict": 122, "return_initi": [92, 93, 135], "return_n_arg": 116, "return_optimize_report": [55, 109, 115, 135], "return_storag": 71, "return_tensor": 222, "return_v": 199, "return_x_i": 204, "reus": [142, 193], "revers": [20, 95, 135, 247], "reverse_graph_build": [9, 135, 183, 198, 210], "revert": [230, 238, 242], "revisit": 135, "rewrit": [15, 115, 127, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 196, 198, 199, 203, 204, 205, 206, 207, 208, 210, 211, 212, 221, 222, 231, 233, 235, 237, 238, 249, 258, 261, 271], "rewrite_dynamic_shap": 112, "rewrite_mor": 127, "rewritten": [142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 219, 248, 249], "rfft": 93, "rfft2": 93, "rfftn": 93, "rhg": [], "riff": 196, "right": [113, 146, 153, 158, 181, 193, 247, 252], "rjch": 197, "rm": 264, "rmrm": 196, "rms_norm": 93, "rms_norm_ep": [214, 219, 220, 222], "rmu": 268, "rn": 249, "rng": 61, "rnn_relu": 93, "rnn_relu_cel": 93, "rnn_relu_data": 93, "rnn_relu_input": 93, "rnn_tanh": 93, "rnn_tanh_cel": 93, "rnn_tanh_data": 93, "rnn_tanh_input": 93, "roll": [93, 95, 267, 268, 269, 270], "root": [117, 203, 207, 210, 219], "rope": [122, 222], "rope_sc": [214, 219, 220, 222, 230, 238], "rope_theta": [214, 219, 220, 230, 238], "rope_typ": 222, "rot": [203, 205, 207], "rot90": 93, "rotari": [26, 43, 189], "rotary_emb": [214, 219, 220, 255], "rotaryconcatpart": 144, "rotaryconcatpartpattern": [142, 144, 159, 200, 228, 249, 261], "rotaryembed": 189, "rotaryembeddingpattern": [135, 137, 189], "rotat": 210, "round": [93, 95, 130], "round_": 93, "rounding_mod": 95, "row": [9, 195, 200, 213, 247, 249], "row_missing_chunk": 210, "row_missing_idx": 210, "row_stack": 93, "rqsrt": [95, 101], "rrelu": [93, 95], "rrelu_with_noise_backward": [93, 95], "rsize": [267, 268], "rsqrt": [93, 113, 196, 197, 214], "rsqrt_": 93, "rsqrt_1": [196, 197, 214], "rsqrt_2": [196, 197, 214], "rsqrt_3": 214, "rsqrt_4": 214, "rst": [9, 267, 268, 269, 270], "rsub": [93, 95], "rtol": [9, 111, 115, 119, 210], "rtopt": [56, 57], "rtx": [194, 203, 205, 207], "ru": 111, "ruf015": 195, "ruff": 264, "rule": [196, 235, 237, 238, 267, 268, 269, 271], "run": [4, 6, 9, 19, 21, 26, 51, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 84, 85, 86, 87, 92, 93, 106, 107, 109, 110, 111, 112, 113, 115, 127, 135, 137, 142, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 247, 249, 253, 259, 261, 264, 265, 267, 268, 269, 270, 271], "run_": 203, "run_align": 111, "run_backwa": 242, "run_backward": 242, "run_benchmark": [4, 195], "run_decomposit": [210, 231, 271], "run_dlpack": [21, 51], "run_export": [106, 267, 268, 269, 270], "run_fx_nod": 111, "run_infer": 87, "run_nod": [110, 203, 207, 210, 247, 267, 268], "run_onnx_infer": 87, "run_opt": 92, "run_param": [14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "run_python_script_140105527784512": [], "run_python_script_140105528643968": [], "run_python_script_140105528860224": [], "run_python_script_140639890712320": 247, "run_python_script_140639890758336": 247, "run_python_script_140639893191040": 247, "run_training_api": 21, "run_with_ortvaluevector": [51, 92, 242], "running_mean": 95, "running_var": 95, "runopt": 92, "runpython": 177, "runpythonerror": [247, 253], "runtest": 9, "runtim": [18, 92, 93, 111, 115, 196, 215, 218, 227, 228, 229, 235, 237, 264, 265, 269, 270], "runtime_except": [267, 268], "runtime_wrapp": 242, "runtimeerror": [196, 197, 203, 205, 206, 207, 210, 220, 267, 268, 271], "rvoh": 196, "rw": 111, "rx": 193, "ry": [111, 193], "ryqn": 196, "rz": 111, "s0": 223, "s1": [198, 223], "s10": [219, 222], "s14": 219, "s15": 15, "s16": [215, 219, 227, 229, 235, 237, 267, 268, 269, 270], "s2": [198, 210, 219, 222], "s23": [215, 229, 237], "s29": 210, "s30": 210, "s31": 210, "s35": [215, 216, 219, 227, 229, 235, 236, 237, 267, 268, 269, 270], "s43": [215, 219, 229, 237, 268, 270], "s47": 219, "s52": 210, "s54": 210, "s55": 215, "s57": 210, "s58": [219, 229, 268, 270], "s58xs43": 268, "s62": 219, "s66": [219, 222], "s69": 217, "s7": 229, "s72": 210, "s77": [204, 268], "s79": 210, "s80": 219, "s81": 219, "s84": 210, "s85": 210, "s89": 219, "s90": [227, 235, 267, 268, 269, 270], "s94": 210, "s96": [210, 219], "saaa": 255, "safe": [264, 269, 270], "safe_softmax": 93, "sai": [193, 247], "same": [21, 87, 92, 93, 95, 109, 111, 115, 119, 127, 130, 135, 137, 139, 142, 167, 170, 193, 194, 196, 207, 210, 215, 216, 217, 222, 224, 225, 226, 228, 229, 232, 233, 234, 237, 238, 240, 247, 249, 261, 263, 269, 270, 271], "same_a": 135, "same_dimens": 135, "same_function_proto": 130, "same_shap": [135, 142], "same_signatur": 109, "samechildren": 144, "samechildrenpattern": [142, 144, 145, 228, 249, 261], "samex": 107, "sampl": 210, "sarg": 115, "save": [4, 10, 18, 55, 84, 87, 92, 109, 115, 127, 135, 136, 144, 152, 183, 191, 207, 210, 216, 227, 228, 230, 234, 235, 238, 264, 267, 268], "save_ep": 109, "save_for_backward": 242, "saved_inv_std_var": 197, "saved_inv_std_var_token_10": 197, "saved_inv_std_var_token_11": 197, "savefig": [195, 201, 203, 205, 207], "scalar": [93, 95, 113, 135, 142, 144, 155, 179, 180, 186, 188, 214, 219, 224, 228, 232, 249, 269, 270], "scalar_mod": 93, "scalar_mode_out": 93, "scalar_oth": 93, "scalar_out": 93, "scalar_scalar": 93, "scalar_self": 93, "scalar_tensor": [93, 95, 218, 269, 270], "scalar_tensor_default": [196, 197, 232, 238, 267, 268], "scalar_tensor_default_1": [267, 268], "scalar_tensor_default_2": [232, 267, 268], "scalar_tensor_out": 93, "scalar_typ": 95, "scalararrai": 93, "scalarint": 93, "scalaropt_dim": 93, "scalaropt_dim_dtyp": 93, "scalaropt_dtyp": 93, "scalaropt_dtype_out": 93, "scalaroth": 93, "scalarrayarrai": 93, "scalarrayint": 93, "scalarself": 93, "scale": [52, 95, 96, 144, 154, 186, 214, 222, 228, 257], "scale_d": 95, "scale_factor": [95, 96, 267, 268, 269, 270], "scale_grad_by_freq": 95, "scale_h": 95, "scale_w": 95, "scaled_dot_product_attent": [96, 109, 214, 230, 238, 247, 267, 268], "scaled_dot_product_attention_1": [214, 230, 238], "scaled_dot_product_flash_attention_for_cpu": 93, "scan": [95, 212, 224, 226, 239, 258, 267, 268, 269, 270, 271], "scan_0_x": [231, 267, 268], "scan_1_mul": [267, 268], "scan_combine_graph_0": [221, 231, 267, 268, 269, 270], "scan_graph": 95, "scan_init": 95, "scan_input": 95, "scan_input_direct": [231, 267, 268], "scan_output_ax": [231, 267, 268], "scan_output_direct": [231, 267, 268], "scanned_x": [107, 221, 231], "scanop": [267, 268], "scatter": [93, 95], "scatter_": 93, "scatter_add": [93, 95], "scatter_add_": [93, 95], "scatter_nod": 168, "scatter_reduc": 95, "scatter_reduce_": [93, 95], "scatter_reduce__two": 95, "scatter_reduce_two": 95, "scatterel": [26, 44, 267, 268], "scatternd": [138, 168, 170, 171, 174, 175, 187, 196, 197, 200, 238, 267, 268], "scatternd_output_0": [197, 267], "scatterndofshap": [26, 45, 168, 170, 171, 174, 175], "sceanrio": 266, "scenario": [3, 26, 109, 194, 203, 205, 207, 267, 268, 269, 270], "schedul": [142, 249], "schema": [14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 115, 116, 206, 242], "schema_str": [225, 233], "schh": 255, "scikit": [9, 55, 192, 193, 197, 198, 208, 211, 258, 264, 271], "scipi": [221, 231, 264], "scipt_nam": 195, "score": 12, "score_nam": 12, "scratch": 228, "script": [3, 4, 9, 57, 59, 79, 83, 84, 85, 86, 128, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 245, 253, 266, 269, 270], "script_arg": [194, 196, 197, 201, 203, 205, 207, 213], "script_nam": [4, 59, 195], "scroll": [267, 268, 269, 270], "scto": 228, "sdfx": 255, "sdpa": 195, "sdpython": [192, 212, 251, 264], "sdup": 197, "se": 218, "search": [20, 247, 249], "second": [17, 60, 119, 123, 130, 131, 139, 144, 164, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 271], "secondari": [56, 194], "section": [142, 193, 247, 248, 249, 271], "see": [9, 10, 12, 21, 26, 57, 58, 61, 92, 93, 95, 96, 108, 109, 110, 115, 117, 118, 119, 121, 122, 124, 125, 126, 128, 135, 137, 138, 142, 166, 177, 192, 194, 195, 197, 203, 204, 210, 212, 214, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 238, 240, 241, 247, 248, 249, 261, 264, 267, 268, 269, 270, 271], "seem": [123, 193, 228, 264, 265, 271], "seen": [217, 247], "select": [109, 115, 135, 206, 213, 221, 231, 247, 259, 267, 268, 269, 270], "select_1": [221, 231, 267, 268, 269, 270], "select_2": [221, 231], "select_backward": 93, "select_copy_int": 95, "select_int": [95, 267, 268, 269, 270], "select_output": 135, "select_scatt": [93, 95], "self": [6, 9, 56, 60, 92, 93, 95, 109, 111, 112, 115, 117, 122, 135, 136, 138, 139, 142, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 247, 249, 253, 267, 268, 269, 270], "self_attn": [197, 214, 219, 220, 238, 257], "self_flatten": [267, 268], "self_int": 93, "self_is_result": 95, "self_out": 93, "self_scalar": 93, "self_scalar_out": 93, "self_tensor": 93, "sell": 252, "selu": [93, 130, 144, 155], "selu_": 93, "semant": 117, "send": 135, "sens": [144, 156, 247], "sent": [4, 17], "sep": 18, "separ": [3, 4, 18, 57, 58, 71, 92, 93, 127, 135, 137, 142, 195, 219], "seq": [144, 160, 194, 200, 228, 249, 257], "seq_": 18, "seq_len": [214, 219, 227, 235], "seq_length": [15, 222, 230, 238, 268], "seq_length_multipl": 123, "sequenc": [9, 18, 55, 95, 96, 97, 109, 115, 121, 124, 125, 126, 131, 135, 139, 140, 142, 144, 151, 155, 156, 158, 160, 163, 164, 165, 169, 170, 182, 186, 188, 190, 193, 228, 247, 248, 249, 264], "sequence_inc": 123, "sequence_length": [123, 222], "sequence_length2": [123, 222], "sequenceat": [144, 160, 267, 268], "sequenceconstruct": [144, 160], "sequenceconstructat": 144, "sequenceconstructatpattern": [142, 144, 160, 228, 249, 261], "sequenceempti": [267, 268], "sequenceinsert": [267, 268], "sequenti": [92, 93, 204, 224, 232, 249], "serd": 207, "serial": [115, 116, 217, 230, 238], "serialize_arg": 116, "serialize_on": 116, "serialized_type_nam": 217, "serializetostr": [21, 193, 196, 197, 200, 207, 209, 210, 228, 236, 249], "sero": 95, "sess": [19, 21, 56, 87, 92, 193, 201, 207, 209, 210, 228, 236], "sess1": 197, "sess2": 197, "session": [19, 21, 51, 207], "session_opt": 21, "sessionopt": [8, 21, 51, 201, 207, 210], "set": [4, 9, 15, 20, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 93, 94, 105, 109, 110, 113, 115, 130, 135, 137, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 207, 209, 210, 214, 215, 216, 219, 220, 227, 230, 235, 236, 238, 243, 245, 247, 249, 261, 264, 265, 267, 268, 269, 270, 271], "set1": 9, "set2": 9, "set_current_meta": 203, "set_descript": [203, 205, 207], "set_devic": [203, 205, 207], "set_eval_fram": 242, "set_if_more_precis": 135, "set_index": [194, 195, 203, 205, 207], "set_meta": 207, "set_nam": 135, "set_rank": [135, 247, 249], "set_replac": 230, "set_sequ": [135, 247], "set_shap": [135, 207, 247, 249], "set_shape_type_custom": 139, "set_shape_type_op_ani": [139, 207], "set_typ": [135, 247, 249], "set_type_shape_binary_op": 139, "set_type_shape_gemm": 139, "set_type_shape_matmul": 139, "set_type_shape_or_rank": 135, "set_type_shape_reduce_op": 139, "set_type_shape_reshap": 139, "set_type_shape_unary_op": [139, 247], "set_type_shape_unary_op_ab": 139, "set_value_shap": [135, 247], "set_xlim": 195, "setattr": [115, 207, 217], "setitem": [95, 117, 267, 268, 269, 270], "setitem_with_transform": 117, "setup": [135, 264], "setupclass": 9, "sever": [210, 240], "sgdregressor": [209, 236], "sgm": 247, "sgn": 93, "sgn_": 93, "sh1": [131, 139, 202], "sh2": [131, 139, 202], "shall": 252, "shape": [6, 10, 15, 18, 19, 21, 52, 56, 60, 61, 71, 87, 92, 93, 95, 97, 100, 101, 106, 107, 109, 111, 112, 114, 115, 116, 117, 119, 122, 127, 128, 130, 131, 135, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 198, 200, 201, 202, 203, 205, 207, 208, 210, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 238, 239, 248, 257, 258, 261, 264, 265, 266, 271], "shape_10": [267, 268], "shape_11": [267, 268], "shape_1_output_0": 267, "shape_9": [267, 268], "shape_again": 56, "shape_as_input": 135, "shape_before_left": 156, "shape_before_mul": 156, "shape_before_right": 156, "shape_env": 219, "shape_funct": [115, 210], "shape_infer": 207, "shape_left": 156, "shape_nam": 200, "shape_output_0": [267, 268], "shape_prop": 207, "shape_right": 156, "shape_scenario": [71, 195], "shape_type_comput": [9, 135, 207, 224, 227, 228, 257, 267, 268], "shapeconst": 135, "share": [139, 219, 220, 224, 228, 232, 237, 238, 264, 267, 268, 269, 270], "shift": 95, "shift_tensor": [267, 268], "short": [112, 135, 183, 198, 243, 245, 267, 268, 269, 270], "short_factor": [214, 219, 220], "short_nam": [144, 170, 175, 177, 179, 188], "short_ob": 207, "short_reason": 115, "shortcut": [135, 247], "shorten": [115, 135], "shorter": 247, "should": [6, 55, 60, 62, 71, 84, 92, 93, 107, 109, 110, 115, 116, 117, 127, 135, 137, 142, 156, 192, 194, 212, 220, 223, 224, 225, 226, 228, 229, 232, 233, 234, 237, 247, 249, 267, 268, 269, 270, 271], "show": [9, 12, 87, 92, 93, 109, 115, 119, 135, 142, 193, 200, 202, 204, 206, 212, 213, 218, 219, 225, 226, 228, 231, 233, 234, 246, 247, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271], "shown": [217, 230, 238, 247], "shuffl": 204, "shzb": 196, "side": [139, 156, 196], "sig": [15, 200, 210, 219, 228, 249], "sigmoid": [92, 93, 95, 130, 167, 170, 181, 188, 196, 200, 202, 206, 208, 247, 253, 267, 268, 269, 270], "sigmoid_": [93, 95], "sigmoid_1": 247, "sigmoid_backward": 93, "sigmoid_output_0": [267, 268], "sign": [93, 95, 130], "sign_": 93, "signatur": [15, 105, 109, 115, 122, 135, 207, 208, 213, 214, 215, 216, 217, 227, 228, 229, 235, 237, 247, 251, 253, 268], "signaturefloat1": [106, 107], "signatureint1": [106, 107], "signatureint2": [106, 107], "signaturelistfixedlength": [106, 107], "signaturelistfixedwithnon": [106, 107], "signaturelistvariablelength": [106, 107], "signatureshapeasindex": [106, 107], "signbit": 93, "sii": 267, "silent": [60, 62, 107], "silu": [93, 95, 113, 196, 197, 214, 219, 220, 222], "silu_": [93, 95], "silu_1": 214, "silu_backward": 93, "sim": 101, "similar": [12, 54, 109, 135, 137, 144, 155, 240], "simpl": [15, 18, 21, 57, 110, 135, 193, 194, 195, 196, 197, 203, 205, 206, 207, 210, 253, 261, 271], "simple_rotari": [9, 170], "simple_update_value_shape_with_nod": [135, 207], "simplefilt": [196, 197, 203, 205, 207, 210, 253], "simpler": 228, "simplerotari": 170, "simplerotarypattern": [170, 171, 261], "simpli": 193, "simplic": [209, 236], "simplifi": [18, 135, 195, 248], "simplified_layer_norm": [9, 188], "simplifiedlay": 197, "simplifiedlayernorm": [26, 46, 188], "simplifiedlayernormalizationpattern": [188, 190, 228, 261], "simplifyingeasypatternfunct": 177, "sin": [93, 95, 97, 113, 130, 144, 155, 189, 196, 214, 225, 226, 230, 233, 234, 238, 257, 267, 268, 269, 270], "sin2": [267, 268], "sin_": 93, "sin_2": [267, 268], "sin_false_graph_0": [267, 268], "sin_token_7": 196, "sin_true_graph_0": [267, 268], "sin_true_graph_0__true_graph_0": [267, 268], "sinc": [60, 62, 93, 107, 116, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 237, 238, 249], "sinc_": 93, "singl": [132, 135, 247, 267], "singleton": 222, "sinh": [93, 95, 130, 144, 155], "sinh_": 93, "site": [93, 196, 203, 204, 206, 207, 209, 210, 214, 219, 224, 232, 236, 237, 238, 247, 253, 268, 269, 270], "situat": [206, 209, 236], "size": [15, 19, 60, 61, 71, 87, 93, 95, 96, 97, 101, 117, 122, 123, 135, 144, 152, 193, 194, 195, 203, 205, 206, 207, 210, 214, 217, 219, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 235, 238, 240, 242, 247, 249, 251, 263, 267, 268, 269, 270], "size_after_j": [267, 268], "size_dim_j": [267, 268], "size_model": [203, 205, 207], "size_oblivi": 219, "size_typ": 15, "sizei": 210, "sizex": 210, "skeleton": 142, "sketch": [183, 188], "skip": [9, 60, 203, 205, 207, 210, 217, 249], "skip_kei": 240, "skip_special_token": 222, "skip_test": 264, "skipif_ci_appl": 9, "skipif_ci_linux": 9, "skipif_ci_window": 9, "skipif_not_onnxrt": 9, "skipif_transform": 9, "skiplayernorm": [26, 47, 188, 190, 191, 228], "skiplayernormalizationpattern": [188, 190, 228, 261], "skl": [9, 16, 210, 251], "sklearn": [204, 209, 210, 236, 251, 264], "skwarg": 115, "sl": 228, "sl2": [209, 236], "sleep": [3, 203, 205], "slice": [95, 110, 113, 117, 144, 161, 162, 197, 200, 206, 214, 215, 219, 221, 228, 230, 231, 238, 255, 257, 267, 268, 269, 270], "slice14_dim_2": 267, "slice21_dim_1": 268, "slice_": 197, "slice_0": 267, "slice_1": [26, 48, 206, 214, 215, 219, 221, 228, 231, 267, 268, 269, 270], "slice_10": [26, 48, 200, 214, 219, 230], "slice_11": [117, 200, 214, 219, 230], "slice_12": [117, 200, 214, 219, 230], "slice_13": [117, 200, 214, 219], "slice_14": [214, 219, 238], "slice_15": [214, 219], "slice_16": 214, "slice_17": 214, "slice_18": 214, "slice_19": [214, 230], "slice_1_output_0": [255, 267], "slice_2": [214, 215, 219, 221, 228, 231, 255, 267, 268, 269, 270], "slice_20": [214, 230], "slice_21": [214, 230], "slice_22": [214, 228, 230], "slice_23": [214, 230], "slice_24": [196, 214, 230], "slice_25": [196, 214, 230], "slice_26": [197, 214, 230, 238, 257], "slice_27": [197, 214, 230, 238, 257], "slice_28": [214, 230, 238, 257], "slice_29": [214, 230, 238, 257], "slice_2_output_0": [197, 267], "slice_3": [214, 219, 221, 228, 230, 231, 255, 267, 268, 269, 270], "slice_30": [214, 230, 238, 257], "slice_31": [214, 230, 238, 257], "slice_32": [214, 230, 238, 257], "slice_33": [214, 230, 238, 257], "slice_34": [214, 230], "slice_35": [214, 230], "slice_36": [214, 230], "slice_37": [214, 230], "slice_38": [214, 230], "slice_39": [214, 230], "slice_4": [214, 219, 221, 228, 230, 231], "slice_40": [214, 230], "slice_41": [214, 230, 238, 257], "slice_42": [214, 230, 238, 257], "slice_43": [214, 230, 238, 257], "slice_44": [214, 230, 238, 257], "slice_45": [214, 230, 238, 257], "slice_46": [214, 238, 257], "slice_47": [214, 238, 257], "slice_48": [238, 257], "slice_49": [238, 257], "slice_498": 196, "slice_5": [214, 219, 221, 230, 231], "slice_515": 196, "slice_57": 238, "slice_6": [214, 219, 221, 230, 231], "slice_7": [214, 219], "slice_8": [214, 219, 238, 257], "slice_9": [214, 219, 230], "slice_backward": [93, 95], "slice_forward": [267, 268, 269, 270], "slice_indic": 214, "slice_length_3": [267, 268], "slice_output_0": [255, 267], "slice_scatt": [93, 267, 268, 269, 270], "slice_scatter_1": [196, 197, 238, 267, 268, 269, 270], "slice_scatter_2": 238, "slice_tensor": [267, 268, 269, 270], "sliceslic": 144, "sliceslicepattern": [142, 144, 161, 228, 249, 261], "sliceslicepattern_init7_s1_0_start": 228, "sliceslicepattern_init7_s1_0_start2": 228, "sliceslicepattern_init7_s1_1_axi": 228, "sliceslicepattern_init7_s1_1_axis2": 228, "sliceslicepattern_init7_s1_30_end": 228, "sliceslicepattern_init7_s1_30_end2": 228, "slicessplit": 144, "slicessplitpattern": [142, 144, 162, 196, 200, 228, 230, 249, 257, 261], "slicevari": [267, 268, 269], "slide_tensor": [95, 196], "slide_tensor11": 230, "slide_tensor13": 230, "slide_tensor17": 230, "slide_tensor18": 230, "slide_tensor20": 230, "slide_tensor22": 230, "slide_tensor24": 230, "slide_tensor3": 230, "slide_tensor7": 230, "slide_tensor9": 230, "sliding_window": [124, 214, 219, 220], "slidingwindowcach": [], "slogdet": 93, "slope": [95, 153, 249], "slow": [57, 135, 137, 204, 240, 247, 264, 271], "slow_conv3d": 93, "slow_script": 57, "slwq": 196, "small": [71, 135, 192, 193, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 228, 232, 247, 257, 258, 271], "smaller": [57, 58, 144, 152], "smi": 3, "smm": 93, "smollm": 122, "smooth_l1_loss": 93, "smooth_l1_loss_backward": 93, "smooth_l1_loss_backward_out": 93, "snapshot_fak": 207, "snvc": 197, "so": [57, 60, 105, 109, 111, 113, 115, 117, 119, 135, 142, 193, 196, 210, 212, 215, 219, 228, 247, 249, 252, 264], "soft_margin_loss": 93, "soft_margin_loss_backward": 93, "softma": 197, "softmax": [93, 95, 96, 113, 130, 144, 155, 181, 188, 196, 197, 228, 230, 238, 255, 257], "softmax2": 228, "softmax_1": [228, 257], "softmax_nod": 181, "softmax_output_0": 255, "softmaxcrossentropyloss": [130, 144, 153], "softmaxcrossentropyloss_1286": 240, "softmaxcrossentropyloss_1288": 240, "softmaxcrossentropylosscast": 144, "softmaxcrossentropylosscastpattern": [142, 144, 153, 200, 228, 249, 261], "softmaxgrad": [182, 188], "softmaxgradpattern": [182, 188, 228, 261], "softplu": [93, 95, 130, 144, 155], "softplus_backward": 93, "softshrink": 93, "softsign": 130, "softwar": 252, "solut": 247, "solv": [135, 247, 265, 271], "some": [15, 20, 57, 58, 60, 93, 95, 109, 115, 117, 135, 137, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 202, 204, 208, 210, 211, 212, 219, 221, 224, 228, 231, 232, 240, 247, 249, 258, 261, 267, 268, 269, 270, 271], "someth": [15, 84, 92, 93, 110, 135, 142, 218, 219, 228, 230], "somewher": [229, 237], "soon": [135, 240], "sopt_aft": 142, "sort": [15, 93, 95, 196, 210, 267, 268, 269, 270], "sort_stat": [203, 207], "sort_valu": [195, 213], "sortbi": [203, 207], "sorted_cas": [267, 268, 269, 270], "sortkei": [203, 207], "soundli": [214, 232], "sourc": [3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 251, 264, 267, 268], "space": 18, "spars": [93, 95, 214, 219], "sparse_bsc_tensor": 93, "sparse_bsr_tensor": 93, "sparse_coo_tensor": 93, "sparse_csc_tensor": 93, "sparse_csr_tensor": 93, "sparse_dim": 93, "sparse_grad": 95, "sparse_initi": 198, "spatial": [221, 231], "spd": [221, 231], "spec": 270, "spec_nod": 206, "special": [117, 214, 221, 231, 232, 267, 268, 269], "special_bessel_j0": 93, "special_bessel_j1": 93, "special_digamma": 93, "special_entr": 93, "special_erfcx": 93, "special_erfinv": 93, "special_exp2": 93, "special_expit": 93, "special_gammainc": 93, "special_gammaincc": 93, "special_gammaln": 93, "special_i0": 93, "special_i1": 93, "special_log1p": 93, "special_log_ndtr": 93, "special_logit": 93, "special_logsumexp": 93, "special_multigammaln": 93, "special_ndtr": 93, "special_ndtri": 93, "special_polygamma": 93, "special_psi": 93, "special_round": 93, "special_spherical_bessel_j0": 93, "special_xlog1pi": 93, "special_xlogi": 93, "special_zeta": 93, "specif": [4, 9, 15, 61, 113, 117, 135, 137, 142, 200, 249, 259, 261, 264, 271], "specifi": [4, 10, 12, 18, 55, 60, 93, 109, 115, 116, 119, 135, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 216, 246, 247, 249, 261, 268, 270], "speech2text2config": 61, "speed": [192, 194, 198, 201, 211, 258, 271], "speedup": [56, 57, 194, 219, 240], "speedup_increas": [57, 240], "speedup_m": 57, "spend": 207, "spherical_bessel_j0": 93, "sphinx": [16, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 264], "spi": 115, "split": [93, 95, 101, 144, 162, 178, 195, 196, 197, 200, 203, 207, 210, 213, 230, 257, 267, 268, 269, 270], "split1": 178, "split2": 178, "split_nod": [162, 171, 189], "split_output_0": 267, "split_output_1": 267, "split_siz": 95, "split_tensor": 95, "split_to_sequ": 95, "split_with_s": [93, 95], "split_with_sizes_copi": 93, "splitconcat": 144, "splitconcatpattern": [142, 144, 162, 228, 249, 261], "splitext": [197, 207], "splits_token_10": [196, 197], "splits_token_12": 197, "spy": 17, "sq": [221, 231], "sqrt": [93, 95, 96, 130, 153, 154, 181, 196, 197, 210, 221, 230, 231, 267, 268], "sqrt_": 93, "sqrt_1": [221, 231], "sqrt_2": [221, 231], "squar": [93, 210], "square_": 93, "squared_error": 12, "squeez": [93, 95, 144, 165, 210, 227, 230, 238, 249, 267, 268, 269, 270], "squeeze7_dim_0": 267, "squeeze_1": [269, 270], "squeeze_copi": 93, "squeeze_default": 93, "squeeze_dim": 95, "squeezeunsqueez": 144, "squeezeunsqueezepattern": [142, 144, 165, 228, 249, 261], "sr2": [209, 236], "src": [93, 95, 214, 219, 247], "srg": 267, "sscf": 196, "ssgc": 197, "sspaddmm": 93, "ssqu": 196, "ssxy": 196, "st": [95, 96, 97, 100, 101, 135, 139, 225, 226, 247], "st_size": 207, "stabl": [93, 95, 96, 253, 268], "stablediffusion2unet": 118, "stack": [93, 95, 210, 218, 219, 220, 224, 232, 234, 253, 264, 267, 268, 269, 270], "stacktrac": [214, 219, 232, 267, 268, 269, 270], "standalin": 271, "standard": [9, 95, 105, 135, 137, 200, 210, 249, 259, 261, 262], "start": [4, 9, 10, 15, 17, 56, 57, 60, 92, 93, 95, 101, 113, 115, 123, 135, 143, 156, 191, 193, 200, 202, 206, 210, 214, 219, 227, 228, 230, 238, 240, 247, 248, 249, 250, 256, 267, 268, 269, 271], "start_dim": 95, "start_out": 93, "start_spying_on": [17, 203, 205, 207], "start_step": [93, 269, 270], "startswith": 207, "stash_typ": [228, 238, 257], "stat": [6, 17, 20, 57, 87, 200, 203, 205, 207, 228, 249, 260], "state": 271, "statement": 9, "static": [20, 60, 106, 107, 115, 131, 135, 266], "statist": [9, 20, 55, 60, 87, 109, 115, 135, 142, 260], "statistc": 87, "statistics_on_fil": 9, "statistics_on_fold": 9, "statu": [57, 115, 210, 219, 267, 268], "statusexport": 115, "statusexportcod": [115, 210], "std": [93, 203, 205, 207], "std_dim": 95, "std_mean": 93, "stderr": 4, "stdin": 253, "stdout": [4, 9], "step": [63, 64, 65, 66, 67, 68, 69, 70, 71, 95, 101, 115, 142, 177, 196, 203, 204, 205, 206, 207, 209, 212, 219, 222, 234, 236, 248, 249, 253, 267, 268, 269, 271], "stft": 93, "still": [10, 109, 123, 193, 228, 249, 268], "stmt": 9, "stochast": [193, 209, 236], "stop": [4, 17, 55, 92, 93, 109, 115, 135, 137, 142, 200, 202, 203, 205, 207, 228, 240, 247, 249, 267, 268, 269], "stop_aft": [135, 137, 142], "stop_if_except": [4, 195], "stop_if_stat": [230, 238], "stor": 92, "storag": [92, 93, 194, 196, 204], "storage_offset": [95, 214, 232, 267, 268], "storage_offset_cast": [267, 268], "storage_ord": 207, "store": [6, 18, 20, 55, 56, 92, 93, 109, 111, 115, 135, 142, 192, 216, 219, 247, 249, 260], "stori": [221, 231], "str": [3, 4, 6, 9, 10, 12, 14, 15, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 92, 93, 94, 95, 96, 97, 100, 101, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 153, 156, 166, 181, 191, 195, 196, 197, 203, 205, 206, 207, 210, 214, 217, 219, 220, 222, 225, 226, 230, 234, 238, 247, 249, 267, 268, 269, 270], "str_ord": 93, "strategi": [57, 109], "stream": [203, 207], "stretch": [267, 268], "strict": [105, 106, 109, 210, 213, 214, 218, 219, 220, 221, 227, 230, 231, 232, 233, 234, 235, 236, 238, 247, 253, 266, 267, 268, 271], "stride": [93, 95, 101, 207, 214, 218, 219, 232, 268, 269, 270], "stride_dim_j": [267, 268], "string": [4, 9, 12, 15, 18, 56, 57, 58, 93, 109, 112, 115, 116, 119, 130, 132, 135, 142, 166, 194, 206, 207, 210, 219, 242, 247, 267, 268, 269, 270], "string_diff": 15, "string_input": 222, "string_limit": 4, "string_sig": [15, 207], "string_signatur": 15, "string_to_elem_typ": 166, "string_typ": [15, 115, 197, 214, 219, 220, 230, 238], "stringio": [197, 203, 205, 207, 210, 214], "structur": [142, 247, 249, 268, 270], "sua": 268, "sub": [93, 95, 101, 119, 130, 144, 145, 154, 167, 170, 182, 188, 199, 200, 207, 214, 216, 219, 221, 227, 231, 267, 268, 269, 270], "sub1mul": 144, "sub1mulpattern": [142, 144, 163, 200, 228, 249, 261], "sub2": [267, 268], "sub_": 93, "sub_1": [221, 227, 231, 235], "sub_1_false_graph_0": 268, "sub_2": [221, 231, 268, 269, 270], "sub_4": [268, 269, 270], "sub_42": 231, "sub_5": 269, "sub__tensor": 95, "sub_false_graph_0": 267, "sub_nod": [157, 182], "sub_output_0": 267, "sub_tensor": [95, 216], "sub_true_graph_0": [267, 268], "subclass": [60, 62, 107, 225, 233], "subdonorsidx": 210, "subfold": 9, "subgraph": [92, 93, 130, 135, 137, 142, 191, 224, 231, 249, 267, 268], "subject": 252, "sublicens": 252, "submod_1": 214, "submod_3": 214, "submodul": [60, 94, 107, 109, 110, 112, 113, 115, 117, 206, 208, 210, 212, 213, 216, 217, 218, 219, 222, 224, 227, 232, 235, 236, 239, 247, 258, 267, 268, 269, 270, 271], "submodule_nam": 110, "submodule_weight": [269, 270], "submodulenam": 112, "submul": [26, 28, 170], "submulbroadcast": 170, "submulbroadcastpattern": [167, 170, 261], "submulpattern": [167, 170, 261], "subneuron": 208, "subneuron2": [208, 247], "subplot": [195, 201, 203, 205, 207], "subprocess": [4, 210], "subsequ": [135, 137], "subset": [135, 137, 213], "substanti": 252, "substr": 9, "subtoken": 135, "subweightmatrix": 210, "succ": 115, "succe": [115, 247, 253, 265, 268], "success": [212, 219, 239, 258], "successfulli": 115, "successor": [142, 249], "sudo": 264, "suffix": [59, 203, 205, 207, 267, 268], "suggest": [], "suit": [56, 57, 60], "suitabl": 109, "suite_nam": 56, "sum": [12, 56, 93, 95, 179, 180, 193, 196, 200, 205, 207, 210, 217, 221, 223, 224, 231, 232, 242, 249, 267, 268, 269, 270], "sum_1": [200, 217, 221, 223, 224, 231, 232, 267, 268, 269, 270], "sum_12": [231, 267, 268], "sum_1_2": [267, 268], "sum_2": [200, 221, 231], "sum_3": [200, 221, 231], "sum_4": 200, "sum_5": 200, "sum_6": 200, "sum_default": 93, "sum_i": 12, "sum_to_s": 93, "summar": [193, 266], "summari": [4, 73, 195, 200, 207, 213, 234, 240, 253, 271], "summit": [234, 253, 267, 268], "super": [92, 93, 109, 112, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 219, 224, 227, 228, 232, 235, 236, 247, 249, 253, 269, 270], "support": [18, 21, 87, 94, 109, 123, 135, 136, 184, 188, 194, 203, 205, 207, 210, 213, 215, 224, 225, 226, 232, 233, 234, 240, 247, 248, 249, 251, 254, 264, 267, 268, 269, 270, 271], "supported_export": [203, 205, 207], "supported_nod": 217, "supported_nodes_exact_match": 217, "suptitl": [203, 205, 207], "sure": [111, 210, 225, 247, 249], "surround": [144, 146], "suspect": [219, 220, 224, 232, 267, 268, 269, 270], "svd": 93, "svg": [], "svlv": 196, "svw": [], "swap": [144, 164], "swapped_gm": 206, "swich": [144, 155], "switch": [92, 93, 115, 143, 144, 156, 164, 249], "switch_low_high": 18, "switch_ord": 156, "switchorderbinari": [144, 200], "switchorderbinarypattern": [142, 144, 156, 200, 228, 249, 261, 268], "switchreshapeactiv": 144, "switchreshapeactivationpattern": [142, 144, 155, 228, 249, 261], "sy": [3, 9, 18, 196, 197, 202, 203, 205, 207, 210], "sym": [135, 214, 215, 217, 219, 224, 227, 229, 232, 235, 237, 267, 268, 269, 270], "sym_constrain_range_for_s": [95, 218, 229, 237, 269, 270], "sym_constrain_range_for_size_default": [218, 229, 237, 269, 270], "sym_max": 95, "sym_min": 95, "sym_nod": 219, "sym_numel": [93, 219], "sym_numel_default": 219, "sym_siz": [215, 217, 218, 219, 227, 229, 235, 237, 269, 270], "sym_size_int": [95, 219, 230, 269], "sym_size_int3": 230, "sym_size_int4": 230, "sym_size_int5": 230, "sym_size_int6": 230, "sym_size_int_1": [215, 217, 219, 269, 270], "sym_size_int_10": 219, "sym_size_int_11": 219, "sym_size_int_2": [215, 218, 219, 229, 237, 269, 270], "sym_size_int_22": 230, "sym_size_int_23": 230, "sym_size_int_3": [215, 219, 227, 235, 268, 269, 270], "sym_size_int_4": [219, 227, 235, 269, 270], "sym_size_int_5": [219, 227, 235, 269, 270], "sym_size_int_56": 238, "sym_size_int_57": 238, "sym_size_int_6": [219, 269, 270], "sym_size_int_7": [219, 269, 270], "sym_size_int_8": 219, "sym_size_int_9": 219, "sym_strid": 93, "symbol": [95, 109, 135, 219, 220, 224, 232, 264, 267, 268, 269, 270], "symbolic_convert": [203, 210], "symbolic_shap": [109, 207, 219, 230], "symbolize_traceback": 207, "symfloat": [93, 131, 135, 156], "symint": [93, 109, 131, 135, 156, 206, 210, 230, 247, 267, 268, 269, 270], "symints_saved_for_backwards_slic": 242, "sympi": [230, 238, 247, 264, 265], "synchron": [194, 196, 242], "syntax": [57, 58, 247], "sys_admin": 264, "system_info": [203, 205, 207], "t": [93, 95, 135, 181, 186, 188, 195, 201, 203, 204, 206, 209, 210, 217, 219, 225, 226, 228, 234, 236, 241, 247, 249, 265, 267, 268, 269, 270], "t1": [95, 216, 230, 249], "t1_node": 164, "t1r1": 267, "t1r2": [267, 268], "t1r3": [219, 267, 268], "t1r4": 219, "t1s0": 210, "t1s0x1": 210, "t1s0x10": 210, "t1s0x11": 210, "t1s0x16": 210, "t1s0x17": 210, "t1s0x2": 210, "t1s0x3": 210, "t1s1": [111, 210], "t1s10": 210, "t1s10x3": 210, "t1s10x5": 210, "t1s11": 210, "t1s11x3": 210, "t1s16": 210, "t1s17": 210, "t1s1x10": 210, "t1s1x11": 210, "t1s1x3": 210, "t1s1x9": 210, "t1s2": 210, "t1s27x17": 210, "t1s2x1024x512": 197, "t1s2x32x30x80": [230, 238], "t1s2x32x30x96": [214, 219, 220], "t1s3x32x31x96": 219, "t1s40x3": 210, "t1s40x50": 210, "t1s50x3": 210, "t1s5x3": 210, "t1s5x4": 111, "t1s9": 210, "t2": 95, "t2_node": 164, "t7": 230, "t7r1": [219, 267, 268], "t7r2": [219, 267, 268], "t7s0": 210, "t7s0x1": 210, "t7s0x2": 210, "t7s0x3": 210, "t7s1": 210, "t7s17": 210, "t7s1x3": 210, "t7s27": 210, "t7s2x3": [214, 219, 220, 230, 238], "t7s2x33": [214, 219, 220, 230, 238], "t7s3x35": 219, "t7s3x4": 219, "t7s40": 210, "t9": 230, "t9s1": 210, "t9s10": 210, "t9s11": 210, "t9s16": 210, "t9s17": 210, "t9s2": 210, "t9s27": 210, "t9s50x3": 210, "t9s9": 210, "t_": 18, "t_10": 200, "t_12": 200, "t_13": 200, "t_14": 200, "t_16": 200, "t_17": 200, "t_18": 200, "t_2": 204, "t_20": 200, "t_21": 200, "t_22": 200, "t_24": 200, "t_25": 200, "t_26": 200, "t_28": 200, "t_29": 200, "t_3": 204, "t_30": 200, "t_32": 200, "t_33": 200, "t_34": 200, "t_8": 200, "t_9": 200, "t_copi": 93, "t_data": 193, "t_kernel": 193, "taal": 197, "tabl": [93, 109, 166], "tablefmt": [267, 268, 269, 270], "tae": 267, "tail": 240, "take": [3, 4, 55, 60, 62, 93, 95, 107, 108, 109, 111, 113, 115, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 203, 204, 207, 210, 218, 240, 241, 247, 249, 266], "take_along_dim": 93, "taken": [12, 95, 247], "talli": 217, "tan": [93, 95, 130, 144, 155], "tan_": 93, "tanh": [93, 95, 130, 144, 153, 155, 178, 181, 188, 230, 238, 257], "tanh2": 230, "tanh_": 93, "tanh_1": [230, 238, 257], "tanh_backward": 93, "target": [55, 56, 60, 87, 95, 96, 109, 115, 117, 179, 180, 196, 206, 208, 210, 214, 215, 218, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 247, 267, 268, 269, 270], "target_cl": 210, "target_opset": [18, 55, 56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 92, 93, 109, 115, 128, 194, 196, 197, 204, 240], "target_opset_or_existing_proto": 135, "task": [60, 111, 222, 227, 235], "teardownclass": 9, "tell": [9, 17, 57, 112, 115, 117, 125, 130, 132, 135, 142, 156, 225, 226, 233, 234, 247, 249, 271], "temp_doc_mlp": 249, "temp_doc_mlp_opt": 249, "temp_output_data": 4, "temperatur": 222, "temporari": 4, "ten": 240, "tenor": 193, "tensor": [12, 15, 18, 19, 21, 51, 52, 55, 56, 60, 61, 87, 92, 93, 94, 95, 96, 101, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 122, 128, 135, 136, 140, 144, 152, 164, 193, 194, 201, 204, 206, 208, 209, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 242, 248, 249, 257, 266, 267, 268, 269, 270], "tensor_dtyp": 15, "tensor_dtype_to_np_dtyp": 15, "tensor_float": 93, "tensor_float_out": 93, "tensor_i": 203, "tensor_mod": 93, "tensor_out": 93, "tensor_qparam": 93, "tensor_scalar": [93, 113, 214], "tensor_scalar_out": 93, "tensor_tensor": 93, "tensor_tensor_out": 93, "tensor_x": 203, "tensorarrai": 93, "tensorarrayint": 93, "tensorbas": [207, 242], "tensordataset": [209, 236], "tensordot": 93, "tensorflow": 207, "tensorlist_bin": 93, "tensorproto": [15, 18, 20, 21, 135, 138, 166, 198, 202, 247, 249], "tensors_saved_for_backwards_slic": 242, "tensortyp": [233, 234], "tensorvari": [210, 267, 268, 269], "term": 193, "test": [9, 26, 60, 82, 109, 117, 121, 124, 125, 126, 128, 183, 193, 194, 195, 203, 205, 207, 212, 221, 222, 225, 226, 228, 231, 233, 234, 236, 237, 239, 240, 258, 260, 264, 267, 268, 269, 270, 271], "test_cas": 92, "test_el": 95, "test_investigate_onnxruntime_issue_cal": 21, "test_modeling_llama": 121, "test_modeling_phi": [125, 126], "test_onnx_export_dynamic_shap": 264, "testcas": 9, "text": [3, 9, 15, 109, 115, 196, 197, 203, 207, 228, 264], "textwrap": [203, 207, 267, 268, 269, 270], "tfk": [], "tfloat": [21, 138], "tgt": 230, "tgt_bound": 230, "than": [12, 18, 115, 135, 142, 177, 178, 212, 218, 247, 249], "thei": [10, 18, 60, 95, 110, 111, 112, 116, 119, 130, 131, 135, 137, 167, 170, 177, 194, 203, 205, 207, 212, 228, 230, 232, 236, 238, 240, 247, 249, 266, 268, 270], "them": [15, 55, 56, 60, 62, 93, 107, 109, 112, 115, 116, 135, 136, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 196, 204, 212, 216, 217, 219, 240, 247, 249, 261, 267, 268, 271], "then_branch": [199, 224, 232, 267, 268, 269, 270], "thengraph_3": 199, "therefor": 218, "thg": 267, "thi": [3, 4, 6, 9, 10, 12, 15, 18, 21, 26, 51, 55, 56, 57, 60, 62, 71, 87, 92, 93, 94, 95, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 122, 127, 128, 130, 132, 134, 135, 137, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 199, 200, 202, 204, 206, 207, 209, 210, 212, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 246, 247, 248, 249, 252, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271], "thing": [193, 230, 238], "this312": [93, 196, 203, 204, 206, 207, 209, 210, 214, 219, 224, 232, 236, 237, 238, 247, 253, 268, 269, 270], "thnn_conv2d": 93, "those": [10, 57, 93, 135, 213, 230, 238, 247, 271], "though": 228, "three": [178, 194, 213, 247], "threshold": [93, 95, 135, 137, 142], "threshold_": 93, "threshold_backward": [93, 95, 203, 204], "thresholdrelu": 130, "through": [12, 117, 142, 192, 204, 207, 240, 246, 247, 248, 249, 271], "throw": [117, 265], "tid": 201, "tie_word_embed": [214, 219, 220, 222, 230, 238], "tight_layout": [195, 201, 203, 205, 207], "time": [4, 5, 9, 19, 55, 60, 87, 92, 93, 109, 115, 142, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 249, 254, 259, 263, 269, 270], "time1_init": 207, "time_": 57, "time_evaluation_constants_": [92, 93, 249], "time_export": 240, "time_in": [200, 249], "time_it": [57, 195], "time_lat": 240, "time_latency_eag": 240, "time_load": 240, "time_sess": 240, "time_tot": 240, "time_warmup": 240, "time_warmup_eag": 240, "timeout": 4, "timer": 9, "timestamp": 57, "timestamp_column": 57, "timm": [240, 251], "timmrunn": 67, "tin": 242, "tini": [122, 210, 222], "tint64": 138, "titl": [194, 195, 203, 205, 207], "title_prefix": 195, "tk": 210, "tl2": [209, 236], "tlwn": 197, "tm": 194, "tmp": [267, 268], "tmp_0": [267, 268], "tmp_1": [267, 268], "tmp_14": [267, 268], "tmp_18": [267, 268], "tmp_2": [267, 268], "tmp_4": [267, 268], "tmp_5": 268, "tmp_6": [267, 268], "tmp_8": [267, 268], "tn": 210, "tnumpi": 15, "to_1": [214, 269, 270], "to_10": 214, "to_11": 214, "to_12": 214, "to_13": 214, "to_14": 214, "to_15": 214, "to_16": 214, "to_17": 214, "to_18": 214, "to_2": 214, "to_3": [214, 230], "to_4": 214, "to_5": 214, "to_6": [214, 230], "to_7": [214, 230], "to_8": 214, "to_9": 214, "to_csv": [195, 200, 201, 203, 205, 207, 213], "to_dens": 93, "to_dense_backward": 93, "to_devic": 95, "to_dict": [195, 203, 205, 207], "to_dtyp": 95, "to_dtype2": 230, "to_dtype_layout": 95, "to_excel": [195, 200, 201, 203, 205, 207, 213], "to_graph_builder_cod": [138, 210], "to_graph_pattern_match": [138, 183, 198], "to_ir": 136, "to_markdown": [267, 268, 269, 270], "to_mkldnn_backward": 93, "to_model_proto": [6, 199], "to_numpi": 128, "to_onnx": [18, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 111, 112, 113, 115, 135, 138, 183, 193, 197, 200, 202, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 232, 233, 234, 235, 236, 237, 238, 239, 247, 248, 249, 253, 257, 258], "to_onnx_loc": [115, 210], "to_pad": [227, 235], "to_spars": 93, "to_sparse_bsc": 93, "to_sparse_bsr": 93, "to_sparse_csc": 93, "to_sparse_csr": 93, "to_str": [196, 197, 228], "to_text": [199, 203, 207, 232, 233, 234], "tocomplex": [26, 31], "todo": 9, "tofind": 9, "token": [132, 203, 207, 217, 222], "token_type_id": 122, "tokeneat": [203, 207], "tol_tensor": 93, "toler": 115, "too": [135, 194, 228, 249], "tool": [55, 93, 109, 115, 135, 201, 219, 220, 228, 245, 264, 271], "top": [135, 268, 270], "top_k": 222, "top_p": 222, "topic": [228, 271], "topk": [95, 210, 265], "torc": 242, "torch": [9, 15, 16, 18, 21, 51, 55, 60, 74, 75, 76, 77, 78, 79, 80, 81, 87, 92, 93, 95, 96, 98, 101, 108, 109, 110, 111, 112, 113, 115, 117, 122, 128, 131, 135, 136, 156, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 208, 209, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 239, 240, 241, 242, 247, 248, 249, 250, 251, 253, 257, 258, 264, 266, 267, 268, 269, 270], "torch_": 57, "torch_2_5": [203, 207], "torch_bench": [9, 16, 195, 240, 243, 244, 245, 251, 264], "torch_default": [203, 205], "torch_dort": [203, 205], "torch_dtyp": [214, 219, 220, 222, 230, 238], "torch_dtype_to_onnx_dtyp": [15, 18], "torch_dynamo": [9, 16, 194, 196, 204, 242, 251], "torch_eag": [203, 205], "torch_export_patch": [210, 214, 220, 230, 238, 257, 271], "torch_interpr": 213, "torch_interpret": [9, 16, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 197, 204, 207, 208, 209, 210, 213, 216, 219, 224, 225, 226, 227, 228, 229, 230, 231, 247, 249, 251, 253, 257, 267, 268, 269, 270], "torch_lib": [196, 203], "torch_log": [210, 219, 220, 221, 224, 230, 231, 232, 267, 268, 269, 270], "torch_model": [9, 16, 87, 113, 196, 197, 203, 205, 242, 251, 253], "torch_model_s": [203, 205, 207], "torch_ort": 264, "torch_result": 111, "torch_script": [57, 74, 75, 76, 77, 78, 80, 81, 86, 115, 128], "torch_test_help": [9, 16], "torch_vers": 195, "torchaudio": 264, "torchbench": 240, "torchbench_ado": 240, "torchbenchadorunn": 69, "torchbenchrunn": 68, "torchdata": 264, "torchdynamo": [197, 207], "torchdynamo_extended_debug_cpp": [219, 220, 224, 232, 267, 268, 269, 270], "torchdynamo_extended_debug_create_symbol": [219, 220, 224, 232, 267, 268, 269, 270], "torchdynamo_verbos": [210, 230, 267, 268, 269, 270], "torchexporterror": 253, "torchknnimput": 210, "torchlinearregress": [209, 236], "torchmodelcontain": [135, 136], "torchopoverload": [98, 109], "torchrec": [79, 80], "torchruntimeerror": 210, "torchscript": [87, 197, 207], "torchtext": 264, "torchvis": [93, 264], "tort": 252, "total": [9, 56, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 258], "total_dim": [194, 257], "total_loss": [209, 236], "total_partit": [56, 63, 64, 65, 66, 67, 68, 69, 70], "tottim": [203, 207], "tqdm": [4, 194, 203, 205, 207], "tr": 228, "tr2": [209, 236], "tr_node": [155, 189], "trace": [9, 93, 106, 109, 113, 115, 213, 219, 220, 224, 232, 234, 253, 266], "trace_backward": 93, "trace_execution_piece_by_piec": [115, 210, 216, 219], "trace_forward_execut": [115, 219], "trace_funct": 115, "traceabl": 114, "traceback": [203, 207, 210, 219, 247, 253, 267, 268, 269, 270], "traced_cond": 115, "traced_function_transform": [210, 219], "traced_method": 115, "tracedonnxfunct": 196, "tracer": [117, 210, 219], "tracerbas": 117, "tracerwarn": [269, 270], "tracing_mod": [109, 253], "track": [135, 142, 208, 210, 218, 240, 247, 248], "track_tensor": 207, "track_tensor_tre": [203, 207], "train": [3, 10, 12, 21, 56, 92, 93, 95, 127, 135, 144, 154, 184, 188, 192, 194, 195, 196, 197, 200, 201, 205, 207, 208, 209, 210, 211, 214, 236, 258, 264, 271], "train_loop": [196, 209, 236], "train_test_split": [209, 236], "trained_model": 204, "training_help": [9, 120, 196, 203, 205], "traininggraphtransformerconfigur": 193, "trainload": 204, "trane": 21, "transa": [139, 200, 204, 207, 228, 236, 267, 268], "transb": [139, 144, 155, 186, 188, 200, 204, 207, 208, 209, 224, 228, 236, 247, 249, 267, 268], "transbatcha": 228, "transbatchb": 228, "transform": [9, 62, 92, 93, 117, 121, 122, 125, 193, 194, 195, 210, 214, 217, 219, 220, 222, 223, 230, 238, 240, 241, 242, 251, 253, 257, 264, 271], "transform_code_object": 210, "transformerengin": 264, "transformers_vers": [195, 222, 230, 238], "translat": [93, 109, 183, 198, 207, 232, 233, 234, 235, 236, 237, 238, 247, 253, 266, 267, 268], "translate_api": [138, 183, 198], "translate_function_signatur": [203, 207], "transp": 197, "transpos": [93, 95, 96, 97, 101, 108, 113, 135, 137, 144, 145, 155, 164, 167, 170, 172, 186, 188, 189, 190, 193, 196, 197, 200, 214, 228, 230, 238, 247, 249, 255, 257, 267, 268], "transpose2": 228, "transpose2_dim_0": 267, "transpose2dcast16": [170, 172], "transpose2dcastfp16": [26, 49], "transpose2dcastfp32": [26, 49, 170, 172], "transpose_1": [196, 197, 214, 228, 230, 238, 257], "transpose_10": [196, 200, 257], "transpose_11": 200, "transpose_12": 200, "transpose_13": 200, "transpose_2": [214, 230, 238, 257], "transpose_2_output_0": 255, "transpose_3": [196, 197, 214, 230, 238], "transpose_3_output_0": 255, "transpose_4": [196, 197, 214, 230, 238, 257], "transpose_4_output_0": 255, "transpose_5": [196, 197, 200, 214, 230, 238, 257], "transpose_6": [200, 214, 230, 238, 257], "transpose_7": [196, 200, 214, 230, 238, 257], "transpose_8": [196, 200, 214, 230, 238], "transpose_9": [196, 200, 257], "transpose_copi": 93, "transpose_int": [95, 230], "transpose_int2": 230, "transpose_int3": 230, "transpose_int4": 230, "transpose_int5": 230, "transpose_int6": 230, "transpose_int7": 230, "transpose_int8": 230, "transpose_int9": 230, "transpose_nod": [164, 167, 186], "transpose_output_0": [255, 267], "transpose_token_14_out0": 196, "transpose_token_4_out0": [197, 255], "transpose_token_5_out0": [196, 255], "transpose_token_6_out0": 255, "transpose_token_7_out0": 196, "transpose_token_8_out0": 255, "transpose_token_9_out0": 196, "transposecast": 170, "transposecastpattern": [170, 172, 261], "transposeequalreshap": 144, "transposeequalreshapepattern": [92, 93, 142, 144, 164, 204, 209, 224, 228, 247, 249, 261, 267, 268], "transposefusedmatmulb": 188, "transposefusedmatmulbpattern": [186, 188, 228, 261], "transposematmul": [135, 137, 144, 249], "transposematmulpattern": [92, 93, 142, 144, 155, 200, 228, 249, 261], "transposemiddl": [167, 170], "transposereshapematmul": 144, "transposereshapematmulpattern": [142, 144, 155, 200, 228, 249, 261], "transposereshapematmulpatternl_input15": 200, "transposereshapematmulpatternl_input16": 200, "transposereshapematmulpatternl_input18": 200, "transposereshapematmulpatternl_input19": 200, "transposereshapetranspos": 144, "transposereshapetransposepattern": [142, 144, 164, 228, 249, 261], "transposetranspos": [135, 137, 144, 249], "transposetransposepattern": [142, 144, 164, 200, 228, 249, 261], "trapezoid": 93, "trapz": 93, "treat": 117, "tree": [3, 132, 179, 180, 270], "tree_ensembl": [9, 179], "tree_flatten": [203, 206, 207], "tree_flatten_spec": [206, 267, 268, 269, 270], "tree_is_leaf": 207, "tree_map": 207, "tree_map_onli": [203, 207], "tree_map_with_path": 207, "tree_nod": 180, "tree_out": [210, 219], "tree_spec": 116, "tree_spec_as_nam": 116, "tree_spec_from_nam": 116, "tree_unflatten": [206, 267, 268, 269, 270], "tree_unflatten_1": 206, "treeensembleregressor": [179, 180], "treeensembleregressorconcat": 179, "treeensembleregressorconcatpattern": [179, 180, 261], "treeensembleregressormul": 179, "treeensembleregressormulpattern": [179, 180, 261], "trees_or_sigmoid": 180, "treespec": [116, 208, 270], "tri": [3, 21, 60, 92, 93, 109, 113, 115, 135, 140, 142, 144, 152, 194, 195, 196, 214, 220, 247, 249, 266, 271], "triangular": [169, 170], "trick": [215, 217], "tricki": 228, "trigger": [219, 220, 224, 232, 240, 267, 268, 269, 270], "tril": [93, 95, 96, 194, 228, 257], "tril_": 93, "tril_indic": 93, "trilu": [95, 230, 238], "trimatrix": [26, 50, 169, 170], "trimatrixpattern": [169, 170, 261], "triplet_margin_loss": 93, "triton": 205, "triu": [93, 113, 230, 238], "triu_": 93, "triu_indic": 93, "trt": [195, 244], "true": [4, 6, 9, 15, 17, 18, 21, 51, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 87, 92, 93, 94, 95, 106, 109, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 139, 140, 142, 144, 153, 155, 167, 170, 175, 177, 179, 181, 188, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 247, 249, 251, 253, 257, 264, 266, 267, 268, 269, 270, 271], "true_divid": 93, "true_divide_": 93, "true_fn": [115, 210, 267, 268, 269, 270], "true_fn1": [267, 268, 269, 270], "true_fn2": [267, 268, 269, 270], "true_graph": 95, "true_graph_0": [224, 232, 269, 270], "true_model_nam": 115, "true_out": 210, "truediv": 95, "trunc": 93, "trunc_": 93, "truncat": 4, "trust": 265, "try": [4, 92, 93, 106, 109, 115, 195, 196, 197, 201, 203, 205, 206, 207, 210, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 230, 231, 232, 233, 234, 237, 238, 270, 271], "try_codellama": 9, "try_codellama_test": 9, "try_export": [115, 210, 219], "try_falcon_mamba": 9, "try_falcon_mamba_test": 9, "try_flux_t5": 9, "try_flux_t5_test": 9, "try_flux_transform": 9, "try_flux_transformer_test": 9, "try_infer_shap": [142, 249], "try_infer_typ": [142, 249], "try_minilm": 9, "try_minilm_test": 9, "try_phi35_mini_instruct": 9, "try_phi35_mini_instruct_test": 9, "try_phi35_vis": 9, "try_phi35_vision_test": 9, "try_rewrit": 207, "try_smollm": 9, "try_smollm_test": 9, "try_stable_diffusion_3": 9, "try_stable_diffusion_3_test": 9, "trycal": 9, "tt": 249, "ttime": [9, 203, 205, 207], "ttt": 249, "tupl": [3, 4, 9, 15, 18, 19, 20, 51, 55, 56, 57, 60, 61, 62, 71, 92, 93, 95, 96, 100, 101, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 135, 137, 139, 140, 142, 156, 193, 194, 197, 207, 208, 210, 214, 217, 219, 220, 222, 229, 237, 247, 267, 268, 269, 270], "turn": 265, "tutori": [215, 226, 234, 237, 251], "tvuu": 228, "tweak": [192, 196, 206, 211, 258], "twice": [127, 219], "two": [12, 17, 18, 60, 93, 95, 115, 123, 130, 131, 135, 137, 142, 144, 146, 155, 156, 158, 164, 186, 188, 193, 194, 196, 197, 210, 213, 214, 216, 219, 220, 226, 228, 240, 247, 249], "tx": 210, "txt": [192, 196, 203, 207, 212], "type": [9, 10, 12, 15, 18, 19, 60, 92, 93, 95, 106, 109, 110, 111, 114, 115, 116, 117, 119, 123, 127, 130, 134, 135, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 248, 257, 258, 259, 265, 267, 268, 269, 270, 271], "type_a": 95, "type_annot": [203, 207], "type_as_str_with_info": 116, "type_infer": [9, 135], "type_info": 15, "type_promot": [203, 207], "typebfloat16": [106, 107], "typeerror": [193, 210, 237, 253, 269, 270], "typic": 60, "tyu": 268, "tzk": 268, "u": 247, "u0": [214, 218, 219, 220, 224, 229, 232, 237, 267, 268, 269, 270], "u1": [267, 268], "u2": 267, "u3": [267, 268], "u4": 267, "uda": 196, "uhpd": 196, "uial": 197, "ulimit": 264, "umi": 267, "un": 228, "unabl": [206, 214, 215, 232, 237, 247, 265, 267, 268, 269, 270], "unari": [130, 139], "unary_like_op_typ": 130, "unary_oper": [9, 170], "unavail": 271, "unbind": [93, 95], "unbind_axi": [267, 268], "unbind_copi": 93, "unbind_split_0": [267, 268], "unbind_split_1": [267, 268], "uncapturedhigherorderoperror": 268, "undefin": [12, 60, 135, 137, 264], "under": 228, "underli": [117, 206], "understand": [9, 115, 116, 135, 194, 219, 223, 271], "uneasi": 254, "unexpect": [193, 195, 196, 197, 210, 219, 237, 267, 268, 271], "unexpectedli": [226, 265], "unflatten": [18, 95, 110, 206, 207, 228], "unflatten_dense_tensor": 93, "unflatten_dynamic_cach": 217, "unflatten_ep": 228, "unflatten_int": 95, "unfold": [93, 95, 193, 203, 205, 207, 210], "unfold_backward": 93, "unfold_copi": 93, "unfortun": 206, "unfus": [9, 142], "unfused_": 191, "unfused_attent": 183, "unfused_nod": 191, "unhid": 9, "unhint": [219, 220, 224, 232, 267, 268, 269, 270], "uniform": 93, "uniform_": 93, "uninstal": 264, "union": [122, 135, 210], "uniqu": [57, 60, 110, 112, 117, 135, 142, 247], "unique_dimension_nam": 135, "unique_nam": [135, 142], "unique_node_nam": 135, "unit": [9, 121, 124, 125, 126, 128, 183, 203, 205, 207, 260], "unit_test_go": [9, 194, 195, 196, 197, 207, 267, 268, 269, 270], "unittest": 9, "unknonw": 135, "unknown": [10, 15, 134, 135, 196, 247, 267, 268], "unknownoutputmodel": [229, 237], "unknwon": 135, "unless": [224, 225, 226, 232, 233, 234, 268, 270], "unlighten": [245, 259], "unnam": [95, 111, 116], "unncessari": 271, "unnecessari": [117, 209, 236], "unpack_prepacked_sizes_conv2d": 93, "unpack_prepacked_sizes_linear": 93, "unpatch": [230, 238], "unpatch_module_or_class": [230, 238], "unregist": [230, 238], "unregister_cache_seri": [230, 238], "unrol": [221, 231], "unsafe_split": 93, "unsafe_split_with_s": 93, "unsqu": 197, "unsqueez": [93, 95, 97, 101, 113, 144, 151, 165, 196, 197, 200, 214, 219, 227, 230, 238, 249, 255, 257, 267, 268], "unsqueeze10": 196, "unsqueeze2": 230, "unsqueeze22": 230, "unsqueeze4": 230, "unsqueeze6": 230, "unsqueeze7": 230, "unsqueeze9": 196, "unsqueeze_": 95, "unsqueeze_1": [214, 219, 230], "unsqueeze_10": [196, 197, 214, 230, 238, 257], "unsqueeze_11": [196, 197, 214, 230, 238, 257], "unsqueeze_12": 238, "unsqueeze_13": 238, "unsqueeze_1_output_0": [255, 267], "unsqueeze_2": [214, 219, 230], "unsqueeze_2_output_0": 197, "unsqueeze_3": [214, 219, 230], "unsqueeze_3_output_0": 197, "unsqueeze_4": [214, 219, 230, 238, 257], "unsqueeze_5": 214, "unsqueeze_6": [196, 197, 200, 214, 230, 238, 257], "unsqueeze_7": [214, 230], "unsqueeze_8": [196, 214, 230, 257], "unsqueeze_9": [214, 230, 238, 257], "unsqueeze_copi": 93, "unsqueeze_output_0": [255, 267, 268], "unsqueezeequ": 144, "unsqueezeequalpattern": [142, 144, 151, 228, 249, 261], "unsqueezeunsqueez": 144, "unsqueezeunsqueezepattern": [142, 144, 165, 228, 230, 249, 257, 261], "unsuccess": 60, "unsupport": [203, 205, 206, 207, 267, 268, 269, 270, 271], "unsupport_dict": 94, "unsupportedaliasmutationexcept": [221, 231], "unsuppos": 201, "until": [9, 21, 115, 135, 142, 247, 249, 264], "untrain": [222, 240], "untrainedrunn": 70, "untyp": 135, "unus": [56, 98, 107, 109, 135, 137, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 207, 228, 231, 247, 249, 261], "unused2": 228, "unused3": 228, "unused4": 228, "unverifi": 113, "unwrap": 207, "unwrap_dead_wrapp": 242, "unwrap_if_dead": 242, "up": [9, 51, 60, 142, 206, 216, 230, 238, 240, 248, 264, 267, 268, 269, 270, 271], "up_proj": 197, "up_stat": 214, "updat": [95, 107, 135, 138, 195, 203, 205, 207, 214, 215, 217, 219, 220, 222, 230, 237, 238, 247, 249, 251, 264, 267, 268, 269, 270], "update_model_with_attribut": 117, "update_model_with_cal": 117, "update_node_const": [135, 249], "upgrad": 264, "upon": 247, "upper": [95, 194, 203, 207, 238], "upsample_bicubic2d": [93, 95], "upsample_bicubic2d_aa_vec": 93, "upsample_bicubic2d_default": 93, "upsample_bicubic2d_vec": [93, 95], "upsample_bilinear2d": [93, 95, 267, 268, 269, 270], "upsample_bilinear2d_aa_vec": 93, "upsample_linear1d": 93, "upsample_nearest1d": 93, "upsample_nearest2d": [93, 95], "upsample_nearest2d_vec": 95, "upsample_nearest3d": [93, 95], "upsample_nearest3d_vec": 95, "upsample_nearest_exact1d": 93, "upsample_trilinear3d": [93, 95], "upsample_trilinear3d_vec": 95, "uqa": [], "url": 264, "us": [4, 10, 12, 15, 17, 18, 21, 51, 56, 57, 58, 60, 61, 71, 92, 93, 95, 105, 106, 109, 111, 113, 115, 116, 117, 122, 128, 132, 135, 136, 137, 142, 144, 155, 167, 177, 192, 194, 195, 196, 197, 198, 199, 200, 202, 204, 208, 209, 211, 212, 213, 216, 219, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 252, 258, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271], "usaa": [196, 255], "usag": [60, 259, 260, 261, 262, 263], "use_aot_autograd": 94, "use_cach": [122, 214, 219, 220, 222, 230, 238], "use_cuda": [196, 264], "use_dynam": 71, "use_dynamic_shap": [115, 210, 219], "use_eval_mod": 56, "use_fused_aten_op": 71, "use_input_stat": 95, "use_left": 139, "use_mix": 196, "use_ort": 210, "use_sequ": 95, "use_training_api": 21, "usedefaultvalu": 60, "user": [10, 15, 55, 57, 109, 115, 135, 137, 142, 209, 210, 214, 216, 225, 226, 232, 240, 247, 249, 265, 267, 268, 269, 270], "user_defin": 203, "user_input": [214, 215, 216, 217, 227, 229, 235, 237, 247, 268], "user_output": [214, 215, 216, 217, 227, 229, 235, 237, 247, 268], "usererror": 268, "userwarn": [93, 196, 203, 204, 206, 219, 237, 238, 241], "usp": [219, 220, 224, 232, 267, 268, 269, 270], "usr": [203, 207, 240, 253, 264], "usual": [109, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 196, 209, 212, 219, 240, 247, 249, 271], "ut_torch_interpret": 264, "util": [203, 204, 206, 207, 209, 210, 214, 217, 219, 236, 241, 242, 271], "utxh": 196, "uuwu": 196, "uyaa": 196, "v": [95, 96, 101, 109, 112, 193, 195, 196, 203, 205, 207, 210, 217, 260, 261, 263, 264], "v0_0": 198, "v1": [119, 122], "v2": 119, "v_proj": [197, 238, 255, 257], "val": [195, 223, 247, 267, 268], "val_0": [196, 232, 238, 267, 268], "val_0_2": [267, 268], "val_1": [232, 238, 267, 268], "val_10": [238, 267, 268], "val_11": [238, 267, 268], "val_116": 238, "val_118": 238, "val_119": 238, "val_12": [238, 267, 268], "val_122": 238, "val_123": 238, "val_124": 238, "val_13": 267, "val_14": 267, "val_15": [238, 267, 268], "val_16": [238, 267, 268], "val_17": 267, "val_175": 197, "val_176": [197, 238], "val_177": [197, 238], "val_178": [197, 238], "val_18": 238, "val_183": 238, "val_184": 238, "val_185": 238, "val_186": 238, "val_188": 238, "val_189": 238, "val_19": [238, 267, 268], "val_190": 238, "val_195": 238, "val_196": 238, "val_197": 238, "val_198": 238, "val_2": [196, 232, 238, 268], "val_20": [238, 267], "val_200": 238, "val_201": 238, "val_202": 238, "val_207": 238, "val_21": 267, "val_22": [197, 267], "val_23": 267, "val_235": 197, "val_236": 197, "val_237": 197, "val_24": 267, "val_240": 197, "val_242": 197, "val_243": [197, 238], "val_244": 238, "val_249": 238, "val_25": 267, "val_250": 238, "val_252": 238, "val_253": 238, "val_258": 238, "val_26": [267, 268], "val_260": 238, "val_261": 238, "val_266": 238, "val_270": 238, "val_274": 238, "val_277": 238, "val_278": 238, "val_28": 238, "val_281": 238, "val_284": 238, "val_287": 238, "val_288": 238, "val_29": [267, 268], "val_291": 238, "val_294": 238, "val_297": 238, "val_298": 238, "val_3": [207, 232, 238, 267, 268], "val_301": 238, "val_304": 238, "val_307": 238, "val_308": 238, "val_311": 238, "val_312": 197, "val_314": 197, "val_315": [197, 238], "val_317": 197, "val_318": [197, 238], "val_319": [197, 238], "val_32": [267, 268], "val_321": 197, "val_322": [197, 238], "val_325": [197, 238], "val_327": 197, "val_328": 238, "val_329": 238, "val_33": [267, 268], "val_332": 238, "val_335": 238, "val_338": 238, "val_339": 238, "val_342": 238, "val_345": 238, "val_348": 238, "val_349": 238, "val_368": 238, "val_370": 238, "val_371": 238, "val_374": 238, "val_375": 238, "val_378": 238, "val_379": 238, "val_380": 238, "val_381": 238, "val_382": 238, "val_383": 238, "val_384": 238, "val_385": 238, "val_386": 238, "val_387": 238, "val_388": 238, "val_389": 238, "val_390": 238, "val_391": 238, "val_392": 238, "val_393": 238, "val_394": 238, "val_395": 238, "val_396": 238, "val_397": 238, "val_4": [238, 267, 268], "val_404": 238, "val_406": 238, "val_407": 238, "val_408": 238, "val_409": 238, "val_410": 238, "val_411": 238, "val_412": 238, "val_413": 238, "val_414": 238, "val_415": 238, "val_418": 238, "val_419": 238, "val_42": 268, "val_424": 238, "val_426": 238, "val_427": 238, "val_43": [267, 268], "val_432": 238, "val_434": 238, "val_435": 238, "val_44": [267, 268], "val_440": 238, "val_444": 238, "val_447": 238, "val_45": [267, 268], "val_450": 238, "val_451": 238, "val_454": 238, "val_457": 238, "val_46": [238, 267, 268], "val_460": 238, "val_461": 238, "val_464": 238, "val_467": 238, "val_47": [238, 268], "val_470": 238, "val_471": 238, "val_474": 238, "val_477": 238, "val_48": 268, "val_480": 238, "val_481": 238, "val_484": 238, "val_487": 238, "val_49": [238, 268], "val_490": 238, "val_491": 238, "val_494": 238, "val_497": 238, "val_5": [267, 268], "val_50": 268, "val_500": 238, "val_501": 238, "val_504": 238, "val_507": 238, "val_51": 268, "val_510": 238, "val_511": 238, "val_514": 238, "val_517": 238, "val_52": 268, "val_520": 238, "val_521": 238, "val_53": 268, "val_54": 268, "val_540": 238, "val_542": 238, "val_543": 238, "val_546": 238, "val_547": 238, "val_549": 238, "val_55": [267, 268], "val_550": 238, "val_551": 238, "val_552": 238, "val_553": 238, "val_554": 238, "val_555": 238, "val_556": 238, "val_557": 238, "val_558": 238, "val_559": 238, "val_560": 238, "val_561": 238, "val_562": 238, "val_563": 238, "val_564": 238, "val_565": 238, "val_566": 238, "val_567": 238, "val_574": 238, "val_576": 238, "val_577": 238, "val_578": 238, "val_579": 238, "val_58": 238, "val_580": 238, "val_581": 238, "val_6": [197, 267, 268], "val_604": 238, "val_605": 238, "val_608": 238, "val_609": 238, "val_610": 238, "val_69": 238, "val_7": [238, 267, 268], "val_71": 238, "val_72": 238, "val_75": 238, "val_76": 238, "val_8": [267, 268], "val_9": 267, "valid": [19, 60, 61, 111, 135, 142, 153, 181, 202, 209, 218, 222, 263, 268, 270], "validate_attribute_map": 142, "validate_fx_output": 111, "validate_fx_tensor": 111, "validate_map": [142, 153, 181, 202], "validate_onnx": 210, "valu": [3, 4, 9, 10, 12, 15, 18, 56, 57, 58, 60, 71, 92, 93, 95, 96, 97, 109, 112, 115, 123, 127, 128, 135, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 222, 224, 226, 227, 228, 231, 232, 234, 236, 238, 240, 247, 249, 257, 261, 265, 267, 268, 269, 270], "value2": 228, "value_as_shap": [135, 247], "value_cach": [214, 217, 219, 220, 223, 230, 238], "value_float": [200, 204, 267, 268], "value_info": 135, "value_int": [199, 238, 267, 268], "value_reduc": 93, "value_selecting_reduction_backward": 93, "value_st": [214, 217], "value_to_mask": 210, "valueerror": [193, 201, 203, 205, 207, 210], "valueinfoproto": [15, 135], "valueinfotensorproto": 135, "vander": 93, "var": [60, 93, 114], "var_getattr": 203, "var_mean": 93, "vari": 271, "variabl": [4, 9, 15, 109, 110, 113, 114, 115, 131, 132, 135, 142, 194, 196, 203, 210, 240, 265, 269, 270], "varianc": 214, "variance_epsilon": 214, "variou": [206, 240, 267, 268, 269, 270], "varshapetyp": 114, "vasx": 228, "vave": 196, "vbvq": 196, "vc": [217, 223], "vdot": 93, "vec": [93, 269, 270], "vector": 52, "vector_norm": 93, "ver": 195, "verbos": [4, 6, 10, 18, 19, 20, 21, 26, 51, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 87, 92, 93, 94, 105, 106, 109, 111, 113, 115, 117, 127, 128, 130, 135, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 200, 202, 203, 207, 209, 210, 213, 216, 219, 228, 230, 236, 238, 240, 241, 242, 247, 260, 261, 263], "verfici": 109, "veri": [9, 18, 135, 137, 193, 194, 204, 207, 228, 247, 249, 253, 264], "verif": [115, 135, 137, 139, 218], "verifi": [115, 135, 137, 142], "verify_dynamic_shap": 135, "verify_shap": 207, "verion": 9, "version": [0, 9, 18, 93, 100, 105, 117, 130, 135, 144, 153, 181, 188, 192, 193, 196, 199, 200, 202, 204, 207, 208, 209, 212, 222, 224, 225, 226, 227, 228, 231, 234, 236, 238, 240, 247, 249, 257, 264, 267, 268], "version_convert": 247, "version_monai": 57, "version_onnx": 57, "version_onnxruntim": [57, 240], "version_onnxscript": 57, "version_python": 57, "version_tag": 57, "version_timm": 57, "version_to_skip": 9, "version_torch": [57, 240], "version_transform": [57, 240], "vfpy": 196, "via": 265, "view": [93, 95, 97, 108, 113, 194, 197, 203, 205, 207, 214, 219, 221, 224, 230, 231, 232, 238, 257, 267, 268, 269, 270], "view2": [230, 231], "view3": 230, "view4": 230, "view5": 230, "view6": 230, "view_1": [197, 214, 230, 238, 257], "view_10": 196, "view_11": 196, "view_12": 196, "view_14": 196, "view_15": 196, "view_17": 196, "view_2": [197, 214, 230, 238, 257], "view_22": 200, "view_23": 200, "view_24": 200, "view_25": 200, "view_26": 200, "view_27": 200, "view_29": 200, "view_3": [197, 214, 230, 238, 257], "view_30": 200, "view_31": 200, "view_32": 200, "view_33": 200, "view_34": 200, "view_35": 200, "view_36": 200, "view_37": 200, "view_38": 200, "view_39": 200, "view_4": [196, 197, 214, 230, 238, 257], "view_40": 200, "view_41": 200, "view_42": 200, "view_5": [196, 214, 230, 238, 257], "view_6": [238, 257], "view_7": [196, 238, 257], "view_8": [238, 257], "view_9": 196, "view_copi": 93, "view_tim": [203, 205, 207], "viewbackward0": [230, 238], "vin": 193, "violat": [221, 231], "virtual_tensor": 9, "vision": [122, 123], "visit_nod": 207, "visual": [200, 202, 216, 224, 225, 226, 227, 228, 230, 231, 235, 238, 247], "vixa": 196, "vixj": 196, "vnc": 228, "vocab": 61, "vocab_s": [61, 107, 121, 124, 125, 126, 194, 196, 197, 214, 219, 220, 222, 228, 230, 238, 241, 242, 253, 257, 267, 268, 269, 270], "voco": 9, "vout": 193, "vr": [214, 215, 216, 217, 227, 229, 235, 237, 268], "vstack": 93, "vsy": 268, "vv": [93, 196, 203, 204, 206, 207, 209, 210, 214, 219, 224, 232, 236, 237, 238, 247, 253, 268, 269, 270], "vvll": 196, "vxrh": 196, "vxzd": 255, "w": [12, 83, 193, 197, 203, 207, 210, 217, 240, 241, 242, 244, 263, 264, 268], "w_i": 12, "wa": [10, 57, 99, 105, 109, 110, 113, 115, 135, 142, 144, 146, 177, 183, 188, 191, 193, 200, 207, 210, 214, 215, 218, 219, 220, 222, 224, 225, 228, 229, 232, 237, 247, 248, 249, 251, 253, 256, 267, 268, 269, 270, 271], "wai": [10, 15, 21, 93, 109, 113, 115, 142, 192, 193, 194, 195, 197, 200, 201, 203, 204, 205, 206, 210, 211, 212, 218, 219, 240, 247, 248, 249, 258, 265, 267, 268, 269, 270, 271], "wait_tensor": 93, "walk": [12, 247, 248, 249], "want": [94, 110, 202, 214, 219, 220], "warm": 240, "warmup": [3, 9, 19, 56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 194, 195, 203, 205, 207, 240, 241, 242, 263], "warmup_tim": [9, 195, 203, 205, 207, 241, 242], "warn": [9, 93, 98, 109, 196, 197, 203, 204, 205, 207, 209, 210, 214, 232, 236, 237, 238, 241, 253, 269, 270], "warranti": 252, "watch": 20, "wawn": 197, "waxa": 228, "wb": [196, 197, 200, 203, 207, 249], "wbzf": 197, "we": [18, 94, 95, 115, 117, 119, 145, 193, 194, 196, 199, 202, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 247, 249, 267, 268, 269, 270], "weaker": 265, "webui": 264, "weight": [10, 12, 55, 60, 87, 95, 109, 110, 112, 115, 135, 193, 194, 197, 206, 207, 208, 209, 210, 214, 224, 228, 230, 232, 236, 238, 247, 249, 257, 259, 260, 267, 268, 269, 270], "weight2": 247, "weight_matrix": 210, "weight_nam": 12, "weights_sum": 210, "weigth": 222, "well": [6, 10, 15, 21, 55, 92, 93, 109, 115, 119, 122, 128, 135, 137, 142, 193, 194, 204, 206, 222, 227, 228, 229, 235, 237, 247, 253, 267, 268], "were": [4, 95, 109, 123, 196, 197, 204, 207, 210, 214, 217, 228, 232, 247], "wfw": 247, "what": [9, 26, 55, 92, 93, 95, 109, 115, 123, 196, 207, 209, 218, 224, 225, 226, 232, 233, 234, 247, 248, 249, 267, 268, 269, 270, 271], "whatev": [56, 115, 193], "when": [9, 15, 60, 71, 92, 93, 95, 99, 105, 109, 110, 113, 115, 116, 117, 135, 137, 142, 144, 164, 177, 178, 192, 200, 202, 203, 205, 207, 210, 212, 214, 216, 219, 220, 221, 224, 225, 226, 229, 230, 231, 232, 234, 237, 238, 239, 246, 247, 248, 249, 258, 265, 266, 267, 268, 269, 270, 271], "whenev": [92, 93, 105, 247], "where": [4, 12, 56, 60, 92, 93, 95, 96, 101, 115, 123, 128, 135, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 196, 197, 200, 204, 210, 215, 219, 228, 230, 238, 247, 249, 257, 267, 268, 269, 270], "where_1_output_0": [197, 267], "where_nod": [168, 169, 173], "where_output_0": 267, "where_replac": [9, 170], "where_scalar": 95, "where_scalaroth": 95, "where_scalarself": 95, "where_self": 95, "wherev": [142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 249], "whether": [94, 106, 135, 252], "which": [9, 60, 93, 95, 105, 110, 112, 115, 117, 123, 135, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 218, 227, 228, 235, 240, 247, 248, 249, 265, 271], "while": [9, 12, 15, 60, 62, 93, 107, 115, 139, 193, 210, 247, 249, 267, 268, 269, 270, 271], "whl": 264, "whole": [51, 128, 210, 219, 249], "whom": 252, "whose": 142, "whub": 196, "why": [130, 135, 223, 228, 247], "wide": 193, "width": 193, "window": 9, "wipe": 135, "wise": [130, 144, 152, 158, 163, 194], "with_arg": 203, "with_attribut": [15, 191], "with_devic": [15, 115, 219], "with_dynamic_shap": [115, 216, 219], "with_input": [115, 219], "with_mask": [71, 121, 124, 125, 126, 194, 195], "with_min_max": [15, 115, 219], "with_path_append": 9, "with_shap": [15, 115, 197, 214, 219, 220, 230, 238], "with_traceback": 210, "within": [60, 61, 62, 107], "without": [3, 20, 60, 122, 135, 136, 142, 195, 207, 222, 228, 247, 249, 252, 260], "wjqf": 255, "wmjw": 255, "word_emb": 228, "word_p": 228, "work": [12, 16, 51, 60, 71, 109, 113, 115, 117, 130, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 209, 210, 212, 215, 218, 219, 221, 222, 223, 224, 225, 226, 228, 230, 231, 233, 234, 236, 238, 247, 264, 265, 267, 268, 270, 271], "worst": 249, "would": [93, 115, 219, 221, 224, 228, 231, 232, 267, 268, 269, 270], "wpk": [], "wrap": [21, 60, 87, 92, 110, 112, 135, 203, 204, 207, 210, 219, 240, 241, 271], "wrap_fake_except": [203, 210], "wrap_fx_proxi": [203, 210], "wrap_fx_proxy_cl": [203, 210], "wrap_kind": 60, "wrap_tensor": 203, "wrap_to_fake_tensor_and_record": 203, "wrap_with_autocast": 214, "wrap_with_proxi": [203, 207], "wrap_with_set_grad_en": [214, 230], "wrapdim": 135, "wrapexecutorchfortorch": 87, "wrapfortorch": 87, "wrapinferencesessionfortorch": [56, 87], "wrapped_fn": [210, 219], "wrapped_func": 95, "wrapped_mod": [210, 219], "wrappedmodelbas": 60, "wrappedmodeltotupl": [60, 240], "wrappedneuroniint": 206, "wrapper": [60, 203, 207, 210, 214, 219, 253], "wrapper_funct": 210, "wrapsym": [135, 230, 268], "write": [134, 196, 197, 198, 200, 203, 207, 210, 222, 247, 249, 260, 267, 268, 269], "write_fil": 93, "wrong": [92, 93, 135, 142, 195, 264], "wwkk": 197, "wwoo": 196, "wyrv": 197, "wzg": [], "x": [15, 21, 54, 62, 92, 93, 95, 97, 101, 107, 109, 110, 111, 112, 116, 128, 135, 139, 144, 145, 153, 163, 167, 170, 173, 177, 178, 181, 188, 189, 193, 195, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 247, 249, 253, 267, 268, 269, 270], "x1": [144, 160, 198], "x2": [144, 160, 198, 227, 235], "x86_64": [203, 205, 207, 240, 264], "x_1": [206, 269, 270], "x_i": 12, "x_imput": 210, "x_indic": 210, "x_len": 218, "x_norm": 228, "x_np": [225, 226, 233, 234], "x_row": [221, 231, 268], "x_test": [209, 236], "x_train": [209, 236], "xadupr": [93, 196, 199, 203, 204, 206, 207, 209, 210, 214, 215, 216, 217, 219, 224, 227, 229, 232, 234, 235, 236, 237, 238, 247, 253, 267, 268, 269, 270], "xb": [267, 268, 269, 270], "xbqj": 196, "xbuilder": [9, 16, 113, 178, 183, 194, 197, 198, 200, 202, 207, 210, 225, 226, 228, 230, 247, 249, 251], "xc": 210, "xdoctest": 60, "xhw": 268, "xkep": 196, "xlaw": 197, "xlog1pi": 93, "xlogi": 93, "xlogy_": 93, "xlsx": [73, 195, 200, 201, 203, 205, 207, 213, 240], "xn": 210, "xoptim": [9, 16, 135, 137, 200, 202, 204, 207, 249, 251, 261], "xor": 130, "xrfp": 255, "xs_0": 206, "xs_1": 206, "xsav": 196, "xtbj": 197, "xtsr": 255, "xtuu": 228, "xx": 210, "xxxb": 196, "xxyd": 197, "xygk": 197, "y": [21, 62, 95, 97, 101, 107, 109, 116, 135, 139, 144, 153, 163, 181, 188, 189, 193, 199, 202, 203, 204, 205, 209, 210, 215, 216, 217, 218, 221, 223, 227, 228, 229, 231, 235, 236, 237, 247, 264, 267, 268, 269, 270], "y1": [107, 210], "y10": 210, "y11": 210, "y1_1": [267, 268, 269, 270], "y2": [107, 227, 235], "y2_1": [267, 268, 269, 270], "y40": 210, "y_1": [267, 268, 269, 270], "y_i": 12, "y_pred": [209, 236], "y_row": [221, 231, 268], "y_test": [209, 236], "y_train": [209, 236], "ye": 60, "yerr": [203, 205, 207], "yet": [115, 194, 210, 229, 237, 267, 268], "yhza": 196, "yield": 60, "yieldop": 10, "ykjo": 196, "ylabel": [203, 205, 207], "ylby": 196, "ylyb": 196, "ynji": 255, "you": [6, 93, 115, 135, 196, 210, 219, 220, 221, 224, 230, 231, 232, 247, 267, 268, 269, 270, 271], "your": [203, 204, 205, 219, 221, 224, 231, 232, 241, 267, 268, 269, 270], "yourself": [203, 204, 241], "yp": 12, "yqy": [], "ysto": 255, "ysu": [], "ysy": 202, "yt": 12, "ytfgf3a": [214, 232], "yuie": 197, "yxc": 268, "yxlm": 196, "yy": 210, "yyyi": [196, 197], "yz": [62, 206], "yzwy": 196, "z": [21, 138, 206, 208, 215, 216, 229, 237, 247, 267, 268, 269, 270], "z1": 247, "z2": 247, "z_1": 208, "zaaa": [196, 197, 255], "zaab": 228, "zero": [10, 93, 95, 135, 153, 193, 198, 210, 217, 226, 227, 229, 234, 235, 237, 249, 267, 268, 269, 270], "zero_": 93, "zero_grad": [204, 209, 236], "zero_point": 52, "zerof": [153, 249], "zeroi": [153, 249], "zeros_lik": [93, 95, 267, 268, 269, 270], "zeta": 93, "zeu": [], "zim": [], "zip": [57, 111, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "ziu": 267, "zjfc": 197, "zoo": 9, "zpg": 267, "ztbd": 196, "zwa": 228, "zwq": [], "zxpq": 196, "zyaa": 228, "zzqq": 196}, "titles": ["Change Logs", "._bench_test", "._command_lines_parser", ".args", ".bench_run", ".checks", ".convert.convert_helper", ".convert", ".convert.ort_helper", ".ext_test_case", ".gradient.grad_helper", ".gradient", ".gradient.loss_helper", ".gradient.ops", ".gradient.ops.op_broadcast_gradient_args", ".helpers", "API", ".memory_peak", ".mini_onnx_builder", ".model_run", ".onnx_tools", ".ort_session", ".plotting.data", ".plotting", ".plotting.memory", ".reference.evaluator", ".reference", ".reference.ops", ".reference.ops.op_add_add_mul_mul", ".reference.ops.op_average_pool_grad", ".reference.ops.op_cast_like", ".reference.ops.op_complex", ".reference.ops.op_concat", ".reference.ops.op_constant_of_shape", ".reference.ops.op_fused_matmul", ".reference.ops.op_gather_grad", ".reference.ops.op_memcpy_host", ".reference.ops.op_mul_sigmoid", ".reference.ops.op_negxplus1", ".reference.ops.op_qlinear_average_pool", ".reference.ops.op_qlinear_conv", ".reference.ops.op_quick_gelu", ".reference.ops.op_replace_zero", ".reference.ops.op_rotary", ".reference.ops.op_scatter_elements", ".reference.ops.op_scatternd_of_shape", ".reference.ops.op_simplified_layer_normalization", ".reference.ops.op_skip_layer_normalization", ".reference.ops.op_slice", ".reference.ops.op_transpose_cast", ".reference.ops.op_tri_matrix", ".reference.ort_evaluator", ".reference.quantized_tensor", ".skl.convert", ".skl.helpers", ".skl", "experimental_experiment.torch_bench._bash_bench_benchmark_runner", "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg", "experimental_experiment.torch_bench._bash_bench_benchmark_runner_agg_helper", "experimental_experiment.torch_bench._bash_bench_cmd", "experimental_experiment.torch_bench._bash_bench_model_runner", "experimental_experiment.torch_bench._bash_bench_models_helper", "experimental_experiment.torch_bench._bash_bench_set_dummies", "experimental_experiment.torch_bench._bash_bench_set_explicit", "experimental_experiment.torch_bench._bash_bench_set_huggingface", "experimental_experiment.torch_bench._bash_bench_set_huggingface_big", "experimental_experiment.torch_bench._bash_bench_set_issues", "experimental_experiment.torch_bench._bash_bench_set_timm", "experimental_experiment.torch_bench._bash_bench_set_torchbench", "experimental_experiment.torch_bench._bash_bench_set_torchbench_ado", "experimental_experiment.torch_bench._bash_bench_untrained", "experimental_experiment.torch_bench._dort_cmd_common", "experimental_experiment.torch_bench._dort_cmd_common_models", ".torch_bench.bash_bench_agg", ".torch_bench.bash_bench_explicit", ".torch_bench.bash_bench_huggingface", ".torch_bench.bash_bench_huggingface_big", ".torch_bench.bash_bench_issues", ".torch_bench.bash_bench_timm", ".torch_bench.bash_bench_torchbench", ".torch_bench.bash_bench_torchbench_ado", ".torch_bench.bash_bench_untrained", ".torch_bench.check_model", ".torch_bench.dort_bench", ".torch_bench.dort_bench_profile", ".torch_bench.dort_profile", ".torch_bench.export_model", ".torch_bench.export_model_helper", ".torch_bench", ".torch_dynamo._dynamo_exporter", ".torch_dynamo.backend_helper", ".torch_dynamo.debug_backend", ".torch_dynamo.fast_backend", ".torch_dynamo", "experimental_experiment.torch_dynamo.partition", ".torch_interpreter._aten_functions", ".torch_interpreter._aten_functions_attention", ".torch_interpreter._aten_methods", ".torch_interpreter._doc_", ".torch_interpreter._exceptions", ".torch_interpreter._non_aten_functions", ".torch_interpreter._prims_functions", ".torch_interpreter._torch_helper", ".torch_interpreter.aten_functions", ".torch_interpreter.aten_methods", ".torch_interpreter.dispatcher", ".torch_interpreter.eval", ".torch_interpreter.eval.model_cases", ".torch_interpreter.export_options", ".torch_interpreter", ".torch_interpreter.interpreter", ".torch_interpreter.investigate_helper", ".torch_interpreter.onnx_export", ".torch_interpreter.oxs_dispatcher", ".torch_interpreter.oxs_opset", ".torch_interpreter.piece_by_piece", ".torch_interpreter.piece_by_piece_serialize", ".torch_interpreter.tracing", ".torch_models.diffusion_model_helper", ".torch_models.dump_helper", ".torch_models", ".torch_models.llama_helper", ".torch_models.llm_model_helper", ".torch_models.llm_model_setup", ".torch_models.mistral_helper", ".torch_models.phi3_helper", ".torch_models.phi_helper", ".torch_models.training_helper", ".torch_test_helper", ".xbuilder._graph_builder_runtime", ".xbuilder._onnx_helper", ".xbuilder._shape_helper", ".xbuilder.expression_dimension", ".xbuilder.graph_builder", ".xbuilder.graph_builder_opset", ".xbuilder", ".xbuilder.model_container", ".xbuilder.optimization_options", ".xbuilder.reverse_graph_builder", ".xbuilder.shape_type_compute", ".xbuilder.type_inference", ".xoptim.graph_builder_optim", ".xoptim", ".xoptim.order_optim", ".xoptim.patterns", ".xoptim.patterns.onnx_any", ".xoptim.patterns.onnx_cast", ".xoptim.patterns.onnx_clip", ".xoptim.patterns.onnx_constants", ".xoptim.patterns.onnx_conv", ".xoptim.patterns.onnx_dropout", ".xoptim.patterns.onnx_equal", ".xoptim.patterns.onnx_expand", ".xoptim.patterns.onnx_functions", ".xoptim.patterns.onnx_layer_normalization", ".xoptim.patterns.onnx_matmul", ".xoptim.patterns.onnx_mul", ".xoptim.patterns.onnx_reduce", ".xoptim.patterns.onnx_reshape", ".xoptim.patterns.onnx_rotary", ".xoptim.patterns.onnx_sequence", ".xoptim.patterns.onnx_slice", ".xoptim.patterns.onnx_split", ".xoptim.patterns.onnx_sub", ".xoptim.patterns.onnx_transpose", ".xoptim.patterns.onnx_unsqueeze", ".xoptim.patterns_api", ".xoptim.patterns_exp.binary_operators", ".xoptim.patterns_exp.constant_of_shape_scatter_nd", ".xoptim.patterns_exp.constants", ".xoptim.patterns_exp", ".xoptim.patterns_exp.simple_rotary", ".xoptim.patterns_exp.unary_operators", ".xoptim.patterns_exp.where_replace", ".xoptim.patterns_fix.add_reduction_scatter_nd", ".xoptim.patterns_fix", ".xoptim.patterns_investigation.element_wise", ".xoptim.patterns_investigation", ".xoptim.patterns_investigation.llm_patterns", ".xoptim.patterns_ml", ".xoptim.patterns_ml.tree_ensemble", ".xoptim.patterns_ort.activation", ".xoptim.patterns_ort.activation_grad", ".xoptim.patterns_ort.attention_patterns", ".xoptim.patterns_ort.batch_normalization", ".xoptim.patterns_ort.fused_conv", ".xoptim.patterns_ort.fused_matmul", ".xoptim.patterns_ort.gather_grad", ".xoptim.patterns_ort", ".xoptim.patterns_ort.llm_optim", ".xoptim.patterns_ort.simplified_layer_normalization", ".xoptim.unfused", "Examples Gallery", "102: Convolution and Matrix Multiplication", "102: Fuse kernels in a small Llama Model", "102: Measure LLAMA speed", "301: Compares LLAMA exporters for onnxrt backend", "301: Compares LLAMA exporters", "Playground for big optimization pattern", "102: Examples with onnxscript", "101: Onnx Model Optimization based on Pattern Rewriting", "101: Profile an existing model with onnxruntime", "101: Onnx Model Rewriting", "201: Evaluate DORT Training", "101: A custom backend for torch", "201: Evaluate DORT", "101: Some dummy examples with torch.export.export", "201: Evaluate different ways to export a torch model to ONNX", "102: Tweak onnx export", "101: Linear Regression and export to ONNX", "201: Use torch to export a scikit-learn model into ONNX", "Computation times", "Exporter Recipes Gallery", "Measures the exporter success on many test cases", "Export Phi-3.5-mini-instruct with draft_export", "Use DYNAMIC or AUTO when dynamic shapes has constraints", "Infer dynamic shapes before exporting", "Do no use Module as inputs!", "A dynamic dimension lost by torch.export.export", "Export Phi-3.5-mini-instruct piece by piece", "Export Phi-3.5-mini-instruct with report_exportability", "Export a model with a loop (scan)", "Check the exporter on a dummy from HuggingFace", "Export a model using a custom type as input", "to_onnx and a model with a test", "to_onnx and a custom operator registered with a function", "to_onnx and a custom operator inplace", "to_onnx and padding one dimension to a mulitple of a constant", "to_onnx and submodules from LLMs", "to_onnx: Rename Dynamic Shapes", "to_onnx and Phi-2", "to_onnx and a model with a loop (scan)", "torch.onnx.export and a model with a test", "torch.onnx.export and a custom operator registered with a function", "torch.onnx.export and a custom operator inplace", "torch.onnx.export and padding one dimension to a mulitple of a constant", "Linear Regression and export to ONNX", "torch.onnx.export: Rename Dynamic Shapes", "torch.onnx.export and Phi-2", "Computation times", "Measuring the exporters on a short list of sets of models", "experimental_experiment.torch_bench.dort_bench", "experimental_experiment.torch_bench.dort_profile", "Benchmarks from the command line", "Interesting scripts or command lines", "Command Lines", "Dynamo Backends", "Custom Exporter", "Design", "Pattern Optimizer", "Galleries of Examples and Recipes", "experimental-experiment: fuzzy work", "License", "Export Times", "Miscellaneous", "Long Outputs uneasy to read", "Supported Models By the Custom Backend", "Phi", "Computation times", "Tools from the command line", "python -m experimental_experiment lighten and unlighten", "python -m experimental_experiment optimize", "python -m experimental_experiment print", "python -m experimental_experiment run", "Start from a docker", "Unexpected Errors", "Supported Model Signatures", "Exported into ONNX with Static Shapes", "Exported into ONNX with Dynamic Shapes", "Exported Programs with Static Shapes", "Exported Programs with Dynamic Shapes", "Tutorial"], "titleterms": {"": 265, "0": 0, "1": 0, "101": [200, 201, 202, 204, 206, 209], "102": [193, 194, 195, 199, 208], "2": [230, 238], "201": [203, 205, 207, 210], "3": [214, 219, 220], "301": [196, 197], "5": [214, 219, 220], "A": [200, 202, 204, 218, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 247], "And": 247, "By": 256, "One": 247, "The": [194, 196, 197, 202, 203, 205, 207, 222], "With": [193, 206, 209, 236], "_aten_funct": 95, "_aten_functions_attent": 96, "_aten_method": 97, "_bash_bench_benchmark_runn": 56, "_bash_bench_benchmark_runner_agg": 57, "_bash_bench_benchmark_runner_agg_help": 58, "_bash_bench_cmd": 59, "_bash_bench_model_runn": 60, "_bash_bench_models_help": 61, "_bash_bench_set_dummi": 62, "_bash_bench_set_explicit": 63, "_bash_bench_set_huggingfac": 64, "_bash_bench_set_huggingface_big": 65, "_bash_bench_set_issu": 66, "_bash_bench_set_timm": 67, "_bash_bench_set_torchbench": 68, "_bash_bench_set_torchbench_ado": 69, "_bash_bench_untrain": 70, "_bench_test": 1, "_command_lines_pars": 2, "_doc_": 98, "_dort_cmd_common": 71, "_dort_cmd_common_model": 72, "_dynamo_export": 89, "_except": 99, "_graph_builder_runtim": 129, "_non_aten_funct": 100, "_onnx_help": 130, "_prims_funct": 101, "_shape_help": 131, "_torch_help": 102, "about": 204, "activ": 181, "activation_grad": 182, "ad": 249, "add_reduction_scatter_nd": 174, "again": 210, "aggreg": [73, 240], "algorithm": [209, 236, 249], "allow": 215, "an": [84, 201, 206, 229, 237], "anoth": 271, "api": [16, 247, 249], "appli": 249, "ar": [217, 265], "arg": 3, "aten_funct": 103, "aten_method": 104, "atenasstrid": [267, 268, 269, 270], "ateninterpol": [267, 268, 269, 270], "atennonzero": [267, 268, 269, 270], "atennonzerotupl": [267, 268, 269, 270], "atenrollpo": [267, 268, 269, 270], "atenrollrelu": [267, 268, 269, 270], "attention_pattern": 183, "auto": 215, "avail": 249, "backend": [194, 196, 203, 204, 205, 243, 246, 256], "backend_help": 90, "base": 200, "bash_bench_agg": 73, "bash_bench_explicit": 74, "bash_bench_huggingfac": 75, "bash_bench_huggingface_big": 76, "bash_bench_issu": 77, "bash_bench_timm": 78, "bash_bench_torchbench": 79, "bash_bench_torchbench_ado": 80, "bash_bench_untrain": 81, "batch_norm": 184, "befor": 216, "bench_run": 4, "benchmark": [73, 74, 75, 76, 77, 78, 79, 80, 81, 203, 205, 207, 243, 264], "big": 198, "binary_oper": 167, "buildinisinst": [267, 268, 269, 270], "buildinlen": [267, 268, 269, 270], "busi": 265, "bypass_export_some_error": [], "cach": 222, "capabl": 265, "case": [206, 213], "chang": 0, "check": [5, 82, 222], "check_model": 82, "class": 217, "code": 210, "col2im": 193, "command": [243, 244, 245, 259], "common": 212, "compar": [192, 196, 197], "comparison": [196, 197, 228], "compil": [203, 205, 208, 243], "complexpolar": [267, 268, 269, 270], "comput": [211, 239, 258], "constant": [169, 218, 227, 235, 249], "constant_of_shape_scatter_nd": 168, "constraint": 215, "contain": 247, "content": 251, "controlflowcond": [267, 268, 269, 270], "controlflowcond2input": [267, 268, 269, 270], "controlflowcond2output": [267, 268, 269, 270], "controlflowcondconst": [267, 268, 269, 270], "controlflowcondnestedmodul": [267, 268, 269, 270], "controlflowcondnonzero": [267, 268, 269, 270], "controlflownestcond": [267, 268, 269, 270], "controlflowscan": [267, 268, 269, 270], "controlflowscan2carri": [267, 268, 269, 270], "controlflowscancdist": [267, 268, 269, 270], "controlflowscancdist2": [267, 268, 269, 270], "controlflowscancdistxi": [267, 268, 269, 270], "conv": 193, "convent": 247, "convers": [209, 228, 236], "convert": [6, 7, 8, 53, 247], "convert_help": 6, "convolut": 193, "convtranspos": 193, "cpu": 207, "createfromshap": [267, 268, 269, 270], "createfromshapethroughfunct": [267, 268, 269, 270], "creation": 222, "croplastdimensionwithtensorcont": [267, 268, 269, 270], "croplastdimensionwithtensorshap": [267, 268, 269, 270], "cuda": [207, 228, 265], "cus_p2": 207, "custom": [194, 199, 204, 217, 219, 223, 225, 226, 233, 234, 247, 253, 256, 267, 268], "data": [22, 196, 197, 209, 236], "debug": 247, "debug_backend": 91, "dec": [267, 268], "decal": [269, 270], "deeper": 271, "design": 248, "devic": 265, "differ": [207, 247], "diffusion_model_help": 118, "dimens": [218, 222, 227, 235], "dispatch": [105, 109], "distanc": [221, 231], "do": 217, "docker": [264, 271], "dort": [83, 85, 203, 205], "dort_bench": [83, 241], "dort_bench_profil": 84, "dort_profil": [85, 242], "draft": 214, "draft_export": 214, "dummi": [194, 206, 222], "dump_help": 119, "dx": 215, "dy": 215, "dynam": [204, 209, 215, 216, 218, 219, 229, 236, 237, 247, 268, 270], "dynamiccach": 217, "dynamo": [207, 246, 253, 267, 268], "dynamointerpret": 247, "dynger_backend": 93, "dynopt": 207, "eager": 194, "easi": 206, "easypatternoptim": 142, "element_wis": 176, "error": [212, 265, 271], "eval": [106, 107], "evalu": [25, 197, 203, 205, 207, 209, 219, 236], "exampl": [192, 199, 206, 247, 249, 250, 255], "except": 271, "execut": [84, 85, 196, 197], "exist": 201, "experi": 251, "experiment": 251, "experimental_experi": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 94, 241, 242, 260, 261, 262, 263], "export": [74, 75, 76, 77, 78, 79, 80, 81, 86, 192, 196, 197, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 227, 230, 232, 233, 234, 235, 236, 237, 238, 240, 243, 247, 253, 265, 267, 268, 269, 270, 271], "export_model": 86, "export_model_help": 87, "export_opt": 108, "exportedprogram": 222, "exportopt": 109, "expression_dimens": 132, "ext_test_cas": 9, "extendedreferenceevalu": 26, "fail": [219, 223], "fake": [247, 253], "fallback": [247, 267, 268], "fast_backend": 92, "filter": 202, "final": [194, 210], "fine": 217, "first": [203, 205, 207, 210, 223, 228, 247], "fix": 218, "focu": 200, "forward": [267, 268, 269, 270], "frequent": 271, "from": [222, 228, 243, 259, 264], "function": [26, 55, 93, 109, 135, 142, 196, 197, 199, 218, 225, 233, 247], "functionopt": 135, "fuse": 194, "fused_conv": 185, "fused_matmul": 186, "fuzzi": 251, "fx_mode": 253, "galleri": [192, 212, 250], "gather_grad": 187, "gemm": 193, "get": [192, 212], "grad_help": 10, "gradient": [10, 11, 12, 13, 14], "graph": [249, 271], "graph_build": 133, "graph_builder_opset": 134, "graph_builder_optim": 141, "graphbuild": [135, 247], "graphbuilderpatternoptim": 142, "guess": 222, "ha": 215, "helper": [15, 54, 196, 197, 203, 205, 207], "how": 218, "huggingfac": 222, "i": [193, 218, 265], "im2col": 193, "implement": [210, 247], "infer": [216, 249], "infershapesopt": 135, "inlin": 228, "inplac": [226, 234], "inplaceadd": [267, 268, 269, 270], "inplaceadd2": [267, 268, 269, 270], "inplaceadd_mul": [267, 268, 269, 270], "inplacecloneadd": [267, 268, 269, 270], "inplacesetitemellipsis_1": [267, 268, 269, 270], "inplacesetitemellipsis_2": [267, 268, 269, 270], "inplacesetitemmask": [267, 268, 269, 270], "inplacesetitemsquar": [267, 268, 269, 270], "inplacesetitemsquareadd": [267, 268, 269, 270], "inplacesetitemsquareadd2": [267, 268, 269, 270], "input": [206, 217, 223], "instruct": [214, 219, 220], "integ": 206, "interest": [207, 244], "intermedi": 210, "intern": 247, "interpret": 110, "investig": 271, "investigate_help": 111, "ir": [267, 268], "issu": 265, "iter": [203, 205], "jit": [269, 270], "kernel": 194, "knnimput": 210, "learn": [209, 210, 236], "licens": 252, "lighten": [260, 262], "line": [243, 244, 245, 259], "linear": [209, 236], "linrar": [209, 236], "list": [206, 240], "llama": [83, 194, 195, 196, 197, 256, 264], "llama_help": 121, "llm": 228, "llm_model_help": 122, "llm_model_setup": 123, "llm_optim": 189, "llm_pattern": 178, "load": 207, "local": [199, 247], "log": 0, "long": 255, "loop": [206, 221, 231], "loss_help": 12, "lost": 218, "m": [260, 261, 262, 263], "mani": 213, "match": [198, 249], "match_input_paramet": 109, "matchresult": 142, "matrix": 193, "max": 244, "measur": [194, 195, 213, 240], "memori": [24, 203, 205, 207], "memory_peak": 17, "mini": [214, 219, 220], "mini_onnx_build": 18, "miscellan": 254, "mistral": 256, "mistral_help": 124, "mode": 194, "model": [82, 83, 86, 194, 196, 197, 200, 201, 202, 203, 204, 205, 207, 210, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 256, 264, 266, 271], "model_cas": 107, "model_contain": 136, "model_run": 19, "modelproto": 210, "modul": [7, 11, 13, 16, 23, 26, 27, 55, 88, 93, 106, 109, 120, 135, 142, 144, 170, 175, 177, 179, 188, 206, 210, 217, 219, 247], "more": 251, "mulitpl": [227, 235], "multipl": [193, 240], "name": [229, 237], "nan_euclidean_dist": 210, "nn": 217, "node": 249, "nostrict": [269, 270], "numpi": 193, "object": 247, "older": 251, "one": [200, 227, 235], "onnx": [200, 202, 204, 207, 208, 209, 210, 228, 232, 233, 234, 235, 236, 237, 238, 243, 267, 268, 271], "onnx_ani": 145, "onnx_cast": 146, "onnx_clip": 147, "onnx_const": 148, "onnx_conv": 149, "onnx_custom_backend": 93, "onnx_debug_backend": 93, "onnx_dropout": 150, "onnx_equ": 151, "onnx_expand": 152, "onnx_export": 112, "onnx_funct": 153, "onnx_layer_norm": 154, "onnx_matmul": 155, "onnx_mul": 156, "onnx_reduc": 157, "onnx_reshap": 158, "onnx_rotari": 159, "onnx_sequ": 160, "onnx_slic": 161, "onnx_split": 162, "onnx_sub": 163, "onnx_tool": 20, "onnx_transpos": 164, "onnx_unsqueez": 165, "onnxrt": 196, "onnxruntim": [193, 201, 271], "onnxscript": 199, "op": [13, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 219, 225, 226, 233, 234], "op_add_add_mul_mul": 28, "op_average_pool_grad": 29, "op_broadcast_gradient_arg": 14, "op_cast_lik": 30, "op_complex": 31, "op_concat": 32, "op_constant_of_shap": 33, "op_fused_matmul": 34, "op_gather_grad": 35, "op_memcpy_host": 36, "op_mul_sigmoid": 37, "op_negxplus1": 38, "op_qlinear_average_pool": 39, "op_qlinear_conv": 40, "op_quick_gelu": 41, "op_replace_zero": 42, "op_rotari": 43, "op_scatter_el": 44, "op_scatternd_of_shap": 45, "op_simplified_layer_norm": 46, "op_skip_layer_norm": 47, "op_slic": 48, "op_transpose_cast": 49, "op_tri_matrix": 50, "oper": [225, 226, 233, 234], "opset": [199, 249], "optim": [196, 198, 200, 202, 204, 228, 236, 247, 249, 261], "optimization_opt": 137, "optimizationopt": 135, "option": 247, "order_optim": 143, "ort": [203, 205, 207], "ort_evalu": 51, "ort_help": 8, "ort_sess": 21, "other": [26, 55, 93, 109, 135, 142], "output": [210, 229, 237, 255], "oxs_dispatch": 113, "oxs_opset": 114, "pad": [218, 227, 235], "pairwis": [221, 231], "partit": 94, "patch": [221, 224, 231, 232], "pattern": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 198, 200, 202, 204, 249], "patternoptim": [142, 249], "patterns_api": 166, "patterns_exp": [167, 168, 169, 170, 171, 172, 173], "patterns_fix": [174, 175], "patterns_investig": [176, 177, 178], "patterns_ml": [179, 180], "patterns_ort": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "phi": [214, 219, 220, 230, 238, 256, 257], "phi3_help": 125, "phi_help": 126, "piec": 219, "piece_by_piec": 115, "piece_by_piece_seri": 116, "plai": 271, "playground": 198, "plot": [22, 23, 24], "plot_llama_diff_export": 255, "pratic": 247, "prepar": 201, "preserv": 206, "print": 262, "profil": [84, 85, 201, 203, 207], "program": [269, 270], "python": [85, 210, 260, 261, 262, 263], "pytorch": [193, 209, 236, 271], "quantized_tensor": 52, "raw": 193, "read": 255, "recip": [212, 250], "refer": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 197], "regist": [225, 233], "registr": [225, 226, 233, 234], "regress": [209, 236], "renam": [229, 237], "replac": [218, 219], "report": 240, "report_export": 220, "result": 194, "reverse_graph_build": 138, "rewrit": [200, 202], "run": [83, 203, 205, 207, 240, 263], "runtimeerror": 265, "scan": [221, 231], "scenario": 266, "scikit": [209, 210, 236], "script": [207, 244, 267, 268], "select": 249, "set": 240, "sgd": [209, 236], "shape": [204, 209, 215, 216, 219, 229, 236, 237, 247, 249, 267, 268, 269, 270], "shape_type_comput": 139, "short": 240, "show": 207, "signatur": 266, "signaturefloat1": [267, 268, 269, 270], "signatureint1": [267, 268, 269, 270], "signatureint2": [267, 268, 269, 270], "signaturelistfixedlength": [267, 268, 269, 270], "signaturelistfixedwithnon": [267, 268, 269, 270], "signaturelistvariablelength": [267, 268, 269, 270], "signatureshapeasindex": [267, 268, 269, 270], "simpl": [209, 228, 236, 249], "simple_rotari": 171, "simplifi": 247, "simplified_layer_norm": 190, "singl": 240, "size": 244, "skl": [53, 54, 55], "small": 194, "some": [196, 197, 203, 205, 206, 207], "speed": [195, 203, 205, 207, 247], "start": [192, 212, 264], "static": [267, 269], "statist": 249, "step": 210, "strict": [269, 270], "sub": 210, "submodul": [11, 16, 26, 142, 228], "success": 213, "suggest": [221, 224, 231, 232], "summari": [267, 268, 269, 270], "support": [256, 266], "symbol": 253, "tensor": 247, "test": [213, 224, 227, 232, 235, 266], "time": [203, 205, 207, 211, 239, 253, 258], "to_onnx": [55, 109, 224, 225, 226, 227, 228, 229, 230, 231, 271], "tool": [249, 259], "torch": [192, 204, 206, 207, 210, 217, 218, 232, 233, 234, 235, 237, 238, 243, 265, 271], "torch_bench": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 241, 242], "torch_dynamo": [89, 90, 91, 92, 93, 94], "torch_export_patch": 247, "torch_interpret": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "torch_model": [118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "torch_test_help": 128, "trace": [117, 210, 267, 268, 269, 270], "train": [193, 203, 204, 206], "training_help": 127, "tree_ensembl": 180, "try": 223, "tutori": 271, "tweak": 208, "type": [223, 247, 249], "type_infer": 140, "typebfloat16": [267, 268, 269, 270], "unary_oper": 172, "unavail": 265, "uneasi": 255, "unexpect": 265, "unflatten": 208, "unfus": 191, "unknown": [229, 237], "unlighten": 260, "unpredict": [229, 237], "us": [193, 210, 215, 217, 223, 247, 249], "valid": [210, 227, 235], "verbos": 249, "verif": [196, 197], "version": 251, "virtualtensor": 135, "wai": 207, "weird": 271, "what": [193, 204], "when": 215, "where_replac": 173, "work": [217, 251], "wrap": 206, "xbuilder": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "xoptim": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191]}})