
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/prog/plot_gil_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_prog_plot_gil_example.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_prog_plot_gil_example.py:


.. _gilexamplerst:

======
Le GIL
======

Le GIL ou `Global Interpreter Lock <https://en.wikipedia.org/wiki/Global_interpreter_lock>`_
est un verrou unique auquel l'interpréteur Python fait appel constamment
pour protéger tous les objets qu'il manipule contre des accès concurrentiels.

Deux listes en parallel
=======================

On mesure le temps nécessaire pour créer deux liste et comparer ce
temps avec celui que cela prendrait en parallèle.

.. GENERATED FROM PYTHON SOURCE LINES 20-34

.. code-block:: Python

    import timeit
    import time
    from concurrent.futures import ThreadPoolExecutor


    def create_list(n):
        res = []
        for i in range(n):
            res.append(i)
        return res


    timeit.timeit("create_list(100000)", globals=globals(), number=100)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0.3475509130003047



.. GENERATED FROM PYTHON SOURCE LINES 35-38

En parallèle avec le module `concurrent.futures
<https://docs.python.org/3/library/concurrent.futures.html>`_
et deux appels à la même fonction.

.. GENERATED FROM PYTHON SOURCE LINES 38-49

.. code-block:: Python



    def run2(nb):
        with ThreadPoolExecutor(max_workers=2) as executor:
            for _res in executor.map(create_list, [nb, nb + 1]):
                pass


    timeit.timeit("run2(100000)", globals=globals(), number=100)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1.5233818489978148



.. GENERATED FROM PYTHON SOURCE LINES 50-61

C'est plus long que si les calculs étaient lancés les uns après les autres.
Ce temps est perdu à synchroniser les deux threads bien que les
deux boucles n'aient rien à échanger. Chaque thread passe son
temps à attendre que l'autre ait terminé de mettre à jour sa
liste et le *GIL* impose que ces mises à jour aient lieu une après l'autre.

Un autre scénario
=================

Au lieu de mettre à jour une liste, on va lancer un thread
qui ne fait rien qu'attendre. Donc le *GIL* n'est pas impliqué.

.. GENERATED FROM PYTHON SOURCE LINES 61-71

.. code-block:: Python



    def attendre(t=0.009):
        time.sleep(t)
        return None


    timeit.timeit("attendre()", globals=globals(), number=100)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0.9342183890003071



.. GENERATED FROM PYTHON SOURCE LINES 73-84

.. code-block:: Python



    def run3(t):
        with ThreadPoolExecutor(max_workers=2) as executor:
            for _res in executor.map(attendre, [t, t + 0.001]):
                pass


    timeit.timeit("run3(0.009)", globals=globals(), number=100)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1.3061988989975362



.. GENERATED FROM PYTHON SOURCE LINES 85-87

Les deux attentes se font en parallèle car le temps moyen est
significativement inférieur à la somme des deux attentes.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.117 seconds)


.. _sphx_glr_download_auto_examples_prog_plot_gil_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_gil_example.ipynb <plot_gil_example.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_gil_example.py <plot_gil_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_gil_example.zip <plot_gil_example.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
