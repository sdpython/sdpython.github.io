Search.setIndex({"docnames": ["CHANGELOGS", "algorithm_culture", "api/classique", "api/datasets", "api/faqs", "api/index", "api/numpysex", "api/practice/rues_paris", "api/practice/tsp_bresenham", "api/practice/tsp_kohonen", "api/practice/tsp_kruskal", "api/tools", "api/video/tsp_kohonen", "api/video/tsp_kruskal", "articles/2022/2022-01-01-assurance", "articles/2022/2022-11-31-route2022", "articles/2022/2022-12-07-cartopy", "articles/2023/2023-08-03-code-jam", "articles/2023/2023-08-09-hermionne", "articles/2023/2023-09-06-ensae", "articles/2023/2023-11-31-route2023", "articles/2024/2024-01-18-wsl", "articles/2024/2024-03-01-route2024", "articles/2024/2024-09-04-ensae", "articles/2024/2024-11-31-route2024", "articles/index", "auto_examples/index", "auto_examples/ml/index", "auto_examples/ml/plot_correlations", "auto_examples/ml/plot_roc", "auto_examples/ml/sg_execution_times", "auto_examples/prog/index", "auto_examples/prog/plot_einstein_riddle", "auto_examples/prog/plot_float_and_double_rouding", "auto_examples/prog/plot_gil_example", "auto_examples/prog/plot_hypercube", "auto_examples/prog/plot_lambda_function", "auto_examples/prog/plot_matador", "auto_examples/prog/plot_numpy_tricks", "auto_examples/prog/plot_pandas_groupby", "auto_examples/prog/plot_partie_dame", "auto_examples/prog/plot_serialisation_examples", "auto_examples/prog/plot_serialisation_protobuf", "auto_examples/prog/plot_tarabiscote", "auto_examples/prog/plot_tsp", "auto_examples/prog/sg_execution_times", "auto_examples/sg_execution_times", "c_data/dataframes", "c_data/enedis_cartes", "c_data/graphes", "c_data/index", "c_data/matrices", "c_data/nb_array", "c_data/nb_dataframe", "c_data/nb_dataframe_matrix_speed", "c_data/nb_numpy", "c_data/nb_pandas", "c_data/numpy_broadcast", "c_expose/finance/finance_autostrat", "c_expose/index", "c_expose/tsp/tsp_kohonen", "c_expose/tsp/tsp_kruskal", "c_ml/index", "c_ml/rappel", "c_ml/regclass", "c_resume/cheat_sheet", "c_resume/conseil_programmes", "c_resume/git", "c_resume/index", "c_resume/jenkins", "c_resume/linux", "c_resume/python_sheet", "i_ex", "i_faq", "i_index", "index", "introduction", "license", "notebook_gallery", "practice/algo-base/BJKST", "practice/algo-base/exercice_compose_connexe", "practice/algo-base/exercice_echelle", "practice/algo-base/exercice_edit_distance", "practice/algo-base/exercice_editdist", "practice/algo-base/exercice_ordonnancement", "practice/algo-base/exercice_plus_grande_somme", "practice/algo-base/exercice_random_graph", "practice/algo-base/exercice_simulation_covid", "practice/algo-base/exercice_simulation_covid_simple", "practice/algo-base/exercice_suffix", "practice/algo-base/exercice_topk", "practice/algo-base/exercice_tsp", "practice/algo-base/exercice_xn", "practice/algo-base/matrix_dictionary", "practice/algo-base/tsp_aparte", "practice/algo-base/tsp_simplifie", "practice/algo-compose/exercice_morse", "practice/algo-compose/paris_parcours", "practice/algo-compose/vigenere", "practice/exams", "practice/exams/enonce_ml_2017", "practice/exams/enonce_ml_2017_correction", "practice/exams/interro_rapide_20_minutes_2014_09", "practice/exams/interro_rapide_20_minutes_2014_10", "practice/exams/interro_rapide_20_minutes_2014_11", "practice/exams/interro_rapide_20_minutes_2014_12", "practice/exams/interro_rapide_20_minutes_2015_09", "practice/exams/interro_rapide_20_minutes_2015_11", "practice/exams/td_note_2013_bout_de_code_coloriage", "practice/exams/td_note_2013_coloriage_correction", "practice/exams/td_note_2015", "practice/exams/td_note_2015_rattrapage_enonce", "practice/exams/td_note_2016", "practice/exams/td_note_2017", "practice/exams/td_note_2017_2", "practice/exams/td_note_2018_1", "practice/exams/td_note_2018_2", "practice/exams/td_note_2019_1", "practice/exams/td_note_2019_2", "practice/exams/td_note_2020_1", "practice/exams/td_note_2020_2", "practice/exams/td_note_2021", "practice/exams/td_note_2022", "practice/exams/td_note_2022_rattrapage", "practice/exams/td_note_2022_rattrapage2", "practice/exams/td_note_2023", "practice/exams/td_note_2023-2024", "practice/exams/td_note_2023-2024_rattrapage", "practice/index_algo", "practice/index_data", "practice/index_exam", "practice/index_ml", "practice/index_python", "practice/ml/artificiel_multiclass", "practice/ml/gradient_boosting", "practice/ml/ml_a_tree_overfitting", "practice/ml/ml_features_model", "practice/ml/ridge_lasso", "practice/ml/timeseries_ssa", "practice/ml/wines_acp", "practice/ml/winesc_color", "practice/ml/winesc_color_line", "practice/ml/winesc_color_linear", "practice/ml/winesc_color_roc", "practice/ml/winesc_multi", "practice/ml/winesc_multi_stacking", "practice/ml/winesr_knn", "practice/ml/winesr_knn_cross_val", "practice/ml/winesr_knn_eval", "practice/ml/winesr_knn_hyper", "practice/ml/winesr_knn_split", "practice/ml/winesr_knn_split_strat", "practice/ml/winesr_reg", "practice/ml/winesr_reg_poly", "practice/py-base/classe_de", "practice/py-base/classe_iterateur", "practice/py-base/classe_permutation", "practice/py-base/classe_tree", "practice/py-base/classe_user_p", "practice/py-base/classes_2048", "practice/py-base/classes_metro", "practice/py-base/code_liste_tuple", "practice/py-base/code_multinomial", "practice/py-base/coloriage_carre", "practice/py-base/dame_prise", "practice/py-base/de_rotation", "practice/py-base/exercice_hash", "practice/py-base/exercice_json_xml", "practice/py-base/exercice_pi", "practice/py-base/exercice_regex", "practice/py-base/exercice_serialisation_json", "practice/py-base/histogramme_rapide", "practice/py-base/nbheap", "practice/py-base/pivot_gauss", "practice/py-base/profile_gini", "practice/py-base/profiling_conv", "practice/py-base/profiling_example", "practice/py-base/recherche_dichotomique", "practice/py-base/scrapping", "practice/py-base/structures_donnees_conversion", "practice/py-base/tableau_contingence", "practice/py-base/tests_unitaires", "practice/py-base/tri_nlnd", "practice/tds-algo/decorrelation", "practice/tds-algo/decorrelation_correction", "practice/tds-algo/gentry_integer_encryption", "practice/tds-algo/gentry_integer_encryption_correction", "practice/tds-algo/graph_spectral_clustering", "practice/tds-algo/graph_spectral_clustering_correction", "practice/tds-algo/knn_high_dimension", "practice/tds-algo/knn_high_dimension_correction", "practice/tds-algo/plus_court_chemin", "practice/tds-algo/plus_court_chemin_correction", "practice/tds-algo/puzzle_algo_1", "practice/tds-algo/puzzle_algo_1_correction", "practice/tds-algo/puzzle_algo_2", "practice/tds-algo/puzzle_algo_2_correction", "practice/tds-base/classes_carre_magique", "practice/tds-base/classes_carre_magique_correction", "practice/tds-base/classes_heritage", "practice/tds-base/classes_heritage_correction", "practice/tds-base/dictionnaire_vigenere", "practice/tds-base/dictionnaire_vigenere_correction", "practice/tds-base/integrale_rectangle", "practice/tds-base/integrale_rectangle_correction", "practice/tds-base/j2048", "practice/tds-base/j2048_correction", "practice/tds-base/module_file_regex", "practice/tds-base/module_file_regex_correction", "practice/tds-base/premiers_pas", "practice/tds-base/premiers_pas_correction", "practice/tds-base/pyramide_bigarree", "practice/tds-base/pyramide_bigarree_correction", "practice/tds-base/texte_langue", "practice/tds-base/texte_langue_correction", "practice/tds-base/trie", "practice/tds-base/trie_correction", "practice/tds-base/variable_boucle_tests", "practice/tds-base/variable_boucle_tests_correction", "practice/years/2023/bareme_note_optimisation", "practice/years/2023/editdist", "practice/years/2023/index", "practice/years/2023/pivot_gauss", "practice/years/2023/prefix_search", "practice/years/index", "py/c_classes/classes", "py/c_classes/index", "py/c_classes/questions", "py/c_exception/exception", "py/c_exception/exception_ext", "py/c_exception/index", "py/c_exception/warning", "py/c_gui/index", "py/c_gui/tkinter", "py/c_lang/collections", "py/c_lang/constructions", "py/c_lang/dates", "py/c_lang/encoding", "py/c_lang/index", "py/c_lang/syntaxe", "py/c_lang/types", "py/c_module/files", "py/c_module/index", "py/c_module/module", "py/c_module/serialization", "py/c_parallelisation/index", "py/c_parallelisation/thread", "py/c_regex/index", "py/c_regex/regex", "py/index", "sg_execution_times"], "filenames": ["CHANGELOGS.rst", "algorithm_culture.rst", "api/classique.rst", "api/datasets.rst", "api/faqs.rst", "api/index.rst", "api/numpysex.rst", "api/practice/rues_paris.rst", "api/practice/tsp_bresenham.rst", "api/practice/tsp_kohonen.rst", "api/practice/tsp_kruskal.rst", "api/tools.rst", "api/video/tsp_kohonen.rst", "api/video/tsp_kruskal.rst", "articles/2022/2022-01-01-assurance.rst", "articles/2022/2022-11-31-route2022.rst", "articles/2022/2022-12-07-cartopy.rst", "articles/2023/2023-08-03-code-jam.rst", "articles/2023/2023-08-09-hermionne.rst", "articles/2023/2023-09-06-ensae.rst", "articles/2023/2023-11-31-route2023.rst", "articles/2024/2024-01-18-wsl.rst", "articles/2024/2024-03-01-route2024.rst", "articles/2024/2024-09-04-ensae.rst", "articles/2024/2024-11-31-route2024.rst", "articles/index.rst", "auto_examples/index.rst", "auto_examples/ml/index.rst", "auto_examples/ml/plot_correlations.rst", "auto_examples/ml/plot_roc.rst", "auto_examples/ml/sg_execution_times.rst", "auto_examples/prog/index.rst", "auto_examples/prog/plot_einstein_riddle.rst", "auto_examples/prog/plot_float_and_double_rouding.rst", "auto_examples/prog/plot_gil_example.rst", "auto_examples/prog/plot_hypercube.rst", "auto_examples/prog/plot_lambda_function.rst", "auto_examples/prog/plot_matador.rst", "auto_examples/prog/plot_numpy_tricks.rst", "auto_examples/prog/plot_pandas_groupby.rst", "auto_examples/prog/plot_partie_dame.rst", "auto_examples/prog/plot_serialisation_examples.rst", "auto_examples/prog/plot_serialisation_protobuf.rst", "auto_examples/prog/plot_tarabiscote.rst", "auto_examples/prog/plot_tsp.rst", "auto_examples/prog/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "c_data/dataframes.rst", "c_data/enedis_cartes.ipynb", "c_data/graphes.rst", "c_data/index.rst", "c_data/matrices.rst", "c_data/nb_array.ipynb", "c_data/nb_dataframe.ipynb", "c_data/nb_dataframe_matrix_speed.ipynb", "c_data/nb_numpy.ipynb", "c_data/nb_pandas.ipynb", "c_data/numpy_broadcast.ipynb", "c_expose/finance/finance_autostrat.rst", "c_expose/index.rst", "c_expose/tsp/tsp_kohonen.rst", "c_expose/tsp/tsp_kruskal.rst", "c_ml/index.rst", "c_ml/rappel.rst", "c_ml/regclass.rst", "c_resume/cheat_sheet.rst", "c_resume/conseil_programmes.rst", "c_resume/git.rst", "c_resume/index.rst", "c_resume/jenkins.rst", "c_resume/linux.rst", "c_resume/python_sheet.rst", "i_ex.rst", "i_faq.rst", "i_index.rst", "index.rst", "introduction.rst", "license.rst", "notebook_gallery.rst", "practice/algo-base/BJKST.ipynb", "practice/algo-base/exercice_compose_connexe.ipynb", "practice/algo-base/exercice_echelle.ipynb", "practice/algo-base/exercice_edit_distance.ipynb", "practice/algo-base/exercice_editdist.ipynb", "practice/algo-base/exercice_ordonnancement.ipynb", "practice/algo-base/exercice_plus_grande_somme.ipynb", "practice/algo-base/exercice_random_graph.ipynb", "practice/algo-base/exercice_simulation_covid.ipynb", "practice/algo-base/exercice_simulation_covid_simple.ipynb", "practice/algo-base/exercice_suffix.ipynb", "practice/algo-base/exercice_topk.ipynb", "practice/algo-base/exercice_tsp.ipynb", "practice/algo-base/exercice_xn.ipynb", "practice/algo-base/matrix_dictionary.ipynb", "practice/algo-base/tsp_aparte.ipynb", "practice/algo-base/tsp_simplifie.ipynb", "practice/algo-compose/exercice_morse.ipynb", "practice/algo-compose/paris_parcours.ipynb", "practice/algo-compose/vigenere.ipynb", "practice/exams.rst", "practice/exams/enonce_ml_2017.ipynb", "practice/exams/enonce_ml_2017_correction.ipynb", "practice/exams/interro_rapide_20_minutes_2014_09.ipynb", "practice/exams/interro_rapide_20_minutes_2014_10.ipynb", "practice/exams/interro_rapide_20_minutes_2014_11.ipynb", "practice/exams/interro_rapide_20_minutes_2014_12.ipynb", "practice/exams/interro_rapide_20_minutes_2015_09.ipynb", "practice/exams/interro_rapide_20_minutes_2015_11.ipynb", "practice/exams/td_note_2013_bout_de_code_coloriage.ipynb", "practice/exams/td_note_2013_coloriage_correction.ipynb", "practice/exams/td_note_2015.ipynb", "practice/exams/td_note_2015_rattrapage_enonce.ipynb", "practice/exams/td_note_2016.ipynb", "practice/exams/td_note_2017.ipynb", "practice/exams/td_note_2017_2.ipynb", "practice/exams/td_note_2018_1.ipynb", "practice/exams/td_note_2018_2.ipynb", "practice/exams/td_note_2019_1.ipynb", "practice/exams/td_note_2019_2.ipynb", "practice/exams/td_note_2020_1.ipynb", "practice/exams/td_note_2020_2.ipynb", "practice/exams/td_note_2021.ipynb", "practice/exams/td_note_2022.ipynb", "practice/exams/td_note_2022_rattrapage.ipynb", "practice/exams/td_note_2022_rattrapage2.ipynb", "practice/exams/td_note_2023.ipynb", "practice/exams/td_note_2023-2024.ipynb", "practice/exams/td_note_2023-2024_rattrapage.ipynb", "practice/index_algo.rst", "practice/index_data.rst", "practice/index_exam.rst", "practice/index_ml.rst", "practice/index_python.rst", "practice/ml/artificiel_multiclass.ipynb", "practice/ml/gradient_boosting.ipynb", "practice/ml/ml_a_tree_overfitting.ipynb", "practice/ml/ml_features_model.ipynb", "practice/ml/ridge_lasso.ipynb", "practice/ml/timeseries_ssa.ipynb", "practice/ml/wines_acp.ipynb", "practice/ml/winesc_color.ipynb", "practice/ml/winesc_color_line.ipynb", "practice/ml/winesc_color_linear.ipynb", "practice/ml/winesc_color_roc.ipynb", "practice/ml/winesc_multi.ipynb", "practice/ml/winesc_multi_stacking.ipynb", "practice/ml/winesr_knn.ipynb", "practice/ml/winesr_knn_cross_val.ipynb", "practice/ml/winesr_knn_eval.ipynb", "practice/ml/winesr_knn_hyper.ipynb", "practice/ml/winesr_knn_split.ipynb", "practice/ml/winesr_knn_split_strat.ipynb", "practice/ml/winesr_reg.ipynb", "practice/ml/winesr_reg_poly.ipynb", "practice/py-base/classe_de.ipynb", "practice/py-base/classe_iterateur.ipynb", "practice/py-base/classe_permutation.ipynb", "practice/py-base/classe_tree.ipynb", "practice/py-base/classe_user_p.ipynb", "practice/py-base/classes_2048.ipynb", "practice/py-base/classes_metro.ipynb", "practice/py-base/code_liste_tuple.ipynb", "practice/py-base/code_multinomial.ipynb", "practice/py-base/coloriage_carre.ipynb", "practice/py-base/dame_prise.ipynb", "practice/py-base/de_rotation.ipynb", "practice/py-base/exercice_hash.ipynb", "practice/py-base/exercice_json_xml.ipynb", "practice/py-base/exercice_pi.ipynb", "practice/py-base/exercice_regex.ipynb", "practice/py-base/exercice_serialisation_json.ipynb", "practice/py-base/histogramme_rapide.ipynb", "practice/py-base/nbheap.ipynb", "practice/py-base/pivot_gauss.ipynb", "practice/py-base/profile_gini.ipynb", "practice/py-base/profiling_conv.ipynb", "practice/py-base/profiling_example.ipynb", "practice/py-base/recherche_dichotomique.ipynb", "practice/py-base/scrapping.ipynb", "practice/py-base/structures_donnees_conversion.ipynb", "practice/py-base/tableau_contingence.ipynb", "practice/py-base/tests_unitaires.ipynb", "practice/py-base/tri_nlnd.ipynb", "practice/tds-algo/decorrelation.ipynb", "practice/tds-algo/decorrelation_correction.ipynb", "practice/tds-algo/gentry_integer_encryption.ipynb", "practice/tds-algo/gentry_integer_encryption_correction.ipynb", "practice/tds-algo/graph_spectral_clustering.ipynb", "practice/tds-algo/graph_spectral_clustering_correction.ipynb", "practice/tds-algo/knn_high_dimension.ipynb", "practice/tds-algo/knn_high_dimension_correction.ipynb", "practice/tds-algo/plus_court_chemin.ipynb", "practice/tds-algo/plus_court_chemin_correction.ipynb", "practice/tds-algo/puzzle_algo_1.ipynb", "practice/tds-algo/puzzle_algo_1_correction.ipynb", "practice/tds-algo/puzzle_algo_2.ipynb", "practice/tds-algo/puzzle_algo_2_correction.ipynb", "practice/tds-base/classes_carre_magique.ipynb", "practice/tds-base/classes_carre_magique_correction.ipynb", "practice/tds-base/classes_heritage.ipynb", "practice/tds-base/classes_heritage_correction.ipynb", "practice/tds-base/dictionnaire_vigenere.ipynb", "practice/tds-base/dictionnaire_vigenere_correction.ipynb", "practice/tds-base/integrale_rectangle.ipynb", "practice/tds-base/integrale_rectangle_correction.ipynb", "practice/tds-base/j2048.ipynb", "practice/tds-base/j2048_correction.ipynb", "practice/tds-base/module_file_regex.ipynb", "practice/tds-base/module_file_regex_correction.ipynb", "practice/tds-base/premiers_pas.ipynb", "practice/tds-base/premiers_pas_correction.ipynb", "practice/tds-base/pyramide_bigarree.ipynb", "practice/tds-base/pyramide_bigarree_correction.ipynb", "practice/tds-base/texte_langue.ipynb", "practice/tds-base/texte_langue_correction.ipynb", "practice/tds-base/trie.ipynb", "practice/tds-base/trie_correction.ipynb", "practice/tds-base/variable_boucle_tests.ipynb", "practice/tds-base/variable_boucle_tests_correction.ipynb", "practice/years/2023/bareme_note_optimisation.ipynb", "practice/years/2023/editdist.ipynb", "practice/years/2023/index.rst", "practice/years/2023/pivot_gauss.ipynb", "practice/years/2023/prefix_search.ipynb", "practice/years/index.rst", "py/c_classes/classes.rst", "py/c_classes/index.rst", "py/c_classes/questions.rst", "py/c_exception/exception.rst", "py/c_exception/exception_ext.rst", "py/c_exception/index.rst", "py/c_exception/warning.rst", "py/c_gui/index.rst", "py/c_gui/tkinter.rst", "py/c_lang/collections.rst", "py/c_lang/constructions.rst", "py/c_lang/dates.rst", "py/c_lang/encoding.rst", "py/c_lang/index.rst", "py/c_lang/syntaxe.rst", "py/c_lang/types.rst", "py/c_module/files.rst", "py/c_module/index.rst", "py/c_module/module.rst", "py/c_module/serialization.rst", "py/c_parallelisation/index.rst", "py/c_parallelisation/thread.rst", "py/c_regex/index.rst", "py/c_regex/regex.rst", "py/index.rst", "sg_execution_times.rst"], "titles": ["Change Logs", "Survol algorithmique", "examples.construction_classique", "Jeux de donn\u00e9es", "faq", "Code inclus dans cette librairie", "examples.numpysex", "teachpyx.practice.rues_paris", "teachpyx.practice.tsp_bresenham", "teachpyx.practice.tsp_kohonen", "teachpyx.practice.tsp_kruskal", "tools", "teachpyx.video.tsp_kohonen_pygame", "teachpyx.video.tsp_kruskal", "2022 - Assurance auto", "2022-11-31 : rappel feuille de route 2022", "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)", "2023-08-03 : Code Jam", "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne", "2023-09-06 : ENSAE", "2023-11-31 : rappel feuille de route 2023", "2024-01-18 : WSL - nettoyage", "2024-03-01 : feuille de route 2024", "2024-09-04 : ENSAE", "2024-11-31 : rappel feuille de route 2024", "Collections d\u2019articles p\u00e9rissables", "Gallerie d\u2019exemples", "Gallerie d\u2019exemples sur le machine learning", "Corr\u00e9lations", "Receiver Operating Characteristic (ROC)", "Computation times", "Gallerie d\u2019exemples sur la programmation", "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution", "Float Conversion", "Le GIL", "Hypercube et autres exercices", "Astuces avec les lambda functions", "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations", "Points d\u2019impl\u00e9mentation avec numpy", "Pandas et groupby", "Parties de dames", "S\u00e9rialisation", "S\u00e9rialisation avec protobuf", "Exercices expliqu\u00e9s de programmation", "R\u00e9flexions autour du voyage de commerce (TSP)", "Computation times", "Computation times", "Dataframes", "Tracer une carte en Python", "Graphes", "Matrices et DataFrames", "Calcul matriciel", "Calcul Matriciel, Optimisation", "DataFrame et Graphes", "Mesures de vitesse sur les dataframes", "Calcul matriciel avec numpy (exercices)", "Manipulation de donn\u00e9es avec pandas (exercices)", "Numpy et tableau de contingence", "Strat\u00e9gie automatique de trading en finance", "Expos\u00e9s", "Circuit hamiltonien et Kohonen", "Circuit hamiltonien et Kruskal", "Machine Learning", "Quelques rappels", "Classification et r\u00e9gression", "Cheat Sheets", "Quelques conseils pour \u00e9crire un programme", "Cheat Sheet on Git", "Pr\u00e9cis", "Cheat Sheet on Jenkins", "Cheat Sheet on Linux", "Cheat sheet: Python", "Syntaxes et d\u00e9finitions", "FAQ", "En diagonal", "Apprendre la programmation avec Python", "Introduction", "License", "Tous les notebooks", "Algorithmes de streaming, BJKST", "Graphe et Composantes connexes", "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.", "Distance d\u2019\u00e9dition", "Distance entre deux mots de m\u00eame longueur et tests unitaires", "Probl\u00e8me d\u2019ordonnancement", "La sous-s\u00e9quence de plus grande somme", "Graphes al\u00e9atoires", "Simulation COVID", "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)", "Jeux de dictionnaires, plus grand suffixe commun", "Les k premiers \u00e9l\u00e9ments (top k)", "TSP - Traveling Salesman Problem", "Calculer x**n le plus rapidement possible", "Produit matriciel avec une matrice creuse", "Apart\u00e9 sur le voyageur de commerce", "Plus court chemin passant par tous les noeuds d\u2019un graphe", "D\u00e9coder du Morse sans espaces", "Parcourir les rues de Paris", "Casser le code de Vigen\u00e8re", "Exercices minut\u00e9s", "Evaluation Python / Machine Learning ann\u00e9e 2017 - \u00e9nonc\u00e9", "Evaluation Python / Machine Learning ann\u00e9e 2017 - solution", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015", "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015", "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)", "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)", "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014", "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)", "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015", "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016", "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)", "1A.e - Enonc\u00e9 23 octobre 2018 (1)", "1A.e - Enonc\u00e9 23 octobre 2018 (2)", "1A.e - Enonc\u00e9 22 octobre 2019 (1)", "1A.e - Enonc\u00e9 22 octobre 2019 (2)", "1A - Enonc\u00e9 24 novembre 2020", "1A - Enonc\u00e9 3 novembre 2021", "1A - Enonc\u00e9 15 novembre 2021 - rattrapage", "1A - Enonc\u00e9 3 mars 2022- rattrapage", "1A - Enonc\u00e9 26 octobre 2022", "1A - Enonc\u00e9 8 novembre 2023-2024", "1A - Enonc\u00e9 2024", "Algorithmes", "Numpy / Pandas", "S\u00e9ances minut\u00e9es", "Machine Learning", "Exercices sur le langage python", "Classification multi-classe et jeu mal balanc\u00e9", "Gradient Boosting", "Tree, hyperparam\u00e8tres, overfitting", "Features ou mod\u00e8le", "R\u00e9gression Ridge, Lasso et nouvel estimateur", "Single Spectrum Analysis (SSA)", "ACP - projection", "R\u00e9gression logistique et courbe ROC", "R\u00e9gression logistique en 2D", "Plusieurs mod\u00e8les, donn\u00e9es disjointes", "Classifications et courbes ROC", "Classification multi-classe", "Classification multi-classe et stacking", "Plus proches voisins", "Validation crois\u00e9e (cross-validation)", "Plus proches voisins - \u00e9valuation", "S\u00e9lection des hyper-param\u00e8tres", "Base d\u2019apprentissage et de test", "D\u00e9coupage stratifi\u00e9 apprentissage / test", "Pr\u00e9diction de la note des vins", "R\u00e9gression polyn\u00f4miale et pipeline", "Jeu de d\u00e9, rotation sur un circuit (classes)", "It\u00e9rateur", "Classe Permutation et d\u00e9composition en transitions", "Une classe pour repr\u00e9senter un arbre", "Classe, H\u00e9ritage, calcule d\u2019une distance", "2048 et les classes", "Un bref aper\u00e7u des classes", "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations", "Simuler une loi multinomiale", "Jeux de coloriage", "Exercices autour des dames", "Jeu de d\u00e9, rotation sur un circuit", "R\u00e9partition, table de hashage", "JSON - XML", "Calculs de surface et autres calculs", "Expressions r\u00e9guli\u00e8res", "S\u00e9rialisation avec JSON, XML, pickle", "Histogramme et dictionnaire", "Heap", "Pivot de gauss avec numpy", "Profiling la fonction Gini", "Profiling, application \u00e0 la convolution", "Exemple de profiling", "Recherche dichotomique", "Web-Scraping - pokemon", "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre", "Calculer un chi 2 sur un tableau de contingence", "Tests unitaires", "Tri plus rapide que pr\u00e9vu", "D\u00e9corr\u00e9lation de variables al\u00e9atoires", "D\u00e9corr\u00e9lation de variables al\u00e9atoires - correction", "Cryptage homomorphic de Craig Gentry", "Cryptage homomorphic de Craig Gentry - correction", "Spectral Clustering", "Spectral Clustering - correction", "Plus proches voisins en grande dimension", "Plus proches voisins en grande dimension - correction", "Programmation dynamique et plus court chemin", "Programmation dynamique et plus court chemin (correction)", "Puzzles algorithmiques (1)", "Puzzles algorithmes (1) - correction", "Puzzles algorithmiques (2)", "Puzzles algorithmes (2) - correction", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)", "Classes, h\u00e9ritage", "Classes, h\u00e9ritage (correction)", "Dictionnaires, fonctions, code de Vigen\u00e8re", "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)", "Int\u00e9grale et la m\u00e9thode des rectangles", "Int\u00e9grale et la m\u00e9thode des rectangles - correction", "2048 - strat\u00e9gie gagnante", "2048 - strat\u00e9gie gagnante - correction", "Modules, fichiers, expressions r\u00e9guli\u00e8res", "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)", "Premiers pas en Python", "Premiers pas en Python (correction)", "Tracer une pyramide bigarr\u00e9e", "Tracer une pyramide bigarr\u00e9e - correction", "Deviner la langue d\u2019un texte", "Deviner la langue d\u2019un texte (correction)", "Arbre et Trie", "Arbre et Trie (correction)", "Variables, boucles, tests", "Variables, boucles, tests (correction)", "Optimiser la note moyenne", "Distance d\u2019\u00e9dition (4 octobre)", "2023", "Pivot de Gauss", "Recherche de pr\u00e9fixes", "Notebooks \u00e9crits durant les s\u00e9ances", "Classes", "Classes", "Questions", "Exceptions", "Usage", "Exceptions", "Warning et logging", "Interfaces graphiques", "tkinter", "Constructions classiques", "Constructions classiques", "Dates", "Encoding et jeux de caract\u00e8res", "Variables et fonctions", "Syntaxe du langage Python (boucles, tests, fonctions)", "Types et variables du langage python", "Fichiers", "Entr\u00e9es, Sorties, Modules", "Module ou extension", "S\u00e9rialisation", "Parall\u00e9lisation", "Threads", "Expressions r\u00e9guli\u00e8res", "Expressions r\u00e9guli\u00e8res", "Le langage Python", "Computation times"], "terms": {"L": [1, 2, 4, 10, 14, 16, 18, 21, 22, 26, 31, 35, 40, 42, 43, 45, 52, 53, 55, 56, 57, 58, 60, 61, 63, 64, 66, 70, 71, 73, 75, 76, 79, 80, 81, 85, 86, 87, 88, 89, 90, 92, 96, 97, 101, 104, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 135, 138, 139, 142, 149, 152, 154, 155, 156, 157, 160, 162, 163, 164, 166, 170, 175, 177, 181, 182, 183, 184, 188, 190, 191, 192, 196, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 223, 225, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 248, 250], "part": [1, 2, 6, 10, 14, 20, 24, 26, 29, 31, 32, 35, 37, 43, 44, 45, 47, 48, 51, 53, 58, 61, 63, 64, 66, 71, 72, 76, 79, 85, 86, 87, 88, 89, 90, 91, 97, 101, 104, 111, 112, 113, 115, 116, 118, 119, 120, 121, 125, 127, 132, 135, 138, 139, 140, 141, 142, 155, 158, 159, 162, 170, 174, 175, 177, 179, 181, 182, 183, 184, 190, 191, 193, 194, 195, 196, 199, 200, 201, 204, 206, 207, 208, 213, 214, 215, 216, 219, 225, 228, 229, 233, 235, 236, 239, 240, 241, 243, 244, 246, 248, 250], "math\u00e9mat": [1, 2, 19, 22, 23, 53, 62, 64, 71, 76, 87, 104, 140, 157, 170, 184, 225, 235, 239, 240, 243], "On": [1, 2, 4, 7, 14, 22, 29, 32, 34, 35, 36, 40, 41, 42, 43, 44, 48, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 225, 227, 228, 229, 231, 233, 234, 235, 236, 239, 240, 241, 243, 244, 246, 248], "toujour": [1, 2, 4, 6, 14, 22, 29, 35, 41, 44, 52, 53, 55, 58, 60, 61, 62, 64, 66, 71, 72, 73, 76, 79, 81, 83, 86, 87, 89, 90, 97, 102, 105, 112, 122, 123, 133, 135, 136, 140, 143, 155, 157, 158, 160, 163, 164, 170, 174, 177, 179, 187, 190, 197, 199, 201, 202, 207, 208, 213, 214, 216, 223, 225, 227, 228, 229, 233, 235, 239, 240, 241, 243, 246, 248], "\u00e9tat": [1, 4, 53, 63, 73, 93, 105, 111, 112, 163, 209, 233, 239, 246], "initial": [1, 7, 44, 52, 53, 58, 61, 64, 79, 90, 97, 112, 136, 139, 165, 170, 175, 179, 182, 193, 202, 207, 216, 223, 229, 241, 243], "arriv": [1, 2, 29, 32, 53, 58, 61, 81, 85, 87, 97, 104, 137, 145, 155, 208, 209, 225, 228, 229, 233, 235, 239, 240, 241, 246], "apres": [1, 2, 7, 14, 24, 29, 32, 34, 40, 43, 44, 53, 54, 58, 60, 61, 63, 66, 71, 73, 86, 90, 93, 95, 96, 101, 104, 105, 110, 111, 112, 117, 118, 119, 120, 122, 134, 137, 149, 164, 166, 168, 170, 187, 188, 191, 199, 201, 207, 208, 216, 219, 225, 229, 233, 239, 240, 241, 243, 246, 248], "ser": [1, 2, 4, 14, 22, 35, 40, 41, 48, 61, 62, 63, 64, 71, 72, 73, 79, 83, 85, 90, 95, 96, 97, 101, 104, 110, 112, 113, 121, 125, 127, 140, 142, 145, 151, 156, 166, 177, 187, 188, 192, 197, 202, 204, 208, 209, 213, 215, 216, 217, 225, 228, 229, 231, 233, 235, 239, 240, 241, 243, 246], "oper": [1, 2, 4, 19, 23, 26, 31, 33, 43, 45, 56, 58, 61, 63, 73, 103, 106, 110, 125, 132, 136, 158, 164, 175, 179, 182, 185, 186, 208, 209, 210, 216, 217, 226, 228, 233, 235, 236, 240, 241, 244, 250], "connu": [1, 22, 52, 58, 60, 63, 64, 76, 79, 85, 86, 87, 97, 146, 181, 202, 217, 225, 233, 239, 241], "final": [1, 53, 54, 56, 58, 60, 71, 79, 93, 101, 110, 113, 114, 134, 142, 145, 152, 159, 175, 178, 179, 215, 225, 231, 239, 240, 243, 246, 248], "Cette": [1, 2, 4, 21, 43, 53, 58, 60, 61, 63, 64, 71, 72, 73, 76, 79, 82, 87, 93, 96, 97, 98, 101, 103, 104, 105, 112, 136, 140, 152, 154, 156, 162, 166, 168, 172, 175, 179, 183, 199, 208, 213, 215, 216, 219, 225, 228, 229, 233, 234, 235, 237, 239, 240, 241, 243, 244, 245, 246], "d\u00e9pend": [1, 14, 22, 35, 43, 53, 58, 60, 61, 64, 71, 76, 84, 87, 89, 93, 105, 112, 133, 134, 138, 142, 162, 163, 166, 168, 170, 179, 190, 197, 201, 202, 216, 217, 225, 231, 236, 239, 240, 243, 246], "Elle": [1, 2, 4, 29, 42, 55, 56, 58, 63, 66, 71, 72, 73, 76, 81, 85, 97, 102, 114, 126, 134, 136, 140, 155, 162, 170, 172, 175, 176, 179, 191, 194, 199, 201, 204, 225, 233, 239, 241, 243, 244, 246, 248], "peut": [1, 2, 4, 6, 7, 10, 14, 18, 29, 32, 35, 40, 41, 42, 43, 44, 48, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 79, 80, 81, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 101, 103, 104, 106, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 174, 177, 179, 180, 181, 182, 183, 187, 188, 191, 192, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 215, 216, 217, 223, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 248], "inclur": [1, 22, 41, 48, 71, 85, 175, 225, 227, 233, 239, 240, 243, 248], "al\u00e9atoir": [1, 3, 9, 10, 29, 35, 51, 53, 55, 58, 60, 61, 64, 72, 79, 85, 87, 90, 93, 95, 100, 101, 111, 114, 119, 120, 126, 128, 134, 135, 147, 151, 162, 180, 185, 186, 187, 190, 191, 204, 206, 207, 225, 243, 246], "parl": [1, 44, 52, 58, 62, 96, 138, 155, 208, 244], "lorsqu": [1, 2, 4, 9, 14, 29, 35, 40, 41, 43, 44, 52, 53, 56, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 79, 82, 83, 84, 90, 91, 92, 96, 101, 102, 104, 110, 112, 114, 115, 126, 133, 134, 135, 136, 137, 151, 155, 156, 158, 160, 162, 170, 175, 176, 177, 179, 187, 188, 192, 197, 198, 199, 201, 207, 209, 213, 215, 216, 217, 218, 223, 225, 228, 229, 231, 235, 237, 239, 240, 241, 243, 244, 246, 248], "d\u00e9montr": [1, 43, 63, 140, 191], "s\u00e9quenc": [1, 35, 63, 79, 80, 82, 86, 96, 128, 170, 182, 185, 186, 191, 196, 207, 214, 217, 237, 239, 244, 246, 248], "produit": [1, 2, 4, 6, 10, 41, 44, 48, 51, 52, 58, 62, 71, 73, 80, 104, 105, 107, 115, 116, 117, 118, 128, 133, 134, 135, 136, 137, 145, 152, 153, 154, 156, 158, 175, 199, 200, 210, 217, 225, 227, 228, 229, 231, 233, 235, 239, 241, 244, 246], "men": [1, 43, 58, 62, 112, 115, 116, 166, 208, 225, 233, 246], "souhait": [1, 2, 4, 14, 35, 36, 40, 52, 53, 58, 64, 71, 73, 81, 83, 85, 86, 90, 97, 100, 101, 107, 110, 112, 114, 115, 116, 123, 125, 136, 140, 147, 156, 159, 163, 166, 174, 181, 187, 191, 193, 194, 197, 199, 201, 204, 205, 207, 208, 217, 225, 229, 231, 233, 235, 239, 240, 241, 243], "Il": [1, 2, 4, 14, 16, 17, 18, 21, 32, 35, 37, 39, 40, 41, 42, 43, 48, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 75, 76, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 134, 135, 137, 138, 139, 140, 142, 145, 147, 148, 153, 154, 155, 157, 161, 163, 164, 165, 166, 169, 170, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 197, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 227, 228, 229, 231, 233, 234, 235, 237, 239, 240, 241, 243, 244, 245, 246, 248], "exist": [0, 1, 2, 4, 10, 14, 32, 40, 41, 42, 44, 52, 53, 55, 56, 58, 60, 61, 63, 64, 66, 71, 72, 73, 76, 80, 85, 86, 87, 91, 92, 94, 97, 107, 125, 134, 154, 155, 156, 158, 170, 175, 179, 180, 182, 187, 188, 191, 192, 194, 195, 196, 197, 201, 207, 208, 210, 216, 217, 223, 225, 228, 229, 233, 235, 237, 239, 240, 241, 243, 244, 245, 246], "grand": [1, 7, 10, 15, 17, 18, 35, 43, 44, 48, 52, 53, 55, 56, 58, 60, 61, 63, 64, 66, 71, 76, 80, 81, 87, 90, 91, 93, 95, 97, 98, 101, 104, 105, 110, 111, 112, 113, 115, 116, 120, 123, 125, 126, 128, 134, 136, 137, 138, 139, 140, 152, 153, 156, 161, 162, 169, 172, 174, 175, 179, 187, 202, 204, 207, 208, 217, 219, 223, 225, 227, 228, 233, 237, 239, 240, 241, 243, 246, 248], "variet": [1, 56, 207], "d\u00e9j\u00e0": [1, 44, 52, 53, 58, 61, 64, 71, 72, 76, 86, 90, 97, 117, 118, 122, 164, 182, 201, 207, 208, 216, 217, 225, 228, 239, 240, 241, 243, 244, 246, 248], "r\u00e9solus": [1, 233], "util": [1, 35, 43, 52, 53, 58, 60, 65, 66, 71, 83, 87, 90, 94, 114, 125, 128, 136, 137, 154, 157, 164, 169, 189, 199, 201, 207, 225, 228, 231, 233, 239, 240, 241, 246], "conna\u00eetr": [1, 2, 4, 14, 54, 63, 71, 73, 81, 93, 97, 123, 164, 223, 225, 233, 234, 235, 240, 241, 248], "C": [1, 2, 4, 6, 11, 14, 18, 21, 29, 34, 37, 41, 42, 43, 44, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 73, 76, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 101, 104, 107, 110, 112, 113, 115, 118, 119, 120, 123, 125, 126, 135, 136, 137, 139, 140, 142, 145, 146, 147, 148, 154, 155, 156, 157, 162, 163, 166, 167, 168, 170, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 197, 201, 202, 204, 206, 207, 208, 213, 215, 216, 217, 219, 223, 225, 226, 228, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 248], "aut": [1, 9, 58, 61, 62, 63, 71, 83, 86, 103, 110, 114, 115, 123, 134, 136, 153, 192, 197, 199, 201, 202, 225, 233, 239, 240, 241, 246], "outil": [1, 5, 14, 48, 58, 62, 71, 76, 80, 154, 167, 175, 189, 207, 208, 225, 228], "disponibl": [1, 16, 41, 53, 55, 56, 58, 64, 71, 75, 76, 97, 113, 121, 136, 140, 161, 208, 225, 233, 240, 243], "cr\u00e9": [1, 4, 6, 14, 22, 23, 34, 38, 41, 43, 51, 52, 54, 56, 58, 63, 71, 72, 73, 76, 80, 84, 86, 87, 93, 97, 100, 101, 102, 104, 110, 119, 120, 126, 137, 138, 145, 153, 155, 156, 158, 159, 164, 179, 181, 182, 183, 184, 187, 189, 190, 191, 197, 199, 201, 202, 206, 208, 214, 216, 217, 225, 228, 231, 239, 240, 241, 246], "propr": [1, 4, 22, 41, 43, 48, 52, 55, 56, 58, 71, 72, 73, 86, 96, 138, 139, 158, 183, 184, 187, 188, 225, 230, 231, 233, 239, 240, 244, 246], "Qu": [1, 44, 97, 162, 181, 189, 204, 216, 217], "raison": [1, 6, 14, 35, 44, 56, 58, 63, 64, 66, 71, 73, 95, 102, 104, 107, 110, 112, 125, 140, 147, 150, 190, 192, 197, 208, 213, 217, 225, 233, 239], "fair": [1, 2, 4, 14, 22, 29, 41, 42, 43, 48, 50, 52, 53, 55, 58, 60, 61, 63, 64, 66, 71, 72, 73, 76, 79, 80, 81, 83, 84, 87, 88, 90, 91, 93, 96, 97, 99, 100, 101, 107, 112, 113, 115, 116, 117, 118, 122, 135, 137, 139, 142, 145, 146, 152, 154, 156, 160, 162, 163, 169, 170, 174, 175, 179, 180, 182, 190, 191, 194, 199, 204, 206, 207, 208, 209, 210, 214, 216, 217, 220, 225, 228, 229, 233, 235, 236, 237, 239, 240, 241, 243, 245, 246, 248], "suppos": [1, 2, 7, 8, 10, 14, 29, 40, 56, 58, 60, 61, 63, 64, 71, 76, 81, 84, 85, 87, 90, 91, 96, 97, 98, 103, 110, 112, 113, 114, 115, 116, 121, 122, 123, 125, 126, 127, 142, 143, 163, 168, 177, 179, 181, 182, 191, 192, 193, 199, 202, 204, 216, 225, 233, 235, 239, 240, 241, 246], "dispos": [1, 14, 58, 64, 71, 97, 101, 110, 112, 113, 114, 119, 120, 125, 136, 174, 191, 193, 197, 223, 225, 229, 233, 240, 241, 243], "seul": [1, 2, 10, 14, 16, 18, 32, 35, 40, 52, 53, 54, 55, 56, 58, 61, 62, 64, 71, 76, 79, 80, 86, 87, 89, 90, 94, 96, 97, 104, 107, 114, 117, 118, 121, 125, 134, 137, 139, 145, 155, 157, 162, 167, 168, 170, 179, 183, 187, 188, 190, 193, 197, 198, 199, 201, 202, 207, 208, 209, 216, 217, 219, 225, 228, 233, 235, 237, 239, 240, 241, 243, 244, 246, 248], "machin": [0, 1, 6, 14, 19, 22, 23, 55, 58, 60, 63, 73, 74, 75, 76, 90, 94, 99, 135, 136, 163, 167, 175, 216, 246], "La": [1, 2, 4, 9, 10, 12, 13, 14, 16, 29, 35, 36, 40, 41, 43, 44, 48, 50, 52, 53, 54, 58, 60, 61, 64, 66, 71, 72, 73, 76, 79, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 158, 159, 160, 162, 164, 165, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 192, 197, 198, 199, 201, 203, 206, 207, 208, 209, 210, 213, 215, 216, 217, 218, 220, 222, 223, 225, 228, 229, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 248], "m\u00e9moir": [1, 4, 6, 41, 52, 55, 56, 63, 73, 79, 81, 164, 167, 170, 207, 215, 225, 233, 234, 237, 239, 240, 241, 244], "plus": [1, 2, 3, 6, 9, 10, 15, 16, 17, 18, 19, 22, 23, 29, 32, 34, 35, 36, 37, 39, 40, 41, 43, 48, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 66, 71, 72, 75, 76, 80, 81, 82, 86, 87, 88, 91, 96, 97, 98, 102, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 119, 120, 121, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 149, 150, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 175, 176, 179, 183, 185, 186, 193, 199, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 225, 227, 228, 230, 231, 233, 234, 235, 237, 239, 240, 243, 244, 245], "Le": [1, 2, 3, 4, 6, 14, 19, 20, 22, 23, 24, 26, 29, 31, 32, 35, 36, 40, 41, 43, 44, 45, 48, 50, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 68, 73, 75, 76, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 125, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 225, 227, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 248, 250], "temp": [1, 2, 4, 14, 17, 34, 41, 43, 44, 48, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 72, 73, 76, 84, 86, 87, 94, 95, 97, 101, 103, 104, 107, 109, 112, 114, 115, 116, 122, 136, 138, 145, 152, 153, 161, 163, 164, 167, 171, 174, 176, 179, 182, 187, 189, 190, 196, 197, 198, 205, 206, 208, 209, 212, 215, 216, 217, 219, 223, 225, 228, 233, 235, 239, 240, 241, 243, 244, 246, 248], "calcul": [1, 4, 6, 7, 9, 10, 14, 15, 19, 23, 29, 34, 36, 44, 50, 53, 56, 57, 58, 63, 64, 68, 72, 73, 76, 82, 83, 84, 86, 88, 89, 90, 95, 97, 98, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 128, 132, 134, 135, 136, 137, 138, 140, 145, 148, 153, 155, 157, 162, 163, 166, 170, 174, 175, 176, 179, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 201, 207, 209, 210, 215, 225, 227, 228, 233, 236, 239, 240, 241, 243, 245, 246], "leqsl": [1, 33, 63, 64, 81, 85, 103, 114, 168, 187, 191, 192, 193, 194, 195, 196, 204], "10": [1, 2, 4, 6, 7, 10, 11, 13, 14, 16, 22, 29, 32, 33, 35, 38, 39, 40, 43, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 66, 70, 71, 72, 73, 76, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 184, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 228, 229, 233, 234, 235, 236, 239, 240, 241, 243, 246, 248], "o": [1, 2, 6, 11, 37, 41, 43, 44, 48, 51, 53, 55, 61, 63, 69, 83, 85, 89, 90, 91, 94, 95, 96, 102, 103, 104, 110, 113, 115, 116, 119, 120, 122, 125, 136, 142, 153, 162, 169, 172, 177, 182, 185, 186, 190, 191, 202, 204, 208, 214, 216, 218, 220, 223, 225, 233, 239, 240, 244], "2": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 18, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 48, 51, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 71, 73, 79, 80, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 105, 108, 109, 114, 115, 117, 119, 123, 124, 125, 126, 127, 128, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 175, 176, 178, 181, 182, 183, 184, 188, 189, 190, 193, 194, 203, 204, 211, 212, 213, 214, 218, 219, 220, 222, 223, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 246, 248], "15": [1, 11, 35, 43, 44, 52, 53, 55, 56, 58, 73, 79, 83, 85, 86, 87, 89, 90, 93, 95, 96, 97, 99, 101, 103, 104, 105, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 159, 162, 163, 167, 171, 173, 174, 175, 178, 179, 182, 184, 187, 188, 190, 191, 192, 197, 201, 204, 208, 210, 212, 214, 216, 217, 218, 225, 233, 236, 248, 250], "3": [1, 2, 4, 6, 11, 16, 18, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 51, 54, 55, 56, 57, 58, 61, 64, 71, 73, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 203, 204, 206, 211, 212, 213, 214, 219, 220, 222, 223, 225, 227, 228, 231, 233, 234, 235, 236, 237, 239, 240, 241, 245, 246, 248], "7": [1, 2, 4, 11, 18, 28, 33, 36, 39, 43, 44, 48, 52, 53, 54, 55, 57, 58, 64, 66, 70, 71, 73, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 197, 198, 199, 202, 204, 206, 210, 213, 214, 219, 220, 223, 225, 229, 234, 235, 236, 239, 240, 241, 246, 248], "ln": [1, 43, 52, 53, 58, 63, 64, 85, 87, 89, 90, 102, 110, 115, 116, 162, 172, 182, 216, 225], "8": [1, 2, 28, 29, 33, 35, 42, 43, 44, 48, 52, 53, 54, 55, 56, 57, 58, 64, 71, 73, 76, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 187, 188, 189, 190, 197, 198, 204, 206, 210, 214, 215, 217, 218, 219, 220, 223, 225, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 246, 248], "nombreux": [1, 32, 52, 53, 58, 61, 63, 64, 71, 72, 76, 79, 80, 87, 150, 156, 175, 197, 207, 225, 233, 239, 241, 243], "non": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 19, 23, 32, 33, 34, 35, 37, 38, 40, 41, 48, 52, 53, 55, 58, 59, 60, 61, 63, 64, 71, 73, 76, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 101, 102, 103, 104, 105, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 134, 135, 136, 137, 140, 142, 143, 145, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 170, 176, 179, 180, 181, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 204, 207, 208, 216, 219, 220, 223, 225, 227, 228, 229, 231, 233, 234, 235, 241, 243, 244, 246, 248], "d\u00e9compos": [1, 2, 43, 54, 58, 61, 72, 92, 112, 138, 156, 197, 202, 235], "comm": [1, 4, 14, 16, 17, 21, 32, 35, 40, 41, 43, 48, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 71, 72, 73, 75, 76, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 96, 97, 101, 102, 103, 104, 105, 106, 110, 112, 113, 114, 117, 118, 119, 120, 122, 125, 134, 135, 137, 138, 139, 140, 142, 145, 152, 153, 154, 155, 156, 157, 158, 160, 164, 165, 166, 167, 169, 170, 172, 174, 175, 176, 177, 179, 180, 183, 187, 190, 191, 197, 199, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 216, 217, 218, 223, 225, 227, 228, 229, 231, 233, 234, 236, 237, 239, 240, 241, 243, 244, 246, 248], "suit": [1, 2, 14, 20, 35, 36, 43, 52, 53, 56, 58, 61, 63, 64, 71, 72, 76, 79, 81, 83, 84, 86, 88, 91, 96, 97, 104, 105, 106, 112, 114, 115, 116, 117, 118, 122, 126, 134, 137, 138, 148, 160, 162, 166, 168, 175, 176, 177, 180, 183, 187, 191, 201, 204, 207, 216, 218, 225, 228, 229, 231, 233, 235, 237, 239, 240, 241, 243, 244, 246, 248], "alpha": [1, 7, 9, 12, 29, 52, 56, 58, 61, 72, 80, 96, 113, 117, 118, 119, 120, 134, 137, 140, 143, 192, 211, 212], "bet": [1, 9, 12, 52, 56, 58, 64, 72, 87, 88, 114, 137, 243], "1": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 23, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 51, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 67, 70, 71, 73, 75, 76, 79, 80, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 98, 99, 108, 116, 118, 120, 124, 128, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 203, 204, 210, 211, 212, 213, 214, 218, 219, 220, 222, 223, 227, 228, 229, 231, 233, 234, 235, 236, 237, 240, 241, 244, 246, 248], "chaqu": [1, 2, 4, 7, 10, 14, 22, 29, 32, 34, 35, 36, 40, 43, 48, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 79, 80, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 100, 101, 103, 104, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 127, 133, 134, 135, 138, 139, 140, 142, 145, 153, 155, 156, 162, 164, 166, 167, 169, 170, 174, 175, 176, 177, 183, 184, 185, 186, 187, 191, 192, 193, 197, 201, 202, 204, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 223, 225, 227, 228, 229, 231, 233, 234, 235, 237, 239, 240, 241, 243, 246, 248], "term": [1, 35, 58, 63, 71, 72, 85, 117, 118, 126, 159, 182, 190, 225, 239, 240, 241, 244, 246, 248], "correspond": [1, 4, 14, 52, 53, 58, 64, 71, 72, 73, 79, 80, 85, 87, 101, 104, 105, 110, 112, 113, 115, 116, 134, 138, 153, 177, 183, 191, 192, 207, 215, 217, 219, 225, 228, 229, 233, 236, 237, 239, 240, 241, 243, 248], "in": [0, 1, 2, 3, 4, 10, 11, 22, 26, 29, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 48, 52, 53, 54, 56, 57, 58, 60, 61, 63, 64, 66, 67, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 231, 233, 234, 235, 236, 239, 240, 241, 243, 245, 246, 248], "mathbb": [1, 29, 33, 52, 79, 113, 114, 115, 116, 117, 118, 134, 140, 168, 185, 186, 193, 204], "N": [1, 43, 44, 46, 52, 53, 55, 57, 58, 60, 61, 64, 72, 79, 80, 83, 86, 87, 88, 89, 96, 103, 104, 110, 117, 118, 119, 120, 121, 125, 133, 134, 138, 161, 162, 163, 168, 180, 183, 184, 191, 192, 193, 195, 196, 202, 204, 208, 209, 216, 219, 223, 233, 239], "probem": 1, "combinatoir": [1, 60, 191], "r\u00e9sum": [1, 2, 53, 58, 63, 64, 71, 72, 112, 225, 228, 235, 239, 240, 246, 248], "quadrat": [1, 58, 63, 64, 114, 134, 137, 192], "cel": [1, 2, 4, 6, 10, 14, 16, 24, 29, 32, 34, 35, 36, 40, 41, 42, 43, 44, 48, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 109, 110, 112, 113, 115, 116, 117, 118, 122, 123, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 162, 163, 165, 167, 170, 171, 174, 175, 178, 179, 182, 183, 184, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 225, 227, 228, 229, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 248], "d\u00fb": [1, 58, 102, 137, 140, 147], "programm": [1, 2, 4, 19, 22, 23, 32, 35, 37, 40, 42, 44, 45, 52, 53, 58, 63, 68, 73, 74, 76, 83, 85, 87, 96, 102, 103, 104, 105, 106, 107, 110, 113, 115, 116, 123, 132, 160, 161, 163, 174, 175, 176, 179, 181, 183, 184, 197, 201, 207, 208, 209, 210, 213, 216, 217, 218, 219, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 244, 246, 248, 250], "dynam": [1, 19, 23, 63, 85, 87, 96, 219, 225, 240], "dan": [1, 2, 4, 7, 9, 10, 14, 18, 19, 21, 22, 23, 29, 32, 35, 36, 40, 41, 42, 43, 44, 48, 52, 53, 55, 58, 60, 61, 62, 64, 66, 72, 73, 74, 75, 76, 79, 80, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 128, 133, 134, 135, 136, 138, 140, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 196, 197, 199, 202, 204, 205, 206, 209, 210, 211, 212, 213, 217, 218, 219, 223, 225, 227, 228, 229, 231, 232, 234, 235, 236, 237, 239, 240, 243, 244, 246, 248], "plupart": [1, 2, 4, 14, 53, 58, 63, 73, 97, 103, 114, 148, 167, 170, 177, 197, 199, 204, 213, 216, 217, 225, 228, 229, 231, 233, 235, 240, 241, 243, 246], "cas": [1, 2, 4, 32, 35, 36, 40, 42, 43, 44, 52, 53, 55, 58, 60, 61, 63, 64, 71, 72, 73, 76, 83, 85, 86, 87, 90, 93, 95, 96, 97, 98, 101, 104, 107, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 134, 135, 136, 137, 142, 145, 146, 152, 153, 156, 157, 162, 164, 168, 175, 176, 177, 179, 181, 182, 185, 186, 187, 189, 191, 192, 195, 196, 197, 199, 201, 202, 204, 205, 206, 207, 208, 210, 216, 217, 219, 225, 228, 229, 235, 239, 241, 242, 244, 246, 248], "obtient": [1, 6, 51, 52, 58, 61, 81, 110, 114, 115, 116, 117, 118, 122, 137, 147, 153, 202, 216, 225, 236, 239], "avoir": [1, 2, 14, 32, 40, 53, 58, 61, 63, 64, 66, 71, 72, 73, 76, 80, 84, 87, 96, 97, 101, 104, 112, 117, 121, 127, 137, 162, 164, 166, 167, 191, 199, 201, 202, 208, 209, 213, 215, 216, 225, 228, 229, 231, 233, 235, 239, 240, 241, 243, 244, 246], "transform": [1, 2, 4, 6, 48, 51, 55, 61, 64, 73, 86, 87, 88, 89, 93, 96, 101, 103, 112, 113, 114, 116, 139, 152, 153, 166, 175, 179, 190, 206, 222, 235, 237, 239, 241], "form": [1, 2, 8, 14, 32, 35, 40, 52, 53, 54, 56, 58, 60, 61, 63, 64, 71, 76, 84, 100, 101, 103, 108, 109, 119, 120, 123, 167, 170, 179, 191, 192, 193, 195, 196, 197, 207, 208, 225, 228, 231, 233, 239, 240, 241, 243, 244, 246, 248], "r\u00e9current": [1, 35, 58, 61, 81, 85, 86, 90, 110, 122, 126, 167, 191, 225, 233], "\u00e9crit": [1, 4, 35, 43, 44, 48, 52, 60, 63, 64, 66, 71, 73, 75, 76, 95, 99, 114, 115, 116, 117, 126, 155, 156, 160, 163, 166, 170, 174, 181, 199, 206, 207, 209, 213, 216, 217, 225, 228, 231, 233, 234, 237, 239, 240, 241, 243, 244, 246, 248], "faut": [1, 2, 4, 9, 14, 32, 35, 37, 40, 41, 42, 43, 48, 52, 53, 55, 56, 58, 61, 62, 63, 64, 66, 71, 72, 73, 75, 76, 79, 84, 85, 87, 88, 89, 90, 92, 93, 95, 96, 97, 101, 103, 104, 106, 110, 112, 115, 116, 117, 118, 121, 123, 125, 134, 136, 137, 139, 142, 144, 152, 153, 156, 157, 158, 160, 161, 164, 165, 166, 169, 170, 174, 175, 177, 178, 179, 181, 182, 185, 186, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 225, 228, 231, 233, 234, 235, 237, 239, 240, 241, 243, 244, 246, 248], "solut": [1, 9, 22, 32, 36, 37, 40, 43, 44, 52, 53, 56, 58, 60, 61, 63, 66, 71, 88, 91, 94, 95, 99, 107, 110, 111, 112, 114, 117, 119, 120, 122, 123, 126, 128, 134, 136, 137, 163, 165, 169, 170, 191, 192, 198, 199, 225, 228, 233, 239, 240, 241, 244, 246], "\u00e9l\u00e9ment": [1, 2, 4, 6, 10, 15, 19, 23, 35, 41, 43, 48, 51, 53, 55, 62, 63, 64, 66, 71, 72, 73, 80, 85, 86, 89, 99, 101, 103, 104, 105, 107, 110, 114, 115, 116, 128, 140, 147, 151, 154, 155, 156, 170, 172, 174, 177, 178, 179, 181, 182, 190, 198, 202, 206, 207, 209, 216, 217, 218, 225, 228, 229, 233, 234, 235, 240, 241, 243, 244, 246, 248], "sach": [1, 10, 32, 58, 64, 96, 202, 225, 248], "conna\u00eet": [1, 14, 54, 63, 64, 76, 87, 90, 119, 120, 214, 225, 239, 243], "0": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 22, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 231, 233, 234, 235, 236, 239, 240, 241, 243, 244, 246, 248, 250], "dichotom": [1, 19, 23, 90, 92, 97, 115, 117, 118, 132, 166, 202, 223, 239], "coup": [1, 2, 53, 58, 72, 82, 85, 93, 97, 112, 115, 116, 139, 181, 187, 188, 199, 206, 208, 233, 235, 240], "deux": [1, 4, 6, 7, 9, 10, 14, 17, 18, 20, 22, 24, 29, 32, 35, 38, 40, 41, 42, 43, 44, 48, 50, 52, 53, 55, 56, 58, 60, 61, 62, 63, 71, 72, 73, 76, 79, 80, 81, 84, 85, 86, 87, 90, 93, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 128, 133, 135, 136, 137, 139, 140, 141, 143, 145, 147, 148, 150, 151, 153, 156, 157, 158, 159, 161, 162, 164, 165, 167, 168, 172, 175, 177, 180, 181, 182, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 227, 228, 231, 233, 236, 237, 239, 240, 241, 243, 244, 245, 246, 248], "iter": [1, 2, 5, 7, 9, 10, 11, 12, 20, 24, 35, 44, 47, 52, 60, 61, 71, 85, 86, 88, 90, 91, 92, 93, 97, 103, 106, 115, 116, 119, 120, 132, 133, 135, 140, 141, 142, 143, 156, 157, 176, 191, 192, 197, 204, 206, 210, 217, 218, 220, 226, 235, 240, 244, 246], "tabl": [1, 14, 15, 53, 74, 96, 100, 101, 110, 119, 120, 132, 163, 167, 178, 180, 201, 202, 207, 216, 225, 233, 239, 240, 243], "hashag": [1, 15, 79, 132, 201, 202], "D\u00e8s": [1, 2, 73], "sort": [1, 2, 4, 9, 11, 14, 33, 40, 52, 55, 56, 58, 60, 61, 63, 64, 70, 71, 73, 76, 80, 83, 85, 87, 88, 90, 93, 96, 97, 102, 104, 110, 112, 113, 115, 116, 119, 120, 121, 128, 134, 135, 137, 140, 145, 149, 154, 155, 158, 162, 168, 175, 182, 188, 191, 192, 193, 197, 201, 204, 208, 210, 216, 218, 219, 223, 225, 228, 231, 233, 235, 237, 239, 240, 241, 243, 246, 249], "puissanc": [1, 19, 23, 71, 92, 110, 228, 239, 240, 246], "entier": [1, 4, 6, 35, 40, 52, 53, 55, 56, 61, 64, 66, 71, 73, 76, 79, 80, 84, 85, 89, 90, 102, 104, 110, 115, 116, 155, 162, 164, 177, 194, 195, 196, 201, 209, 210, 216, 225, 227, 228, 233, 234, 236, 238, 239, 241], "attendr": [1, 34, 58, 61, 72, 233, 246], "trivial": [1, 81], "tel": [1, 2, 14, 19, 23, 41, 48, 53, 58, 60, 61, 63, 64, 71, 80, 85, 86, 88, 97, 101, 112, 113, 114, 115, 116, 134, 137, 156, 162, 168, 169, 170, 182, 183, 184, 185, 186, 187, 191, 192, 193, 195, 196, 199, 201, 204, 207, 208, 210, 213, 225, 233, 235, 239, 240, 241, 243, 245, 248], "strassen": [1, 225], "multipl": [1, 6, 7, 9, 14, 43, 51, 52, 58, 61, 63, 66, 71, 87, 98, 102, 104, 110, 112, 113, 168, 204, 216, 227, 239], "matric": [1, 6, 15, 29, 41, 43, 51, 52, 53, 56, 58, 72, 73, 75, 84, 87, 101, 103, 108, 109, 110, 113, 114, 121, 128, 137, 138, 140, 144, 145, 164, 170, 175, 176, 180, 187, 191, 192, 206, 207, 208, 222, 225, 238, 241], "807": [1, 225], "celui": [1, 2, 4, 29, 32, 34, 36, 40, 41, 43, 44, 53, 58, 60, 61, 63, 64, 71, 73, 76, 96, 97, 101, 112, 114, 115, 116, 136, 143, 145, 146, 156, 157, 178, 179, 191, 192, 197, 207, 208, 213, 216, 217, 219, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 248], "marco": 1, "bodrato": 1, "a": [0, 1, 2, 6, 8, 9, 10, 11, 14, 18, 20, 22, 24, 29, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 48, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 71, 72, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 164, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 223, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247], "lik": [1, 11, 33], "matrix": [1, 28, 32, 55, 93, 101, 142, 153, 183, 184, 188], "suited": 1, "for": [0, 1, 2, 4, 11, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 52, 53, 54, 56, 57, 58, 60, 66, 67, 68, 69, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 231, 233, 234, 235, 236, 240, 241, 243, 246, 248, 250], "squaring": 1, "and": [1, 4, 10, 11, 22, 29, 32, 33, 35, 40, 41, 48, 53, 58, 70, 71, 73, 77, 79, 80, 81, 82, 86, 87, 89, 90, 97, 101, 104, 107, 108, 109, 110, 112, 115, 116, 127, 134, 135, 138, 142, 148, 150, 152, 154, 159, 162, 164, 165, 168, 172, 173, 175, 181, 195, 196, 197, 198, 202, 207, 214, 220, 225, 229, 233, 239, 240, 241, 243, 244, 246], "high": 1, "pow": [1, 178], "comput": [1, 7, 175, 189], "minimal": [1, 10, 52, 58, 63, 85, 97, 110, 123, 154], "tri": [1, 11, 12, 13, 19, 23, 43, 53, 55, 58, 61, 63, 71, 76, 96, 97, 101, 102, 110, 114, 117, 118, 132, 134, 147, 152, 166, 172, 177, 191, 192, 201, 202, 217, 218, 219, 223, 231, 239, 240], "g\u00e9ner": [1, 29, 42, 51, 53, 54, 55, 56, 71, 79, 103, 113, 114, 115, 116, 117, 118, 121, 162, 167, 183, 184, 187, 206, 207, 213, 225, 228, 229, 233, 240, 243, 244, 246], "dir": [1, 2, 4, 14, 22, 29, 35, 41, 43, 58, 60, 62, 63, 64, 71, 73, 76, 79, 85, 89, 90, 96, 97, 103, 106, 107, 112, 117, 118, 127, 133, 135, 139, 140, 143, 148, 149, 158, 168, 169, 179, 187, 188, 189, 190, 192, 197, 207, 208, 209, 213, 216, 217, 218, 219, 225, 229, 233, 237, 239, 240, 241, 243, 246, 248], "san": [1, 2, 14, 22, 35, 37, 40, 43, 48, 52, 55, 56, 57, 58, 62, 63, 64, 71, 72, 76, 79, 83, 86, 90, 91, 93, 95, 98, 101, 102, 103, 107, 110, 117, 118, 121, 122, 125, 128, 136, 138, 139, 144, 150, 154, 155, 163, 164, 179, 180, 181, 190, 191, 199, 201, 208, 209, 213, 225, 228, 229, 231, 233, 235, 239, 240, 242, 243, 244, 245, 246, 248], "hypothes": [1, 61, 64, 100, 101, 191], "don": [1, 2, 4, 5, 7, 15, 19, 22, 23, 28, 29, 32, 36, 40, 41, 42, 43, 44, 47, 49, 50, 52, 54, 58, 62, 63, 68, 70, 72, 73, 74, 76, 79, 85, 86, 88, 89, 96, 100, 101, 102, 106, 108, 110, 112, 113, 118, 119, 120, 122, 126, 131, 133, 134, 136, 138, 139, 145, 147, 150, 152, 153, 156, 160, 165, 170, 175, 182, 187, 189, 190, 197, 201, 202, 207, 208, 209, 214, 215, 216, 217, 219, 223, 225, 227, 228, 229, 233, 235, 236, 239, 240, 241, 242, 243, 246, 248], "En": [1, 2, 20, 29, 34, 43, 48, 51, 52, 53, 54, 58, 60, 61, 63, 71, 72, 75, 76, 79, 85, 86, 92, 95, 96, 101, 105, 107, 110, 112, 114, 158, 160, 162, 167, 169, 170, 176, 187, 191, 192, 193, 198, 204, 208, 209, 216, 217, 223, 225, 228, 229, 231, 233, 235, 239, 240, 241, 243, 246], "revanch": [1, 61, 71, 86, 121, 170, 209, 225, 228, 233, 239, 241, 246], "o\u00f9": [1, 2, 4, 9, 12, 13, 14, 17, 29, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 71, 72, 73, 76, 80, 81, 83, 84, 85, 86, 89, 90, 97, 103, 105, 106, 112, 114, 115, 116, 117, 118, 123, 134, 135, 137, 138, 140, 142, 145, 154, 155, 164, 166, 167, 177, 182, 187, 189, 190, 191, 193, 194, 197, 202, 204, 207, 208, 209, 216, 217, 218, 219, 223, 225, 228, 231, 233, 235, 237, 239, 240, 241, 243, 244, 246, 248], "issu": [1, 33, 53, 56, 58, 64, 72, 82, 86, 101, 112, 121, 134, 152, 170, 191, 229, 241], "ensembl": [1, 2, 7, 8, 9, 10, 14, 22, 29, 32, 40, 41, 52, 53, 54, 58, 60, 61, 63, 64, 71, 72, 76, 79, 80, 82, 85, 86, 87, 89, 90, 91, 97, 101, 103, 105, 113, 114, 115, 116, 117, 118, 119, 120, 123, 132, 134, 135, 136, 137, 138, 142, 144, 145, 152, 154, 155, 156, 162, 167, 172, 179, 183, 184, 185, 186, 187, 188, 191, 193, 194, 197, 198, 201, 204, 207, 210, 215, 225, 228, 229, 233, 234, 235, 237, 239, 241, 243, 244], "fin": [1, 2, 4, 10, 14, 20, 24, 35, 42, 52, 53, 54, 58, 62, 63, 71, 72, 73, 76, 79, 83, 84, 89, 90, 91, 95, 97, 106, 110, 112, 117, 118, 138, 147, 156, 157, 161, 162, 163, 168, 169, 170, 176, 177, 209, 210, 216, 217, 218, 225, 233, 235, 240, 241, 243, 246, 248], "cardinal": [1, 61, 79], "meilleur": [1, 2, 29, 44, 53, 58, 61, 63, 64, 72, 79, 81, 83, 84, 85, 91, 94, 95, 97, 101, 110, 112, 113, 117, 118, 119, 120, 123, 133, 134, 137, 143, 147, 153, 159, 168, 191, 192, 208, 213, 216, 225, 240, 241], "revient": [1, 14, 32, 35, 36, 58, 72, 97, 102, 104, 115, 154, 156, 165, 170, 182, 191, 202, 225, 240, 241, 244, 246], "histogramm": [1, 29, 53, 58, 72, 113, 115, 116, 132, 148, 182], "inf\u00e9rieur": [1, 2, 34, 35, 52, 58, 60, 72, 80, 86, 90, 97, 104, 112, 113, 114, 135, 140, 152, 153, 177, 204, 217, 235, 239, 240], "inf": [1, 52, 90, 101, 134, 140, 148, 150], "blog": [1, 21, 25, 58], "fast": [1, 33, 53, 245], "interesect": 1, "of": [1, 4, 6, 7, 10, 11, 13, 22, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 51, 52, 53, 54, 55, 56, 58, 60, 61, 70, 73, 77, 85, 87, 93, 95, 101, 104, 106, 107, 112, 115, 116, 118, 122, 125, 134, 137, 140, 142, 143, 149, 153, 163, 167, 170, 171, 172, 174, 175, 176, 182, 187, 189, 190, 195, 196, 198, 202, 204, 214, 216, 225, 229, 233, 235, 239, 243, 244], "sorted": [1, 2, 86, 96, 97, 114, 139, 142, 152, 162, 174, 182, 207, 214, 216, 217, 223, 235, 239], "list": [1, 2, 6, 7, 8, 9, 10, 11, 14, 19, 23, 32, 36, 40, 41, 44, 52, 53, 54, 56, 58, 61, 62, 63, 66, 69, 79, 80, 85, 86, 89, 90, 91, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 119, 122, 126, 132, 133, 136, 140, 143, 144, 149, 151, 152, 154, 155, 156, 162, 164, 165, 170, 171, 172, 174, 176, 177, 178, 182, 188, 191, 192, 193, 195, 196, 197, 198, 202, 204, 206, 207, 208, 214, 216, 218, 219, 223, 228, 229, 234, 235, 236, 244, 246, 248], "using": [1, 11, 32, 56, 246], "sse": 1, "instruct": [1, 2, 4, 16, 48, 53, 56, 67, 71, 73, 76, 85, 102, 104, 105, 115, 116, 158, 164, 175, 179, 183, 201, 207, 209, 210, 215, 216, 217, 225, 231, 233, 235, 237, 240, 241, 243, 246], "simpl": [1, 2, 4, 10, 14, 22, 32, 36, 37, 43, 53, 55, 56, 58, 60, 61, 63, 64, 71, 72, 73, 76, 79, 81, 83, 84, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 110, 112, 113, 117, 118, 120, 133, 134, 136, 137, 139, 142, 146, 153, 156, 167, 170, 172, 176, 177, 179, 187, 189, 190, 191, 197, 198, 201, 204, 205, 206, 207, 208, 209, 213, 215, 216, 219, 228, 231, 233, 235, 240, 241, 243, 244, 245, 248], "intersect": [1, 10, 48, 61, 193, 240], "montr": [1, 29, 43, 52, 54, 58, 61, 63, 64, 71, 72, 81, 83, 85, 89, 96, 101, 114, 117, 118, 134, 135, 137, 145, 160, 176, 183, 187, 192, 195, 196, 197, 199, 201, 208, 216, 218, 225, 228, 233, 234, 237, 239, 240, 241, 243, 246, 248], "comment": [1, 14, 19, 22, 23, 32, 40, 41, 48, 52, 53, 54, 56, 58, 63, 64, 66, 79, 84, 86, 87, 89, 93, 96, 97, 100, 101, 107, 115, 116, 118, 122, 140, 143, 147, 148, 149, 164, 167, 168, 170, 172, 175, 180, 189, 197, 198, 199, 201, 205, 206, 213, 216, 225, 229, 233, 237, 239, 240, 241, 243, 244, 246, 248], "optimis": [1, 20, 21, 24, 42, 50, 51, 55, 60, 61, 64, 79, 90, 94, 95, 96, 114, 125, 126, 134, 136, 170, 174, 175, 176, 182, 191, 197, 198, 221, 224, 234, 240, 242], "impl\u00e9ment": [1, 2, 4, 6, 7, 10, 26, 31, 35, 44, 45, 52, 55, 56, 61, 63, 64, 73, 76, 83, 90, 93, 97, 100, 101, 110, 111, 115, 116, 117, 118, 129, 133, 134, 142, 147, 152, 156, 157, 161, 162, 166, 168, 171, 173, 176, 177, 179, 182, 187, 188, 199, 214, 215, 216, 219, 223, 225, 231, 235, 239, 240, 243, 245, 246, 250], "introduis": 1, "notion": [1, 4, 14, 19, 22, 23, 58, 62, 63, 73, 79, 81, 85, 96, 114, 240], "partit": [1, 70, 240], "peu": [1, 4, 41, 48, 52, 53, 56, 58, 60, 61, 63, 64, 71, 72, 73, 75, 76, 80, 83, 84, 86, 88, 89, 90, 93, 97, 101, 104, 105, 107, 110, 113, 119, 120, 121, 122, 133, 136, 142, 144, 145, 147, 149, 150, 151, 152, 153, 156, 158, 162, 163, 166, 170, 172, 174, 177, 179, 189, 190, 197, 201, 203, 208, 214, 223, 225, 228, 231, 233, 239, 240, 241, 243, 244, 246], "parall\u00e9lis": [1, 142, 246, 249], "object": [1, 4, 11, 28, 29, 32, 33, 35, 40, 41, 44, 53, 56, 58, 62, 64, 71, 72, 73, 87, 96, 97, 101, 103, 104, 106, 124, 134, 154, 155, 156, 157, 170, 174, 175, 176, 189, 191, 192, 197, 201, 213, 215, 216, 225, 233, 239, 240, 243, 244, 246, 248], "tous": [1, 2, 4, 7, 10, 32, 34, 35, 36, 40, 43, 44, 52, 53, 55, 60, 61, 63, 64, 71, 73, 74, 76, 79, 80, 83, 85, 86, 88, 90, 96, 97, 103, 110, 112, 115, 116, 122, 123, 127, 128, 134, 136, 137, 138, 139, 145, 146, 148, 152, 155, 156, 157, 161, 164, 174, 181, 191, 193, 194, 201, 202, 207, 208, 218, 225, 228, 233, 235, 236, 239, 240, 241, 243, 244, 246, 248], "lesquel": [1, 35, 52, 53, 58, 61, 64, 83, 86, 97, 152, 182, 195, 196, 225, 239, 241], "con\u00e7us": [1, 243], "distanc": [1, 7, 9, 10, 12, 13, 15, 19, 20, 23, 24, 44, 55, 58, 60, 63, 64, 88, 97, 98, 110, 117, 118, 119, 120, 128, 132, 140, 148, 187, 188, 190, 191, 192, 194, 195, 196, 221, 224], "\u00e9dit": [1, 15, 19, 20, 23, 24, 63, 128, 194, 221, 224], "sert": [1, 2, 14, 36, 43, 48, 50, 52, 56, 58, 71, 72, 88, 97, 102, 123, 125, 137, 156, 173, 180, 197, 199, 201, 202, 204, 208, 209, 215, 225, 227, 228, 233, 239, 240, 241, 246, 247], "entre": [1, 6, 8, 9, 10, 14, 20, 24, 29, 40, 50, 52, 56, 60, 61, 63, 64, 79, 80, 86, 88, 89, 90, 91, 96, 97, 98, 100, 101, 107, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 128, 133, 136, 137, 140, 143, 148, 150, 151, 152, 155, 158, 163, 164, 172, 179, 187, 188, 190, 191, 192, 195, 196, 198, 201, 204, 205, 207, 208, 209, 210, 217, 225, 228, 233, 235, 236, 239, 240, 241, 243, 244, 246, 248], "utilis": [1, 2, 4, 6, 8, 10, 14, 20, 21, 25, 29, 32, 36, 37, 40, 41, 43, 48, 52, 53, 55, 56, 58, 60, 61, 63, 64, 68, 72, 73, 76, 79, 80, 83, 87, 93, 96, 97, 101, 102, 103, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 122, 123, 126, 128, 135, 136, 137, 138, 139, 140, 147, 149, 150, 151, 153, 154, 155, 157, 162, 166, 167, 170, 172, 175, 176, 178, 179, 181, 182, 183, 184, 190, 191, 194, 197, 198, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 223, 225, 226, 229, 230, 231, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 248], "trouv": [1, 2, 4, 14, 18, 29, 32, 37, 43, 44, 52, 55, 56, 58, 62, 63, 64, 66, 71, 73, 76, 85, 88, 90, 91, 94, 96, 97, 98, 104, 112, 113, 114, 115, 116, 117, 118, 119, 120, 136, 137, 141, 162, 163, 169, 177, 190, 192, 193, 194, 195, 201, 211, 212, 216, 217, 218, 225, 233, 235, 236, 239, 240, 241, 243, 246, 248], "proch": [1, 3, 9, 10, 41, 58, 60, 61, 63, 72, 79, 91, 101, 112, 113, 119, 120, 128, 131, 136, 138, 144, 147, 149, 158, 183, 184, 191, 208, 216, 225, 233, 234, 240, 241, 244], "autr": [1, 2, 4, 14, 15, 16, 18, 20, 22, 24, 26, 29, 31, 32, 40, 41, 42, 43, 44, 45, 48, 50, 52, 53, 55, 56, 60, 61, 63, 66, 68, 72, 73, 76, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 110, 113, 114, 116, 117, 118, 119, 120, 122, 125, 126, 128, 132, 136, 137, 139, 140, 142, 144, 147, 148, 150, 152, 153, 154, 156, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 176, 182, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 209, 210, 213, 214, 216, 217, 218, 219, 220, 227, 228, 229, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 250], "condit": [1, 35, 52, 53, 56, 61, 71, 72, 77, 79, 101, 104, 105, 134, 148, 153, 172, 191, 201, 204, 217, 225, 233, 239, 240, 241, 243, 246], "sim": [1, 35, 52, 58, 64, 72, 85, 87, 88, 100, 101, 126, 134, 138, 185, 186, 202, 204, 218, 225], "4": [1, 2, 4, 6, 9, 11, 12, 26, 28, 29, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51, 54, 55, 56, 57, 64, 71, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 190, 193, 194, 203, 204, 205, 206, 209, 210, 211, 212, 214, 218, 219, 221, 222, 223, 224, 225, 228, 231, 233, 234, 235, 236, 239, 240, 241, 243, 245, 246, 248, 250], "Que": [1, 43, 52, 53, 89, 104, 105, 106, 107, 114, 169, 176, 183, 189, 191, 207, 213, 217], "quand": [1, 2, 14, 36, 52, 53, 54, 58, 62, 63, 71, 72, 76, 83, 89, 93, 112, 113, 121, 123, 134, 140, 155, 167, 168, 176, 181, 187, 188, 189, 193, 208, 214, 216, 218, 228, 235, 240, 246], "milliard": [1, 79], "Ce": [1, 2, 4, 14, 19, 22, 23, 29, 34, 35, 43, 44, 48, 52, 55, 56, 58, 60, 61, 63, 64, 71, 72, 73, 75, 76, 79, 85, 87, 89, 91, 94, 95, 96, 97, 101, 102, 105, 110, 112, 113, 117, 118, 121, 122, 123, 125, 128, 134, 135, 137, 138, 140, 148, 153, 154, 155, 156, 157, 162, 163, 168, 179, 183, 190, 191, 192, 194, 201, 202, 204, 207, 208, 213, 214, 216, 217, 219, 225, 228, 229, 233, 234, 235, 236, 237, 239, 240, 241, 246, 248], "facil": [1, 22, 32, 35, 40, 41, 44, 53, 56, 58, 60, 62, 63, 64, 66, 71, 72, 75, 76, 79, 86, 95, 97, 110, 123, 134, 152, 163, 166, 170, 171, 172, 174, 175, 182, 191, 192, 225, 233, 237, 239, 240, 241, 243, 244, 246, 248], "si": [1, 2, 4, 6, 7, 8, 9, 10, 14, 19, 22, 29, 34, 35, 36, 40, 41, 42, 43, 44, 48, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 79, 80, 81, 82, 85, 86, 87, 89, 90, 92, 93, 95, 97, 98, 100, 101, 102, 104, 105, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 134, 135, 137, 139, 140, 143, 145, 147, 148, 150, 151, 153, 155, 156, 158, 162, 164, 168, 170, 175, 179, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 216, 217, 218, 219, 225, 228, 229, 231, 233, 235, 237, 239, 240, 241, 243, 244, 246, 248], "repr\u00e9sent": [1, 2, 6, 20, 24, 29, 35, 40, 43, 52, 53, 55, 60, 61, 63, 64, 73, 84, 86, 87, 89, 93, 96, 97, 103, 108, 109, 119, 120, 126, 127, 132, 135, 137, 138, 139, 144, 145, 150, 151, 164, 165, 170, 172, 179, 183, 184, 192, 202, 208, 214, 215, 216, 225, 227, 233, 235, 237, 239, 240, 241, 244], "vecteur": [1, 9, 10, 55, 58, 60, 61, 63, 71, 72, 80, 113, 114, 117, 118, 119, 120, 138, 162, 176, 179, 183, 184, 187, 188, 190, 225, 240], "voir": [1, 2, 4, 13, 16, 19, 20, 23, 24, 29, 32, 35, 41, 44, 48, 52, 53, 58, 60, 63, 64, 71, 73, 76, 79, 84, 89, 90, 91, 96, 97, 98, 113, 115, 116, 117, 118, 136, 137, 138, 150, 152, 155, 156, 159, 162, 166, 168, 179, 183, 184, 187, 188, 194, 197, 202, 205, 207, 208, 209, 215, 216, 217, 220, 225, 231, 233, 235, 239, 240, 241, 244, 246], "word2vec": 1, "auto": [1, 25, 119, 120, 134, 136], "encoder": [1, 241], "veut": [1, 2, 4, 14, 22, 41, 48, 52, 53, 56, 58, 63, 66, 71, 73, 75, 81, 83, 85, 86, 89, 97, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 136, 138, 143, 156, 158, 159, 161, 169, 179, 181, 183, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 204, 206, 208, 209, 213, 214, 215, 217, 218, 228, 235, 240, 243, 246, 248], "compar": [1, 2, 22, 33, 34, 35, 52, 53, 54, 55, 58, 61, 63, 64, 71, 76, 83, 87, 89, 97, 100, 101, 112, 117, 118, 145, 146, 152, 153, 158, 159, 161, 165, 174, 177, 180, 182, 183, 190, 204, 213, 216, 217, 225, 228, 233, 235, 239, 240, 241], "model": [1, 3, 14, 22, 29, 52, 56, 58, 60, 63, 64, 72, 86, 90, 100, 101, 112, 113, 128, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 189, 190, 240], "ranking": [1, 22], "pouvoir": [1, 4, 7, 58, 63, 64, 73, 79, 83, 90, 96, 123, 142, 157, 170, 174, 191, 197, 199, 206, 208, 209, 217, 225, 233, 239, 240, 241, 244, 246], "visuel": [1, 4, 44, 58, 63, 73, 89, 233], "r\u00e9sultat": [1, 2, 7, 14, 22, 29, 35, 36, 38, 40, 43, 44, 52, 53, 55, 56, 61, 62, 63, 64, 66, 71, 72, 76, 81, 83, 84, 86, 89, 90, 95, 104, 105, 108, 109, 110, 113, 115, 116, 117, 121, 134, 135, 137, 143, 145, 146, 147, 150, 152, 153, 154, 155, 162, 166, 168, 170, 174, 175, 177, 181, 183, 184, 185, 186, 187, 188, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 215, 216, 217, 218, 223, 225, 228, 231, 235, 239, 240, 241, 243, 244, 246, 248], "Quel": [1, 43, 62, 103, 115, 116, 126, 187, 188, 207], "mieux": [1, 2, 14, 15, 37, 43, 44, 54, 58, 62, 63, 66, 71, 87, 90, 93, 95, 96, 101, 113, 115, 116, 118, 125, 133, 134, 136, 137, 139, 142, 144, 145, 151, 153, 155, 163, 167, 170, 172, 174, 207, 209, 219, 225, 233, 235, 243, 244, 246], "affich": [1, 2, 4, 7, 11, 43, 52, 53, 58, 71, 72, 73, 76, 83, 85, 86, 97, 104, 105, 113, 122, 144, 155, 168, 197, 207, 208, 209, 216, 217, 218, 225, 228, 231, 233, 235, 236, 237, 239, 240, 241, 243, 246, 248], "moteur": [1, 53, 65, 66, 113, 207, 233, 241], "recherch": [1, 5, 10, 19, 20, 22, 23, 40, 53, 58, 60, 62, 64, 65, 66, 85, 90, 91, 96, 97, 112, 113, 115, 118, 132, 137, 149, 156, 166, 169, 192, 202, 219, 221, 224, 228, 233, 239, 240, 241, 248], "oeil": [1, 52, 53, 58, 240], "humain": [1, 58, 63, 209, 246], "sais": [1, 14, 63, 96, 208, 239, 241], "rapid": [1, 2, 4, 35, 40, 42, 43, 52, 53, 55, 58, 60, 61, 63, 71, 73, 76, 79, 86, 93, 97, 101, 112, 115, 116, 117, 118, 125, 127, 128, 132, 161, 162, 163, 168, 171, 175, 177, 181, 201, 202, 207, 208, 214, 215, 225, 231, 233, 235, 240, 243, 244, 245, 246], "diff\u00e9rent": [1, 14, 18, 29, 32, 35, 40, 41, 44, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 72, 80, 81, 89, 90, 95, 96, 101, 110, 112, 115, 116, 118, 120, 121, 122, 128, 133, 134, 139, 142, 143, 144, 145, 147, 148, 150, 152, 153, 160, 161, 162, 164, 166, 169, 171, 179, 191, 192, 197, 198, 201, 204, 207, 209, 210, 215, 216, 217, 219, 223, 225, 228, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 248], "tout": [1, 2, 4, 7, 11, 14, 18, 21, 22, 29, 32, 35, 37, 40, 41, 43, 44, 48, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 71, 72, 73, 76, 79, 80, 82, 83, 84, 85, 87, 88, 89, 93, 95, 97, 98, 101, 102, 107, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 134, 136, 140, 142, 145, 146, 149, 151, 154, 155, 156, 162, 164, 165, 166, 167, 168, 172, 176, 178, 179, 181, 182, 183, 187, 188, 190, 191, 192, 193, 194, 197, 198, 201, 202, 204, 207, 208, 209, 212, 213, 219, 222, 223, 225, 229, 231, 233, 235, 237, 239, 240, 241, 244, 246, 248], "fusion": [1, 19, 23, 58, 64, 90, 110, 167, 182], "algo": 1, "bucket": 1, "bull": 1, "complex": [1, 4, 32, 58, 61, 71, 73, 76, 79, 83, 97, 136, 170, 207, 209, 225, 233, 239, 243, 244], "lempel": 1, "ziv": 1, "python": [1, 3, 4, 6, 16, 19, 22, 23, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 55, 67, 68, 70, 72, 74, 90, 99, 102, 103, 106, 107, 110, 113, 114, 115, 116, 154, 155, 158, 159, 160, 161, 162, 166, 169, 170, 174, 175, 177, 178, 179, 180, 181, 182, 197, 198, 199, 202, 214, 216, 217, 226, 227, 228, 229, 231, 233, 234, 235, 237, 238, 241, 243, 244, 245, 248], "implement": [1, 61, 175, 202], "kullback": [1, 64], "leibl": 1, "divergent": 1, "kl": [1, 63], "ucb": 1, "index": [1, 10, 54, 64, 71, 87, 89, 90, 101, 104, 106, 107, 121, 125, 135, 139, 140, 143, 144, 145, 147, 148, 149, 150, 151, 153, 161, 167, 170, 173, 201, 208, 215, 216, 225, 228, 239, 240, 243], "matriciel": [1, 6, 15, 35, 50, 63, 122, 128, 175, 183, 184], "winograd": 1, "minimum": [1, 44, 52, 55, 63, 81, 83, 85, 86, 102, 114, 119, 120, 121, 125, 134, 137, 187, 188, 193, 194], "filtering": 1, "convolu": [1, 15, 132], "im2col": 1, "r\u00e9arrang": 1, "divis": [1, 2, 14, 43, 52, 53, 58, 61, 71, 79, 80, 85, 98, 104, 112, 114, 117, 118, 150, 151, 157, 168, 174, 177, 185, 186, 193, 201, 203, 218, 227, 228, 239, 240], "reign": 1, "branch": [1, 216], "bound": [1, 52], "the": [1, 3, 4, 6, 7, 10, 11, 22, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 52, 55, 56, 58, 60, 61, 69, 70, 73, 77, 79, 83, 87, 95, 96, 101, 108, 109, 112, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 167, 169, 174, 175, 182, 185, 186, 189, 193, 194, 195, 196, 225, 229, 233, 243, 246], "ultimat": 1, "planar": 1, "convex": [1, 58, 114], "hull": [1, 58], "relectur": [1, 41, 76, 225, 241, 244], "kirkpatrick": 1, "seidel": 1, "prun": [1, 115, 116], "search": [1, 4, 11, 69, 73, 243, 248], "an": [1, 4, 7, 11, 14, 53, 55, 58, 61, 63, 70, 72, 76, 77, 95, 112, 113, 195, 196, 208, 229, 233, 239, 246], "finding": [1, 52], "point": [1, 2, 8, 9, 10, 12, 26, 29, 31, 35, 43, 44, 45, 48, 52, 58, 60, 61, 64, 71, 85, 88, 96, 97, 100, 101, 113, 114, 117, 118, 119, 120, 127, 129, 133, 134, 137, 139, 140, 142, 150, 152, 168, 175, 187, 188, 190, 197, 204, 207, 208, 209, 214, 216, 217, 219, 225, 229, 233, 235, 239, 240, 241, 246, 248, 250], "set": [1, 4, 11, 32, 53, 56, 64, 71, 73, 79, 80, 86, 89, 96, 109, 126, 134, 139, 142, 154, 161, 165, 181, 217, 225, 229, 233, 234, 239, 246], "d\u00e9termin": [1, 2, 7, 9, 35, 40, 43, 52, 58, 60, 61, 62, 63, 64, 71, 97, 98, 101, 112, 113, 114, 115, 116, 122, 140, 174, 187, 188, 191, 207, 208, 209, 213, 217, 225, 231, 233, 235, 239, 240, 243, 246, 248], "envelopp": 1, "h": [1, 11, 35, 41, 53, 58, 61, 63, 67, 70, 79, 89, 96, 101, 113, 117, 118, 119, 120, 121, 126, 134, 138, 155, 159, 166, 170, 202, 204, 214, 225, 233, 234, 236, 240, 241, 244, 246], "nombr": [1, 2, 4, 6, 7, 9, 10, 12, 17, 35, 36, 37, 43, 44, 51, 53, 54, 55, 58, 60, 61, 63, 64, 66, 71, 73, 76, 80, 82, 83, 85, 87, 89, 90, 91, 92, 93, 95, 97, 98, 100, 101, 103, 104, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 121, 123, 125, 127, 128, 134, 135, 136, 137, 140, 146, 147, 149, 153, 155, 157, 161, 162, 166, 167, 169, 170, 171, 172, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 201, 202, 204, 206, 207, 209, 210, 213, 215, 216, 217, 218, 219, 223, 225, 228, 231, 233, 235, 236, 237, 238, 241, 243, 244, 246, 248], "segment": [1, 10, 60, 61, 64, 85, 91, 97, 147, 193, 203, 225], "court": [1, 4, 9, 10, 14, 15, 19, 23, 35, 41, 44, 53, 60, 61, 73, 80, 82, 83, 87, 91, 96, 97, 106, 107, 110, 126, 128, 130, 163, 181, 182, 207, 213, 225, 239, 240, 241], "chemin": [1, 4, 9, 10, 15, 19, 23, 44, 60, 61, 73, 80, 81, 86, 96, 110, 128, 155, 175, 187, 188, 204, 207, 215, 216, 229, 233, 243], "graph": [1, 7, 10, 11, 14, 19, 20, 22, 23, 24, 29, 44, 47, 50, 52, 58, 60, 61, 64, 72, 79, 84, 89, 96, 97, 100, 101, 110, 134, 137, 139, 148, 152, 155, 157, 175, 191, 196, 212, 216, 225, 233], "ordonnanc": [1, 15, 128], "permut": [1, 2, 3, 18, 20, 37, 43, 44, 60, 61, 63, 64, 83, 90, 95, 112, 113, 123, 132, 152, 168, 192, 193, 194, 198, 201, 207, 219, 228], "sattolo": 1, "voyageur": [1, 19, 20, 23, 24, 44, 60, 61, 91, 128], "commerc": [1, 19, 20, 23, 24, 26, 31, 45, 60, 61, 79, 91, 128, 250], "hamiltonien": [1, 10, 13, 20, 24, 44, 59], "lir": [1, 2, 4, 6, 53, 54, 55, 58, 61, 62, 63, 64, 71, 73, 75, 80, 112, 169, 174, 179, 191, 202, 207, 208, 225, 228, 229, 231, 233, 235, 237, 239, 240, 241, 243, 244], "larg": [1, 22, 44, 60, 61, 70, 79, 101], "scal": [1, 61, 140, 141, 142, 143, 153], "traveling": [1, 15, 60, 61, 128], "salesman": [1, 15, 20, 24, 60, 61, 63, 94, 128], "tourn": [1, 43, 58, 60, 90, 154, 165, 201, 216, 246], "v\u00e9hicul": 1, "extens": [1, 7, 16, 50, 55, 63, 82, 86, 97, 114, 170, 207, 214, 225, 233, 238, 241, 242, 248], "affect": [1, 2, 43, 52, 58, 61, 64, 71, 76, 83, 91, 166, 201, 210, 216, 217, 225, 228, 233, 235, 239, 243, 246], "m\u00e9thod": [1, 2, 4, 19, 22, 23, 40, 43, 52, 53, 54, 58, 60, 61, 63, 64, 73, 79, 88, 90, 93, 98, 103, 104, 106, 113, 117, 118, 132, 134, 135, 137, 138, 145, 154, 156, 158, 159, 162, 170, 175, 179, 183, 184, 187, 188, 189, 190, 196, 202, 207, 208, 215, 226, 227, 228, 235, 238, 239, 241, 243, 246, 248], "hongrois": [1, 196], "arbre": [1, 10, 19, 22, 23, 86, 89, 96, 110, 132, 134, 136, 144, 166, 172, 214], "poid": [1, 7, 9, 10, 58, 62, 63, 97, 114, 225], "miminum": [1, 81], "kruskal": [1, 5, 7, 10, 13, 19, 20, 23, 24, 59, 97], "bor\u016fvk": 1, "sac": 1, "dos": 1, "structur": [1, 2, 4, 9, 11, 35, 53, 55, 56, 58, 63, 71, 73, 86, 89, 97, 172, 197, 201, 202, 207, 215, 216, 223, 225, 235, 240, 241, 243], "cha\u00een": [1, 53, 56, 63, 82, 101, 102, 103, 104, 106, 112, 132, 154, 164, 170, 191, 197, 201, 207, 209, 210, 213, 214, 216, 217, 219, 225, 228, 233, 234, 237, 238, 239, 241, 243, 244, 246, 248], "def": [1, 2, 4, 10, 11, 32, 33, 34, 35, 36, 40, 41, 43, 44, 48, 52, 53, 54, 55, 63, 66, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 142, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 213, 214, 215, 216, 219, 220, 222, 223, 225, 227, 228, 229, 231, 233, 234, 235, 239, 240, 241, 243, 244, 246, 248], "hachag": [1, 53, 79, 216], "distribu": [1, 4, 5, 16, 29, 52, 58, 63, 64, 72, 73, 76, 79, 86, 140, 143, 148, 150, 151, 162, 166, 168, 179, 180, 182, 191, 233, 246], "suffix": [1, 15, 101, 128, 240], "tre": [1, 22, 32, 63, 64, 67, 131, 133, 134, 142, 144, 187, 188, 202, 208, 225], "b": [1, 2, 4, 8, 10, 11, 29, 32, 36, 37, 39, 41, 42, 43, 52, 53, 57, 58, 61, 67, 71, 72, 73, 76, 79, 81, 82, 83, 87, 88, 89, 90, 91, 96, 97, 103, 104, 105, 106, 110, 113, 114, 119, 120, 123, 124, 127, 134, 135, 143, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 166, 169, 177, 179, 183, 191, 192, 194, 195, 196, 201, 202, 203, 204, 208, 214, 216, 217, 218, 219, 220, 223, 225, 228, 233, 234, 235, 239, 240, 241, 243, 244, 246, 248], "x": [1, 2, 4, 8, 9, 10, 11, 29, 35, 36, 41, 43, 44, 52, 53, 55, 58, 60, 61, 63, 64, 71, 72, 73, 79, 80, 85, 87, 89, 93, 96, 101, 102, 103, 104, 105, 108, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 128, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 162, 163, 166, 171, 172, 175, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 197, 201, 203, 204, 207, 208, 209, 211, 212, 214, 216, 217, 218, 225, 228, 233, 235, 239, 240, 241, 243, 246, 248], "tas": [1, 90, 167], "heap": [1, 90, 132], "fibonacc": [1, 81], "judy": 1, "array": [1, 29, 33, 38, 41, 43, 47, 51, 55, 56, 57, 58, 60, 61, 64, 71, 72, 79, 80, 84, 85, 86, 87, 88, 90, 94, 95, 101, 105, 113, 114, 117, 118, 119, 120, 121, 125, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 159, 162, 163, 173, 175, 176, 179, 180, 183, 184, 187, 188, 189, 191, 192, 195, 196, 204, 206, 219, 222, 244, 246], "sit": [1, 3, 4, 16, 19, 22, 23, 42, 48, 53, 55, 58, 60, 64, 73, 75, 76, 88, 98, 101, 121, 136, 148, 150, 174, 176, 178, 189, 193, 194, 195, 196, 207, 212, 213, 216, 229, 231, 236, 240, 243, 248], "mapping": [1, 53, 113, 126], "int": [1, 4, 7, 9, 10, 11, 13, 33, 35, 40, 48, 52, 53, 55, 71, 73, 79, 86, 89, 93, 104, 106, 108, 109, 112, 115, 116, 121, 142, 147, 154, 156, 159, 163, 164, 165, 166, 182, 203, 204, 206, 207, 208, 210, 225, 228, 239, 240, 244, 246], "efficac": [1, 2, 29, 38, 40, 52, 58, 63, 64, 86, 89, 90, 93, 96, 97, 104, 110, 126, 134, 159, 164, 167, 182, 225, 234, 235, 239, 244, 246], "traditionnel": [1, 75], "propriet": [1, 63, 71, 80, 86, 190, 191, 199, 204, 216], "cach": [1, 4, 43, 53, 54, 60, 66, 69, 70, 71, 73, 115, 116, 122, 216, 225, 227, 239, 240], "processeur": [1, 55, 175, 239, 246], "compos": [1, 14, 15, 19, 23, 37, 58, 60, 61, 64, 71, 97, 128, 139, 140, 141, 146, 156, 175, 187, 188, 233, 239, 240, 243], "connex": [1, 7, 15, 19, 23, 58, 61, 97, 128, 187, 188, 231], "parcour": [1, 10, 32, 35, 44, 53, 61, 63, 71, 79, 85, 89, 91, 93, 98, 102, 103, 110, 125, 136, 157, 170, 179, 197, 198, 201, 204, 215, 216, 217, 225, 228, 239, 240, 246], "profondeur": [1, 58, 110, 135], "largeur": [1, 58, 72, 86, 110, 123, 179, 233], "orient": [1, 10, 61, 71, 80, 86, 101, 167, 240], "acycl": [1, 110], "degr": [1, 7, 61, 80, 86, 97, 153, 180, 187, 201, 239], "floyd": [1, 196], "flukerson": 1, "cut": [1, 70, 111], "maximum": [1, 6, 9, 10, 12, 51, 52, 55, 58, 71, 72, 84, 85, 96, 98, 112, 114, 121, 125, 135, 145, 159], "bi": [1, 52, 58, 196, 208, 225, 233], "pagerank": 1, "appari": [1, 9, 53, 97, 192, 196], "edmond": [1, 97], "blossum": 1, "hopcroft": [1, 196], "karp": [1, 196], "blossom": [1, 196], "5": [1, 2, 4, 6, 7, 9, 10, 11, 12, 28, 29, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 51, 52, 54, 55, 56, 57, 58, 63, 64, 71, 72, 73, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 196, 197, 198, 199, 201, 202, 204, 206, 209, 210, 211, 212, 213, 214, 219, 220, 222, 223, 225, 227, 228, 233, 234, 235, 236, 239, 240, 241, 243, 246, 248], "couplag": [1, 97, 196], "gal": 1, "shapley": 1, "mariag": [1, 119, 120], "stabl": [1, 52, 56, 58, 69, 72, 135, 136, 140, 142, 143], "robinson": 1, "fould": 1, "robustess": [1, 58], "r\u00e9seau": [1, 22, 64, 79, 86, 136, 191], "quantifying": 1, "robustness": 1, "metro": [1, 56, 58], "network": [1, 96, 187], "d\u00e9tect": [1, 22, 43, 58, 71, 138, 180, 182, 208, 214, 225, 228, 229, 233, 236, 239, 248], "motif": [1, 169, 211, 212], "fr\u00e9quent": [1, 2, 9, 41, 53, 58, 60, 65, 68, 79, 90, 96, 98, 122, 136, 170, 175, 179, 201, 207, 213, 225, 228, 233, 237, 238, 239, 240, 241, 244, 246], "fp": [1, 11], "growth": [1, 178], "text": [1, 2, 4, 11, 32, 35, 37, 44, 53, 56, 58, 60, 61, 63, 64, 66, 72, 73, 76, 79, 84, 89, 98, 113, 114, 126, 132, 133, 137, 138, 139, 140, 148, 152, 169, 170, 174, 175, 187, 188, 199, 201, 204, 209, 215, 217, 228, 229, 235, 237, 239, 240, 242, 243, 244, 246, 248], "knuth": 1, "morr": 1, "pratt": 1, "rabin": 1, "jaccard": 1, "gramm": 1, "aho": 1, "corasick": 1, "auss": [1, 2, 4, 10, 14, 19, 20, 23, 24, 29, 32, 35, 36, 41, 42, 43, 44, 48, 52, 53, 55, 56, 58, 60, 61, 63, 64, 71, 72, 73, 76, 83, 86, 87, 90, 96, 97, 101, 117, 118, 119, 122, 123, 134, 135, 136, 137, 138, 140, 147, 156, 162, 166, 168, 174, 175, 176, 179, 181, 183, 184, 187, 191, 192, 201, 204, 208, 210, 213, 215, 216, 217, 223, 225, 228, 229, 231, 233, 235, 239, 240, 241, 243, 244, 246, 248], "commentz": 1, "walt": 1, "burrow": 1, "wheel": [1, 16], "aprior": 1, "apprentissag": [1, 3, 29, 64, 101, 131, 133, 136, 137, 142, 145, 147, 149, 152, 153, 190, 193, 233], "regl": [1, 32, 55, 58, 61, 62, 63, 71, 83, 191, 204, 207, 208, 225, 229, 231, 233, 239, 240, 241], "associ": [1, 2, 3, 10, 14, 32, 53, 55, 58, 61, 63, 64, 71, 72, 76, 80, 89, 93, 101, 104, 113, 119, 120, 137, 142, 175, 179, 187, 188, 192, 201, 204, 210, 216, 219, 225, 228, 234, 235, 236, 239, 240, 241, 243, 246, 248], "boi": 1, "moor": 1, "string": [1, 11, 42, 52, 53, 71, 72, 169, 170, 176, 195, 196, 207, 239, 240, 241, 243], "simplex": 1, "lin\u00e9air": [1, 22, 51, 58, 63, 64, 79, 90, 101, 113, 114, 115, 116, 117, 118, 133, 134, 136, 137, 142, 152, 153, 166, 172, 182, 183, 184, 190, 233, 243], "thes": [1, 11, 195, 196], "neld": [1, 52], "mead": [1, 52], "codag": 1, "huffman": [1, 96], "lz77": 1, "lz78": 1, "bootstrap": [1, 137], "intervall": [1, 2, 33, 35, 55, 58, 63, 64, 71, 72, 85, 87, 97, 114, 115, 116, 117, 162, 164, 185, 186, 193, 194, 203, 204, 235, 243, 246], "confianc": [1, 58, 140, 204], "filtr": [1, 7, 22, 152, 174, 241, 248], "bloom": 1, "woodbury": 1, "identity": [1, 55, 125, 222], "blockwis": 1, "invers": [1, 6, 10, 32, 41, 43, 44, 51, 52, 53, 58, 61, 71, 72, 79, 87, 112, 122, 126, 144, 156, 170, 179, 183, 198, 207, 208, 212, 225, 228, 233, 237, 240, 241, 244, 246], "toom": 1, "cook": 1, "canopy": 1, "clustering": [1, 14, 22, 60, 63, 128], "lru": 1, "last": [1, 2, 4, 53, 66, 67, 71, 73, 90, 91, 93, 103, 104, 106, 107, 112, 117, 192, 225, 228, 229, 233, 235, 239, 240, 248], "recent": [1, 2, 4, 53, 66, 71, 73, 103, 104, 106, 107, 112, 192, 225, 228, 229, 233, 235, 239, 240, 248], "used": [1, 4, 11, 32, 134, 243], "yield": [1, 41, 54, 103, 155, 178, 182, 225, 239], "m\u00e9mo\u00efz": 1, "fonction": [1, 4, 7, 10, 14, 19, 22, 23, 29, 34, 35, 36, 40, 42, 43, 44, 52, 54, 58, 60, 64, 68, 73, 76, 80, 81, 82, 83, 85, 88, 91, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 132, 134, 135, 136, 137, 140, 142, 143, 145, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 162, 164, 166, 169, 172, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 203, 206, 207, 213, 214, 215, 216, 217, 219, 220, 222, 223, 227, 228, 229, 231, 234, 236, 237, 241, 243, 244, 246, 249], "fonctionnel": [1, 40, 71, 76, 225], "r\u00e9curs": [1, 2, 32, 71, 81, 82, 83, 85, 110, 122, 138, 170, 191, 194, 223, 240, 241, 246], "kahan": 1, "summat": [1, 195, 196], "probabil": [1, 168], "probabilistic": 1, "dat": [1, 2, 3, 7, 14, 39, 41, 42, 48, 52, 56, 58, 64, 72, 74, 79, 87, 88, 101, 121, 134, 135, 137, 139, 140, 141, 142, 143, 148, 153, 167, 169, 170, 173, 175, 178, 187, 202, 207, 208, 225, 238, 240, 241, 243, 244, 248], "web": [1, 2, 15, 22, 71, 73, 76, 132, 207, 208, 231, 236, 244, 245], "analytic": 1, "mining": 1, "compress": [1, 80, 96, 170, 207, 215, 241], "lzfse": 1, "lzma": 1, "squash": 1, "benchmark": [1, 52], "inspir": [1, 32, 35, 52, 58, 61, 64, 86, 96, 97, 110, 114, 119, 120, 142, 151, 162, 166, 181, 191, 194, 208, 211, 212], "quantiqu": [1, 19, 23, 76], "quantum": 1, "inspired": [1, 4], "classical": 1, "recommend": 1, "system": [1, 4, 48, 52, 53, 58, 73, 80, 85, 87, 96, 113, 114, 185, 186, 236, 237, 240, 241, 243, 246, 248], "beaucoup": [1, 6, 7, 14, 18, 32, 35, 53, 55, 58, 60, 61, 62, 63, 71, 72, 73, 75, 76, 83, 86, 89, 93, 101, 104, 105, 110, 112, 116, 118, 133, 137, 139, 152, 161, 162, 175, 179, 182, 191, 197, 198, 201, 202, 207, 208, 209, 214, 225, 227, 233, 237, 240, 241, 244, 246, 248], "projet": [1, 48, 56, 58, 60, 64, 138, 139, 197, 227, 243], "thealgorithm": 1, "modul": [1, 2, 6, 11, 12, 13, 14, 34, 35, 41, 48, 51, 52, 53, 61, 64, 66, 67, 68, 97, 101, 103, 104, 106, 107, 112, 113, 114, 115, 116, 132, 135, 140, 142, 143, 150, 154, 161, 162, 166, 169, 170, 175, 178, 179, 181, 183, 184, 187, 189, 191, 192, 214, 215, 225, 228, 229, 231, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 248, 249], "classiqu": [1, 6, 51, 52, 57, 58, 60, 73, 90, 91, 96, 123, 207, 217, 226, 232, 238], "binair": [1, 22, 58, 71, 79, 86, 92, 101, 113, 115, 123, 135, 145, 157, 170, 172, 190, 208, 216, 240, 242], "mersen": 1, "heapsort": 1, "distingu": [1, 4, 53, 58, 71, 73, 86, 97, 160, 201, 207, 213, 225, 239, 240], "trois": [1, 2, 18, 32, 40, 43, 48, 53, 58, 60, 61, 63, 68, 72, 85, 89, 93, 96, 98, 110, 152, 153, 156, 158, 160, 165, 177, 183, 184, 195, 196, 199, 201, 207, 208, 209, 212, 215, 217, 225, 228, 233, 235, 238, 240, 241, 243, 246, 248], "class": [1, 3, 11, 15, 19, 20, 22, 23, 24, 29, 43, 48, 52, 53, 58, 60, 68, 76, 87, 102, 110, 131, 134, 136, 137, 139, 140, 142, 143, 150, 151, 152, 155, 166, 167, 170, 178, 179, 187, 188, 189, 191, 192, 208, 215, 216, 217, 231, 234, 236, 237, 239, 240, 241, 243, 244, 246, 248, 249], "p": [1, 9, 10, 11, 29, 32, 33, 35, 42, 58, 61, 64, 67, 70, 71, 79, 86, 89, 90, 94, 95, 96, 98, 101, 110, 112, 117, 118, 121, 125, 127, 135, 137, 141, 153, 154, 156, 158, 159, 161, 162, 166, 170, 174, 175, 176, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 197, 199, 200, 201, 204, 208, 214, 217, 219, 220, 222, 223, 225, 234, 239, 241, 248], "Un": [1, 4, 7, 15, 22, 29, 32, 35, 37, 40, 42, 43, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 71, 72, 73, 80, 84, 89, 98, 100, 101, 103, 112, 113, 115, 116, 117, 118, 119, 120, 132, 133, 134, 135, 136, 140, 145, 150, 154, 155, 158, 169, 170, 172, 179, 185, 186, 193, 197, 201, 205, 206, 207, 209, 210, 211, 213, 214, 216, 217, 219, 223, 225, 231, 233, 237, 239, 241, 242, 244], "appartient": [1, 40, 60, 61, 85, 86, 114, 162, 175, 179, 187, 188, 215, 225, 233, 239, 240, 248], "\u00eatre": [1, 2, 4, 14, 22, 32, 41, 43, 44, 52, 53, 56, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 79, 80, 83, 86, 87, 93, 95, 96, 97, 98, 101, 104, 110, 112, 114, 115, 116, 117, 118, 121, 122, 133, 134, 135, 136, 137, 138, 139, 140, 143, 147, 148, 150, 152, 154, 155, 156, 158, 169, 170, 172, 174, 175, 177, 179, 180, 181, 183, 191, 192, 193, 197, 201, 202, 203, 207, 208, 213, 214, 215, 216, 217, 225, 228, 231, 233, 235, 237, 239, 240, 241, 243, 246, 248], "d\u00e9cid": [1, 35, 58, 71, 83, 96, 97, 122, 208, 228], "polyn\u00f4mial": [1, 3, 44, 60, 63, 64, 94, 131, 136, 191, 196], "d\u00e9cis": [1, 29, 58, 62, 63, 64, 72, 134, 136, 143, 144, 145, 216], "turing": 1, "polynomial": [1, 97, 187], "rapport": [1, 32, 48, 58, 60, 72, 76, 79, 97, 115, 116, 118, 122, 140, 174, 182, 190, 199, 225, 227, 233, 239, 245, 246], "taill": [1, 9, 10, 12, 13, 43, 52, 53, 54, 55, 61, 63, 71, 76, 89, 90, 96, 98, 110, 114, 115, 116, 119, 120, 121, 166, 168, 172, 179, 182, 191, 192, 193, 204, 215, 216, 217, 218, 219, 225, 233, 239, 240, 241, 244, 246], "entr\u00e9": [1, 4, 40, 51, 52, 73, 75, 79, 121, 154, 156, 166, 181, 201, 207, 208, 217, 225, 228, 229, 233, 235, 237, 239, 249], "impliqu": [1, 34, 41, 52, 55, 58, 71, 72, 87, 102, 118, 150, 162, 225, 233, 239, 241], "possibl": [1, 2, 4, 6, 7, 17, 32, 35, 39, 41, 43, 44, 52, 53, 56, 58, 60, 61, 63, 64, 71, 72, 73, 76, 80, 81, 82, 85, 86, 87, 88, 96, 97, 101, 105, 112, 118, 119, 120, 121, 125, 128, 135, 137, 150, 159, 163, 164, 167, 168, 170, 179, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 201, 207, 208, 209, 213, 214, 215, 216, 219, 225, 228, 229, 231, 233, 235, 237, 240, 241, 243, 244, 246, 248], "v\u00e9rifi": [1, 7, 14, 35, 40, 43, 48, 56, 58, 61, 63, 64, 66, 71, 72, 76, 79, 83, 85, 86, 95, 96, 100, 101, 102, 104, 114, 115, 116, 117, 118, 123, 135, 140, 142, 145, 154, 156, 157, 169, 179, 183, 184, 187, 198, 206, 215, 219, 231, 233, 239, 240, 241, 243, 246, 248], "admet": [1, 63, 114, 204], "capabl": [1, 23, 35, 62, 94, 156, 187, 213, 225, 233, 241, 243, 246], "pr\u00e9cis": [1, 4, 29, 42, 52, 53, 54, 58, 71, 72, 73, 76, 84, 112, 114, 117, 118, 122, 133, 140, 146, 162, 164, 168, 197, 208, 209, 215, 225, 228, 229, 233, 237, 239, 240, 241, 243, 244, 246, 248], "r\u00e9duct": [1, 55, 124], "f": [1, 2, 4, 9, 11, 12, 33, 36, 41, 42, 48, 52, 53, 56, 61, 63, 64, 67, 71, 72, 73, 79, 81, 84, 85, 89, 91, 96, 97, 101, 104, 105, 108, 109, 112, 114, 115, 116, 126, 134, 135, 137, 142, 153, 154, 155, 156, 158, 162, 164, 165, 166, 170, 175, 181, 191, 197, 201, 202, 203, 204, 207, 208, 210, 214, 216, 217, 219, 222, 225, 228, 229, 233, 235, 237, 239, 241, 243, 246, 248], "bpp": 1, "objet": [1, 2, 4, 19, 23, 32, 34, 38, 52, 53, 58, 63, 71, 72, 73, 156, 158, 160, 170, 178, 179, 197, 199, 201, 202, 214, 216, 225, 228, 232, 234, 235, 236, 239, 243, 244, 246, 248], "th\u00e9or": [1, 64, 135, 225], "informat": [1, 32, 43, 58, 71, 160, 170, 197, 204, 225, 227, 237, 239, 241], "th\u00e9oriqu": [1, 14, 58, 72, 79, 155, 216], "d\u00e9fin": [1, 4, 7, 9, 10, 32, 35, 36, 40, 43, 52, 55, 56, 58, 60, 61, 63, 64, 71, 72, 73, 80, 84, 86, 101, 115, 117, 118, 127, 134, 138, 154, 156, 158, 160, 162, 170, 183, 187, 191, 197, 201, 207, 208, 214, 215, 216, 217, 225, 229, 230, 231, 233, 237, 239, 240, 241, 243, 244, 246, 248], "acronym": [1, 201], "vient": [1, 21, 43, 58, 85, 95, 96, 97, 107, 152, 161, 162, 177, 197, 200, 209, 225, 233, 239, 241], "bounded": 1, "error": [1, 42, 87, 101, 137, 153, 229], "tim": [1, 4, 11, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53, 58, 60, 61, 73, 79, 86, 89, 90, 92, 93, 95, 101, 122, 133, 147, 149, 152, 153, 161, 162, 174, 175, 176, 180, 182, 183, 184, 187, 189, 190, 195, 196, 198, 202, 214, 215, 216, 225, 236, 243, 246], "encor": [1, 4, 9, 14, 20, 24, 36, 40, 43, 52, 53, 58, 60, 61, 64, 71, 73, 76, 79, 83, 85, 88, 89, 90, 93, 97, 98, 101, 106, 107, 117, 118, 125, 126, 145, 154, 156, 165, 174, 191, 192, 193, 197, 198, 208, 212, 213, 216, 225, 227, 231, 234, 239, 240, 241, 243, 246, 248], "irr\u00e9solu": 1, "21": [0, 1, 32, 38, 48, 52, 53, 55, 56, 79, 81, 86, 87, 90, 95, 99, 104, 106, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 133, 135, 137, 140, 143, 144, 145, 150, 151, 152, 153, 162, 163, 167, 173, 174, 175, 179, 184, 187, 188, 190, 197, 201, 204, 207, 210, 216, 217, 236, 239, 248], "Une": [1, 2, 4, 14, 22, 32, 35, 36, 40, 53, 58, 61, 62, 63, 64, 71, 72, 73, 76, 79, 81, 82, 84, 88, 90, 91, 93, 96, 104, 110, 112, 117, 118, 119, 120, 126, 132, 134, 137, 150, 154, 163, 168, 171, 179, 190, 194, 197, 199, 201, 204, 209, 210, 215, 225, 228, 233, 235, 236, 239, 240, 241, 243, 244, 246, 248], "preuv": 1, "cour": [1, 14, 53, 60, 61, 62, 64, 71, 86, 87, 92, 121, 161, 180, 207, 216, 228, 233, 239, 240, 241, 246], "logiqu": [1, 32, 53, 71, 72, 155, 207, 227, 233, 240, 244], "423": 1, "m\u00eam": [1, 4, 6, 10, 14, 18, 20, 22, 24, 29, 32, 34, 35, 36, 38, 40, 41, 43, 44, 52, 53, 55, 60, 61, 63, 64, 66, 71, 72, 73, 76, 81, 86, 87, 89, 90, 94, 95, 97, 98, 101, 102, 104, 110, 112, 113, 115, 116, 118, 119, 120, 121, 126, 127, 128, 134, 135, 137, 138, 139, 142, 143, 147, 148, 149, 151, 152, 155, 156, 157, 158, 160, 161, 162, 164, 167, 169, 170, 174, 175, 176, 177, 178, 179, 181, 182, 187, 190, 191, 192, 197, 198, 199, 201, 202, 204, 206, 208, 209, 210, 214, 215, 216, 217, 219, 222, 223, 225, 228, 229, 233, 236, 237, 239, 240, 241, 243, 244, 246, 248], "r\u00e9duir": [1, 14, 36, 53, 58, 61, 71, 76, 137, 152, 212, 217, 240, 241, 244], "fa\u00e7on": [1, 2, 4, 7, 14, 18, 32, 35, 41, 42, 44, 48, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 73, 75, 76, 80, 83, 85, 86, 87, 90, 92, 93, 97, 103, 106, 107, 113, 114, 115, 117, 119, 120, 122, 124, 125, 128, 134, 136, 137, 138, 139, 140, 143, 147, 152, 155, 156, 158, 160, 161, 162, 163, 166, 167, 170, 174, 175, 179, 180, 187, 191, 197, 201, 207, 208, 213, 214, 215, 218, 223, 225, 228, 229, 233, 235, 237, 239, 240, 241, 243, 245, 246], "dont": [1, 2, 4, 14, 29, 32, 40, 43, 48, 53, 54, 55, 58, 61, 62, 63, 64, 71, 72, 73, 79, 85, 86, 100, 101, 103, 117, 118, 119, 120, 123, 153, 154, 156, 166, 177, 179, 181, 191, 193, 204, 208, 213, 214, 215, 216, 225, 228, 229, 233, 235, 237, 239, 240, 241, 243, 246, 248], "cherch": [1, 2, 4, 35, 40, 52, 53, 54, 56, 58, 61, 63, 64, 71, 73, 76, 85, 88, 90, 96, 97, 98, 110, 112, 113, 114, 117, 118, 119, 120, 123, 125, 127, 134, 136, 142, 144, 145, 146, 150, 156, 159, 162, 164, 168, 174, 177, 178, 181, 183, 184, 185, 186, 187, 191, 194, 195, 196, 201, 203, 210, 213, 217, 218, 219, 223, 225, 227, 228, 233, 235, 239, 240, 243, 248], "puiss": [1, 32, 64, 112, 142, 193, 207, 208, 225, 233], "r\u00e9ciproqu": [1, 2, 40, 71, 101, 112, 163, 170, 201, 225, 233, 237, 239, 240, 241, 244], "premi": [1, 4, 6, 7, 15, 18, 19, 22, 23, 29, 32, 35, 36, 40, 43, 44, 48, 51, 52, 53, 55, 58, 60, 61, 63, 64, 71, 72, 73, 76, 79, 81, 82, 83, 84, 85, 86, 89, 91, 93, 96, 98, 100, 101, 102, 103, 104, 106, 107, 110, 112, 113, 115, 116, 117, 119, 120, 122, 123, 124, 128, 132, 133, 137, 138, 139, 140, 141, 143, 145, 146, 147, 155, 156, 158, 160, 163, 164, 165, 167, 170, 174, 177, 179, 182, 183, 184, 187, 188, 190, 191, 192, 198, 199, 201, 206, 207, 208, 212, 213, 215, 216, 217, 218, 223, 225, 228, 229, 231, 233, 237, 239, 240, 241, 243, 244, 245, 248], "lequel": [1, 4, 7, 53, 60, 71, 73, 76, 79, 81, 84, 95, 97, 105, 133, 137, 191, 192, 196, 201, 202, 225, 234, 237, 239, 240, 241, 243, 246], "compl\u00e9tud": 1, "th\u00e9orem": [1, 62, 63, 140, 156, 204], "stephen": [1, 58], "sat": 1, "\u00e9quivalent": [1, 2, 32, 35, 36, 40, 44, 53, 58, 71, 114, 135, 144, 145, 155, 161, 165, 190, 192, 193, 194, 195, 196, 197, 207, 216, 225, 228, 233, 235, 239, 240, 241, 245, 248], "pr\u00e9sentent": [1, 58, 170, 207, 233, 241], "sous": [1, 2, 8, 10, 14, 25, 29, 40, 48, 52, 53, 54, 56, 58, 59, 60, 61, 63, 64, 71, 72, 76, 79, 80, 82, 89, 97, 98, 100, 101, 103, 108, 109, 127, 128, 134, 136, 140, 150, 151, 167, 170, 179, 191, 192, 193, 197, 207, 208, 217, 225, 228, 231, 239, 240, 241, 243, 244, 246, 248], "or": [1, 2, 4, 11, 29, 32, 42, 43, 44, 48, 52, 56, 58, 71, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98, 101, 103, 104, 106, 110, 114, 115, 116, 117, 118, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 165, 167, 175, 181, 189, 193, 194, 195, 196, 199, 200, 204, 219, 220, 222, 228, 233, 235, 239, 240, 243, 244, 248], "acc": [1, 58, 61, 64, 72], "v\u00e9rif": [1, 35, 40, 43, 52, 53, 58, 61, 63, 64, 66, 71, 76, 79, 80, 82, 83, 84, 87, 93, 96, 97, 101, 102, 103, 104, 110, 112, 113, 115, 116, 117, 137, 140, 154, 156, 158, 162, 172, 179, 183, 184, 191, 204, 206, 207, 216, 218, 222, 225, 229, 233, 239, 240, 243, 246, 248], "claus": [1, 32, 217, 228, 239], "vee_k": 1, "y_": [1, 33, 63, 64, 72, 134, 138], "1k": [1, 63], "wedg": 1, "n_k": 1, "k": [1, 2, 6, 7, 10, 35, 40, 41, 48, 51, 52, 53, 54, 60, 61, 63, 64, 71, 79, 81, 85, 86, 87, 89, 92, 93, 96, 97, 98, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 128, 133, 134, 136, 137, 138, 140, 142, 143, 145, 147, 149, 155, 156, 162, 163, 172, 173, 175, 179, 182, 188, 192, 193, 194, 201, 202, 204, 214, 215, 216, 218, 222, 223, 225, 235, 239, 240, 248], "ik": [1, 44, 86], "x_i": [1, 52, 63, 64, 79, 113, 114, 115, 116, 117, 118, 134, 135, 137, 140, 185, 186, 187, 188, 190, 204], "neg": [1, 53], "pass": [1, 2, 4, 10, 14, 19, 23, 34, 35, 37, 39, 40, 41, 43, 44, 52, 53, 56, 58, 60, 61, 62, 63, 64, 71, 73, 80, 85, 87, 90, 91, 97, 104, 112, 115, 116, 117, 126, 128, 135, 136, 137, 142, 143, 146, 155, 156, 163, 164, 167, 169, 174, 175, 176, 178, 179, 181, 189, 190, 191, 194, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 216, 217, 218, 223, 225, 228, 231, 233, 235, 237, 240, 241, 243, 244, 245, 246, 248], "\u00e9valu": [1, 14, 22, 29, 43, 52, 58, 64, 99, 131, 133, 135, 143, 147, 150, 239, 240], "sup\u00e9rieur": [1, 2, 29, 58, 72, 76, 86, 90, 97, 112, 113, 114, 116, 117, 118, 143, 177, 217, 222, 233, 235, 239, 240, 241], "certain": [1, 4, 9, 14, 41, 44, 48, 53, 55, 56, 58, 59, 60, 61, 64, 66, 71, 72, 73, 76, 79, 85, 103, 112, 135, 155, 157, 161, 177, 178, 191, 197, 199, 204, 207, 208, 213, 223, 225, 227, 228, 231, 233, 236, 239, 240, 241, 243, 244, 246, 248], "seuil": [1, 7, 29, 58, 79, 97, 140, 143], "wikip\u00e9di": [1, 53, 82, 170, 211, 212], "version": [1, 2, 4, 16, 39, 41, 42, 43, 44, 52, 53, 56, 58, 63, 67, 70, 71, 72, 73, 76, 82, 85, 93, 96, 101, 110, 115, 116, 148, 150, 162, 170, 171, 174, 175, 198, 199, 204, 208, 210, 214, 217, 219, 225, 233, 234, 235, 237, 239, 240, 241, 243, 246, 248], "fran\u00e7ais": [1, 62, 63, 64], "learning": [0, 1, 6, 14, 19, 22, 23, 52, 58, 63, 73, 74, 75, 90, 130, 135, 136, 175, 216], "concept": [1, 43, 58, 63, 71, 197, 225, 227, 233, 238, 246], "statist": [1, 14, 51, 53, 58, 63, 64, 72, 86, 136, 147, 174, 175, 180, 214], "introduct": [1, 48, 53, 58, 75, 87, 232], "to": [0, 1, 4, 6, 10, 11, 13, 16, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 53, 55, 56, 58, 69, 70, 73, 77, 87, 97, 101, 106, 113, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 167, 169, 175, 189, 195, 196, 202, 215, 225, 228, 229, 233, 239, 240, 241, 243, 248], "\u00e9chantillon": [1, 52, 53, 64, 72, 95, 97, 183, 184, 191], "markov": [1, 60, 63, 219], "central": [1, 2, 204, 235], "flow": [1, 195, 196], "blossom5": 1, "matching": 1, "local": [1, 3, 4, 11, 21, 22, 36, 48, 58, 63, 70, 71, 101, 135, 148, 149, 150, 175, 178, 189, 225, 237, 244, 246], "max": [1, 6, 10, 33, 51, 52, 53, 55, 56, 58, 64, 71, 72, 79, 83, 84, 85, 87, 89, 91, 93, 97, 114, 117, 118, 120, 125, 135, 136, 139, 143, 145, 147, 148, 152, 154, 155, 157, 159, 168, 172, 179, 187, 188, 194, 198, 204, 216, 217, 225, 239, 240, 248], "smoothed": 1, "expand": [1, 233], "geometric": 1, "embedding": 1, "partitioning": 1, "partitionning": 1, "read": [1, 33, 41, 42, 53, 56, 70, 98, 170, 178, 207, 208, 214, 229, 237, 241, 244, 246, 248], "optimized": 1, "period": 1, "order": [1, 32, 52, 58, 117, 170, 195, 196, 225, 228], "preserving": 1, "recurs": [1, 32, 67, 115, 116, 175, 201], "gram": 1, "hashing": [1, 63], "is": [1, 4, 10, 11, 29, 32, 33, 35, 41, 48, 52, 55, 56, 67, 77, 82, 83, 85, 87, 88, 89, 90, 91, 95, 96, 101, 103, 104, 107, 114, 115, 116, 117, 118, 122, 123, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 163, 164, 169, 175, 181, 189, 192, 194, 195, 196, 204, 216, 219, 220, 223, 225, 233, 239, 240, 243, 244, 246, 248], "pairwis": [1, 125], "independent": 1, "at": [1, 4, 11, 28, 29, 32, 41, 44, 52, 53, 58, 64, 71, 79, 101, 103, 108, 109, 115, 116, 122, 127, 142, 154, 155, 195, 196, 197, 208, 237, 239, 240, 244], "best": [1, 32, 85, 87, 89, 94, 112, 118, 119, 120, 134, 169, 192, 194, 220], "hash": [1, 170, 202], "featur": [1, 48, 64, 131, 134, 137, 146, 153, 208], "classif": [1, 5, 14, 22, 62, 135, 136, 140, 190, 213], "malwar": 1, "detect": [1, 56, 138, 208, 214], "computing": 1, "deriv": 1, "tensor": 1, "express": [1, 10, 43, 52, 53, 71, 72, 77, 110, 114, 132, 134, 137, 154, 157, 163, 179, 191, 225, 239, 240, 241, 243, 249], "prec": [1, 29, 43, 48, 52, 58, 63, 75, 81, 85, 103, 104, 110, 112, 135, 179, 191, 201, 203, 204, 229, 231, 233, 237, 239, 240, 248], "op\u00e9rationnel": [1, 4, 73, 219], "robert": 1, "faur": 1, "bernard": [1, 208], "lemair": 1, "christoph": 1, "picouleau": 1, "programming": [1, 17, 193], "pearl": 1, "jon": 1, "bentley": 1, "3rd": [1, 58], "edit": [1, 4, 58, 64, 69, 83, 233], "thom": 1, "cormen": 1, "charl": [1, 98, 160], "e": [1, 6, 11, 29, 35, 40, 41, 42, 43, 51, 52, 53, 55, 56, 58, 61, 64, 71, 79, 82, 89, 90, 96, 97, 98, 99, 121, 124, 126, 137, 145, 152, 154, 155, 157, 166, 169, 178, 179, 182, 187, 188, 191, 192, 193, 201, 202, 206, 208, 209, 210, 213, 214, 217, 219, 223, 225, 228, 229, 233, 234, 239, 240, 241, 243, 244, 246, 248], "leiserson": 1, "ronald": 1, "rivest": 1, "clifford": 1, "stein": 1, "128": [1, 85, 92, 110, 159, 229], "compr": [1, 2, 55, 58, 71, 73, 140, 145, 198, 199, 201, 208, 216, 225, 233, 239, 240, 248], "cod": [1, 2, 4, 6, 11, 16, 19, 22, 23, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 52, 53, 55, 56, 60, 62, 64, 66, 72, 73, 74, 75, 76, 79, 83, 91, 96, 97, 99, 101, 103, 104, 105, 107, 113, 115, 116, 117, 118, 122, 123, 128, 132, 133, 147, 154, 155, 156, 158, 165, 166, 167, 170, 175, 176, 179, 185, 186, 189, 193, 194, 195, 196, 197, 199, 207, 208, 209, 215, 216, 217, 225, 227, 228, 229, 231, 233, 235, 237, 239, 240, 241, 243, 244, 246], "vi": [1, 2, 4, 14, 16, 41, 48, 52, 53, 58, 63, 64, 72, 73, 83, 112, 161, 193, 207, 208, 225, 233, 239, 241, 244, 246], "accompagn": [1, 4, 58, 72, 73], "r\u00e9pertoir": [1, 4, 7, 12, 13, 71, 73, 100, 101, 181, 207, 233, 241, 243, 248], "github": [1, 7, 19, 22, 23, 29, 41, 48, 52, 53, 54, 55, 56, 57, 66, 67, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 229, 233, 241, 243], "tryalgo": 1, "document": [1, 29, 52, 53, 54, 56, 63, 77, 101, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 179, 189, 207, 225, 228, 233, 237, 240, 243, 246], "r\u00e9solu": [1, 18, 26, 31, 45, 48, 58, 86, 128, 137, 167, 240, 250], "Des": [1, 19, 23, 58, 64, 68, 76, 240], "appliqu": [1, 2, 7, 15, 22, 29, 41, 43, 53, 58, 60, 62, 63, 64, 71, 72, 76, 79, 82, 83, 87, 91, 95, 96, 101, 112, 113, 122, 132, 134, 136, 138, 142, 144, 152, 154, 155, 156, 160, 165, 169, 170, 174, 180, 183, 187, 188, 191, 197, 207, 213, 215, 217, 218, 222, 225, 228, 229, 233, 235, 239, 240, 241, 243, 244, 246, 248], "efficient": [1, 55, 58, 97], "practical": 1, "preconditioning": 1, "solving": 1, "laplacian": 1, "survey": 1, "driven": [1, 58, 72], "dictionary": [1, 2, 4, 7, 11, 97, 225, 235, 240, 243], "based": [1, 11, 60, 87, 195, 196], "method": [1, 11, 32, 52, 56, 58, 101, 141, 142, 174, 175, 176, 189, 225, 228, 229, 233, 240, 243], "3d": [1, 52, 135], "modeling": [1, 58], "project": [1, 4, 48, 52, 60, 64, 73, 131, 135, 136], "eul": [1, 52, 97], "archiv": 1, "jam": [1, 9, 14, 25, 29, 44, 52, 56, 58, 61, 62, 63, 71, 85, 103, 104, 111, 112, 135, 162, 170, 193, 194, 195, 196, 201, 208, 225, 228, 229, 233, 239, 240, 246, 248], "2020": [1, 56, 87, 99], "2019": [1, 99], "2018": [1, 99, 170], "2017": [1, 63, 99, 236], "earli": 1, "leetcod": 1, "comp\u00e9tit": [1, 58], "recensent": [1, 121], "plusieur": [1, 3, 4, 14, 32, 35, 44, 48, 52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 71, 72, 73, 76, 79, 80, 84, 95, 113, 114, 116, 117, 118, 119, 120, 123, 128, 131, 133, 135, 145, 147, 152, 153, 159, 171, 174, 181, 191, 192, 194, 196, 197, 199, 204, 206, 207, 208, 214, 215, 217, 225, 228, 237, 240, 241, 242, 245, 246, 248], "ci": [1, 2, 16, 24, 29, 41, 44, 52, 55, 56, 58, 60, 61, 63, 64, 71, 73, 76, 79, 82, 84, 88, 90, 96, 101, 104, 110, 112, 114, 115, 116, 121, 123, 137, 140, 145, 147, 152, 156, 158, 163, 170, 178, 179, 182, 190, 191, 197, 207, 209, 213, 216, 225, 228, 229, 231, 233, 234, 235, 236, 239, 240, 241, 243, 244, 246, 248], "southwestern": 1, "europ": [1, 48, 208], "regional": 1, "contest": 1, "swerc": 1, "pr\u00e9c\u00e9dent": [1, 15, 19, 20, 23, 24, 40, 52, 53, 58, 60, 61, 64, 71, 72, 81, 82, 83, 84, 85, 86, 88, 90, 91, 97, 100, 101, 110, 112, 113, 114, 115, 116, 117, 118, 123, 134, 136, 137, 159, 162, 165, 168, 179, 181, 183, 184, 187, 190, 194, 199, 201, 202, 203, 207, 210, 212, 216, 217, 225, 228, 229, 233, 237, 239, 240, 241, 243, 246, 248], "exercic": [0, 1, 17, 19, 23, 26, 31, 40, 45, 47, 50, 51, 57, 92, 111, 128, 130, 170, 178, 211, 212, 225, 239, 250], "acm": 1, "icpc": 1, "liv": 1, "castor": 1, "jeun": [1, 187, 188, 208], "coding": [1, 2, 73, 76, 207, 208, 233, 237, 240], "you": [1, 11, 22, 33, 48, 67, 134, 195, 196, 225], "should": [1, 22, 33, 175], "know": [1, 6, 32], "least": [1, 32, 101, 114, 122, 145], "one": [0, 1, 4, 6, 10, 11, 51, 52, 53, 55, 113, 114, 133, 142, 150, 175, 176, 195, 196], "languag": [1, 22, 56, 84, 89, 170, 208, 214, 216, 240, 244], "really": 1, "wel": [1, 11], "it": [1, 11, 33, 41, 44, 52, 67, 87, 94, 97, 114, 119, 120, 133, 134, 135, 137, 195, 196, 225, 239], "preferably": 1, "be": [1, 2, 4, 10, 11, 32, 48, 52, 56, 67, 77, 87, 101, 134, 142, 148, 150, 175, 195, 196, 208, 223, 235, 239], "jav": [1, 69], "ok": [1, 33, 225, 233, 239], "too": [1, 67, 152, 195, 196, 239], "sinc": [1, 67, 134, 195, 196], "pretty": 1, "similar": 1, "will": [1, 11, 48, 67, 87, 101, 148, 150, 195, 196], "expected": [1, 33, 86, 87, 142, 150, 152, 154, 180, 239], "writ": [1, 33, 42, 53, 56, 71, 167, 170, 207, 208, 214, 228, 229, 241], "som": [1, 32, 33, 60, 67, 142], "your": [1, 67], "interview": [1, 58], "amount": 1, "detail": [1, 2, 73, 76, 167, 240], "about": [1, 2, 4, 6, 14, 43, 58, 61, 62, 71, 83, 86, 110, 113, 156, 165, 191, 195, 196, 233, 235, 240, 244, 246], "favorit": 1, "sorting": [1, 240], "how": [1, 4, 22, 33, 52, 53, 73, 101, 113, 195, 196, 202, 229, 240], "do": [1, 11, 16, 42, 52, 67, 70, 77, 103, 104, 195, 196, 208, 225, 229, 239, 240], "bubbl": 1, "log": [1, 52, 64, 67, 69, 75, 79, 87, 101, 103, 113, 137, 140, 141, 143, 153, 155, 167, 182, 201, 204, 208, 216, 218, 229, 231, 241, 243, 246], "two": [1, 10, 11, 12, 13, 32, 33, 52, 53, 58, 87, 122, 195, 196], "say": 1, "quick": [1, 52], "merg": [1, 56, 67, 77, 101, 167], "can": [1, 2, 4, 11, 33, 41, 48, 52, 67, 73, 106, 134, 229, 234, 235], "highly": 1, "useful": [1, 11], "situat": [1, 58, 137, 225, 227, 239, 246], "wher": [1, 4, 13, 52, 53, 195, 196], "impractical": 1, "so": [1, 10, 33, 77, 87, 195, 196], "tak": [1, 10, 55], "look": [1, 11, 52], "hashtabl": 1, "arguably": 1, "singl": [1, 56, 131], "most": [1, 2, 4, 53, 66, 71, 73, 103, 104, 106, 107, 112, 192, 195, 196, 225, 228, 229, 233, 235, 239, 240, 243, 248], "import": [1, 2, 4, 6, 11, 12, 13, 14, 22, 28, 29, 32, 33, 34, 37, 38, 39, 41, 43, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 67, 70, 71, 73, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 228, 229, 231, 234, 235, 236, 237, 239, 240, 241, 244, 246, 248], "known": 1, "mankind": 1, "absolutely": 1, "they": [1, 58, 67, 243], "work": [1, 42], "able": 1, "only": [1, 4, 10, 11, 142, 145, 243], "spac": [1, 10, 79, 148, 152, 175], "basic": [1, 6, 73], "construct": [1, 54, 58, 61, 63, 86, 114, 174, 188, 191, 207, 208, 216, 226, 232, 238, 240, 246, 248], "traversal": 1, "manipul": [1, 15, 19, 23, 34, 35, 43, 47, 48, 50, 51, 58, 63, 71, 72, 76, 170, 197, 207, 217, 225, 228, 237, 239, 242, 243], "familiariz": 1, "yourself": 1, "with": [1, 2, 4, 11, 29, 32, 33, 34, 42, 52, 53, 56, 71, 73, 77, 79, 98, 101, 114, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 167, 170, 175, 178, 189, 190, 191, 195, 196, 208, 214, 228, 229, 231, 237, 239, 240, 241, 246], "binary": [1, 69, 241], "ary": 1, "familiar": 1, "typ": [1, 2, 32, 40, 41, 42, 48, 52, 53, 54, 58, 60, 61, 63, 66, 67, 68, 70, 79, 86, 101, 103, 104, 107, 112, 135, 142, 148, 154, 156, 158, 160, 161, 167, 170, 174, 175, 176, 178, 179, 192, 196, 197, 199, 201, 202, 207, 209, 210, 216, 217, 226, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 244, 246, 248], "balanced": 1, "wheth": [1, 77], "red": [1, 11, 28, 48, 56, 64, 79, 108, 109, 139, 140, 141, 142, 143, 146, 147, 159, 178, 233], "black": [1, 11, 48, 152, 154, 233], "splay": 1, "avl": [1, 202], "implemented": [1, 142], "understand": 1, "treetraversal": 1, "bf": 1, "df": [1, 11, 28, 33, 39, 48, 53, 54, 56, 64, 70, 80, 87, 88, 90, 93, 101, 112, 117, 118, 121, 133, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 166, 167, 172, 173, 178, 182, 187, 188, 191, 192, 208, 240], "different": [1, 4, 11, 32, 33, 53, 114, 115, 116, 142, 195, 196, 243], "between": [1, 10, 11, 12, 13, 33, 195, 196, 243], "inord": 1, "postord": 1, "preord": 1, "are": [1, 32, 33, 52, 67, 140, 153, 175, 195, 196, 233, 240, 243], "ther": [1, 32, 67, 101, 153, 195, 196], "way": [1, 4, 7, 52, 53, 73, 169, 195, 196], "represent": [1, 11, 29, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 170, 189], "memory": [1, 11, 70, 134], "pointer": 1, "adjacency": 1, "each": [1, 10, 11, 32, 52, 53, 54, 55, 85, 87, 93, 95, 115, 116, 118, 125, 137, 142, 149, 163, 170, 171, 172, 182, 189, 195, 196, 198, 204, 214, 216], "pros": 1, "con": [1, 58, 86, 208], "breadth": 1, "first": [1, 11, 52, 101, 172, 195, 196], "depth": [1, 89], "their": [1, 4, 11, 195, 196], "computational": 1, "complexity": [1, 202, 216], "tradeoff": 1, "them": [1, 4, 11, 32, 55, 58, 243], "real": 1, "if": [1, 2, 4, 11, 29, 32, 33, 35, 37, 40, 41, 42, 43, 44, 48, 53, 61, 66, 67, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 152, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 181, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 214, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 233, 235, 239, 240, 241, 243, 244, 246, 248], "get": [1, 2, 4, 41, 42, 48, 52, 53, 69, 70, 71, 83, 93, 96, 97, 104, 113, 171, 174, 175, 178, 179, 182, 192, 198, 201, 202, 214, 225, 233, 235, 239, 240, 244, 246], "chanc": [1, 61, 63, 98, 121, 142, 150, 151, 170, 208, 243], "try": [1, 29, 35, 37, 40, 41, 42, 48, 52, 53, 55, 56, 71, 72, 82, 101, 103, 107, 112, 114, 121, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 189, 192, 206, 208, 209, 225, 229, 234, 239, 240, 244, 248], "study": [1, 33], "up": [1, 33, 53, 71], "fanci": 1, "such": [1, 4, 42, 195, 196, 248], "dijkstr": [1, 63], "other": [1, 11, 77, 101, 214, 233], "many": [1, 32, 33, 52, 87, 175, 195, 196, 239], "especially": 1, "famous": 1, "knapsack": 1, "recogniz": 1, "when": [1, 7, 11, 16, 195, 196], "ask": 1, "disguis": 1, "find": [1, 10, 11, 32, 33, 70, 71, 98, 178, 216, 240, 248], "out": [1, 11, 33, 42, 53, 67, 77, 101, 104, 106, 107, 138, 195, 196, 225, 229, 239], "whatnp": 1, "mean": [1, 52, 53, 54, 55, 56, 79, 85, 87, 88, 93, 95, 101, 114, 115, 116, 117, 118, 119, 120, 121, 125, 136, 139, 142, 143, 144, 145, 150, 152, 163, 170, 171, 172, 176, 182, 189, 198, 204, 214, 216, 219, 225], "mathematic": 1, "interviewer": 1, "discret": [1, 60, 64, 113, 141], "math": [1, 14, 43, 52, 53, 101, 102, 103, 108, 109, 119, 124, 135, 136, 137, 160, 168, 170, 182, 188, 191, 201, 203, 204, 207, 208, 210, 216, 218, 225, 229, 239, 243, 246], "question": [1, 22, 29, 32, 43, 52, 53, 55, 58, 63, 71, 76, 85, 88, 90, 91, 96, 97, 100, 101, 102, 103, 105, 110, 112, 113, 115, 117, 118, 119, 120, 122, 127, 136, 167, 178, 183, 203, 209, 217, 219, 225, 226, 233, 239, 246], "this": [1, 3, 4, 11, 29, 32, 33, 67, 77, 83, 95, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 189, 195, 196, 229, 239, 243, 246], "mor": [1, 6, 55, 58, 167], "prevalent": 1, "than": [1, 32, 33, 52, 58, 95, 145, 182, 195, 196], "compan": 1, "becaus": 1, "counting": 1, "probability": 1, "101": [1, 52, 56, 101, 126, 143], "surround": 1, "us": 1, "spend": [1, 195, 196], "befor": [1, 11, 32, 58, 101, 148, 150, 216], "refreshing": 1, "teaching": 1, "essential": 1, "combinatoric": 1, "choos": [1, 195, 196], "ilk": 1, "operating": [1, 26, 27, 30, 101, 131, 148, 150, 250], "process": [1, 4, 11, 248], "thread": [1, 34, 66, 233, 243, 245], "concurrency": 1, "lock": [1, 34, 245], "mutex": 1, "semaphor": [1, 246], "monitor": 1, "knowabout": 1, "deadlock": 1, "livelock": 1, "avoid": [1, 32, 97, 248], "what": [1, 4, 16, 52, 73, 169, 195, 196, 233, 243], "resourc": [1, 87, 233], "need": [1, 11, 33, 67], "context": [1, 228, 229, 239, 246], "switching": 1, "initiated": 1, "by": [1, 4, 10, 11, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 58, 71, 101, 174, 175, 176, 189, 195, 196, 208, 228, 243], "underlying": 1, "hardwar": 1, "littl": [1, 6], "scheduling": 1, "world": [1, 48, 53, 71], "rapidly": 1, "moving": [1, 58], "toward": 1, "mult": [1, 3, 58, 72, 131, 134], "cor": [1, 53, 56, 63, 67, 85, 114, 136, 138, 174, 175, 176, 184, 189, 194, 207, 229], "fundamental": 1, "modern": 1, "inform": [1, 2, 7, 14, 29, 32, 40, 41, 42, 43, 48, 53, 58, 63, 64, 71, 72, 76, 80, 83, 98, 100, 101, 117, 118, 135, 136, 140, 146, 154, 164, 167, 170, 175, 178, 179, 207, 210, 225, 228, 229, 231, 233, 235, 237, 239, 241, 243, 244, 248], "design": [1, 63, 142, 153, 225, 246], "distributed": [1, 58], "parallel": [1, 84, 117, 118, 179, 189, 233, 245, 246], "commentaire_accentu": [2, 5, 73], "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 23, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 52, 58, 64, 66, 69, 71, 72, 73, 75, 229, 233, 239, 243], "aid": [2, 29, 40, 44, 52, 58, 61, 71, 79, 84, 89, 90, 96, 114, 136, 137, 143, 163, 175, 183, 184, 187, 207, 208, 211, 212, 213, 216, 228, 233, 239, 240, 241, 243, 246, 248], "contient": [2, 10, 18, 35, 40, 43, 52, 53, 55, 56, 58, 61, 63, 71, 72, 75, 80, 81, 85, 97, 100, 101, 102, 104, 107, 110, 112, 125, 151, 164, 170, 179, 182, 187, 188, 191, 192, 197, 198, 199, 202, 207, 209, 213, 214, 217, 225, 228, 229, 233, 235, 237, 239, 240, 241, 243, 246, 248], "assur": [2, 25, 52, 58, 64, 71, 76, 81, 97, 112, 137, 152, 166, 175, 181, 187, 219, 233, 243, 244, 246], "langag": [2, 4, 6, 19, 23, 40, 41, 43, 50, 52, 53, 55, 56, 63, 68, 72, 74, 75, 76, 89, 90, 102, 103, 113, 115, 116, 156, 160, 162, 170, 174, 175, 179, 181, 197, 198, 199, 207, 208, 209, 214, 217, 226, 227, 228, 229, 231, 233, 234, 235, 238, 241, 243, 244, 245, 246, 248], "con\u00e7u": [2, 73, 76, 152, 241, 243], "anglais": [2, 4, 32, 55, 58, 60, 62, 63, 64, 72, 73, 80, 86, 94, 153, 170, 174, 187, 213, 214, 215, 237, 240, 241, 244, 248], "ajout": [0, 2, 4, 7, 9, 10, 35, 43, 48, 52, 53, 55, 58, 61, 64, 71, 72, 73, 76, 83, 85, 87, 90, 97, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 115, 117, 118, 119, 120, 122, 124, 136, 142, 145, 153, 154, 161, 167, 170, 175, 177, 179, 182, 197, 198, 200, 202, 206, 207, 209, 210, 214, 216, 217, 226, 227, 228, 229, 233, 236, 240, 244, 246, 248], "fait": [2, 4, 14, 17, 21, 29, 32, 34, 37, 40, 41, 43, 44, 52, 53, 55, 58, 60, 61, 62, 63, 64, 71, 72, 73, 75, 76, 79, 81, 82, 84, 86, 89, 90, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 121, 123, 125, 134, 137, 143, 147, 148, 149, 150, 152, 153, 154, 156, 157, 160, 162, 163, 165, 166, 167, 168, 170, 172, 174, 175, 176, 177, 179, 183, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 207, 208, 209, 212, 215, 216, 217, 225, 228, 233, 235, 236, 239, 240, 241, 243, 244, 246], "alphabet": [2, 43, 73, 89, 98, 105, 201, 216, 223, 239], "ponctuat": [2, 73], "compris": [2, 40, 63, 73, 155, 240, 248], "d\u00e9clench": [2, 4, 52, 71, 73, 104, 107, 112, 116, 158, 201, 210, 218, 225, 228, 231, 233, 239, 240, 246], "erreur": [2, 4, 41, 44, 52, 53, 55, 58, 60, 61, 64, 66, 68, 72, 73, 76, 79, 83, 95, 101, 102, 104, 105, 106, 107, 112, 113, 114, 115, 117, 118, 122, 134, 135, 137, 140, 145, 148, 149, 150, 152, 154, 156, 160, 180, 181, 183, 184, 191, 201, 204, 209, 210, 217, 218, 225, 230, 231, 233, 235, 237, 239, 240], "fil": [2, 4, 11, 30, 42, 45, 46, 66, 69, 71, 73, 76, 77, 106, 112, 155, 157, 191, 216, 219, 225, 228, 229, 233, 235, 239, 240, 241, 243, 245, 248, 250], "faq_cvxopt": [2, 73], "py": [2, 4, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51, 52, 55, 56, 66, 71, 73, 76, 86, 87, 101, 110, 135, 140, 142, 143, 145, 148, 150, 174, 175, 176, 189, 204, 207, 208, 212, 229, 233, 235, 239, 240, 241, 243, 250], "lin": [2, 4, 11, 29, 44, 51, 52, 53, 61, 66, 71, 73, 76, 101, 103, 106, 109, 115, 116, 134, 135, 137, 170, 174, 192, 206, 216, 225, 228, 229, 231, 233, 235, 239, 240, 243, 248], "syntaxerror": [2, 71, 73, 76, 106, 228, 239, 240], "utf": [2, 53, 56, 73, 76, 98, 166, 170, 207, 208, 214, 229, 233, 237, 240, 241], "starting": [2, 73, 240], "\u00e8": [2, 73, 89, 214], "but": [2, 14, 32, 33, 43, 52, 61, 64, 73, 76, 77, 142, 175, 233, 240], "no": [2, 11, 33, 42, 53, 61, 67, 73, 76, 77, 101, 104, 134, 140, 141, 142, 143, 153, 169, 190, 192, 208, 225, 233, 240, 248], "encoding": [2, 53, 56, 71, 73, 76, 113, 170, 207, 208, 214, 229, 238, 240], "declared": [2, 73, 76, 240], "see": [2, 7, 10, 11, 12, 13, 52, 67, 73, 76, 98, 175, 235, 240], "http": [2, 4, 7, 32, 48, 52, 53, 56, 67, 69, 73, 76, 84, 87, 89, 97, 98, 101, 121, 136, 140, 142, 143, 162, 167, 170, 175, 178, 191, 192, 207, 208, 213, 214, 216, 240], "org": [2, 4, 29, 32, 52, 56, 73, 76, 84, 89, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 162, 175, 189, 208, 240], "dev": [0, 2, 19, 23, 52, 53, 54, 58, 67, 73, 85, 93, 95, 96, 115, 116, 118, 125, 163, 170, 171, 172, 182, 189, 198, 204, 208, 214, 216, 233, 240, 243], "pep": [2, 73, 76, 240], "0263": [2, 73, 76, 240], "Pour": [2, 4, 12, 13, 14, 16, 29, 32, 35, 40, 41, 42, 43, 44, 52, 53, 54, 55, 60, 61, 63, 64, 66, 71, 73, 76, 79, 80, 81, 83, 85, 86, 87, 91, 93, 96, 97, 98, 101, 102, 103, 104, 107, 110, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 133, 134, 136, 140, 147, 149, 150, 152, 153, 156, 159, 162, 163, 169, 170, 174, 176, 178, 179, 182, 183, 185, 186, 187, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 208, 209, 210, 213, 216, 217, 219, 225, 228, 229, 233, 235, 237, 239, 240, 241, 243, 244, 246, 248], "r\u00e9soudr": [2, 18, 52, 58, 60, 63, 64, 73, 87, 90, 97, 110, 134, 187, 191, 196, 225, 240, 246], "interpr\u00e9teur": [2, 4, 34, 71, 72, 73, 76, 90, 154, 159, 175, 210, 225, 228, 229, 239, 240, 243], "peuvent": [2, 41, 53, 58, 60, 61, 63, 66, 71, 72, 73, 76, 79, 97, 104, 117, 118, 126, 154, 170, 191, 193, 201, 217, 225, 228, 233, 235, 237, 239, 240, 241, 243, 246], "appara\u00eetr": [2, 29, 42, 71, 73, 97, 172, 225, 233, 239, 240, 241], "\u00e9crir": [2, 4, 22, 23, 35, 36, 40, 43, 53, 55, 57, 63, 64, 68, 73, 76, 79, 85, 92, 93, 96, 97, 106, 111, 112, 117, 118, 119, 120, 126, 142, 156, 160, 161, 164, 166, 168, 171, 179, 180, 183, 191, 197, 198, 199, 201, 203, 204, 207, 208, 209, 210, 213, 215, 216, 217, 218, 219, 225, 229, 233, 235, 237, 239, 240, 241, 243, 244, 246, 248], "lign": [2, 4, 6, 8, 11, 17, 29, 40, 41, 43, 48, 51, 52, 53, 54, 55, 63, 71, 73, 76, 79, 80, 84, 85, 86, 89, 93, 96, 97, 104, 106, 107, 109, 110, 112, 114, 117, 118, 122, 125, 136, 154, 155, 167, 170, 174, 175, 179, 183, 184, 191, 193, 197, 198, 201, 202, 206, 207, 208, 209, 210, 217, 218, 222, 228, 229, 234, 235, 237, 239, 240, 241, 243, 246, 248], "latin": [2, 73, 208, 214, 223, 237, 240], "Ou": [2, 25, 36, 53, 71, 73, 87, 101, 106, 107, 114, 126, 138, 147, 156, 167, 197, 233, 239, 240, 241], "chinois": [2, 73, 97, 214], "\u00e9diteur": [2, 4, 73, 76, 237, 240, 241], "scit": [2, 4, 73], "window": [2, 10, 25, 56, 71, 76, 237, 240, 241], "conseil": [2, 52, 53, 58, 60, 68, 73, 97, 113, 199, 208, 225, 235, 239, 240, 243, 246, 248], "ferm": [2, 52, 58, 71, 73, 123, 207, 211, 212, 228, 229, 241], "fichi": [2, 21, 42, 56, 68, 87, 100, 101, 132, 167, 170, 181, 191, 192, 225, 228, 229, 233, 235, 236, 238, 239, 240, 242, 246, 248], "puis": [2, 4, 10, 16, 20, 22, 24, 38, 44, 53, 54, 55, 56, 58, 60, 61, 71, 72, 73, 76, 79, 83, 87, 88, 91, 97, 98, 101, 103, 110, 115, 116, 117, 119, 120, 121, 138, 145, 155, 156, 159, 162, 168, 173, 182, 201, 202, 204, 207, 216, 218, 220, 225, 231, 233, 235, 239, 240, 241, 243, 244, 246, 248], "r\u00e9ouvr": [2, 73, 241], "trait": [2, 4, 10, 14, 22, 40, 43, 53, 58, 60, 63, 64, 72, 73, 79, 85, 96, 112, 115, 164, 169, 182, 191, 202, 208, 228, 233, 239, 240, 241, 245, 246, 248], "encodag": [2, 73, 228, 237], "norm": [2, 9, 10, 64, 71, 73, 137, 139, 152, 153, 168, 176, 197, 214, 225], "internet": [2, 4, 41, 53, 58, 71, 73, 75, 76, 79, 96, 97, 170, 178, 207, 208, 213, 229, 233, 240, 241, 243, 244, 246], "pourquoi": [2, 6, 14, 35, 43, 52, 56, 58, 61, 71, 79, 83, 85, 87, 90, 96, 97, 104, 106, 107, 117, 118, 127, 134, 136, 137, 143, 163, 170, 179, 197, 201, 207, 209, 216, 222, 225, 228, 233, 239, 240, 241, 243, 246, 248], "pr\u00e9fer": [2, 4, 29, 41, 43, 58, 61, 62, 64, 71, 73, 76, 103, 110, 112, 137, 140, 164, 179, 213, 225, 228, 229, 231, 233, 235, 239, 240, 241, 243, 244], "partag": [2, 52, 53, 61, 66, 72, 73, 76, 83, 89, 101, 148, 225, 233], "pag": [2, 4, 29, 52, 53, 55, 56, 63, 71, 73, 76, 97, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 166, 170, 174, 178, 189, 201, 202, 211, 212, 213, 216, 239, 240, 243, 245, 246, 248], "dictionnaire_modifie_dans_la_boucl": [2, 5, 235], "boucl": [2, 19, 23, 34, 35, 40, 43, 44, 53, 55, 57, 66, 68, 85, 86, 89, 90, 93, 95, 97, 102, 103, 104, 105, 106, 107, 110, 112, 115, 116, 132, 149, 162, 164, 168, 180, 198, 209, 215, 220, 225, 228, 229, 231, 233, 235, 238, 246], "parcourt": [2, 41, 44, 61, 71, 85, 89, 90, 95, 97, 104, 105, 198, 233, 235, 239, 241], "\u00e9vit": [2, 14, 40, 44, 54, 55, 56, 58, 61, 66, 71, 85, 86, 91, 93, 96, 97, 101, 102, 104, 110, 112, 114, 117, 119, 120, 134, 137, 159, 165, 183, 187, 194, 197, 201, 204, 208, 212, 216, 225, 233, 235, 236, 237, 239, 240, 241, 243, 244, 246, 248], "contain": [2, 10, 11, 32, 122, 158, 197, 202, 235], "supprim": [2, 4, 9, 10, 21, 53, 56, 60, 61, 71, 73, 86, 97, 101, 104, 135, 137, 187, 188, 191, 207, 217, 225, 229, 231, 233, 235, 239, 240, 241, 243, 246], "ancien": [2, 199, 208, 225, 233, 235], "d\u00e9but": [2, 4, 53, 55, 56, 66, 71, 73, 84, 86, 97, 112, 142, 147, 161, 170, 176, 177, 216, 225, 233, 234, 235, 239, 240, 243, 246, 248], "rang": [2, 10, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 52, 53, 54, 56, 57, 58, 63, 66, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 140, 142, 143, 149, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 188, 190, 191, 192, 194, 197, 198, 199, 200, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 233, 234, 235, 239, 241, 243, 246], "v": [2, 9, 48, 52, 53, 58, 61, 64, 72, 80, 89, 93, 96, 97, 103, 105, 113, 116, 117, 123, 126, 133, 135, 155, 156, 157, 172, 177, 179, 182, 183, 184, 187, 188, 191, 192, 193, 194, 199, 200, 201, 202, 208, 214, 216, 217, 218, 219, 222, 225, 228, 233, 235, 239, 248], "item": [2, 11, 71, 89, 93, 96, 97, 103, 104, 105, 110, 113, 125, 126, 133, 152, 166, 167, 170, 171, 175, 176, 178, 179, 182, 188, 201, 214, 216, 223, 225, 234, 235, 240], "del": [2, 41, 71, 87, 90, 104, 107, 119, 137, 175, 181, 207, 217, 225, 235, 239, 240, 241], "pr\u00e9viennent": [2, 235], "intervient": [2, 29, 43, 58, 63, 79, 228, 235, 239, 244], "tard": [2, 58, 64, 66, 71, 79, 95, 213, 228, 231, 233, 235, 239, 240, 246], "valeur": [2, 7, 10, 22, 35, 36, 43, 52, 53, 58, 60, 63, 64, 66, 71, 76, 79, 85, 87, 88, 89, 93, 101, 103, 104, 105, 106, 110, 112, 113, 114, 115, 116, 120, 121, 127, 134, 135, 137, 138, 139, 143, 149, 150, 152, 153, 162, 164, 173, 174, 176, 179, 182, 183, 184, 185, 186, 187, 188, 191, 199, 202, 203, 204, 207, 208, 209, 210, 213, 214, 216, 217, 218, 225, 233, 234, 235, 236, 237, 240, 241, 243], "numer": [2, 4, 22, 35, 43, 50, 52, 53, 58, 62, 72, 73, 76, 105, 112, 113, 117, 118, 137, 146, 162, 164, 176, 181, 183, 184, 187, 191, 197, 204, 207, 213, 217, 225, 235, 239, 240, 241, 244, 245, 248], "inattendu": [2, 207, 229, 235, 239], "traceback": [2, 4, 53, 66, 71, 73, 103, 104, 106, 107, 112, 192, 225, 228, 229, 233, 235, 239, 240, 248], "call": [2, 4, 11, 53, 58, 66, 71, 73, 103, 104, 106, 107, 112, 174, 175, 176, 189, 192, 225, 228, 230, 233, 235, 239, 240, 248], "session1": [2, 235], "176": [2, 57, 112, 153, 159, 235], "liste_modifie_dans_la_boucl": [2, 235], "169": [2, 87, 144, 153, 229, 235], "runtimeerror": [2, 97, 122, 142, 235, 240], "changed": [2, 97, 235, 240], "siz": [2, 9, 10, 11, 12, 13, 42, 44, 52, 70, 79, 80, 84, 88, 97, 101, 114, 117, 118, 135, 138, 152, 172, 211, 212, 233, 235, 240, 241], "during": [2, 97, 235, 240], "stock": [2, 12, 13, 41, 55, 56, 58, 72, 76, 79, 123, 137, 155, 161, 167, 174, 179, 201, 202, 209, 227, 235, 240, 241, 244, 248], "ensuit": [2, 32, 40, 48, 52, 53, 56, 58, 61, 62, 72, 76, 90, 91, 95, 97, 101, 134, 137, 165, 166, 167, 174, 177, 183, 197, 201, 204, 213, 223, 225, 227, 228, 233, 235, 239, 240, 244, 246, 248], "rem": [2, 176, 235], "append": [2, 32, 33, 34, 35, 37, 42, 52, 56, 71, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 93, 96, 97, 98, 103, 104, 105, 106, 107, 109, 110, 112, 113, 117, 118, 119, 120, 121, 125, 126, 127, 133, 134, 135, 137, 138, 142, 143, 149, 152, 153, 155, 156, 157, 158, 159, 161, 162, 164, 167, 168, 172, 173, 175, 176, 178, 179, 181, 182, 190, 192, 194, 198, 199, 200, 202, 206, 207, 211, 212, 216, 217, 220, 225, 233, 234, 235, 239, 240, 241, 243, 246, 248], "r": [2, 4, 10, 22, 29, 32, 35, 41, 42, 44, 48, 52, 53, 56, 58, 60, 63, 64, 69, 70, 71, 72, 73, 79, 83, 85, 86, 87, 88, 89, 90, 92, 95, 96, 98, 101, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 134, 135, 137, 141, 147, 149, 152, 153, 154, 165, 167, 168, 170, 175, 176, 185, 186, 191, 192, 194, 195, 196, 202, 207, 208, 210, 211, 212, 214, 216, 217, 223, 225, 229, 233, 235, 237, 239, 241, 243, 244, 246, 248], "autoris": [2, 96, 116, 156, 208, 225, 233, 235, 236, 239, 241, 243, 246], "absten": [2, 235], "ains": [2, 53, 58, 61, 71, 79, 102, 106, 110, 118, 155, 166, 190, 210, 218, 225, 228, 229, 233, 235, 239, 240, 241, 246], "habitud": [2, 14, 76, 101, 208, 235, 239], "serv": [2, 41, 52, 53, 56, 58, 71, 72, 87, 95, 100, 101, 112, 113, 115, 116, 172, 183, 201, 208, 225, 233, 235, 239, 240, 241, 248], "dix_entiers_carr": [2, 5, 73, 235], "renvoi": [2, 3, 4, 6, 7, 9, 10, 11, 13, 52, 53, 79, 105, 216, 225, 233], "r\u00e9el": [2, 4, 43, 55, 58, 64, 66, 71, 72, 73, 79, 112, 134, 164, 167, 179, 197, 217, 218, 225, 236, 238, 239, 241, 244], "standard": [2, 4, 19, 23, 40, 41, 52, 53, 70, 71, 73, 101, 153, 170, 197, 202, 207, 216, 225, 228, 234, 237, 239, 241, 243, 246], "moment": [2, 14, 36, 52, 54, 58, 64, 73, 76, 84, 112, 135, 137, 146, 148, 154, 155, 157, 163, 170, 204, 208, 209, 216, 217, 225, 233, 237, 239, 240, 241, 246], "impact": [2, 11, 14, 22, 58, 61, 71, 72, 73, 76, 153, 239, 240], "d\u00e9roul": [2, 53, 62, 73, 96, 233, 239, 241], "mot": [2, 20, 24, 36, 53, 60, 65, 73, 96, 98, 103, 106, 107, 110, 128, 155, 166, 199, 202, 207, 208, 209, 213, 215, 216, 223, 225, 228, 233, 235, 239, 240, 241, 243, 246, 248], "cl\u00e9": [2, 35, 36, 40, 53, 56, 60, 65, 72, 73, 93, 97, 98, 103, 104, 105, 113, 127, 155, 160, 179, 181, 185, 186, 199, 202, 207, 209, 213, 216, 225, 228, 235, 239, 241, 243, 246, 248], "rencontr": [2, 71, 73, 153, 201, 225, 228, 239, 241, 243], "commenc": [2, 4, 12, 13, 14, 29, 32, 35, 52, 58, 62, 63, 64, 71, 72, 73, 76, 81, 83, 84, 95, 96, 97, 101, 102, 105, 112, 113, 121, 122, 126, 135, 150, 165, 179, 194, 201, 204, 207, 208, 213, 217, 218, 223, 233, 239, 240, 241, 246, 248], "quitt": [2, 58, 73, 208, 213, 218, 239], "transmet": [2, 73], "modif": [2, 9, 10, 43, 44, 52, 53, 58, 60, 61, 66, 71, 73, 76, 80, 82, 87, 91, 97, 104, 110, 117, 118, 169, 172, 199, 201, 202, 216, 225, 233, 236, 239, 240, 241, 243, 246], "votr": [2, 4, 35, 73, 76, 100, 101, 107, 112, 114, 118, 126, 161, 181, 183, 184, 197, 208, 213, 241, 243, 244], "algorithm": [2, 7, 8, 10, 17, 19, 20, 22, 23, 24, 32, 35, 40, 44, 58, 60, 64, 71, 73, 74, 75, 83, 85, 86, 91, 94, 96, 98, 103, 104, 110, 112, 114, 115, 116, 119, 120, 122, 124, 136, 156, 164, 166, 168, 175, 177, 181, 182, 187, 188, 189, 190, 192, 199, 204, 215, 217, 218, 219, 225, 228, 235, 238, 248], "sp\u00e9cif": [2, 43, 52, 53, 71, 73, 121, 126, 197, 225, 233, 234, 237, 241, 243, 244, 245], "diff\u00e8rent": [2, 235], "mani": [2, 4, 29, 32, 43, 52, 53, 58, 60, 61, 63, 71, 72, 73, 79, 136, 144, 149, 156, 171, 191, 210, 225, 228, 229, 233, 235, 237, 239, 240, 241, 244, 246], "i": [2, 6, 10, 22, 29, 32, 33, 34, 35, 37, 38, 40, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 70, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 148, 152, 154, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 231, 233, 234, 235, 239, 240, 241, 243, 246], "11": [2, 4, 11, 19, 23, 25, 28, 32, 33, 38, 43, 44, 48, 52, 53, 54, 56, 58, 63, 64, 69, 70, 71, 73, 76, 79, 80, 81, 83, 85, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 158, 159, 163, 167, 168, 172, 173, 174, 175, 179, 180, 182, 184, 187, 188, 190, 192, 202, 204, 207, 208, 210, 214, 216, 217, 220, 225, 228, 229, 235, 236, 239, 240, 246], "D": [2, 11, 14, 43, 54, 58, 64, 79, 81, 86, 87, 88, 96, 101, 105, 111, 132, 136, 154, 155, 157, 161, 166, 185, 186, 187, 194, 202, 208, 234, 235, 240, 241, 243, 244, 248], "abreg": [2, 16, 71, 210, 235, 240], "sum": [2, 6, 33, 39, 51, 52, 53, 55, 56, 57, 66, 71, 80, 84, 85, 86, 87, 88, 91, 95, 97, 101, 102, 103, 104, 106, 113, 114, 115, 116, 121, 125, 134, 137, 158, 162, 168, 175, 180, 188, 189, 190, 198, 199, 200, 201, 210, 214, 219, 235, 239, 240, 248], "repetition_a_evit": [2, 5, 235], "a_evit": 2, "fals": [2, 3, 4, 7, 10, 11, 12, 13, 29, 32, 39, 40, 42, 52, 53, 55, 56, 69, 71, 73, 80, 83, 84, 86, 87, 91, 93, 98, 101, 102, 121, 122, 134, 135, 137, 139, 140, 143, 145, 147, 150, 151, 153, 157, 158, 159, 165, 167, 168, 175, 178, 181, 197, 198, 202, 216, 225, 228, 233, 239, 240, 246], "r\u00e9p\u00e9tit": [2, 85, 96, 98, 209, 217, 239, 240, 241, 243, 246], "varianc": [2, 43, 58, 64, 86, 104, 113, 114, 117, 118, 139, 183, 184, 204, 235], "observ": [2, 14, 22, 29, 44, 53, 58, 62, 63, 64, 72, 87, 88, 101, 113, 114, 115, 116, 135, 136, 137, 138, 139, 141, 152, 153, 162, 180, 182, 189, 193, 194, 212, 217, 233, 235, 246], "moyen": [2, 4, 9, 14, 20, 24, 29, 34, 41, 43, 48, 52, 56, 64, 71, 72, 73, 79, 85, 87, 88, 100, 101, 104, 112, 113, 114, 126, 134, 136, 137, 139, 140, 142, 150, 152, 179, 183, 184, 190, 193, 199, 200, 203, 204, 209, 212, 216, 218, 221, 224, 225, 233, 235, 239, 241, 243, 248], "len": [2, 10, 32, 33, 35, 40, 42, 43, 44, 48, 52, 53, 71, 79, 80, 81, 82, 83, 85, 86, 89, 90, 91, 93, 94, 96, 97, 98, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 122, 126, 127, 135, 136, 137, 138, 140, 142, 144, 148, 151, 156, 158, 159, 161, 162, 163, 166, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 181, 182, 188, 190, 192, 198, 199, 200, 201, 202, 206, 207, 216, 217, 218, 219, 220, 222, 223, 225, 231, 233, 235, 237, 239, 240, 241, 243, 248], "variance_a_evit": [2, 235], "ob": [2, 80, 88, 90, 93, 95, 113, 137, 159, 167, 181, 235], "passag": [2, 43, 52, 58, 71, 104, 161, 162, 191, 217, 222, 235, 237, 239, 240, 241], "rien": [2, 4, 18, 34, 44, 48, 53, 58, 62, 64, 71, 73, 101, 102, 112, 117, 118, 125, 134, 136, 137, 142, 143, 145, 150, 154, 160, 168, 178, 197, 207, 208, 217, 225, 227, 233, 235, 239, 241, 243, 246], "chang": [2, 4, 7, 10, 11, 14, 22, 24, 29, 36, 44, 52, 53, 55, 56, 58, 61, 63, 64, 69, 71, 73, 75, 76, 79, 80, 84, 86, 88, 90, 91, 97, 113, 117, 118, 121, 125, 142, 143, 154, 162, 178, 191, 198, 199, 202, 208, 212, 216, 218, 225, 231, 233, 234, 235, 237, 239, 240, 241, 246], "vaut": [2, 22, 40, 54, 58, 63, 64, 66, 71, 87, 93, 100, 101, 104, 105, 106, 113, 114, 157, 167, 170, 197, 201, 217, 218, 225, 233, 235, 239, 240, 243, 244, 246], "variabl": [2, 4, 22, 29, 36, 40, 43, 52, 53, 55, 58, 61, 64, 67, 68, 73, 76, 79, 86, 102, 104, 105, 107, 112, 113, 117, 118, 128, 132, 133, 136, 137, 139, 141, 146, 149, 151, 153, 154, 155, 158, 160, 161, 162, 167, 168, 174, 179, 180, 193, 197, 198, 202, 204, 207, 209, 210, 216, 225, 227, 228, 229, 233, 235, 237, 241, 243, 244, 246, 249], "moy": [2, 113, 204, 239], "co\u00fbt": [2, 6, 35, 40, 44, 53, 58, 60, 61, 63, 64, 73, 83, 85, 89, 90, 92, 93, 97, 102, 103, 104, 110, 117, 118, 132, 162, 177, 179, 182, 190, 191, 192, 202, 215, 216, 217, 218, 223, 225], "alor": [2, 4, 10, 14, 35, 43, 52, 53, 58, 60, 61, 63, 64, 71, 72, 73, 76, 79, 80, 84, 85, 86, 87, 89, 90, 92, 93, 96, 97, 101, 102, 112, 113, 114, 134, 136, 137, 147, 153, 164, 172, 175, 179, 182, 183, 187, 191, 194, 195, 196, 202, 204, 206, 208, 216, 225, 228, 229, 233, 235, 239, 240, 241, 243, 246], "endroit": [2, 63, 71, 76, 97, 115, 167, 225, 229, 231, 233, 237, 239, 240, 241, 243, 246], "survient": [2, 58, 112, 138, 225, 228, 229, 233, 239, 240, 246], "suiv": [2, 4, 7, 14, 19, 23, 32, 35, 43, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 66, 71, 73, 76, 81, 85, 87, 89, 93, 96, 97, 98, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 116, 128, 132, 136, 138, 142, 155, 156, 162, 164, 168, 169, 170, 174, 175, 177, 179, 181, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 196, 199, 201, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 248], "major": [2, 55, 61, 101, 152, 179, 204, 216, 227], "argument": [2, 4, 36, 39, 52, 53, 58, 71, 103, 115, 116, 181, 183, 195, 196, 199, 200, 213, 225, 228, 233, 239, 240, 241, 243, 246], "retourn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 35, 38, 43, 44, 51, 52, 53, 54, 58, 60, 61, 63, 64, 66, 71, 72, 73, 81, 83, 85, 90, 91, 93, 95, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 134, 142, 147, 154, 155, 156, 164, 166, 172, 177, 179, 181, 183, 184, 194, 196, 199, 201, 202, 212, 213, 215, 217, 219, 223, 225, 228, 229, 233, 234, 235, 236, 237, 239, 240, 241, 246, 248], "quelqu": [2, 4, 6, 14, 21, 22, 32, 38, 43, 44, 51, 52, 53, 55, 60, 61, 62, 64, 68, 71, 73, 76, 79, 83, 86, 87, 89, 90, 91, 93, 96, 97, 102, 103, 104, 105, 107, 110, 113, 115, 119, 120, 123, 128, 136, 138, 140, 147, 149, 153, 156, 163, 165, 169, 170, 175, 181, 183, 187, 188, 201, 206, 207, 208, 209, 217, 225, 228, 233, 235, 236, 239, 240, 241, 243, 246], "chos": [2, 14, 21, 22, 41, 43, 44, 53, 58, 62, 63, 64, 71, 76, 89, 90, 91, 96, 97, 101, 102, 103, 105, 113, 122, 126, 134, 156, 160, 170, 175, 176, 179, 199, 204, 206, 207, 208, 209, 216, 225, 227, 228, 233, 236, 239, 240, 241, 242, 243, 246], "tru": [2, 4, 10, 11, 28, 29, 32, 33, 40, 42, 48, 52, 53, 55, 56, 58, 67, 69, 71, 73, 79, 80, 83, 84, 86, 87, 90, 91, 93, 96, 97, 98, 101, 102, 112, 119, 120, 121, 122, 134, 135, 137, 139, 140, 142, 143, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 162, 165, 168, 172, 175, 178, 181, 188, 194, 197, 198, 201, 202, 206, 207, 208, 214, 216, 217, 225, 228, 231, 233, 240, 241, 246], "leaf": [2, 86], "guess": [2, 142], "str2dat": [2, 5, 235], "fmt": [2, 11, 246], "Y": [2, 10, 14, 29, 40, 52, 58, 63, 64, 72, 96, 112, 113, 114, 115, 116, 117, 118, 135, 136, 137, 138, 163, 174, 207, 208, 233, 235, 236, 240], "convert": [2, 4, 6, 11, 22, 41, 48, 53, 54, 55, 56, 63, 64, 71, 73, 101, 106, 112, 113, 121, 136, 148, 150, 154, 170, 175, 191, 201, 207, 208, 210, 225, 228, 235, 236, 237, 239, 240, 241, 243, 244], "format": [2, 4, 11, 19, 23, 33, 41, 48, 52, 53, 56, 63, 71, 79, 81, 85, 87, 92, 93, 96, 101, 112, 113, 142, 152, 172, 178, 183, 184, 190, 197, 208, 216, 217, 225, 228, 231, 233, 235, 237, 238, 242, 243, 244, 246, 248], "genr": [2, 14, 58, 100, 101, 208, 225, 235, 239, 248], "souvent": [2, 4, 14, 29, 43, 48, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 71, 73, 75, 76, 79, 83, 86, 90, 104, 107, 112, 114, 117, 118, 128, 134, 137, 140, 157, 159, 160, 163, 174, 175, 177, 181, 197, 201, 207, 209, 216, 217, 223, 225, 228, 229, 231, 233, 234, 235, 239, 240, 241, 243, 244, 246, 248], "pein": [2, 102, 208, 218, 235], "retrouv": [2, 14, 17, 53, 54, 56, 58, 60, 62, 63, 87, 88, 90, 98, 113, 115, 137, 147, 164, 174, 179, 194, 201, 202, 207, 215, 216, 217, 225, 233, 235, 239, 240, 241, 246, 248], "besoin": [2, 4, 14, 29, 41, 43, 48, 52, 53, 57, 58, 63, 71, 73, 76, 90, 93, 97, 110, 112, 122, 156, 172, 179, 197, 201, 208, 209, 225, 229, 231, 235, 237, 240, 241, 243, 244, 246], "strftim": [2, 4, 73, 235, 236], "dt": [2, 4, 73, 87, 88, 93, 101, 121, 133, 190, 216, 235], "strptim": [2, 53, 235], "16": [2, 4, 32, 43, 44, 48, 52, 53, 54, 55, 56, 58, 71, 73, 79, 80, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 101, 103, 104, 105, 107, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 156, 159, 162, 163, 164, 166, 167, 173, 174, 175, 179, 184, 187, 188, 190, 197, 198, 204, 206, 207, 208, 210, 212, 216, 217, 218, 225, 235, 236, 237, 239, 240], "01": [2, 11, 25, 35, 43, 45, 52, 53, 56, 79, 80, 97, 101, 113, 114, 117, 118, 126, 133, 134, 137, 140, 141, 153, 168, 184, 188, 207, 235, 250], "2014": [2, 53, 99, 195, 196, 235], "compt": [2, 4, 5, 9, 14, 35, 39, 43, 53, 58, 60, 61, 62, 63, 72, 73, 83, 84, 85, 87, 97, 98, 101, 103, 104, 112, 113, 115, 116, 117, 118, 121, 122, 123, 150, 151, 157, 168, 171, 174, 179, 181, 197, 201, 207, 208, 209, 213, 216, 225, 231, 234, 235, 239, 240, 241, 243, 246, 248], "li": [2, 21, 29, 32, 35, 43, 61, 63, 71, 85, 87, 104, 136, 161, 177, 179, 184, 188, 208, 217, 225, 227, 233, 235, 239, 240, 241, 243, 244, 248], "occurrent": [2, 35, 71, 98, 213, 235, 240], "tableau": [2, 35, 38, 40, 43, 50, 51, 54, 58, 63, 72, 80, 84, 86, 90, 102, 106, 110, 115, 118, 132, 140, 156, 161, 165, 168, 170, 172, 174, 178, 182, 191, 192, 193, 194, 197, 198, 202, 206, 216, 217, 218, 228, 235, 240, 241, 246, 248], "Par": [2, 4, 22, 35, 43, 44, 52, 53, 56, 58, 60, 61, 63, 71, 73, 76, 85, 86, 98, 102, 103, 104, 112, 114, 122, 134, 158, 182, 188, 191, 207, 216, 217, 218, 225, 228, 233, 235, 237, 239, 240, 241, 246, 248], "exempl": [0, 2, 4, 22, 29, 32, 35, 42, 43, 44, 53, 60, 61, 62, 63, 64, 66, 71, 73, 74, 75, 76, 79, 83, 88, 96, 98, 103, 106, 107, 110, 112, 115, 116, 119, 120, 125, 132, 133, 136, 137, 140, 146, 148, 151, 152, 155, 161, 166, 174, 178, 179, 181, 182, 183, 191, 193, 196, 197, 199, 201, 203, 207, 208, 211, 212, 215, 216, 217, 219, 229, 230, 233, 234, 235, 236, 237, 244, 246], "pourr": [2, 14, 22, 44, 52, 53, 56, 58, 61, 62, 64, 72, 84, 85, 88, 89, 90, 91, 96, 97, 104, 112, 115, 116, 122, 127, 133, 134, 135, 142, 148, 154, 159, 166, 169, 170, 181, 191, 202, 203, 207, 208, 213, 216, 219, 225, 228, 229, 231, 233, 235, 239, 240, 241, 246], "popular": [2, 235, 243], "discour": [2, 207, 208, 235], "polit": [2, 58, 235], "\u00e9tendu": [2, 60, 101, 233, 235, 239], "vocabulair": [2, 64, 158, 197, 235], "not": [2, 3, 4, 11, 15, 19, 20, 22, 23, 24, 29, 32, 35, 41, 43, 52, 53, 58, 60, 62, 63, 64, 68, 70, 71, 77, 79, 80, 83, 86, 87, 89, 91, 93, 97, 101, 103, 104, 105, 107, 122, 125, 126, 130, 131, 134, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 157, 159, 166, 175, 180, 183, 187, 188, 191, 192, 193, 195, 196, 198, 203, 204, 207, 208, 214, 216, 218, 221, 223, 224, 225, 228, 229, 233, 235, 239, 240, 241, 244, 246, 248], "else": [2, 4, 29, 32, 33, 35, 41, 42, 48, 71, 72, 73, 76, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 102, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 134, 138, 140, 142, 143, 152, 154, 155, 156, 157, 158, 159, 163, 166, 168, 171, 172, 175, 177, 179, 181, 188, 190, 192, 194, 197, 198, 199, 200, 201, 204, 206, 209, 214, 216, 217, 218, 219, 220, 223, 225, 228, 229, 233, 235, 240, 241, 243, 244], "appropri": [2, 22, 63, 71, 225, 235], "puisqu": [2, 14, 38, 52, 56, 58, 61, 63, 64, 87, 90, 93, 95, 96, 97, 101, 102, 104, 105, 110, 117, 134, 137, 148, 149, 162, 168, 174, 175, 182, 201, 204, 218, 225, 228, 233, 235, 239, 240, 246], "faudr": [2, 4, 14, 43, 53, 55, 58, 62, 63, 64, 71, 72, 73, 80, 87, 88, 90, 96, 100, 101, 105, 112, 117, 118, 119, 120, 121, 122, 125, 142, 143, 145, 150, 155, 156, 169, 170, 191, 201, 213, 225, 233, 235, 239, 240, 243, 246, 248], "ceux": [2, 4, 29, 32, 52, 54, 55, 58, 63, 64, 71, 72, 73, 75, 76, 83, 87, 97, 107, 122, 135, 137, 140, 145, 147, 148, 149, 174, 191, 197, 208, 209, 225, 228, 233, 235, 239, 240, 241, 243, 244, 246, 248], "immuabl": [2, 54, 161, 201, 216, 217, 234, 235, 238, 239, 241], "illustr": [2, 52, 53, 58, 61, 63, 133, 135, 136, 138, 177, 201, 216, 225, 233, 235, 240, 241, 243, 248], "mat": [2, 6, 38, 41, 51, 55, 71, 80, 83, 84, 86, 93, 101, 103, 107, 108, 109, 110, 111, 117, 118, 135, 158, 179, 183, 184, 188, 190, 198, 207, 208, 225, 235, 241, 244], "str": [2, 4, 7, 10, 11, 32, 37, 71, 73, 94, 104, 106, 112, 133, 139, 142, 145, 154, 155, 156, 157, 166, 170, 198, 206, 207, 208, 210, 216, 225, 228, 233, 235, 237, 239, 241, 243, 244, 246, 248], "tupl": [2, 4, 7, 8, 9, 10, 11, 13, 32, 35, 48, 52, 53, 54, 63, 71, 73, 96, 97, 104, 122, 125, 132, 164, 175, 179, 181, 187, 201, 207, 217, 225, 234, 235, 239, 241], "Les": [2, 6, 10, 14, 15, 17, 18, 19, 23, 28, 32, 34, 36, 38, 39, 40, 43, 48, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 68, 72, 76, 79, 80, 86, 87, 89, 93, 94, 96, 98, 101, 106, 112, 114, 119, 120, 121, 122, 125, 126, 127, 128, 132, 134, 135, 136, 137, 139, 140, 143, 146, 147, 148, 156, 158, 160, 164, 166, 169, 170, 174, 175, 178, 179, 181, 182, 187, 192, 193, 197, 201, 202, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 217, 225, 227, 231, 232, 235, 237, 238, 240, 241, 243, 244, 246], "why": [2, 22, 235], "key": [2, 5, 11, 29, 53, 69, 71, 96, 97, 122, 125, 166, 179, 192, 194, 233, 235, 239, 240], "\u00e9gal": [2, 4, 6, 10, 14, 35, 43, 44, 48, 51, 52, 53, 55, 56, 58, 60, 61, 63, 64, 71, 72, 73, 80, 83, 85, 86, 87, 88, 96, 97, 100, 101, 106, 112, 113, 114, 115, 116, 122, 123, 125, 126, 134, 135, 137, 138, 139, 140, 147, 150, 151, 156, 157, 160, 168, 170, 172, 174, 175, 177, 178, 179, 183, 184, 185, 186, 193, 197, 202, 204, 208, 216, 217, 225, 231, 233, 234, 235, 239, 240, 241, 243, 246, 248], "vouloir": [2, 103, 208, 233, 235], "m\u00e9moris": [2, 14, 43, 71, 81, 104, 105, 146, 194, 197, 216, 225, 229, 231, 233, 235, 246, 248], "ident": [2, 10, 18, 38, 56, 58, 61, 63, 64, 71, 76, 81, 89, 90, 91, 97, 112, 117, 122, 147, 151, 154, 156, 159, 166, 174, 179, 183, 184, 201, 205, 206, 225, 228, 233, 235, 237, 239, 240, 241, 243, 248], "doit": [2, 4, 7, 22, 43, 53, 56, 58, 60, 61, 64, 66, 71, 72, 73, 76, 79, 83, 87, 97, 103, 112, 113, 116, 117, 118, 119, 120, 122, 137, 142, 145, 147, 152, 154, 158, 170, 179, 181, 185, 186, 191, 194, 197, 199, 202, 209, 217, 225, 228, 233, 235, 237, 239, 240, 241, 243, 244, 248], "enumerat": [2, 29, 80, 85, 86, 87, 90, 97, 98, 103, 106, 110, 112, 113, 117, 119, 120, 127, 134, 135, 139, 143, 152, 154, 156, 158, 167, 169, 170, 172, 178, 179, 188, 192, 201, 202, 208, 217, 218, 219, 223, 229, 231, 234, 235, 239, 241], "S": [2, 35, 53, 58, 71, 72, 79, 87, 88, 96, 97, 110, 112, 117, 123, 177, 185, 186, 187, 191, 202, 206, 217, 225, 228, 233, 235, 236, 239, 240, 243, 248], "suff": [2, 4, 16, 40, 43, 58, 62, 63, 64, 71, 72, 73, 76, 81, 85, 87, 90, 92, 97, 102, 104, 105, 110, 112, 113, 114, 115, 117, 118, 122, 123, 136, 155, 162, 164, 192, 197, 198, 202, 204, 209, 216, 217, 225, 233, 235, 237, 239, 240, 243, 246, 248], "just": [2, 4, 11, 32, 41, 44, 52, 58, 64, 72, 73, 85, 93, 115, 117, 126, 146, 147, 156, 168, 175, 187, 199, 219, 227, 228, 235, 239, 240], "\u00e9critur": [2, 4, 6, 35, 38, 41, 42, 50, 51, 52, 63, 71, 73, 92, 123, 156, 160, 170, 179, 199, 207, 210, 217, 225, 227, 228, 235, 239, 240, 241, 243, 244, 248], "construit_matrice_carre": [2, 5], "construit": [2, 7, 10, 14, 22, 43, 53, 58, 61, 64, 71, 72, 80, 82, 85, 89, 97, 101, 103, 108, 109, 110, 113, 118, 127, 133, 137, 140, 142, 145, 154, 168, 183, 184, 187, 188, 193, 194, 208, 215, 216, 225, 233, 239, 240, 241, 246], "rempl": [2, 79, 107, 111, 164, 191, 192, 201, 217, 241, 243, 248], "z\u00e9ro": [2, 43, 52, 53, 71, 79, 85, 218, 228, 233, 240], "dimens": [2, 14, 35, 40, 43, 53, 55, 56, 60, 63, 64, 71, 86, 114, 117, 123, 128, 136, 137, 138, 142, 175, 177, 180, 187, 197, 212, 225, 233, 240, 241], "enumerate_permut": [2, 5], "enumer": 2, "enumerate_permutations_recurs": [2, 5], "integral": [2, 5, 204, 235], "int\u00e9gral": [2, 4, 71, 73, 112, 132, 243, 246, 248], "rienmann": [2, 204], "born": [2, 58, 72, 97, 204], "recevoir": [2, 112, 207, 225, 228, 233, 235, 239], "inclut": [2, 43, 48, 71, 72, 85, 115, 116, 194, 197, 225, 228, 235, 239, 240, 241, 243, 246], "calcul_n_valeur": [2, 225, 235], "prend": [2, 4, 43, 48, 53, 58, 62, 63, 64, 72, 73, 79, 81, 83, 87, 94, 95, 97, 101, 103, 106, 109, 112, 117, 118, 119, 120, 137, 145, 156, 160, 162, 164, 166, 171, 174, 179, 180, 181, 183, 192, 212, 213, 225, 233, 235, 239, 240, 241], "fonction_carr": [2, 235], "fonction_cub": [2, 235], "ex\u00e9cut": [2, 4, 36, 42, 43, 58, 66, 71, 72, 73, 76, 97, 103, 104, 115, 116, 142, 154, 155, 159, 174, 175, 181, 208, 209, 215, 216, 217, 225, 228, 229, 231, 233, 235, 239, 240, 241, 243, 246], "re": [2, 10, 32, 34, 37, 41, 42, 56, 80, 87, 89, 90, 93, 94, 96, 101, 102, 103, 109, 110, 112, 113, 114, 117, 118, 121, 122, 124, 125, 126, 127, 133, 137, 138, 141, 142, 147, 149, 150, 152, 164, 167, 169, 172, 173, 175, 176, 182, 189, 194, 198, 202, 206, 207, 208, 214, 216, 220, 225, 235, 240, 241, 243, 244, 246, 248], "l1": [2, 4, 43, 63, 73, 217, 225, 235, 239, 240], "9": [2, 9, 12, 28, 32, 33, 35, 43, 44, 48, 52, 53, 55, 56, 57, 58, 61, 63, 64, 71, 73, 79, 80, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 158, 159, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 184, 187, 188, 190, 192, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 234, 235, 236, 239, 240, 246, 248], "l2": [2, 4, 43, 63, 71, 73, 110, 217, 225, 235, 239, 240], "27": [0, 2, 33, 48, 52, 53, 55, 56, 57, 79, 86, 90, 97, 99, 101, 104, 110, 114, 117, 119, 120, 121, 122, 126, 137, 138, 140, 142, 144, 153, 155, 167, 175, 179, 187, 188, 197, 201, 204, 207, 216, 225, 235, 236], "mat2text": [2, 5, 235], "sep_row": 2, "sep_col": 2, "fn": [2, 7, 11, 71, 98, 175, 235], "text2mat": [2, 5, 235], "s\u00e9par": [2, 29, 58, 63, 64, 68, 85, 96, 115, 116, 136, 155, 179, 193, 207, 210, 211, 212, 213, 214, 233, 235, 239, 240, 241, 248], "colon": [2, 6, 14, 51, 53, 55, 63, 71, 93, 100, 114, 118, 146, 167, 179, 187, 191, 197, 206, 207, 225, 233, 235, 241, 248], "case11": [2, 235], "case12": [2, 235], "case13": [2, 235], "case21": [2, 235], "case22": [2, 235], "case23": [2, 235], "join": [2, 32, 37, 52, 56, 71, 84, 89, 96, 98, 101, 106, 107, 126, 154, 155, 156, 157, 169, 172, 174, 176, 189, 198, 202, 207, 208, 215, 216, 220, 229, 235, 239, 240, 241, 243, 248], "mat2vect": [2, 5, 235], "vect2mat": [2, 5, 235], "car": [2, 4, 22, 29, 34, 35, 36, 41, 43, 44, 52, 53, 54, 55, 58, 62, 64, 71, 72, 73, 76, 79, 81, 83, 85, 86, 88, 89, 90, 93, 95, 96, 97, 101, 103, 104, 106, 109, 110, 112, 113, 115, 116, 117, 118, 120, 122, 125, 133, 134, 137, 149, 152, 153, 154, 156, 158, 162, 163, 168, 170, 175, 179, 182, 190, 192, 201, 204, 207, 209, 210, 212, 216, 217, 223, 225, 227, 228, 229, 231, 233, 235, 237, 239, 240, 241, 243, 244, 246], "donc": [2, 14, 34, 35, 40, 43, 44, 52, 53, 55, 56, 58, 60, 61, 63, 71, 72, 79, 80, 86, 87, 88, 89, 90, 97, 98, 104, 110, 112, 114, 115, 121, 122, 123, 126, 127, 134, 137, 142, 156, 157, 158, 164, 165, 168, 178, 187, 190, 191, 192, 193, 194, 204, 207, 208, 214, 215, 216, 218, 219, 220, 225, 228, 234, 235, 239, 240, 241, 243, 244, 246, 248], "indic": [2, 7, 9, 10, 35, 40, 44, 52, 53, 56, 58, 60, 66, 71, 72, 85, 90, 93, 95, 97, 102, 106, 107, 110, 119, 120, 140, 142, 178, 179, 212, 216, 217, 222, 225, 228, 229, 233, 234, 235, 239, 240, 248], "bien": [2, 4, 16, 29, 34, 40, 43, 52, 56, 58, 62, 63, 64, 72, 73, 76, 79, 81, 82, 83, 84, 86, 90, 91, 95, 96, 97, 101, 102, 112, 115, 116, 117, 119, 120, 121, 136, 137, 140, 143, 146, 147, 150, 157, 160, 162, 165, 167, 168, 174, 178, 179, 181, 183, 191, 197, 208, 209, 210, 212, 214, 216, 225, 228, 229, 231, 233, 235, 239, 240, 241], "s\u00fbr": [2, 14, 29, 43, 44, 63, 64, 83, 87, 90, 93, 95, 97, 107, 112, 140, 147, 151, 192, 197, 218, 235, 240, 241], "const": [2, 4, 34, 36, 52, 55, 58, 61, 73, 87, 101, 113, 133, 134, 137, 150, 153, 190, 197, 204, 225, 235, 236, 246], "Vous": [2, 52, 53, 55, 63, 90, 96, 174, 187, 191, 202, 207, 208, 215, 235], "pouv": [2, 52, 55, 96, 112, 115, 116, 122, 174, 191, 202, 208, 213, 215, 235], "reduc": [2, 32, 162, 175, 176, 189, 235], "from": [2, 4, 11, 12, 13, 28, 29, 30, 32, 34, 37, 41, 42, 45, 46, 48, 52, 53, 55, 56, 58, 64, 70, 71, 72, 77, 80, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 103, 108, 109, 112, 114, 117, 119, 120, 121, 122, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 218, 222, 225, 229, 234, 235, 239, 241, 243, 244, 248, 250], "functool": [2, 162, 235], "lambd": [2, 11, 26, 31, 43, 45, 52, 85, 101, 107, 113, 122, 132, 137, 171, 173, 174, 183, 185, 186, 194, 199, 200, 203, 204, 235, 243, 250], "minindex": [2, 5, 235], "min": [2, 33, 44, 52, 53, 58, 64, 71, 72, 80, 82, 83, 85, 86, 90, 91, 93, 101, 102, 108, 112, 113, 114, 117, 118, 122, 125, 136, 139, 143, 147, 148, 152, 154, 158, 181, 191, 192, 194, 198, 220, 223, 235, 239, 240], "minium": [2, 235], "r\u00e9flex": [2, 26, 31, 45, 101, 128, 207, 213, 231, 235, 240, 250], "recod": [2, 235], "conserv": [2, 4, 36, 41, 52, 53, 58, 61, 72, 73, 81, 93, 96, 110, 115, 151, 157, 179, 190, 194, 207, 215, 217, 218, 225, 234, 235, 239, 240, 241, 244], "434": [2, 176, 235], "43": [2, 38, 48, 52, 53, 56, 97, 101, 112, 114, 116, 117, 134, 135, 137, 153, 169, 175, 178, 187, 188, 201, 214, 225, 235, 239], "6436": [2, 235], "Mais": [2, 14, 43, 44, 48, 53, 55, 63, 64, 71, 83, 85, 88, 89, 93, 95, 97, 98, 101, 103, 104, 106, 125, 134, 140, 142, 143, 147, 153, 154, 155, 156, 160, 177, 179, 182, 191, 201, 207, 212, 213, 219, 222, 225, 229, 235, 240, 246, 248], "astuc": [2, 4, 21, 26, 31, 45, 55, 68, 73, 84, 85, 132, 157, 208, 235, 243, 246, 250], "obten": [2, 22, 42, 43, 48, 52, 53, 58, 60, 61, 71, 85, 90, 93, 136, 142, 163, 168, 172, 183, 187, 191, 192, 198, 201, 204, 207, 213, 225, 233, 235, 237, 239, 240, 241, 248], "reprogramm": [2, 233, 235], "chois": [2, 7, 9, 10, 43, 44, 48, 52, 53, 55, 58, 60, 61, 63, 64, 66, 71, 72, 76, 79, 86, 87, 90, 96, 97, 111, 113, 117, 118, 119, 120, 122, 123, 134, 136, 137, 139, 149, 150, 152, 155, 157, 159, 161, 164, 165, 168, 180, 183, 184, 185, 186, 191, 192, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 225, 229, 233, 235, 239, 240, 241, 244, 248], "coupl": [2, 14, 40, 52, 58, 61, 63, 71, 72, 79, 80, 93, 110, 117, 118, 134, 168, 174, 179, 201, 202, 217, 225, 228, 233, 235, 239, 240, 246, 248], "d\u00e9parteg": [2, 235], "exaequo": [2, 235], "45": [2, 33, 48, 52, 53, 56, 86, 97, 101, 125, 133, 137, 149, 151, 152, 153, 158, 169, 175, 178, 187, 188, 210, 214, 235, 239], "32": [0, 2, 33, 38, 52, 53, 55, 56, 79, 85, 86, 92, 95, 97, 101, 104, 110, 134, 135, 141, 144, 145, 152, 153, 155, 159, 166, 167, 175, 176, 179, 187, 188, 208, 217, 235, 240, 241], "56": [2, 28, 52, 53, 56, 64, 71, 97, 101, 113, 114, 117, 118, 133, 134, 139, 146, 147, 153, 199, 214, 225, 235], "permet": [2, 4, 10, 14, 18, 35, 40, 42, 43, 44, 50, 52, 53, 55, 56, 58, 60, 61, 63, 64, 71, 73, 76, 79, 81, 82, 83, 89, 91, 98, 100, 101, 104, 112, 113, 114, 115, 116, 119, 120, 137, 154, 155, 156, 160, 162, 167, 170, 174, 175, 179, 180, 183, 191, 197, 198, 199, 201, 202, 203, 207, 208, 209, 215, 217, 223, 225, 227, 228, 229, 231, 233, 235, 236, 237, 239, 240, 241, 243, 244, 246, 248], "\u00e7a": [2, 37, 48, 55, 63, 89, 91, 93, 94, 95, 142, 143, 160, 175, 197, 201, 202, 215, 227, 235, 237, 247], "pris": [2, 24, 39, 40, 58, 61, 63, 85, 100, 101, 164, 187, 188, 204, 208, 209, 213, 215, 216, 231, 233, 235, 241], "aucun": [2, 8, 40, 41, 55, 58, 60, 62, 71, 72, 76, 79, 80, 83, 84, 86, 93, 96, 104, 112, 121, 142, 148, 191, 192, 207, 208, 225, 228, 229, 233, 235, 239, 240, 241, 243], "bout": [2, 58, 71, 75, 76, 85, 89, 110, 112, 155, 179, 204, 206, 207, 216, 228, 234, 235, 240], "pr\u00e9senc": [2, 53, 76, 213, 225, 235, 240, 243, 248], "second": [2, 4, 6, 7, 11, 19, 20, 22, 23, 24, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 51, 53, 55, 58, 60, 61, 62, 63, 64, 71, 72, 73, 76, 79, 81, 82, 83, 84, 85, 86, 89, 90, 93, 96, 97, 101, 104, 110, 112, 113, 117, 118, 120, 122, 126, 134, 136, 139, 140, 143, 147, 155, 156, 159, 160, 162, 165, 174, 176, 177, 187, 188, 189, 190, 192, 198, 199, 201, 204, 206, 207, 208, 209, 210, 216, 217, 225, 228, 229, 235, 236, 239, 240, 241, 243, 244, 246, 248], "probabl": [2, 14, 52, 54, 58, 61, 63, 64, 79, 80, 90, 98, 101, 118, 121, 122, 126, 136, 137, 138, 140, 143, 147, 152, 162, 168, 175, 199, 216, 225, 235], "faibl": [2, 14, 58, 79, 80, 90, 97, 133, 134, 152, 182, 235], "recherche_dichotom": [2, 5, 167, 177, 235], "id\u00e9": [2, 14, 22, 35, 58, 60, 61, 63, 64, 79, 80, 81, 83, 84, 85, 90, 92, 97, 101, 110, 112, 119, 120, 124, 125, 134, 135, 138, 145, 162, 163, 164, 170, 175, 181, 182, 190, 191, 213, 219, 223, 233, 235, 241], "\u00e9limin": [2, 18, 32, 96, 217, 235, 248], "moiti": [2, 44, 61, 79, 83, 123, 177, 217, 218, 235], "whil": [2, 32, 33, 35, 42, 44, 61, 70, 79, 80, 81, 84, 86, 90, 91, 92, 93, 95, 96, 97, 102, 103, 104, 105, 109, 110, 112, 117, 118, 119, 126, 127, 156, 159, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 177, 181, 192, 194, 198, 204, 206, 216, 217, 218, 220, 222, 225, 235, 240, 246, 248], "elif": [2, 4, 35, 71, 72, 73, 85, 86, 89, 105, 110, 113, 115, 116, 119, 120, 122, 142, 144, 154, 156, 159, 172, 177, 206, 216, 217, 218, 220, 225, 233, 235, 239], "interven": [2, 61, 97, 122, 162, 225, 233, 235, 241, 246], "addit": [2, 43, 63, 71, 96, 97, 104, 112, 134, 168, 197, 209, 217, 225, 235, 239, 240], "schem": [2, 61, 71, 103, 202, 225, 228, 233, 235, 239, 241, 244, 246], "initialis": [2, 7, 52, 55, 60, 61, 76, 79, 91, 154, 191, 194, 197, 216, 225, 235, 239, 240], "6456": [2, 235], "6933": [2, 235], "integr": [2, 4, 19, 22, 23, 58, 73, 181, 203, 204, 228, 235, 239, 240, 245, 246], "sen": [2, 7, 10, 14, 43, 44, 52, 55, 58, 61, 63, 71, 72, 85, 89, 90, 101, 103, 106, 137, 140, 158, 161, 165, 170, 208, 228, 233, 235, 236, 239, 241], "Et": [2, 4, 14, 29, 35, 36, 41, 42, 44, 48, 53, 54, 55, 62, 63, 71, 73, 76, 83, 86, 87, 90, 93, 95, 101, 104, 112, 117, 118, 119, 120, 122, 133, 134, 137, 142, 143, 144, 147, 155, 158, 159, 160, 163, 164, 165, 168, 170, 177, 179, 180, 187, 188, 197, 202, 203, 205, 208, 212, 215, 227, 228, 231, 233, 234, 235, 239, 241, 243, 244, 246], "gr\u00e2c": [2, 58, 63, 64, 71, 76, 119, 120, 225, 233, 235, 240, 241, 243, 244, 248], "s1": [2, 140, 160, 170, 235], "s2": [2, 53, 71, 140, 160, 235, 240, 241], "s3": [2, 48, 235], "map": [0, 2, 34, 48, 60, 101, 107, 171, 182, 195, 196, 202, 216, 235, 239, 246], "avantag": [2, 61, 64, 147, 208, 223, 225, 233, 235, 239, 240, 241], "derni": [2, 14, 29, 39, 40, 44, 48, 53, 56, 58, 61, 63, 64, 71, 72, 76, 85, 87, 89, 91, 93, 96, 97, 98, 101, 102, 103, 106, 107, 110, 112, 117, 118, 119, 120, 145, 157, 164, 166, 171, 191, 194, 199, 201, 202, 207, 215, 216, 217, 225, 228, 229, 233, 235, 239, 240, 241, 243, 245, 246], "elles": [2, 3, 4, 9, 10, 36, 40, 41, 50, 52, 56, 58, 60, 61, 63, 64, 71, 72, 73, 76, 84, 87, 89, 95, 97, 119, 120, 121, 122, 123, 140, 190, 191, 201, 207, 208, 225, 227, 228, 233, 235, 239, 240, 241, 243, 246, 248], "\u00e9vitent": [2, 235], "cr\u00e9ation": [2, 47, 52, 53, 71, 72, 86, 97, 155, 199, 201, 207, 217, 225, 233, 235, 239, 241, 243, 246], "interm\u00e9diair": [2, 38, 61, 63, 71, 105, 106, 201, 202, 210, 228, 231, 235, 239, 240, 241, 244, 246], "prendr": [2, 14, 34, 40, 43, 53, 55, 58, 61, 64, 76, 79, 84, 87, 90, 97, 110, 150, 164, 166, 174, 181, 191, 201, 203, 207, 208, 213, 215, 219, 225, 235, 239, 240, 243, 248], "laquel": [2, 29, 52, 55, 58, 61, 62, 72, 76, 80, 97, 104, 105, 112, 123, 159, 174, 192, 199, 204, 216, 217, 219, 225, 233, 235, 239, 240, 246], "volumin": [2, 58, 101, 235, 240], "suivent": [2, 58, 60, 63, 64, 71, 87, 100, 101, 143, 207, 208, 228, 233, 235, 239, 240, 241, 243, 248], "permettent": [2, 14, 53, 58, 64, 66, 71, 72, 76, 79, 112, 154, 158, 160, 175, 197, 207, 208, 217, 225, 227, 228, 231, 233, 235, 239, 240, 241, 243, 246, 248], "proced": [2, 58, 61, 64, 71, 162, 167, 170, 177, 217, 219, 225, 233, 235, 241, 243, 246], "r\u00e9cuper": [2, 28, 42, 48, 52, 55, 71, 72, 97, 98, 101, 105, 121, 152, 170, 178, 191, 192, 207, 208, 228, 230, 233, 234, 235, 236, 237, 239, 240, 241, 248], "depuis": [2, 4, 10, 21, 35, 39, 42, 52, 53, 55, 56, 58, 63, 64, 71, 72, 73, 98, 100, 101, 121, 178, 191, 192, 197, 201, 215, 225, 228, 233, 234, 235, 236, 237, 241, 243, 244, 246], "proven": [2, 4, 58, 73, 233, 235, 246], "tableur": [2, 235, 241], "d\u00e9composit": [2, 20, 22, 43, 52, 79, 132, 183, 235], "split": [2, 10, 11, 48, 53, 71, 89, 134, 151, 166, 169, 174, 189, 191, 195, 196, 207, 208, 216, 233, 235, 240, 241, 243, 248], "tres": [2, 4, 14, 16, 22, 37, 40, 41, 43, 44, 48, 52, 53, 56, 58, 61, 62, 63, 64, 65, 66, 71, 72, 73, 79, 80, 89, 90, 91, 93, 94, 95, 97, 98, 101, 103, 110, 113, 119, 120, 122, 125, 126, 136, 137, 139, 140, 142, 144, 147, 148, 150, 152, 153, 154, 157, 159, 167, 170, 175, 177, 179, 181, 182, 190, 191, 198, 201, 207, 208, 209, 215, 216, 217, 223, 225, 228, 231, 233, 234, 235, 239, 240, 241, 243, 244], "travaill": [2, 52, 76, 112, 181, 208, 228, 235], "pand": [2, 3, 19, 22, 23, 26, 31, 32, 33, 45, 47, 50, 52, 54, 75, 80, 87, 88, 90, 93, 101, 113, 117, 118, 121, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 159, 166, 167, 172, 173, 178, 182, 187, 188, 191, 192, 208, 235, 240, 250], "robust": [2, 14, 58, 64, 72, 137, 147, 216, 235], "consider": [2, 3, 4, 14, 35, 40, 43, 52, 53, 56, 58, 60, 61, 63, 64, 66, 71, 73, 81, 83, 85, 97, 101, 103, 104, 112, 114, 115, 118, 119, 120, 122, 123, 134, 135, 136, 152, 157, 172, 175, 179, 181, 192, 193, 194, 197, 201, 209, 213, 225, 227, 229, 233, 235, 239, 240, 243, 246, 248], "to_csv": [2, 53, 121, 167, 208, 235], "read_csv": [2, 32, 53, 56, 87, 101, 121, 167, 191, 192, 208, 235], "direct": [2, 4, 40, 52, 53, 58, 71, 76, 81, 86, 87, 97, 110, 111, 113, 140, 164, 175, 181, 195, 196, 197, 205, 206, 213, 216, 217, 225, 228, 229, 235, 239, 240, 241], "enregistr": [2, 42, 53, 55, 62, 71, 85, 137, 146, 167, 175, 178, 207, 208, 225, 235, 241, 243, 248], "excel": [2, 19, 71, 76, 235, 241], "read_excel": [2, 56, 167, 235], "to_excel": [2, 53, 167, 235], "triindex": [2, 5, 235], "quicksort": [2, 235], "consist": [2, 14, 18, 29, 36, 37, 44, 48, 53, 58, 60, 61, 63, 64, 71, 72, 76, 81, 84, 85, 87, 91, 92, 96, 97, 110, 112, 113, 114, 119, 120, 138, 140, 156, 162, 170, 177, 183, 184, 191, 201, 204, 208, 213, 216, 217, 225, 233, 235, 239, 240, 241, 243, 244, 246, 248], "pet": [2, 4, 6, 14, 15, 35, 37, 39, 43, 52, 55, 58, 63, 71, 73, 79, 80, 83, 85, 87, 89, 95, 97, 98, 102, 104, 110, 112, 117, 122, 123, 134, 136, 142, 166, 169, 170, 180, 191, 199, 204, 209, 214, 223, 228, 235, 239, 240], "\u00e9chang": [2, 34, 58, 61, 62, 93, 110, 156, 170, 207, 225, 233, 235, 240, 241, 246], "plac": [2, 6, 8, 9, 10, 32, 58, 60, 71, 73, 76, 96, 97, 110, 112, 115, 116, 137, 142, 156, 159, 164, 176, 179, 181, 191, 208, 214, 217, 225, 235, 239, 240, 241, 243, 246, 248], "recomment": [2, 29, 55, 64, 117, 138, 147, 189, 190, 208, 214, 235, 246], "proc\u00e9dur": [2, 208, 235, 243], "troisiem": [2, 48, 55, 58, 61, 71, 76, 83, 90, 110, 126, 139, 177, 198, 201, 207, 225, 228, 233, 235, 239, 240, 241, 246, 248], "jusqu": [2, 18, 32, 35, 44, 57, 58, 60, 61, 63, 71, 72, 76, 79, 83, 87, 89, 90, 97, 103, 104, 112, 134, 138, 155, 156, 193, 204, 215, 220, 225, 228, 229, 233, 234, 235, 239, 240, 241, 246], "6": [2, 4, 7, 11, 16, 18, 28, 29, 36, 37, 41, 43, 44, 48, 51, 52, 54, 55, 56, 57, 58, 64, 71, 72, 73, 76, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 196, 197, 198, 199, 200, 201, 202, 204, 206, 210, 219, 220, 223, 225, 227, 231, 233, 235, 236, 237, 239, 240, 246, 248], "exclu": [2, 35, 44, 71, 76, 102, 115, 116, 161, 210, 217, 233, 235, 239, 240], "pos": [2, 22, 32, 43, 58, 61, 76, 88, 93, 96, 101, 104, 110, 111, 113, 114, 117, 118, 119, 120, 122, 127, 136, 138, 159, 164, 166, 167, 172, 179, 188, 192, 198, 216, 223, 225, 227, 233, 235, 241, 248], "ech": [2, 110, 235], "selon": [2, 10, 14, 29, 52, 53, 56, 58, 61, 63, 71, 72, 76, 87, 90, 97, 103, 115, 116, 117, 119, 120, 125, 139, 141, 142, 147, 152, 159, 172, 175, 183, 184, 185, 186, 187, 188, 190, 197, 207, 215, 217, 225, 228, 233, 235, 237, 239, 240, 241, 248], "timsort": [2, 182, 235], "parfois": [2, 32, 36, 41, 52, 56, 58, 62, 63, 64, 71, 72, 76, 83, 101, 112, 121, 144, 156, 166, 187, 188, 189, 191, 199, 216, 225, 228, 229, 231, 233, 234, 235, 237, 239, 240, 241, 243, 244, 246], "amen": [2, 64, 97, 235], "parc": [2, 4, 29, 40, 41, 53, 61, 66, 71, 73, 76, 87, 90, 104, 133, 142, 187, 197, 198, 208, 225, 228, 235, 239, 240], "moin": [2, 4, 6, 9, 14, 21, 22, 29, 35, 43, 48, 53, 58, 61, 63, 64, 71, 72, 73, 76, 79, 81, 86, 87, 89, 91, 93, 99, 101, 103, 112, 117, 118, 122, 125, 134, 135, 136, 137, 142, 143, 149, 150, 151, 162, 163, 164, 167, 168, 170, 174, 175, 177, 179, 182, 187, 194, 197, 198, 199, 201, 207, 215, 225, 228, 229, 231, 233, 235, 236, 237, 239, 240, 241, 246, 248], "applic": [2, 35, 61, 225, 227, 235, 241], "tab": [2, 43, 102, 106, 110, 172, 235], "zero": [2, 33, 52, 71, 79, 228, 233, 235, 240], "trop": [2, 7, 9, 10, 14, 35, 40, 48, 52, 53, 56, 58, 60, 61, 62, 63, 71, 76, 79, 83, 87, 90, 93, 95, 97, 101, 109, 112, 120, 122, 134, 139, 153, 174, 175, 176, 187, 188, 197, 207, 219, 228, 235, 239, 240, 241, 243, 244, 246], "succinct": [2, 235], "tab_posit": [2, 235], "vect": [2, 235], "ncol": [2, 117, 235], "teachpyx": [3, 5, 6, 11, 19, 23, 28, 29, 41, 48, 51, 53, 56, 60, 64, 73, 74, 75, 76, 97, 98, 101, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 170, 172, 173, 175, 179, 187, 188, 191, 192, 207, 208, 213, 214, 235, 241], "dataset": [3, 28, 29, 48, 56, 64, 87, 121, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 167, 189, 190], "load_enedis_dataset": [3, 5, 48], "datafram": [3, 11, 15, 33, 39, 75, 80, 87, 88, 90, 93, 113, 117, 118, 121, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 159, 166, 167, 170, 172, 173, 178, 182, 187, 188, 238], "extrait": [3, 6, 10, 19, 38, 51, 52, 53, 56, 58, 63, 71, 72, 98, 100, 101, 187, 209, 225, 239, 241, 248], "ened": [3, 48], "product": [3, 229], "\u00e9lectr": [3, 62], "annuel": [3, 14, 48, 58, 112], "fili": [3, 48], "maill": 3, "commun": [3, 15, 48, 52, 53, 55, 58, 83, 98, 128, 140, 158, 213, 225, 239, 240, 241, 244, 246], "jeu": [3, 20, 22, 28, 32, 40, 53, 64, 76, 88, 95, 101, 111, 131, 132, 139, 153, 164, 190, 197, 233, 237], "propos": [3, 4, 6, 17, 20, 24, 29, 40, 43, 48, 53, 55, 58, 60, 61, 63, 64, 73, 80, 87, 90, 96, 97, 99, 101, 104, 110, 111, 112, 117, 118, 119, 120, 122, 125, 128, 150, 161, 162, 165, 167, 170, 174, 180, 183, 184, 185, 186, 190, 191, 195, 196, 198, 199, 207, 208, 209, 214, 215, 217, 225, 227, 228, 229, 233, 234, 239, 240, 241, 243, 245, 246], "ann\u00e9": [3, 14, 15, 19, 20, 23, 24, 48, 53, 58, 76, 99, 112, 121, 207, 208, 227, 246, 248], "2015": [3, 99, 102], "2016": [3, 4, 48, 73, 77, 99, 101], "notebook": [3, 16, 19, 20, 22, 23, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 52, 53, 54, 55, 56, 57, 64, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 233, 244, 246], "trac": [3, 4, 8, 43, 49, 50, 53, 56, 62, 63, 73, 87, 97, 100, 101, 122, 132, 139, 141, 143, 145, 159, 187, 188, 214, 225, 229, 231, 241], "cart": [3, 4, 22, 49, 50, 73, 197, 239], "load_wines_dataset": [3, 5, 28, 64, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "download": [3, 11, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 53], "bool": [3, 4, 7, 10, 11, 13, 52, 53, 71, 73, 154, 165, 234, 239], "shuffl": [3, 44, 147, 149, 182, 208], "win": [3, 64, 233, 246], "quality": [3, 28, 64, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "s\u00e9lect": [3, 64, 71, 97, 131, 233, 240], "hyp": [3, 58, 131], "param\u00e8tresn": 3, "voisinsn": 3, "pipelinen": 3, "bas": [3, 14, 19, 20, 23, 24, 29, 32, 35, 41, 52, 55, 58, 62, 63, 76, 79, 85, 90, 100, 101, 111, 117, 118, 128, 131, 136, 137, 138, 142, 146, 147, 148, 149, 151, 152, 153, 159, 167, 170, 175, 178, 189, 190, 201, 215, 219, 225, 228, 233, 234, 239, 240, 241, 243, 246], "testn": 3, "valid": [3, 29, 35, 58, 71, 79, 131, 140, 142, 144, 145, 149, 152, 154, 175, 181, 182, 189, 197, 225, 233, 239, 240, 241, 248], "crois": [3, 10, 61, 91, 131, 142, 144, 145, 149, 152, 153, 207, 208, 216], "cross": [3, 64, 131, 145], "d\u00e9coupag": [3, 64, 131, 147, 241], "stratifi": [3, 64, 131, 193, 194], "voisin": [3, 9, 10, 32, 40, 60, 61, 63, 110, 119, 120, 125, 128, 131, 136, 147, 149, 193, 233], "\u00e9valuation": 3, "pr\u00e9dict": [3, 14, 22, 29, 64, 87, 90, 101, 113, 131, 134, 135, 137, 142, 146, 148, 149, 150, 153, 189, 190], "vinsn": 3, "parametr": [3, 4, 6, 7, 9, 10, 11, 12, 13, 40, 43, 52, 53, 60, 61, 66, 83, 86, 97, 108, 109, 112, 114, 119, 120, 121, 122, 124, 131, 134, 137, 146, 154, 156, 160, 197, 199, 201, 208, 225, 227, 228, 233, 237, 240, 241, 243, 246, 248], "t\u00e9l\u00e9charg": [3, 4, 7, 48, 64, 71, 73, 76, 170, 178, 207, 208, 213], "cop": [3, 4, 52, 53, 56, 72, 73, 77, 79, 80, 91, 102, 103, 165, 216, 217, 226, 239, 243, 244], "data_help": [3, 191, 192, 207, 208, 213, 214], "get_data_fold": [3, 5], "return": [3, 4, 6, 10, 11, 32, 33, 34, 35, 36, 40, 41, 43, 44, 48, 52, 53, 54, 55, 66, 72, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 142, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 200, 202, 204, 206, 207, 208, 213, 214, 215, 216, 219, 220, 222, 223, 225, 227, 228, 229, 233, 234, 235, 239, 240, 241, 243, 244, 246, 248], "fold": [3, 11, 12, 13, 67, 70, 137, 149, 241], "including": [3, 77], "packag": [3, 16, 19, 21, 22, 23, 42, 48, 55, 101, 148, 150, 174, 175, 176, 189, 207, 229, 233, 243, 245, 246], "load_wine_dataset": [3, 5], "disjointesn": 3, "courb": [3, 53, 58, 61, 64, 72, 85, 87, 131, 133, 134, 137, 145, 203, 233], "rocn": 3, "logist": [3, 64, 131, 133, 136, 144, 145], "2dn": 3, "classen": 3, "stackingn": 3, "dist": [4, 9, 53, 58, 86, 91, 94, 119, 120, 125, 148, 175, 189, 191, 192, 220, 241], "common": [4, 32, 175, 240, 243], "interfac": [4, 43, 52, 68, 73, 76, 142, 225, 233, 239, 243, 245, 249], "old": [4, 71, 240], "except": [4, 35, 37, 40, 41, 42, 48, 52, 53, 55, 56, 58, 62, 66, 68, 76, 81, 82, 98, 101, 103, 104, 107, 110, 112, 113, 114, 116, 117, 118, 121, 142, 145, 151, 152, 154, 158, 170, 179, 192, 201, 206, 208, 209, 210, 225, 231, 233, 234, 239, 240, 241, 243, 244, 246, 248, 249], "pqpiperror": [4, 5], "arg": [4, 11, 52, 64, 90, 91, 113, 114, 134, 142, 191, 225, 229], "any": [4, 10, 11, 22, 52, 77, 176, 225, 239], "raised": [4, 229], "following": [4, 11, 33, 52, 67, 77, 195, 196, 229], "function": [4, 7, 10, 11, 13, 26, 31, 41, 45, 52, 64, 71, 132, 141, 142, 166, 174, 175, 176, 189, 202, 229, 237, 239, 243, 246, 248, 250], "class_getitem": [4, 5], "show": [4, 11, 28, 29, 52, 73, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189], "enabl": [4, 174, 175, 176, 189], "instanc": [4, 11, 53, 60, 72, 73, 102, 156, 158, 160, 197, 226, 228, 233, 234, 239, 240, 243, 244, 246], "through": [4, 10], "__class_getitem__": [4, 225], "difference_div": [4, 5, 73], "quotient": [4, 73], "div1": [4, 73], "div2": [4, 73], "div3": [4, 73], "div4": [4, 73], "print": [4, 6, 11, 28, 29, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 64, 67, 70, 72, 76, 79, 81, 82, 83, 84, 85, 86, 89, 91, 92, 93, 96, 97, 98, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 118, 119, 120, 121, 122, 127, 140, 145, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 167, 169, 170, 172, 174, 175, 176, 178, 183, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 214, 216, 217, 218, 219, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 241, 243, 244, 246, 248], "rest": [4, 14, 32, 40, 41, 44, 55, 58, 61, 64, 71, 72, 73, 82, 86, 90, 91, 93, 97, 98, 101, 104, 105, 112, 117, 125, 134, 137, 138, 145, 147, 148, 154, 157, 169, 170, 179, 185, 186, 187, 201, 204, 206, 207, 208, 215, 216, 225, 228, 231, 233, 239, 240, 241, 244, 246], "obtenu": [4, 29, 44, 52, 58, 61, 64, 71, 72, 73, 85, 88, 95, 101, 112, 116, 135, 145, 165, 166, 204, 215, 225, 241, 243], "entier_grande_taill": [4, 5, 73], "maxint": [4, 73], "new": [0, 4, 11, 32, 53, 58, 71, 73, 214, 240], "De": [4, 14, 32, 58, 64, 73, 80, 87, 97, 122, 134, 137, 147, 158, 162, 166, 187, 197, 201, 207, 210, 225, 229, 233, 239, 240, 241, 243, 246], "getrandb": [4, 73], "random": [4, 22, 33, 44, 52, 53, 54, 55, 73, 79, 80, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 101, 104, 107, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 133, 134, 136, 137, 138, 140, 142, 145, 146, 149, 152, 155, 159, 162, 168, 171, 172, 173, 182, 183, 184, 190, 191, 192, 199, 200, 204, 206, 208, 215, 216, 218, 219, 225, 234, 243, 246], "getrandbit": [4, 73], "2048": [4, 63, 73, 85, 103, 111, 132, 207], "Qui": [4, 32, 73, 89, 169], "2882159224557107513165483098383814837021447484558010147211921": [4, 73], "304219017212673656549681269862792029": [4, 73], "font": [4, 11, 32, 34, 52, 58, 61, 62, 71, 73, 83, 86, 117, 118, 134, 207, 208, 225, 228, 233, 239, 240, 241, 246], "huit": [4, 73, 97, 240, 241, 248], "octet": [4, 6, 43, 73, 167, 170, 179, 208, 214, 237, 240, 241, 244], "Au": [4, 34, 36, 52, 53, 58, 60, 73, 85, 86, 115, 142, 197, 225, 240, 243, 246], "del\u00e0": [4, 7, 53, 60, 73, 79, 112, 140, 153, 191, 246], "librair": [4, 6, 41, 50, 52, 55, 56, 60, 66, 73, 74, 153, 166, 170, 176, 181, 229, 240, 245], "gmpy2": [4, 73], "recommand": [4, 22, 53, 54, 71, 73, 76, 80, 99, 112, 136, 179, 208, 225, 228, 233, 243], "20": [4, 7, 10, 11, 13, 22, 29, 32, 38, 39, 41, 44, 48, 52, 53, 55, 56, 58, 63, 72, 73, 79, 86, 87, 88, 90, 91, 95, 97, 100, 101, 103, 104, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 163, 167, 168, 172, 173, 175, 178, 179, 180, 187, 188, 190, 193, 197, 201, 203, 204, 207, 215, 216, 217, 218, 233, 236, 239, 240, 244, 246, 248], "40": [4, 32, 38, 40, 41, 52, 53, 56, 58, 73, 79, 90, 97, 101, 112, 118, 121, 124, 133, 134, 135, 137, 141, 144, 145, 149, 152, 153, 158, 173, 175, 179, 187, 188, 204, 233, 244, 248], "chiffr": [4, 35, 37, 58, 62, 71, 72, 73, 96, 98, 111, 112, 147, 197, 198, 205, 207, 228, 240, 248], "overview": [4, 73, 233], "remplac": [4, 35, 52, 71, 73, 80, 85, 97, 101, 104, 105, 110, 112, 117, 118, 134, 138, 159, 181, 183, 197, 199, 201, 205, 207, 208, 217, 225, 227, 233, 239, 240, 241, 246, 248], "editeur": [4, 73], "bougent": [4, 60, 73, 165], "essentiel": [4, 58, 61, 71, 73, 137, 199, 239, 243, 246], "m\u00e9lang": [4, 14, 73, 119, 120, 147, 169, 225, 239], "aller": [4, 35, 43, 52, 63, 73, 81, 85, 89, 102, 133, 136, 170, 174, 198, 202, 203, 204, 207, 239], "menu": [4, 73, 208], "option": [4, 11, 16, 52, 53, 56, 58, 63, 67, 73, 76, 82, 86, 94, 96, 101, 110, 117, 119, 120, 126, 137, 140, 142, 143, 148, 150, 159, 163, 170, 178, 197, 225, 233, 240, 243, 248], "indent": [4, 71, 73, 155, 157, 210, 225, 228, 238], "setting": [4, 69, 73], "similair": [4, 53, 54, 56, 58, 63, 64, 72, 73, 97, 191, 225, 239, 240, 246, 248], "enumerate_regex_search": [4, 5, 73], "exp": [4, 37, 52, 73, 96, 103, 176, 182, 188, 207, 208, 243, 248], "occurent": [4, 71, 171, 240], "pars": [4, 42, 229, 241], "findit": [4, 73, 96, 169, 207], "found": [4, 32, 53, 73, 126, 207], "get_day_nam": [4, 5, 73], "day": [4, 58, 87, 101, 208, 236], "nam": [4, 11, 32, 42, 48, 53, 56, 70, 72, 73, 101, 104, 107, 152, 153, 160, 173, 178, 191, 192, 225, 229, 239, 240, 243, 246], "giv": 4, "datatim": 4, "month": 4, "datetim": [4, 53, 73, 87, 97, 208, 238, 240, 243], "friday": [4, 73], "get_installed_distribu": [4, 5], "local_only": 4, "skip": [4, 97, 152], "include_edit": 4, "editables_only": 4, "user_only": 4, "use_cmd": 4, "installed": 4, "default": [4, 11, 41, 42, 67, 71, 142, 239, 243, 244, 248], "current": [4, 86, 117, 141, 167, 195, 196, 243], "virtualenv": 4, "low": [4, 29, 33, 71, 89, 136, 166, 195, 196, 240, 248], "ignor": [4, 133, 136, 137, 152, 208, 231, 237, 239], "compat": 4, "stdlib_pkg": 4, "report": 4, "user": [4, 21, 69, 70, 158, 178, 233, 240], "directory": [4, 42, 243, 248], "use": [4, 11, 32, 33, 42, 52, 77, 243], "updated": [4, 67], "get_month_nam": [4, 5, 73], "january": [4, 73], "get_package_info": [4, 5], "start": [4, 11, 17, 71, 79, 134, 135, 169, 174, 207, 240, 246], "end": [4, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 58, 60, 61, 63, 64, 71, 72, 83, 85, 87, 105, 113, 114, 126, 134, 137, 140, 149, 169, 183, 187, 188, 191, 192, 204, 207, 229, 233, 240, 246, 248], "retriev": [4, 70], "he": [4, 195, 196], "all": [4, 10, 11, 26, 32, 52, 77, 175, 176, 195, 196, 216, 225, 243, 248, 250], "get_packages_list": [4, 5], "dictionar": [4, 11], "information_about_packag": [4, 5, 73], "nouveau": [4, 56, 58, 64, 71, 73, 83, 87, 137, 148, 155, 159, 160, 166, 170, 182, 191, 201, 207, 208, 215, 216, 225, 227, 233, 240, 241], "main": [4, 7, 11, 53, 56, 67, 71, 73, 97, 98, 101, 121, 167, 170, 191, 192, 207, 208, 213, 214, 229, 246], "lent": [4, 43, 52, 60, 61, 62, 63, 73, 93, 103, 156, 170, 174, 175, 176, 187, 188, 190, 234, 240, 244], "incluent": [4, 71, 73, 240, 243], "matplotlib": [4, 22, 29, 33, 44, 48, 52, 55, 56, 68, 73, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 101, 108, 109, 112, 115, 116, 117, 118, 119, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 162, 163, 166, 168, 172, 173, 178, 182, 190, 204, 208, 211, 212, 214], "scipy": [4, 51, 55, 63, 68, 73, 91, 119, 120, 125, 162, 175, 176, 190, 197, 243], "scik": [4, 22, 64, 73, 101, 134, 136, 140, 142, 143, 145, 147, 150, 152, 181, 231, 245], "learn": [4, 22, 64, 73, 101, 134, 136, 140, 142, 143, 145, 147, 150, 152, 181, 231, 245], "linux": [4, 16, 42, 65, 68, 73, 76, 191, 233, 237, 240, 241], "compil": [4, 73, 96, 174, 175, 179, 207, 208, 226, 228, 240, 243, 248], "met": [4, 40, 60, 61, 63, 73, 107, 115, 116, 122, 154, 179, 198, 225, 239], "implicit": [4, 29, 53, 71, 73, 123, 158, 159, 170, 207, 216, 239, 240, 241], "contribu": [4, 73, 153, 208, 243], "d\u00e9faut": [4, 16, 36, 52, 53, 56, 58, 71, 73, 76, 102, 103, 114, 134, 147, 158, 175, 201, 217, 218, 225, 233, 238, 240, 241, 243, 244, 246, 248], "attent": [4, 14, 16, 34, 44, 52, 58, 71, 73, 87, 97, 178, 208, 219, 228, 237, 239, 243], "exact": [4, 53, 71, 73, 89, 101, 112, 137, 147, 163, 175, 196, 202, 225, 233, 239], "compiling": [4, 73], "anacond": [4, 16, 19, 23, 73, 76], "pr\u00e9compil": [4, 73, 243], "cond": [4, 72, 73, 76, 101, 208, 239], "module_compil": [4, 73], "list_of_installed_packag": [4, 5, 73], "licens": [4, 73, 75, 208], "summary": [4, 73, 101], "powerful": [4, 73], "analys": [4, 22, 60, 64, 70, 72, 73, 79, 87, 113, 131, 136, 139, 187, 240], "statistic": [4, 11, 73, 101, 153], "hom": [4, 41, 42, 48, 73, 101, 135, 140, 142, 143, 145, 148, 150, 174, 189, 207, 229], "pydat": [4, 56, 73], "author": [4, 73, 77], "development": [4, 16, 73], "team": [4, 73, 195, 196], "email": [4, 42, 66, 71, 73, 241], "googlegroup": [4, 73], "com": [4, 7, 42, 48, 53, 56, 67, 73, 87, 97, 98, 101, 121, 170, 191, 192, 207, 208, 213, 214, 216, 241, 248], "bsd": [4, 73], "locat": [4, 7, 48, 73, 167, 195, 196, 219], "python35_x64": [4, 73], "lib": [4, 48, 55, 69, 70, 73, 101, 148, 150, 174, 175, 176, 189, 207, 229, 233], "requir": [0, 4, 10, 67, 73], "dateutil": [4, 73, 87], "pytz": [4, 73], "freez": [4, 73], "r\u00e9pliqu": [4, 71, 73, 104], "environ": [4, 35, 52, 58, 61, 73, 76, 97, 103, 125, 240, 243], "docutil": [4, 73, 229], "jinja2": [4, 73, 207, 208], "markupsaf": [4, 73], "19": [4, 32, 43, 44, 48, 52, 53, 55, 56, 58, 73, 79, 84, 85, 86, 87, 90, 97, 101, 104, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 133, 137, 138, 139, 140, 143, 144, 145, 148, 149, 150, 152, 153, 162, 163, 167, 173, 174, 175, 176, 177, 178, 179, 182, 187, 188, 190, 197, 201, 204, 207, 208, 210, 217, 218, 225, 236, 239, 240, 248], "pygment": [4, 73], "sphinx": [4, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 73, 225, 229], "txt": [0, 4, 53, 67, 71, 73, 98, 101, 191, 192, 207, 208, 213, 214, 228, 229, 237, 240, 241], "property_exampl": [4, 5, 73], "property": [4, 11, 32, 71, 72, 73, 170, 225], "appel": [4, 34, 35, 40, 41, 43, 52, 55, 56, 58, 60, 63, 64, 71, 73, 83, 86, 90, 95, 97, 98, 100, 101, 103, 116, 122, 127, 140, 142, 146, 147, 150, 156, 158, 159, 160, 164, 174, 175, 176, 187, 191, 193, 197, 199, 201, 204, 207, 208, 216, 217, 219, 227, 228, 230, 231, 233, 236, 237, 240, 241, 243, 245, 246, 248], "attribut": [4, 11, 19, 23, 32, 41, 43, 52, 73, 104, 132, 154, 158, 160, 226, 227, 228, 233, 234, 241, 244, 246, 248], "classeavecproperty": [4, 73], "__init__": [4, 32, 41, 43, 48, 71, 72, 73, 126, 137, 142, 154, 155, 156, 157, 158, 159, 160, 174, 175, 176, 189, 197, 198, 199, 216, 219, 225, 227, 228, 229, 233, 241, 243, 244, 246], "self": [4, 32, 41, 43, 48, 55, 60, 71, 72, 73, 126, 137, 142, 154, 155, 156, 157, 158, 159, 160, 197, 198, 199, 200, 216, 219, 225, 227, 228, 229, 233, 240, 241, 243, 244, 246], "_x": [4, 73, 225], "_y": [4, 73, 225], "norm2": [4, 73], "impossibl": [4, 32, 40, 41, 43, 44, 58, 63, 64, 72, 73, 80, 86, 87, 93, 98, 104, 134, 151, 201, 225, 231, 239, 240, 241, 243, 244], "\u00e9criv": [4, 43, 73, 104, 175, 199, 201, 233, 240], "455": [4, 73, 189], "attributeerror": [4, 73, 104, 225, 228, 234], "python_path": [4, 5, 73], "pr\u00e9sent": [4, 7, 22, 35, 36, 52, 53, 58, 60, 61, 63, 71, 72, 73, 79, 87, 90, 95, 101, 113, 114, 125, 128, 136, 137, 156, 157, 166, 167, 178, 181, 191, 201, 207, 208, 213, 217, 226, 228, 231, 233, 239, 240, 241, 243, 246, 248], "introduit": [4, 52, 53, 71, 73, 114, 137, 138, 145, 156, 201, 239, 243], "avant": [4, 12, 13, 14, 22, 32, 43, 53, 55, 56, 58, 60, 61, 63, 64, 71, 72, 73, 85, 86, 93, 95, 97, 103, 112, 117, 118, 137, 169, 170, 191, 193, 201, 206, 207, 208, 209, 215, 216, 219, 225, 228, 233, 239, 240, 241, 243, 246], "fais": [4, 52, 53, 64, 73, 90, 137, 214, 225, 239, 240, 246], "moncod": [4, 73], "monmodul": [4, 73, 207], "src": [4, 73, 84, 89], "petit": [4, 18, 35, 53, 58, 61, 62, 63, 68, 73, 84, 88, 89, 90, 97, 110, 112, 134, 137, 140, 172, 179, 187, 199, 203, 208, 211, 212, 213, 223, 233, 239, 240, 243, 248], "fois": [4, 6, 10, 14, 22, 29, 32, 35, 41, 52, 55, 58, 60, 61, 62, 63, 64, 66, 71, 73, 76, 79, 82, 84, 85, 86, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 110, 112, 113, 115, 116, 117, 118, 119, 120, 122, 125, 127, 134, 135, 137, 138, 142, 143, 147, 148, 151, 153, 155, 156, 161, 162, 163, 165, 174, 179, 182, 192, 194, 197, 198, 201, 202, 204, 206, 207, 208, 209, 215, 216, 217, 225, 227, 228, 231, 233, 234, 239, 240, 241, 243, 244, 245, 246, 248], "barb": [4, 73], "ailleur": [4, 52, 58, 63, 73, 76, 97, 155, 168, 216, 231, 239], "pythonpath": [4, 73], "same_vari": [4, 5, 73], "dit": [4, 10, 35, 40, 44, 53, 58, 60, 63, 71, 72, 79, 86, 87, 97, 98, 113, 114, 140, 145, 150, 153, 179, 187, 188, 197, 201, 204, 208, 225, 228, 233, 239, 240, 241, 246], "modifi": [4, 43, 52, 53, 56, 58, 66, 68, 73, 85, 87, 91, 97, 102, 104, 107, 110, 111, 112, 114, 115, 117, 122, 123, 136, 161, 165, 170, 179, 181, 199, 207, 209, 216, 217, 225, 227, 228, 229, 231, 233, 236, 238, 241, 243, 244, 246], "concern": [4, 29, 53, 58, 61, 71, 73, 76, 208, 225, 228, 233, 237, 239, 240, 241, 246, 248], "principal": [4, 43, 48, 55, 56, 58, 60, 63, 64, 71, 73, 75, 76, 139, 164, 179, 190, 201, 207, 209, 231, 240, 241, 243, 244, 246, 248], "float": [4, 7, 8, 9, 10, 11, 26, 31, 43, 45, 48, 52, 54, 55, 57, 71, 73, 98, 117, 128, 154, 158, 175, 179, 191, 204, 207, 208, 228, 239, 240, 243, 248, 250], "effectu": [4, 10, 35, 40, 41, 43, 52, 53, 55, 56, 58, 60, 71, 73, 85, 90, 101, 110, 112, 113, 119, 120, 135, 179, 185, 186, 191, 193, 198, 202, 208, 215, 216, 220, 225, 228, 233, 237, 239, 240, 241, 243, 244, 246, 248], "dictionnair": [4, 35, 40, 41, 53, 56, 63, 73, 80, 96, 102, 103, 104, 105, 107, 110, 113, 126, 128, 132, 160, 170, 187, 191, 197, 213, 214, 215, 216, 227, 228, 234, 239, 241, 243, 244, 246, 248], "mutabl": [4, 73, 216, 217, 238], "d\u00e9sign": [4, 40, 43, 52, 53, 55, 56, 58, 60, 61, 64, 71, 72, 73, 114, 140, 155, 161, 167, 170, 177, 187, 197, 209, 216, 225, 233, 237, 239, 240, 243, 246, 248], "emplac": [4, 73, 119, 120], "accessibl": [4, 48, 58, 72, 73, 121, 192, 207, 225, 233, 239, 240, 241, 243], "paur": [4, 73], "identifi": [4, 14, 55, 58, 71, 73, 158, 216, 233, 239, 240], "_immutable_": [4, 73], "_mutable_": [4, 73], "effet": [4, 40, 58, 61, 64, 73, 79, 91, 112, 115, 134, 137, 138, 147, 162, 216, 225, 233, 239, 240, 241, 243], "copi": [4, 56, 71, 73, 103, 117, 118, 159, 225, 240, 241], "explicit": [4, 32, 43, 52, 57, 64, 71, 72, 73, 102, 103, 122, 156, 170, 217, 225, 227, 228, 230, 233, 239, 240, 243, 246], "demand": [4, 14, 29, 60, 62, 66, 71, 73, 76, 102, 103, 113, 153, 208, 216, 217, 225, 233, 240, 248], "sequenc": [4, 11, 73, 233, 240], "d\u00e9taill": [4, 48, 56, 63, 73, 97, 134, 228], "parm": [4, 9, 14, 22, 29, 32, 40, 52, 58, 61, 64, 73, 90, 103, 113, 121, 140, 149, 159, 165, 166, 191, 192, 201, 207, 225, 239, 240, 241, 243], "byt": [4, 73, 207, 229, 237, 241, 244], "frozenset": [4, 11, 73, 161], "dict": [4, 7, 10, 11, 29, 33, 41, 48, 56, 71, 73, 79, 80, 87, 88, 89, 90, 96, 107, 113, 117, 118, 121, 124, 135, 137, 138, 139, 140, 142, 143, 147, 148, 149, 150, 151, 152, 153, 159, 161, 167, 173, 175, 176, 178, 179, 182, 202, 225, 234, 239, 244], "bytearray": [4, 73], "rendr": [4, 14, 22, 43, 73, 89, 97, 100, 101, 208, 233, 239], "__slots__": [4, 72, 73, 225, 240], "creat": [0, 4, 11, 48, 52, 58, 73], "mak": [4, 11, 73, 195, 196], "surcharg": [4, 52, 71, 73, 156, 158, 199, 226, 241, 246], "__getattr__": [4, 73, 189], "__getattribute__": [4, 73, 225], "__setattr__": [4, 73, 225], "enfin": [4, 52, 58, 73, 98, 122, 168, 187, 208, 225, 233], "imbriquent": [4, 73], "uns": [4, 34, 58, 73, 76, 86, 170, 208, 233, 241, 248], "deepcopy": [4, 32, 71, 73, 240], "recop": [4, 52, 73, 177, 217, 225, 240], "uniqu": [4, 7, 14, 34, 52, 53, 55, 56, 63, 71, 72, 73, 84, 86, 96, 103, 122, 127, 137, 142, 154, 161, 167, 193, 195, 196, 197, 198, 202, 213, 217, 218, 225, 228, 233, 237, 239, 240, 241, 244, 246], "copy": [4, 32, 43, 44, 48, 53, 56, 64, 71, 73, 77, 79, 80, 86, 87, 90, 91, 96, 97, 101, 102, 110, 114, 115, 117, 118, 119, 121, 135, 140, 141, 153, 156, 165, 166, 168, 173, 182, 183, 188, 219, 222, 239, 240, 241, 243, 246], "inclus": [4, 10, 40, 44, 52, 60, 61, 71, 73, 74, 97, 107, 187, 207, 228, 233, 239, 240, 241, 248], "appliquent": [4, 58, 71, 73, 182, 227, 233, 240, 248], "sortable_class": [4, 5, 73], "cl": [4, 11, 32, 41, 72, 126, 133, 182, 225, 244], "prononc": [4, 64, 73, 215], "o1": [4, 73, 225], "o2": [4, 73, 225], "macl": [4, 73], "__lt__": [4, 73, 225], "autre_inst": [4, 73], "jenesaisp": [4, 73], "jenesaispas2": [4, 73], "teturn": 4, "io": [4, 19, 22, 23, 32, 41, 42, 48, 53, 69, 73, 84, 89, 167, 170, 174, 175, 176, 178, 189, 229, 241, 244, 248], "disqu": [4, 63, 73, 76, 137, 158, 170, 207, 208, 241, 243], "dur": [4, 14, 52, 53, 56, 58, 63, 72, 73, 75, 87, 112, 122, 170, 207, 208, 236, 240, 241, 243, 246, 248], "ordin": [4, 18, 35, 43, 58, 63, 71, 72, 73, 76, 114, 148, 170, 209, 229, 237, 240, 241, 243, 246], "automatis": [4, 62, 73, 76, 149, 209], "processur": [4, 73], "r\u00e9pet": [4, 40, 52, 64, 66, 71, 73, 76, 98, 104, 112, 117, 118, 119, 120, 191, 192, 197, 206, 207, 208, 209, 217, 225, 239, 241], "processus_quotidien": [4, 73], "nom_fichi": [4, 73, 241], "nb": [4, 9, 10, 12, 13, 32, 34, 48, 52, 53, 54, 73, 81, 86, 91, 93, 97, 104, 108, 109, 110, 117, 118, 135, 154, 159, 204, 225, 233, 239, 243], "open": [4, 19, 23, 42, 48, 52, 53, 56, 66, 71, 73, 137, 170, 178, 191, 207, 208, 214, 228, 229, 237, 241, 246, 248], "recopi": [4, 38, 54, 66, 71, 73, 170, 201, 216, 225, 239, 240, 241, 243], "gigaoctet": [4, 73], "apercevoir": [4, 73, 239], "corrompu": [4, 73], "perdu": [4, 34, 58, 71, 73, 179, 189, 207, 208, 210, 228, 241, 246], "heur": [4, 53, 58, 72, 73, 99, 208, 236, 243], "aur": [4, 40, 44, 52, 53, 58, 63, 64, 71, 73, 89, 97, 101, 115, 119, 120, 140, 154, 196, 207, 208, 225, 228, 240, 241, 243], "voulu": [4, 73, 81, 107], "d\u00e8s": [4, 14, 58, 62, 63, 66, 71, 73, 76, 110, 112, 142, 154, 156, 191, 199, 204, 208, 225, 228, 233, 240, 241], "invent": [4, 63, 73], "stream": [4, 73, 174, 175, 176, 178, 189, 241], "flux": [4, 73, 79, 80], "data_stream": [4, 73], "__file__": [4, 73, 175, 176, 189, 240, 243, 248], "ligne1": [4, 73], "nligne2": [4, 73], "st": [4, 32, 71, 73, 96, 121, 170, 236, 237, 240], "call_stack": [4, 5], "lambert93_to_wgp": [4, 5, 48, 73], "lambert": [4, 48, 73], "lambertn": 4, "coordinat": [4, 10, 240], "given": [4, 142, 195, 196, 239], "93": [4, 48, 56, 73, 79, 95, 118, 122, 171, 189], "ign": 4, "east": [4, 195, 196], "north": [4, 48, 195, 196], "lam93tolatlon": 4, "coordon": [4, 7, 8, 10, 14, 40, 48, 55, 56, 60, 61, 62, 63, 73, 93, 97, 103, 118, 119, 120, 139, 190, 197, 225, 228, 233, 239], "contenu": [4, 40, 43, 58, 71, 72, 73, 75, 158, 178, 207, 208, 218, 225, 233, 239, 240, 241, 243], "exprim": [4, 32, 43, 58, 61, 63, 72, 73, 137, 187, 190, 191, 208, 233], "coniqu": [4, 73], "cartopy": [4, 25, 49, 73], "conformal": [4, 73], "to_float32": [4, 5], "exampl": [5, 11, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 67, 70, 73, 74, 81, 98, 123, 154, 217, 235, 250], "construction_class": [5, 74, 235], "somm": [5, 6, 14, 33, 34, 35, 43, 51, 52, 53, 58, 61, 66, 71, 76, 80, 81, 82, 86, 87, 97, 103, 104, 106, 112, 115, 116, 128, 134, 135, 154, 157, 179, 187, 190, 197, 198, 202, 203, 204, 205, 208, 209, 210, 227, 239, 240, 243, 246, 248], "jeux": [5, 15, 53, 56, 64, 74, 76, 87, 97, 128, 132, 133, 145, 189, 190, 238, 246], "cartograph": [5, 48], "r\u00e9gress": [5, 22, 62, 100, 101, 113, 114, 115, 133, 135, 136, 142, 144, 145, 150, 152], "tool": [5, 74, 172, 175, 179, 187, 188, 191, 192, 207, 208, 213, 214], "decompress_zip": 5, "download_and_unzip": [5, 191, 192, 207, 208, 213, 214], "draw_diagram": [5, 172], "draw_graph_graphviz": [5, 187, 188], "total_siz": [5, 179], "profiling": [5, 189], "profilenod": [5, 11], "add_called_by": [5, 11], "add_calls_to": [5, 11], "as_dict": [5, 11], "filter_node_": [5, 11], "get_root": [5, 11], "to_json": [5, 11, 167], "to_text": [5, 11, 175], "profil": [5, 11, 58, 175, 189, 243], "profile2df": [5, 11], "profile2graph": [5, 11, 175], "run_graphviz": 5, "run_subprocess": 5, "video": [0, 5, 74], "build_diff_imag": [5, 11], "display_lin": [5, 11], "empty_main_loop": [5, 11], "get_pygame_screen_font": [5, 11], "wait_event": [5, 11], "get_local_fold": [5, 11], "make_video": [5, 11], "practic": [5, 12, 60, 74, 97, 193, 195, 196], "rues_par": [5, 74, 97], "bellman": [5, 7, 191], "connected_component": [5, 7], "distance_haversin": [5, 7, 97, 160], "distance_par": [5, 7], "euler_path": [5, 7, 97], "eulerien_extens": [5, 7, 97], "get_dat": [5, 7, 97], "graph_degre": [5, 7], "possible_edg": [5, 7], "tsp_bresenham": [5, 74], "draw_ellips": [5, 8], "draw_lin": [5, 8], "trace_ligne_simpl": [5, 8], "tsp_kohonen": [5, 12, 60, 74], "ajoute_vecteur": [5, 9], "construit_liste_neuron": [5, 9], "construit_vill": [5, 9, 10], "deplace_neuron": [5, 9], "distance_chemin": [5, 9, 94], "distance_euclidienne_carre": [5, 9], "modifie_structur": [5, 9], "moyenne_proximit": [5, 9], "multiplie_vecteur": [5, 9], "poids_attir": [5, 9], "simul": [5, 9, 10, 12, 13, 58, 100, 101, 113, 121, 132, 138, 185, 186, 206, 225, 239, 243, 246], "soustrait_vecteur": [5, 9], "vecteur_norm": [5, 9, 10], "tsp_kruskal": [5, 61, 74], "amelioration_chemin": [5, 10], "arbre_poids_minimal": [5, 10], "circuit_eulerien": [5, 10], "circuit_hamiltonien": [5, 10], "dessin_arete_zon": [5, 10], "distance_euclidian": [5, 10], "echange_posit": [5, 10], "echange_position_ess": [5, 10], "equation_droit": [5, 10], "evaluation_droit": [5, 10], "intersection_segment": [5, 10], "longueur_chemin": [5, 10], "oppose_vecteur": [5, 10], "repartition_zon": [5, 10], "retournement_ess": [5, 10], "supprime_crois": [5, 10], "tsp_kruskal_algorithm": [5, 10, 13], "vecteur_cosinus": [5, 10], "vecteur_point": [5, 10], "vecteur_sinus": [5, 10], "voisinage_zon": [5, 10], "voisinage_zone_xy": [5, 10], "tsp_kohonen_pygam": [5, 74], "pygame_simul": [5, 12, 13], "numpysex": [5, 51, 73, 74], "numpy_matrix2list": [5, 6, 51], "numpy_typ": [5, 6, 73], "faq_python": [5, 73], "stringio": [5, 32, 41, 167, 170, 174, 175, 176, 189, 244], "faq_except": 5, "faq_geo": [5, 73], "faq_numpy": 5, "voic": [6, 17, 40, 43, 51, 52, 53, 56, 63, 71, 107, 112, 143, 161, 177, 187, 216, 225, 233, 239, 240, 241, 243, 246], "np": [6, 19, 23, 44, 51, 52, 57, 60, 63, 94, 97, 117, 118, 136, 138, 158, 164, 176, 183, 184, 187, 220, 222], "shap": [6, 22, 33, 38, 51, 53, 55, 56, 57, 80, 84, 86, 87, 88, 90, 91, 94, 95, 101, 113, 114, 117, 118, 121, 122, 125, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 150, 151, 152, 159, 164, 167, 168, 173, 175, 176, 178, 180, 181, 183, 184, 190, 191, 206, 222, 246], "iv": [6, 51], "10x10": [6, 51, 52], "diag": [6, 51, 52, 114, 138, 183, 184], "diagonal": [6, 40, 43, 51, 52, 58, 72, 75, 76, 80, 114, 140, 183, 184, 192, 197], "dd": [6, 51, 87, 88, 216], "transpos": [6, 51, 52, 53, 55, 58, 63, 114, 175, 183, 184, 225, 233], "mx": [6, 51, 115, 116], "diagflat": [6, 51], "bool\u00e9en": [6, 40, 51, 52, 53, 64, 71, 233, 239], "avail": [6, 11], "bit": [6, 79, 126, 185, 186, 240, 241], "thos": 6, "programmeur": [6, 71, 73, 225, 227, 233, 237, 241], "cherchent": [6, 58, 61, 73], "possed": [6, 52, 58, 60, 61, 71, 73, 93, 98, 101, 112, 208, 215, 225, 228, 233, 240, 246], "255": [6, 73, 225], "uint8": [6, 73], "expliqu": [6, 26, 31, 35, 45, 56, 58, 60, 72, 73, 90, 96, 112, 115, 116, 123, 132, 139, 147, 150, 152, 179, 182, 204, 216, 225, 228, 239, 240, 241, 250], "float32": [6, 43, 56, 73, 175], "plut\u00f4t": [6, 14, 36, 52, 53, 56, 58, 60, 62, 63, 64, 66, 71, 72, 73, 76, 86, 87, 101, 103, 104, 110, 112, 117, 118, 122, 125, 136, 143, 146, 152, 154, 162, 164, 174, 179, 182, 213, 214, 215, 217, 225, 228, 229, 233, 239, 240, 241, 244, 246], "float64": [6, 52, 53, 55, 56, 73, 87, 101, 153, 222, 246], "doubl": [6, 33, 58, 63, 72, 73, 97, 103, 104, 107, 110, 122, 217, 233, 240, 241, 248], "prennent": [6, 58, 63, 73, 76, 146, 164, 167, 239], "co\u00fbteux": [6, 58, 61, 64, 73, 161, 174, 175, 193, 225, 240, 241], "gpu": [6, 52, 73], "explaining": [6, 22, 73], "fp64": [6, 73], "perform": [6, 14, 22, 29, 54, 55, 58, 61, 64, 73, 79, 85, 133, 134, 135, 137, 139, 140, 142, 143, 145, 147, 149, 153, 163, 202, 203, 205, 234, 241, 246], "gpus": [6, 73], "edge": [7, 11, 80, 86, 97, 110, 188, 191, 192], "max_it": [7, 9, 10, 12, 13, 87, 119, 120, 135, 137, 140, 142, 143, 144, 145], "allow": [7, 53], "callabl": [7, 10, 11, 239], "init": [7, 67, 69, 97, 119, 120], "verbos": [7, 9, 10, 11, 13, 83, 97, 119, 120, 122, 134, 137, 149, 165], "ford": [7, 97, 191], "noeud": [7, 10, 61, 80, 86, 89, 96, 97, 110, 128, 155, 157, 187, 188, 191, 215, 216], "maximal": [7, 52, 58, 63, 85, 105, 112, 149, 179, 187, 196, 202, 204, 215, 216, 246], "envisag": [7, 40, 58, 61, 97, 112, 122, 192, 196, 233, 241], "liaison": 7, "continu": [7, 19, 23, 32, 52, 58, 60, 71, 76, 83, 84, 86, 87, 89, 90, 93, 96, 97, 110, 113, 117, 118, 119, 120, 123, 125, 126, 152, 156, 164, 166, 181, 191, 204, 206, 208, 216, 217, 218, 222, 223, 228, 229, 231, 248], "ex\u00e9cu": [7, 36, 58, 61, 71, 72, 76, 97, 106, 112, 122, 147, 155, 174, 182, 201, 207, 215, 216, 217, 219, 225, 228, 229, 231, 233, 239, 240, 241, 246], "progres": 7, "arc": [7, 10, 44, 61, 80, 86, 97, 110, 187, 188, 239], "connected": [7, 10], "component": [7, 10, 243], "vertex": [7, 86], "id": [7, 42, 79, 84, 89, 170, 233, 239, 240], "lat1": [7, 160], "lng1": [7, 160], "lat2": [7, 160], "lng2": [7, 160], "haversin": [7, 97], "formul": [7, 52, 55, 76, 81, 101, 113, 116, 123, 140, 177], "euclidien": [7, 9, 63, 187, 188], "approch": [7, 14, 35, 43, 44, 61, 63, 64, 87, 97, 112, 114, 128, 136, 145, 168, 187, 191, 196, 248], "paris": [7, 53, 58, 112, 128], "added_edg": [7, 97], "eulerian": [7, 97], "path": [7, 10, 21, 32, 42, 67, 70, 96, 97, 175, 176, 189, 207, 229, 233, 241, 243], "we": [7, 11, 32, 33, 52, 97, 243], "assum": [7, 11, 101, 153, 208], "every": [7, 11, 53, 67, 195, 196], "has": [7, 11, 33, 67, 104, 114, 122, 142, 145, 195, 196, 225], "even": [7, 232], "degre": [7, 86, 153, 180, 239], "added": [7, 67, 97, 101], "typing": 7, "eul\u00e9rien": [7, 10], "coefficient": [7, 10, 22, 52, 55, 58, 80, 86, 93, 97, 100, 101, 103, 112, 113, 114, 134, 138, 140, 179, 190, 198, 201, 225], "max_segment": [7, 97], "longu": [7, 10, 35, 58, 61, 62, 63, 64, 72, 82, 83, 84, 96, 97, 112, 122, 123, 204, 207, 225, 239, 240, 243, 244], "avanc": [7, 18, 22, 62, 63, 79, 86, 208, 216, 233, 239, 240], "url": [7, 11, 48, 56, 87, 97, 98, 170, 178, 191, 192, 213, 214], "sdpython": [7, 19, 22, 23, 53, 56, 67, 84, 89, 97, 98, 101, 121, 170, 191, 192, 207, 208, 213, 214], "raw": [7, 11, 53, 56, 87, 97, 98, 101, 121, 170, 178, 191, 192, 207, 208, 213, 214], "_dat": [7, 53, 56, 97, 98, 100, 101, 121, 170, 191, 192, 207, 208, 213, 214], "paris_54000": [7, 97], "zip": [7, 11, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 53, 82, 86, 97, 107, 113, 115, 116, 121, 133, 167, 175, 191, 192, 207, 208, 213, 214, 239, 242, 243, 246], "dest": [7, 11], "timeout": [7, 11, 69, 246], "keep": [7, 11, 97], "ru": [7, 128], "rightarrow": [7, 53, 61, 63, 97, 103, 106, 107, 114, 168], "cec": [7, 12, 13, 41, 43, 54, 58, 60, 61, 64, 71, 72, 76, 79, 85, 102, 104, 105, 107, 123, 125, 135, 136, 138, 156, 165, 179, 207, 215, 216, 219, 225, 228, 231, 233, 239, 240, 241, 248], "test": [7, 11, 19, 20, 22, 23, 24, 29, 32, 40, 43, 52, 53, 58, 61, 63, 68, 85, 87, 93, 97, 101, 102, 103, 106, 112, 121, 128, 131, 132, 134, 142, 147, 149, 152, 153, 156, 168, 175, 180, 191, 193, 198, 202, 206, 209, 214, 219, 225, 229, 231, 238, 240, 241, 243], "estabishing": 7, "connect": [7, 10, 19, 23, 61, 71, 77, 86, 95, 110, 233, 241], "gard": [7, 18, 53, 55, 56, 58, 71, 81, 85, 90, 93, 95, 97, 98, 101, 110, 115, 116, 117, 118, 122, 123, 137, 141, 153, 169, 170, 188, 229, 243, 246], "sinon": [7, 10, 22, 52, 61, 64, 71, 72, 76, 80, 85, 86, 90, 91, 98, 102, 105, 109, 110, 112, 113, 122, 143, 164, 168, 177, 187, 188, 191, 201, 204, 206, 218, 233, 239, 240, 243, 246, 248], "1000": [7, 9, 10, 32, 33, 42, 48, 52, 53, 55, 56, 58, 71, 79, 80, 87, 90, 95, 101, 103, 109, 112, 114, 115, 116, 117, 118, 125, 126, 134, 135, 136, 137, 138, 140, 161, 162, 168, 171, 172, 174, 179, 190, 197, 201, 207, 208, 215, 216, 233, 239, 240, 241], "construir": [7, 14, 22, 43, 48, 52, 53, 55, 58, 60, 61, 64, 71, 72, 81, 85, 91, 96, 97, 103, 113, 119, 120, 124, 125, 128, 134, 136, 175, 183, 184, 190, 191, 204, 213, 215, 216, 223, 225, 233, 236, 239, 240, 248], "uple": [7, 40, 71, 228, 236, 240, 248], "conten": [7, 52, 53, 60, 71, 72, 76, 123, 170, 183, 184, 194, 197, 209, 225, 228, 233, 239, 240, 241, 248], "v1": [7, 91, 93, 97, 110, 139, 191, 192, 217, 240], "v2": [7, 91, 93, 97, 110, 139, 191, 192, 217, 240], "p1": [7, 9, 10, 11, 32, 71, 140, 156, 158, 188, 192, 197, 241], "p2": [7, 9, 10, 11, 32, 71, 140, 156, 158, 188, 192, 197, 225, 241], "ressembl": [7, 12, 13, 21, 53, 60, 62, 63, 64, 79, 83, 105, 110, 139, 212, 217, 225, 241, 244], "threshold": [7, 140, 143, 175], "vol": [7, 97], "oiseau": [7, 32, 97], "duquel": [7, 140], "symetr": [7, 53, 71, 84, 86, 97, 102, 183, 201], "inclu": [7, 71, 72, 85, 93, 101, 201, 207, 236, 239, 240, 241, 243], "xc": 8, "yc": 8, "dessin": [8, 28, 48, 64, 84, 89, 91, 95, 101, 136, 187, 188, 211, 212, 233], "ellips": 8, "centr": [8, 14, 32, 119, 120, 233, 239], "dem": [8, 97, 104, 120, 150, 157], "axe": [8, 10, 33, 53, 58, 72, 87, 101, 108, 109, 137, 138, 139, 187, 188, 203, 233], "horizontal": [8, 10, 52, 58, 72, 79, 192, 233], "vertical": [8, 10, 52, 58, 72, 233], "\u00e9quat": [8, 10, 43, 87, 113, 114, 240], "x\u00b2": 8, "a\u00b2": 8, "y\u00b2": 8, "b\u00b2": 8, "origin": [8, 52, 67, 84, 136, 236], "tangent": [8, 137, 239], "x0": [8, 44, 52, 141], "y0": [8, 44, 141], "frac": [8, 29, 35, 43, 52, 55, 57, 58, 60, 61, 63, 64, 79, 85, 87, 88, 90, 102, 103, 104, 105, 112, 113, 114, 116, 117, 118, 126, 134, 137, 138, 168, 180, 183, 184, 185, 186, 187, 190, 193, 203, 204, 212, 218, 220, 225], "x_0": [8, 48, 185, 186], "y_0": [8, 48], "bresenham": 8, "x1": [8, 22, 33, 44, 52, 104, 119, 120, 124, 136, 137, 141, 153, 181], "y1": [8, 44, 104, 119, 120, 124, 136, 141, 181], "x2": [8, 22, 33, 52, 63, 104, 115, 116, 119, 120, 124, 136, 137, 138, 153, 163, 181, 183, 184, 201], "y2": [8, 104, 115, 116, 119, 120, 124, 136, 163, 181, 183, 184], "contraint": [8, 22, 58, 60, 61, 72, 79, 96, 97, 137, 170, 172, 198, 199, 225, 239, 246], "pixel": [8, 233], "vill": [9, 10, 14, 53, 60, 61, 63, 95, 97, 191, 192], "neuron": [9, 22, 60, 64, 136], "\u00e9cran": [9, 10, 11, 12, 13, 71, 76, 207, 233, 240, 241], "700": [9, 10, 13, 118], "tir": [9, 10, 39, 52, 53, 55, 58, 60, 63, 86, 87, 88, 90, 95, 101, 107, 113, 117, 118, 119, 120, 146, 155, 162, 168, 179, 185, 186, 193, 194, 195, 196, 204, 206, 211, 212, 219, 243, 246], "carr": [9, 10, 40, 43, 52, 61, 63, 71, 111, 112, 113, 115, 116, 120, 123, 132, 168, 179, 180, 187, 190, 207, 208, 209, 210, 217, 222, 225, 239, 240, 243], "dist_w": 9, "forc": [9, 44, 52, 58, 67, 85, 97, 115, 155, 168, 192, 208, 233, 239, 240, 241, 243], "d\u00e9plac": [9, 10, 40, 61, 90, 105, 115, 177, 216, 218, 233, 241], "attir": [9, 60], "incr\u00e9ment": [9, 79, 86, 209, 225], "compte_v": 9, "compte_n": 9, "nb_sel": 9, "solliqu": 9, "scalair": [9, 10, 52, 53], "attract": 9, "ver": [9, 43, 58, 60, 63, 71, 72, 79, 86, 89, 110, 112, 114, 117, 118, 134, 147, 168, 204, 209, 225, 228, 233, 237, 239, 240, 241, 246], "800": [9, 10, 12, 13, 61, 101, 118, 138, 172], "500": [9, 10, 12, 13, 61, 76, 79, 97, 117, 118, 133, 136, 137, 159, 167, 172, 190, 194, 246], "200": [9, 12, 53, 58, 79, 90, 97, 118, 119, 120, 133, 135, 144, 153, 163, 167, 175, 177, 179, 182, 190, 205, 206, 216, 233], "tour": [9, 12, 39, 91, 97, 155, 165, 181, 197, 233, 239, 243], "dist_ratio": [9, 12], "75": [9, 12, 28, 33, 53, 58, 72, 79, 101, 139, 143, 180, 190, 191, 192], "25": [0, 9, 11, 12, 28, 32, 43, 52, 53, 55, 56, 64, 79, 80, 86, 87, 90, 95, 97, 98, 101, 104, 110, 112, 113, 115, 119, 120, 122, 126, 133, 134, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 152, 153, 167, 168, 175, 176, 179, 180, 187, 188, 197, 201, 204, 207, 208, 210, 215, 216, 217, 225, 229, 236], "12000": [9, 12], "99": [9, 12, 40, 43, 52, 53, 56, 79, 93, 117, 121, 125, 134, 159, 182, 214, 225, 239], "tirag": [9, 52, 55, 79, 86, 119, 120, 121, 147, 162, 168, 199, 200, 225], "ratio": [9, 12, 33, 58, 72, 79, 87, 93, 117, 118, 137, 150, 151, 168, 190, 216], "soustr": 9, "taille_zon": 10, "am\u00e9lior": [10, 14, 44, 55, 58, 60, 61, 63, 64, 72, 83, 96, 145, 151, 190, 194, 225, 229, 239, 243], "croisent": [10, 44, 60, 91], "quadrillag": [10, 119, 120], "zon": [10, 13, 14, 29, 58, 61, 62, 72, 119, 120, 139, 140, 239, 246], "longueur": [10, 20, 24, 35, 43, 44, 52, 53, 58, 60, 61, 71, 85, 86, 89, 96, 97, 98, 104, 106, 112, 123, 124, 126, 127, 128, 170, 179, 191, 198, 202, 215, 216, 217, 223, 237, 239, 240, 241, 246], "c\u00f4t": [10, 14, 22, 32, 43, 58, 63, 64, 76, 90, 97, 101, 115, 116, 120, 123, 125, 137, 168, 179, 212, 225], "zone_taill": 10, "d\u00e9coup": [10, 14, 29, 64, 71, 85, 90, 96, 147, 169, 174, 191, 233, 239, 240, 241, 248], "imag": [10, 11, 12, 13, 21, 48, 53, 61, 64, 85, 96, 97, 108, 109, 112, 136, 145, 147, 165, 167, 175, 177, 187, 188, 192, 194, 203, 204, 205, 206, 208, 211, 212, 215, 216, 218, 233, 246, 248], "which": [10, 11, 32, 33, 67, 145], "element": [10, 32, 53, 87, 122, 155, 177, 216, 223, 225, 229], "sublist": 10, "neighbor": [10, 32, 64, 125, 136, 146, 147, 148, 149, 150, 151, 152, 189, 190, 195, 196], "nod": [10, 11, 86, 155], "that": [10, 11, 33, 52, 67, 95, 101, 153, 175, 195, 196, 243], "whol": 10, "circuit": [10, 13, 20, 24, 44, 59, 95, 97, 132], "tand": [10, 35, 71, 225, 233, 239, 240, 241, 243], "march": [10, 16, 40, 43, 44, 53, 63, 72, 83, 86, 95, 96, 98, 114, 115, 119, 120, 126, 134, 136, 140, 142, 147, 148, 163, 167, 214, 220, 225, 239, 240, 246], "confondu": [10, 143], "ar\u00eat": [10, 61, 97], "sommet": [10, 60, 61, 187], "sortent": 10, "pres": [10, 40, 52, 56, 63, 112, 120, 125, 135, 136, 144, 150, 151, 163, 166, 172, 184, 203, 207, 214, 216, 225, 228, 233, 239, 240], "euclien": 10, "regard": [10, 53, 58, 63, 71, 79, 81, 86, 87, 89, 97, 101, 112, 125, 134, 135, 139, 140, 144, 145, 146, 148, 150, 164, 174, 176, 179, 182, 198, 202, 207, 209, 214, 233], "neglige": 10, "1e": [10, 43, 80, 112, 135, 137, 163, 173, 204], "05": [10, 29, 38, 41, 43, 52, 53, 58, 79, 87, 90, 101, 134, 135, 137, 138, 153, 159, 162, 170, 216, 236, 246, 248], "echang": [10, 172], "ka": 10, "kb": 10, "inser": [10, 48, 53, 60, 61, 71, 83, 90, 91, 107, 123, 155, 175, 191, 217, 225, 228, 231, 233, 234, 237, 239, 240, 243, 246, 248], "droit": [10, 53, 58, 61, 63, 64, 71, 72, 79, 85, 90, 97, 137, 141, 155, 157, 159, 168, 193, 208, 209, 233, 239, 240, 241, 243], "ax": [10, 29, 33, 48, 52, 53, 56, 79, 80, 86, 87, 88, 90, 91, 93, 94, 95, 97, 101, 108, 109, 117, 118, 119, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 152, 153, 159, 163, 166, 178, 190, 204, 211, 212, 214], "p3": [10, 71, 158, 197, 225], "p4": [10, 121], "vec": [10, 188], "oppos": [10, 32, 52, 58, 80, 134, 154, 165, 239], "ask_zon": 10, "r\u00e9part": [10, 14, 58, 61, 66, 71, 87, 97, 112, 166, 207, 243], "z": [10, 52, 53, 61, 71, 79, 89, 96, 106, 113, 136, 141, 166, 169, 183, 184, 185, 186, 201, 202, 209, 225, 239, 240, 248], "zx": 10, "zy": 10, "absciss": [10, 29, 53, 58, 72, 118, 159, 203, 225], "ordon": [10, 32, 53, 76, 117, 118, 159, 191, 215, 225, 239], "suppl\u00e9mentair": [10, 41, 43, 52, 58, 71, 104, 138, 225, 228, 233, 240, 243, 246], "judici": [10, 58, 72, 241], "length": [10, 13, 167, 248], "simplif": [10, 71, 160, 227], "numb": [10, 11, 13, 32, 33, 34, 38, 41, 42, 52, 54, 101, 125, 134, 140, 142, 143, 172, 173, 190, 234, 239, 246], "cit": [10, 13, 48, 53, 58, 63, 71, 76, 87, 95, 112, 239, 240, 246], "shortest": 10, "going": 10, "dimensional": [10, 195, 196], "2d": [10, 48, 52, 64, 131, 169], "plan": [10, 19, 23, 24, 48, 53, 58, 60, 61, 187, 188, 197], "into": [10, 11, 67, 70, 195, 196], "squar": [10, 52, 101, 105, 114], "sub": [10, 11, 53, 71, 90, 139, 169, 240, 248], "enlev": [10, 41, 53, 61, 66, 71, 76, 79, 95, 97, 98, 106, 109, 112, 120, 138, 150, 159, 187, 199, 207, 231, 233, 240, 241, 243, 244], "vec1": 10, "vec2": 10, "cosinus": [10, 102], "sinus": 10, "vectoriel": [10, 114, 138], "zmax": 10, "filenam": [11, 53, 174, 175, 176, 189, 208, 213, 214, 229, 231, 241], "unzip": [11, 53], "destin": [11, 43, 58, 122, 246], "verbosity": [11, 13], "decompressed": 11, "display": [11, 12, 13, 32, 53, 84, 85, 89, 96, 97, 112, 136, 145, 147, 165, 174, 175, 177, 187, 188, 192, 194, 203, 204, 205, 206, 211, 212, 215, 216, 218], "progress": [11, 86, 87, 208], "unzipped": 11, "blockdiag": [11, 172], "pillow": 11, "draw": [11, 33, 86, 97, 124, 162, 166], "definit": 11, "valu": [11, 33, 48, 52, 53, 56, 71, 79, 87, 90, 96, 97, 101, 117, 121, 135, 138, 140, 141, 142, 143, 148, 150, 151, 153, 170, 173, 175, 179, 181, 187, 191, 192, 208, 214, 216, 223, 233, 239, 240, 241], "additional": 11, "g": [11, 52, 61, 63, 71, 86, 89, 96, 97, 101, 125, 126, 127, 134, 135, 137, 140, 148, 155, 166, 174, 187, 190, 194, 208, 214, 225, 233, 240, 243, 248], "graphviz_help": [11, 187, 188], "vertic": [11, 80, 97, 110], "engin": [11, 167], "dot": [11, 52, 55, 84, 89, 114, 246], "graphviz": [11, 84, 89], "below": [11, 175], "output": [11, 52, 70, 142, 228], "neato": 11, "gv": 11, "label": [11, 29, 33, 56, 79, 85, 89, 93, 97, 119, 121, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 159, 163, 190, 195, 196, 214, 233, 239, 246], "color": [11, 28, 29, 32, 44, 48, 61, 64, 79, 108, 109, 113, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 163, 211, 212], "image_nam": 11, "png": [11, 53, 64, 85, 96, 97, 112, 136, 145, 147, 165, 177, 187, 188, 192, 194, 203, 204, 205, 206, 207, 211, 212, 215, 216, 218, 248], "handler": 11, "approximat": [11, 33], "footprint": 11, "content": [0, 11, 42, 56, 61, 64, 71, 112, 208, 229, 241], "measur": 11, "recursivity": 11, "purpos": [11, 77], "total": [11, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 58, 61, 70, 79, 85, 87, 95, 134, 140, 142, 143, 149, 159, 174, 240, 250], "automatically": 11, "builtin": [11, 174, 175, 176, 189, 225, 239, 243], "container": [11, 142, 161, 202, 216, 240], "subcl": 11, "dequ": [11, 238], "add": [0, 11, 42, 53, 69, 79, 96, 113, 158, 233], "iterat": 11, "over": [11, 52, 58, 185, 186, 206], "somecontainerclass": 11, "othercontainerclass": 11, "get_el": 11, "getsizeof": [11, 179, 240], "func_nam": 11, "nc1": 11, "nc2": 11, "tin": [11, 175], "tall": 11, "spent": 11, "pnod": 11, "called": [11, 195, 196], "time_el": 11, "filter_nod": 11, "sort_key": 11, "sortkey": [11, 174, 175], "render": 11, "result": [11, 32, 33, 95, 101, 153, 156, 175, 229, 246], "interpreted": 11, "then": [11, 32, 67, 70, 195, 196, 243], "loaded": 11, "remov": [11, 69, 71, 79, 86, 134, 169, 240, 241], "built": [11, 174, 175, 176, 189, 229, 239, 243], "small": [11, 22, 58], "row": [11, 32, 33, 40, 52, 53, 56, 84, 89, 101, 117, 118, 133, 134, 135, 139, 142, 152, 153, 155, 157, 172, 178, 179, 191, 192, 195, 196, 198, 207, 208, 216, 233], "static": 11, "info": [11, 67, 70, 83, 84, 89, 134, 167, 189, 241, 246, 248], "filter": 11, "displayed": 11, "overwrit": 11, "held": 11, "boolean": [11, 52, 53], "forget": 11, "root": [11, 52, 89, 155, 172, 184, 216, 233, 239, 246], "as_str": 11, "kwarg": [11, 142], "json": [11, 15, 19, 23, 132, 207, 242], "dump": [11, 41, 137, 170, 241, 244], "fct_width": [11, 175], "60": [11, 32, 48, 52, 53, 56, 57, 64, 79, 87, 101, 112, 133, 134, 138, 146, 147, 153, 159, 173, 178, 208, 214, 225, 233, 248], "fct": [11, 33, 36, 90, 115, 116, 122, 142, 166], "cumul": [11, 52, 53, 85, 121, 162, 174, 175, 176, 189], "rootrem": 11, "as_df": 11, "return_result": 11, "execu": [11, 30, 45, 46, 69, 250], "pstat": [11, 174, 175, 176, 189], "stat": [11, 41, 48, 52, 87, 137, 156, 170, 174, 175, 176, 178, 180, 189, 229, 233, 243, 244, 246], "sort_stat": [11, 174, 175, 176, 189], "posit": [11, 29, 32, 35, 44, 48, 52, 53, 55, 56, 61, 62, 63, 64, 71, 76, 83, 85, 86, 87, 90, 98, 110, 111, 117, 118, 121, 122, 134, 137, 140, 143, 153, 154, 156, 160, 164, 165, 172, 177, 183, 187, 188, 201, 202, 207, 211, 212, 215, 216, 217, 218, 219, 220, 223, 225, 228, 229, 233, 239, 240, 248], "parameter": [11, 149], "cprofil": [11, 174, 175, 176, 189], "hir": [11, 64], "pdf": [11, 64, 176, 241], "clean_text": 11, "logf": [11, 32], "clean": [11, 175], "logging": [11, 230, 246], "onnx_array_ap": 11, "bench_ortmodule_nn_gpu6": 11, "prof": [11, 176], "pd": [11, 101, 148, 150, 178], "pyinstru": [11, 174], "nic": [11, 53], "stack": [11, 52, 53, 96, 230], "sam": [11, 32, 33, 52, 53, 195, 196], "replicat": 11, "produced": 11, "her": [11, 32, 167, 225, 243], "fct0": 11, "sleep": [11, 34, 122, 246], "fct1": 11, "fct2": 11, "fct3": 11, "fct4": 11, "00003": 11, "61147": 11, "61144": 11, "00001": [11, 137], "81219": 11, "11066": 11, "00002": 11, "11065": 11, "70151": 11, "20067": 11, "20065": 11, "50082": [11, 33], "81208": 11, "run": [11, 52, 53, 54, 55, 85, 93, 95, 115, 116, 118, 125, 163, 170, 171, 172, 182, 189, 198, 204, 214, 216, 229, 233, 246], "cwd": 11, "pygame_help": 11, "pygam": [11, 12, 13], "screen": 11, "maxw": 11, "seq1": 11, "seq2": 11, "diff": [11, 56, 79, 88, 101, 117, 118, 121, 148, 150, 182, 241, 246], "bar": [11, 53, 63, 64, 138, 139, 162, 166, 187, 193], "prev_bar": 11, "build": [11, 69, 181, 229], "distinct": [11, 36, 53, 58, 64, 80, 86, 113, 115, 116, 154, 162, 182, 216, 234, 240], "surfac": [11, 43, 48, 97, 109, 112, 132], "height": [11, 178, 233], "width": [11, 97, 136, 145, 147, 167, 187, 188, 194, 204, 205, 206, 233, 239], "cannot": [11, 41, 55, 142], "sequencematch": 11, "font_small": 11, "font_half": 11, "associated": [11, 77], "previous": [11, 167], "blu": [11, 32, 56, 79, 108, 109, 120, 139, 163, 178, 233], "deleted": 11, "green": 11, "vert": [11, 32, 56, 58, 61, 64, 72, 89, 113, 114, 168, 169, 190, 204], "yellow": [11, 178], "pictur": 11, "kind": [11, 53, 77, 87, 101, 134, 135, 138, 139, 141, 143, 148, 150, 152, 159], "averag": [11, 58, 172, 173], "suggest": [11, 89, 96], "mov": 11, "defin": [11, 32, 33, 79], "circl": [11, 119, 191], "msg": [11, 241], "event": [11, 58, 72, 77, 233, 246], "loop": [11, 52, 53, 54, 55, 66, 85, 86, 90, 93, 94, 95, 112, 115, 116, 118, 125, 163, 170, 171, 172, 182, 189, 198, 204, 214, 216, 246], "mous": 11, "click": [11, 167], "program": [11, 243], "halt": 11, "anoth": [11, 67, 70], "again": [11, 69, 83], "quit": [11, 233], "flag": [11, 12, 13, 248], "initializ": 11, "set_mod": [11, 12, 13], "thre": [11, 53], "3h": [11, 121], "5h": 11, "leav": [11, 155, 233, 243], "still": 11, "opened": 11, "generat": [11, 32, 142], "warning": [11, 48, 86, 101, 133, 134, 135, 136, 137, 145, 152, 181, 189, 230, 248], "paramet": [11, 87, 88], "working": [11, 53], "seen": 11, "wait": [11, 42, 112, 246], "video_help": 11, "file_or_fold": 11, "temp_video": 11, "outvid": 11, "is_color": 11, "xvid": 11, "opencv": 11, "fram": [11, 233], "per": [11, 32, 42, 52, 53, 54, 55, 58, 85, 93, 95, 112, 115, 116, 118, 125, 163, 170, 171, 172, 182, 189, 198, 204, 208, 214, 216], "fourcc": 11, "videowrit": 11, "rel": [11, 58, 61, 64, 72, 86, 225], "hav": [11, 52, 56, 142, 195, 196], "resiz": [11, 54, 184, 190, 233], "adding": 11, "first_click": [12, 13], "See": [12, 56], "attend": [12, 13, 58, 66, 71, 213, 233, 241, 246, 248], "pression": [12, 13, 111, 233, 246], "clic": [12, 13, 233, 246], "sour": [12, 13, 233, 246], "delay": [12, 13, 56, 100, 101, 112, 121], "lanc": [12, 13, 21, 34, 71, 72, 89, 97, 169, 229, 231, 241, 246], "tsp_kruskal_pygam": 13, "sav": [13, 14], "J": [14, 16, 37, 44, 64, 83, 96, 97, 102, 126, 142, 155, 159, 166, 180, 187, 188, 207, 208], "avou": 14, "allait": 14, "s\u00e9anc": [14, 19, 23, 52, 63, 75, 199, 207, 215], "pr\u00e9dir": [14, 63, 64, 101, 113, 135, 136, 138, 140, 141, 142, 144, 145, 146, 147], "racont": [14, 63], "avion": [14, 58, 76, 208], "avon": [14, 93, 101, 179, 183, 192, 208, 233], "\u00e9tudi": [14, 58, 62, 63, 98, 100, 101, 105, 113, 166, 176, 213, 216, 219], "problem": [14, 15, 19, 20, 22, 23, 24, 29, 35, 37, 43, 44, 48, 52, 60, 61, 71, 74, 76, 83, 85, 86, 87, 89, 93, 94, 101, 105, 106, 110, 111, 112, 114, 117, 118, 121, 123, 125, 134, 135, 136, 139, 153, 163, 166, 167, 170, 177, 187, 188, 190, 191, 195, 196, 197, 201, 207, 209, 213, 214, 215, 218, 219, 225, 228, 229, 231, 233, 236, 237, 240, 241, 244, 248], "int\u00e9ress": [14, 32, 35, 48, 52, 54, 58, 61, 63, 64, 71, 79, 88, 90, 101, 110, 111, 127, 134, 150, 162, 163, 204, 233, 239, 240, 241, 243, 248], "compagn": [14, 58], "r\u00e9pons": [14, 29, 40, 43, 47, 51, 64, 71, 81, 103, 112, 113, 115, 116, 117, 118, 122, 128, 140, 145, 150, 165, 187, 194, 196, 198, 216, 218, 219, 233, 239, 241], "client": [14, 53, 208, 225], "risqu": [14, 53, 58, 72, 145, 187, 188, 228], "assez": [14, 17, 36, 52, 53, 58, 62, 63, 64, 71, 72, 79, 81, 90, 93, 97, 101, 105, 113, 123, 136, 137, 139, 140, 145, 159, 170, 171, 172, 177, 189, 190, 203, 205, 206, 225, 233, 236, 241, 243, 244], "flou": 14, "n\u00e9cessit": [14, 43, 58, 71, 76, 102, 117, 133, 137, 192, 210, 225, 233, 241], "\u00e9clairc": 14, "aiment": [14, 76, 153], "impr\u00e9cis": 14, "quantifi": [14, 126], "Je": [14, 29, 32, 52, 56, 58, 62, 64, 83, 89, 96, 97, 105, 134, 138, 140, 163, 167, 169, 187, 188, 207, 208, 212, 216, 246], "dis": [14, 56, 98, 208], "vrai": [14, 16, 43, 52, 58, 64, 71, 79, 83, 85, 87, 88, 93, 96, 97, 102, 112, 134, 135, 137, 140, 151, 155, 156, 168, 172, 190, 201, 204, 208, 215, 225, 233, 239, 240, 241, 244], "vais": [14, 208], "Nous": [14, 63, 79, 101, 114, 116, 147, 178, 179, 192, 233, 240], "perm": [14, 35, 53, 64, 76, 77, 85, 90, 91, 94, 98, 156, 175, 219, 227], "r\u00eav": 14, "chauffeur": 14, "disparaissent": [14, 152], "mutualis": 14, "cons\u00e9quent": [14, 35, 43, 44, 52, 58, 61, 71, 85, 98, 112, 134, 197, 216, 218, 225, 228, 233, 239, 240, 243, 246, 248], "financi": [14, 72, 112], "accident": [14, 208], "vivon": [14, 208], "\u00e9conom": [14, 19, 23, 58, 112], "quas": [14, 58, 62, 63, 75, 76, 81, 91, 107, 115, 116, 125, 139, 147, 173, 207, 240], "argent": [14, 58, 112], "d\u00e9pens": [14, 112, 194], "estim": [14, 22, 35, 58, 62, 64, 98, 101, 112, 131, 134, 135, 138, 139, 145, 148, 150, 152, 168, 204, 213, 216, 225, 243], "sinistr": 14, "facteur": [14, 58, 152, 180, 216], "\u00e2ge": [14, 53, 79, 100, 101, 236], "marqu": [14, 58, 96, 240, 246], "voitur": [14, 97], "mesur": [14, 34, 40, 41, 47, 50, 58, 63, 64, 79, 85, 90, 95, 112, 122, 140, 146, 166, 171, 174, 175, 176, 179, 182, 193, 198, 205, 208, 215, 216, 233, 243, 246, 248], "person": [14, 32, 42, 58, 63, 66, 71, 76, 77, 80, 87, 100, 101, 112, 121, 208, 234, 236, 240, 243, 244], "sembl": [14, 40, 56, 58, 72, 79, 80, 86, 118, 134, 135, 199], "manqu": [14, 22, 40, 53, 55, 56, 58, 71, 87, 97, 104, 134, 176, 209, 210, 239, 240], "souv": [14, 174], "long": [14, 33, 34, 36, 48, 53, 55, 58, 61, 63, 71, 72, 85, 89, 91, 95, 96, 97, 104, 136, 152, 155, 163, 166, 170, 175, 179, 182, 192, 198, 207, 213, 216, 233, 240, 241, 246], "organis": [14, 17, 58, 62, 71, 160, 172, 208, 225, 227, 233, 241, 243], "kilom\u00e9trag": 14, "adress": [14, 56, 58, 75, 76, 87, 208, 233, 237, 239], "longitud": [14, 48, 56, 97, 240], "lattitud": 14, "quarti": 14, "anonymis": 14, "dout": [14, 37, 44, 52, 58, 62, 63, 64, 71, 72, 91, 101, 110, 117, 118, 122, 125, 139, 144, 208, 213, 233, 239, 240], "r\u00e9duit": [14, 21, 52, 55, 64, 71, 72, 83, 98, 110, 117, 118, 122, 136, 137, 177, 190, 198, 213, 233, 239], "mont": [14, 37, 58, 63, 112, 128, 243], "souhaiton": [14, 214], "null": [14, 32, 58, 64, 80, 101, 103, 112, 117, 118, 141, 173, 183, 184, 187, 190, 191, 204, 228, 240, 241, 243], "semain": [14, 53, 56, 76, 100, 101, 207, 236], "horizon": [14, 138], "difficil": [14, 58, 63, 64, 71, 76, 119, 120, 133, 148, 190, 208, 210, 231, 239, 240, 246], "fix": [14, 29, 36, 48, 58, 60, 63, 71, 79, 86, 112, 133, 135, 162, 179, 189, 201, 202, 227, 239, 240], "tendanc": [14, 44, 58, 72, 138], "surapprentissag": [14, 135], "possibil": [14, 32, 40, 52, 61, 63, 64, 71, 96, 123, 135, 160, 197, 215, 225, 233, 239, 240, 243], "temporel": [14, 22, 52, 137, 138], "futur": [14, 22, 34, 58, 101, 148, 150, 243], "para\u00eet": [14, 43, 58, 61, 72, 96, 134, 145, 149, 150, 153, 159, 174, 179, 182, 213, 216, 225, 227, 239, 241, 243, 248], "adapt": [14, 43, 48, 53, 60, 93, 170, 182, 215, 223, 225, 246], "vu": [14, 52, 56, 64, 87, 96, 152, 160, 179, 191, 208, 225, 233, 240], "incap": [14, 64], "nouvel": [14, 52, 53, 56, 58, 64, 71, 76, 79, 83, 91, 96, 121, 131, 135, 153, 158, 193, 201, 208, 216, 225, 233, 239, 241, 243, 246], "temorel": 14, "\u00e9volu": [14, 35, 52, 58, 61, 62, 71, 72, 76, 79, 83, 87, 90, 134, 189, 231, 233, 239, 240, 241, 246, 248], "exclur": [14, 123], "taux": [14, 22, 58, 80, 87, 112, 133, 140, 145, 175, 209, 219, 241], "chacun": [14, 18, 29, 32, 40, 43, 52, 53, 58, 60, 82, 123, 126, 145, 162, 178, 193, 208, 213, 225, 233, 239, 240, 243, 246, 248], "pertinent": [14, 29, 58, 61, 64, 79, 140, 143, 148, 149, 158], "aper\u00e7oit": [14, 103, 176, 191, 240], "absolu": [14, 58, 63, 114, 115, 116, 120, 134, 143, 150, 233, 239, 241], "intuit": [14, 44, 56, 63, 64, 83, 110, 155, 219, 225], "r\u00e9gion": [14, 48], "pay": [14, 48, 53, 58, 63, 112, 208], "propic": 14, "improb": [14, 55, 117], "correl": [14, 26, 27, 30, 56, 72, 101, 117, 118, 131, 137, 148, 153, 250], "latitud": [14, 48, 56, 97, 240], "conduir": [14, 208], "nord": 14, "sud": [14, 211, 212], "franc": [14, 48, 53, 55, 56, 58, 62, 63, 72, 87, 98, 112, 125, 172, 208, 213, 214, 237, 240, 241], "regroup": [14, 32, 52, 55, 58, 60, 71, 91, 197, 225, 227, 228, 233, 239, 240, 241, 243, 244], "habit": [14, 32], "dens": 14, "constraindr": 14, "milli": [14, 61, 63, 64, 181], "ascend": 14, "hi\u00e9rarch": 14, "000": [14, 35, 46, 52, 53, 55, 70, 85, 95, 101, 113, 125, 126, 133, 153, 163, 170, 171, 174, 175, 176, 182, 189, 204, 214, 240], "clusteris": [14, 187, 188], "cluster": [14, 119, 120], "num\u00e9ro": [14, 32, 80, 86, 112, 113, 197, 225, 233, 240, 248], "clust": [14, 119, 120], "cat\u00e9goriel": [14, 22, 113], "onehotencod": 14, "dep": [14, 52, 53, 56, 58, 61, 72, 101, 112, 116], "acp": [14, 60, 64, 131, 138, 190], "indiqu": [14, 22, 40, 41, 48, 52, 53, 56, 63, 64, 71, 76, 84, 85, 105, 112, 122, 133, 134, 140, 142, 150, 152, 154, 170, 193, 204, 207, 210, 213, 218, 225, 228, 231, 233, 239, 240, 241, 243, 244, 246], "interpret": [14, 22, 34, 53, 64, 83, 136, 147, 174, 175, 209, 217, 225, 228, 239, 240, 245], "fort": [14, 53, 58, 63, 71, 72, 98, 122, 125, 134, 149, 190, 197, 208, 241], "l\u00e0": [14, 53, 55, 56, 58, 64, 66, 71, 87, 90, 97, 114, 119, 120, 134, 157, 219, 225, 229], "personnalis": [14, 53], "requiert": [14, 16, 53, 66, 79, 117, 118, 233], "sensibl": [14, 22, 58, 63, 134, 135, 147, 149, 150, 216], "group": [14, 22, 58, 64, 89, 96, 98, 101, 112, 136, 156, 166, 169, 178, 195, 196, 207, 233, 239], "individus": 14, "fr\u00e9quenc": [14, 35, 58, 79, 98, 179, 201, 213, 214, 233, 246], "particuli": [14, 48, 52, 53, 58, 61, 64, 71, 79, 86, 90, 96, 139, 147, 150, 153, 154, 170, 176, 182, 208, 213, 216, 225, 228, 229, 231, 233, 234, 239, 240, 241, 246], "personnel": [14, 52, 178], "r\u00e9partit": [15, 53, 58, 63, 72, 119, 120, 132, 143, 147, 150, 151, 162], "bref": [15, 55, 87, 132, 142, 190], "aper\u00e7u": [15, 43, 63, 132], "appr\u00e9hend": [15, 58, 64], "autour": [15, 20, 24, 26, 31, 35, 39, 43, 45, 58, 60, 71, 72, 83, 88, 89, 97, 111, 128, 132, 134, 140, 149, 169, 207, 217, 239, 246, 250], "tsp": [15, 20, 24, 26, 31, 45, 60, 63, 128, 250], "correct": [15, 44, 48, 52, 71, 74, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 140, 142, 150, 181, 225, 228, 239, 240, 241], "xml": [15, 19, 23, 69, 71, 132, 207, 241, 243, 244], "scraping": [15, 132], "pokemon": [15, 132], "r\u00e9vis": 15, "pr\u00e9vis": [15, 243], "td": [15, 19, 20, 23, 24, 63, 88, 99, 167, 178, 183, 215], "\u00e9nonc": [15, 19, 23, 43, 53, 80, 81, 97, 99, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 122, 128, 132, 137, 170, 188, 195, 196, 200, 202, 208, 216], "minut": [15, 19, 20, 22, 23, 24, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 56, 58, 75, 83, 97, 248], "install": [16, 42, 48, 53, 56, 71, 135, 140, 142, 143, 145, 174, 207, 208, 228, 231, 233, 243], "gageur": 16, "archived": 16, "unofficial": 16, "binar": 16, "maintenu": [16, 76, 135, 243], "veux": [16, 208], "comprendr": [16, 22, 53, 58, 62, 63, 71, 83, 87, 112, 134, 136, 155, 175, 179, 198, 207, 209, 216, 219, 225, 228, 231, 233, 239, 240, 241], "travail": [16, 66, 71, 76, 84, 100, 101, 233], "ingrat": 16, "permen": 16, "gohlk": 16, "servic": [16, 58, 69, 208, 225, 244], "shut": 16, "down": [16, 195, 196], "viabl": 16, "ubuntu": [16, 42], "subsystem": 16, "ca": [16, 44, 48, 55, 58, 63, 72, 82, 83, 87, 93, 96, 97, 127, 143, 147, 148, 160, 163, 167, 170, 179, 212, 214, 216, 233, 243], "d\u00e9marr": [16, 84, 246], "serveur": [16, 76, 241, 245], "jupyt": [16, 22, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 76, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 167, 189], "notebookapp": 16, "token": 16, "password": 16, "acced": [16, 40, 71, 76, 79, 88, 103, 170, 201, 216, 225, 228, 233, 234, 240, 241, 244], "navig": [16, 76, 243], "visual": [16, 19, 23, 76], "studio": [16, 19, 23, 76], "remot": 16, "noyau": 16, "22": [0, 16, 32, 38, 48, 52, 53, 54, 55, 56, 57, 79, 86, 87, 90, 97, 99, 101, 104, 107, 110, 112, 113, 114, 115, 118, 121, 122, 126, 133, 134, 137, 140, 142, 143, 144, 149, 152, 153, 167, 175, 178, 179, 180, 184, 187, 188, 190, 197, 201, 204, 207, 216, 217, 229, 236, 240, 248], "04": [16, 25, 52, 53, 64, 79, 87, 97, 101, 137, 140, 146, 147, 153, 178, 182, 246, 248], "googl": [17, 42, 66, 71, 97, 111, 193, 194, 195, 196], "concour": 17, "passion": [17, 208], "d\u00e9veloppeur": [17, 44, 229, 231], "complet": [17, 19, 23, 35, 44, 52, 58, 60, 61, 63, 71, 76, 87, 94, 96, 97, 101, 113, 117, 118, 142, 152, 153, 156, 183, 184, 187, 201, 207, 215, 217, 225, 228, 233, 239, 240, 241], "sujet": [17, 19, 22, 23, 54, 58, 59, 63, 75, 83, 96, 97, 105, 112, 127, 135, 158, 163, 239, 240, 241], "kick": 17, "logic": [17, 193], "personnag": [18, 166], "r\u00e9soud": [18, 32, 63, 113, 114], "tom": [18, 32, 58], "harry": [18, 32, 58], "pott": [18, 32], "fiol": 18, "poison": [18, 178], "vin": [18, 62, 64, 131, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150], "orti": 18, "recul": [18, 187, 188], "imm\u00e9diat": [18, 21, 58, 71, 115, 228, 231, 241], "gauch": [18, 32, 40, 53, 58, 63, 72, 85, 90, 155, 157, 159, 233, 240, 241, 243], "contenus": [18, 213, 240], "ni": [18, 71, 72, 154, 156, 169, 180, 208, 225, 233, 237, 239, 240, 248], "enjeu": [18, 76, 244], "insurmont": 18, "einstein": [18, 26, 31, 45, 128, 250], "ma\u00eetris": [19, 23, 76, 233, 239], "h\u00e9ritag": [19, 20, 23, 24, 132, 156, 226, 227], "numpy": [19, 20, 22, 23, 24, 26, 29, 31, 33, 41, 43, 45, 50, 53, 54, 68, 71, 74, 75, 79, 80, 83, 84, 86, 87, 88, 89, 90, 91, 94, 95, 101, 108, 109, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 148, 149, 150, 152, 158, 159, 162, 163, 164, 168, 170, 172, 175, 176, 179, 181, 183, 184, 187, 188, 189, 190, 206, 207, 219, 220, 222, 240, 244, 246, 250], "broadcasting": [19, 23], "html": [19, 23, 29, 52, 56, 71, 84, 89, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 162, 174, 175, 178, 189, 207, 208, 225, 241, 243, 244], "csv": [19, 23, 56, 87, 100, 101, 121, 207, 208, 241, 243], "unitair": [19, 20, 22, 23, 24, 128, 132, 175, 231, 243], "unittest": [19, 23, 181, 243], "git": [19, 23, 65, 68, 241], "pull": [19, 23, 67], "request": [19, 23, 53, 98, 170, 178, 208], "abord": [19, 23, 35, 42, 43, 48, 53, 55, 56, 58, 61, 64, 71, 72, 76, 79, 80, 81, 84, 85, 86, 87, 93, 94, 96, 97, 101, 102, 110, 115, 116, 128, 134, 142, 145, 162, 169, 176, 182, 191, 197, 201, 202, 208, 213, 214, 225, 239, 240, 241, 243, 245, 246, 248], "Elles": [19, 23, 52, 56, 58, 62, 63, 71, 72, 76, 135, 154, 164, 174, 197, 207, 225, 233, 240, 243], "evalu": [19, 23, 61, 64, 99], "ressourc": [19, 23, 76, 229, 241, 246], "doc": [19, 23, 52, 56, 72, 84, 89, 162, 225], "algortihm": [19, 23], "examen": [19, 23, 63, 74, 99, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 219], "2022": [19, 56, 87, 99, 170], "aspect": [19, 23, 58, 90, 136, 161, 197, 233, 246], "r\u00e9uss": [19, 53, 66, 71, 83, 117, 118, 137, 182, 183], "getting": [19, 23], "started": [19, 23], "cheat": [19, 23, 68], "sheet": [19, 23, 53, 68], "minicond": [19, 23, 76], "mamb": [19, 23], "logiciel": [19, 23, 53, 58, 71, 167, 207], "ing\u00e9nier": [19, 23], "produir": [19, 23, 58, 106, 225, 228], "fiabl": [19, 23, 79, 87, 101, 152, 181, 215, 243], "collabor": [19, 23], "demain": [19, 23, 62, 208, 209], "intelligent": [19, 23, 58, 75], "artificiel": [19, 23, 29, 56, 58, 75, 119, 120, 121, 133, 142, 145], "nvidi": [19, 23], "hi": [19, 23], "31": [0, 19, 23, 25, 38, 48, 52, 53, 55, 56, 58, 72, 79, 95, 97, 101, 104, 110, 118, 121, 122, 133, 134, 137, 142, 145, 149, 152, 153, 155, 167, 174, 175, 187, 188, 201, 204, 208, 216, 217, 225, 236, 239], "rappel": [19, 22, 23, 25, 52, 62, 66, 71, 87, 97, 105, 123, 140, 183, 184, 187, 208, 233, 239, 240], "feuill": [19, 23, 25, 32, 71, 86, 135, 155, 215, 241], "rout": [19, 23, 25, 56, 58, 91, 97, 101, 191, 216], "d\u00e9": [20, 132], "rotat": [20, 132, 152, 214], "transit": [20, 132, 246], "broadcast": [20, 24, 52], "pivot": [20, 24, 56, 90, 132, 135, 150, 151, 208, 221, 224], "gauss": [20, 24, 113, 132, 136, 183, 184, 191, 192, 221, 224], "rechech": [20, 24], "pr\u00e9fix": [20, 24, 89, 96, 208, 221, 224, 228, 240, 241, 243], "variat": [20, 22, 24, 72, 136], "travelling": [20, 24, 63, 94], "kohonen": [20, 24, 59], "1h30": [20, 24], "enonc": [20, 24, 47, 51, 74], "gross": [21, 55], "epxlicit": 21, "command": [21, 53, 67, 70, 76, 167, 181, 191, 215, 233, 239, 240, 241, 246], "powershel": 21, "optimiz": [21, 52, 58, 115, 116, 135, 141, 197, 219], "vhd": 21, "appdat": 21, "localstat": 21, "ext4": 21, "vhdx": 21, "mod": [21, 60, 71, 79, 101, 115, 134, 140, 142, 148, 150, 166, 175, 185, 186, 207, 225, 228, 239, 246], "full": [21, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 55, 175, 178, 189, 239, 246], "nom": [21, 41, 48, 52, 53, 56, 58, 60, 71, 72, 76, 85, 97, 101, 102, 140, 144, 153, 160, 166, 167, 170, 178, 181, 201, 207, 208, 214, 217, 225, 228, 233, 234, 239, 240, 244, 246, 248], "canonicalgrouplimited": 21, "ubuntu22": 21, "04lts_79rhkp1fndgsc": 21, "articl": [21, 33, 52, 58, 60, 72, 75, 87, 96, 97, 135, 185, 186, 207, 211, 212, 213, 214, 225, 246], "daniel": 21, "nashed": 21, "sql": [22, 53, 56], "cpu": [22, 52], "cud": 22, "pytorch": [22, 52], "comparaison": [22, 41, 55, 64, 71, 93, 101, 134, 139, 145, 152, 159, 170, 217, 225, 236, 240], "torch": [22, 175], "roc": [22, 26, 27, 30, 64, 131, 145, 250], "chatgpt": 22, "llm": 22, "sllm": 22, "forest": [22, 145, 216], "boosting": [22, 131], "xgboost": [22, 67], "lightgtbm": 22, "catboost": 22, "randomforest": [22, 135], "overfitting": [22, 64, 131, 153], "gradient": [22, 52, 58, 63, 64, 131, 135, 137], "rat": [22, 29, 63, 140, 178], "ridg": [22, 131], "lasso": [22, 131], "elasticnet": 22, "pipelin": [22, 64, 131, 142, 145], "pr\u00e9trait": 22, "textuel": [22, 241], "load_diabet": [22, 137], "grill": [22, 23, 53, 55, 111, 137, 205, 233], "r\u00e9tro": 22, "propag": [22, 71, 80, 121], "geopand": [22, 49], "trust": [22, 29, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189], "predict": [22, 29, 63, 64, 101, 119, 120, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 189, 190], "classifi": [22, 136, 142], "lim": [22, 140, 142, 143, 189], "partial": [22, 113, 114, 134], "dependent": [22, 141, 153], "plot": [22, 29, 33, 44, 47, 48, 52, 55, 56, 79, 80, 85, 87, 88, 90, 91, 93, 94, 95, 97, 101, 108, 109, 115, 116, 117, 118, 119, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 152, 153, 155, 159, 163, 166, 168, 172, 173, 182, 187, 188, 190, 204, 214], "\u00e9thiqu": [22, 166], "latani": 22, "sweeney": 22, "technology": 22, "human": [22, 70], "dictat": 22, "our": 22, "civic": 22, "equality": 22, "opportunity": 22, "supervised": [22, 64], "holt": 22, "winter": 22, "r\u00e9gim": 22, "kalman": 22, "ssa": [22, 131], "prophet": 22, "statsmodel": [22, 101, 138, 141, 153], "ruptur": [22, 239], "tslearn": 22, "surv": 22, "anomal": 22, "nmf": 22, "tsne": 22, "skorch": 22, "ecrir": [22, 32, 53, 102, 103, 106, 107, 110, 112, 113, 114, 115, 116, 119, 120, 166, 181, 183, 184, 187, 188, 191, 199, 203, 207, 209, 210, 213, 241, 246], "script": [22, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 84, 89, 243], "automat": [22, 52, 53, 59, 64, 71, 117, 178, 207, 208, 213, 225, 233, 240, 241], "cal": [22, 134, 142, 145, 146], "baselin": 22, "savoir": [22, 35, 40, 44, 52, 53, 56, 58, 63, 64, 71, 75, 87, 92, 99, 101, 105, 110, 112, 153, 154, 163, 175, 181, 189, 201, 209, 213, 214, 216, 218, 225, 228, 233, 239, 240, 241, 246], "compliqu": [22, 53, 58, 62, 63, 64, 84, 87, 90, 142, 153, 228, 244, 246, 248], "bon": [22, 29, 32, 43, 55, 56, 58, 63, 64, 79, 93, 97, 98, 101, 110, 115, 117, 118, 119, 120, 134, 135, 136, 139, 140, 143, 148, 150, 199, 207, 208, 211, 212, 213, 216, 219, 241], "pr\u00e9diciton": 22, "proport": [22, 29, 80, 140], "appris": [22, 64, 101, 134], "bascul": [22, 112], "r\u00e9pond": [22, 86, 88, 113, 170, 196, 203, 227, 239, 246], "cat\u00e9gor": [22, 32, 58, 86, 87, 113, 134, 142, 240, 241], "oral": [22, 99], "avril": 22, "minuit": 22, "devr": [22, 40, 44, 52, 58, 63, 64, 76, 89, 97, 105, 127, 133, 163, 214, 216, 219, 225, 237, 239, 240, 246], "choix": [22, 29, 35, 58, 96, 97, 100, 101, 117, 122, 136, 138, 157, 191, 192, 208, 213, 217, 225, 239, 240, 244], "apprendr": [22, 63, 64, 101, 135, 152, 208], "r\u00e9pondr": [22, 29, 90, 96, 100, 101, 112, 122, 170], "100": [22, 29, 32, 33, 34, 35, 38, 41, 42, 52, 53, 55, 56, 58, 68, 79, 80, 85, 86, 87, 88, 89, 90, 93, 97, 101, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 125, 126, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 149, 155, 159, 161, 162, 163, 168, 170, 172, 173, 175, 177, 178, 182, 184, 190, 197, 199, 200, 204, 214, 215, 216, 219, 225, 233, 234, 239, 240, 246], "2023": [23, 32, 56, 87, 97, 99, 121, 224], "sudoku": 23, "lieu": [24, 34, 35, 43, 53, 58, 61, 72, 81, 86, 125, 133, 156, 164, 197, 216, 225, 233, 239, 243, 246, 248], "dam": [24, 26, 31, 45, 132, 225, 250], "minimax": 24, "09": [25, 32, 33, 43, 52, 53, 79, 87, 97, 135, 137, 140, 153, 172, 188, 236, 240, 246, 248], "ensa": [25, 63, 97], "03": [25, 45, 53, 56, 79, 80, 87, 94, 101, 114, 121, 134, 135, 137, 153, 159, 163, 168, 178, 184, 204, 246, 248, 250], "18": [25, 43, 44, 48, 52, 53, 54, 55, 56, 73, 79, 84, 86, 87, 89, 90, 93, 95, 97, 101, 104, 105, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 147, 148, 150, 152, 153, 154, 162, 163, 167, 173, 175, 178, 179, 187, 188, 190, 195, 196, 197, 198, 201, 204, 207, 208, 210, 212, 216, 217, 218, 235, 236, 248], "wsl": 25, "nettoyag": [25, 71, 241], "06": [25, 30, 43, 52, 53, 79, 87, 112, 135, 137, 153, 161, 240, 241, 250], "08": [25, 30, 32, 33, 43, 52, 53, 56, 79, 87, 97, 135, 137, 153, 161, 170, 172, 188, 207, 236, 240, 246, 248], "\u00e9nigm": [25, 26, 31, 45, 63, 128, 132, 250], "hermion": [25, 32], "12": [25, 29, 32, 37, 38, 43, 44, 48, 52, 53, 54, 55, 56, 58, 63, 64, 71, 79, 81, 83, 85, 86, 87, 88, 90, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 152, 153, 158, 159, 162, 163, 167, 168, 171, 172, 173, 174, 175, 178, 179, 180, 182, 184, 187, 188, 190, 192, 198, 207, 208, 210, 212, 216, 217, 225, 236, 239, 240, 246], "07": [25, 33, 43, 53, 55, 56, 58, 79, 87, 97, 101, 135, 137, 159, 161, 173, 178, 188, 236, 240, 246], "receiv": [26, 27, 30, 131, 250], "characteristic": [26, 27, 30, 131, 250], "groupby": [26, 31, 45, 53, 56, 101, 121, 129, 147, 150, 151, 171, 250], "gil": [26, 31, 45, 132, 245, 250], "mathador": [0, 26, 31, 45, 132, 250], "convers": [26, 31, 35, 41, 45, 55, 71, 121, 128, 154, 170, 207, 208, 225, 228, 236, 239, 241, 244, 250], "s\u00e9rialis": [26, 31, 45, 132, 167, 225, 240, 241, 242, 243, 250], "protobuf": [26, 31, 45, 244, 250], "hypercub": [26, 31, 45, 128, 239, 250], "voyag": [26, 31, 45, 128, 191, 250], "auto_examples_python": 26, "auto_examples_jupyt": 26, "gallery": [26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "generated": [26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 162], "go": [28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 55, 170], "seaborn": [28, 63, 101, 139, 148, 150, 152], "clustermap": [28, 101], "head": [28, 32, 33, 48, 53, 54, 56, 64, 67, 70, 88, 90, 101, 121, 135, 137, 138, 140, 143, 146, 147, 150, 153, 159, 167, 172, 178, 191, 192, 208], "T": [28, 29, 43, 48, 52, 53, 55, 56, 64, 70, 71, 80, 86, 87, 90, 96, 101, 113, 114, 117, 118, 137, 139, 143, 166, 168, 172, 177, 180, 206, 228], "fixed_acidity": [28, 64, 141, 146, 147, 153], "volatile_acidity": [28, 64, 141, 146, 147, 153], "88": [28, 57, 58, 64, 79, 97, 114, 121, 134, 146, 147, 168, 171, 208, 225, 233], "citric_acid": [28, 64, 141, 146, 147, 153], "residual_sugar": [28, 64, 139, 141, 146, 147, 153], "chlorid": [28, 64, 139, 141, 146, 147, 153], "076": [28, 64, 146, 147, 174], "098": [28, 64, 146, 147], "free_sulfur_dioxid": [28, 64, 139, 141, 146, 147, 153], "total_sulfur_dioxid": [28, 64, 139, 141, 146, 147, 153], "34": [0, 28, 38, 48, 52, 53, 55, 56, 58, 64, 72, 81, 86, 89, 95, 97, 101, 104, 106, 110, 112, 123, 133, 135, 137, 142, 146, 147, 152, 167, 169, 170, 175, 187, 188, 192, 201, 208, 214, 217, 225], "67": [28, 52, 56, 58, 64, 72, 79, 101, 104, 112, 121, 146, 147, 225, 239], "density": [28, 64, 139, 141, 146, 147, 153, 176], "9978": [28, 64, 146, 147], "9968": [28, 64, 146, 147], "ph": [28, 64, 139, 141, 146, 147, 153, 170], "51": [28, 52, 53, 56, 64, 97, 101, 114, 133, 134, 135, 137, 146, 147, 149, 151, 153, 163, 169, 214, 225, 240], "sulphat": [28, 64, 141, 146, 147, 153], "68": [28, 52, 56, 64, 79, 101, 112, 115, 145, 146, 147, 180], "alcohol": [28, 64, 141, 146, 147, 153], "corr": [28, 56, 101, 117, 118], "numeric_only": 28, "cent": [28, 56, 66, 71, 101, 225], "cmap": [28, 52, 136, 139], "vlag": 28, "linewidth": [28, 87, 101, 136, 152], "figsiz": [28, 29, 48, 52, 53, 56, 80, 86, 87, 88, 90, 91, 94, 95, 97, 101, 117, 118, 119, 120, 121, 124, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 152, 153, 159, 162, 163, 166, 178, 190, 212, 214], "plt": [28, 29, 33, 44, 48, 52, 53, 55, 56, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 108, 109, 115, 116, 117, 118, 119, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 152, 153, 155, 159, 162, 163, 166, 168, 172, 178, 190, 204, 211, 212, 214], "clustergrid": [28, 101], "0x7f165aa2c520": 28, "running": [28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "096": [28, 30, 101, 250], "plot_correl": [28, 30, 250], "ipynb": [28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 167, 207], "zipped": [28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "nuag": [29, 60, 100, 101, 113, 117, 118, 133, 134, 135, 136, 142, 190, 214], "Cet": [29, 52, 58, 61, 62, 112, 113, 114, 158, 182, 211, 212, 216, 218, 225, 228, 233, 239, 241, 243], "sklearn": [29, 64, 101, 119, 120, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 167, 189, 190], "metric": [29, 135, 137, 140, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 189], "f1_scor": 29, "precision_recall_curv": [29, 140], "roc_curv": [29, 140, 143, 145], "confusion_matrix": [29, 140, 144, 145], "linear_model": [29, 101, 133, 136, 137, 140, 141, 142, 143, 144, 145, 152, 153], "logisticregress": [29, 133, 136, 140, 141, 142, 143, 144, 145], "model_select": [29, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 190], "train_test_spl": [29, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 190], "make_classif": [29, 64, 142, 189, 190], "pyplot": [29, 33, 44, 48, 52, 53, 55, 56, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 108, 109, 115, 116, 117, 118, 119, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 152, 153, 155, 159, 162, 163, 166, 168, 172, 178, 190, 204, 211, 212, 214], "ext_test_cas": [29, 152, 172, 173], "unit_test_going": [29, 152], "n_sampl": [29, 52], "10000": [29, 52, 54, 87, 90, 95, 103, 104, 112, 118, 124, 137, 162, 168, 172, 182, 189, 190, 215, 216, 234], "n_featur": [29, 133, 189, 190], "n_class": [29, 189, 190], "n_repeated": 29, "n_redund": [29, 64, 142], "fig": [29, 48, 52, 56, 80, 87, 88, 90, 91, 94, 95, 97, 117, 118, 119, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 152, 153, 159, 163, 166, 178, 190, 204, 211, 212, 214, 226, 244], "figur": [29, 48, 52, 60, 61, 74, 135, 162, 165, 177, 192, 197, 225, 233, 243, 246], "subplot": [29, 48, 52, 56, 79, 80, 86, 87, 88, 90, 91, 94, 95, 97, 108, 109, 117, 118, 119, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 152, 153, 159, 163, 166, 178, 190, 204, 211, 212, 214], "line2d": [29, 44, 101, 115, 116], "0x7f1658341750": 29, "train": [29, 76, 134, 144, 149, 150, 151, 154, 175, 216, 229, 239, 240], "x_train": [29, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 190], "x_test": [29, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 190], "y_train": [29, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 190], "y_test": [29, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 190], "apprend": [29, 63, 64, 101, 135, 137, 142, 145, 150], "logreg": 29, "fit": [29, 52, 63, 64, 101, 119, 120, 121, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 189, 190], "environment": [29, 67, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189], "pleas": [29, 87, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 167, 189], "rerun": [29, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189], "unabl": [29, 42, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189, 229, 248], "rend": [29, 71, 100, 101, 112, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189, 207, 208, 225, 234, 239], "loading": [29, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189], "nbview": [29, 101, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189], "logisticregressionifittedlogisticregress": [29, 136, 140, 141, 142, 143, 144], "pred": [29, 101, 113, 119, 120, 135, 136, 137, 140, 142, 143, 149, 152, 194, 220], "y_pred": 29, "confus": [29, 68, 83, 96, 133, 140, 144, 145, 225, 239], "conf": [29, 140, 144], "scind": [29, 71, 233, 241], "scor": [29, 64, 133, 134, 135, 140, 142, 143, 145, 147], "n\u00e9cessair": [29, 34, 40, 43, 52, 53, 58, 61, 63, 64, 71, 72, 76, 85, 89, 90, 91, 97, 101, 102, 104, 112, 114, 117, 118, 137, 148, 172, 174, 176, 181, 183, 192, 204, 208, 217, 219, 225, 228, 229, 231, 233, 239, 240, 241, 243, 244, 246], "fpr_cl": 29, "tpr_cl": 29, "y_prob": 29, "_": [29, 32, 42, 44, 48, 52, 64, 72, 79, 83, 86, 97, 113, 114, 115, 116, 117, 118, 133, 134, 135, 140, 142, 143, 145, 168, 185, 186, 188, 190, 207, 214, 216, 227, 248], "ravel": [29, 80, 88, 91, 101, 114, 117, 118, 121, 125, 134, 135, 136, 142, 143, 144, 145, 148, 176, 206], "prob_pred": 29, "lw": [29, 52, 121, 124, 135, 137, 141, 152], "navy": 29, "linestyl": [29, 48, 79], "xlim": 29, "ylim": [29, 101, 152], "xlabel": [29, 33, 79, 101, 135, 187, 188, 214], "mal": [29, 58, 64, 87, 91, 96, 97, 110, 131, 178, 228, 239, 246], "ylabel": [29, 79, 101, 135, 187, 188, 214], "titl": [29, 52, 56, 79, 80, 85, 87, 90, 101, 135, 136, 139, 159, 170, 172, 173, 229, 233, 239, 248], "legend": [29, 53, 56, 79, 85, 87, 93, 119, 121, 133, 134, 137, 138, 139, 140, 141, 142, 143, 145, 152, 153, 163, 166, 190, 214, 239], "loc": [29, 53, 56, 79, 101, 135, 139, 143, 167, 225, 228, 229, 239, 240], "right": [29, 33, 43, 52, 53, 55, 58, 61, 64, 67, 72, 77, 79, 85, 90, 105, 112, 114, 122, 134, 137, 155, 157, 167, 172, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 203, 204, 214, 220, 233, 240], "0x7f16578bab00": 29, "sugger": [29, 58, 110, 112, 113, 117, 118, 126, 139, 167, 179, 185, 186, 187, 188, 190, 191, 192, 202, 213, 233, 240], "optimal": [29, 44, 58, 60, 61, 76, 94, 95, 114, 115, 116, 122, 128, 136, 137, 149, 191, 192, 196], "pren": [29, 55, 58, 97, 114, 145, 208, 233], "monoton": 29, "vstack": [29, 52, 55, 119, 120, 133, 137, 142, 175], "0x7f16586430d0": 29, "reten": [29, 52, 58, 71, 134, 207, 234, 240, 241, 243, 246], "d\u00e9finit": [29, 61, 62, 74, 88, 114, 201, 217, 233, 246, 248], "fpr": [29, 140, 143], "tpr": [29, 140, 143], "docu": [29, 53, 58, 60, 71, 75, 76, 84, 89, 207, 208, 213, 229, 241, 243, 246], "rapp": 29, "0x7f1657df0220": 29, "ponder": [29, 53, 114, 134, 135], "y_scor": 29, "precd": 29, "rappd": 29, "seuild": 29, "f1d": 29, "set_titl": [29, 48, 52, 53, 79, 91, 94, 97, 117, 118, 119, 120, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 152, 153, 163], "0x7f1657047820": 29, "graphiqu": [29, 44, 53, 58, 60, 63, 68, 76, 87, 97, 141, 148, 211, 213, 214, 225, 233, 239, 243, 245, 249], "compr\u00e9hensibl": [29, 236], "air": [29, 38, 43, 44, 133, 138, 140, 148, 153, 168, 203, 208], "auc": [29, 140, 143], "reli": [29, 40, 44, 58, 60, 61, 63, 64, 71, 75, 80, 86, 91, 96, 97, 101, 121, 140, 187, 188, 192, 225, 233, 239, 243, 246], "s_f": 29, "s_t": [29, 87], "hist": [29, 33, 53, 55, 86, 140, 143, 148, 150, 171, 179, 182, 213, 214], "prob": [29, 101, 113, 138, 140, 142, 143, 145, 153, 182], "bin": [29, 33, 53, 79, 134, 140, 143, 148, 150, 240, 241], "600": [29, 118, 133, 144], "250": [29, 79, 90, 101, 119, 134, 190], "0x7f1657004eb0": 29, "pointill": [29, 233], "d\u00e9lim": [29, 203], "ajust": [29, 58, 97], "haut": [29, 40, 41, 55, 58, 90, 117, 123, 159, 201, 216, 228, 233, 239, 248], "bleu": [29, 32, 64, 89, 95, 113, 169, 233], "roug": [29, 32, 56, 58, 62, 63, 64, 72, 79, 89, 95, 113, 139, 140, 141, 142, 143, 147, 169, 204, 216, 233], "Ces": [29, 41, 53, 55, 58, 60, 61, 63, 64, 66, 71, 72, 76, 85, 97, 99, 175, 191, 207, 208, 213, 217, 225, 233, 234, 237, 239, 240, 243, 244, 246, 248], "quantit": [29, 43, 58, 63, 64, 72, 114, 116, 194, 213, 219], "mauvais": [29, 58, 72, 76, 79, 140, 159, 228, 239], "constitu": [29, 58, 60, 66, 71, 85, 93, 96, 112, 138, 140, 199, 239, 244], "var": [29, 52, 55, 56, 58, 63, 69, 70, 84, 89, 115, 142, 182, 184, 239, 241], "840": [29, 30, 250], "plot_roc": [29, 30, 250], "00": [30, 45, 46, 52, 58, 64, 71, 72, 80, 86, 87, 90, 94, 97, 101, 113, 114, 121, 126, 133, 134, 135, 137, 140, 141, 146, 147, 153, 155, 159, 168, 172, 173, 178, 184, 188, 208, 250], "936": [30, 151], "auto_exampl": [30, 45, 46], "ml": [30, 54, 250], "mem": [30, 45, 46, 98, 250], "mb": [30, 45, 46, 85, 250], "02": [30, 45, 52, 53, 58, 79, 80, 90, 101, 112, 113, 134, 135, 137, 140, 153, 188, 207, 250], "impl\u00e9mentatin": 32, "reproduis": [32, 246], "cinq": [32, 43, 58, 64, 72, 76, 96, 147, 162, 168, 201, 233, 240, 243], "maison": [32, 63], "couleur": [32, 40, 64, 113, 139, 140, 141, 142, 143, 146, 147, 164, 197, 211, 225, 233], "vit": [32, 37, 43, 58, 76, 85, 89, 90, 91, 110, 125, 133, 177, 181, 198, 202, 203, 208, 233, 243], "national": [32, 53, 178], "boit": 32, "boisson": 32, "fum": 32, "cigar": 32, "animal": [32, 89, 169], "domest": 32, "su\u00e9dois": 32, "chien": 32, "danois": 32, "th\u00e9": 32, "blanch": [32, 64, 164, 204], "propri\u00e9tair": 32, "caf": [32, 58], "pall": 32, "mall": 32, "jaun": [32, 64, 233], "dunhill": 32, "lait": [32, 123], "norv\u00e9gien": 32, "homm": [32, 96, 208], "blend": 32, "chat": 32, "cheval": 32, "mast": [32, 67, 87, 233], "bier": 32, "allemand": 32, "princ": 32, "eau": [32, 195, 196], "poisson": [32, 62, 63], "essais": [32, 44, 60, 119, 120, 246], "papi": [32, 75], "reconstitu": 32, "d\u00e9duct": 32, "puzzl": [32, 62, 128, 138], "configur": [32, 94, 121, 225, 233, 244], "piec": [32, 100, 101, 138, 181, 193, 194, 241], "bord": [32, 40, 115, 119, 120, 167, 233], "embo\u00eet": 32, "combinaison": [32, 53, 58, 61, 96, 136, 183, 184, 239], "notr": [32, 44, 58, 61, 63, 72, 101, 113, 117, 121, 136, 137, 146, 152, 159, 189, 194, 197, 208], "d\u00e9crit": [32, 58, 72, 90, 97, 138, 158, 191, 201, 225, 228, 233, 239, 240, 243, 248], "compatibil": 32, "exclus": [32, 58, 69, 225, 240], "compatibl": [32, 42, 246], "incompatibl": 32, "r\u00e9sult": [32, 53, 58, 71, 135, 233, 240], "Avec": [32, 35, 40, 52, 56, 57, 58, 71, 76, 97, 117, 126, 135, 139, 145, 167, 175, 180, 185, 186, 193, 197, 207, 208, 216, 217, 233, 237, 239, 240, 248], "\u00e9numer": [32, 52, 155, 191, 210], "cont": [32, 91, 121, 208], "break": [32, 42, 71, 86, 96, 97, 108, 109, 112, 117, 163, 167, 170, 172, 178, 181, 194, 206, 217, 218, 219, 225, 241, 243], "constraint": 32, "described": 32, "enigm": 32, "gener": 32, "triplet": [32, 35], "category": [32, 136, 142, 158, 169, 231], "__str__": [32, 71, 154, 155, 156, 157, 197, 198, 216, 219, 228, 241, 243], "__dict__": [32, 41, 71, 225, 241, 243, 244], "al": [32, 98, 208], "260": [32, 133, 153], "combin": [32, 53, 58, 91, 206, 213], "cl1": [32, 239], "cl2": [32, 239], "nothing": 32, "everything": 32, "concaten": [32, 43, 52, 53, 56, 71, 137, 216, 233], "param": [32, 72, 87, 98, 137, 147, 175, 225, 233], "incompatibility": 32, "propert": [32, 71], "compatibility": 32, "combine_cross_set": 32, "set1": 32, "set2": 32, "ruleposit": 32, "overrid": 32, "ruleequivalent": 32, "equivalent": [32, 52, 175], "rulevoisin": 32, "ruleav": 32, "ruleensembl": 32, "categor": [32, 142, 208], "tl": 32, "ttcouleur": 32, "blanc": [32, 40, 71, 89, 139, 140, 141, 142, 143, 147, 164, 169, 225, 240], "ttnationalit": 32, "norvegien": 32, "suedois": 32, "ttboisson": 32, "ttcigar": 32, "bluemast": 32, "ttanimal": 32, "gar": 32, "constituent": [32, 241], "pr\u00e9dicat": 32, "fr": [32, 53, 56, 87, 88, 96, 121, 170, 208, 225], "wikipedi": [32, 52, 56, 63, 97, 134, 170, 175, 180, 208], "wik": [32, 208], "calcul_des_pr": 32, "c3": [32, 53, 54, 83, 198, 225], "a9dicat": 32, "solv": [32, 52, 133, 140, 142, 143, 144, 145, 194], "Soit": [32, 44, 53, 61, 97, 115, 116, 165, 187, 188, 191, 216], "appara\u00eet": [32, 35, 56, 58, 71, 86, 135, 153, 161, 199, 205, 207, 208, 209, 225, 231, 233, 239, 240, 241, 243, 244], "incompatibil": 32, "apparaissent": [32, 60, 63, 71, 95, 139, 214, 216, 233, 239, 240, 241, 243], "describ": [32, 53, 139, 143], "defined": [32, 104, 107, 192, 225, 239, 243], "abov": [32, 77, 229], "count": [32, 53, 71, 79, 86, 139, 143, 150, 151, 157, 162, 171, 179, 206, 214, 238, 240, 248], "hous": [32, 195, 196], "to_datafram": 32, "sr": 32, "noq": [32, 35, 36, 42], "b006": [32, 35], "eploring": 32, "deepness": 32, "empty": [32, 55, 87, 113, 114, 119, 120, 125, 158, 175, 246], "beginning": 32, "recursively": 32, "must": [32, 52, 67, 122, 142, 243], "solved": 32, "unless": 32, "looking": 32, "possibilit": [32, 123], "much": [32, 195, 196], "research": 32, "could": [32, 52, 87, 95], "represented": 32, "creating": 32, "check": [32, 33, 67], "bringing": 32, "back": [32, 53, 87, 175], "14": [32, 35, 38, 43, 44, 48, 52, 53, 54, 55, 56, 58, 63, 72, 79, 80, 81, 83, 86, 87, 89, 90, 93, 96, 97, 99, 101, 103, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 149, 150, 152, 153, 158, 159, 162, 163, 167, 171, 172, 173, 175, 179, 180, 182, 184, 187, 188, 190, 192, 193, 198, 201, 204, 208, 209, 210, 212, 216, 217, 236, 239, 243, 248], "30": [0, 32, 38, 44, 52, 53, 55, 56, 58, 79, 86, 87, 97, 98, 101, 104, 110, 112, 113, 121, 122, 133, 134, 136, 137, 138, 139, 142, 144, 152, 153, 155, 158, 163, 167, 173, 175, 187, 188, 189, 201, 207, 208, 214, 216, 217, 233, 236, 240, 248], "50": [32, 33, 48, 52, 53, 55, 56, 58, 72, 79, 85, 90, 101, 104, 113, 116, 117, 119, 120, 125, 133, 134, 137, 139, 140, 141, 143, 149, 163, 165, 168, 169, 173, 175, 178, 188, 189, 190, 195, 196, 208, 214, 233, 236, 239], "70": [32, 48, 52, 56, 64, 79, 85, 101, 114, 121, 127, 146, 147, 173, 176], "80": [32, 79, 86, 97, 101, 121, 134, 135, 163, 168, 173, 178, 179, 182, 233, 239, 240], "90": [32, 33, 56, 79, 87, 97, 101, 121, 125, 137, 150, 168, 171, 208], "24": [0, 32, 38, 48, 52, 53, 54, 55, 56, 57, 58, 79, 85, 86, 87, 90, 98, 99, 101, 103, 104, 110, 112, 114, 115, 119, 120, 122, 126, 127, 134, 135, 137, 138, 140, 141, 142, 143, 144, 150, 152, 153, 167, 175, 179, 184, 187, 188, 197, 201, 204, 207, 208, 216, 217, 236], "110": [32, 35, 48, 54, 56, 58, 126, 133, 153, 171, 189], "120": [32, 48, 58, 87, 101, 163, 179, 233], "130": [32, 174, 175], "919": [32, 45, 52, 174, 250], "plot_einstein_riddl": [32, 42, 45, 250], "cam": 33, "longrightarrow": [33, 60, 61, 64, 72], "hold": 33, "let": [33, 52, 96, 126, 195, 196], "evaluat": [33, 185, 186], "equal": [33, 48], "rnd": [33, 55, 80, 87, 117, 118, 121, 124, 134, 138, 149, 152, 162, 168, 172, 190, 225, 234], "100000000": 33, "dtyp": [33, 52, 53, 55, 56, 57, 79, 86, 87, 101, 121, 125, 147, 153, 158, 159, 164, 175, 191, 192, 206, 222], "rnd32": 33, "astyp": [33, 52, 55, 56, 86, 121, 168, 175, 246], "very": 33, "revers": [33, 44, 71, 96, 156, 162, 192, 194, 220, 239, 240], "rnd32b": 33, "delt": [33, 43, 53, 79, 83, 87, 112, 114], "9802321277472288e": 33, "9802320833383078e": 33, "923312783653103e": 33, "9999999805091377": 33, "50248": 33, "50276": 33, "50052": 33, "50209": 33, "49826": 33, "50076": 33, "49742": 33, "50010": 33, "49611": 33, "49698": 33, "49760": 33, "49748": 33, "49729": 33, "50136": 33, "50004": 33, "50099": 33, "49640": 33, "49693": 33, "50177": 33, "49814": 33, "50266": 33, "49853": 33, "49989": 33, "50108": 33, "50354": 33, "49498": 33, "49575": 33, "49922": 33, "50058": 33, "49857": 33, "50064": 33, "49761": 33, "50299": 33, "50236": 33, "49821": 33, "49823": 33, "49932": 33, "49656": 33, "49782": 33, "50087": 33, "49633": 33, "49804": 33, "50109": 33, "49970": 33, "50024": 33, "49457": 33, "50155": 33, "49945": 33, "49463": 33, "49896": 33, "49963": 33, "49960": 33, "50032": 33, "49767": 33, "50007": 33, "49805": 33, "49999": 33, "49612": 33, "50339": 33, "49794": 33, "50080": 33, "50349": 33, "50455": 33, "50128": 33, "50318": 33, "49705": 33, "49801": 33, "50167": 33, "50580": 33, "50384": 33, "49707": 33, "50034": 33, "50324": 33, "49732": 33, "50233": 33, "49778": 33, "49879": 33, "50374": 33, "50527": 33, "50047": 33, "50418": 33, "49967": 33, "49980": 33, "49888": 33, "49917": 33, "49789": 33, "49673": 33, "49713": 33, "50094": 33, "49950": 33, "50150": 33, "49966": 33, "49876": 33, "49946": 33, "49574": 33, "49856": 33, "50122": 33, "50310": 33, "50116": 33, "49873": 33, "49835": 33, "49701": 33, "49887": 33, "49955": 33, "49949": 33, "50203": 33, "49832": 33, "50321": 33, "49710": 33, "50491": 33, "50066": 33, "50138": 33, "50359": 33, "50176": 33, "50162": 33, "49882": 33, "49908": 33, "49875": 33, "50120": 33, "49828": 33, "50435": 33, "50247": 33, "49894": 33, "50119": 33, "49937": 33, "50014": 33, "49952": 33, "49978": 33, "49696": 33, "49721": 33, "50157": 33, "50149": 33, "50514": 33, "49990": 33, "49621": 33, "49934": 33, "50251": 33, "49769": 33, "50050": 33, "49662": 33, "50328": 33, "49715": 33, "49898": 33, "49685": 33, "49803": 33, "50083": 33, "50000": [33, 103, 143], "49461": 33, "49678": 33, "49863": 33, "50338": 33, "49931": 33, "50159": 33, "49783": 33, "49541": 33, "50053": 33, "49733": 33, "49747": 33, "50056": 33, "49954": 33, "50023": 33, "50170": 33, "49992": 33, "50127": 33, "49998": 33, "50327": 33, "49635": 33, "49542": 33, "50156": 33, "49670": 33, "49929": 33, "49843": 33, "49557": 33, "50210": 33, "49592": 33, "49739": 33, "50590": 33, "49749": 33, "49785": 33, "50260": 33, "50151": 33, "49750": 33, "49979": 33, "50135": 33, "49704": 33, "50184": 33, "49872": 33, "49985": 33, "49824": 33, "50033": 33, "50181": 33, "50230": 33, "50412": 33, "50106": 33, "49627": 33, "49807": 33, "49947": 33, "50297": 33, "49982": 33, "49682": 33, "50067": 33, "50125": 33, "50476": 33, "50279": 33, "49726": 33, "49845": 33, "49619": 33, "50111": 33, "49891": 33, "50465": 33, "50057": 33, "49984": 33, "49941": 33, "49681": 33, "49566": 33, "49916": 33, "49836": 33, "99999": [33, 43], "100455": 33, "100355": 33, "99960": 33, "99963": 33, "98834": 33, "100255": 33, "100215": 33, "100245": 33, "100166": 33, "100008": 33, "100232": 33, "99860": 33, "100209": 33, "99613": 33, "99782": 33, "100016": 33, "99580": 33, "100105": 33, "100219": 33, "100079": 33, "99604": 33, "99527": 33, "99915": 33, "99970": 33, "100235": 33, "100198": 33, "100127": 33, "99685": 33, "100536": 33, "100107": 33, "100297": 33, "99753": 33, "100469": 33, "99798": 33, "100343": 33, "100742": 33, "99373": 33, "100262": 33, "100203": 33, "99421": 33, "99887": 33, "99927": 33, "99399": 33, "99471": 33, "100320": 33, "100000": [33, 34, 52, 53, 54, 87, 90, 103, 108, 109, 139, 140, 161, 162, 174, 179, 215, 216, 241, 243, 246], "99974": 33, "99746": 33, "100175": 33, "100059": 33, "100037": 33, "100237": 33, "99993": 33, "100006": 33, "100112": 33, "99617": 33, "99736": 33, "100002": 33, "100048": 33, "99824": 33, "99889": 33, "99827": 33, "99990": 33, "100069": 33, "99645": 33, "99563": 33, "100009": 33, "99679": 33, "99684": 33, "100046": 33, "100220": 33, "100553": 33, "99998": 33, "100351": 33, "100036": 33, "101059": 33, "100142": 33, "99886": 33, "99202": 33, "99912": 33, "99986": 33, "100461": 33, "99454": 33, "99700": 33, "99458": 33, "100121": 33, "99486": 33, "100217": 33, "100249": 33, "99792": 33, "99879": 33, "100172": 33, "100196": 33, "99611": 33, "99848": 33, "100106": 33, "100013": 33, "99935": 33, "100454": 33, "100272": 33, "99598": 33, "100205": 33, "100133": 33, "99558": 33, "99821": 33, "100123": 33, "100652": 33, "99797": 33, "100416": 33, "99855": 33, "100111": 33, "99819": 33, "99661": 33, "99800": 33, "99628": 33, "100265": 33, "100116": 33, "99630": 33, "99485": 33, "149902": 33, "150242": 33, "150276": 33, "149290": 33, "150426": 33, "150161": 33, "149309": 33, "150374": 33, "150186": 33, "150091": 33, "150003": 33, "150372": 33, "149603": 33, "150283": 33, "150584": 33, "150790": 33, "150483": 33, "150864": 33, "150385": 33, "149691": 33, "149989": 33, "150124": 33, "149672": 33, "149732": 33, "150019": 33, "149607": 33, "150002": 33, "150192": 33, "149922": 33, "149666": 33, "150763": 33, "150100": 33, "149815": 33, "149434": 33, "150195": 33, "149678": 33, "149763": 33, "149759": 33, "149983": 33, "150189": 33, "150442": 33, "150443": 33, "149526": 33, "150206": 33, "150533": 33, "150271": 33, "150379": 33, "149422": 33, "149648": 33, "150280": 33, "149944": 33, "150686": 33, "150121": 33, "150265": 33, "149553": 33, "149668": 33, "149729": 33, "150059": 33, "150029": 33, "150112": 33, "175159": 33, "199518": 33, "199392": 33, "199214": 33, "199752": 33, "199868": 33, "200022": 33, "200125": 33, "199299": 33, "200021": 33, "200465": 33, "199476": 33, "199290": 33, "199590": 33, "199765": 33, "199293": 33, "200563": 33, "200461": 33, "199647": 33, "200175": 33, "200136": 33, "199828": 33, "199948": 33, "200258": 33, "200096": 33, "199940": 33, "199766": 33, "200063": 33, "199594": 33, "199893": 33, "200408": 33, "213276": 33, "250226": 33, "250679": 33, "249512": 33, "249842": 33, "250148": 33, "249336": 33, "250439": 33, "249624": 33, "249574": 33, "250140": 33, "250302": 33, "250572": 33, "249868": 33, "250660": 33, "248613": 33, "281517": 33, "299657": 33, "300446": 33, "300652": 33, "300655": 33, "299816": 33, "300876": 33, "299223": 33, "339692": 33, "349983": 33, "350774": 33, "350034": 33, "394989": 33, "399893": 33, "446860": 33, "547911": 33, "548166": 33, "448215": 33, "400532": 33, "395899": 33, "349972": 33, "349722": 33, "350753": 33, "341078": 33, "299777": 33, "300257": 33, "300759": 33, "300436": 33, "300503": 33, "300153": 33, "299809": 33, "281599": 33, "249562": 33, "249282": 33, "249261": 33, "250186": 33, "249725": 33, "249276": 33, "249920": 33, "250036": 33, "249551": 33, "250440": 33, "250495": 33, "248745": 33, "249038": 33, "249829": 33, "250824": 33, "212448": 33, "200150": 33, "199626": 33, "200296": 33, "199640": 33, "200611": 33, "200321": 33, "200257": 33, "200262": 33, "199241": 33, "199569": 33, "199398": 33, "200281": 33, "199803": 33, "201379": 33, "200202": 33, "200082": 33, "200062": 33, "199800": 33, "199749": 33, "200276": 33, "200068": 33, "199943": 33, "200247": 33, "200219": 33, "200659": 33, "199802": 33, "199395": 33, "199661": 33, "199887": 33, "199414": 33, "174617": 33, "149870": 33, "150176": 33, "150167": 33, "150805": 33, "150225": 33, "150394": 33, "149693": 33, "149810": 33, "150012": 33, "149400": 33, "150106": 33, "149560": 33, "150549": 33, "149724": 33, "149456": 33, "149757": 33, "150191": 33, "150053": 33, "149313": 33, "149866": 33, "149543": 33, "150850": 33, "149622": 33, "150391": 33, "150397": 33, "150387": 33, "150518": 33, "149840": 33, "149428": 33, "149993": 33, "149748": 33, "150217": 33, "149804": 33, "151182": 33, "150120": 33, "149994": 33, "150999": 33, "150083": 33, "149896": 33, "150355": 33, "150470": 33, "149519": 33, "150455": 33, "150088": 33, "150694": 33, "149062": 33, "150709": 33, "149856": 33, "150137": 33, "149927": 33, "150471": 33, "149479": 33, "149427": 33, "150116": 33, "99609": 33, "99979": 33, "100199": 33, "99543": 33, "100438": 33, "99921": 33, "100624": 33, "99899": 33, "99799": 33, "99581": 33, "100389": 33, "99516": 33, "100420": 33, "100361": 33, "100051": 33, "100114": 33, "99505": 33, "100268": 33, "100150": 33, "100162": 33, "100419": 33, "99890": 33, "99499": 33, "100234": 33, "99850": 33, "99579": 33, "99740": 33, "100256": 33, "100095": 33, "100598": 33, "100066": 33, "99376": 33, "99650": 33, "100216": 33, "100379": 33, "99982": 33, "100445": 33, "99743": 33, "100251": 33, "100240": 33, "100460": 33, "99735": 33, "99653": 33, "100289": 33, "99652": 33, "100071": 33, "100011": 33, "99768": 33, "99631": 33, "100307": 33, "100061": 33, "100274": 33, "99754": 33, "99894": 33, "100269": 33, "99747": 33, "99618": 33, "99942": 33, "100208": 33, "99815": 33, "99954": 33, "100077": 33, "100406": 33, "100341": 33, "99948": 33, "100470": 33, "99973": 33, "100180": 33, "99761": 33, "99953": 33, "99703": 33, "100542": 33, "100130": 33, "100224": 33, "99823": 33, "99497": 33, "100303": 33, "100167": 33, "100547": 33, "99710": 33, "100169": 33, "100078": 33, "100021": 33, "100407": 33, "99985": 33, "99599": 33, "99831": 33, "99475": 33, "99758": 33, "99862": 33, "100018": 33, "100182": 33, "100126": 33, "99666": 33, "100086": 33, "99690": 33, "100339": 33, "100040": 33, "99916": 33, "100161": 33, "99667": 33, "100083": 33, "100233": 33, "100533": 33, "100033": 33, "99686": 33, "100144": 33, "49796": 33, "50092": 33, "49844": 33, "49795": 33, "49867": 33, "50088": 33, "49988": 33, "49995": 33, "50197": 33, "49735": 33, "50158": 33, "50152": 33, "49736": 33, "50200": 33, "50202": 33, "50409": 33, "50288": 33, "49753": 33, "49861": 33, "50199": 33, "50216": 33, "50089": 33, "49752": 33, "49625": 33, "49774": 33, "49924": 33, "50129": 33, "50079": 33, "49956": 33, "50084": 33, "50134": 33, "49850": 33, "50207": 33, "50015": 33, "50306": 33, "50193": 33, "50020": 33, "50311": 33, "49706": 33, "49581": 33, "50160": 33, "50262": 33, "50039": 33, "50212": 33, "50358": 33, "49886": 33, "50198": 33, "50278": 33, "49900": 33, "50347": 33, "49558": 33, "49812": 33, "49699": 33, "49702": 33, "50093": 33, "49215": 33, "49962": 33, "49834": 33, "50417": 33, "50365": 33, "50081": 33, "49911": 33, "50175": 33, "49918": 33, "50194": 33, "49885": 33, "49825": 33, "49920": 33, "50273": 33, "50073": 33, "49756": 33, "49977": 33, "49799": 33, "50036": 33, "50497": 33, "50086": 33, "50043": 33, "49744": 33, "50179": 33, "49986": 33, "49862": 33, "49869": 33, "49841": 33, "50030": 33, "50252": 33, "49971": 33, "49622": 33, "50026": 33, "50078": 33, "49878": 33, "50227": 33, "49976": 33, "49672": 33, "50440": 33, "49890": 33, "50268": 33, "49433": 33, "49935": 33, "50172": 33, "50240": 33, "49659": 33, "50165": 33, "49797": 33, "49800": 33, "49993": 33, "49815": 33, "50174": 33, "49762": 33, "50028": 33, "49936": 33, "50124": 33, "49649": 33, "50035": 33, "50381": 33, "49969": 33, "50163": 33, "50186": 33, "49671": 33, "50154": 33, "50008": 33, "50107": 33, "50002": 33, "49957": 33, "50072": 33, "49942": 33, "50257": 33, "49933": 33, "49883": 33, "50153": 33, "50322": 33, "49822": 33, "50336": 33, "50132": 33, "49880": 33, "50256": 33, "49641": 33, "50068": 33, "50115": 33, "50254": 33, "50579": 33, "50388": 33, "49996": 33, "49545": 33, "49874": 33, "50332": 33, "50062": 33, "50217": 33, "49808": 33, "49792": 33, "49679": 33, "49781": 33, "98023213e": 33, "97427166e": 33, "96831120e": 33, "96831115e": 33, "97427162e": 33, "98023208e": 33, "barcontain": 33, "artist": [33, 248], "finally": [33, 239], "numper": 33, "remain": 33, "randint": [33, 44, 52, 53, 55, 79, 85, 86, 91, 93, 97, 104, 107, 110, 113, 114, 117, 118, 119, 120, 138, 140, 146, 155, 159, 162, 168, 171, 182, 199, 200, 206, 215, 216, 218, 219, 225, 234, 246], "d32": 33, "d64": 33, "rais": [33, 66, 71, 72, 82, 93, 98, 112, 121, 122, 142, 152, 154, 156, 158, 175, 181, 206, 220, 222, 225, 228, 229, 239, 248], "assertionerror": [33, 66, 71, 93, 98, 154, 181, 248], "imagin": [33, 58, 61, 62, 63, 88, 115, 116, 159, 166, 192, 193, 204, 205, 206], "now": [33, 97, 236, 240], "want": [33, 52, 195, 196], "converted": 33, "find_interval": 33, "dx": [33, 94, 95, 119, 120, 174, 179, 188, 203], "ab": [33, 35, 52, 58, 63, 79, 80, 83, 108, 114, 115, 116, 118, 120, 122, 137, 143, 148, 150, 153, 158, 163, 173, 192, 197, 204, 207, 208, 225, 227, 239, 240], "usually": 33, "zeros": [33, 38, 52, 55, 57, 79, 83, 86, 87, 88, 113, 117, 118, 121, 136, 138, 159, 164, 175, 176, 181, 188, 206, 220], "2000": [33, 80, 87, 133, 138, 172, 174, 190, 246, 248], "441327634500722e": 33, "9604616797770404e": 33, "111": [33, 35, 48, 55, 56, 97, 135, 137], "220": [33, 53, 57, 58, 95, 112, 133, 178], "511": 33, "1011": [33, 240], "44132763e": 33, "20621735e": 33, "39802142e": 33, "58982549e": 33, "78162956e": 33, "97343363e": 33, "16523770e": 33, "35704177e": 33, "54884584e": 33, "07406499e": 33, "19324540e": 33, "31242581e": 33, "43160621e": 33, "55078662e": 33, "66996703e": 33, "78914743e": 33, "90832784e": 33, "02750825e": 33, "14668865e": 33, "26586906e": 33, "38504947e": 33, "50422988e": 33, "62341028e": 33, "74259069e": 33, "86177110e": 33, "98095150e": 33, "10013191e": 33, "21931232e": 33, "33849272e": 33, "45767313e": 33, "57685354e": 33, "69603395e": 33, "81521435e": 33, "93439476e": 33, "05357517e": 33, "17275557e": 33, "29193598e": 33, "41111639e": 33, "53029680e": 33, "64947720e": 33, "76865761e": 33, "88783802e": 33, "00701842e": 33, "12619883e": 33, "24537924e": 33, "36455964e": 33, "48374005e": 33, "60292046e": 33, "72210087e": 33, "84128127e": 33, "96046168e": 33, "something": [33, 207, 213, 248], "ql": 33, "951835202466782e": 33, "estimat": [33, 79], "left": [33, 43, 52, 53, 55, 58, 61, 64, 72, 85, 90, 105, 112, 114, 122, 134, 137, 139, 152, 155, 157, 172, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 203, 204, 220, 233, 239, 240], "x_": [33, 58, 63, 64, 72, 87, 134, 166, 185, 186, 204], "64": [33, 52, 53, 79, 85, 92, 97, 101, 110, 112, 121, 127, 134, 137, 145, 151, 159, 173, 178, 225, 241], "inf_strict": 33, "f1": [33, 70, 140, 170, 241, 246], "f2": [33, 170, 241, 246, 248], "count_event": 33, "di": [33, 71, 86, 87, 88, 101, 164, 225], "1001": [33, 52, 103, 126, 204], "3566516822201035e": 33, "651": [33, 174], "1015": 33, "190": [33, 112], "1308486884686886e": 33, "790": 33, "975": [33, 101, 141, 153, 176], "290": 33, "726032208715367e": 33, "863": [33, 52], "977": [33, 52], "390": 33, "321215728962045e": 33, "875": 33, "959": 33, "490": 33, "9163992492087233e": 33, "942": 33, "590": [33, 101], "5115827694554015e": 33, "935": [33, 44, 45, 250], "993": 33, "690": [33, 150], "1067662897020797e": 33, "966": [33, 121], "1014": 33, "701949809948758e": 33, "925": 33, "965": 33, "890": [33, 121, 240], "297133330195436e": 33, "990": 33, "892316850442114e": 33, "1030": [33, 153], "951835e": 33, "023692": 33, "1013": [33, 103], "190367e": 33, "054822": 33, "985": [33, 101], "785551e": 33, "066084": 33, "1029": 33, "380734e": 33, "073242": 33, "1024": [33, 103, 155], "975918e": 33, "104288": 33, "1026": 33, "logx": [33, 90], "inf_equal": 33, "df2": [33, 56, 121, 133, 159, 167], "963": 33, "979": 33, "1009": [33, 55], "1022": 33, "980": 33, "1018": 33, "988": [33, 133], "1002": [33, 56, 109], "968": 33, "989": 33, "1006": [33, 55], "sup_strict": 33, "df3": [33, 133, 167], "631": [33, 52], "1010": [33, 56, 153], "825": [33, 101], "996": [33, 55, 116, 133], "851": [33, 101, 153], "972": 33, "916": 33, "884": [33, 178], "952": [33, 133], "956": 33, "1027": 33, "894": 33, "947": [33, 52], "941": [33, 52, 138, 176], "973": 33, "1007": [33, 55], "984": [33, 79], "016244": 33, "040236": 33, "1019": 33, "052419": 33, "992": 33, "061000": 33, "082234": 33, "sup_equal": 33, "df4": [33, 133], "1004": 33, "971": [33, 52, 153], "1003": [33, 121, 122], "967": [33, 52], "998": [33, 116], "978": [33, 56], "inf_strict_neg": 33, "dfn": 33, "957": 33, "1043": 33, "1037": 33, "994": 33, "961": [33, 52], "997": [33, 52, 55, 101, 116, 122], "1023": [33, 153], "As": [33, 67, 195, 196], "soon": 33, "rounded": 33, "inequality": 33, "howev": 33, "handl": 33, "templat": [33, 208], "inequalit": 33, "easi": 33, "according": 33, "processing": [33, 245], "cost": [33, 122, 220], "versus": [33, 56], "36": [0, 33, 45, 48, 52, 53, 56, 57, 58, 97, 101, 110, 118, 126, 145, 175, 187, 188, 201, 208, 210, 222, 236, 240, 250], "898": [33, 45, 174, 250], "plot_float_and_double_rouding": [33, 42, 45, 250], "global": [34, 35, 38, 40, 41, 42, 58, 68, 71, 104, 125, 152, 175, 225, 233, 245], "verrou": [34, 246], "auquel": [34, 58, 71, 161, 162, 175, 177, 233, 240, 243], "proteg": [34, 71, 72, 228, 246], "contr": [34, 58, 64, 88, 97, 170, 228, 246], "acces": [34, 35, 41, 42, 56, 71, 72, 166, 202, 216, 225, 229, 233, 239, 241, 243, 246], "concurrentiel": [34, 246], "timeit": [34, 38, 41, 42, 52, 53, 54, 55, 85, 93, 95, 112, 115, 116, 118, 125, 163, 166, 170, 171, 172, 175, 182, 189, 198, 204, 214, 215, 216, 234], "concurrent": 34, "threadpoolexecutor": [34, 246], "create_list": 34, "5237360110004374": 34, "run2": 34, "max_worker": [34, 246], "executor": [34, 246], "_re": 34, "4210679520001577": 34, "synchronis": [34, 236, 245], "termin": [34, 61, 71, 85, 95, 110, 164, 179, 201, 206, 207, 229, 233, 239, 240, 241, 246], "mettr": [34, 52, 58, 71, 115, 117, 118, 142, 147, 162, 166, 192, 233, 239, 248], "jour": [34, 58, 60, 61, 72, 76, 80, 87, 88, 89, 98, 100, 101, 110, 115, 116, 121, 122, 133, 169, 191, 192, 193, 206, 207, 208, 225, 233, 236, 240, 241, 243, 248], "impos": [34, 42, 44, 53, 58, 170, 225, 233, 240, 244], "mis": [34, 43, 58, 64, 71, 76, 80, 85, 110, 115, 140, 152, 191, 206, 210, 225, 233, 240, 241, 243], "va": [34, 44, 48, 52, 58, 63, 64, 71, 76, 91, 97, 98, 101, 102, 112, 114, 115, 117, 148, 152, 165, 191, 194, 198, 207, 208, 215, 218, 225, 231, 233, 239, 240, 241, 243, 246], "009": [34, 35, 45, 174, 250], "917306548999477": 34, "run3": 34, "001": [34, 35, 43, 87, 101, 124, 126, 135, 174, 175, 189, 197, 246], "1038838470003611": 34, "signific": 34, "969": [34, 45, 101, 250], "plot_gil_exampl": [34, 42, 45, 250], "r\u00e9\u00e9crir": [35, 53, 66, 76, 122, 154, 199, 201, 225, 229], "u": [35, 41, 61, 67, 79, 89, 96, 98, 138, 158, 169, 177, 208, 214, 244], "compteur": [35, 168], "u_st": 35, "u_non_recurs": 35, "u0": 35, "u1": [35, 158], "u2": [35, 158], "\u00e8me": [35, 240], "arr\u00eat": [35, 58, 71, 116, 122, 135, 136, 162, 168, 174, 201, 207, 218, 228, 231, 239, 246], "compare_l": 35, "q": [35, 58, 60, 69, 86, 89, 96, 110, 121, 185, 186, 193, 194, 208, 220], "g\u00e9ometr": [35, 61, 103, 104, 163], "sum_": [35, 52, 53, 55, 57, 58, 60, 61, 63, 64, 72, 79, 85, 102, 103, 104, 113, 114, 115, 116, 117, 118, 134, 137, 140, 168, 180, 185, 186, 187, 188, 190, 191, 192, 193, 194, 203, 204, 209, 210], "infty": [35, 60, 61, 103, 157, 191], "convergent": [35, 52, 60, 61, 91, 105, 133, 136], "infin": [35, 63, 75, 86, 90, 112, 138, 191, 217, 229, 239, 248], "outr": [35, 58, 71, 208, 233], "suite_geometrique_1": 35, "1075": 35, "informaticien": [35, 58, 227], "exp\u00e9riment": 35, "suite_geometrique_2": 35, "yold": 35, "55": [0, 35, 48, 52, 53, 56, 81, 97, 101, 113, 114, 123, 134, 144, 153, 159, 204, 210, 214, 240, 248, 250], "reper": [35, 48, 61, 98, 122, 138, 211, 212, 240], "17": [35, 37, 43, 44, 48, 52, 53, 55, 56, 79, 84, 86, 87, 90, 93, 95, 96, 97, 101, 103, 104, 105, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 133, 135, 137, 138, 139, 140, 143, 144, 145, 146, 147, 149, 150, 152, 153, 159, 162, 163, 167, 173, 175, 176, 179, 180, 184, 187, 188, 190, 191, 197, 204, 207, 210, 212, 216, 217, 225, 229, 233, 236, 239, 240], "mainten": [35, 41, 43, 44, 50, 53, 61, 63, 64, 76, 83, 87, 89, 93, 95, 97, 101, 114, 126, 137, 139, 142, 143, 148, 150, 154, 158, 164, 165, 172, 175, 187, 188, 193, 197, 199, 201, 204, 208, 209, 217, 223, 225, 233, 240, 246], "agit": [35, 52, 53, 58, 60, 61, 63, 64, 71, 72, 87, 91, 97, 110, 135, 152, 170, 175, 209, 210, 211, 212, 213, 216, 225, 233, 239, 240, 241, 244, 246], "approxim": [35, 43, 56, 64, 71, 72, 87, 97, 113, 114, 116, 125, 134, 203, 204], "devient": [35, 48, 58, 61, 62, 64, 79, 85, 104, 126, 179, 190, 216, 225, 233, 239, 240, 243, 244, 246, 248], "nul": [35, 55, 58, 64, 71, 80, 86, 93, 101, 104, 117, 137, 174, 179, 190, 206, 216, 228, 240], "1055": [35, 153], "toutefois": [35, 58, 60, 61, 64, 137, 179, 216, 225, 229, 233, 239, 240], "indispens": [35, 71, 181, 197, 208, 215, 225, 231, 239], "loin": [35, 48, 63, 64, 96, 97, 136, 149, 175, 225, 239, 240, 241], "remarqu": [35, 52, 58, 64, 71, 86, 96, 97, 101, 102, 110, 112, 114, 117, 118, 135, 165, 225, 239, 240, 244, 246], "addition": [35, 58, 104, 112, 159, 239], "s_n": 35, "croiss": [35, 53, 55, 58, 61, 71, 85, 89, 97, 101, 112, 114, 115, 116, 152, 162, 163, 166, 191, 192, 201, 219, 225, 239, 240], "u_i": [35, 204], "u_n": [35, 105, 225], "d\u00e9croiss": [35, 43, 58, 60, 61, 71, 79, 89, 90, 114, 201, 204, 240], "chercheur": [35, 76], "success": [35, 52, 60, 64, 89, 204, 225, 233, 239, 240, 243], "01100111": 35, "011": [35, 43, 45, 126, 174, 176, 250], "hyper_cube_l": 35, "hyper_cube_dico": 35, "ind": [35, 48, 125, 134, 142, 175, 208], "cle": [35, 71, 89, 98, 179, 201, 202], "hyper_cub": 35, "Sur": [35, 58, 61, 72, 93, 102, 135, 136, 145], "port": [35, 43, 53, 56, 64, 71, 75, 101, 201, 207, 225, 243, 246], "prior": [35, 36, 58, 61, 64, 71, 90, 93, 113, 136, 148, 179, 204, 225, 243], "occurrence2": 35, "uplet": [35, 58], "recevr": [35, 60, 225], "curios": [35, 62], "occurrence3": 35, "hyper_cube_liste2": 35, "m2": [35, 43, 82, 83, 89, 93, 110, 115, 116, 121, 219, 220, 225, 246], "occurrence4": 35, "hyper_cube_liste3": 35, "occurrence5": 35, "plot_hypercub": [35, 42, 45, 250], "esthet": 36, "twoarg": 36, "onearg": 36, "retard": [36, 58, 76, 243], "fcts_a": 36, "b023": 36, "fcts_b": 36, "partagent": [36, 53, 233], "005": [36, 45, 101, 137, 175, 176, 250], "plot_lambda_funct": [36, 42, 45, 250], "28": [0, 37, 42, 48, 52, 53, 55, 56, 57, 64, 79, 86, 90, 95, 97, 101, 104, 110, 117, 119, 120, 121, 122, 135, 137, 140, 142, 144, 146, 147, 149, 153, 155, 167, 170, 175, 178, 187, 188, 190, 197, 201, 204, 207, 208, 210, 216, 236], "itertool": [37, 94, 95, 198], "op": [37, 240], "parenthes": [37, 71, 201, 207, 210, 225, 228, 239, 240, 248], "pn": 37, "po": 37, "eval": [37, 54], "zerodivisionerror": [37, 71, 228], "677": [37, 45, 52, 250], "plot_matador": [37, 42, 45, 250], "13": [38, 43, 44, 45, 48, 52, 53, 54, 55, 56, 58, 63, 72, 79, 81, 83, 85, 86, 87, 88, 89, 90, 93, 96, 97, 101, 103, 104, 105, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 147, 149, 152, 153, 156, 158, 159, 162, 163, 164, 167, 172, 173, 174, 175, 178, 179, 182, 184, 187, 188, 190, 192, 204, 208, 210, 214, 216, 217, 225, 229, 233, 236, 239, 240, 246], "23": [38, 52, 53, 55, 56, 58, 71, 72, 79, 86, 87, 90, 95, 97, 99, 101, 104, 110, 112, 113, 115, 119, 120, 121, 122, 125, 126, 133, 137, 138, 140, 141, 142, 143, 144, 145, 149, 152, 153, 167, 175, 176, 179, 187, 188, 193, 197, 201, 204, 207, 214, 216, 217, 236, 239, 240], "33": [0, 38, 48, 52, 53, 55, 56, 85, 101, 104, 110, 118, 124, 135, 141, 142, 145, 151, 152, 153, 155, 166, 167, 175, 187, 188, 201, 204, 217], "41": [38, 48, 52, 53, 56, 86, 101, 125, 133, 134, 135, 137, 139, 152, 175, 178, 187, 188, 201, 214, 225, 239, 240], "42": [38, 48, 52, 53, 56, 58, 64, 72, 87, 97, 101, 110, 133, 134, 135, 137, 141, 142, 144, 145, 153, 175, 187, 188, 201, 214, 225, 240], "44": [38, 48, 52, 53, 56, 58, 72, 97, 114, 118, 134, 137, 152, 169, 175, 187, 188, 189, 214, 225], "330699979007477e": 38, "441400010866346e": 38, "n\u00e9anmoin": [38, 58, 60, 62, 64, 71, 76, 93, 97, 101, 125, 137, 145, 153, 154, 174, 199, 216, 225, 228, 233, 234, 239, 240, 243, 244], "temporair": [38, 58, 72, 240], "003": [38, 45, 174, 176, 189, 250], "plot_numpy_trick": [38, 42, 45, 250], "nan": [39, 52, 53, 87, 101, 117, 118, 121, 135, 140, 148, 150, 170, 173, 208], "disparu": 39, "comport": [39, 58, 64, 71, 79, 87, 115, 191, 225, 233, 240, 241], "attendu": [39, 44, 52, 64, 66, 71, 110, 112, 122, 125, 134, 150, 152, 162, 172, 174, 239, 246], "corrig": [39, 43, 44, 60, 61, 63, 66, 71, 87, 104, 107, 121, 179, 209, 210, 229, 231], "dropn": 39, "026": [39, 45, 174, 250], "plot_pandas_groupby": [39, 42, 45, 250], "quar": 40, "pion": [40, 164], "vingt": [40, 58], "noir": [40, 60, 61, 89, 164, 169, 204, 216, 225, 233], "39": [40, 48, 52, 53, 55, 56, 79, 83, 88, 89, 93, 96, 97, 98, 101, 103, 104, 105, 106, 107, 110, 112, 113, 118, 119, 120, 124, 125, 126, 127, 133, 134, 135, 137, 147, 148, 150, 152, 154, 160, 166, 167, 169, 170, 174, 175, 176, 178, 179, 180, 187, 188, 189, 190, 191, 192, 201, 202, 207, 208, 213, 214, 216, 217, 220, 223], "dami": [40, 164], "enti": [40, 52, 53, 55, 58, 71, 76, 79, 81, 92, 101, 104, 127, 154, 156, 162, 177, 185, 186, 194, 197, 210, 217, 225, 228, 233, 239, 240, 241, 244, 246], "vitess": [40, 47, 50, 58, 60, 61, 62, 197, 244], "utilisent": [40, 52, 55, 58, 63, 71, 197, 202, 227, 240, 246], "pratiqu": [40, 52, 58, 63, 76, 79, 96, 145, 216, 217, 231, 233, 234, 236, 239, 240, 242, 248], "voisinag": [40, 60, 119, 120], "quatr": [40, 43, 53, 58, 61, 71, 72, 87, 98, 104, 111, 164, 165, 166, 175, 181, 201, 208, 209, 225, 228, 239, 240, 241, 245, 246, 248], "coin": [40, 233], "libr": [40, 121, 164], "contiennent": [40, 48, 53, 58, 61, 72, 146, 178, 187, 216, 225, 234, 239, 240, 241, 243, 244, 246, 248], "sait": [40, 43, 53, 63, 76, 85, 90, 96, 97, 112, 117, 118, 119, 120, 121, 150, 154, 156, 158, 163, 175, 191, 204, 207, 210, 217, 228, 229, 239, 240, 246], "revu": [40, 60, 85, 194, 218, 245], "occup": [40, 63, 110, 193, 233, 237, 241, 246], "assembl": [40, 58, 72, 76, 138, 182, 217, 241], "num\u00e9rot": [40, 86, 165, 193, 212, 216], "Quels": [40, 52, 100, 101, 191], "d\u00e9sir": [40, 43, 83, 199, 208, 225, 228, 233, 239, 240, 241, 243], "dix": [40, 58, 76, 79, 122, 209, 213, 219, 225, 239, 240], "vid": [40, 53, 54, 71, 85, 91, 110, 111, 115, 164, 193, 201, 205, 206, 217, 225, 233, 239, 240, 241, 243], "adversair": 40, "pion_prendr": 40, "advers": 40, "\u00e9chou": [40, 83, 116, 142, 225, 228, 243], "pion_prendre_dict": 40, "damier_dict": 40, "laiss": [40, 44, 58, 63, 71, 83, 96, 97, 112, 117, 118, 157, 208, 212, 216, 233, 240], "restent": [40, 56, 225], "\u00e9chiqui": [40, 52], "pion_prendre_list": 40, "damier_list": 40, "extend": [40, 71, 97, 106, 110, 124, 216, 240, 241], "hor": [40, 105, 119, 120, 163, 197, 225], "pion_prendre_bord": 40, "accept": [40, 53, 58, 71, 114, 150, 190, 199, 225, 233, 239, 240, 241, 248], "n\u00e9gat": [40, 43, 64, 85, 101, 104, 112, 121, 137, 143, 150, 152, 187, 188, 228, 238, 239, 240, 248], "006": [40, 45, 175, 250], "plot_partie_dam": [40, 42, 45, 250], "explor": [41, 44, 60, 97, 110, 134, 163, 225, 241], "notemm": 41, "api": [41, 48, 64, 101, 142, 231, 244, 246], "bytesio": [41, 42, 244], "ujson": [41, 170], "cloudpickl": [41, 170], "record": [41, 53, 58, 167, 231, 244], "xavi": [41, 53, 75, 77, 96, 217, 239, 244, 248], "pr\u00e9nom": [41, 53, 71, 105, 166, 202, 239, 241, 244], "age": [41, 100, 101, 236, 244], "buff": [41, 42, 167, 241, 244], "seq": [41, 207, 208, 244], "getvalu": [41, 42, 167, 170, 174, 175, 176, 189, 244], "pr": [41, 64, 174, 175, 176, 189, 208, 244], "u00e9nom": [41, 244], "load": [41, 53, 137, 167, 241, 244], "ndarray": [41, 175, 176, 189, 244], "serializ": [41, 244], "att": [41, 244], "jsonencod": [41, 244], "myencod": [41, 244], "classnam": [41, 244], "__class__": [41, 71, 225, 228, 244], "__name__": [41, 66, 71, 90, 152, 207, 208, 225, 233, 240, 243, 244], "jsondecod": [41, 244], "mydecod": [41, 244], "decod": [41, 98, 126, 170, 202, 208, 214, 229, 237, 240, 244], "dec": [41, 58, 97, 156, 244], "isinst": [41, 89, 142, 154, 156, 175, 176, 189, 217, 228, 239, 244], "obj": [41, 71, 225, 228, 229, 233, 239, 240, 244], "__main__": [41, 66, 71, 154, 197, 207, 208, 225, 229, 233, 239, 240, 243], "0x7f1656d86380": 41, "altern": [41, 52, 58, 140, 142, 143, 162, 233, 241, 244], "001755029000378272": 41, "00018962499962071888": 41, "0005293539998092456": 41, "00021988000025885412": 41, "creation": [41, 233], "3614999918208923e": 41, "lu": [41, 52, 71, 96, 101, 214, 237, 241], "x80": [41, 244], "x04": [41, 244], "x95f": [41, 244], "x00": [41, 244], "x94": [41, 244], "x8c": [41, 244], "x07record": [41, 244], "x03nom": [41, 244], "x06xavi": [41, 244], "x07pr": [41, 244], "xc3": [41, 244], "xa9nom": [41, 244], "x94h": [41, 244], "x05": [41, 244], "x08langag": [41, 244], "x03c": [41, 244], "x03ag": [41, 244], "x94k": [41, 244], "x06python": [41, 244], "x0bk": [41, 244], "x14ueu": [41, 244], "x95": 41, "x08__main__": 41, "x01a": 41, "x93": 41, "x81": 41, "x03att": 41, "x01r": 41, "x94sb": 41, "0x7f165832e7a0": 41, "duppliqu": 41, "surtout": [41, 58, 63, 64, 75, 89, 90, 101, 110, 162, 179, 225, 239, 240], "voluminu": 41, "att1": [41, 71, 244], "att2": [41, 71, 244], "x01b": 41, "x04att1": 41, "x04att2": 41, "x06ub": 41, "eviton": 41, "__getstate__": [41, 241, 244], "__setstate__": [41, 241, 244], "setattr": [41, 244], "0x7f165832d8d0": 41, "0002514369998607435": 41, "00022162899949762505": 41, "habituel": 41, "niveau": [41, 48, 55, 58, 79, 86, 90, 101, 136, 137, 175, 216, 225, 233, 234, 239, 241, 246], "pr\u00e9visibl": 41, "acc\u00e9ler": [41, 42, 43, 53, 61, 63, 64, 91, 174, 175, 189, 190, 202, 223, 240, 245], "protocol": [41, 243], "highest_protocol": 41, "0003348099999129772": 41, "tent": [41, 58, 89, 116, 145, 158, 169, 246], "myfunc": 41, "x01x": 41, "x01f": 41, "x06myfunc": 41, "x94u": 41, "0x7f16570f01f0": 41, "contourn": [41, 58, 97, 98, 147, 233, 244], "obstacl": [41, 58, 98, 136, 244], "xe3": 41, "x01": 41, "x17cloudpickl": 41, "x0e_make_funct": 41, "x03": 41, "r_builtin_typ": 41, "x08codetyp": 41, "x85": 41, "x94r": 41, "x01k": 41, "x00k": 41, "x02kcc": 41, "x08": 41, "x00d": 41, "x17": [41, 153], "x94nk": 41, "x86": 41, "x8co": 41, "xadupr": [41, 48, 101, 135, 140, 142, 143, 145, 148, 150, 174, 189, 207, 229], "_doc": [41, 67], "prog": [41, 45, 250], "plot_serialisation_exampl": [41, 42, 45, 250], "x94m": 41, "x97": 41, "x01c": 41, "x02": 41, "x0b__package__": 41, "x08__name__": 41, "x94unnnt": 41, "x12_function_setstat": 41, "x19": [41, 153], "x16h": 41, "x0f": 41, "x0c__qualname__": 41, "x0f__annotations__": 41, "x0e__kwdefaults__": 41, "x94n": 41, "x0c__defaults__": 41, "n__module__": 41, "x07__doc__": 41, "x0b__closure__": 41, "x17_cloudpickle_submodul": 41, "x0b__globals__": 41, "x86r0u": 41, "0x7f16570f0670": 41, "typeerror": [41, 52, 103, 104, 106, 107, 112, 154, 156, 175, 225, 228, 239, 240], "0x7f16570f04c0": 41, "fonctionnent": [41, 56, 63, 66, 71, 76, 128, 132, 207, 228, 233], "ens": [41, 43, 114, 156, 172, 179, 182, 225, 234, 239], "x953": 41, "x02it": 41, "x08builtin": 41, "x04it": 41, "x02e": 41, "x00bu": 41, "list_iterator": 41, "0x7f165832ce50": 41, "Ils": [41, 58, 64, 72, 76, 128, 167, 170, 181, 208, 216, 225, 228, 231, 234, 237, 240, 241, 246], "ensgen": 41, "generator": [41, 71, 103, 155], "021": [41, 45, 176, 250], "lectur": [42, 52, 54, 56, 64, 68, 97, 169, 170, 243, 244, 246], "d\u00e9s\u00e9rialis": [42, 244], "r\u00e9alis": [42, 55, 56, 58, 60, 86, 112, 159, 163, 197, 216, 225, 233], "strict": [42, 194, 210, 237, 244], "protoc": 42, "messag": [42, 52, 66, 71, 72, 76, 98, 123, 201, 202, 207, 208, 225, 228, 230, 231, 239, 240, 241, 245], "contrair": [42, 48, 58, 60, 72, 76, 81, 83, 101, 117, 118, 179, 196, 201, 225, 228, 233, 239, 240, 241, 243, 246], "gp": 42, "__version__": [42, 67, 70], "tutorial": [42, 68], "os": [42, 137, 167, 175, 176, 178, 189, 207, 229, 233, 241, 243, 248], "sy": [42, 71, 113, 174, 175, 176, 179, 207, 229, 234, 237, 240, 243, 246], "struct": [42, 241], "sphinx_runpython": [42, 71, 225, 229, 239, 244], "runpython": [42, 71, 225, 229, 239, 244], "run_cmd": 42, "json_format": 42, "messagetojson": 42, "parsejson": 42, "syntax": [42, 43, 52, 53, 71, 74, 106, 169, 207, 209, 210, 217, 227, 233, 238, 241, 244, 247], "proto2": 42, "optional": 42, "int32": [42, 56, 86, 121, 147], "enum": 42, "phonetyp": 42, "mobil": [42, 72], "phonenumb": 42, "repeated": 42, "phon": 42, "addressbook": 42, "peopl": 42, "debian": [42, 69], "apt": [42, 69, 70, 233], "proto": 42, "w": [42, 48, 56, 63, 71, 80, 96, 113, 114, 167, 170, 191, 192, 193, 194, 202, 207, 208, 213, 214, 229, 231, 233, 241, 246, 248], "cmd": [42, 70, 229, 233], "python_out": 42, "err": [42, 87, 101, 141, 153, 229, 237], "use_protoc": 42, "filenotfounderror": [42, 229, 248], "errno": [42, 248], "listd": [42, 167, 178, 207, 233, 241], "plot_tarabiscot": [42, 43, 45, 250], "plot_serialisation_protobuf": [42, 45, 250], "plot_tsp": [42, 44, 45, 250], "schema_pb2": 42, "missing": [42, 53, 135, 142, 239], "utlis": 42, "e402": 42, "1234": 42, "john": [42, 58, 170], "jdo": 42, "555": 42, "4321": 42, "serializetostring": 42, "fromstring": 42, "parsefromstring": 42, "db": [42, 208], "5678": 42, "johnet": 42, "doet": 42, "jtdoet": 42, "example2": 42, "777": 42, "bytesiz": 42, "pack": [42, 239, 241, 246], "db2": 42, "bsiz": 42, "unpack": [42, 239, 241], "js": [42, 84, 89], "093": [42, 45, 176, 250], "cens": [43, 121, 209, 228], "effect": [43, 58, 61, 216, 225, 233, 234, 239], "identif": [43, 58, 71, 72, 87, 101, 182, 225, 233, 240, 243], "Ici": [43, 71, 122, 142, 156, 160, 239, 240, 246], "d\u00e9signent": [43, 114, 158, 225], "fall": [43, 63, 107, 117, 118, 122, 134, 175, 208], "escompt": 43, "mi": [43, 152], "ordre": [43, 44, 52, 53, 55, 60, 61, 63, 71, 89, 90, 93, 95, 97, 101, 105, 110, 114, 115, 116, 122, 133, 137, 147, 152, 153, 156, 159, 166, 179, 191, 192, 193, 196, 199, 201, 216, 217, 219, 225, 234, 240, 246], "lor": [43, 44, 52, 53, 56, 58, 63, 64, 71, 72, 76, 79, 85, 92, 97, 112, 128, 134, 135, 136, 137, 142, 145, 156, 170, 192, 197, 201, 207, 208, 215, 223, 225, 227, 228, 231, 233, 240, 241, 243, 244, 246, 248], "quant": [43, 58, 64, 71, 154, 225, 239], "pieg": [43, 52], "entrer": [43, 233, 246], "3n": [43, 105], "exigent": [43, 58], "rar": [43, 58, 66, 71, 76, 181, 207, 208, 225, 233, 237, 240, 241], "exig": [43, 79], "con\u00e7oit": [43, 97, 225, 246], "debug": [43, 229, 246], "\u00e9tap": [43, 53, 58, 60, 61, 71, 87, 89, 91, 97, 109, 114, 134, 173, 177, 183, 184, 191, 192, 197, 233, 240, 241, 244, 248], "releas": [43, 101, 231, 246], "\u00f4t\u00e9": [43, 89, 96, 112], "devenus": [43, 63], "inutil": [43, 62, 66, 71, 93, 102, 125, 198, 199, 231, 239, 246], "invisibl": [43, 233], "favoris": [43, 58], "multitud": [43, 233], "rectangl": [43, 61, 120, 132, 163, 225, 233], "h\u00e9rit": [43, 71, 126, 158, 159, 228, 231, 233, 239], "red\u00e9fin": [43, 71, 72, 158, 170, 197, 225, 228], "losang": 43, "Est": [43, 44, 52, 63, 86, 112, 166, 175, 183, 184, 187, 191, 198, 219], "introduir": [43, 53, 210, 227, 233, 239, 246], "princip": [43, 52, 58, 64, 79, 87, 134, 135, 225, 230, 233, 241, 248], "angle": [43, 59, 60, 61, 63, 124, 128, 233], "paraiss": 43, "g\u00e9n\u00e9ral": [43, 53, 54, 61, 63, 64, 71, 76, 115, 125, 136, 143, 145, 182, 191, 208, 213, 217, 223, 225, 228, 229, 233, 239, 240, 244, 246], "afin": [43, 58, 60, 61, 63, 64, 71, 112, 115, 116, 123, 194, 208, 215, 217, 225, 228, 233, 237, 239, 240, 241, 246, 248], "b\u00e9n\u00e9fici": 43, "contien": [43, 213, 225, 228, 243], "thet": [43, 52, 64, 72, 134, 239], "cos": [43, 63, 102, 108, 109, 119, 124, 136, 137, 160, 201, 203, 204, 207, 208, 225, 243], "sin": [43, 102, 108, 109, 119, 124, 135, 136, 137, 160, 195, 196, 225], "183676841431136": 43, "fill": [43, 120, 139, 175, 225, 233], "sens": [43, 134, 170], "emploi": [43, 208, 225, 233, 239, 240], "31622776601683794": 43, "999": [43, 101, 177, 239], "03162277660168379": 43, "9999": [43, 121], "0001": [43, 87, 114, 119, 120, 126, 137, 153, 178], "0031622776601683794": 43, "999999": [43, 175], "0000000000000002e": 43, "9999999": 43, "000316227766016838": 43, "99999999": 43, "999999999": 43, "0000000000000003e": 43, "1622776601683795e": 43, "9999999999": [43, 225], "99999999999": 43, "1622776601683796e": 43, "999999999999": 43, "9999999999999": 43, "1622776601683797e": 43, "99999999999999": 43, "0000000000000001e": 43, "999999999999999": 43, "162277660168379e": 43, "9999999999999999": [43, 225], "signif": [43, 52, 53, 55, 58, 60, 61, 63, 71, 72, 84, 97, 101, 112, 118, 125, 134, 138, 144, 147, 174, 197, 207, 208, 209, 217, 225, 227, 228, 233, 234, 236, 239, 240, 241, 246, 248], "8999999985098839": 43, "3162277683729184": 43, "9900000002235174": 43, "0999999988824129": 43, "9990000000689179": 43, "0009999999": 43, "03162277551199656": 43, "9999000000098022": 43, "999999e": 43, "009999999509891484": 43, "9999900000011621": 43, "0031622774764217087": 43, "9999990000001162": 43, "0009999999418942008": 43, "999999900000013": 43, "0003162277453952373": 43, "999999990000001": 43, "999999525523424e": 43, "9999999990000001": 43, "162277439909038e": 43, "99999937286775e": 43, "162277516708525e": 43, "999999437919884e": 43, "162277525279896e": 43, "999999488741863e": 43, "162277498494361e": 43, "999999422567411e": 43, "162277503725911e": 43, "999999712080637e": 43, "1622776099917643e": 43, "matrice_carree_2": 43, "determin": [43, 98], "m1": [43, 82, 83, 87, 89, 93, 110, 115, 116, 219, 220], "fauss": [43, 93, 137, 175, 195, 196, 219, 239], "M": [43, 52, 53, 57, 58, 63, 80, 96, 112, 113, 114, 116, 117, 118, 121, 125, 166, 180, 183, 184, 187, 188, 191, 193, 198, 202, 204, 208, 214, 222, 236, 240, 248], "begin": [43, 52, 58, 60, 61, 63, 64, 72, 85, 87, 105, 113, 114, 122, 134, 137, 140, 152, 153, 183, 187, 188, 191, 192, 204, 225, 229], "cc": [43, 83, 117, 118, 127, 175], "det": [43, 52], "tr": [43, 70, 153, 156, 167, 178], "lambda_1": [43, 183], "lambda_2": [43, 183, 187], "v\u00e9rifient": [43, 58, 60, 117, 118, 212, 216, 248], "lll": [43, 60, 61], "discrimin": [43, 136, 213], "polyn\u00f4m": [43, 64, 153, 201], "sqrt": [43, 52, 58, 63, 115, 116, 160, 183, 187, 204, 212, 225, 239, 243, 246], "valeurs_propr": 43, "9999990000110609": 43, "000000999988939": 43, "m_2": [43, 117, 118], "_2": [43, 63, 137], "99999999900000002828": 43, "000000001": 43, "Quelles": [43, 123, 191], "diagonalis": [43, 183, 225], "faux": [43, 52, 63, 140, 143, 195, 196, 225, 228, 239], "0x7f1656d65f30": 44, "\u00e9loign": [44, 52, 56, 58, 60, 119, 120, 125], "0x7f1656eeb790": 44, "constat": [44, 208], "d\u00e9duit": [44, 92, 117, 172, 204], "d\u00e9crois": 44, "milieu": [44, 63, 85, 114, 177, 216, 217, 218], "diminu": [44, 53, 58, 61, 79, 133, 134, 191], "pair": [44, 53, 55, 61, 63, 64, 71, 86, 89, 91, 97, 105, 110, 114, 119, 120, 125, 127, 128, 132, 138, 185, 186, 191, 192, 219, 225, 233, 240], "dessous": [44, 56, 58, 64, 71, 104, 147, 156, 182, 225, 233, 236, 240, 246], "91269497734147": 44, "d0": [44, 87, 95], "ordre2": 44, "xo": 44, "yo": [44, 137, 248], "894733251314698": 44, "1505425678208463": 44, "0x7f1656e938e0": 44, "voil\u00e0": [44, 95, 134, 207, 208], "supposon": [44, 58, 64, 85, 199], "faison": 44, "oublion": [44, 208], "5243974398092": 44, "9995757669673988": 44, "2410515230048507": 44, "9736242549096641": 44, "0x7f1656daad70": 44, "concord": 44, "oubl": [44, 209, 210, 239], "d\u00e9liber": 44, "bouclag": 44, "gagn": [44, 58, 63, 71, 72, 132, 149, 175, 217, 234, 240, 244, 246], "boug": [44, 115, 119, 120, 205, 233], "weight": [44, 178], "bold": 44, "077889706406841": 44, "557709976715826": 44, "5334228975595479": 44, "468370187175025": 44, "20532653905670506": 44, "8995663628712134": 44, "pourt": [44, 52, 58, 137, 179, 204, 207, 215, 219, 225, 228], "tort": [44, 77, 140, 207], "empress": 44, "6971761891807808": 44, "369750488848831": 44, "3677535436827313": 44, "6111875421879536": 44, "5006744970860402": 44, "Pas": [44, 68, 83, 87, 90, 91, 137, 144, 152, 172, 197], "parf": [44, 48, 95, 116], "conform": [44, 248], "mien": [44, 208], "inchang": [44, 225, 239, 240, 246], "parfait": [44, 58, 63, 79, 89, 239, 240], "voit": [44, 52, 53, 58, 71, 72, 79, 96, 101, 117, 118, 122, 134, 137, 149, 150, 151, 153, 161, 162, 197, 228, 248], "circonst": [44, 207], "aurion": 44, "al\u00e9": [44, 119, 120], "permutation_rnd": 44, "_j": 44, "627065975295549": 44, "536520971217867": 44, "9623191029236963": 44, "9122504386213736": 44, "9122504386213734": 44, "aberr": [44, 58, 87, 114, 125, 152], "syst\u00e9mat": [44, 58], "2394258574070736": 44, "303078406102993": 44, "2114301747106504": 44, "0156569956328851": 44, "5458694997601479": 44, "35302704677952035": 44, "recommenc": [44, 80, 91, 115, 116, 117, 118, 152, 153, 155, 185, 186], "minit": 44, "n_permut": 44, "bordr": 44, "22390804280377918": 44, "9675233757051863": 44, "46": [45, 48, 52, 53, 54, 55, 56, 93, 101, 112, 137, 144, 169, 175, 187, 188, 214, 225], "572": 45, "annex": [47, 243], "el\u00e9ment": [47, 51, 194, 196], "statiqu": [48, 226], "basemap": 48, "surcouch": 48, "anim": 48, "pygal": 48, "ipyleaflet": 48, "g\u00e9ograph": [48, 60, 97], "pyproj": 48, "fronti": [48, 64, 119, 120, 125, 136, 140, 141, 143], "fleuv": 48, "etat": [48, 58, 246], "unis": [48, 58], "difficult": [48, 79, 97, 136, 208], "charg": [48, 57, 58, 68, 77, 207, 215, 229, 233, 240], "fou": [48, 55], "lisibl": [48, 53, 87, 148, 153, 156, 197, 217, 231, 233, 234, 239, 240, 241, 243, 244], "inlin": [48, 52, 53, 55, 56, 79, 80, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 97, 101, 108, 109, 112, 115, 116, 117, 118, 119, 120, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 163, 166, 168, 172, 173, 182, 190, 204, 208, 211, 212, 214, 229], "ponteil": 48, "varredd": 48, "66145": 48, "77483": 48, "epci": 48, "cu": 48, "perpignan": 48, "m\u00e9diterran": 48, "pmcu": 48, "meau": 48, "200027183": 48, "247700628": 48, "d\u00e9part": [48, 53, 55, 60, 61, 81, 85, 86, 88, 92, 97, 182, 191, 197, 225, 233, 246], "pyren": 48, "oriental": 48, "sein": [48, 58, 71, 76, 86, 225, 233, 240, 244, 246], "marn": 48, "66": [0, 48, 52, 79, 93, 101, 124, 133, 137, 145, 153, 170, 201, 225], "77": [48, 79, 87, 97, 101, 114, 116, 121, 139], "occitan": 48, "\u00eele": 48, "76": [48, 64, 79, 101, 117, 146, 147, 153, 168, 225, 229], "domain": [48, 58, 60, 62, 63, 79, 229], "tension": 48, "bt": 48, "gt": [48, 52, 53, 79, 85, 89, 96, 101, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 127, 134, 142, 152, 154, 155, 167, 170, 174, 175, 176, 187, 188, 189, 192, 197, 208, 217], "kva": 48, "lt": [48, 52, 53, 79, 80, 86, 87, 90, 97, 101, 103, 104, 106, 107, 108, 109, 112, 115, 116, 133, 134, 135, 137, 142, 152, 154, 155, 159, 167, 168, 170, 172, 173, 174, 175, 176, 187, 188, 189, 192, 197, 208, 217], "photovolta": 48, "73": [48, 52, 56, 79, 97, 101, 121, 135, 170, 208, 225, 239], "energ": 48, "mwh": 48, "10728": 48, "620366": 48, "41684": 48, "eolien": 48, "hydraul": 48, "bio": 48, "cog\u00e9ner": 48, "geo": [48, 71, 74], "6323626522": 48, "82631103755": 48, "49": [48, 52, 53, 56, 101, 117, 121, 134, 153, 175, 178, 187, 188, 239], "0059497861": 48, "92725176893": 48, "826311": 48, "927252": 48, "lat": [48, 160], "632363": 48, "00595": 48, "anc\u00eatr": [48, 72, 225], "terr": [48, 208], "sph\u00e9riqu": 48, "localis": [48, 58, 72, 167], "wgs_84": 48, "inse": [48, 53], "epsg": 48, "2154": [48, 229], "proj": [48, 139], "cr": 48, "ccr": 48, "cfeatur": 48, "add_subplot": [48, 52, 135], "platecarre": 48, "set_extent": 48, "52": [48, 52, 53, 56, 101, 117, 118, 121, 134, 141, 144, 178, 225, 240], "add_featur": 48, "ocean": 48, "coastlin": 48, "border": 48, "python3": [48, 70, 101, 148, 150, 174, 175, 189, 207, 229, 233], "241": [48, 52, 112], "downloadwarning": 48, "downloading": 48, "naturalearth": 48, "amazonaw": 48, "10m_physical": 48, "ne_10m_ocean": 48, "warn": [48, 86, 101, 135, 145, 231, 248], "ne_10m_coastlin": 48, "10m_cultural": 48, "ne_10m_admin_0_boundary_lines_land": 48, "with_scal": 48, "10m": 48, "50m": 48, "110m": 48, "river": 48, "50m_physical": 48, "ne_50m_ocean": 48, "ne_50m_coastlin": 48, "ne_50m_rivers_lake_centerlin": 48, "50m_cultural": 48, "ne_50m_admin_0_boundary_lines_land": 48, "from_cr": 48, "4326": 48, "latidud": 48, "6634541": 48, "621546051": 48, "1633374": 48, "3871915536": 48, "6723037": 48, "367738617": 48, "4228679": 48, "19768552": 48, "lamb_x": 48, "lamb_y": 48, "glob": [48, 167, 225, 228, 229, 239, 240, 241, 243, 248], "parse_option_pyproj": 48, "strip": [48, 71, 191, 207, 208, 241], "valueerror": [48, 52, 55, 82, 142, 145, 175, 181, 220, 222, 228, 229, 239, 240], "mycr": 48, "proj4_param": 48, "sup": [48, 87, 90, 156, 199, 204], "cliqu": [48, 233, 246], "lcc": 48, "lat_1": 48, "lat_2": 48, "lat_0": 48, "lon_0": 48, "700000": 48, "6600000": 48, "ellp": 48, "grs80": 48, "unit": [48, 53, 112, 208], "no_def": 48, "Ne": [48, 84, 93], "lambert93": 48, "proj4_list": 48, "crs_lambert93": 48, "36954": 48, "1181938": 48, "6133555": 48, "7233428": 48, "oubli": [48, 53, 85, 117, 118, 177, 187, 188, 207, 217, 218, 225, 239, 241, 243, 246], "authentifi": 48, "populair": [48, 63, 205, 206], "gpd": 48, "read_fil": [48, 213, 214], "get_path": 48, "naturalearth_cit": 48, "tmp": [48, 52, 56, 70, 86, 87, 174, 175, 176, 189], "ipykernel_25365": 48, "1282256058": 48, "futurewarning": [48, 101, 148, 150], "deprecated": [48, 101, 148, 150, 231], "removed": [48, 67, 79, 101, 148, 150], "original": [48, 51, 56, 63, 72, 73, 97, 117, 118, 179, 229, 235, 248], "www": [48, 53, 56, 87, 121], "naturalearthdat": 48, "cultural": 48, "vector": [48, 187, 208], "geometry": [48, 233], "vatican": 48, "city": 48, "45339": 48, "90328": 48, "marino": 48, "44177": 48, "93610": 48, "vaduz": 48, "51667": 48, "47": [0, 48, 52, 53, 56, 101, 114, 134, 137, 144, 153, 159, 175, 182, 187, 188, 189, 204, 225, 239, 248], "13372": 48, "lobamb": 48, "20000": [48, 103, 112], "26": [0, 48, 52, 53, 55, 56, 57, 58, 79, 86, 87, 90, 91, 96, 97, 98, 99, 101, 103, 104, 110, 112, 118, 119, 120, 122, 126, 133, 137, 138, 140, 142, 144, 146, 147, 152, 153, 155, 166, 167, 175, 179, 182, 187, 188, 197, 201, 202, 204, 207, 214, 215, 216, 223, 225, 229, 236], "46667": 48, "luxembourg": [48, 58, 72], "13000": 48, "61166": 48, "naturalearth_lowr": 48, "913829029": 48, "pop_est": 48, "continent": 48, "iso_a3": 48, "gdp_md_est": 48, "889953": 48, "oceani": 48, "fij": 48, "fji": 48, "5496": 48, "multipolygon": 48, "180": [48, 56, 87, 112, 133, 174, 175], "00000": [48, 53], "06713": 48, "58005463": 48, "afric": 48, "tanzani": 48, "tza": 48, "63177": 48, "polygon": [48, 163], "90371": 48, "95000": 48, "07262": 48, "05982": 48, "603253": 48, "sahar": 48, "esh": 48, "907": [48, 52], "66559": 48, "65643": 48, "66512": 48, "58948": 48, "37589262": 48, "americ": 48, "canad": 48, "1736425": 48, "122": [48, 101], "84000": 48, "9742": 48, "328239523": 48, "united": 48, "usa": [48, 53, 58, 72], "21433226": 48, "0000": [48, 53, 126, 141, 153], "set_aspect": 48, "whit": [48, 139, 140, 141, 142, 143, 147, 175], "edgecolor": [48, 101], "mark": 48, "markersiz": 48, "restreint": [48, 170], "m\u00e9tropol": [48, 208], "shapely": 48, "35": [0, 48, 52, 53, 55, 56, 58, 72, 73, 79, 97, 101, 104, 110, 126, 133, 135, 137, 142, 149, 152, 153, 155, 159, 162, 175, 182, 187, 188, 201, 208, 214], "144373535": 48, "russi": 48, "rus": [48, 55], "1699876": 48, "67591": 48, "64149": 48, "68201": 48, "5347896": 48, "norway": 48, "nor": 48, "403336": 48, "29": [0, 48, 52, 53, 55, 56, 57, 71, 79, 86, 95, 97, 101, 104, 110, 112, 119, 121, 122, 135, 137, 139, 140, 144, 153, 155, 167, 175, 187, 188, 197, 201, 207, 208, 216, 236, 239], "39955": 48, "69": [48, 52, 53, 56, 79, 101, 137, 144, 153, 176], "15692": 48, "59193": 48, "67059887": 48, "fra": [48, 208], "2715518": 48, "65823": 48, "20196": 48, "09928": 48, "10285453": 48, "sweden": 48, "swe": 48, "530883": 48, "46827": 48, "59": [48, 52, 53, 56, 64, 97, 101, 134, 144, 153, 169, 200, 214, 239], "43239": 48, "30037": 48, "11793": 48, "9466856": 48, "belarus": 48, "blr": 48, "63080": 48, "22951": 48, "91834": 48, "37157": 48, "67009": 48, "lon": 48, "itertupl": [48, 139, 152], "geodatafram": 48, "82631": 48, "63236": 48, "92725": 48, "21389": 48, "46046": 48, "97421": 48, "12047": 48, "08532": 48, "48": [48, 52, 53, 54, 56, 57, 58, 71, 97, 101, 117, 121, 134, 137, 160, 169, 174, 175, 182, 187, 188, 214, 225], "61706": 48, "map_osm": 48, "85": [48, 79, 86, 101, 118, 121, 125, 133, 171, 208, 225], "add_child": [48, 216], "regularpolygonmark": 48, "popup": 48, "fill_color": 48, "132b5e": 48, "radius": [48, 160], "d\u00e9tail": [48, 63, 79, 83, 115, 116, 117, 118, 133, 137, 152, 153, 167, 225, 233, 240], "img_til": 48, "osm": 48, "imagery": 48, "add_imag": 48, "plotly": 49, "gmap": 49, "bingmap": 49, "folium": 49, "openstreetmap": [49, 56], "incontourn": [50, 55, 56, 63, 240], "tant": [50, 53, 60, 61, 63, 71, 80, 86, 91, 115, 116, 160, 191, 216, 225, 239, 240, 241, 243, 246], "simplifient": [50, 63], "contingent": [50, 51, 132], "algebr": 51, "r\u00e9f\u00e9rent": [51, 60, 71, 225, 228, 239, 240, 241, 243, 246], "raccourc": [51, 61, 71, 179, 225, 240], "docstring": [51, 73, 235], "d\u00e9di": [52, 60, 76, 181], "aven": [52, 244], "deep": [52, 75, 175], "\u00e9merg": [52, 246], "offrant": 52, "vari": [52, 58, 63, 71, 90, 120, 123, 137, 170, 191, 219, 225, 240, 241], "\u00e9mergent": 52, "usag": [52, 53, 63, 64, 71, 76, 79, 93, 157, 170, 180, 207, 208, 209, 225, 230, 234, 240, 241, 245, 246], "standardis": 52, "presqu": [52, 64, 81, 97, 115, 140, 145, 147, 161, 184, 190, 191, 201, 233, 239, 241, 246], "convent": [52, 53, 55, 56, 63, 71, 83, 157, 160, 197, 207, 208, 217, 228, 230, 240], "etc": [52, 69, 79, 193, 243], "ndim": 52, "int64": [52, 53, 55, 56, 121, 125, 168, 175], "s\u00e9lection": [52, 53, 56, 58, 79, 233, 241], "allez": [52, 90], "jet": [52, 53, 82, 97], "bb": [52, 82], "assign": [52, 53, 113, 243], "cast": 52, "casting": 52, "aa": [52, 82, 127, 208, 216, 220, 234, 248], "dimmensionnel": 52, "aplat": 52, "1d": 52, "transposed": 52, "flatten": [52, 175], "flattened": 52, "multidimensionnel": [52, 113], "mask": [52, 53], "extrair": [52, 53, 61, 85, 89, 248], "\u00e9lement": [52, 53, 79, 156, 168], "ar": [52, 179, 192, 208], "arang": [52, 79, 80, 86, 90, 117, 118, 123, 125, 135, 137, 138, 142, 163, 175], "idx": 52, "idx_bool": 52, "did": [52, 225], "match": [52, 64, 207, 225, 229, 239, 248], "indexed": 52, "along": 52, "corresponding": [52, 67], "essai": [52, 55, 61, 63, 64, 71, 76, 87, 88, 97, 114, 125, 136, 149, 159, 169, 170, 175, 217, 228, 229, 233, 237, 240, 241, 246], "list_python": 52, "integer": [52, 185, 186], "slic": [52, 56], "cr\u00e9on": 52, "step": [52, 64, 112, 135, 142, 178], "flott": 52, "shallow": 52, "fourn": [52, 53, 58, 71, 97, 236, 243], "pi": [52, 53, 71, 90, 108, 109, 110, 119, 120, 124, 136, 137, 170, 176, 225, 243], "14159265": 52, "indirect": [52, 225, 228], "linspac": [52, 136], "subsidiair": 52, "quoi": [52, 53, 58, 63, 71, 79, 83, 104, 113, 158, 170, 183, 197, 201, 202, 215, 247], "71828183": 52, "silenci": [52, 62, 231], "vicieux": 52, "r\u00e2l": 52, "habitu": [52, 58], "naturel": [52, 179], "coh\u00e9rent": [52, 71], "nuit": [52, 58, 76, 208], "notanumb": 52, "slice_of_d": 52, "nslice_of_d": 52, "nd": 52, "fancy_indexed_subarray": 52, "nfancy_indexed_subarray": 52, "reshap": [52, 55, 113, 114, 125, 133, 134, 135, 136, 173, 175, 176, 180], "fortran": [52, 55, 63, 162], "column": [52, 53, 54, 56, 69, 87, 88, 101, 113, 117, 118, 121, 133, 135, 139, 140, 142, 143, 144, 145, 150, 151, 153, 166, 167, 173, 178, 182, 187, 188, 208, 233], "connaissent": [52, 208], "matlab": 52, "jok": 52, "infer": [52, 87, 198], "zeros_lik": 52, "ones_lik": 52, "concatenat": [52, 53, 79], "gmat": 52, "axis": [52, 53, 55, 56, 57, 86, 87, 88, 90, 91, 95, 101, 114, 117, 118, 125, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 180, 219], "hstack": [52, 55, 113, 133, 135, 142, 190], "8x8": [52, 181], "til": [52, 111], "extract": [52, 217], "ccccc": 52, "ccc": [52, 63], "routin": [52, 243], "d\u00e9clar": [52, 53, 208, 240, 246], "allon": [52, 61, 64, 116, 147, 164, 208, 233], "arithmet": 52, "effectuent": [52, 71, 239], "adopt": 52, "36787944": 52, "3890561": 52, "08553692": 52, "54": [0, 52, 53, 56, 58, 97, 101, 114, 134, 144, 145, 146, 147, 159, 214], "59815003": 52, "provoqu": [52, 53, 58, 66, 71, 76, 104, 106, 107, 201, 209, 229, 231, 239, 240, 243], "ipykernel_4567": 52, "2601360242": 52, "runtimewarning": 52, "divid": [52, 195, 196], "encountered": 52, "33333333": 52, "operand": [52, 71, 104, 114, 225], "togeth": [52, 195, 196], "sep": [52, 53, 56, 71, 87, 101, 121, 191, 192, 240, 243, 248], "dupliqu": [52, 60, 167, 233], "37": [52, 53, 56, 79, 96, 97, 101, 112, 118, 150, 155, 159, 175, 187, 188, 189, 198, 201, 208, 214, 239, 240], "newax": [52, 142, 175], "38": [52, 53, 56, 101, 106, 113, 118, 126, 153, 175, 187, 188, 201, 208], "existent": [52, 71, 76, 79, 86, 157, 196, 201, 208, 225, 239, 240, 241], "unes": [52, 60, 71, 84, 87, 107, 119, 120, 153, 225, 228, 233, 239, 240], "op\u00e8rent": 52, "\u00e9ventail": 52, "qr": 52, "svd": [52, 138], "commen\u00e7on": 52, "triangulair": [52, 86, 222], "tril": 52, "linalg": [52, 80, 113, 114, 137, 138, 183, 184, 188], "inv_a": 52, "inv": [52, 113, 114, 183, 184], "equat": 52, "eig": [52, 80, 139, 183, 184, 188], "eigresult": 52, "eigenvalu": [52, 153], "eigenvector": 52, "00000000e": [52, 114, 184], "93038066e": 52, "22044605e": 52, "eigval": 52, "sp\u00e9cialis": [52, 58, 241], "traver": [52, 225, 233, 239, 241], "pens": [52, 56, 63, 64, 76, 79, 105, 142, 177, 187, 201, 207, 208, 213, 225, 240, 248], "virgul": [52, 71, 240, 241], "indiquent": 52, "symbol": [52, 71, 104, 114, 201, 207, 208, 214, 225, 239, 240, 241, 243, 246, 248], "81": [52, 79, 118, 225, 229], "96": [52, 55, 79, 121, 134, 168, 182, 189, 201, 204], "102": [52, 55, 114, 153, 174, 175, 193], "126": [52, 101], "150": [52, 87, 90, 115, 119, 120, 121, 134, 149, 153, 168, 170, 172, 225], "priorit": [52, 71, 239, 240], "l\u00e9ger": [52, 53, 81, 82, 97, 142], "53": [52, 53, 56, 97, 101, 109, 134, 144, 150, 163, 169, 182, 189, 214, 239], "rank": [52, 170], "matrix_rank": 52, "000000000000016": 52, "77475828e": 52, "10542736e": 52, "88178420e": [52, 184], "66453526e": 52, "77635684e": [52, 113, 184], "apport": [52, 112, 142, 226, 246], "natif": 52, "referent": [52, 162, 225, 243], "randomnumpy": 52, "4x3": 52, "gaussien": [52, 138, 183, 184], "randn": [52, 55, 88, 95, 122, 134, 137, 172, 246], "normal": [52, 58, 63, 64, 117, 118, 119, 120, 135, 138, 148, 149, 170, 183, 184, 204, 225, 227, 233, 243, 246], "78986084": 52, "56625033": 52, "50288104": 52, "17435748": 52, "99013306": 52, "07810937": 52, "5082934": 52, "08166826": 52, "04530213": 52, "01406781": 52, "38415054": 52, "05907499": 52, "convaincr": [52, 79, 104, 169, 208, 216, 246], "pur": [52, 162], "1e6": [52, 125, 225], "normalvariat": 52, "691": [52, 135], "ms": [52, 53, 54, 79, 85, 93, 95, 112, 115, 116, 118, 125, 135, 137, 167, 170, 172, 182, 189, 198, 204, 216], "std": [52, 53, 54, 55, 85, 93, 95, 101, 115, 116, 118, 125, 133, 139, 141, 143, 153, 163, 170, 171, 172, 182, 189, 198, 204, 214, 216, 246], "\u00e9quiprob": [52, 64], "racin": [52, 86, 155, 215, 216, 217, 239, 240, 243], "instant": [52, 58, 79, 87, 97, 229, 240], "amplitud": [52, 134, 139], "atteint": [52, 58, 79], "combien": [52, 53, 56, 81, 104, 112, 119, 120, 123, 127, 148, 181, 201, 208], "argmax": [52, 55, 189], "cumsum": [52, 53, 56, 143, 162], "panel": [52, 53], "ad\u00e9quat": [52, 55, 58, 239, 241], "viv": [52, 208], "tutoriel": [52, 53], "mathematical": 52, "minim": 52, "ga\u00ebl": [52, 64], "varoqual": [52, 64], "r\u00e9cent": [52, 58, 134, 208, 233, 239, 243, 245, 246], "solver": 52, "normalis": [52, 137, 139, 152, 153], "minimis": [52, 58, 64, 72, 82, 97, 113, 114, 123, 134, 137, 187, 191, 194, 225], "minimiz": [52, 197], "minimize_scalar": 52, "obtiendr": [52, 64], "optimizeresult": 52, "d\u00e9velopp": [52, 58, 61, 83, 154, 231, 233, 240, 243, 244, 245], "toolbox": 52, "clair": [52, 63, 71, 95, 97, 101, 105, 134, 147], "rafraich": 52, "bowl_peak": 52, "57": [52, 53, 56, 97, 101, 117, 125, 134, 135, 171, 200, 214], "galler": [52, 53, 74, 250], "contour3d_demo3": 52, "58": [52, 53, 97, 101, 114, 115, 133, 134, 145, 146, 147, 159, 169, 178, 214], "mpl_toolkit": [52, 135], "mplot3d": [52, 135], "axes3d": [52, 135], "cm": [52, 63, 136, 139, 167], "colormap": 52, "min_val": 52, "max_val": 52, "x_ax": 52, "y_ax": 52, "meshgrid": [52, 136], "xy": [52, 79, 113, 114, 115, 116, 148, 152], "get_test_dat": 52, "plot_surfac": 52, "rstrid": 52, "cstrid": 52, "cset": 52, "contour": [52, 56, 136], "zdir": 52, "offset": 52, "coolwarm": [52, 136], "set_xlabel": [52, 53, 135, 137, 140, 163, 190, 214], "set_xlim": [52, 108, 109, 119, 120, 124], "set_ylabel": [52, 135, 137, 140, 149, 163, 190, 214], "set_ylim": [52, 108, 109, 119, 120, 124, 148, 152, 153], "set_zlabel": 52, "set_zlim": 52, "fun": 52, "cg": [52, 127], "bfg": 52, "powel": 52, "cobyl": 52, "optim_r": 52, "nmethod": 52, "terminated": [52, 141], "successfully": [52, 141], "status": [52, 140, 142, 143], "4052368582391728": 52, "690e": 52, "446e": 52, "nit": 52, "nfev": 52, "final_simplex": 52, "691e": 52, "814e": 52, "011e": 52, "052e": 52, "40523687026669025": 52, "670e": 52, "jac": 52, "863e": 52, "000e": 52, "njev": 52, "40523687025688715": 52, "451e": 52, "083e": 52, "hess_inv": 52, "287e": 52, "836e": 52, "154e": 52, "direc": 52, "854e": 52, "4052368678399868": 52, "892e": 52, "maxcv": 52, "norm_of_projected_gradient_": 52, "_pgtol": 52, "4052368702662145": 52, "828e": 52, "360e": 52, "2x2": 52, "lbfgsinvhessproduct": 52, "4052": 52, "669": 52, "optimum": [52, 149], "reposent": 52, "relanc": [52, 60, 96, 98, 208], "anneal": 52, "m\u00e9taheurist": 52, "61": [52, 53, 56, 79, 97, 101, 116, 121, 125, 134, 137, 148, 171, 214, 225, 239], "797": 52, "\u00b5": [52, 53, 54, 55, 85, 93, 95, 115, 116, 118, 125, 163, 170, 171, 172, 182, 204, 214], "91": [52, 79, 171, 189], "87": [52, 54, 79, 121, 141, 172, 178, 182, 208], "771": 52, "369": 52, "616": [52, 79], "vraissembl": 52, "rescaled": 52, "62": [52, 53, 56, 101, 114, 121, 134, 144, 163, 178, 199, 214], "shifted_scaled_bowlpeak": 52, "05000000677266441": 52, "500e": 52, "229e": 52, "918e": 52, "635e": 52, "407e": 52, "579e": 52, "174e": 52, "72": [52, 56, 79, 95, 101, 134, 159, 175], "hessien": 52, "x_1": [52, 63, 64, 72, 114, 136, 137, 187, 188, 195, 196, 239], "x_2": [52, 136, 137, 187, 188, 195, 196], "epsilon": [52, 58, 60, 63, 113, 114, 117, 118, 134, 137], "mathcal": [52, 79, 185, 186], "moindr": [52, 58, 60, 112, 160, 187, 188, 233], "ordinair": [52, 71, 246], "mco": 52, "hat": [52, 64, 113, 243], "densit": [52, 79, 139, 152], "mu": [52, 87, 88, 121], "sigm": [52, 58, 64, 72, 154, 156, 191, 192, 193, 194], "overlin": [52, 58], "equiv": [52, 61], "exercis": [52, 68], "auteur": [52, 76, 107, 241, 248], "partiel": [52, 138], "63": [52, 53, 58, 72, 79, 101, 115, 134, 159, 178, 207, 239, 248], "exo1": 52, "chess": 52, "chess2": 52, "exo1b": 52, "idx_row": 52, "idx_col": 52, "wrong": 52, "also": [52, 67, 140, 142, 143], "broadcasted": 52, "ix_": 52, "65": [52, 79, 98, 101, 114, 121, 139, 146, 147, 153, 159, 178, 182, 201, 202], "exo1c": 52, "is_prim": [52, 246], "71": [52, 56, 79, 101, 110, 121, 125, 135, 151, 159, 175, 189, 225, 239], "79": [52, 56, 79, 101, 118, 121, 125, 137, 153, 172, 182, 239], "83": [52, 79, 101, 117, 118, 135, 153, 178, 189, 239], "89": [52, 56, 79, 81, 97, 121, 123, 135, 145, 182, 189, 225, 239], "97": [52, 56, 79, 93, 97, 98, 101, 105, 121, 122, 168, 171, 201, 215, 216, 239], "103": 52, "107": [52, 191], "109": [52, 55, 56, 97, 184], "113": [52, 97, 114, 174, 176], "127": 52, "131": [52, 176], "137": 52, "139": [52, 153, 162, 163, 174, 175, 189], "149": [52, 153, 167], "151": [52, 101, 121, 133, 149, 153], "157": [52, 101], "163": [52, 56, 150, 153, 163], "167": 52, "173": [52, 101, 112, 114], "179": [52, 112], "181": [52, 189], "191": [52, 112, 153], "193": [52, 53, 112], "197": [52, 87, 112, 163], "199": [52, 56, 112, 162], "211": [52, 101], "223": 52, "227": [52, 94, 97, 101, 112], "229": [52, 112], "233": [52, 81, 112, 153, 209, 229], "239": [52, 112, 189, 233], "251": [52, 53, 93, 134, 168], "257": [52, 101, 204], "263": [52, 153], "269": [52, 204], "271": 52, "277": 52, "281": 52, "283": 52, "293": [52, 229], "307": [52, 153], "311": 52, "313": [52, 153, 229], "317": [52, 103, 153], "331": [52, 137, 153], "337": [52, 246], "347": [52, 53], "349": 52, "353": 52, "359": [52, 53], "367": 52, "373": [52, 56], "379": [52, 101], "383": 52, "389": 52, "397": 52, "401": 52, "409": [52, 101], "419": 52, "421": 52, "431": [52, 229], "433": 52, "439": 52, "443": [52, 125], "449": 52, "457": [52, 175], "461": [52, 174], "463": [52, 101], "467": 52, "479": 52, "487": 52, "491": [52, 101], "499": [52, 117, 118], "503": [52, 115], "509": [52, 93, 101, 189], "521": 52, "523": 52, "541": [52, 144, 153], "547": 52, "557": 52, "563": [52, 150], "569": 52, "571": 52, "577": [52, 184], "587": [52, 241], "593": 52, "599": 52, "601": [52, 101], "607": 52, "613": [52, 101], "617": 52, "619": 52, "641": 52, "643": [52, 153], "647": 52, "653": 52, "659": 52, "661": [52, 101, 153], "673": 52, "683": [52, 101], "701": [52, 56, 174], "709": 52, "719": [52, 56, 101, 153], "727": 52, "733": 52, "739": [52, 56, 174], "743": 52, "751": 52, "757": [52, 153], "761": [52, 56], "769": [52, 56, 153], "773": 52, "787": [52, 116, 229], "809": 52, "811": [52, 150], "821": 52, "823": [52, 101], "827": [52, 153], "829": 52, "839": 52, "853": 52, "857": 52, "859": 52, "877": [52, 174], "881": 52, "883": [52, 87, 246], "887": 52, "911": 52, "929": 52, "937": 52, "953": [52, 176], "983": 52, "991": 52, "barr": [52, 58, 72, 87, 96, 97, 106, 168], "n_walk": 52, "n_step": 52, "walk": [52, 89, 241, 248], "few": 52, "evolv": 52, "rms_posit": 52, "highest": 52, "lowest": [52, 195, 196], "wand": 52, "furth": [52, 134, 167], "hits_the_bound": 52, "2f": [52, 71, 79, 85, 94, 97, 134, 240], "among": 52, "beyond": 52, "hit": 52, "first_hit": 52, "crossing": 52, "d\u00e9riv": [52, 58, 87, 112, 113, 114, 137, 204, 225, 246], "derive": 52, "2n": [52, 61, 92, 103, 195, 196, 204], "x1_x2_ep": 52, "beta_hat": 52, "coef": [52, 101, 137, 141, 153, 173, 198, 225], "9970383": 52, "99521061": 52, "99634679": 52, "log_likelihood": 52, "sigma_squar": 52, "neg_log_likelihood_vectoriel": 52, "theta0": 52, "8178268765388288": 52, "984e": 52, "395e": 52, "985e": 52, "818e": 52, "ind\u00e9pend": [52, 58, 66, 71, 72, 79, 86, 90, 165, 180, 183, 184, 239, 244, 246], "9844993574269878": 52, "952430926826533": 52, "recet": 53, "cookbook": 53, "fen\u00eatr": [53, 193, 232, 239, 240, 246], "extern": [53, 207, 242], "spyd": 53, "million": [53, 93], "decr": [53, 55, 58, 61, 63, 80, 82, 97, 113, 114, 177, 225, 233, 237, 239, 240, 243, 246, 248], "gros": [53, 58, 63, 87, 167, 241], "mo": [53, 76, 110, 208, 239], "patient": [53, 101], "astuci": 53, "sqllit": 53, "streaming": [53, 128], "ipython": [53, 84, 85, 89, 96, 97, 103, 104, 106, 107, 112, 136, 145, 147, 165, 174, 175, 177, 187, 188, 189, 192, 194, 203, 204, 205, 206, 207, 211, 212, 215, 216, 218], "td2df": 53, "pr\u00e9vu": [53, 62, 132, 225, 228, 233, 241], "bloc": [53, 209, 210, 227, 233, 239], "uni": [53, 133, 208], "dimensionnel": 53, "hello": [53, 71], "missing1": 53, "missing2": 53, "city2cp_dict": 53, "paris14": 53, "75014": 53, "paris18": 53, "75018": 53, "malakoff": 53, "92240": 53, "6300": [53, 153], "lien": [53, 63, 64, 68, 86, 87, 140, 207, 225, 233, 241], "isnull": [53, 117], "notnull": 53, "cities_list": 53, "paris12": 53, "vanv": 53, "cities2": 53, "\u00e9ventuel": [53, 58, 122, 208], "75012": 53, "92": [53, 79, 97, 153, 171, 182], "align": [53, 167, 210, 233, 239, 240], "paris13": 53, "184480": 53, "12600": 53, "150028": 53, "150036": 53, "additionnent": 53, "nomm": [53, 56, 63, 71, 76, 86, 209, 216, 217, 225, 239, 240, 246], "postal": 53, "collect": [53, 72, 75, 86, 87, 161, 162, 171, 178, 179, 207, 214, 225, 234, 240], "apparent": [53, 182, 217, 233, 240], "prix": [53, 58, 72, 100, 101, 112, 158], "devis": [53, 58], "euros": [53, 58, 72, 101, 112], "221": [53, 55, 163, 204], "aujourd": [53, 58, 62, 63, 66, 71, 76, 79, 94, 207, 243], "hui": [53, 58, 62, 63, 66, 71, 76, 79, 94, 207, 243], "ger": [53, 58, 63, 96, 111, 142, 151, 176, 228, 233, 237, 240, 241, 243, 246, 248], "section": [53, 59, 69, 225, 228, 229, 233, 239, 241, 246], "briev": 53, "reprend": [53, 58, 61, 82, 89, 91, 134, 136, 156, 174, 199, 216, 225, 228, 233, 239, 240], "obligatoir": [53, 71, 76, 199, 217, 225, 227, 239], "accent": [53, 112, 169, 191, 228, 240], "xlsx": [53, 167], "special": 53, "bash": [53, 70], "caracter": [53, 56, 63, 64, 73, 76, 82, 83, 96, 98, 101, 102, 103, 104, 106, 112, 127, 154, 164, 169, 170, 191, 197, 201, 207, 208, 209, 210, 213, 214, 216, 217, 223, 225, 228, 229, 233, 238, 239, 241, 243, 244, 246], "tail": [53, 56, 70, 87, 117, 118, 121, 143, 147, 167], "df_marathon": 53, "marathon": 53, "anne": [53, 208], "2011": [53, 76, 153], "7589": 53, "2010": [53, 208, 248], "7601": 53, "2009": [53, 76, 195, 196, 208], "7547": 53, "2008": [53, 193, 194], "7600": 53, "2007": 53, "7637": 53, "000000": [53, 56, 101, 133, 139, 140, 143, 151, 225, 239], "1989": 53, "754875": 53, "7933": 53, "660167": 53, "028545": 53, "385": 53, "289830": 53, "1947": 53, "7382": 53, "1981": [53, 208], "7698": 53, "1991": 53, "7820": 53, "2001": [53, 58, 172, 208], "8046": 53, "500000": [53, 143, 151, 225, 239, 240], "10028": 53, "iloc": [53, 56, 87, 117, 121, 139, 141, 142, 146, 149, 151], "set_index": [53, 56, 87, 90, 117, 118, 137, 153, 166, 172], "dfi": [53, 56, 147], "r\u00e9fer": [53, 71], "dupr": [53, 69, 75, 77, 239, 240, 244], "arrond": [53, 104, 239, 240], "cl\u00e9menc": 53, "reset_index": [53, 56, 101, 121, 142, 143, 147, 149, 152, 153], "drop": [53, 56, 87, 90, 101, 112, 121, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "inplac": 53, "dfi2": 53, "plag": [53, 138], "urllib": [53, 98, 170, 178, 208, 243], "2006": 53, "7683": 53, "2005": [53, 58], "renomm": [53, 56, 227, 241], "year": [53, 58], "donnees_enquete_2003_televis": 53, "poidslog": 53, "individuel": 53, "relat": [53, 56, 58, 79, 80, 87, 100, 101, 113, 114, 121, 204, 233, 240, 241, 246], "poidsf": 53, "clt1freq": 53, "t\u00e9l\u00e9vis": 53, "clt2freq": 53, "mois": [53, 58, 76, 87, 112, 236, 248], "renseign": [53, 71, 117, 118, 194, 225, 240, 246], "sauv": [53, 208, 241], "isnan": [53, 55, 117, 118, 142], "apply": [53, 101, 182], "filln": [53, 56, 101], "n_1": 53, "n_2": 53, "sas": 53, "boston": 53, "fukuok": 53, "chicago": 53, "stockolm": 53, "york": [53, 58, 214], "london": 53, "berlin": 53, "amsterdam": 53, "1948": 53, "1949": [53, 170], "1950": 53, "1951": [53, 153], "1952": 53, "1953": 53, "1954": 53, "1955": 53, "1956": 53, "operator": [53, 225, 239], "chaining": 53, "indexing": [53, 55, 56, 103], "selecting": 53, "subset": [53, 61, 185, 186], "1971": [53, 153, 248], "112": 53, "7971": 53, "204": [53, 112], "8574": 53, "285": 53, "8325": 53, "query": 53, "concat": [53, 56, 87, 101, 142, 143, 147, 150, 151], "concat_lign": 53, "718": 53, "concat_col": 53, "sort_valu": [53, 101, 117, 118, 135, 142, 143, 152, 166], "ascending": [53, 101, 143], "7418": 53, "325": [53, 229], "202": [53, 112], "7480": 53, "276": 53, "8047": 53, "caract\u00e9rist": [53, 58, 76, 174, 233], "top": [53, 67, 70, 128, 195, 196, 233], "customis": 53, "gr": [53, 96, 101, 121, 155, 175, 248], "generic": 53, "dataframegroupby": 53, "0x7fd034df94b0": 53, "sort_index": 53, "37916": 53, "68673": 53, "7583": 53, "200000": [53, 87, 216], "7630": 53, "333333": [53, 101], "7652": 53, "555556": 53, "mention": [53, 225, 228, 229, 233, 240], "aggreg": [53, 56, 87, 162], "max_enti": 53, "agg": [53, 101, 162], "8134": 53, "7968": 53, "nsmallest": 53, "171": [53, 112, 151, 153, 189], "170": [53, 112, 153, 171, 225], "324": [53, 153], "357": 53, "74": [53, 79, 97, 101, 121, 153, 163, 198, 248], "234": [53, 112, 229, 240], "222": [53, 112, 113], "248": [53, 121], "7544": 53, "7578": 53, "7439": 53, "7552": 53, "7541": 53, "1999": 53, "7542": [53, 153], "7518": 53, "7570": 53, "7510": 53, "7663": 53, "7681": 53, "1983": 53, "7897": 53, "1986": [53, 248], "7953": 53, "inner": [53, 101], "merging": 53, "joining": 53, "jointur": [53, 100, 101], "patat": 53, "correspondent": [53, 58, 197, 204, 240, 248], "germany": 53, "uk": 53, "dfavecpay": 53, "left_on": [53, 56, 167], "right_on": [53, 56, 167], "192": [53, 97, 101, 133], "joindr": 53, "c_1": [53, 60, 185, 186], "c_2": 53, "c_3": 53, "respect": [53, 79, 117, 118, 172, 199, 208, 225, 239, 240], "a_i": [53, 162, 193], "b_i": [53, 193, 219], "c_i": [53, 60, 86], "contiendr": [53, 71, 191, 225, 228, 240, 241, 243], "a1": [53, 79, 124, 137, 198, 225], "b1": [53, 79, 198, 208, 233], "c1": [53, 54, 82, 83, 110, 133, 198, 220, 225, 240], "b2": [53, 79, 198, 233], "c2": [53, 54, 82, 83, 110, 120, 133, 198, 220, 225, 240], "a2": [53, 79, 124, 137, 198, 225], "c4": [53, 54, 83, 208], "b3": [53, 198, 233], "c5": [53, 54, 208], "pivot_t": [53, 56], "reshaping": 53, "piv": [53, 135, 150, 151, 173], "1967": 53, "1968": [53, 97], "1969": 53, "1987": 53, "1988": 53, "syntactic": 53, "sugar": 53, "2em": [53, 103], "four": 53, "riemann": 53, "3328334999999999": 53, "na\u00efv": [53, 203, 207], "mn": [53, 91, 169], "\u00e9vident": [53, 58, 60, 61, 72, 85, 90, 95, 97, 101, 105, 117, 135, 145, 172, 174, 213, 214, 225, 233, 239, 241, 243, 248], "klib": 53, "appui": [53, 58, 66, 71, 135, 147, 209, 231, 233], "magic": 53, "cellul": [53, 55, 193, 194, 207, 217], "big_df": 53, "cle1": [53, 71, 103, 240], "cle2": [53, 71, 103, 240], "784": 53, "310": 53, "gain": [53, 58, 61, 72, 125, 126, 134, 145, 159, 223, 243], "aaa": [53, 82, 96, 106, 216, 248], "mm": [53, 58, 248], "jj": [53, 248], "hh": 53, "ss": 53, "timedelt": [53, 87, 236], "recr\u00e9": [53, 97, 239, 240, 243], "1900": [53, 151], "total_second": 53, "naissanc": [53, 89, 169, 170, 236, 248], "d\u00e9ces": [53, 56, 87], "2012": [53, 58, 99], "zipfil": [53, 167, 241, 243], "download_and_sav": 53, "root_url": 53, "respons": [53, 58, 178, 208], "urlopen": [53, 98, 170, 178, 208], "timeouterror": 53, "urlerror": 53, "badstatuslin": 53, "teachdat": 53, "naissance_deces_mariag": 53, "wb": [53, 137, 178, 208, 241], "outfil": 53, "extractall": 53, "etatcivil2012_mar2012_dbas": 53, "etatcivil2012_nais2012_dbas": 53, "etatcivil2012_dec2012_dbas": 53, "2407910": 53, "dbfread": 53, "dbf": 53, "dbase2df": 53, "dbase_filenam": 53, "cp437": 53, "df_civil": 53, "mar2012": 53, "utf8": [53, 71, 208], "modulenotfounderror": [53, 192, 233], "named": [53, 192, 233], "sp\u00e9cial": [53, 55, 58, 76, 156, 240, 241, 248], "accentu": [53, 76, 208, 238], "r\u00e9pandu": [53, 58, 71, 170, 207, 225, 239], "lit": [53, 71, 76, 84, 89, 154, 170, 241, 246], "vardf": 53, "varlist_mariag": 53, "libel": 53, "amar": 53, "char": [53, 166, 220, 233], "anaisf": 53, "\u00e9pous": 53, "anaish": 53, "\u00e9poux": 53, "depdom": 53, "domicil": [53, 121], "depmar": 53, "depnaisf": 53, "depnaish": 53, "etamatf": 53, "matrimonial": 53, "ant\u00e9rieur": 53, "etamath": 53, "indnatf": 53, "indnath": 53, "jsemain": 53, "mmar": 53, "nbenfcom": 53, "enfant": [53, 156, 208], "tucom": 53, "tranch": 53, "tudom": 53, "urbain": 53, "mar": [53, 58, 72, 99, 133], "femm": [53, 187, 188, 207, 208], "etant": [53, 58, 79, 138, 225, 228, 240, 243], "heatmap": [53, 148], "visualiz": 53, "titr": [53, 76, 79, 87, 167, 208, 233, 246, 248], "grid": [53, 137, 149], "superpos": [53, 87], "as_index": [53, 101, 150, 151], "fontsiz": 53, "set_visibl": [53, 153, 178], "l\u00e9gend": [53, 233, 246], "requ\u00eat": [53, 71, 113, 241], "excelwrit": 53, "existing": [53, 70], "workbook": 53, "df1000": 53, "ton_example100": 53, "clos": [53, 71, 207, 228, 229, 241, 248], "poidlog": 53, "unnamed": 53, "889422": 53, "4766": 53, "865201": 53, "310209": 53, "12381": 53, "589746": 53, "740070": 53, "14685": 53, "431344": 53, "775545": 53, "9516": 53, "049939": 53, "732512": 53, "3925": 53, "907588": 53, "8403": 53, "7386": 53, "8397": 53, "502091": 53, "2690": 53, "961176": 53, "8398": 53, "306852": 53, "1644": 53, "574141": 53, "8399": 53, "501181": 53, "13405": 53, "104689": 53, "8400": 53, "382758": 53, "7410": 53, "905653": 53, "8401": 53, "343340": 53, "1840": [53, 153], "132652": 53, "obtenus": [53, 54, 58, 61, 64, 97, 135, 137, 147, 214, 216], "select": [53, 70, 137, 233], "echantillon": 53, "830": 53, "7883": 53, "371429": 53, "7922": 53, "315789": 53, "7891": 53, "061224": 53, "7815": 53, "909091": 53, "8075": 53, "187500": 53, "secondes_x": 53, "secondes_y": 53, "7937": 53, "028571": 53, "7466": 53, "8053": 53, "7871": 53, "7599": 53, "7661": 53, "7744": 53, "8456": 53, "7672": [53, 153], "7665": 53, "7585": 53, "7515": 53, "7723": 53, "8163": 53, "7568": 53, "7722": 53, "7755": 53, "7508": 53, "7704": 53, "7519": 53, "7694": 53, "pivmean": 53, "7695": 53, "161290": 53, "7928": 53, "560976": 53, "8133": 53, "393939": 53, "1612903225805": 53, "909090909091": 53, "371428571429": 53, "061224489796": 53, "315789473684": 53, "5609756097565": 53, "028571428571": 53, "1875": 53, "393939393939": 53, "courus": 53, "16129": 53, "246123": 53, "1982": 53, "1984": 53, "1992": 53, "1985": 53, "84": [53, 54, 56, 79, 121, 190, 208, 225], "1963": 53, "ageh": 53, "agef": 53, "scatt": [53, 56, 101, 119, 120, 134, 135, 136, 137, 139, 141, 143, 148, 152, 159, 187, 188, 211, 212, 214], "hexbin": 53, "differencehf": 53, "dissem": 53, "repsem": 53, "secondary_y": 53, "re\u00e7oit": [54, 55, 58, 72, 76, 201, 225, 239, 240, 246], "enumerate_row": 54, "tient": [54, 55, 56, 58, 87, 110, 115, 117, 118, 121, 170, 225, 233, 239], "4584214264768637": 54, "0957370472492135": 54, "825720254865909": 54, "056222146826998554": 54, "012568801665460705": 54, "20797581971445256": 54, "6508447830614892": 54, "817974554103244": 54, "04182207570159391": 54, "591375261282058": 54, "5818213564160107": 54, "3384435930913253": 54, "5900215149482624": 54, "9556893663618211": 54, "9156247392985197": 54, "20153581804870713": 54, "893987513368823": 54, "11112779556835362": 54, "043959856261986174": 54, "233344273733338": 54, "c0": 54, "c6": 54, "c7": 54, "c8": 54, "c9": 54, "155969": 54, "431193": 54, "995451": 54, "081467": 54, "257834": 54, "457617": 54, "773857": 54, "843436": 54, "842255": 54, "570137": 54, "876386": 54, "702447": 54, "130592": 54, "084160": 54, "782795": 54, "065442": 54, "682476": 54, "077565": 54, "444916": 54, "025166": 54, "854808": 54, "873240": 54, "055319": 54, "518709": 54, "486142": 54, "034237": 54, "979128": 54, "997898": 54, "472220": 54, "512437": 54, "476952": 54, "250016": 54, "964843": 54, "579930": 54, "693238": 54, "103160": 54, "249000": 54, "850935": 54, "632083": 54, "738248": 54, "773502": 54, "237446": 54, "974755": 54, "564504": 54, "684763": 54, "361164": 54, "152243": 54, "320242": 54, "218529": 54, "411604": 54, "230": [54, 112, 225], "225": 54, "145": [54, 71, 87, 151, 153, 167], "essay": [54, 71, 81, 98, 106, 112, 119, 120, 137, 142, 147, 204, 214, 225, 228, 240, 246, 248], "from_record": 54, "94": [54, 56, 79, 87, 121, 123, 159], "540": [54, 55], "create_df3": 54, "224": [54, 112, 153], "fromit": 54, "enumerate_row2": 54, "agrand": [54, 60], "fur": [54, 58, 64, 243, 248], "18094164": 54, "98726051": 54, "15154422": 54, "02532254": 54, "13567288": 54, "52949799": 54, "9955031": 54, "56441516": 54, "95278832": 54, "37068437": 54, "97776124": 54, "1088838": 54, "72051064": 54, "79808152": 54, "25334263": 54, "04203916": 54, "8290536": 54, "32045666": 54, "48908504": 54, "70058525": 54, "03562189": 54, "45141838": 54, "98266729": 54, "36282507": 54, "74903618": 54, "36675298": 54, "30681627": 54, "86053065": 54, "36733881": 54, "03716365": 54, "8255547": 54, "31025914": 54, "61405287": 54, "2289358": 54, "87746991": 54, "98780181": 54, "99195587": 54, "6592586": 54, "90237022": 54, "73119145": 54, "79096242": 54, "72046597": 54, "87479709": 54, "75549334": 54, "2525281": 54, "91680528": 54, "97679278": 54, "92947194": 54, "2344261": 54, "67808894": 54, "create_array": 54, "106": [54, 55, 87, 101], "create_array2": 54, "175": [54, 56], "create_array3": 54, "conclus": [54, 72, 101, 117, 118, 176], "enhancing": 54, "\u00e9tud": [54, 58, 85, 112, 135, 137, 240, 244], "sc\u00e9nar": [54, 58], "cython": [54, 245], "fonctionnal": [55, 207, 225, 231, 233, 240, 241, 243, 248], "basiqu": 55, "blas": 55, "assembleur": 55, "peaufin": 55, "gr\u00e9": 55, "mat\u00e9riel": 55, "r\u00e9ag": [55, 58, 72, 233, 246], "integ": 55, "matint": 55, "ns": [55, 56, 101, 117, 118, 163, 170, 182, 204, 214], "matintf": 55, "549": [55, 153], "1005": 55, "1008": [55, 121], "995": 55, "95": [55, 63, 79, 101, 114, 121, 124, 135, 168, 171, 204], "108": 55, "multipli": [55, 58, 60, 93, 97, 153, 236, 240], "valent": [55, 126, 127], "rand": [55, 80, 87, 91, 114, 121, 125, 168, 173, 190], "squeez": 55, "expend_dim": 55, "argmin": [55, 91, 118, 125], "prod": [55, 175], "commm": 55, "chisquar": 55, "p_": [55, 60], "o_": 55, "ij": [55, 57, 58, 80, 86, 180, 187, 188], "histogram": [55, 182, 213, 214], "empir": [55, 58, 72], "plein": [55, 62, 87, 88, 89, 93, 96, 122, 155, 169, 182, 197, 208, 233, 241, 246], "r\u00e9flech": [55, 76, 208], "csr_matrix": [55, 190], "t\u00e9l\u00e9phon": [55, 62, 241], "portabl": [55, 243], "contact": 55, "chi_squar": 55, "pis": [55, 170], "keepdim": [55, 57], "pj": 55, "pispj": 55, "chi": [55, 132], "5798254016266716": 55, "98556467": 55, "47377301": 55, "77148185": 55, "26135908": 55, "27373018": 55, "0240458": 55, "55360714": 55, "3575369": 55, "71740732": 55, "3260206": 55, "876020129318981": 55, "plusieurs_tirag": 55, "99594032": 55, "67914189": 55, "98105965": 55, "93181536": 55, "86827764": 55, "5000": [55, 79, 98, 101, 172, 174, 190], "407": [55, 214], "785": 55, "1273": 55, "2135": 55, "437878": 55, "49408914": 55, "55030028": 55, "60651142": 55, "66272256": 55, "7189337": 55, "77514485": 55, "83135599": 55, "88756713": 55, "94377827": 55, "99998941": 55, "sauf": [55, 63, 71, 97, 150, 151, 193, 204, 225, 243, 246, 248], "creus": [55, 56, 117, 118, 128], "spars": [55, 67, 93], "concret": [55, 63, 134, 225, 228, 240, 246], "ide": 55, "1000000": [55, 161, 218, 225, 243], "setdiag": 55, "python395_x64": 55, "_index": 55, "125": [55, 204, 225], "sparseefficiencywarning": 55, "changing": 55, "sparsity": 55, "expens": 55, "lil_matrix": 55, "_set_arrayxarray": 55, "territoir": 55, "export": [56, 243], "col1": 56, "col2": 56, "schtroumph": 56, "schtroumphet": 56, "offre": [56, 58, 208, 225, 239, 240], "impress": [56, 134, 136, 207], "souven": [56, 65, 96, 116, 208, 239], "particular": [56, 72, 77, 195, 196, 225, 240, 241], "potentiel": [56, 90, 115], "sup055": 56, "notat": [56, 57, 61, 63, 71, 92, 122, 180, 210, 239], "df1": 56, "col3": 56, "ipykernel_5653": 56, "164517544": 56, "settingwithcopywarning": 56, "trying": 56, "row_index": 56, "col_index": 56, "instead": [56, 101, 148, 150], "caveat": 56, "user_guid": 56, "returning": 56, "view": [56, 167], "avert": [56, 240], "stipul": [56, 112, 233, 243], "dispara\u00eetr": [56, 179, 231, 233], "cr\u00e9ent": [56, 233], "congestion": 56, "utilitair": 56, "isna": [56, 87], "to_datetim": [56, 87, 101, 121], "isin": [56, 87], "filt": [56, 71, 174, 241], "quantil": [56, 114, 115, 125], "hospitali": [56, 121], "\u00e9pidem": [56, 80, 87, 88, 121], "gouv": [56, 87, 88, 121], "63352e38": [56, 121], "d353": [56, 121], "4b54": [56, 121], "bfd1": [56, 121], "f1b3ee1cabd7": [56, 121], "08c18e08": 56, "6780": 56, "452d": 56, "9b8c": 56, "ae244ad529b3": 56, "reg": [56, 96, 101, 134, 142, 152, 208, 239], "cl_age90": 56, "hosp": [56, 121], "hospconv": 56, "ssr_usld": 56, "rad": [56, 121], "dc": [56, 121], "219577": 56, "387": [56, 87], "219578": 56, "536": [56, 153], "219579": 56, "810": [56, 121], "129": [56, 151, 162], "219580": 56, "888": [56, 153, 233], "219581": 56, "388": [56, 133], "121": [56, 174], "datetime64": [56, 101], "agg_par_jour": 56, "26110": 56, "1452": 56, "14586": 56, "9311": 56, "1717663": 56, "271176": 56, "26239": 56, "1435": 56, "14707": 56, "9336": 56, "1718630": 56, "271254": 56, "26255": 56, "1465": [56, 153], "14704": 56, "9323": 56, "763": 56, "1719634": 56, "271322": 56, "26253": 56, "1460": 56, "14680": 56, "9344": 56, "1720370": 56, "271394": 56, "26174": 56, "1413": 56, "14658": 56, "9354": 56, "749": 56, "1721380": 56, "271456": 56, "evolu": [56, 87, 117, 118, 140, 143, 149], "hospitalis": [56, 87], "\u00e9chel": [56, 87, 128, 139, 143], "logarithm": [56, 58, 63, 87, 103, 140, 143, 177, 182, 201, 216, 228], "logy": [56, 87, 90], "covid49": 56, "agg_par_jour49": 56, "372": [56, 133, 172], "57846": 56, "1554": 56, "377": [56, 81], "184": [56, 144, 145, 179], "57859": 56, "374": [56, 155], "177": [56, 112, 162, 176], "57877": 56, "375": [56, 153], "57889": 56, "57900": 56, "nag": 56, "736": [56, 121], "rolling": [56, 87], "roll": [56, 58], "857143": 56, "142857": 56, "571429": 56, "428571": [56, 151], "gen": [56, 58, 83, 87, 127], "h\u00f4pital": [56, 87], "gu\u00e9rison": [56, 87], "r\u00e9anim": 56, "d\u00e9cal": [56, 71, 138, 177, 201, 212, 239, 240], "pic": [56, 58, 72, 135, 138], "714286": 56, "285714": [56, 133], "data_last": 56, "ts": [56, 236], "dclag": 56, "shift": [56, 101, 233], "realag": 56, "ts_cor": 56, "corr_dc": 56, "corr_r": 56, "m\u00e9dical": [56, 63], "sir": [56, 87], "sex": 56, "338240": 56, "976": [56, 133], "1766": 56, "338241": 56, "338242": 56, "338243": 56, "338244": 56, "4acad602": 56, "d8b1": 56, "4516": 56, "bc71": 56, "7d5574d5f33e": 56, "iso": [56, 208], "8859": [56, 208], "1911493942": 56, "dtypewarning": 56, "mixed": 56, "specify": [56, 87], "low_memory": 56, "extract_dat": [56, 87], "depart": 56, "region": [56, 87, 195, 196], "libelle_reg": 56, "libelle_dep": 56, "tx_incid": 56, "taux_occupation_sa": 56, "tx_pos": 56, "tx_incid_couleur": 56, "r_couleur": 56, "taux_occupation_sae_couleur": 56, "tx_pos_couleur": 56, "nb_orang": 56, "nb_roug": 56, "90390": 56, "provenc": 56, "alpe": 56, "c\u00e3": 56, "azur": 56, "vauclus": 56, "721489": 56, "orang": [56, 115], "90391": 56, "719256": 56, "90392": 56, "524887": 56, "90393": 56, "566028": 56, "90394": 56, "570747": 56, "chardet": [56, 208, 214], "covid19": [56, 87], "rb": [56, 137, 208, 214, 241], "confident": [56, 135, 208, 214], "issus": [56, 71], "barycentr": [56, 60, 225], "departement_french_2018": 56, "spher": [56, 97], "dep_pos": 56, "code_inse": 56, "nuts3": 56, "surf_km2": 56, "deplong": 56, "deplat": 56, "morbihan": 56, "fr524": 56, "6870": 56, "812320": 56, "846846": 56, "98": [56, 79, 85, 118, 121, 162, 168, 171, 182, 201], "doub": 56, "fr431": 56, "5256": 56, "362722": 56, "165964": 56, "jur": 56, "fr432": 56, "5049": 56, "697361": 56, "729368": 56, "ardech": 56, "fr712": 56, "5566": 56, "425582": 56, "752771": 56, "fr812": 56, "5875": 56, "179861": 56, "993601": 56, "last_extract_dat": 56, "indic_last": 56, "ain": 56, "348764": 56, "099799": 56, "alli": [56, 61], "187644": 56, "393637": 56, "cantal": 56, "669045": 56, "051247": 56, "dr\u00f4m": 56, "167364": 56, "685239": 56, "018230": 56, "090620": 56, "dordogn": 56, "741203": 56, "104948": 56, "girond": 56, "575870": 56, "823614": 56, "land": [56, 195, 196, 248], "783793": 56, "965855": 56, "lot": [56, 195, 196], "garon": 56, "460747": 56, "367964": 56, "bigr1": 56, "bigr2": 56, "SAE": 56, "arden": 56, "640751": 56, "616226": 56, "chi_2": [57, 180], "suivr": [57, 58, 63, 122, 156, 158, 216, 225, 233, 239, 241], "m_": [57, 63, 80, 113, 122, 180, 187, 188], "forall": [57, 58, 60, 63, 64, 72, 87, 180, 191, 192, 204], "bullet": [57, 180], "sum_j": [57, 86, 180, 190], "n_": [57, 180], "n2": [57, 85, 140, 161], "03061224": 57, "95408163": 57, "93877551": 57, "92346939": 57, "8877551": 57, "83163265": 57, "7755102": 57, "71938776": 57, "132": [57, 174], "r\u00f4l": [58, 60, 86, 139, 231, 239, 240, 248], "trad": 58, "concevoir": [58, 60, 201, 225, 233, 241, 246], "sc\u00e9nario": [58, 134], "rendu": 58, "vont": [58, 63, 71, 139, 158, 216, 225, 241, 246], "ultra": 58, "verizon": 58, "speed": [58, 178], "auror": 58, "financial": 58, "market": [58, 72], "cme": 58, "techniqu": [58, 60, 125, 162, 175, 243], "renaiss": 58, "soin": [58, 62, 117, 118, 119, 120, 215, 233], "bug": [58, 71, 228], "extr\u00eam": [58, 63, 64, 125], "imper": [58, 76, 225], "frequency": 58, "manuel": [58, 241], "servent": [58, 64, 83, 201, 217, 233, 237, 239, 241, 248], "\u00e9lev": [58, 72, 97, 101, 102, 112, 117, 118, 121, 133, 134, 152, 166, 197, 198], "invest": [58, 62, 112], "limit": [58, 63, 77, 86, 125, 135, 198, 204, 233, 240, 246], "cess": [58, 208, 225, 239, 241, 246], "paragraph": [58, 60, 61, 71, 72, 169, 225, 228, 233, 239, 240, 241, 243, 245, 246, 248], "livr": [58, 62, 71, 75, 76, 128, 158, 187, 241], "d\u00e9criv": [58, 61, 167, 240], "mond": [58, 72, 76, 89, 169, 208, 209, 214, 240, 244], "succint": 58, "pr\u00e9tend": 58, "reflet": 58, "exhaust": [58, 59, 136, 225, 233, 239, 240, 241], "bibl": 58, "actif": [58, 193, 246], "hull2011": 58, "paul": 58, "wilmott": 58, "wilmott2008": 58, "cinqu": 58, "conclut": 58, "r\u00e9dact": 58, "cv": [58, 137, 147, 149, 152], "entretien": [58, 63, 92, 128], "vivac": 58, "esprit": [58, 112, 166, 208], "candidat": [58, 137, 149, 208], "intitul": [58, 233], "privat": 58, "equity": [58, 72], "frer": 58, "ennem": 58, "bertrand": 58, "jacquillat": 58, "jacquillat2008": [58, 72], "recueil": 58, "mondial": [58, 63], "pench": [58, 83, 86, 121, 227, 236], "r\u00e9gul": 58, "activ": [58, 135, 231, 233, 246], "tier": [58, 112, 148], "\u00e9tabl": [58, 208], "ile": [58, 72], "cayman": [58, 72], "rocchichristiaens2007": 58, "personnal": 58, "histoir": [58, 62, 115, 168, 215], "henry2008": 58, "Ayant": 58, "pu": [58, 81, 101, 208, 228], "cris": [58, 72], "subprim": [58, 72], "d\u00e9march": 58, "valabl": [58, 71, 239, 240], "surveil": 58, "kaggl": 58, "challeng": 58, "winton": 58, "particip": [58, 97], "explicitent": 58, "winn": 58, "2nd": 58, "nim": 58, "shahbaz": 58, "chahhou": 58, "mohamed": 58, "d\u00e9couvr": [58, 71, 106, 113, 174, 192, 193, 215, 241, 246], "disert": 58, "mendrik": 58, "ramarlin": 58, "publient": 58, "post": 58, "mortem": 58, "pr\u00e9f\u00e9rent": [58, 60, 180, 225, 239, 240], "marcher": 58, "int\u00e9ret": [58, 112], "limitent": 58, "jacent": [58, 134, 167], "vendeur": 58, "acheteur": 58, "ult\u00e9rieur": [58, 71, 225, 240], "matur": [58, 63], "achet": [58, 72, 136, 158], "p\u00e9trol": 58, "engag": [58, 208], "contrat": 58, "transact": 58, "clor": 58, "contract": [58, 77, 112], "caus": [58, 76, 133, 167, 228, 229, 231, 240], "sp\u00e9cul": 58, "ouvert": [58, 228, 241], "pari": 58, "euro": [58, 208], "dollar": 58, "int\u00e9r\u00eat": [58, 64, 71, 89, 101, 112, 122, 162, 197, 208, 225, 240, 241], "vendr": [58, 72], "big": [58, 79, 93], "cap": [58, 112, 185, 186, 223], "mid": [58, 72], "capitalis": 58, "boursi": 58, "secteur": 58, "momentan": [58, 228], "quotidien": [58, 72, 75], "journ": [58, 63, 72, 241], "vingtain": [58, 97], "p\u00e9riod": [58, 85, 87, 208], "soir": [58, 97, 208], "europ\u00e9en": [58, 72], "am\u00e9ricain": [58, 72], "acteur": 58, "attendent": 58, "annonc": 58, "baiss": [58, 149], "satisfact": [58, 97], "m\u00e9nag": 58, "uen": [58, 110], "le\u00e7on": 58, "vagu": [58, 72], "paus": [58, 72, 96], "d\u00e9jeun": [58, 72], "ouvertur": [58, 71, 72, 207, 241], "tomb": [58, 63, 72, 112, 119, 120, 168, 205, 206, 212, 218, 225, 233], "13h30": [58, 72], "organ": [58, 208], "b\u00e2t": [58, 246], "n\u00e9cessitent": [58, 240, 243], "tick": 58, "prochain": [58, 90, 112, 136, 208, 231, 233, 239], "bruit": [58, 88, 101, 113, 114, 135, 138, 190], "r\u00e9percut": [58, 239], "assoc": [58, 61, 63, 71, 86, 97, 106, 201, 228, 233, 239, 240, 246], "intent": [58, 101, 158], "\u00e9cart": [58, 117, 118, 119, 120, 246], "bid": 58, "offer": 58, "spread": 58, "augment": [58, 61, 64, 79, 90, 97, 112, 117, 118, 135, 137, 149, 153, 179, 189, 190, 240, 246], "nettoi": [58, 71, 138, 175, 225, 241], "vend": 58, "cher": [58, 101, 208], "agiss": [58, 64], "suffis": [58, 61, 72, 97, 98, 112, 135, 137, 204, 214, 225, 229, 239], "millisecond": [58, 233, 236, 246], "retour": [58, 101, 114, 142, 240, 248], "bours": 58, "banqu": [58, 72, 112, 225], "cac": 58, "x_t": [58, 87, 134], "_t": [58, 193], "journali": 58, "eqnarray": 58, "r_t": [58, 87], "r_": [58, 72, 134], "manipulent": [58, 154, 225, 227, 237, 241], "annualis": 58, "longleftrightarrow": [58, 114, 192], "045": 58, "excellent": [58, 229, 233], "graduel": 58, "pa": [58, 60, 61, 63, 64, 72, 208], "esp": [58, 64, 72, 243], "sum_1": 58, "r_i": 58, "\u00e9ven": [58, 90, 231, 236, 240, 246], "bancair": 58, "proxim": [58, 60, 63], "rho": [58, 63, 185, 186, 239], "r_1": 58, "r_2": 58, "sigma_1": 58, "sigma_2": 58, "1t": 58, "cro": [58, 60, 64], "\u00e9coul": [58, 100, 101, 123, 195, 196, 236, 243], "gliss": 58, "visualis": [58, 63, 86, 140, 143, 216, 239], "gomm": [58, 90], "MA": 58, "d\u00e9centr": 58, "d\u00e9gag": 58, "pr\u00e9voit": [58, 228, 233], "enserrent": 58, "tub": 58, "interval": [58, 135, 204], "couloir": 58, "trader": 58, "o_t": 58, "h_t": 58, "l_t": 58, "c_t": [58, 185, 186], "exponentiel": [58, 63, 121, 240], "accord": 58, "mme_": 58, "mme": [58, 166], "ema": 58, "exponential": [58, 121], "tr_t": 58, "c_": [58, 60, 136], "intra": 58, "semblabl": [58, 136, 233, 240, 248], "r\u00e9activ": [58, 233, 246], "macd": 58, "macd_": 58, "ema_m": 58, "ema_n": 58, "sign": [58, 72, 119, 120, 207, 225, 227, 239, 241], "parabolic": 58, "sar": 58, "stop": [58, 135, 140, 142, 143, 174], "ep": [58, 79], "cro\u00eet": 58, "haussi": 58, "baissi": [58, 72], "situ": [58, 61, 125, 137, 149, 168, 239, 241], "actuel": [58, 76, 91, 96, 115, 116, 225, 236, 246], "dessus": [58, 61, 88, 112, 114, 121, 137, 140, 156, 158, 170, 191, 197, 209, 233, 239, 240, 243, 246], "rsi": 58, "strength": 58, "indicator": 58, "mouv": [58, 233], "u_t": 58, "d_t": [58, 87], "emu_n": 58, "emd_n": 58, "rs_n": 58, "rsi_n": 58, "rachet": 58, "emprunt": [58, 81, 112], "brok": 58, "interd": 58, "d\u00e9couvert": [58, 87, 227], "attrap": [58, 154, 229, 233], "frequ": 58, "fond": [58, 208, 233], "leverag": 58, "anglic": 58, "essort": 58, "f\u00e9d\u00e9ral": 58, "dang": 58, "pert": [58, 85], "ouvr": [58, 71, 241, 248], "discuss": [58, 233], "proposent": [58, 60, 136, 161, 197, 207, 225, 233, 241], "majoritair": [58, 93, 213, 227], "favorisent": 58, "lipp": [58, 72], "british": [58, 72], "virgin": [58, 72], "island": [58, 72], "bermud": [58, 72], "irland": [58, 72], "baham": [58, 72], "guernsey": [58, 72], "antill": [58, 72, 208], "n\u00e9erlandais": [58, 72], "short": [58, 72], "commodity": [58, 72], "advisor": [58, 72], "cta": [58, 72], "fixed": [58, 72], "incom": [58, 72], "arbitrag": [58, 72], "emerging": [58, 72], "macro": [58, 72], "neutral": [58, 72], "vendeux": [58, 72], "\u00e9tendr": [58, 64, 114, 117, 233, 241], "exposit": 58, "focalis": 58, "actual": 58, "mouvement": 58, "essayent": [58, 175], "anticip": [58, 86], "acquisit": 58, "publiqu": [58, 185, 186, 243], "opa": 58, "livraison": 58, "a380": 58, "rentr": [58, 63, 175, 208, 233], "r\u00e9ussit": 58, "connaiss": [58, 62, 63, 64, 76, 98, 136, 193, 239, 243], "bilan": 58, "mati": [58, 123], "commodit": 58, "pr\u00e9dilect": 58, "concernent": [58, 246], "bl\u00e9": 58, "cac40": 58, "promess": [58, 246], "brent": 58, "crud": 58, "oil": 58, "merchantil": 58, "exchang": 58, "nymex": 58, "aug08": 58, "ao\u00fbt": [58, 72, 236], "pai": [58, 100, 101, 112, 239], "affirm": [58, 64, 194, 208], "investisseur": 58, "fass": [58, 76, 115, 116, 140, 208], "tenu": [58, 76, 233], "vers": 58, "forfaitair": 58, "marg": [58, 204, 207], "chambr": 58, "compens": 58, "pali": [58, 72], "ach\u00e8tent": 58, "entendu": 58, "vendent": 58, "pr\u00eat": [58, 63, 112, 246], "jou": [58, 64, 139, 199, 206, 207, 208, 239, 246], "hauss": 58, "pr\u00e9voir": [58, 64, 71, 152, 233, 240], "croissanc": [58, 72], "couvr": [58, 193, 194, 243], "exerc": [58, 63], "confer": 58, "b\u00e9n\u00e9fic": [58, 207], "put": [58, 246], "souhaitent": [58, 76, 240], "regardent": 58, "track": [58, 248], "capac": [58, 76, 152], "synonym": [58, 239], "incertitud": [58, 204], "absenc": [58, 248], "capt": 58, "appuient": [58, 76, 166], "\u00e9mettric": 58, "affair": [58, 72, 156], "constuir": [58, 191, 240], "licenci": 58, "d\u00e9pr\u00e9ci": 58, "entra\u00een": [58, 72, 136, 208, 240], "justif": [58, 97, 112], "corrigent": 58, "int\u00e8grent": 58, "profit": 58, "impass": [58, 97, 145], "errat": 58, "passager": 58, "compr\u00e9hens": [58, 191, 225, 240], "cadr": [58, 71, 208, 239], "longtemp": [58, 63, 122], "annul": [58, 91, 113, 114, 137, 233], "revendr": [58, 72], "avers": 58, "d\u00e9conseil": [58, 76, 207, 239, 240, 241, 243], "fac": [58, 154, 165, 191, 208, 225], "touch": [58, 62, 111, 204, 233, 239, 246], "expert": [58, 64, 239], "\u00e9voqu": [58, 177, 228], "susceptibl": [58, 61, 193, 225, 228, 233, 240, 243, 248], "trentain": [58, 64], "immiscent": 58, "mun": [58, 71, 193, 233, 239], "m\u00e9can": [58, 71, 135, 170, 216, 217, 225, 228, 229, 233, 241, 246], "descend": [58, 63, 225], "stopp": 58, "rapproch": [58, 60, 79, 119, 120, 202, 239], "diminuent": 58, "oscill": [58, 134], "\u00e9quilibr": [58, 63, 208, 216], "perdr": [58, 89, 189, 208, 229], "contrarian": 58, "consensus": 58, "apparten": [58, 64, 80, 86, 160, 225, 240], "rebond": 58, "reviennent": [58, 97, 233], "net": [58, 71, 72, 80, 96, 101, 134, 135, 136, 140, 147, 178, 239, 240, 244], "d\u00e9grad": [58, 72], "kerviel": [58, 72], "janvi": [58, 72], "auparav": [58, 72, 88], "simultan": [58, 233, 239, 240, 246], "d\u00e9crivent": [58, 233, 239], "sant": 58, "entrepris": [58, 208, 240], "cot": 58, "oblig": [58, 64, 160, 208, 225, 226], "r\u00e9guli": [58, 102, 128, 132, 202, 228, 233, 241, 243, 249], "perspect": 58, "centain": [58, 60, 61, 63, 241], "earning": 58, "interest": 58, "tax": [58, 248], "depreci": 58, "amortiz": 58, "ebitd": 58, "revenus": 58, "imp\u00f4t": 58, "dotat": 58, "amort": 58, "provis": 58, "shar": 58, "mbox": 58, "outstanding": 58, "pric": [58, 101], "sal": 58, "revenu": 58, "dividend": 58, "payout": 58, "dpr": 58, "annual": 58, "i_t": [58, 87], "infegal": [58, 64, 72, 243], "extrem": [58, 61, 63, 80, 86, 97, 115, 135, 225], "rebalancing": 58, "guid": [58, 89, 225], "grandeur": [58, 63, 113, 133, 153, 193, 208], "incontest": 58, "markowitz": 58, "re\u00e7ut": 58, "nobel": 58, "traval": [58, 60], "1990": 58, "repos": [58, 79, 89, 241], "sigma_": [58, 72], "alpha_": [58, 72, 113], "alpha_1": [58, 72, 137], "alpha_n": [58, 72], "rho_": 58, "alpha_j": 58, "sigma_j": 58, "covari": [58, 101, 113, 138, 153, 183, 184], "ll": [58, 61, 64, 72, 85, 105, 137, 141, 187, 188, 191, 204, 225, 240], "underset": [58, 64, 72, 204], "supegal": [58, 60, 72], "maximis": [58, 61, 64, 72, 115, 116, 159], "contrain": [58, 72], "assoupl": 58, "r\u00e9solvent": [58, 225], "lagrang": 58, "s\u00e9quentiel": [58, 79, 170], "inegl": 58, "boyd": 58, "admm": 58, "boyd2012": 58, "statistical": [58, 187], "alternating": 58, "cvxgen": 58, "p_i": [58, 60, 64, 168], "cl\u00f4tur": 58, "expriment": [58, 236], "oe": 58, "uvre": 58, "\u00e9paul": 58, "chevron": 58, "contr\u00f4l": [58, 237, 241], "pend": [58, 71, 87, 176, 208, 228, 231, 233, 239, 246], "7822": 58, "7823": 58, "7818": 58, "7819": 58, "1130": 58, "7830": 58, "1543": 58, "7827": 58, "7824": 58, "1244": [58, 153], "7825": 58, "216": [58, 101, 168], "7828": 58, "7833": 58, "640": [58, 101], "7829": 58, "7831": 58, "478": [58, 113], "7821": [58, 153], "716": 58, "7834": 58, "7826": 58, "681": 58, "24h": 58, "immobil": 58, "fermetur": [58, 71, 241], "informatisent": 58, "ten": [58, 72, 84, 97, 101, 112, 116, 123, 161, 214, 215, 225, 239, 241], "histor": [58, 71, 72, 208], "exploit": [58, 89, 233, 236, 237, 241, 243, 246], "incoh\u00e9rent": [58, 154], "mulitpl": 58, "redescend": 58, "franch": 58, "remont": [58, 81, 228], "inefficac": 58, "dizain": [58, 61, 63], "vendu": [58, 72], "hauteur": [58, 72, 123, 204, 212, 233], "six": [58, 60, 208, 240, 248], "absent": [58, 144, 239], "impr\u00e9vu": [58, 134], "d\u00e9cevoir": 58, "cascad": 58, "vigil": 58, "remettr": 58, "qualit": [58, 62, 64, 79, 142, 146, 148, 151, 153], "\u00e9prouv": [58, 208], "d\u00e9pass": [58, 112, 205, 206], "cert": 58, "permettr": [58, 71, 192, 208, 225, 240, 241, 246], "asset": 58, "tiennent": 58, "frais": 58, "r\u00e9invest": 58, "r\u00e9alit": [58, 208, 225, 239], "Cee": 58, "\u00e9cueil": 58, "in\u00e9vit": [58, 233, 246], "doivent": [58, 71, 72, 181, 197, 201, 225, 233, 239, 240, 243, 248], "connus": [58, 63, 64, 87, 90, 128, 150, 191, 225], "malgr": [58, 62, 152, 170, 229, 239, 240], "avis": [58, 79, 107, 112], "attribu": [58, 225, 239, 240], "slippag": 58, "surviennent": [58, 228, 231, 237], "d\u00e9calag": [58, 98, 201, 208, 239, 240], "d\u00e9faveur": 58, "fraction": 58, "pourcent": 58, "diziem": [58, 246], "n\u00e9glig": 58, "surestim": 58, "donnent": [58, 63, 64, 240], "observent": 58, "d\u00e9cro\u00eetr": [58, 61, 112, 149], "p\u00e9nalis": 58, "davantag": [58, 60, 228, 240], "proportionnel": [58, 61, 79, 93, 162], "sharp": [58, 72], "ref": [58, 61, 140, 142, 143, 147], "finance_rendemnt_anne": 58, "caution": 58, "partiquent": 58, "empruntent": 58, "tripl": [58, 168], "g\u00e8rent": 58, "gratuit": 58, "retranch": [58, 115], "drawdown": [58, 72, 85], "succed": 58, "roul": 58, "reproduisent": [58, 201], "criter": [58, 86, 218, 243], "risk": 58, "repr\u00e9sentent": [58, 61, 63], "pir": [58, 79, 85, 90, 102, 172], "lendemain": 58, "mauv": [58, 64, 72, 140, 147, 148, 153, 239], "Leur": [58, 71, 225, 240], "82": [58, 79, 95, 101, 178], "vraisembl": [58, 64, 87], "r\u00e9percuss": [58, 239], "exp\u00e9rient": [58, 61, 166, 197, 225, 239, 240], "obtien": [58, 72], "passent": [58, 72, 121, 207, 225], "montrent": [58, 72], "confirm": [58, 79, 216], "d\u00e9correl": [58, 63, 117, 118, 128], "permettront": 58, "banquair": [58, 72], "alimentair": [58, 72], "autocorrel": [58, 72], "sg": [58, 72], "homogen": [58, 72, 150], "mitig": [58, 72], "perd": [58, 62, 72, 112, 175, 176, 179, 190, 199, 234, 240], "tend": [58, 63, 72, 117, 118, 204], "t_1": [58, 191], "t_2": [58, 191], "p_1": [58, 60, 191], "p_2": [58, 191], "flech": [58, 61, 72], "superposent": [58, 72, 140], "d_i": [58, 187, 188], "potters2005": [58, 72], "diff\u00e9renc": [58, 243], "reconna\u00eet": 58, "bouchaud": [58, 72], "potter": [58, 72], "troisem": [58, 72], "interrog": [58, 64, 99, 225], "Ses": [58, 89, 169], "reproduir": [58, 76, 216], "t\u00f4t": [58, 116, 162, 231], "in\u00e9gal": 58, "coupur": [58, 71, 72, 82, 115, 116, 240], "envisage": [58, 72, 90], "os\u00e9": [58, 72], "ambiti": [58, 243], "alter": [58, 225, 240, 243], "sc\u00e9narios": 58, "volontair": [58, 112, 229], "exager": [58, 246], "visent": 58, "sall": [58, 119, 120], "voi": [58, 63, 166, 203], "sytem": 58, "agent": [58, 178], "micro\u00e9conom": 58, "montent": 58, "baissent": 58, "rentabl": 58, "suppl\u00e9ent": 58, "accel": 58, "capturent": 58, "impr\u00e9visibl": [58, 105, 134, 240, 246], "maximisent": 58, "regularized": 58, "wahlberg": 58, "annergren": 58, "wang": 58, "proceeding": 58, "16th": 58, "ifac": 58, "symposium": 58, "july": 58, "g\u00e9rard": 58, "henry": 58, "eyroll": 58, "pearson": [58, 63], "educ": 58, "puf": 58, "follower": 58, "los": 58, "often": 58, "marc": 58, "jean": [58, 105, 166], "philipp": 58, "r\u00e9f\u00e9renc": [58, 179, 225], "econpaper": 58, "arxiv": 58, "michel": [58, 112, 160], "rocch": 58, "arnaud": 58, "christiaen": 58, "sef": 58, "willmott": 58, "abordent": 59, "strateg": [59, 63, 64, 86, 112, 132, 133, 144, 245, 248], "trading": [59, 85], "financ": 59, "travevelling": 60, "magasin": [60, 62, 191], "probl\u00e9mat": [60, 122, 225], "plannif": 60, "t\u00e2ch": [60, 76, 140, 160, 215, 239, 240, 246, 248], "cepend": [60, 71, 90, 216, 240, 241], "pr\u00e9par": [60, 202, 208], "jouent": [60, 86, 240, 248], "300": [60, 61, 90, 101, 118, 119, 120, 135, 147, 153, 167, 170, 176, 189, 208, 211, 212, 233], "cercl": [60, 64, 119, 120, 136, 137, 233], "converg": [60, 79, 112, 114, 134, 140, 142, 143, 168, 204], "sued": 60, "diver": 60, "vast": 60, "backbon": 60, "heuristic": [60, 61], "espac": [60, 64, 71, 79, 83, 98, 112, 114, 128, 133, 134, 138, 177, 179, 189, 191, 210, 225, 233, 234, 239, 240, 244, 248], "puissent": [60, 241], "organized": 60, "citeindex": 60, "koivisto1999": 60, "vesanto2000": 60, "divers": [60, 79, 241], "reconnaiss": [60, 208], "parol": 60, "d\u00e9form": 60, "mod\u00e9lis": [60, 64, 80, 225], "torsion": 60, "ressemblent": [60, 148], "papillon": 60, "organizing": 60, "rejoint": [60, 97], "v_1": [60, 61, 193, 194, 239], "v_n": [60, 61, 193, 194], "p_l": 60, "c_l": 60, "longleftarrow": [60, 61], "allant": [60, 61, 71, 76, 155, 239], "v_i": [60, 61, 80, 219], "eta": [60, 63, 185, 186], "rcl": [60, 63, 64, 85, 134, 140, 183, 187, 192], "epsilon_0": 60, "d_0": [60, 87], "eta_0": 60, "d\u00e9pendr": [60, 149, 215], "d\u00e9pendent": [60, 61, 76, 84, 215, 239], "suppress": [60, 71, 225], "insert": [60, 71, 90, 97, 175, 217, 233, 234, 240], "maillag": 60, "vid\u00e9o": [60, 61, 207], "esper": [61, 86, 97, 208], "ud": 61, "redond": [61, 191, 225], "d\u00e9barrass": [61, 115, 116], "e_1": [61, 114], "e_n": 61, "emptyset": 61, "quad": 61, "e_i": [61, 80, 81], "neq": [61, 64, 72, 187, 188, 191], "cup": 61, "foreach": [61, 67], "Son": [61, 63, 79, 89, 162, 219, 225, 233, 239, 241], "majeur": [61, 71, 115, 116, 170, 190], "quadrill": 61, "30000": [61, 103, 182], "algo_kruskal_tsp": 61, "3000": [61, 172, 174], "reven": [61, 85, 97, 136, 213, 233, 239, 243], "composent": [61, 135], "trigonometr": 61, "confondus": 61, "ch": [61, 233, 246], "parcouru": [61, 86, 97, 239], "visit": [61, 136, 225, 239, 246], "parcourus": [61, 89], "quelconqu": [61, 71, 113, 115, 146, 154, 192, 239, 240], "appartien": [61, 85], "poursuit": [61, 87, 208, 228, 239], "imperfect": 61, "morceau": [61, 239, 240, 248], "kernighan": 61, "portion": [61, 71, 72, 77, 201, 228, 239, 243, 246], "notin": [61, 64, 114], "v_": [61, 193, 194], "d\u00e9cro\u00eet": [61, 87, 133, 135, 137, 149], "v_j": [61, 80, 219], "v_k": 61, "pr\u00e9c\u00e8dent": [61, 71], "d\u00e9terminent": 61, "resteindr": 61, "concentr": [61, 64, 136, 174], "r\u00e9sorb": 61, "inconv\u00e9nient": [61, 64, 93, 160, 170, 198, 216, 225, 233, 246], "a\u00b5": 61, "lieux": 61, "recens": [61, 71, 98, 225, 234, 237, 240, 243], "travers": [61, 89, 97, 169, 181], "extr\u00e9mit": 61, "ext\u00e9rieur": [61, 71, 201, 225, 233, 239, 240, 245], "libert": [61, 180, 208, 246], "etap": [61, 86, 134, 173, 191], "1500": [61, 145], "scienc": 62, "d\u00e9marrag": 62, "lecteur": 62, "comprend": [62, 66, 71, 154, 216], "d\u00e9monstr": [62, 71, 191], "fidel": 62, "enseign": [62, 63], "plais": 62, "professeur": [62, 219], "digress": 62, "m\u00ealent": 62, "soulign": [62, 71, 72, 225, 240], "assist": 62, "chapitr": [62, 225, 228, 233, 234, 239, 240, 241, 243, 246], "d\u00e9battr": [62, 208], "supposit": 62, "appr\u00e9ci": [62, 64], "tradit": 62, "motiv": [62, 79], "sanction": 62, "aveugl": 62, "invari": [62, 71, 225], "vois": [62, 90, 107], "agenc": [62, 63], "terrain": 62, "r\u00e9sist": 62, "nait": 62, "d\u00e9crir": [62, 197, 209], "ph\u00e9nomen": 62, "bocal": 62, "enivr": 62, "bient\u00f4t": [62, 246], "datascient": 62, "phras": 62, "concis": [62, 240], "charm": 62, "scientif": [62, 233], "d\u00e9duir": [62, 87, 191], "vif": [62, 63], "nourr": 62, "d\u00e9press": 62, "frapp": [62, 208], "clavi": [62, 233, 239], "fascin": 62, "langu": [62, 126, 132, 223, 228, 237], "limpid": 62, "jogging": 62, "menac": 62, "s\u00e9cur": [62, 76, 208], "militair": 62, "bo\u00eet": 62, "tourment": [62, 208], "laisson": 62, "partout": [62, 204, 213, 239], "ustensil": 62, "journal": [62, 214], "intim": 62, "passon": 62, "tripot": 62, "disposit": [62, 64, 232, 241, 243, 246], "v\u00e9rit": [63, 64, 121, 208], "expos": [63, 75, 134, 231], "symbolis": 63, "purist": 63, "diront": 63, "trompeur": [63, 101, 120], "r\u00e9vel": 63, "confondr": [63, 71, 104, 106, 159, 240], "pr\u00e9cieux": [63, 229], "h\u00e9sit": [63, 64, 71, 209], "iri": 63, "t\u00eat": [63, 71, 157, 233], "\u00e9crivent": [63, 181, 241], "x_n": [63, 64, 72, 114, 166, 187, 195, 196, 239], "bilin\u00e9air": 63, "y_i": [63, 64, 79, 113, 114, 115, 116, 117, 118, 134, 135, 137, 140], "simplifi": [63, 64, 71, 76, 83, 96, 107, 156, 173, 227], "_1": [63, 137], "viennent": [63, 155, 191, 246], "beaoucoup": 63, "interviennent": [63, 90, 228, 237], "minuscul": [63, 71, 72, 240, 241], "majuscul": [63, 71, 72, 107, 240, 241], "lettr": [63, 71, 72, 76, 96, 98, 103, 105, 106, 112, 201, 202, 207, 213, 214, 215, 216, 217, 223, 233, 240, 248], "grecqu": 63, "r\u00e9flexion": 63, "min_w": 63, "newton": 63, "synth\u00e9tis": 63, "biolog": 63, "ami": [63, 166], "r\u00e9cit": 63, "endort": 63, "paress": [63, 103], "hasard": [63, 64, 82, 88, 90, 91, 95, 110, 119, 120, 140, 150, 159, 206, 219, 243, 246], "loi": [63, 64, 86, 90, 112, 113, 115, 116, 117, 118, 121, 125, 132, 180, 183, 184, 185, 186, 204, 207], "uniform": [63, 64, 79, 113, 115, 116, 119, 120, 125, 126, 162, 166, 204, 207], "chapeau": 63, "fabriqu": [63, 142, 148], "ampoul": 63, "vision": [63, 191], "y_1": [63, 116], "y_n": [63, 64], "varient": [63, 240], "r\u00e9su": 63, "spearman": 63, "rg_x": 63, "rg_y": 63, "traduct": [63, 243], "volont": 63, "gamm": [63, 134, 135, 185, 186], "ampleur": 63, "math\u00e9maticien": [63, 97], "guerr": 63, "reconstruir": [63, 170], "aimon": 63, "prou": 63, "litt\u00e9ral": [63, 240], "crypt": [63, 98, 185, 186], "uniformis": 63, "garant": [63, 72, 79, 89, 112, 208, 240], "illustrent": [63, 128], "mard": 63, "d\u00e9cembr": [63, 99, 208], "\u00e9col": [63, 76], "dispens": [63, 197], "lyc": [63, 208], "cultur": [63, 64, 76], "auxquel": [63, 76, 89, 208], "quadrupl": [63, 248], "x4": [63, 153], "viterb": 63, "levenstein": [63, 82, 83, 196], "exeric": 63, "embauch": [63, 92, 128], "d\u00e9nomin": [63, 140], "Sa": [63, 233, 239], "plair": 63, "statisticien": 63, "pyramid": [63, 83, 132], "bigarr": [63, 132], "spectral": [63, 128], "uci": 64, "p\u00e9dagog": 64, "go\u00fbt": [64, 156], "aver": [64, 225, 239, 240], "d\u00e9chiffr": [64, 244], "bouch": 64, "aim": [64, 83, 178, 187, 188, 208, 225], "taniqu": 64, "parfum": 64, "breuvag": 64, "pipet": 64, "chimiqu": [64, 146], "gustat": 64, "composit": 64, "envi": 64, "viticulteur": 64, "6000": [64, 153], "inconnu": [64, 87, 213, 240], "r\u00e9pertori": 64, "accumul": [64, 80, 112], "position": [64, 119, 120, 233], "ais": [64, 97, 167, 225, 239], "nearest": [64, 125, 136, 233], "regress": [64, 101, 113, 134, 140, 142, 143, 153], "i_": 64, "x_j": [64, 187, 188, 190], "d\u00e9saccord": 64, "visag": 64, "enquer": [64, 93], "ball": 64, "acquis": [64, 147], "aubain": [64, 147], "descent": [64, 134], "illusoir": 64, "epsilon_": [64, 72, 113, 114, 117, 118, 135], "loinormal": [64, 72], "independ": [64, 72], "epsilon_j": [64, 72], "Soient": [64, 72], "saporta2006": 64, "lumi": 64, "cibl": [64, 101], "leftrightarrow": [64, 85, 137], "logisit": 64, "fonti": 64, "beta_0": 64, "propto": 64, "kullbak": 64, "leib": 64, "loss": [64, 134], "converst": 64, "onevsrest": [64, 133, 144, 145], "onevson": [64, 133], "classifieur": [64, 140, 143, 144, 145, 190], "c_k": 64, "pr\u00e9dit": [64, 134, 143, 148, 150, 152], "remport": 64, "paradoxal": 64, "d\u00e9s\u00e9quilibr": 64, "furnkranz2002": 64, "balanc": [64, 131], "leg": [64, 137], "stacked": 64, "generaliz": 64, "supportent": 64, "nativ": 64, "stacking": [64, 131], "hyperparametr": [64, 131, 149], "assemblag": [64, 76, 170, 217, 225, 233, 244, 246], "svm": [64, 136, 142], "feature_select": [64, 142], "selectkbest": [64, 142], "f_regress": [64, 142], "n_inform": [64, 142, 189, 190], "random_stat": [64, 119, 120, 135, 137, 142, 147], "anova_filt": [64, 142], "clf": [64, 136, 142], "svc": [64, 136, 142], "kernel": [64, 142, 167, 175], "linear": [64, 136, 142], "anova_svm": [64, 142], "anov": [64, 142], "score_func": [64, 142], "0x7f5925b9fc70": 64, "estimator": [64, 137, 142, 144, 145, 147, 149], "predict_prob": [64, 140, 142, 143, 145, 152, 189], "get_param": [64, 153], "set_param": 64, "clon": [64, 142], "disjoint": [64, 131, 246], "gilbert": 64, "saport": 64, "technip": 64, "round": [64, 193, 194, 239], "robin": 64, "johann": 64, "f\u00fcrnkranz": 64, "manil": 65, "jenkin": [65, 68], "r\u00e9utilis": [66, 71, 76, 84, 101, 227, 233, 239], "vglob": 66, "un_calcul": 66, "contors": 66, "bouton": [66, 71, 246], "somme_doubl": [66, 71], "test_somme_doubl": [66, 71], "quiconqu": [66, 71], "bing": [66, 71], "envois": [66, 71], "remote_nam": 67, "url_repo": 67, "upstream_dmlc": 67, "dmlc": 67, "repo": 67, "branchpy": 67, "machinelearning": 67, "cscod": 67, "patch": [67, 119, 120, 163], "ish": 67, "pathspec": 67, "includ": 67, "predictor": 67, "new_branch": 67, "upstream": 67, "rm": [67, 70, 112], "localpath": 67, "hard": 67, "included": [67, 77], "mad": 67, "fetch": 67, "banch": 67, "insid": 67, "sync": 67, "assuming": 67, "reposity": 67, "ongoing": 67, "away": 67, "retain": 67, "may": [67, 134, 239], "seem": 67, "renamed": 67, "renaming": 67, "own": 67, "moved": 67, "delet": [67, 233], "tagged": 67, "declar": 67, "onnx": 67, "extended": 67, "config": [67, 69, 233, 246], "sparsecheckout": 67, "echo": [67, 69, 70], "_unittest": [67, 241], "pyproject": [67, 241], "toml": [67, 241], "cominf": 67, "stor": [67, 70], "onnx_extended": [67, 70], "tag": [67, 248], "thistag": 67, "truc": 68, "crash": 68, "cours": [68, 243, 246], "programmer": 68, "openjdk": 69, "jdk": 69, "wget": 69, "pkg": [69, 70], "sudo": [69, 233], "sh": [69, 70], "deb": 69, "updat": [69, 71, 84, 96, 97, 166, 173, 240, 241], "purg": [69, 70], "nano": 69, "chown": 69, "consol": 69, "next": [69, 174, 195, 196, 216, 225, 228, 239], "collapsing": 69, "usesecurity": 69, "security": 69, "ls": 70, "cd": 70, "pattern": [70, 225, 248], "autoremov": 70, "aptitud": 70, "dpkg": 70, "xarg": 70, "fi": [70, 170, 233, 241], "files0": 70, "sed": 70, "rn": 70, "causing": 70, "mtim": 70, "exec": [70, 174, 189, 225, 228, 229, 240, 243], "fuser": 70, "ncdu": 70, "sfdisk": 70, "lht": 70, "readabl": 70, "shc": 70, "heavy": 70, "folder": 70, "rh": 70, "kill": 70, "pid": 70, "eo": 70, "envvar": 70, "execut": [70, 216, 243], "suffisent": [71, 225], "jul": 71, "2024": [71, 77, 99, 101, 141, 153, 236, 240, 246], "gcc": 71, "derri": [71, 79, 164], "commentair": [71, 182, 210, 228, 237, 238, 246], "commencent": [71, 166, 181, 240, 241, 243], "help": [71, 174, 175, 199, 225, 228, 233, 239, 243], "encadr": [71, 117, 225, 240], "\u00e9tal": 71, "sphinx_runpython_extens": [71, 225, 229, 239, 244], "douteux": 71, "incorrect": [71, 106, 225], "\u00e9tend": [71, 233, 240, 241], "\u00e9cras": [71, 241], "apostroph": [71, 240], "guill": 71, "crochet": [71, 172, 240, 248], "usuel": [71, 238], "\u00e9quivaut": [71, 207, 240], "idem": [71, 233], "upper": [71, 98, 107, 139, 166, 194, 240], "isalph": [71, 240], "isdig": [71, 228, 240], "replac": [71, 84, 89, 98, 103, 117, 127, 133, 153, 175, 176, 178, 189, 208, 240, 243, 248], "optionnel": [71, 233, 240], "maxspl": [71, 240, 248], "d\u00e9limiteur": [71, 239, 240], "agglutin": [71, 240], "facult": [71, 72, 219, 225, 228, 239, 240, 248], "affichag": [71, 106, 154, 173, 175, 217, 225, 228, 233, 239, 240, 241, 246], "tronqu": [71, 228, 240], "d\u00e9cimal": [71, 236, 239, 240, 241], "123456789": [71, 240], "2e": [71, 101], "14159": 71, "14e": 71, "support": [71, 76, 103, 104, 234, 240, 246, 248], "iem": [71, 240], "2k": [71, 204, 240], "3k": [71, 240], "pop": [71, 90, 240], "\u00e9changent": [71, 233, 244], "valeur1": [71, 103, 240], "valeur2": [71, 72, 103, 225, 240], "superflu": [71, 228, 240], "clear": [71, 240, 246], "d2": [71, 82, 95, 110, 115, 117, 118, 166, 192], "d1": [71, 82, 110, 115], "setdefault": [71, 240], "popitem": 71, "contrepart": [71, 72, 225, 240], "encha\u00eenent": 71, "syumbol": 71, "xrang": 71, "li2": 71, "random_matrix": [71, 93], "__enter__": [71, 174, 175, 176, 189], "__exit__": [71, 174, 175, 176, 189], "acceptent": [71, 145, 225, 240], "exemple_fonct": [71, 72, 243], "r1": [71, 115, 116, 125], "r2": [71, 115, 116, 119, 125, 137, 147, 149, 150, 152], "re\u00e7oivent": [71, 233, 239], "follow": [71, 239], "int\u00e9rieur": [71, 72, 197, 201, 225, 228, 233, 239, 240, 241, 246, 248], "r\u00e9percu": 71, "d\u00e9clin": 71, "iterate_double_on_list": 71, "run_python_script_140021773711488": 71, "0x7f595bf768f0": 71, "ma_cl": 71, "att3": 71, "att4": 71, "constructeur": [71, 154, 156, 158, 197, 226, 228, 233, 241, 246], "calcule4": 71, "pr\u00e9ced": [71, 85, 216, 225, 227, 239, 240, 241, 248], "staticmethod": [71, 72, 225], "calcule_static": 71, "terminent": [71, 84, 240], "__": 71, "__add__": [71, 197, 198, 225], "soustract": [71, 197, 225, 236, 239, 240], "__cmp__": [71, 225], "ma_classe2": 71, "mer": [71, 89, 169, 208, 246], "makebold": 71, "wrapped": 71, "makeitalic": 71, "membr": [71, 191, 225], "_p": 71, "val": [71, 179, 188, 204], "p_get": 71, "p_set": 71, "tabul": [71, 163, 233, 240, 241, 248], "sp\u00e9cifi": [71, 228, 231, 233, 237, 239, 240], "readlin": [71, 191, 207, 208, 241, 248], "backslash": 71, "marquent": [71, 241], "l_net": [71, 241], "balis": 71, "htmlpars": 71, "sax": [71, 243], "descript": [71, 97], "d\u00e9limit": [71, 241], "hugo": [71, 241], "victor": [71, 241], "miser": [71, 241], "kessel": [71, 241], "joseph": [71, 241], "lion": [71, 241], "woolf": [71, 241], "virgini": [71, 241], "mr": [71, 166, 170, 241], "dalloway": [71, 241], "calvino": [71, 241], "italo": [71, 241], "baron": [71, 241], "perch": [71, 214, 241], "geometr": 71, "deuxiem": [71, 97, 204, 216], "pseudonym": 71, "rattrap": [71, 228], "agir": [71, 228], "exc": [71, 228, 229], "rapportent": 71, "insoup\u00e7on": [71, 228], "imbriqu": [71, 103, 107, 108, 109, 215, 239, 240], "aucunchiffr": [71, 228], "123a": [71, 228], "__doc__": [71, 225, 228, 240, 243], "runpythonerror": [71, 225, 228, 229, 233, 239, 240, 248], "stdin": [71, 225, 233, 248], "invalid": [71, 106], "abcdefghijklmnopqrstuvwxyz": [71, 166], "ef": 71, "entour": [71, 121, 233, 240], "r\u00e9sid": [71, 241], "calcul1": 71, "calcul2": 71, "calcul3": 71, "calculx": 71, "transm": [71, 96, 197, 239], "transmettr": [71, 167, 231, 239, 241, 244, 246], "calcul4": 71, "ported": 71, "nonetyp": [71, 104], "dropbox": 71, "skydriv": 71, "googledr": 71, "svn": 71, "tortoisesvn": 71, "caract\u00e9ris": [72, 240], "diff\u00e9renci": [72, 240], "poss\u00e8dent": [72, 225, 233, 240, 243, 246], "corp": [72, 225, 239], "privil\u00e9gi": [72, 208, 225, 240], "comportent": [72, 225, 239], "recouvr": [72, 119, 120, 239], "duplicat": [72, 73], "implic": 72, "target": [72, 73, 137, 167], "volatil": [72, 147], "achat": [72, 136, 158, 208], "band": 72, "bolling": 72, "vent": 72, "type_exception_1": [72, 228], "type_exception_": [72, 228], "type_exception_j": [72, 228], "type_exception_n": [72, 228], "apparu": [72, 122, 228, 240, 246], "nom_cl": [72, 225], "condition1": [72, 239], "instruction1": [72, 239], "instruction2": [72, 239], "instruction3": [72, 239], "instruction4": [72, 239], "importlib": [72, 243], "module_exempl": [72, 243], "exemple_vari": [72, 243], "reload": [72, 239, 243], "nom_class": [72, 225], "attribut_stat": [72, 225], "nom_method": [72, 225], "attribut_statique2": [72, 225], "nom_methode_st": [72, 225], "attribut_statique3": [72, 225], "valeur3": [72, 225], "nom_propriet": [72, 225], "fget": [72, 225], "fset": [72, 225], "fdel": [72, 225], "fget_vari": [72, 225], "fset_vari": [72, 225], "attribut_1": [72, 225], "attribut_n": [72, 225], "nom_ancetr": [72, 225], "nom_autre_method": [72, 225], "chez": [72, 88, 107, 208, 225], "exception_typ": [72, 228], "ali": [72, 207, 243], "exemple_cl": [72, 225, 243], "param_1": [72, 225, 239], "param_n": [72, 225, 239], "d\u00e9commmand": [72, 243], "valeur_1": [72, 225, 239], "valeur_n": [72, 225, 239], "nom_attribut": [72, 225], "fonction_nom": [72, 239], "par_1": [72, 239], "par_n": [72, 239], "instruction_1": [72, 239], "instruction_n": [72, 239], "res_1": [72, 239], "res_n": [72, 239], "valeur_2": [72, 239], "param_2": [72, 239], "explic": 73, "faq": 74, "picor": 75, "savent": [75, 209], "p\u00e9riss": 75, "survol": 75, "langgag": 75, "transcript": [76, 225], "d\u00e9butent": [76, 107], "macos": 76, "alleg": 76, "officiel": [76, 207, 248], "gourmand": [76, 79, 241], "d\u00e9fault": [76, 179], "horm": [76, 225, 239, 241], "heureux": [76, 208], "pyp": [76, 243], "florileg": 76, "awesom": [76, 87], "pip": [76, 145, 153], "anglophon": [76, 228], "apparit": [76, 126, 162, 225, 243], "ascii": [76, 229, 237, 240, 241], "charact": 76, "xe9": [76, 187, 188, 240], "pourront": 76, "soulev": 76, "r\u00e9serv": [76, 207], "h\u00f4tel": 76, "vieillot": 76, "obsolet": 76, "lisibil": [76, 233], "autorisent": 76, "publi": 76, "enhanc": 76, "proposal": 76, "calendri": [76, 236, 243], "encha\u00een": [76, 206, 217, 239, 240, 246], "relev": [76, 208], "immens": [76, 79], "manquent": 76, "qualif": 76, "cursus": 76, "scolair": 76, "intemporel": 76, "couvrent": 76, "mail": [76, 100, 101, 241], "serr": 76, "exit": 76, "vis": [76, 218, 241], "social": [79, 86, 191, 208], "connexion": 79, "lourd": [79, 177], "86": [79, 101, 112, 118, 121, 125, 135, 171, 208, 229, 240], "facebook": 79, "formel": [79, 227], "consid\u00e9ron": 79, "univer": 79, "s_1": [79, 191], "s_2": [79, 191], "ldot": 79, "s_m": [79, 191, 192], "noton": 79, "satisfair": 79, "actualis": 79, "toler": 79, "do\u00eet": 79, "lvert": [79, 137], "rvert": [79, 137], "leq": 79, "geq": 79, "m\u00e9dian": [79, 114], "pr\u00e9senton": 79, "correspondr": [79, 138, 213, 248], "famill": [79, 166, 208], "universel": 79, "mapsto": 79, "h_": [79, 134], "mathrm": 79, "prenon": [79, 197], "arbitrair": 79, "4294967291": 79, "tiron": 79, "sampl": [79, 97, 139, 142, 170], "calculon": 79, "compton": 79, "p_collis": 79, "effectuon": 79, "reiter": 79, "r\u00e9it\u00e9ron": 79, "750": [79, 134], "a_1": [79, 137], "a_2": [79, 137], "essayon": [79, 134, 142, 148, 150, 152, 161, 179], "64bit": 79, "i8": 79, "univers": 79, "\u00e9chantillonag": 79, "b_": 79, "b_max": 79, "b_1": 79, "b_2": 79, "h1": [79, 248], "h2": 79, "initialison": 79, "464": 79, "z\u00e9ros": [79, 114, 159, 179], "consecut": 79, "trailing": 79, "modulus": 79, "lookup": [79, 216], "78": [79, 85, 101, 133, 153, 168], "mod_37bit_posit": 79, "decomposit": [79, 138, 139, 156, 190], "0b10": 79, "0b10000000000": 79, "0b1101": 79, "comparon": [79, 171], "rajouton": 79, "539": 79, "atteindr": [79, 134, 181, 193, 217], "parcouron": 79, "regardon": [79, 139, 143, 152], "card": 79, "384": [79, 85, 116, 133, 140, 189], "remarquon": 79, "divisibl": 79, "dernier": 79, "obtenon": 79, "regroupon": 79, "2500": 79, "median": [79, 114], "1f": 79, "axhlin": 79, "0x7f1d715b2860": 79, "observon": 79, "approx": [79, 203], "rappelon": 79, "size_bound": 79, "satisfais": [79, 225], "effort": [79, 208, 212], "stad": 79, "impair": [79, 86, 97, 110, 185, 186, 209, 210, 240], "rajout": 79, "cf": [79, 140, 246], "estimated": 79, "nonzero": 79, "annotat": 79, "xytext": 79, "arrowprop": 79, "arrowstyl": 79, "pr\u00e9conisent": 79, "precis": [79, 140, 163, 204, 239], "consomm": 80, "ji": 80, "random_adjacency_matrix": 80, "remplissag": 80, "e_j": 80, "random_symmetric_adjacency_matrix": 80, "rnd2": 80, "tqdm": [80, 86, 87, 90, 97, 133, 134, 135, 137, 155, 159, 168, 172, 173, 190], "total_nb1": 80, "nb1": 80, "emptyness": 80, "73it": 80, "0000000e": 80, "4408921e": 80, "total_null": 80, "nb_null": 80, "82it": 80, "90it": [80, 134], "connex_component": 80, "total_cnx": 80, "cnx": 80, "ny": [80, 214], "96it": 80, "connex_components_indic": 80, "grenouill": 81, "bond": 81, "barreau": 81, "treiz": 81, "saut": [81, 112, 239], "\u00e9paisseur": [81, 124, 233], "ven": [81, 198, 206], "144": 81, "e_": [81, 134], "geqsl": [81, 85, 140, 172, 192], "grenouille2": 81, "g1": [81, 248], "g2": [81, 225], "grenouille3": 81, "pr\u00e9d\u00e9cesseur": [81, 86], "levenshtein": 82, "tron\u00e7on": [82, 85], "distance_meme_longueur": 82, "abcef": 82, "abcde": 82, "mind": [82, 86], "bbb": [82, 216], "distance_alambique": 82, "verlan": 82, "abc": [82, 89, 122, 166, 223, 240], "ac": [82, 127, 153, 208], "distance_alambiquee_levenstein": 82, "ace": 82, "t\u00e2ton": [83, 233], "occas": [83, 208, 214], "na\u00eff": 83, "restraint": 83, "distance1": 83, "imfo": 83, "distance2": 83, "m1_e": 83, "cab": 83, "abcd": [83, 241], "bcdef": 83, "distance2_verbos": 83, "disent": 83, "pirat": 83, "distance3": 83, "pimfos": 83, "fastid": 83, "convien": 83, "test_dist_equal": 83, "assert": [83, 125, 126, 127, 142, 154, 156, 159, 164, 165, 181, 216, 220, 225, 239], "test_distance1": 83, "test_dist_diff1": 83, "_a": [83, 193], "a_": [83, 86], "test_distance2": 83, "magnif": 83, "test_dist_diff2": 83, "_ab": 83, "ab_": 83, "a_b": 83, "test_distance3": 83, "incroi": 83, "edit_dist": 83, "agraf": 83, "agra": 83, "test_edit_dist": 83, "r\u00e9muner": 83, "r\u00e9numer": 83, "voudr": [83, 113, 167, 208, 209, 225], "edit_distance2": 83, "cmp_char": 83, "test_special": 83, "test_edit_distance2": 83, "agraff": 83, "\u00e9leph": 83, "\u00e9lef": 83, "edit_distance3": 83, "ins_char": 83, "test_edit_distance3": 83, "adjacent": [84, 110, 193], "uuid": [84, 89], "plot_network": 84, "lang": [84, 89, 244], "digraph": [84, 89], "rankd": 84, "lr": [84, 101, 133, 134, 145], "d\u00e9comment": [84, 89], "hdot": [84, 89], "uid": [84, 89], "uuid4": [84, 89], "viz": [84, 89], "div": [84, 89], "svggraph": [84, 89], "getelementbyid": [84, 89], "innerhtml": [84, 89], "Quelle": [84, 112, 127, 155, 166, 191, 203], "f_": 84, "order_same_weight": 84, "mat2": [84, 93, 101, 207, 225], "order_any_weight": 84, "durat": [84, 152], "duract": 84, "new_end": 84, "subarray": 85, "l_1": 85, "l_2": 85, "l_n": 85, "l_k": 85, "max_": [85, 179, 204], "somme_partiel": 85, "plus_grande_sous_l": 85, "im": [85, 134, 233], "jm": 85, "cout": [85, 110, 122], "l_j": 85, "plus_grande_sous_liste_n2": 85, "l_a": 85, "l_i": 85, "k_1": 85, "k_2": 85, "r\u00e9union": 85, "jonction": 85, "plus_grande_sous_liste_nlnn2_r": 85, "ia": 85, "ja": 85, "ib": [85, 115, 116, 225], "jb": [85, 101, 153], "plus_grande_sous_liste_nlnn2": 85, "160": [85, 189], "896": 85, "256": [85, 92, 110, 153, 208, 214, 237], "512": [85, 101], "4608": 85, "ln_2": [85, 103, 177, 202, 218], "4f": 85, "cumul2": 85, "quatriem": [85, 201], "arrier": [85, 170, 225], "l_": 85, "sommemax": 85, "red\u00e9marr": 85, "plus_grande_sous_liste_n": 85, "el": [85, 96, 137, 172, 207, 225, 240], "li100": 85, "565": [85, 115, 141], "134": 85, "binomial": 86, "adja": 86, "networkx": [86, 97], "from_numpy_array": 86, "with_label": 86, "distrib": [86, 119, 120], "successeur": [86, 110], "pr\u00e9decesseur": 86, "partent": [86, 97], "arrivent": [86, 136], "sup\u00e9rieu": 86, "profond": [86, 225], "2_": 86, "jk": 86, "pq": [86, 185, 186], "3_": 86, "adjan": 86, "coloriag": [86, 99, 132, 181], "c_j": 86, "maj": 86, "queu": [86, 246], "\u00e9paiss": 86, "lois": [86, 119, 120, 183, 184], "admettent": 86, "distribution_to_degree_list": 86, "deg": [86, 153], "nh": 86, "random_graph": 86, "distribution_degre": 86, "n_it": [86, 88], "set_descript": [86, 94], "dj": [86, 164], "incomplet": 86, "ndegre": 86, "ncurrent": 86, "376": 86, "28it": 86, "ipykernel_17111": 86, "4037000715": 86, "userwarning": [86, 87, 136, 145, 231], "382": 86, "61it": [86, 87], "bloqu": [86, 207, 246], "a_t": [86, 138], "voyon": [86, 115, 116, 133, 134, 137, 140, 142, 143, 144, 149, 153, 209], "random_graph_remov": 86, "last_added": 86, "n_removed": 86, "dh": 86, "341": [86, 229], "30it": [86, 134], "distribution_degree_realis": 86, "sumd": 86, "rejet": 86, "d3a98a30": 87, "893f": 87, "47f7": 87, "96c5": 87, "2f4bcaaa0d71": 87, "total_cas_confirm": 87, "total_deces_hopital": 87, "total_deces_ehpad": 87, "total_cas_confirmes_ehpad": 87, "total_cas_possibles_ehpad": 87, "patients_reanim": 87, "patients_hospitalis": 87, "total_patients_guer": 87, "nouveaux_patients_hospitalis": 87, "nouveaux_patients_reanim": 87, "802": 87, "118431": 87, "28826": 87, "1233": [87, 141], "19272": 87, "653050": 87, "756": 87, "803": 87, "118494": 87, "28837": 87, "1213": [87, 97], "18901": 87, "653734": 87, "804": 87, "118508": 87, "28844": 87, "1214": 87, "18935": 87, "653827": 87, "805": 87, "118633": 87, "28845": 87, "1199": 87, "18742": 87, "654775": 87, "900": [87, 118, 138], "806": [87, 121], "118723": 87, "1173": 87, "18290": 87, "655984": 87, "set_yscal": [87, 140, 143], "courag": [87, 170, 208], "rigour": [87, 147, 150, 183, 184, 190], "death": 87, "country": 87, "githubusercontent": [87, 101], "cssegisanddat": 87, "csse_covid_19_dat": 87, "csse_covid_19_time_ser": 87, "time_series_covid19_": 87, "s_global": 87, "eur": 87, "provinc": 87, "tf": 87, "extract_whole_dat": 87, "confirmed": 87, "recovered": 87, "popul": 87, "67e6": 87, "conc": [87, 101, 244], "infected": 87, "saf": 87, "ipykernel_20449": 87, "102400080": 87, "parsed": 87, "individually": 87, "falling": 87, "ensur": 87, "parsing": 87, "consistent": 87, "161407": 87, "38591184": 87, "38429777": 87, "28408816": 87, "161450": 87, "38599330": 87, "38437880": 87, "28400670": 87, "161474": 87, "38606393": 87, "38444919": 87, "28393607": 87, "161501": 87, "38612201": 87, "38450700": 87, "28387799": 87, "161512": 87, "38618509": 87, "38456997": 87, "28381491": 87, "r\u00e9par": 87, "improvis": 87, "correct_ser": 87, "covid_modified": 87, "09it": [87, 134], "342253": 87, "liss": 87, "recoup": [87, 97, 248], "compartimental": 87, "\u00e9pid\u00e9miolog": [87, 128], "contamin": [87, 121, 138], "malad": [87, 208], "guer": [87, 121], "d\u00e9ced": [87, 121], "changent": [87, 190, 233, 237, 240], "dS": [87, 88], "nu": [87, 88, 121, 169], "dr": [87, 88, 192], "transmiss": 87, "plot_simul": 87, "day0": 87, "true_dat": 87, "infect": 87, "coch": [87, 239], "visibil": 87, "tdf": 87, "sob": 87, "iob": 87, "rob": 87, "dob": 87, "s_0": 87, "i_0": 87, "r_0": 87, "s0": 87, "9990": 87, "i0": [87, 109], "r0": 87, "\u00e9voluent": [87, 163, 233], "masqu": [87, 228, 233, 243], "confin": 87, "reconfin": 87, "temp\u00e9ratur": 87, "lisse_mar": 87, "28305367": 87, "1697884": 87, "1640875027069664": 87, "626756310367156": 87, "9857629613918629": 87, "533445387958945": 87, "transitoir": 87, "simulation_cumule": 87, "minimisent": [87, 114], "i_rang": 87, "beta_rang": 87, "mu_rang": 87, "nu_rang": 87, "error_fct": 87, "err_min": 87, "di0": 87, "j_t": 87, "cum": [87, 162], "gras": 87, "240": [87, 101, 112], "sim_opt": 87, "3f": [87, 113], "3g": 87, "3772": 87, "51it": [87, 159], "188": [87, 101, 112], "39it": 87, "mort": [87, 207], "error_norm": 87, "m3": [87, 220], "45it": [87, 97], "aticl": 87, "modified": [87, 170], "contagion": 87, "italy": 87, "estimating": 87, "simulating": 87, "countr": 87, "s_": [87, 191, 192], "beta_t": 87, "incub": 87, "d_": [87, 187], "epidemic": 87, "identifying": 87, "unreported": 87, "inferent": 87, "modelling": 87, "forecasting": 87, "outbreak": 87, "seird": 87, "covidtrack": 87, "pyepidemic": 87, "pandemic": 87, "control": [87, 233], "etrang": [88, 165, 179], "inacessibl": 88, "pann": 88, "ovh": 88, "inaccessibl": [88, 93], "909090909090908": 88, "8909090909090909": 88, "90909091": 88, "89090909": 88, "82883546": 88, "79298272": 88, "18909091": 88, "simulation_bruite": 88, "90629495": 88, "90818313": 88, "0769856": 88, "10853633": 88, "84322669": 88, "77113049": 88, "17022418": 88, "21541865": 88, "sim_bruit": 88, "estimation_coefficient": 88, "645167": 88, "153483": 88, "113224": 88, "prouv": [88, 191], "distance_sim": 88, "1379327480825296": 88, "b0": 88, "m0": 88, "n0": [88, 175, 204], "distance0": 88, "mu0": 88, "nu0": 88, "175492030437819": 88, "21093122422461147": 88, "11141742761811038": 88, "12240477": 88, "1995322": 88, "09668045": 88, "06764482535407212": 88, "0880922396685696": 88, "poem": [89, 169], "arthur": [89, 169], "rimbaud": [89, 169], "voyel": [89, 103, 107, 112, 169], "latent": [89, 169], "corset": [89, 169], "velu": [89, 169], "mouch": [89, 169], "\u00e9clat": [89, 101, 169], "bombillent": [89, 169], "puanteur": [89, 169], "cruel": [89, 169, 208], "golf": [89, 169], "ombre": [89, 169], "candeur": [89, 169], "vapeur": [89, 169], "glaci": [89, 169], "fier": [89, 169], "rois": [89, 169], "frisson": [89, 169], "ombel": [89, 169], "pourpr": [89, 169], "sang": [89, 169, 208], "crach": [89, 169], "rir": [89, 169], "levr": [89, 169], "bel": [89, 169, 233], "coler": [89, 169, 193], "ivress": [89, 169], "p\u00e9nitent": [89, 169], "cycl": [89, 169, 178, 216], "vibr": [89, 169], "divin": [89, 169], "virid": [89, 169], "paix": [89, 169, 193, 208], "p\u00e2t": [89, 169], "sem": [89, 169], "rid": [89, 137, 169], "alchim": [89, 169], "imprim": [89, 169, 246], "front": [89, 169, 246], "studieux": [89, 169], "supr\u00eam": [89, 169, 208], "clairon": [89, 169], "strideur": [89, 169], "\u00e9trang": [89, 139, 169, 208, 225], "silenc": [89, 169, 187, 188], "ange": [89, 169], "omeg": [89, 169], "rayon": [89, 119, 168, 169, 208], "violet": [89, 169], "yeux": [89, 169], "extract_word": [89, 169], "spl": 89, "perf_count": [89, 93, 122, 133, 147, 152, 153, 161, 162, 182, 190, 198, 216, 225], "plus_grand_suffix_commun": 89, "longueur_max": 89, "meilleure_pair": 89, "meilleur_suffix": 89, "pareil": [89, 95, 143, 144, 150, 240], "suffix_map": 89, "\u00e9": [89, 166, 214], "ingr\u00e9dient": 89, "plus_grand_suffix_commun_dictionnair": 89, "debut": [89, 176, 216, 240, 248], "5386918000003789": 89, "17898409999997966": 89, "n_x": 89, "sum_x": 89, "build_tr": [89, 216], "zabc": 89, "\u00ea": 89, "\u00e2": 89, "illisibl": [89, 174, 231, 239, 241, 244], "partiqu": 89, "build_dot": 89, "predecessor": 89, "root_nam": 89, "set2374575491648": 89, "n2374575489600": 89, "e2374575503808": 89, "t2374575329600": 89, "a2374575329984": 89, "l2374575327296": 89, "fin2374494191824": 89, "i2374575817216": 89, "n2374575817280": 89, "e2374575817344": 89, "p2374575817408": 89, "a2374575326656": 89, "t2374575325312": 89, "a2374575330240": 89, "l2374575340416": 89, "c2374575339968": 89, "e2374575595200": 89, "plot_dot": 89, "plus_grand_suffix_commun_dictionnaire_tr": 89, "whole_tr": 89, "23091779999958817": 89, "05081569999947533": 89, "topk_sortall": 90, "topk_idee1ou2": 90, "trich": 90, "d\u00e9brouill": [90, 207], "fairr": 90, "tris": 90, "interstic": 90, "topk_tri_select": 90, "kn": [90, 204], "topk_insert": 90, "topk_fus": 90, "topk": [90, 172], "topk_select_recurs": 90, "topk_select": 90, "pivot_index": 90, "measure_tim": [90, 172, 173], "repeat": [90, 125, 172, 173, 175], "t1": [90, 93, 133, 181, 190, 225], "0023090000031515956": 90, "06701939999766182": 90, "017117299998062663": 90, "0257670000064536": 90, "010535299996263348": 90, "05852940000477247": 90, "perm10000": 90, "006514400003652554": 90, "0134890000044834": 90, "019539000000804663": 90, "041308899999421556": 90, "014250300002458971": 90, "062273499999719206": 90, "perm1000": 90, "501": 90, "71it": [90, 134, 168], "000692": 90, "194126": 90, "003134": 90, "003230": 90, "013448": 90, "015127": 90, "000383": 90, "283472": 90, "001300": 90, "003163": 90, "022354": 90, "010969": 90, "000835": 90, "377026": 90, "001189": 90, "003169": 90, "022742": 90, "024926": 90, "000522": 90, "450699": 90, "001051": 90, "002952": 90, "045683": 90, "038119": 90, "000527": 90, "539852": 90, "001091": 90, "003602": 90, "038593": 90, "026605": 90, "affin": [90, 144], "permn": 90, "70it": 90, "000620": 90, "000124": 90, "000111": 90, "000137": [90, 173], "000411": 90, "000030": [90, 173], "002329": 90, "000275": 90, "000402": 90, "000326": 90, "001340": 90, "000328": 90, "021377": 90, "001635": 90, "005340": 90, "001277": 90, "005500": 90, "005612": 90, "178028": 90, "011507": 90, "034768": 90, "008894": 90, "022889": 90, "066547": 90, "755049": 90, "115708": 90, "361258": 90, "099447": 90, "233724": 90, "paraissent": [90, 135], "n\u00e9glige": [90, 118, 122, 204, 214, 216, 234], "redessin": 91, "distance_vill": 91, "distance_tour": 91, "540451130306862": 91, "dessine_tour": 91, "r\u00e9dig": [91, 225, 240], "ameliore_tour": 91, "transmis": 91, "dist_min": 91, "nb_perm": 91, "nb_it": 91, "extraordinair": [91, 144, 208], "ameliore_tour_renvers": 91, "p0": [91, 197], "spatial": [91, 119, 120, 125], "cdist": [91, 125], "build_permut": 91, "max_dist": 91, "arg_dist": 91, "extrapol": 92, "puissance2k": 92, "sum_k": 92, "a_k": 92, "prod_k": 92, "maxj": 93, "embarrass": 93, "produit_class": 93, "dim1": 93, "dim2": 93, "produit_eleg": 93, "k1": 93, "k2": [93, 204], "bigmat": 93, "259": 93, "sonne": 93, "mill": [93, 208], "sabord": 93, "matrice_dicodico": 93, "matrice_dicodico_lc": 93, "song": [93, 145], "produit_elegant_rapid": 93, "produit_elegant_rapide_transform": 93, "mat1": [93, 225], "t2": [93, 102, 133, 137, 168, 181, 190, 225], "dicodico": 93, "dico": [93, 98, 110, 127, 223, 234, 241], "008358499999303604": 93, "10761350000029779": 93, "2080854999985604": 93, "011978200000157813": 93, "28018710000105784": 93, "28202239999882295": 93, "06322960000034072": 93, "7310262999999395": 93, "21729559999948833": 93, "04302850000021863": 93, "25215659999958007": 93, "06354410000130883": 93, "24071189999813214": 93, "08784929999819724": 93, "23844240000107675": 93, "13118289999692934": 93, "2613874999988184": 93, "21261740000045393": 93, "2777879999994184": 93, "22135960000014165": 93, "2984610000021348": 93, "27173079999920446": 93, "28927499999917927": 93, "embl\u00e9mat": 94, "20256988": 94, "27603738": 94, "77763596": 94, "50108287": 94, "07482647": 94, "60880805": 94, "56075455": 94, "9637854": 94, "79735982": 94, "32773718": 94, "65017942": 94, "96827692": 94, "dy": [94, 95, 119, 120, 188], "090536785820115": 94, "plot_point": 94, "impatient": 94, "0it": 94, "720it": 94, "89it": 94, "optimisation_retourn": 94, "random_cit": 95, "39190158": 95, "70104769": 95, "865672": 95, "22913836": 95, "65596723": 95, "32503514": 95, "distance_boucl": 95, "8284271247461903": 95, "513": 95, "slowest": [95, 182], "took": [95, 182], "fastest": [95, 182], "intermediat": 95, "being": [95, 195, 196, 243], "cached": [95, 175], "253": [95, 116, 153], "faveur": 95, "best_cit": 95, "best_dist": 95, "p_cit": 95, "opt_cit": 95, "optimise_random": 95, "n_perm": 95, "pout": 95, "retournement1": 95, "d_av": 95, "og": 95, "siecl": 96, "tiret": 96, "330px": 96, "international_morse_cod": 96, "svg": [96, 175], "mn\u00e9motechn": 96, "d\u00e9codag": [96, 237], "r\u00e9duis": 96, "rit": [96, 241], "man": 96, "who": 96, "laugh": 96, "transcr": [96, 225], "eee": 96, "ooo": 96, "eel": 96, "oo": 96, "oooo": 96, "ooooo": 96, "word2mors": 96, "word": [96, 216], "lison": 96, "ooooooo": 96, "ambigu": [96, 101, 157, 225, 240], "deven": [96, 112, 122, 136, 240, 246], "rev_alph": 96, "reg_exp": 96, "hyperprob": 96, "souvien": [96, 207, 208], "dec_exp": 96, "suffir": [96, 160, 162], "decode_mors": 96, "een": 96, "eeee": 96, "eb": 96, "DEE": 96, "gn": 96, "decode_morse_longer_first": 96, "flemm": 96, "plu\u00f4t": 96, "dr\u00f4l": 96, "patron": [96, 208], "ee": 96, "decompose_mors": 96, "letter": 96, "new_opt": 96, "prefix": [96, 223, 240], "startswith": [96, 126, 223, 240], "xa": 96, "dk": [96, 112], "dnt": 96, "dta": 96, "dtet": 96, "na": [96, 118, 155, 157, 169], "naet": 96, "nek": 96, "nent": 96, "netet": 96, "nrt": 96, "tea": [96, 215], "teaet": 96, "teek": 96, "teent": 96, "teet": 96, "teetet": 96, "tert": 96, "tft": 96, "tik": 96, "tint": [96, 214], "tit": 96, "titet": 96, "TUA": 96, "tuet": 96, "xet": 96, "explos": 96, "d\u00e9duis": [96, 115, 189], "t\u00e9l\u00e9graph": 96, "initi": [97, 208], "trajet": 97, "parcourent": [97, 179], "d\u00e9marrent": 97, "posti": 97, "inspect": 97, "already": [97, 175], "downloaded": 97, "146": [97, 167, 170], "carrefour": 97, "873361200000005": 97, "3236609": 97, "8730454": 97, "3235788": 97, "compren": 97, "03562501840766763": 97, "8741849": 97, "3239352": 97, "0937624742737696": 97, "p\u00f4l": 97, "cart\u00e9sien": [97, 211, 212, 239], "porti": 97, "exp\u00e9rimental": 97, "premier": [97, 241], "id\u00e9al": [97, 123, 138], "interdit": [97, 209, 210, 228, 240], "rendent": [97, 197, 231], "verr": 97, "sept": [97, 240], "pont": 97, "konigsberg": 97, "r\u00e9pondu": [97, 118, 219], "repart": 97, "nx": 97, "add_edg": 97, "rejoign": 97, "nb_edg": 97, "parit": [97, 110, 209], "tien": [97, 208], "r\u00e9duisent": 97, "descendr": 97, "d\u00e9doubl": 97, "edges_from": 97, "total_possible_edg": 97, "fromi2": 97, "new_": 97, "new_d": 97, "535221": 97, "778": 97, "1138": 97, "21316": 97, "538415": 97, "1228": [97, 143], "2258": 97, "545218": 97, "1717": 97, "3748": 97, "557001": 97, "2118": [97, 153], "5500": 97, "574194": 97, "2442": [97, 170], "7470": 97, "602050": 97, "2726": 97, "9624": 97, "642132": 97, "2900": 97, "11810": 97, "3258634178614415": 97, "admissibl": 97, "dedan": [97, 168, 217], "d\u00e9fil": [97, 168], "build_possibl": 97, "i1": [97, 110, 164, 225, 227], "i2": [97, 110, 164, 225, 227], "009382623381497467": 97, "5290": 97, "248170388440608": 97, "initc": 97, "undesired": 97, "912505": 97, "400": [97, 118, 145, 167, 187, 188, 204], "928070": 97, "938916": 97, "1627": [97, 121], "2244": 97, "957763": 97, "1676": 97, "3644": 97, "976823": 97, "1341": 97, "4989": 97, "020697": 97, "833": 97, "5977": 97, "042415": 97, "427": 97, "6489": 97, "062800": 97, "187": [97, 169], "6716": 97, "088837": 97, "6815": 97, "112715": 97, "6856": 97, "138552": 97, "6874": 97, "168428": 97, "197202": 97, "relient": [97, 187, 188], "refair": [97, 194], "122002169199727": 97, "661698849016764": 97, "Mon": 97, "combl": 97, "coinc": [97, 246], "risque": 97, "pourait": 97, "probl\u00e8mat": 97, "making": 97, "directed": 97, "334": [97, 189], "1511": 97, "eulerian_path": 97, "hierholz": 97, "odd": 97, "1327": 97, "10585": 97, "1383": 97, "1423": 97, "133": [97, 137], "1470": 97, "168": [97, 153, 190], "1523": 97, "1589": 97, "1655": 97, "219": [97, 101, 112, 189], "1722": 97, "232": [97, 112, 172, 179], "1796": 97, "1863": 97, "207": [97, 112, 121, 153], "1919": 97, "164": [97, 101, 153, 190], "2003": [97, 246], "2027": 97, "2038": 97, "2039": 97, "2040": 97, "0016168196457467584": 97, "002915457386378182": 97, "004107201738406607": 97, "138": 97, "005201454147672404": 97, "010775423696863674": 97, "street": 97, "016229655482986917": 97, "08264740074165475": 97, "026299568900906643": 97, "jump": 97, "08193964999861593": 97, "provient": [97, 233, 239, 241, 243], "d\u00e9patouill": 97, "entrant": 97, "ramen": [97, 136], "c\u00e9sar": [98, 201, 202], "babbag": 98, "cons\u00e9cut": [98, 122, 138, 159, 205, 248], "apparaiss": [98, 208], "cryptanalys": 98, "diviseur": [98, 239], "d\u00e9crypt": [98, 185, 186], "code_vigener": [98, 201, 202], "message_cod": [98, 201, 202], "ord": [98, 105, 106, 166, 201, 202, 239], "chr": [98, 105, 166, 201, 202, 215, 216, 239], "decodevigener": 98, "codevigener": 98, "pgcd": 98, "decodevigenerelongueurcl": 98, "DES": [98, 208], "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd": 98, "egv": 98, "resultat": [98, 110, 233], "etre": [98, 208], "decodevigenerecl": 98, "d\u00e9cod": [98, 126, 128, 202], "2l": 98, "3l": 98, "cassevigener": 98, "condamn": 98, "gutenberg": [98, 213], "hugo_dernier_jour_condamn": 98, "218451": 98, "ind\u00e9sir": [98, 240, 248], "7000": 98, "cle_cod": 98, "td_note_2006": 99, "td_note_2007": 99, "td_note_2008": 99, "td_note_2009": 99, "td_note_2010": 99, "td_note_2010_rattrap": 99, "td_note_2011": 99, "td_note_2012": 99, "td_note_2013": 99, "td_note_2013_rattrap": 99, "td_note_2014": 99, "td_note_2015": 99, "td_note_2016": 99, "td_note_2017": 99, "broken": 99, "td_note_2018": 99, "td_note_2019": 99, "td_note_2020": 99, "td_note_2021": 99, "td_note_2022": 99, "td_note_2022_rattrapag": 99, "td_note_2022_rattrapage2": 99, "td_note_2023": 99, "2024_rattrapag": 99, "1a": [99, 193, 194], "novembr": 99, "rattrapag": 99, "f\u00e9vri": [99, 100, 101], "octobr": [99, 221, 224], "2021": 99, "septembr": [99, 208], "lund": [100, 101, 208, 236], "envoi": [100, 101, 123, 170, 176, 197, 225, 228, 233, 239, 241, 246], "joint": [100, 101, 241], "m\u00e9decin": [100, 101], "_moyen": [100, 101], "consult": [100, 101, 233], "moustach": [100, 101], "365": [100, 101], "_semain": [100, 101], "gend": [101, 178], "idc": 101, "4ba0b473": 101, "f8ca": 101, "4466": 101, "a65b": 101, "40e9b8ba5029": 101, "cendrillon": 101, "f44b004b": 101, "b01e": 101, "4835": 101, "b86d": 101, "1a42846c6d93": 101, "304895f0": 101, "f686": 101, "4b0e": 101, "8854": 101, "a705bb5a6982": 101, "balthazar": 101, "3f0d31d2": 101, "0ef4": 101, "4e7": 101, "b876": 101, "07d10225cc8c": 101, "f29273f4": 101, "a76c": 101, "4158": 101, "b5f5": 101, "b3e5a080a0c7": 101, "rendezvous": 101, "idr": 101, "068274": 101, "b7db0ac9": 101, "86a1": 101, "46f9": 101, "98ac": 101, "f1f8eb54072d": 101, "a65f721a": 101, "de11": 101, "4a01": 101, "be71": 101, "b26e2da3ac00": 101, "644b1236": 101, "b9e": 101, "4ef5": 101, "8ca7": 101, "d1adadb547c8": 101, "aff6ac9": 101, "5dd0": 101, "434e": 101, "9888": 101, "f724f6d40969": 101, "9ca87507": 101, "aa95": 101, "49a9": 101, "88b3": 101, "86ec9fbc44d6": 101, "2537": 101, "003b0195": 101, "2acb": 101, "4f46": 101, "b7fa": 101, "28cf266a8f60": 101, "009e689c": 101, "51a1": 101, "4cef": 101, "99ca": 101, "a4ba364eba8d": 101, "00a213c2": 101, "1174": 101, "4359": 101, "8a67": 101, "fe710ec1b439": 101, "00e42818": 101, "aad": 101, "4758": 101, "a5f6": 101, "c78a6f235ea5": 101, "0153b785": 101, "9acd": 101, "4d28": 101, "aad1": 101, "62f8bf2faea3": 101, "visibl": [101, 140, 147, 214, 233, 241], "statisticatien": 101, "jointplot": [101, 148, 150, 152], "scatter_kw": [101, 139], "_oldcor": [101, 148, 150], "1119": [101, 148, 150], "use_inf_as_n": [101, 148, 150], "option_context": [101, 148, 150], "gx": [101, 125], "flagr": [101, 234], "boxplot": [101, 148], "diagramm": [101, 119, 120, 136], "violon": [101, 148], "violinplot": [101, 148], "quart": [101, 168], "linearregress": [101, 137, 142, 152, 153], "nbsp": [101, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 189], "linearregressionifittedlinearregress": 101, "coef_": [101, 136, 137, 141], "52440734": 101, "36373925": 101, "intercept_": [101, 137, 141, 152], "05057671902867": 101, "ol": [101, 153], "squared": [101, 141, 153], "579": 101, "adj": [101, 110, 153], "686": [101, 191], "thu": 101, "jan": 101, "25e": 101, "likelihood": [101, 141, 153], "3149": 101, "aic": [101, 141, 153], "6306": [101, 153], "residual": [101, 141, 153], "bic": [101, 141, 153], "6320": 101, "nonrobust": 101, "025": [101, 137, 141, 153], "intercept": [101, 228, 229, 233, 239, 240], "0506": [101, 153], "432": 101, "795": 101, "306": [101, 153], "5244": 101, "015": [101, 112, 137, 174], "302": [101, 174], "495": [101, 117, 118, 246], "554": 101, "3637": 101, "358": 101, "194": [101, 112], "066": 101, "662": [101, 133], "omnibus": [101, 153], "durbin": [101, 153], "watson": [101, 153], "jarqu": [101, 153], "ber": [101, 153], "506": 101, "skew": [101, 153], "618": [101, 115], "77e": 101, "kurtos": [101, 153], "608": [101, 121], "correctly": [101, 153], "specified": [101, 153, 233], "join2": 101, "cst": 101, "patsy": [0, 101], "dmatric": 101, "return_typ": 101, "fit_intercept": [101, 137], "05057672": 101, "date2": 101, "dimanch": [101, 207, 208], "j365": 101, "delay1": 101, "002732": 101, "033333": 101, "019608": 101, "rend2": 101, "6d65b2b5": 101, "f34d": 101, "4440": 101, "8442": 101, "679175554db4": 101, "065474ed": 101, "6ba3": 101, "4ee1": 101, "aa83": 101, "b89e97d5a2a": 101, "38a02a6": 101, "8c04": 101, "4630": 101, "aaa6": 101, "2077077a9f87": 101, "f4cf0df4": 101, "0b6a": 101, "4b0f": 101, "93c7": 101, "d12499026fab": 101, "c1b3381b": 101, "9663": 101, "429d": 101, "a8fb": 101, "3b24c20a125b": 101, "030852": 101, "010694": 101, "023011": 101, "032413": 101, "614708": 101, "008700": 101, "026779": 101, "000064": [101, 134], "198835": 101, "616038": 101, "039766": 101, "049796": 101, "025400": 101, "054954": 101, "448584": 101, "0x7fb3214280d0": 101, "pairplot": 101, "plot_kw": 101, "axisgrid": 101, "pairgrid": 101, "0x7fb3029bf820": 101, "feat": 101, "x_var": 101, "y_var": 101, "stripplot": 101, "palet": 101, "reds_r": 101, "gray": [101, 233], "0x7fb2fad7ac20": 101, "08109837e": 101, "41245429e": 101, "42852787e": 101, "60797483e": 101, "12155016e": 101, "612": 101, "8257": [101, 153], "653e": 101, "2531": 101, "656e": 101, "4146": 101, "545": 101, "345": [101, 176, 240], "484": 101, "5081": 101, "010": [101, 113, 126, 176], "918": 101, "488": [101, 133], "528": [101, 174], "4125": 101, "902": 101, "923": 101, "0005": [101, 178], "562": 101, "574": 101, "002": [101, 174], "0797": 101, "842": [101, 175], "321": 101, "575": 101, "585": 101, "1216": 101, "061": 101, "623": 101, "242": [101, 115], "147": [101, 153, 167], "558": 101, "17e": 101, "20e": 101, "might": [101, 153], "indicat": [101, 153], "arestrong": 101, "multicollinearity": [101, 153], "numerical": 101, "pourrion": [101, 134, 214], "dangeral": 101, "agreg": [101, 142, 239], "lr_moy": 101, "pred_moy": 101, "453648": 101, "551278": 101, "809575": 101, "711946": 101, "187538": 101, "err1": 101, "874448844571756": 101, "lrc": 101, "41460950333407": 101, "predc": 101, "855082": 101, "644421": 101, "334615": 101, "566717": 101, "048055": 101, "945104": 101, "345309": 101, "277461": 101, "298313": 101, "err2": 101, "697836056479865": 101, "6423a722": 101, "4769": 101, "4a7c": 101, "8d1d": 101, "266538c2a07": 101, "12617": 101, "temp2": 101, "54544": 101, "superposit": 101, "erreur2": 101, "0x7fb2fa805210": 101, "contrairment": 101, "modal": [101, 113], "dumm": 101, "get_dumm": 101, "ve": 101, "917": [101, 174], "2812": [101, 153], "6293": 101, "261e": 101, "2526": 101, "267e": 101, "0371": 101, "272": 101, "217": [101, 112, 144, 189], "342": [101, 246], "504": 101, "570": [101, 112, 116], "0840": 101, "208": [101, 153, 216], "405": [101, 153, 162], "323": 101, "3003": 101, "392": [101, 174], "123": [101, 153], "723": [101, 151], "1607": 101, "735": [101, 153], "268": [101, 150], "1748": [101, 153], "212": [101, 112, 189, 190], "1849": 101, "210": [101, 112, 121, 145, 153], "879": 101, "597": 101, "0978": 101, "203": [101, 153], "684": 101, "5005": 101, "104": [101, 193, 240], "318": 101, "510": 101, "0722": 101, "115": [101, 117, 139, 240], "298": [101, 153, 229], "846": [101, 189], "0003": [101, 178], "7385": 101, "236": [101, 112, 153], "275": 101, "354": [101, 137], "849": 101, "034": 101, "437": 101, "672": 101, "40e": 101, "666": [101, 104], "feat2": 101, "00892234e": 101, "07229120e": 101, "97614199e": 101, "07004497e": 101, "00395644e": 101, "07951294272968": 101, "664596": 101, "668165": 101, "934710": 101, "225084": 101, "agg2": 101, "103904": 101, "812446": 101, "581598": 101, "890947": 101, "158351": 101, "err2d": 101, "626505427547838": 101, "cro\u00eetr": [101, 223], "category_encoder": 101, "polynomialencod": 101, "encod": [101, 166, 237, 240, 241], "col": [101, 117, 118, 133, 134, 225], "base_contrast_encod": 101, "anymor": 101, "370": 101, "weekday_0": 101, "weekday_1": 101, "weekday_2": 101, "weekday_3": 101, "weekday_4": 101, "weekday_5": 101, "566947": 101, "545545": 101, "408248": 101, "241747": 101, "109109": 101, "032898": 101, "377964": 101, "564076": 101, "436436": 101, "197386": 101, "188982": 101, "327327": 101, "080582": 101, "493464": 101, "112532": 101, "195373": 101, "047478": 101, "677116": 101, "049724": 101, "630728": 101, "078804": 101, "feat3": 101, "_label": 101, "price_label": 101, "7ffb8a8b": 101, "a829": 101, "41f1": 101, "9572": 101, "2985ee9ba05": 101, "034483": 101, "47e415f0": 101, "f4e9": 101, "40c5": 101, "a59d": 101, "adc4c0621c8a": 101, "442": 101, "5611": 101, "6298": 101, "264e": 101, "9859": 101, "664": 101, "576": 101, "288": [101, 240], "0767": 101, "344": 101, "303": 101, "548": 101, "8060": 101, "237": [101, 112], "420": [101, 133, 229], "9696": 101, "008": [101, 174, 175], "209": [101, 112], "954": 101, "249": [101, 153], "245": [101, 153], "035": 101, "459": [101, 112], "156": [101, 116, 139, 150, 162, 204], "660": [101, 189], "98e": 101, "47e": 101, "mul2014": 102, "9899924966004454": [102, 207, 208], "ecir": 102, "ex": [102, 117, 118, 135, 201], "kayak": [102, 103], "kakak": 102, "aill": 102, "contient_": 102, "2i": [102, 172, 239], "12093467645909634": 102, "est_tri": [102, 168], "est_trie_nocopy": 102, "1000000000": [102, 228], "pas_de_voyel": 103, "aeiouy": [103, 107, 112], "bonjour": 103, "revoir": [103, 233], "bnjr": 103, "rvr": 103, "mat_dict": 103, "9289682539682538": 103, "581": 103, "4676254832484": 103, "19981": 103, "39980": 103, "40000": [103, 137], "59978": 103, "60000": 103, "79979": 103, "80000": 103, "99978": 103, "119977": 103, "120000": [103, 133], "70000": 103, "139977": 103, "140000": [103, 112], "159978": 103, "160000": [103, 112, 133], "90000": 103, "179974": 103, "180000": [103, 112], "abcdef": 103, "1er": 103, "3em": 103, "afbecd": 103, "kkaay": 103, "strang": 103, "deviennent": [103, 134, 207, 231], "dictionnaire_depart": 103, "dictionnaire_retourn": 103, "it\u00e9reur": 103, "dict_item": [103, 179, 240], "input": [103, 104, 106, 107, 112, 114, 122, 142, 228, 229, 239], "68beadeaff45": 103, "0x0000000006f305e8": 103, "86215c660090": 103, "subscript": 103, "7191411125634257": 103, "ii": [103, 175, 220], "3177321667311": 103, "2036": 103, "4083": 103, "4096": 103, "8178": 103, "8192": 103, "16369": 103, "16384": [103, 240], "32752": 103, "32768": 103, "65519": 103, "65536": 103, "131054": 103, "131072": 103, "262125": 103, "262144": 103, "524268": 103, "524288": 103, "nameerror": [104, 107, 192, 225, 228, 239], "9f18cbb91429": 104, "ma_fonct": 104, "dehor": [104, 139, 140, 181, 201, 217, 225], "expliciti": 104, "ext": [104, 248], "495000": 104, "42400f095e8c": 104, "unsupported": [104, 225], "655479e1d45c": 104, "assignment": [104, 107, 240], "immut": [104, 216, 217, 238], "ma_list": 104, "d3addcc3bdbd": 104, "indexerror": [104, 106, 107, 225, 228, 239], "1eb96223c6dd": 104, "due": 104, "5607f3ee5543": 104, "\u00e9toil": [104, 246], "26184474654812057": 104, "star": 104, "29749469599416334": 104, "305837286201697": 104, "make_squar": 105, "alic": 105, "bob": 105, "Ma": [105, 207], "myster": 105, "u_": [105, 225], "conjectur": [105, 195, 196], "syracus": 105, "6893f4ac9402": 106, "58b7566d9294": 106, "d\u00e9vient": 106, "2f84bd962211": 106, "elu": 106, "somme_caracter": 106, "225cea37f121": 106, "implicitly": 106, "un_sur_d": 106, "pto": 106, "plant": [107, 228], "systemt": 107, "ced82ea8013": 107, "b85136f11268": 107, "maj_voy": 107, "ambig\u00fc": [107, 159], "produis": [107, 112, 239], "6b8ba89606bb": 107, "unhash": [107, 240], "accolad": [107, 240], "pyythoon": 107, "double_voy": 107, "populating": [108, 109, 112], "interact": [108, 109, 112], "namespac": [108, 109, 112], "construit_m": [108, 109, 113], "pointij": [108, 109], "th": [108, 109, 115, 116, 143, 167, 170, 178], "phas": [108, 109, 111, 241], "tinc": [108, 109], "dessin_m": [108, 109], "_subplot": [108, 109], "axessubplot": [108, 109], "0x10128a58": 108, "0x9491390": 108, "0x87cef28": 109, "voisins_a_valeurs_null": 109, "tous_voisins_a_valeurs_null": 109, "liste_point": 109, "fonction_coloriag": 109, "j0": [109, 173], "\u00e9tag": [109, 126], "acolori": 109, "doublon": [109, 191], "surface_colorie": 109, "fonction_coloriage_1000": 109, "0x14675b00": 109, "3258": 109, "0x1bc6a630": 109, "q1": [110, 216], "q2": [110, 216], "ajoute_point": 110, "q3": 110, "q4": 110, "successeurs_dico": 110, "q5": 110, "suites_chemin": 110, "q6": 110, "chemins2": 110, "q7": 110, "q8": 110, "adjacence8": 110, "che": 110, "garde_3_el": 110, "word2dict": 110, "pyt": 110, "pyth": 110, "pytho": 110, "two_words2dict": 110, "mot1": 110, "mot2": 110, "piton": 110, "pito": 110, "pit": 110, "add_edge_hv": 110, "edge1": 110, "j1": [110, 164, 225], "edge2": 110, "j2": [110, 164, 225], "2pq": 110, "ajoute_diagonal": 110, "effac": [110, 239, 241, 246], "loop_on_edg": 110, "misejour": 110, "plus_court_chemin": 110, "q9": 110, "trie_parit": 110, "carreau": 111, "rx": 112, "0404": 112, "0612080000000002": 112, "mensuel": [112, 209], "capital": 112, "rembours": 112, "mensual": 112, "decompose_mensualit": 112, "029": 112, "6769646931234": 112, "429": [112, 176], "32303530687665": 112, "emprunteur": 112, "int\u00earet": 112, "km": [112, 119, 120], "r\u00e9sulat": 112, "mensualit": 112, "666666666666668": 112, "63104825975415": 112, "consacr": [112, 246], "12y": 112, "somme_maximal": 112, "183000": 112, "somme_maximale_step": 112, "150000": 112, "186": [112, 190], "170000": 112, "190000": 112, "254": [112, 175], "139000": 112, "141000": 112, "142000": 112, "174": [112, 189], "143000": 112, "144000": 112, "145000": 112, "146000": 112, "147000": 112, "182": [112, 169, 190], "148000": 112, "183": [112, 144, 153], "149000": 112, "185": 112, "151000": 112, "152000": 112, "153000": 112, "154000": 112, "155000": 112, "156000": 112, "196": [112, 153, 190, 192, 229], "157000": 112, "158000": 112, "159000": 112, "201": [112, 153], "161000": 112, "162000": 112, "206": 112, "163000": 112, "164000": 112, "165000": 112, "166000": 112, "167000": 112, "214": [112, 189], "168000": 112, "215": 112, "169000": 112, "171000": 112, "172000": 112, "173000": 112, "174000": 112, "226": 112, "175000": 112, "176000": 112, "177000": 112, "231": 112, "178000": 112, "179000": 112, "181000": 112, "238": 112, "182000": 112, "somme_maximale_mois_step": 112, "l0": [112, 225], "175312": 112, "228": [112, 133, 153], "312": 112, "175625": 112, "175937": 112, "176250": 112, "176562": 112, "176875": 112, "177187": 112, "177500": 112, "177812": 112, "178125": 112, "178437": 112, "178750": 112, "179062": 112, "179375": 112, "235": [112, 115, 141], "179687": 112, "180312": 112, "180625": 112, "180937": 112, "181250": 112, "181562": 112, "181875": 112, "182187": 112, "parisien": 112, "sl": [112, 217], "apprtement": 112, "\u00e9conomis": 112, "econom": 112, "eco": 112, "nbm": 112, "25862": 112, "65218705509": 112, "carri": 112, "professionnel": 112, "metr": [112, 192], "parisen": 112, "salair": [112, 208], "exam2016_valu": 112, "8000": 112, "offrir": 112, "surface_max": 112, "faill": [112, 240, 241], "a40a30": 112, "2600": 112, "inflat": [112, 209], "egg": [112, 178], "somme_maximale_dicho": 112, "k_max": 112, "182199": 112, "99817640134": 112, "carnet": 112, "importun": 112, "impromptus": 112, "conson": 112, "adel": 112, "gerard": 112, "transforme_numero": 112, "prenom": [112, 217, 234, 239, 244], "numero": [112, 233], "0664342267": 112, "0646342267": 112, "0660342467": 112, "oui": [112, 118, 198, 225, 239], "transforme_numero_enver": 112, "affront": 112, "9b3e94b6565": 112, "unorder": 112, "comparison": [112, 136, 138], "generate_xy": 113, "996890181837922": 113, "8750295096923186": 113, "264526460045277": 113, "324063943726332": 113, "718648422500299": 113, "052469543647318": 113, "442689562115705": 113, "861870829036456": 113, "13558433730903707": 113, "5754835901808546": 113, "59230695209076": 113, "6209924216651825": 113, "610357428256408": 113, "3202733390571373": 113, "678403330137792": 113, "96766236219644": 113, "427259745518597": 113, "385862058140737": 113, "273956381823456": 113, "938275166261537": 113, "calcule_exyxyx2": 113, "sx": 113, "sxy": 113, "sx2": 113, "523441805914873": 113, "850511796328412": 113, "88928454527569": 113, "98854258182378": 113, "calcule_ab": 113, "5446995618974346": 113, "859128128176218": 113, "generate_caty": 113, "cat": [113, 134, 142], "132157444058703": 113, "088324149707968": 113, "16315983779393228": 113, "9717657424738734": 113, "843197432779423": 113, "7204386278807904": 113, "89226869979884": 113, "16605748011543708": 113, "02903894820027486": 113, "5787816483863786": 113, "num\u00e9ros": [113, 193, 241], "numero_cat": 113, "ic": 113, "extra": [113, 240], "convert_numpy": 113, "mc": 113, "15485572": 113, "37882494": 113, "37124634": 113, "77476221": 113, "03305199": 113, "92499253": 113, "14818418": 113, "09988478": 113, "yp": [113, 190], "multinomial": [113, 132], "0084452843428675": 113, "155449750270483": 113, "1132607428792447": 113, "897729973062269": 113, "7637316114791164": 113, "566787193134299": 113, "848567708215508": 113, "722503065860707": 113, "8043492141543047": 113, "675781652825997": 113, "histogram_cat": 113, "moyenne_cat": 113, "69914235934335": 113, "4591978296957873": 113, "080382539688736": 113, "induis": 113, "z_i": [113, 114, 134], "obs2": [113, 167], "7763568394002505e": 113, "bigm": 113, "00844528": 113, "08038254": 113, "07193726": 113, "15544975": 113, "45919783": 113, "69625192": 113, "11326074": 113, "65406291": 113, "89772997": 113, "81734743": 113, "76373161": 113, "69546622": 113, "cov": [113, 142, 183, 184], "62221004e": 113, "56972711e": 113, "24829301e": 113, "53176124e": 113, "77901369e": 113, "00966261e": 113, "92890933e": 113, "54535166e": 113, "40725030e": 113, "24510807e": 113, "66666667e": 113, "77777778e": 113, "88888889e": 113, "applymap": 113, "697": 113, "525": 113, "532": 113, "267": 113, "178": [113, 153, 176], "089": 113, "w_i": [113, 114], "obs3": 113, "829591905722086": 113, "2193824894893863": 113, "calcule_erreur": 113, "4723463712054069": 113, "100975199731273": 113, "categorical": 113, "outill": 113, "ensemble_aleatoir": 114, "x_m": 114, "regression_lineair": 114, "00144835": 114, "matrice_diagonal": 114, "w_1": [114, 193, 194], "w_n": [114, 193, 194], "beta_": [114, 137], "wx": 114, "wy": 114, "regression_lineaire_pondere": 114, "xt": 114, "01427573": 114, "reciprocal": 114, "calcule_z": 114, "01538305e": 114, "88235294e": 114, "32558140e": 114, "27272727e": 114, "53846154e": 114, "13636364e": 114, "05263158e": 114, "8971776057001": 114, "09487215": 114, "8229016016727": 114, "16379991": 114, "31983967417062": 114, "73034639": 114, "39132855434099": 114, "15204012": 114, "24844521352179": 114, "10443138": 114, "10481587527799": 114, "05258271": 114, "0856692693878": 114, "04297748": 114, "08332794594425": 114, "04131809": 114, "0800296132712": 114, "03867545": 114, "07493795090468": 114, "03459599": 114, "136": 114, "1726": 114, "6000000000004": 114, "1168": 114, "2374836735025": 114, "61874184": 114, "1163": 114, "7683647305184": 114, "38418237": 114, "1161": 114, "75688683": 114, "iteratively": 114, "reweighted": 114, "reprenon": [114, 152], "e_2": 114, "retomb": 114, "ressort": 114, "minor": 114, "atteign": 114, "posent": [114, 225], "matmul": 114, "mismatch": [114, 175], "gufunc": 114, "signatur": 114, "escali": [115, 116, 134, 135], "0x1f893f9e518": 115, "014962888038782651": 115, "020462778257442693": 115, "022310859639508962": 115, "03078728731371605": 115, "03153252863972433": 115, "somme_diff": [115, 116], "y_k": [115, 116], "476": [115, 176], "2380000000092": 115, "56022222223197": 115, "distance_list": [115, 116], "list_x": [115, 116], "list_y": [115, 116], "custom": [115, 121], "494": 115, "7982222222412": 115, "711": 115, "6476814159435": 115, "552": [115, 116, 153], "0x1f893ea57b8": 115, "reproductibl": 115, "0710615624871": 115, "0x1f8943ece80": 115, "somme_diff_ab": 115, "difference_ab": 115, "optimise_ab": [115, 116], "recalcul": [115, 116, 204], "histogramme_y": 115, "somme_diff_histogramm": 115, "optimise_rapid": [115, 116], "4096814159292": 115, "40968141593424": 115, "contiendront": 115, "fer": [115, 127, 143, 201, 208, 209, 225, 233, 240], "0x1f8944d3ba8": 115, "nuage2": 115, "0x1c0e33655f8": 116, "15754": 116, "105018618644": 116, "19898": 116, "600443365925": 116, "6383487080093": 116, "553": [116, 151, 172], "2184": 116, "8079894060775": 116, "0x1c0e4c6f208": 116, "5154656398129": 116, "789": 116, "7106930739271": 116, "0x1c0e4c90940": 116, "946": 116, "grav": 116, "delta_": 116, "782": 116, "somme_diff2": 116, "difference2": 116, "optimise2": 116, "628": 116, "y_2": 116, "y2_1": 116, "y2_2": 116, "13082": 116, "574312018376": 116, "574312018447": 116, "random_mat": [117, 118], "21542897": 117, "02478399": 117, "89552004": 117, "24733264": 117, "393163": 117, "40164738": 117, "32997878": 117, "70660631": 117, "20765567": 117, "43301488": 117, "m_1": [117, 118, 122], "build_m1": [117, 118], "26184685": 117, "41751593": 117, "53354327": 117, "34849608": 117, "96298222": 117, "51815696": 117, "58374784": 117, "71569523": 117, "12326482": 117, "remis": [117, 118, 233], "v_x": [117, 118], "v_y": [117, 118], "mean_no_nan": [117, 118], "05543522": 117, "0564421": 117, "nanmean": [117, 118], "build_m2": [117, 118], "entourent": 117, "m_3": [117, 118], "fill_column": 117, "nlin": 117, "argsort": [117, 134], "reverse_ord": 117, "bmat": 117, "build_m3": [117, 118], "18717541": 117, "d3": [117, 118, 166], "16303767944946": 117, "990990757306854": 117, "calcul_norm": 117, "puc": [117, 118, 147], "oreil": [117, 118, 147], "experient": [117, 118], "repetit": [117, 118], "25531314": 117, "070392": 117, "57432808": 117, "73422968": 117, "43834865": 117, "07553875": 117, "49648148": 117, "11340377": 117, "116": [117, 239], "28344822": 117, "90363643": 117, "90465816": 117, "88595361": 117, "117": [117, 174, 175, 184, 189], "28824424": 117, "05673836": 117, "37972659": 117, "28703801": 117, "97835736": 117, "49136146": 117, "70723528": 117, "34848088": 117, "10112512": 117, "1306255": 117, "94022724": 117, "91916954": 117, "96721215": 117, "14121786": 117, "35629971": 117, "99870181": 117, "48138722": 117, "00467304": 117, "ratio2": 117, "nerreur": [117, 118], "build_m3_just1": 117, "imin": 117, "imax": 117, "pr\u00e9alabl": [117, 193, 240, 241], "corrcoef": [117, 118], "979253": 117, "308262": 117, "616462": 117, "496": [117, 118, 133], "980323": 117, "790158": 117, "667422": 117, "497": [117, 118], "977415": 117, "050925": 117, "430873": 117, "498": [117, 118, 153, 229, 240], "980746": 117, "885168": 117, "995820": 117, "978955": 117, "935248": 117, "137125": 117, "56987627": 118, "87585938": 118, "21230699": 118, "85706677": 118, "32971056": 118, "31614371": 118, "99469359": 118, "63550262": 118, "90844194": 118, "84040783": 118, "48750338": 118, "92138266": 118, "59978536": 118, "22258934": 118, "72143302": 118, "02229479": 118, "52222862": 118, "1157862": 118, "97598417": 118, "01928312": 118, "09388639": 118, "plus_proch": 118, "colnan": 118, "plus_proche_rapid": 118, "amin": 118, "399": 118, "83806507": 118, "88020645836853": 118, "054794671768933": 118, "9707": 118, "2287": 118, "93113166": 118, "65407502": 118, "59161999": 118, "20763444": 118, "36123306": 118, "49474066": 118, "20767715": 118, "72341549": 118, "99591576": 118, "28602503": 118, "35006845": 118, "18103292": 118, "775306": 118, "15330721": 118, "44248685": 118, "80699951": 118, "70774305": 118, "74452936": 118, "59144759": 118, "22093401": 118, "35913762": 118, "46902292": 118, "02940671": 118, "50112628": 118, "06988804": 118, "66400287": 118, "02826212": 118, "6163169": 118, "98007237": 118, "7964768": 118, "978472": 118, "787724": 118, "693286": 118, "980944": 118, "399139": 118, "579552": 118, "979960": 118, "064428": 118, "893382": 118, "977117": 118, "492200": 118, "140280": 118, "981207": 118, "797778": 118, "785862": 118, "rond": [119, 211], "23606797749979": [119, 239], "585786437626905": 119, "04987562112089": 119, "04023026006364461": 119, "613278941761477": 119, "polair": [119, 239], "table_alea_pol": 119, "2697993898932539": 119, "07781479211233774": 119, "104239515207136": 119, "7109081402403072": 119, "46932352351540807": 119, "3259610442266929": 119, "1743368223886739": 119, "2821629999494295": 119, "skip_": [119, 120], "list_tabl": [119, 120], "7403604958859722": 119, "mur": [119, 120, 193], "151393678876878": 119, "0883943109284333": 119, "2251498896276685": 119, "9591970274173125": 119, "8759281350069976": 119, "8362221630472657": 119, "7566611650530053": 119, "0002849316792242": 119, "5208215962264875": 119, "537577072452744": 119, "650373925673775": 119, "339568894819979": 119, "31652883529303466": 119, "256221251336387": 119, "diametr": 119, "5565818929001787": 119, "05896867240161785": 119, "5288969098327476": 119, "28733719348942466": 119, "6110699282390006": 119, "32241732345580165": 119, "14909553247181195": 119, "9356539992681199": 119, "026230694145464417": 119, "2908024901550055": 119, "4975323234658624": 119, "06918255935350293": 119, "60937258121247": 119, "16579629631884596": 119, "22654870937824634": 119, "12601838486539685": 119, "651232619461013": 119, "05440550117493803": 119, "25693188063963546": 119, "044795815889184576": 119, "07316443943516515": 119, "8533292769508105": 119, "0525413549133239": 119, "add_artist": [119, 120], "hexagonal": [119, 211, 212], "spiral": [119, 120], "improve_distrib": [119, 120], "pjp": [119, 120], "best_sol": [119, 120], "351": [119, 169], "16110855450954664": 119, "13158100390586172": 119, "2384176552949989": 119, "218691822411302": 119, "19838094003303594": 119, "2162723387696761": 119, "20826241454101815": 119, "350": 119, "2094900548253301": 119, "triangul": 119, "delaunay": 119, "voronoi": [119, 120], "voronoi_plot_2d": [119, 120], "vor": [119, 120], "triplot": 119, "simplic": 119, "points2": [119, 120], "vor2": [119, 120], "dela2": 119, "triangl": [119, 120, 209, 212], "\u00e9quilat\u00e9ral": [119, 120, 212], "peux": [119, 120], "points_in_circl": 119, "n_cluster": [119, 120], "copy_x": [119, 120, 137], "n_in": [119, 120], "n_job": [119, 120, 135, 137], "precompute_dist": [119, 120], "tol": [119, 120, 135, 137], "cluster_centers_": [119, 120], "distance_n_t": [119, 120], "22015129672480682": 119, "13834146640009876": 119, "mixtur": [119, 120], "gaussianmixtur": [119, 120], "gau": [119, 120], "means_": [119, 120], "gaussian": [119, 120], "21874003784217044": 119, "2c": 120, "908190224838399": 120, "7798369055014547": 120, "6047310701361788": 120, "538160002945912": 120, "7983390011407794": 120, "6871544213644984": 120, "4887075948495667": 120, "511831256978005": 120, "1962115931817596": 120, "6710676955082597": 120, "8642968594855169": 120, "32893230449174": 120, "500463237472049": 120, "1547646758902923": 120, "7606012466424747": 120, "019429938832147": 120, "6514056477386534": 120, "596586600954664": 120, "05123812953078399": 120, "05320587377518926": 120, "37467460315675805": 120, "4937702081221422": 120, "3485943522613466": 120, "6259118658008394": 120, "1764558984440392": 120, "6004143527243244": 120, "4008125902558497": 120, "052940751769248395": 120, "547095264138868": 120, "7525281574947777": 120, "6243952889602158": 120, "2784959002399452": 120, "16893417347025785": 120, "15965080092875694": 120, "5866949933059173": 120, "6062900542195173": 120, "43564615941411566": 120, "26135901810381923": 120, "2792244176019283": 120, "7961649730497629": 120, "28673576049151195": 120, "08784118387851514": 120, "2840288333247212": 120, "7893555701617381": 120, "6299236074366998": 120, "19575062032543844": 120, "facecolor": 120, "rectangulair": 120, "07797442236028274": 120, "17084871553555847": 120, "16055223380264586": 120, "22481137276979984": 120, "points_in_rectangl": 120, "19622641509433936": 120, "2016527778991591": 120, "14695957901204992": 120, "covid": [121, 128], "435": 121, "2322": 121, "642": 121, "3128": [121, 153], "3580": 121, "1041": 121, "4188": 121, "1251": 121, "695": 121, "452": 121, "1104": 121, "1105": 121, "1106": [121, 176], "1107": 121, "1108": 121, "erron": [121, 122, 152, 228, 239], "donnees_artificiel": 121, "dayofyear": 121, "examen2021": 121, "dure": [121, 152, 153], "nt": [121, 243], "98965342710248": 121, "lifelin": 121, "kaplanmeierfitt": 121, "kmf": 121, "portail": 121, "propagation_n": 121, "propagation_vaccin": 121, "propagation_n_vaccin": 121, "prop": 121, "immunis": 121, "mesure_temps_fonct": 122, "10280692000000005": 122, "bc": [122, 153], "189998290": 122, "18042000": 122, "009560690999999987": 122, "009846866999999992": 122, "001004321000000008": 122, "n_op": 122, "m1_shap": 122, "m2_shap": 122, "185998326": 122, "n_ops_3": 122, "sh1": 122, "sh2": 122, "sh3": 122, "m1_m2m3": 122, "m1m2_m3": 122, "36084000": 122, "testing": [122, 125, 134, 175, 222], "assert_almost_equal": [122, 175, 222], "produit3": 122, "0011657070000000048": 122, "0011010209999999887": 122, "n_ops_4": 122, "sh4": 122, "m1_m2m3m4": 122, "m1m2_m3m4": 122, "m1m2m3_m4": 122, "11331640": 122, "produit4": 122, "000988687999999982": 122, "010446371000000027": 122, "008082993999999956": 122, "0008713240000000155": 122, "0009054390000000013": 122, "m_n": 122, "mm_i": 122, "verront": 122, "n_ops_n": 122, "unexpected": [122, 142, 154, 156, 175], "best_cost": 122, "best_pos": 122, "product_n": 122, "bot": 122, "0009734980000000349": 122, "0009873739999999031": 122, "m5": 122, "9697854": 122, "n_ops_n_opt": 122, "product_n_opt": 122, "0010903469999999516": 122, "0009383259999999893": 122, "01018160299999991": 122, "calcu": 122, "surface_br": 123, "brique_optimal": 123, "surf": 123, "additionnel": 123, "brique_optimale_surplus": 123, "4471428571428575": 123, "4285714285714286": 123, "producteur": 123, "marchandis": 123, "surface_brique2": 123, "brique_optimale_surplus_deux_litr": 123, "surf1": 123, "surf2": 123, "6938095238095245": 123, "7857142857142858": 123, "maxxy": 124, "seg": 124, "tree3": 124, "rl": 124, "tree_recurs": 124, "level": [124, 136, 225, 239], "all_seg": 124, "iter_seg": 124, "new_seg": 124, "tree3_al": 124, "re_rnd": 124, "rl_rnd": 124, "a3": [124, 198], "tree_recursive_al": 124, "tirage_al": 125, "n_ru": 125, "n_med": 125, "07629544": 125, "9432004": 125, "52035232": 125, "47051663": 125, "89432851": 125, "07652123": 125, "01653439": 125, "99436816": 125, "1499065": 125, "10758634": 125, "29317605": 125, "76729661": 125, "97237465": 125, "25573414": 125, "60399214": 125, "72086801": 125, "76951744": 125, "75725811": 125, "6663647": 125, "92848284": 125, "07308657": 125, "11122628": 125, "92539686": 125, "48536534": 125, "43820312": 125, "26151317": 125, "74683167": 125, "40646889": 125, "92033983": 125, "88312987": 125, "emp\u00each": [125, 134, 143, 160, 237, 239, 240, 246], "83198031": 125, "96466894": 125, "77179962": 125, "85889438": 125, "8461793": 125, "57370393": 125, "40531662": 125, "22456834": 125, "23536145": 125, "57466486": 125, "82197491": 125, "41002286": 125, "49221173": 125, "36141496": 125, "80702793": 125, "88495069": 125, "04168846": 125, "84550633": 125, "93752849": 125, "91062519": 125, "07690611": 125, "86261363": 125, "32681556": 125, "66757055": 125, "0931767": 125, "69200264": 125, "69223434": 125, "52616512": 125, "57965512": 125, "63777092": 125, "91082466": 125, "23438729": 125, "53420279": 125, "27127587": 125, "62954985": 125, "80840816": 125, "39845012": 125, "48835731": 125, "34532585": 125, "3555345": 125, "94993319": 125, "31340719": 125, "59626523": 125, "351522": 125, "19644616": 125, "00989466": 125, "51327456": 125, "70491577": 125, "52817942": 125, "25799275": 125, "assert_allclos": 125, "test_dist": 125, "tolist": [125, 159, 175], "nm": [125, 204], "plus_proche_medecin": 125, "p_min": 125, "p_max": 125, "floor": [125, 246], "test_grill": 125, "map_grille_indic": 125, "xi": [125, 135], "test_map": 125, "pairwise_distance_grill": 125, "gy": 125, "test_distance_grill": 125, "415": 125, "470": 125, "8018622000236064": 125, "8201483000302687": 125, "8459657999919727": 125, "8035789999994449": 125, "8155568999936804": 125, "026652099972125143": 125, "01595849997829646": 125, "01231670001288876": 125, "012164799962192774": 125, "011980499955825508": 125, "imaginon": [125, 194, 197, 225], "plus_proche_medecin_grill": 125, "mg": 125, "co\u00efncident": 125, "irait": 125, "closest": 125, "\u00e9tranger": [126, 246], "abcdefghuij": 126, "code_def": 126, "0010": 126, "0011": 126, "0100": [126, 137], "0101": 126, "0110": [126, 141], "0111": 126, "ag": [126, 127], "00000110": 126, "correpond": 126, "first_let": 126, "chain": [126, 241], "10010001": 126, "code_def_invers": 126, "decode_rapid": 126, "coding35": 126, "11100": 126, "11101": 126, "11110": 126, "ah": 126, "00011100": 126, "which_coding": 126, "222222222222222": 126, "3333333333333335": 126, "bgbb": 126, "coding235": 126, "011100101": 126, "first_letter": 126, "adn": [127, 196], "ttcagttgtg": 127, "aatgaatgg": 127, "cgtgccaaat": 127, "agacgtgccg": 127, "ccgccgctcg": 127, "attcgcactt": 127, "nucl\u00e9iqu": 127, "fragment": 127, "cca": 127, "recherche_mot": 127, "aaaaa": 127, "positions_mot": 127, "aaaaaaaaa": 127, "cgtgccaaaccaaacc": 127, "ccaaac": 127, "positions_motif_chevauch": 127, "couple_bas": 127, "acgt": 127, "ct": 127, "ga": 127, "gc": [127, 243, 246], "gg": 127, "tc": [127, 248], "tg": [127, 170], "tt": [127, 153], "decoupe_sequent": 127, "text_coupl": 127, "motif_coupl": 127, "positions_motif_coupl": 127, "\u00e9labor": [128, 241], "briqu": [128, 239], "bjkst": 128, "apart": [128, 207, 239, 243], "sird": 128, "cass": [128, 181, 193, 201, 202], "vigener": [128, 132], "mors": [128, 214], "cryptag": [128, 243], "homomorphic": 128, "craig": 128, "gentry": 128, "machain": 130, "spectrum": 131, "gin": 132, "pickl": [132, 137, 167, 241, 243, 244], "devin": [132, 208], "magiqu": [132, 215], "make_blob": 133, "\u00e9court": 133, "remet": 133, "filterwarning": [133, 136], "cluster_std": 133, "center": 133, "rgbyc": 133, "sag": 133, "658": 133, "metton": [133, 147], "clock": [133, 215], "evaluate_model": 133, "_time_train": 133, "_time_test": 133, "_scor": 133, "multiclass": [133, 144, 145], "onevsoneclassifi": [133, 144], "onevsrestclassifi": [133, 144, 145], "ovo": 133, "ovr": 133, "lr_time_train": 133, "2209448000003249": 133, "lr_time_test": 133, "009104000000206725": 133, "lr_scor": 133, "2086589999998978": 133, "005245500000000902": 133, "654": [133, 174, 175], "05842000000029657": 133, "0010207000000264088": 133, "032755": 133, "001730": 133, "022686": 133, "001637": 133, "324123": 133, "032629": 133, "812": 133, "076139": 133, "001591": 133, "808": 133, "730089": 133, "036648": 133, "053406": 133, "000859": [133, 152], "508": [133, 153, 250], "984762": 133, "096167": 133, "444": 133, "116836": 133, "001022": 133, "468": 133, "537234": 133, "154609": 133, "110220": 133, "001036": 133, "595010": 133, "209428": 133, "328": 133, "122475": 133, "000956": 133, "336": 133, "022290": 133, "437165": 133, "280": [133, 163], "150593": 133, "000868": 133, "rgb": [133, 212], "009756": 133, "003354": 133, "980000": 133, "016191": 133, "001600": 133, "248614": 133, "011291": 133, "636000": 133, "092591": 133, "001695": 133, "568000": 133, "834381": 133, "067650": 133, "524444": 133, "376624": 133, "004853": 133, "466667": 133, "502573": 133, "099040": 133, "460000": 133, "721085": 133, "004124": 133, "436923": 133, "613464": 133, "178248": 133, "397647": 133, "990700": 133, "005284": 133, "342353": 133, "057976": 133, "297401": 133, "375238": 133, "337764": 133, "006087": 133, "340952": 133, "861960": 133, "479451": 133, "316800": 133, "269823": 133, "008297": 133, "269600": 133, "rg": 133, "cy": 133, "std_": 133, "031314": 133, "243204": 133, "788": [133, 174], "584626": 133, "005322": 133, "560": 133, "901009": 133, "275102": 133, "527490": 133, "008637": 133, "790364": 133, "245218": 133, "538992": 133, "005838": 133, "985556": 133, "258749": 133, "459469": 133, "005051": 133, "154060": 133, "258028": 133, "603545": 133, "005316": 133, "031245": 133, "208715": 133, "529591": 133, "005976": 133, "nf": [133, 190], "042428": 133, "264521": 133, "320": [133, 170, 179], "491270": 133, "005313": 133, "325670": 133, "225577": 133, "740": 133, "760807": 133, "005378": 133, "728": 133, "953030": 133, "214104": 133, "865434": 133, "005122": 133, "404396": 133, "234881": 133, "967371": 133, "009054": 133, "818875": 133, "287795": 133, "898213": 133, "005280": 133, "lbfg": [133, 140, 142, 143], "df5": 133, "285135": 133, "017950": 133, "600000": [133, 139], "042483": 133, "002003": 133, "520000": 133, "895627": 133, "189201": 133, "302857": 133, "168547": 133, "004620": 133, "251429": 133, "890931": 133, "605583": 133, "196667": 133, "367130": 133, "013213": 133, "404424": 133, "189003": 133, "499927": 133, "012866": 133, "105882": 133, "166851": 133, "902685": 133, "132727": 133, "772086": 133, "014063": 133, "083636": 133, "347375": 133, "720673": 133, "901161": 133, "043177": 133, "084444": 133, "135": 133, "rgcy": 133, "jeu_x_y": 133, "ncl": 133, "resx": 133, "resy": 133, "decisiontreeclassifi": [133, 142, 144], "22it": 133, "dt_time_train": 133, "dt_time_test": 133, "dt_scor": 133, "008709": 133, "003290": 133, "014272": 133, "002550": 133, "001384": 133, "001313": 133, "050579": 133, "007302": 133, "800000": [133, 139], "025281": 133, "002580": 133, "733333": 133, "001434": 133, "001112": 133, "100356": 133, "013768": 133, "400000": [133, 216], "032940": 133, "001779": 133, "320000": 133, "001064": 133, "000719": [133, 153], "185524": 133, "020908": 133, "046669": 133, "001958": 133, "085714": 133, "001124": 133, "000627": 133, "292794": 133, "039437": 133, "311111": 133, "083591": 133, "003007": 133, "111111": 133, "001478": 133, "000881": 133, "rgycbp": 133, "njeu": 133, "gradientboostingregressor": [134, 152], "max_depth": [134, 137], "gradientboostingregressorifittedgradientboostingregressor": 134, "n_estimator": [134, 137], "revenon": [134, 190], "estimators_": [134, 137], "init_": 134, "model01": 134, "modelb": 134, "epsilon_t": [134, 138], "theta_": 134, "theta_t": 134, "g_": 134, "g_t": 134, "f_k": 134, "f_0": 134, "min_": [134, 137, 187, 191, 193, 194], "f_m": 134, "gamma_0": 134, "gamma_k": 134, "h_k": 134, "r\u00e9sidus": 134, "gamma_": 134, "h_m": 134, "accro\u00eet": 134, "modelc": 134, "x27": [134, 137, 142, 144, 145, 147, 149, 153, 189], "randomforestregressor": [134, 135, 137, 152], "exper": 134, "sc": [134, 240], "47it": 134, "6061998151266149": 134, "5241640887093781": 134, "6865162453017377": 134, "5868617679417452": 134, "6643588529036899": 134, "5882688129311655": 134, "for\u00eat": [134, 135], "r\u00e9gresseur": 134, "decisiontreeregressor": [134, 135], "19it": 134, "g\u00e9n\u00e9ralis": 134, "40it": 134, "8505309865561821": 134, "7409584480906592": 134, "8372610096704007": 134, "8433616064058848": 134, "8610474948662841": 134, "7463887159097458": 134, "8469931884879516": 134, "8553184433763386": 134, "gbr": 134, "43it": 134, "8595510594071162": 134, "47103349192372335": 134, "6460977028277105": 134, "7953273631823825": 134, "8418307915852581": 134, "4894523688410177": 134, "6494948729040753": 134, "7754015641398699": 134, "xgbregressor": [134, 135], "squarederror": 134, "8362392926836479": 134, "5284643193472292": 134, "6696397339277518": 134, "7786586369744302": 134, "8866993680319293": 134, "5135892626305283": 134, "6803157400434685": 134, "8171169617436257": 134, "xgb": 134, "37it": [134, 137], "8590132304552919": 134, "7402716733771284": 134, "8482110599066995": 134, "8642576634357626": 134, "8599672573344654": 134, "7367047036233907": 134, "84659652680362": 134, "8606710003826832": 134, "lgbmregressor": 134, "choosing": 134, "wis": 134, "threading": [134, 243, 246], "overhead": 134, "was": [134, 228, 229], "000073": 134, "force_row_wis": 134, "enough": 134, "force_col_wis": 134, "training": [134, 178, 190], "155": 134, "276912": 134, "000094": [134, 173], "000050": 134, "000069": 134, "344856": 134, "000056": 134, "000046": [134, 153, 173], "000035": 134, "231196": 134, "000032": 134, "000049": 134, "434819": 134, "000044": [134, 153], "363485": 134, "000045": [134, 173], "000038": 134, "000042": [134, 153], "646337": 134, "000043": 134, "000051": [134, 173], "458236": 134, "000181": 134, "000068": 134, "000036": [134, 153], "527945": 134, "000031": 134, "000034": 134, "110538": 134, "000041": 134, "000054": 134, "536138": 134, "000080": 134, "140867": 134, "000060": 134, "416133": 134, "000053": 134, "000055": 134, "396002": 134, "000284": 134, "000067": [134, 153], "328942": 134, "560493": 134, "000076": 134, "66it": 134, "000047": 134, "154": [134, 153], "999049": 134, "935543": 134, "000037": [134, 173], "000136": 134, "395022": 134, "189666": 134, "98it": 134, "000305": 134, "000033": 134, "000040": 134, "055646": 134, "000039": 134, "000048": 134, "380804": 134, "240350": 134, "63it": 134, "000577": 134, "005265": 134, "258938": 134, "91it": 134, "386138": 134, "8773032128441518": 134, "48214820701023675": 134, "6539572474605444": 134, "7984627882777451": 134, "8555575315832163": 134, "4977691173485087": 134, "6367319006906368": 134, "7683900978469463": 134, "lgb": 134, "95it": 134, "accuracy": [134, 142], "bad": [134, 195, 196, 233], "didn": 134, "explicitly": 134, "num_leav": 134, "000063": 134, "156120": 134, "182360": 134, "345161": 134, "20it": 134, "125674": 134, "173663": 134, "88it": 134, "000057": 134, "600185": 134, "499798": 134, "000052": 134, "414976": 134, "56it": [134, 137], "000245": 134, "000071": 134, "525282": 134, "000072": 134, "77it": 134, "312694": 134, "210617": 134, "757290": 134, "15it": 134, "371614": 134, "000059": 134, "379656": 134, "10it": 134, "000856": 134, "051009": 134, "81it": 134, "140242": 134, "000077": 134, "432455": 134, "000070": 134, "000085": 134, "319151": 134, "29it": 134, "163655": 134, "329555": 134, "86it": 134, "444763": 134, "058841": 134, "162133": 134, "433042": 134, "500633": 134, "8384828369380417": 134, "7470535641154521": 134, "8395674441554806": 134, "8460697933405346": 134, "8966181473711606": 134, "7767690018820292": 134, "8808463799894176": 134, "8937462469421166": 134, "catboostregressor": 134, "26it": 134, "8878458732034202": 134, "5106308809971148": 134, "6633876012158881": 134, "7962100349534728": 134, "8702333178716275": 134, "47507766677086194": 134, "632648027686756": 134, "7779024827838191": 134, "97it": 134, "8605624010619503": 134, "7022983070352993": 134, "8366211999791443": 134, "8636015275401271": 134, "8456129223719402": 134, "7027514870740816": 134, "8333140676555679": 134, "8596728951071267": 134, "generate_dat": 135, "influenc": [135, 240], "param\u00eatr": 135, "_depth": 135, "decisiontre": 135, "clr": [135, 136, 140, 142, 143, 144, 145], "repr\u00e9sentat": 135, "extact": 135, "feront": [135, 233], "axarr": 135, "sharex": [135, 159], "md": [135, 204, 241], "curseur": [135, 233], "test_siz": [135, 151], "r2_scor": [135, 137, 142, 147, 149, 150, 151, 152, 153], "min_samples_split": 135, "overfitt": 135, "pl": [135, 139], "521566": 135, "525835": 135, "534421": 135, "602039": 135, "585866": 135, "pivx": 135, "pivy": 135, "plot_wirefram": 135, "neural_network": [135, 144, 152], "mlpregressor": [135, 152], "hidden_layer_siz": [135, 144], "relu": [135, 241], "_multilayer_perceptron": [135, 152], "convergencewarning": [135, 140, 142, 143], "stochastic": 135, "reached": [135, 140, 142, 143], "hasn": 135, "converged": [135, 141], "yet": 135, "18it": 135, "grid_search": 135, "hyperopt": 135, "jackknif": 135, "resampling": 135, "infinitesimal": 135, "randomforestregressorifittedrandomforestregressor": 135, "clrx": 135, "base_scor": 135, "boost": 135, "callback": 135, "colsample_bylevel": 135, "colsample_bynod": 135, "colsample_bytre": 135, "devic": [135, 243], "early_stopping_round": 135, "enable_categorical": 135, "eval_metric": 135, "feature_typ": 135, "grow_policy": 135, "importance_typ": 135, "interaction_constraint": 135, "learning_rat": 135, "max_bin": 135, "max_cat_threshold": 135, "max_cat_to_onehot": 135, "max_delta_step": 135, "max_leav": 135, "min_child_weight": 135, "monotone_constraint": 135, "multi_strategy": 135, "num_parallel_tre": 135, "xgbregressorifittedxgbregressor": 135, "psx": 135, "sk": [135, 185, 186], "xg": 135, "conviendr": 136, "brut": [136, 138, 145, 189, 190, 233], "retravaill": 136, "fresqu": 136, "_imag": 136, "sphx_glr_plot_classifier_comparison_001": 136, "lda": 136, "listedcolormap": 136, "plot_clf_2cl": 136, "x_min": 136, "x_max": 136, "y_min": 136, "y_max": 136, "xx": 136, "yy": 136, "imshow": [136, 178], "interpol": 136, "extent": 136, "catch_warning": [136, 137, 231], "linetyp": 136, "paired": 136, "set_xtick": 136, "set_ytick": 136, "kneighborsclassifi": [136, 189, 190], "kneighborsclassifierifittedkneighborsclassifi": [136, 189], "knn": [136, 146, 147, 148, 149, 150, 151], "svcifittedsvc": 136, "s\u00e9duis": 136, "convient": [136, 164, 191, 239, 243], "captur": 136, "xext": 136, "13422662": 136, "08574201": 136, "1199182": 136, "52645729": 136, "2371076": 136, "plot_clf_2classes_poly": 136, "devenu": [136, 198], "vorono\u00ef": 136, "56507947": 137, "63366763": 137, "67654224": 137, "74727391": 137, "27261232": 137, "79683015": 137, "9985268": 137, "18645867": 137, "50606168": 137, "08885871": 137, "5338804549709038": 137, "inversibl": 137, "14638204850109837": 137, "5078580798207908": 137, "1546076751624358": 137, "npour": 137, "92288256836204": 137, "468149305335954": 137, "pr\u00e9f\u00e9re": 137, "5109393397213065": 137, "14560512791194": 137, "las": 137, "alf": 137, "nbnull": 137, "533887": 137, "00010": [137, 175], "533923": 137, "00500": 137, "533023": 137, "01000": 137, "529573": 137, "01500": 137, "522538": 137, "nbvar": 137, "set_xscal": 137, "contradictoir": 137, "rf": [137, 145], "t_i": [137, 191, 192], "concatenate_predict": 137, "x_train_rf": 137, "x_test_rf": 137, "r2_rf": 137, "14it": [137, 168], "436048": 137, "477698": 137, "437957": 137, "453785": 137, "alpha_2": 137, "e_r": 137, "e_l": 137, "xyl1": 137, "xyl2": 137, "xyl3": 137, "lambda1": 137, "lambda2": 137, "er": [137, 179, 220], "mean_squared_error": [137, 147], "train_lasso": 137, "simplefilt": [137, 152, 231], "sauc": 137, "baseestimator": [137, 142], "regressormixin": 137, "lassorandomforestregressor": 137, "precomput": 137, "warm_start_lasso": 137, "cyclic": 137, "criterion": 137, "squared_error": 137, "min_samples_spl": 137, "min_samples_leaf": 137, "min_weight_fraction_leaf": 137, "max_featur": 137, "max_leaf_nod": 137, "min_impurity_decreas": 137, "oob_scor": 137, "warm_start_rf": 137, "ccp_alph": 137, "max_sampl": 137, "_concatenate_predict": 137, "rf_": 137, "sample_weight": [137, 142], "warm_start": 137, "x_rf": 137, "lasso_": 137, "47415783259761723": 137, "cross_val_scor": [137, 147, 152], "26413444": 137, "49396068": 137, "44598638": 137, "52062164": 137, "10872839": 137, "shufflespl": 137, "23637803": 137, "33097263": 137, "35233357": 137, "40361275": 137, "45858455": 137, "gridsearchcv": [137, 147, 149], "param_grid": [137, 147, 149], "fitting": [137, 149], "totalling": [137, 149], "gridsearchcvifittedgridsearchcv": [137, 147, 149], "lassorandomforestregressorlassorandomforestregressor": 137, "best_params_": 137, "best_estimator_": [137, 147], "44775063104195545": 137, "optimizedlassorandomforestregressor": 137, "model2": 137, "4731987666983202": 137, "optimzed_rf": 137, "lasso_rf": 137, "st_siz": 137, "1354238": 137, "2979576": 137, "singular": [138, 153], "methodology": 138, "automated": 138, "outli": 138, "y_t": 138, "bruit1": 138, "24857848": 138, "14896109": 138, "81023497": 138, "85981186": 138, "04023266": 138, "bruit2": 138, "0004": [138, 153, 178], "00542873": 138, "19959898": 138, "04290419": 138, "18763969": 138, "60007673": 138, "autocorr\u00e9logramm": 138, "_d": 138, "005429": 138, "199599": 138, "042904": 138, "187640": 138, "600077": 138, "tsa": 138, "tsatool": 138, "detrend": 138, "notrend": 138, "438347": 138, "753363": 138, "491601": 138, "736482": 138, "053695": 138, "stattool": 138, "acf": 138, "autor\u00e9gress": 138, "pacf": 138, "pcor": 138, "lagged_t": 138, "lag": 138, "dim": [138, 159], "13700254": 138, "06081016": 138, "89449208": 138, "23733857": 138, "32045675": 138, "vh": 138, "recompos": 138, "reconstruit": 138, "850": 138, "consid\u00e9rent": 138, "off": 138, "ellipticenvelop": 138, "env": 138, "support_fract": 138, "ellipticenvelopeifittedellipticenvelop": 138, "contigu": 138, "incrimin": 138, "outp": 138, "decision_funct": [138, 140, 142, 143, 145], "pca": [139, 190], "preprocessing": [139, 140, 142, 143, 152, 153], "normaliz": [139, 152, 153, 169, 213, 214], "n_component": [139, 190], "pcapc": 139, "explained_variance_ratio_": 139, "louch": 139, "components_": 139, "6497": [139, 152], "443235": 139, "056034": 139, "525319": 139, "744574": 139, "994697": 139, "757804": 139, "035034": 139, "749400": 139, "521855": 139, "002999": 139, "009000": 139, "987110": 139, "038000": 139, "992340": 139, "047000": 139, "118": 139, "994890": 139, "065000": 139, "996990": 139, "611000": 139, "289": 139, "440": 139, "038980": 139, "mean_val": 139, "xn": [139, 152], "napres": 139, "nde": [139, 148], "alcool": [139, 153], "acid": 139, "dioxyd": 139, "semblent": 139, "v3": 139, "lmplot": 139, "hu": [139, 150], "truncat": 139, "fit_reg": 139, "nle": [139, 140, 149], "graphd": 139, "kdeplot": 139, "thresh": 139, "cmx": 139, "d\u00e9grag": 139, "get_cmap": 139, "plasm": 139, "cnorm": 139, "vmin": 139, "vmax": 139, "scalar": 139, "scalarmapp": 139, "to_rgb": 139, "vaudr": 139, "d\u00e9tach": 139, "_logistic": [140, 142, 143], "474": [140, 142, 143], "failed": [140, 142, 143], "increas": [140, 142, 143], "shown": [140, 142, 143], "logistic": [140, 142, 143, 152], "n_iter_": [140, 142, 143], "_check_optimize_result": [140, 142, 143], "1211": 140, "classes_": [140, 143, 144, 145], "confi": 140, "1389208": 140, "0757083": 140, "6765228": 140, "53844502": 140, "62378271": 140, "71080774": 140, "15300558e": 140, "58469944e": 140, "88519638e": 140, "11480362e": 140, "63369265e": 140, "99536631e": 140, "32066047e": 140, "26793395e": 140, "76234016e": 140, "32376598e": 140, "38738587e": 140, "76126141e": 140, "dfsc": [140, 143], "138921": 140, "075708": 140, "676523": 140, "914141": 140, "994176": 140, "voul": [140, 208], "changeon": 140, "cloch": 140, "dfpr": [140, 143], "n\u00e9chel": [140, 143], "roc_auc_scor": [140, 143, 145], "fpr0": [140, 143], "tpr0": [140, 143], "thresholds0": [140, 143], "pos_label": [140, 143], "drop_intermediat": [140, 143, 145], "1528": 140, "absconc": 140, "dftp": 140, "002488": 140, "999994": 140, "nen": [140, 149], "aucf": [140, 143], "5f": [140, 143], "ncet": 140, "under": 140, "curv": 140, "n1": 140, "yt": 140, "9922904817101114": 140, "fontion": 140, "trapz": 140, "m\u00e9triqu": [140, 150], "recall": 140, "247385": 140, "000000e": 140, "396645": 140, "247537": 140, "998232e": 140, "396841": 140, "discrete_model": 141, "048414": 141, "summary2": [141, 153], "mle": 141, "pseudo": [141, 225, 239], "913": 141, "493": 141, "7476": 141, "4872": [141, 153], "1515": 141, "4861": 141, "2717": 141, "llr": 141, "4541": [141, 153], "5981": 141, "7511": 141, "1572": 141, "3716": 141, "9995": 141, "3771": 141, "3306": [141, 153], "4126": 141, "7492": 141, "1280": 141, "5507": 141, "1210": 141, "4616": 141, "9599": 141, "1246": 141, "0600": 141, "0756": 141, "0379": 141, "0069": 141, "2422": 141, "7390": 141, "9560": 141, "2758": [141, 153], "4926": 141, "9854": 141, "0505": 141, "0134": 141, "7724": 141, "0002": [141, 153, 178], "0768": 141, "0243": 141, "0632": 141, "0050": 141, "6896": 141, "0534": 141, "0730": 141, "2093": 141, "9806": 141, "7610": 141, "2610": 141, "7417": 141, "9800": 141, "9204": 141, "6624": 141, "8210": 141, "8918": 141, "0237": 141, "6857": 141, "8983": 141, "8853": 141, "4150": 141, "3656": 141, "0008": 141, "1733": 141, "6567": 141, "x_train2": 141, "11120776": 141, "79383309": 141, "83313405": 141, "89025431": 141, "14615898": 141, "npar": 141, "nlogist": 141, "nselon": 141, "color_train": 142, "color_test": 142, "accuracy_scor": 142, "4793846153846154": 142, "x_train_whit": 142, "y_train_whit": 142, "x_train_red": 142, "y_train_red": 142, "clr_whit": 142, "clr_red": 142, "x_test_whit": 142, "y_test_whit": 142, "x_test_red": 142, "y_test_red": 142, "acc_whit": 142, "acc_red": 142, "47843775427176566": 142, "5984848484848485": 142, "acc2": 142, "5076923076923077": 142, "sklearnercategory": 142, "opt\u00e9": 142, "pla\u00eet": 142, "cat_col": 142, "classifiermixin": 142, "colnameind": 142, "_get_cat": 142, "hasattr": [142, 152, 189], "_filter_cat": 142, "pragm": 142, "xcat": 142, "ycat": 142, "scat": 142, "_any_predict": 142, "notimplementederror": [142, 158], "meth": [142, 175, 225], "getattr": [142, 174, 175, 189], "pylint": 142, "disabl": [142, 174, 175, 176, 189], "e1136": 142, "regressor": [142, 152], "_estimator_typ": 142, "scoring": [142, 147], "new_x_train": 142, "sklearnercategoryinot": 142, "fittedsklearnercategory": 142, "logisticregressionlogisticregress": [142, 144, 145], "new_x_test": 142, "5058461538461538": 142, "colorart": 142, "xart": 142, "yart": 142, "new_x_art": 142, "pred2": 142, "essayson": 142, "acc1": 142, "6098461538461538": 142, "5981538461538461": 142, "randomforestclassifi": [142, 144, 145], "7003076923076923": 142, "7046153846153846": 142, "play": 142, "0x7f1ce528ec20": 142, "pipelineifittedpipelin": 142, "selectkbestselectkbest": 142, "svcsvc": 142, "591782": 143, "745667": 143, "874864": 143, "381441": 143, "017183": 143, "1545": 143, "d\u00e9cidon": 143, "subtil": 143, "list_cl": 143, "pred_": 143, "994822102226496": 143, "9165399409607299": 143, "thi": 143, "dfa": 143, "879005": 143, "250000": 143, "925869": 143, "007364": 143, "913118": 143, "919359": 143, "92586": 143, "932542": 143, "938355": 143, "ndu": [143, 149], "score_ab": 143, "count_sum": 143, "394": 143, "912383": 143, "997475": 143, "395": 143, "204326": 143, "1227": 143, "561302": 143, "999186": 143, "671458": 143, "dfscsumab": 143, "dfscsum": 143, "liblinear": [144, 145], "07692307692308": 144, "332": 144, "dfconf": 144, "onevsrestclassifierifittedonevsrestclassifi": [144, 145], "95384615384615": 144, "onevsoneclassifierifittedonevsoneclassifi": 144, "138461538461534": 144, "524": 144, "decisiontreeclassifierifitteddecisiontreeclassifi": 144, "323076923076925": 144, "decisiontreeclassifierdecisiontreeclassifi": 144, "35384615384615": 144, "58461538461538": 144, "randomforestclassifierifittedrandomforestclassifi": [144, 145], "2923076923077": 144, "randomforestclassifierrandomforestclassifi": [144, 145], "41538461538461": 144, "mlpclassifi": 144, "mlpclassifierifittedmlpclassifi": 144, "800000000000004": 144, "mlpclassifiermlpclassifi": 144, "foudroi": 144, "stackmult": 145, "70769230769231": 145, "339": 145, "198": [145, 190], "527": 145, "rfc": 145, "9846153846154": 145, "rf_train": 145, "rfc_y": 145, "rf_test": 145, "83076923076922": 145, "fpr_lr": 145, "tpr_lr": 145, "th_lr": 145, "fpr_rfc": 145, "tpr_rfc": 145, "th_rfc": 145, "fpr_rfc_y": 145, "tpr_rfc_y": 145, "th_rfc_y": 145, "auc_lr": 145, "auc_rfc": 145, "auc_rfc_y": 145, "7269546464802059": 145, "6626763197852255": 145, "6701197104064432": 145, "nmodel": 145, "pr\u00e9dicteur": 145, "make_pipelin": [145, 153], "5556820682740744": 145, "7318154142418192": 145, "7349919877544187": 145, "partinent": 145, "rf_train_bin": 145, "y_train_bin": 145, "rf_test_bin": 145, "y_test_bin": 145, "fpr_rfc_bin": 145, "tpr_rfc_bin": 145, "th_rfc_bin": 145, "auc_rfc_bin": 145, "7731918190932655": 145, "fastidi": [145, 197, 198, 199, 213, 225, 240, 243, 246], "stackingclassifi": 145, "ovrlr": 145, "_split": 145, "737": 145, "populated": 145, "member": [145, 195, 196], "less": 145, "n_split": [145, 147, 151], "stackingclassifierifittedstackingclassifi": 145, "final_estimator": 145, "fpr_pip": 145, "tpr_pip": 145, "th_pip": 145, "auc_pip": 145, "7196235911146174": 145, "escamot": 145, "092": [146, 147], "9970": [146, 147], "075": [146, 147], "9980": [146, 147, 153], "exclut": 146, "n_neighbor": [146, 147, 148, 149, 150, 151], "kneighborsregressor": [146, 147, 148, 149, 150, 151, 152], "kneighborsregressorifittedkneighborsregressor": [146, 147, 148, 150, 151], "83897083": 147, "4670711": 147, "59014921": 147, "38119203": 147, "77196458": 147, "make_scor": 147, "21615385": 147, "21230769": 147, "27328714": 147, "14857583": 147, "13702848": 147, "cross_validat": 147, "e2": [147, 216], "return_train_scor": [147, 149], "fit_tim": 147, "01611519": 147, "01256323": 147, "01422715": 147, "01552773": 147, "01151872": 147, "score_tim": 147, "0266242": 147, "0449729": 147, "04643941": 147, "03146887": 147, "03442144": 147, "test_r2": 147, "test_e2": 147, "reproduit": [147, 225, 239], "023381240522471147": 147, "\u00e9ton": 147, "r\u00e9execut": 147, "05359981564444394": 147, "02825642": 147, "01596737": 147, "01639652": 147, "01254725": 147, "00996113": 147, "03756237": 147, "05450106": 147, "05501556": 147, "0289607": 147, "0300467": 147, "suspect": 147, "miracul": 147, "stratifiedkfold": 147, "01946974": 147, "01295662": 147, "01164722": 147, "01231718": 147, "01509309": 147, "03926373": 147, "03318691": 147, "03969431": 147, "04624486": 147, "04102969": 147, "07101199": 147, "04884618": 147, "06402385": 147, "06367173": 147, "12013179": 147, "81769231": 147, "80076923": 147, "80908391": 147, "80985373": 147, "85527329": 147, "nn": [147, 148, 175], "6492": 147, "6493": 147, "6494": 147, "6495": 147, "6496": 147, "1599": [147, 153], "1598": 147, "cvgrid": 147, "92053": 147, "response_method": 147, "kneighborsregressorkneighborsregressor": [147, 149], "cv_results_": [147, 149], "mean_fit_tim": 147, "01401343": 147, "std_fit_tim": 147, "00290775": 147, "mean_score_tim": 147, "03055172": 147, "std_score_tim": 147, "00386653": 147, "split0_test_r2": 147, "03977834": 147, "split1_test_r2": 147, "0196276": 147, "split2_test_r2": 147, "01542904": 147, "split3_test_r2": 147, "05962735": 147, "split4_test_r2": 147, "06669616": 147, "mean_test_r2": 147, "0402317": 147, "std_test_r2": 147, "02057409": 147, "rank_test_r2": 147, "split0_test_e2": 147, "79384615": 147, "split1_test_e2": 147, "77846154": 147, "split2_test_e2": 147, "77213241": 147, "split3_test_e2": 147, "80677444": 147, "split4_test_e2": 147, "81447267": 147, "mean_test_e2": 147, "79313744": 147, "std_test_e2": 147, "01611369": 147, "rank_test_e2": 147, "sien": [148, 246], "nearestneighbor": 148, "nearestneighborsifittednearestneighbor": 148, "kneighbor": [148, 189], "note_proch": 148, "dif": 148, "ndiff\u00e9rent": 148, "abs_diff": 148, "kde": [148, 150, 152], "ax_marg_y": [148, 150, 152], "rassur": 148, "6152070186239803": 148, "df_al": 149, "param_n_neighbor": 149, "train_scor": 149, "mean_train_scor": 149, "test_scor": 149, "mean_test_scor": 149, "df_scor": 149, "2763": 150, "4504": 150, "1063": 150, "2238": 150, "6118": 150, "nvaleur": 150, "ax_marg_x": 150, "5452307692307692": 150, "tromp": [150, 184, 208, 228], "mean_absolute_error": 150, "052827181324763384": 150, "0033815067443303537": 150, "ys": [150, 151, 190], "ys2": [150, 151], "666667": [150, 151], "325153": 150, "1575": 150, "357460": 150, "2146": 150, "321528": 150, "330456": 150, "237179": 150, "263158": 151, "1585": 151, "348896": 151, "702": 151, "2134": 151, "328960": 151, "261": [151, 153], "818": [151, 189], "319071": 151, "142": [151, 153, 176], "359155": 151, "stratifiedshufflespl": 151, "train_index": 151, "test_index": 151, "4352": [151, 153], "2145": 151, "489655": 151, "706": 151, "1432": 151, "493017": 151, "492632": 151, "356": 151, "492393": 151, "496124": 151, "invidivu": 151, "15256811411591387": 151, "yn": 152, "x_train_norm": [152, 153], "x_test_norm": [152, 153], "x_norm": 152, "apppliqu": [152, 244], "fit_transform": [152, 153, 190], "endswith": [152, 240], "regr": 152, "pprint": 152, "_bay": 152, "ardregress": 152, "_hub": 152, "huberregressor": 152, "_bas": [152, 189], "_passive_aggress": 152, "passiveaggressiveregressor": 152, "_quantil": 152, "quantileregressor": 152, "_stochastic_gradient": 152, "sgdregressor": 152, "_theil_sen": 152, "theilsenregressor": 152, "_ransac": 152, "ransacregressor": 152, "_glm": 152, "glm": 152, "poissonregressor": 152, "gammaregressor": 152, "tweedieregressor": 152, "_forest": 152, "extratreesregressor": 152, "_bagging": 152, "baggingregressor": 152, "_gb": 152, "_weight_boosting": 152, "adaboostregressor": 152, "_voting": 152, "votingregressor": 152, "_stacking": 152, "stackingregressor": 152, "_hist_gradient_boosting": 152, "gradient_boosting": 152, "histgradientboostingregressor": 152, "_regress": 152, "radiusneighborsregressor": 152, "score_model": 152, "xtr": 152, "xte": 152, "ytr": 152, "yte": 152, "15264869419166682": 152, "0747132999999849": 152, "17989904732301487": 152, "029094200000145065": 152, "06283962040801283": 152, "022322499999972933": 152, "008293681864454783": 152, "019755700000132492": 152, "29442406131949195": 152, "6061727999999675": 152, "09980597599411645": 152, "2597002999996221": 152, "0013198388054543875": 152, "09024569999974119": 152, "00011329963875650328": 152, "02906749999965541": 152, "00012663753861930083": 152, "06156760000021677": 152, "4779574483287953": 152, "056004900000062": 152, "4994834890638471": 152, "7028706000000966": 152, "41813406357742": 152, "2051542999997764": 152, "3223761613299607": 152, "173846099999992": 152, "20700608833439227": 152, "6709999999998217": 152, "4239913847044323": 152, "7730876000000535": 152, "18152755024686895": 152, "06760649999978341": 152, "0004093191012661812": 152, "708230199999889": 152, "19175110270945106": 152, "130972700000257": 152, "294424": 152, "606173": 152, "062840": 152, "022322": 152, "000409": 152, "708230": 152, "000127": 152, "061568": 152, "000113": 152, "029067": 152, "001320": 152, "090246": 152, "008294": 152, "019756": 152, "099806": 152, "259700": 152, "152649": 152, "074713": 152, "179899": 152, "029094": 152, "181528": 152, "067606": 152, "191751": 152, "130973": 152, "207006": 152, "671000": 152, "322376": 152, "173846": 152, "418134": 152, "205154": 152, "423991": 152, "773088": 152, "477957": 152, "056005": 152, "499483": 152, "702871": 152, "ha": [152, 214], "bottom": [152, 195, 196, 233], "sv": 152, "ransac": 152, "estimator_": 152, "3658125914901369": 152, "score_model_cross": 152, "1799448611096674": 152, "16609433123462292": 152, "20072693380863527": 152, "mas": 152, "16445120603440527": 152, "15765403941480316": 152, "1786143072062636": 152, "435193799999979": 152, "047846299999946496": 152, "8998543024559884": 152, "5295972496836714": 152, "08733290068040933": 152, "13489810000010038": 152, "00973904451751757": 152, "004417086935930126": 152, "01816079178339436": 152, "11661329999969894": 152, "3139016667645712": 152, "41907116748283557": 152, "224530428533247": 152, "356290799999897": 152, "4384892594797405": 152, "400989908758083": 152, "1372714492625668": 152, "0156056000000717": 152, "0011212946218149167": 152, "00022109795646318986": 152, "0020054507493099116": 152, "3450553999996373": 152, "0005558618017731165": 152, "0021320248191363245": 152, "00030404381558213345": 152, "25818170000002283": 152, "0005670558820739524": 152, "002194268482211603": 152, "0003060535183355695": 152, "3232327999999143": 152, "5150920905590446": 152, "48820834539223157": 152, "5338810535848475": 152, "26701920000005": 152, "43686266293982196": 152, "401753167463089": 152, "4758920210408679": 152, "2353933999997935": 152, "18291148330046114": 152, "15479217393907074": 152, "22140473381847336": 152, "640226099999836": 152, "41442261067915653": 152, "3888441812635889": 152, "43299359267487436": 152, "9275103999998464": 152, "1653286657553436": 152, "0875423648134045": 152, "19788204011638": 152, "1673464000000422": 152, "0008592314579911386": 152, "002575734438727606": 152, "00030815848198539886": 152, "3217153999999027": 152, "438489": 152, "400990": 152, "137271": 152, "015606": 152, "899854": 152, "529597": 152, "087333": 152, "134898": 152, "313902": 152, "419071": 152, "224530": 152, "356291": 152, "002576": 152, "000308": 152, "321715": 152, "000567": 152, "002194": 152, "000306": 152, "323233": 152, "000556": 152, "002132": 152, "000304": 152, "258182": 152, "001121": 152, "000221": 152, "002005": 152, "345055": 152, "009739": 152, "004417": 152, "018161": 152, "116613": 152, "164451": 152, "157654": 152, "178614": 152, "435194": 152, "165329": 152, "087542": 152, "197882": 152, "167346": 152, "179945": 152, "166094": 152, "200727": 152, "047846": 152, "182911": 152, "154792": 152, "221405": 152, "640226": 152, "414423": 152, "388844": 152, "432994": 152, "927510": 152, "436863": 152, "401753": 152, "475892": 152, "235393": 152, "515092": 152, "488208": 152, "533881": 152, "267019": 152, "nvalid": 152, "\u00e9vinc": 152, "jug": [152, 241], "prendront": 153, "polynomialfeatur": 153, "r2t": 153, "r2e": 153, "1909065078664849": 153, "16570749381482386": 153, "02195639999990817": 153, "31686272332465504": 153, "2634484656108902": 153, "16658860000006825": 153, "4117084105383497": 153, "446755311176299": 153, "0382120000001578": 153, "5940872457783092": 153, "3926": 153, "677572477097": 153, "8583189999999377": 153, "r2_train": 153, "r2_test": 153, "021956": 153, "190907": 153, "165707": 153, "166589": 153, "316863": 153, "263448": 153, "038212": 153, "411708": 153, "446755": 153, "858319": 153, "594087": 153, "677572": 153, "continuent": 153, "napprentissag": 153, "ntest": 153, "get_xax": [153, 178], "polynomialfeatures__degre": 153, "\u00e9gar": 153, "surpr": 153, "poly": 153, "poly_feat_train": 153, "poly_feat_test": 153, "10768": 153, "5223": 153, "11268": 153, "3493": 153, "5307": 153, "4795": 153, "52557": 153, "874": 153, "2126": 153, "1866": 153, "6100": 153, "4683": 153, "6396": 153, "2785": [153, 229], "1996": 153, "4533": 153, "6248": 153, "2438": 153, "1175": 153, "6865": 153, "4924": 153, "4856": 153, "9147": 153, "2593": 153, "4802": 153, "1057": 153, "9383": 153, "413": 153, "8911": 153, "x3": [153, 163], "2205": 153, "9788": 153, "8670": 153, "0620": 153, "2311": 153, "7900": 153, "1457": 153, "7859": 153, "1556": 153, "8763": 153, "8809": 153, "1723": 153, "x5": 153, "1219": 153, "9140": 153, "760": 153, "0849": 153, "6050": 153, "1086": 153, "2710": 153, "0291": 153, "270": 153, "x6": 153, "0684": 153, "8318": 153, "1496": 153, "9873": 153, "x7": 153, "6122": 153, "6785": 153, "9263": 153, "0541": 153, "8085": 153, "0328": 153, "x8": 153, "1621": 153, "721": [153, 178], "4602": 153, "2479": 153, "0246": 153, "3036": 153, "1752": 153, "3890": 153, "x9": 153, "6719": 153, "5043": 153, "6294": 153, "5291": 153, "9104": 153, "5667": 153, "x10": 153, "213": 153, "6188": 153, "172": 153, "6441": 153, "2373": 153, "2160": 153, "0806": 153, "124": [153, 174, 175], "8429": 153, "x11": 153, "274": [153, 189], "6811": 153, "3731": 153, "9381": 153, "4241": 153, "x12": 153, "0924": 153, "1860": 153, "4775": 153, "6331": 153, "4534": 153, "6449": 153, "x13": 153, "0448": 153, "3410": 153, "4266": 153, "1538": 153, "7320": 153, "505": 153, "8216": 153, "x14": 153, "2454": 153, "2389": 153, "8850": 153, "3762": 153, "544": 153, "1614": 153, "205": 153, "6706": 153, "x15": 153, "3959": 153, "0911": 153, "1136": 153, "9096": 153, "7441": 153, "9523": 153, "x16": 153, "4367": 153, "2643": 153, "2290": [153, 191], "8189": 153, "1144": 153, "9447": 153, "1447": 153, "8180": 153, "3943": 153, "8122": 153, "3651": 153, "8421": 153, "x18": 153, "3144": 153, "5557": 153, "5784": 153, "7580": 153, "1291": 153, "2972": 153, "2161": 153, "8289": 153, "2296": 153, "9691": 153, "7644": 153, "x20": 153, "5729": 153, "0106": 153, "3123": 153, "247": 153, "7314": 153, "774": 153, "8773": 153, "x21": 153, "1261": 153, "0152": 153, "4293": 153, "1530": 153, "0912": 153, "3434": 153, "x22": 153, "4573": 153, "1357": 153, "9202": 153, "153": 153, "6952": 153, "2193": 153, "x23": 153, "1256": 153, "2263": 153, "1979": [153, 208], "4050": 153, "6346": 153, "5257": 153, "5136": 153, "7684": 153, "2624": 153, "3158": 153, "x24": 153, "2503": 153, "6940": 153, "1629": 153, "0043": 153, "5369": 153, "689": 153, "9019": 153, "5697": 153, "2899": 153, "x25": 153, "304": [153, 246], "5840": 153, "4970": 153, "1834": 153, "578": 153, "0621": 153, "1060": 153, "x26": 153, "6503": 153, "3193": 153, "4276": 153, "6479": 153, "5207": 153, "1284": 153, "1880": 153, "8729": 153, "14887": 153, "5116": 153, "4348": 153, "6919": 153, "0071": 153, "8643": 153, "4288": 153, "x28": 153, "9165": 153, "6814": 153, "7199": 153, "3141": 153, "5190": 153, "x29": 153, "5408": 153, "0462": 153, "5170": 153, "0682": 153, "0460": 153, "2956": 153, "15543": 153, "7521": 153, "4727": 153, "6598": 153, "x30": 153, "1591": 153, "6613": 153, "1576": 153, "5785": 153, "0096": 153, "1499": 153, "1559": 153, "4682": 153, "4786": 153, "x31": 153, "3066": 153, "2318": 153, "1347": 153, "2069": 153, "2760": 153, "0229": [153, 178], "5707": 153, "3755": 153, "425": [153, 176], "0882": 153, "x32": 153, "611": 153, "6934": 153, "2814": 153, "3375": 153, "0009": 153, "252": [153, 163], "3778": 153, "0089": 153, "x33": 153, "861": 153, "9664": 153, "2070": 153, "4337": 153, "4163": 153, "6772": 153, "3197": 153, "0336": 153, "4920": 153, "x34": 153, "3877": 153, "8498": 153, "7887": 153, "0737": 153, "644": 153, "2921": 153, "5168": 153, "x35": 153, "8483": 153, "4913": 153, "6547": 153, "3948": 153, "2957": 153, "21319": 153, "3893": 153, "4067": 153, "x36": 153, "5489": 153, "8116": 153, "0701": 153, "3711": 153, "4689": 153, "x37": 153, "7497": 153, "4947": 153, "6849": 153, "0921": 153, "1819": 153, "650": [153, 172], "6813": 153, "x38": 153, "14067": 153, "7740": 153, "7800": 153, "2113": 153, "8035": 153, "0714": 153, "1224": 153, "2191": 153, "29359": 153, "x39": 153, "5133": 153, "5558": 153, "2077": 153, "6861": 153, "4708": 153, "0135": 153, "9206": 153, "7738": 153, "3378": 153, "x40": 153, "2372": 153, "2746": 153, "8448": 153, "5044": 153, "1325": 153, "5463": 153, "6139": 153, "0647": 153, "x41": 153, "708": 153, "8006": 153, "3385": 153, "9991": 153, "0027": 153, "4687": 153, "1172": 153, "x42": 153, "910": 153, "1293": 153, "1867": 153, "0943": 153, "4875": 153, "6260": 153, "4570": 153, "4908": 153, "2750": 153, "2323": 153, "x43": 153, "4865": 153, "4887": 153, "6027": 153, "0093": 153, "486": 153, "4611": 153, "3456": 153, "5118": 153, "x44": 153, "6328": 153, "0273": 153, "5183": 153, "1290": 153, "4886": 153, "2230": 153, "x45": 153, "8665": 153, "2275": 153, "8200": 153, "8354": 153, "5684": 153, "x46": 153, "1429": 153, "2194": 153, "705": 153, "7754": 153, "0250": 153, "0429": 153, "5757": 153, "8631": 153, "x47": 153, "287": 153, "7160": 153, "0709": 153, "4168": 153, "1566": 153, "685": 153, "8281": 153, "3961": 153, "x48": 153, "189": 153, "7045": 153, "1916": 153, "1279": 153, "2594": 153, "519": 153, "4371": 153, "140": [153, 178], "0282": 153, "x49": 153, "0129": 153, "5540": 153, "9212": 153, "3570": 153, "3477": 153, "3219": 153, "x50": 153, "10142": 153, "2002": 153, "7074": 153, "9790": 153, "4335": 153, "1518": 153, "3728": 153, "0049": 153, "24012": 153, "4054": 153, "x51": 153, "9536": 153, "1123": 153, "6099": 153, "5419": 153, "0857": 153, "447": 153, "1785": 153, "x52": 153, "1197": 153, "2260": 153, "682": [153, 174], "4747": 153, "0795": 153, "7375": 153, "2535": 153, "1896": 153, "x53": 153, "20265": 153, "9335": 153, "23064": 153, "5613": 153, "8787": 153, "3796": 153, "24951": 153, "1898": 153, "65483": 153, "0568": 153, "x54": 153, "12226": 153, "8108": 153, "6517": 153, "5063": 153, "8760": 153, "0607": 153, "25004": 153, "1137": 153, "550": 153, "x55": 153, "3613": 153, "4768": 153, "4978": 153, "7999": 153, "7258": 153, "4680": 153, "13374": 153, "2092": 153, "6147": 153, "2555": 153, "x56": 153, "2196": 153, "0436": 153, "843": 153, "4185": 153, "6037": 153, "0092": 153, "542": [153, 176], "5563": 153, "3849": 153, "5310": 153, "x57": 153, "909": [153, 174], "6884": 153, "1743": 153, "6261": 153, "2067": 153, "8299": 153, "x58": 153, "9437": 153, "6926": 153, "2426": 153, "0012": 153, "0247": 153, "8627": 153, "x59": 153, "2329": 153, "2374": 153, "8416": 153, "0656": 153, "4492": 153, "1133": 153, "9150": 153, "x60": 153, "8185": 153, "9507": 153, "1728": 153, "8628": 153, "5585": 153, "9216": 153, "x61": 153, "9612": 153, "6414": 153, "8610": 153, "5679": 153, "4903": 153, "x62": 153, "9958": 153, "6344": 153, "3310": 153, "8838": 153, "1079": 153, "x63": 153, "915": 153, "2771": 153, "4927": 153, "4901": 153, "6241": 153, "4576": 153, "4197": 153, "2745": 153, "8655": 153, "x64": 153, "856": [153, 189], "3795": 153, "6237": 153, "4183": 153, "1773": 153, "x65": 153, "8750": 153, "1471": 153, "9814": 153, "3264": 153, "518": 153, "2041": 153, "x66": 153, "8040": 153, "5694": 153, "5126": 153, "1304": 153, "8310": 153, "x67": 153, "7613": 153, "8714": 153, "1276": 153, "5998": 153, "9229": 153, "x68": 153, "2377": 153, "5655": 153, "18554": 153, "7387": 153, "1281": 153, "8980": 153, "33998": 153, "2360": 153, "38753": 153, "3671": 153, "x69": 153, "11008": 153, "3563": 153, "10291": 153, "6307": 153, "0696": 153, "2848": 153, "9167": 153, "9622": 153, "31184": 153, "6748": 153, "x70": 153, "6367": 153, "0944": 153, "6065": 153, "2219": 153, "0498": 153, "2939": 153, "18257": 153, "7123": 153, "5523": 153, "5234": 153, "x71": 153, "1700": 153, "944": 153, "6336": 153, "2868": 153, "0223": 153, "4012": 153, "0853": 153, "308": 153, "2546": 153, "x72": 153, "4031": 153, "2392": 153, "0986": 153, "5452": 153, "4741": 153, "1802": 153, "x73": 153, "1604": 153, "8538": 153, "1639": 153, "6859": 153, "3277": 153, "1609": 153, "6830": 153, "4819": 153, "3905": 153, "x74": 153, "766": 153, "9861": 153, "3365": 153, "0761": 153, "0021": 153, "278": [153, 189], "1721": 153, "1255": 153, "8001": 153, "x75": 153, "2563": 153, "1016": 153, "2045": 153, "2530": 153, "2103": 153, "6573": 153, "4261": 153, "2228": 153, "x76": 153, "596": 153, "8511": 153, "7614": 153, "8319": 153, "0046": 153, "6620": 153, "0402": 153, "x77": 153, "1033": 153, "7653": 153, "1865": 153, "5885": 153, "5541": 153, "5795": 153, "4691": 153, "2623": 153, "6442": 153, "655": 153, "012": [153, 174], "119": 153, "141": 153, "712": 153, "4390541685726112": 153, "smallest": [153, 195, 196], "09e": 153, "strong": 153, "get_feature_names_out": 153, "input_featur": 153, "pft": 153, "061316": 153, "003511": 153, "003461": 153, "019779": 153, "000455": 153, "306582": 153, "939526": 153, "009773": 153, "030263": 153, "000096": 153, "000296": 153, "001315": 153, "000916": 153, "000138": 153, "004070": 153, "000021": [153, 173], "000612": 153, "018090": 153, "035236": 153, "001373": 153, "001922": 153, "065438": 153, "000206": 153, "205924": 153, "974706": 153, "004572": 153, "014552": 153, "000013": 153, "000192": 153, "000212": 153, "000613": 153, "000008": 153, "000121": 153, "001772": 153, "042579": 153, "001319": 153, "001919": 153, "101349": 153, "000336": 153, "293852": 153, "947522": 153, "005996": 153, "020210": 153, "000014": 153, "000345": 153, "000408": 153, "001163": 153, "000005": 153, "000131": 153, "003314": 153, "053638": 153, "000920": 153, "001456": 153, "037547": 153, "000421": 153, "206890": 153, "973147": 153, "007627": 153, "025210": 153, "000058": 153, "000024": [153, 173], "000549": 153, "000636": 153, "000079": 153, "001816": 153, "000010": 153, "000226": 153, "005188": 153, "071498": 153, "002413": 153, "002949": 153, "010725": 153, "000447": [153, 173], "366428": 153, "920540": 153, "008848": 153, "026812": 153, "000078": 153, "000237": 153, "000981": 153, "000108": 153, "002971": 153, "000016": 153, "000446": 153, "012282": 153, "xnam": 153, "pval": 153, "pvalu": [153, 180], "630773e": 153, "288486e": 153, "462679e": 153, "327338e": 153, "970958e": 153, "905133e": 153, "128466e": 153, "016020e": 153, "289041e": 153, "519337e": 153, "351547e": 153, "721775e": 153, "278805e": 153, "291916e": 153, "249665e": 153, "192719e": 153, "657965e": 153, "010018e": 153, "225201e": 153, "960632e": 153, "109039e": 153, "646809e": 153, "annot": 154, "mypy": 154, "formatt": [154, 240, 246], "ruff": 154, "0x7fec374f5ed0": 154, "de_autr": 154, "sigma_or_n": [154, 156], "nouvel_ensembl": [154, 156], "rotation1": [154, 165], "rotation2": [154, 165], "test_rotation1": [154, 165], "de0": [154, 165], "test_rotation2": [154, 165], "virtuel": [155, 167], "range_lik": 155, "0x7f1dc597b220": 155, "\u00e9met": 155, "random_generator": 155, "15382301030555623": 155, "8963148242847391": 155, "5960121288362235": 155, "20451752514212185": 155, "8937299506306294": 155, "leave_generator": 155, "accroch": [155, 227, 246], "textwrap": [155, 157], "add_al": 155, "profondeur_maximal": [155, 157], "pleft": [155, 157], "pright": [155, 157], "bcdefghijkl": 155, "al\u00e9aatoir": 155, "numeros": 155, "3732": 155, "04it": 155, "2136": 155, "80it": 155, "test_compos": 156, "verbeux": [156, 170, 244], "__eq__": [156, 157, 158, 225], "__matmul__": 156, "decompos": 156, "applique_decomposition_identit": 156, "test_decompose1": 156, "test_decompose2": 156, "parent": [156, 233, 243], "considered": 156, "profondeur_somme_count": 157, "sleft": 157, "cleft": 157, "sright": 157, "cright": 157, "6666666666666667": 157, "bizarr": [157, 201, 204], "adjoint": [158, 190], "__repr__": [158, 159, 225], "bought": 158, "similarity": 158, "similarit": 158, "addict": 159, "4x4": [159, 205], "creer_jeu": 159, "position_libr": 159, "nombre_aleatoir": 159, "joue_ligne_colon": 159, "lc": 159, "non_null": 159, "non_null2": 159, "joue_coup": 159, "coup_suiv": 159, "c2048": 159, "calcule_scor": 159, "62it": 159, "84it": 159, "coll": [159, 210], "c2048_4": 159, "sharey": 159, "\u00e9leg": [160, 179, 197, 225, 246], "dictionnairr": 160, "846651": 160, "lng": 160, "285811": 160, "orthographi": [160, 228], "autocomplet": 160, "6371": 160, "dlat": 160, "radian": 160, "dlon": 160, "atan2": [160, 225, 239], "station1": 160, "station2": 160, "emil": 160, "zol": 160, "847030": 160, "295262": 160, "6928550943713419": 160, "rigid": 160, "__rshift__": [160, 225], "retir": [161, 207, 233, 246], "diff\u00e9": 161, "minis": 161, "appendleft": [161, 234], "2462739999955374e": 161, "0353370000029826e": 161, "81406999999308e": 161, "796050000029936e": 161, "953019999920797e": 161, "313129999987723e": 161, "568269999956101e": 161, "580999999987398e": 161, "447889999933977e": 161, "401670000057492e": 161, "71205999999438e": 161, "6167699999641626e": 161, "fen": 161, "977897000002485e": 161, "178353999994215e": 161, "823300000178278e": 161, "471699999769044e": 161, "712876000006872e": 161, "798504000003959e": 161, "035500000005414e": 161, "195899999918766e": 161, "84480600000461e": 161, "923587000006591e": 161, "347799999479321e": 161, "471000000601634e": 161, "162": 162, "105": [162, 229, 233], "simulation_multinomial": 162, "library": 162, "ale": [162, 208], "430": 162, "pc": 162, "poids_cumul": 162, "poids_cumule_tr": 162, "009419400001206668": 162, "007181299999501789": 162, "010566299999481998": 162, "0066910000023199245": 162, "007558699999208329": 162, "006804499997087987": 162, "poids_tr": 162, "00013789999866276048": 162, "00010370000018156134": 162, "0004912999975204002": 162, "00014940000255592167": 162, "950000170036219e": 162, "0002525000018067658": 162, "nomrbr": 162, "06869539999752305": 162, "00884070000029169": 162, "08114130000103614": 162, "0094169999974838": 162, "06719900000098278": 162, "01211440000042785": 162, "stockag": 162, "pch": 163, "add_patch": 163, "surface_invers": 163, "6325000000000005": 163, "surface_inverse_dicho": 163, "63232421875": 163, "y3": 163, "surface_inv_t": 163, "63234375": 163, "d\u00e9fectu": 163, "surface_inv_math": 163, "6324555320336759": 163, "3675444679663242": 163, "152": [163, 171], "coloriage_diagonal": 163, "concr\u00e9tis": 163, "comprom": [163, 187], "joueur": [164, 199, 205, 246], "damier_exempl": 164, "cherche_dam": 164, "plat": [164, 167, 207], "exlu": 164, "position_prise_direct": 164, "position_dam": 164, "position_pris": 164, "exo_d": 165, "am\u00e8nent": 165, "nouveau_d": 165, "tourne_d": 165, "valjean": 166, "coset": 166, "fantin": 166, "marius": 166, "pontmercy": 166, "gavroch": 166, "th\u00e9nardi": 166, "antagon": 166, "javert": 166, "monsieur": [166, 170, 217, 227], "madam": 166, "babet": 166, "claquesous": 166, "montparn": 166, "gueulem": 166, "brujon": 166, "bamatabois": 166, "victurnien": 166, "amis": 166, "enjolr": 166, "combeferr": 166, "courfeyrac": 166, "prouvair": 166, "feuilly": 166, "bahorel": 166, "lesgl": 166, "joly": 166, "grantair": 166, "secondair": [166, 246], "favourit": 166, "dahli": 166, "z\u00e9phin": 166, "f\u00e9lix": 166, "tholomyes": 166, "listoli": 166, "fameuil": 166, "blachevel": 166, "fauchelevent": 166, "mabeuf": 166, "azelm": 166, "toussaint": 166, "luc": 166, "gillenormand": 166, "georg": [166, 234], "\u00e9v\u00eaqu": 166, "myriel": 166, "baptistin": 166, "magloir": 166, "gerv": 166, "modulo": [166, 228, 240], "congruentiel": 166, "22695477": 166, "c_n": 166, "\u00e9niem": [166, 248], "hashlib": [166, 243], "unsigned": 166, "5381": 166, "ds_legend": 166, "repartit": 166, "sha256": 166, "digest": 166, "d4": 166, "light_hash": 166, "d5": 166, "load_ir": 167, "load_dat": 167, "feature_nam": 167, "fleur": 167, "target_nam": 167, "sepal": 167, "petal": 167, "virginic": 167, "148": [167, 182], "n5": 167, "setos": 167, "n4": 167, "lengt": 167, "florid": 167, "georgi": 167, "alask": 167, "quebec": 167, "versicolor": 167, "ireland": 167, "flatbuffer": 167, "messagepack": 167, "coloriage_carr": 167, "histogramme_rapid": 167, "dummy": [167, 170], "exercice_json_xml": 167, "exercice_regex": 167, "tableau_contingent": 167, "nbheap": 167, "classes_2048": 167, "profile_gin": 167, "pivot_gauss": [167, 173, 222], "profiling_exampl": 167, "classes_metro": 167, "exercice_p": 167, "code_multinomial": 167, "code_liste_tupl": 167, "tri_nlnd": 167, "structures_donnees_convers": 167, "exercice_serialisation_json": 167, "json_text": 167, "res2": 167, "html_text": 167, "to_html": 167, "thead": 167, "styl": [167, 175, 177, 229, 240], "tbody": [167, 178], "df_html": 167, "read_html": 167, "df_locat": 167, "merged": 167, "450": [167, 176, 177, 194], "df_locations2": 167, "dfe": 167, "openpyxl": [167, 241], "myzip": 167, "crashed": 167, "executing": 167, "review": 167, "identify": 167, "failur": 167, "href": [167, 178, 208], "aka": 167, "vscodejupyterkernelcrash": 167, "viewoutput": 167, "enregist": 167, "contig\u00fc": 167, "sock": 167, "sotck": 167, "reviendront": 167, "communiqu": [167, 170, 193, 244], "surface_cerl": 168, "surface_cercl": 168, "53981633974483": 168, "inscrit": [168, 213, 246], "estimation_p": 168, "dedans_enti": 168, "surface_cercle_p": 168, "tri_al": 168, "dommag": 168, "tri_alea2": 168, "m\u00e8nen": 168, "tri_alea3": 168, "eval_c": 168, "cs": 168, "ec": [168, 208], "alentour": 168, "regular": [169, 207, 248], "exrp": 169, "unicod": [169, 237], "unicodedat": 169, "strip_accent": 169, "nfd": [169, 190], "t\u00eatu": 169, "tetu": 169, "text_sans_accent": 169, "findall": [169, 178, 207, 208, 248], "za": [169, 248], "signifi": [169, 217, 225, 227, 228, 233, 240, 243, 246], "extract_words_lettr": 169, "nje": 169, "nqui": 169, "ngolf": 169, "nlanc": 169, "ndan": 169, "npaix": 169, "nque": 169, "nsilenc": 169, "02d": [169, 207], "296": 169, "301": [169, 246], "346": [169, 176], "h\u00e9t\u00e9rogen": 170, "m\u00e9anism": 170, "lis": [170, 241], "141592653589793": [170, 243], "comp": 170, "314": 170, "conteneur": [170, 240], "wikidat": 170, "magoo": 170, "creator": 170, "millard": 170, "kaufman": 170, "hubley": 170, "cartoon": 170, "aventur": 170, "c\u00e9lebr": 170, "neuf": [170, 197, 240], "simplejson": 170, "ijson": 170, "wikidatawik": 170, "entit": [170, 216, 225, 239], "latest": 170, "lexem": 170, "bz2": 170, "l4": 170, "lemm": 170, "windsurf": 170, "lexicalcategory": 170, "q24905": 170, "q1860": 170, "claim": [77, 170], "p5238": 170, "orjson": 170, "mainsnak": 170, "snaktyp": 170, "datavalu": 170, "entity": 170, "numeric": [170, 189, 240], "3324": 170, "l3324": 170, "wikibas": 170, "entityid": 170, "datatyp": 170, "qualifi": 170, "p1545": 170, "2a1ced1dca90648ea7e306acbadd74fc81a10722": 170, "faad30b0": 170, "421c": 170, "803a": 170, "c1fd": 170, "b9a99a0eb35d": 170, "18537": 170, "l18537": 170, "7241753c62a310cf84895620ea82250dcea65835": 170, "d15285a1": 170, "4880": 170, "7a9b": 170, "bb1f": 170, "85403e1a785": 170, "p5187": 170, "monolingualtext": 170, "d4a63d17": 170, "43e": 170, "749d": 170, "5860": 170, "21b90feb83f7": 170, "windsurfing": 170, "grammaticalfeatur": 170, "q10345583": 170, "f3": 170, "q110786": 170, "q3910936": 170, "q51929074": 170, "f4": 170, "windsurfed": 170, "q1392475": 170, "f5": 170, "q1230649": 170, "f6": 170, "gloss": 170, "planch": [170, 208], "u00e0": 170, "voil": 170, "meluncur": 170, "angin": 170, "zh": 170, "u6ed1": 170, "u6d6a": 170, "u98a8": 170, "u5e06": 170, "hant": 170, "tw": 170, "u00e1": 170, "u00edng": 170, "hong": 170, "u00e2ng": 170, "u0e40": 170, "u0e25": 170, "u0e48": 170, "u0e19": 170, "u0e27": 170, "u0e34": 170, "u0e14": 170, "u0e4c": 170, "u0e0b": 170, "u0e23": 170, "u0e1f": 170, "u0441": 170, "u0451": 170, "u0440": 170, "u0444": 170, "u0438": 170, "u043d": 170, "u0433": 170, "u0431": 170, "u043e": 170, "u0437": 170, "u0448": 170, "u0430": 170, "u043c": 170, "u043b": 170, "u04e3": 170, "purjelautaill": 170, "p5137": 170, "191051": 170, "q191051": 170, "13e5f498": 170, "4deb": 170, "ea41": 170, "4d60": 170, "02c852b88b4c": 170, "p5972": 170, "l144039": 170, "7218013f": 170, "b84b": 170, "40fa": 170, "b57b": 170, "bc1ba2239bb8": 170, "pageid": 170, "54387040": 170, "lastrevid": 170, "1710596079": 170, "22t19": 170, "34z": 170, "l314": 170, "q1084": 170, "q7026": 170, "p5185": 170, "1775415": 170, "q1775415": 170, "45650151": 170, "4ed8": 170, "025d": 170, "e36ef22e6a2": 170, "q146786": 170, "54387050": 170, "684359491": 170, "24t07": 170, "21z": 170, "abandon": [170, 208], "dict2xml": 170, "lde": 170, "dill": [170, 241], "getstat": 170, "et_setstat": 170, "num": [171, 233], "count1": 171, "count2": 171, "count3": 171, "cytoolz": 171, "count4": 171, "swap": 172, "entas": 172, "dessine_t": 172, "_heapify_max_bottom": 172, "_heapify_max_up": 172, "topk_min": 172, "_heapify_max_bottom_posit": 172, "_heapify_max_up_posit": 172, "topk_min_posit": 172, "20001": 172, "div_by_numb": 172, "01it": 172, "deviat": [172, 173], "min_exec": [172, 173], "max_exec": [172, 173], "ttim": [172, 173], "context_siz": [172, 173], "warmup_tim": [172, 173], "001400": 172, "000271": 172, "001090": 172, "001892": 172, "014000": 172, "001138": 172, "002110": 172, "000517": 172, "001622": 172, "003214": 172, "021104": 172, "001633": 172, "001967": 172, "000299": 172, "001747": 172, "002545": 172, "019669": 172, "002969": 172, "002692": 172, "000611": 172, "002081": 172, "003779": 172, "026925": 172, "003983": 172, "4000": 172, "003096": 172, "000276": 172, "002660": 172, "003578": 172, "030960": 172, "003305": 172, "33it": 172, "008493": 172, "001842": 172, "006837": 172, "013038": 172, "084926": 172, "014053": 172, "009114": 172, "002111": 172, "007600": 172, "013480": 172, "091137": 172, "022466": 172, "011651": 172, "003198": 172, "008757": 172, "017215": 172, "116511": 172, "010779": 172, "011374": 172, "001973": 172, "009725": 172, "016044": 172, "113739": 172, "012545": 172, "950": 172, "016104": 172, "003647": 172, "011865": 172, "022728": 172, "161042": 172, "018794": 172, "1100": 172, "_heapify_max_up_position_simpl": 172, "topk_min_position_simpl": 172, "58650968": 173, "72315516": 173, "9137217": 173, "04526746": 173, "70012278": 173, "87604076": 173, "92402115": 173, "36865515": 173, "00362559": 173, "26361505": 173, "pivot_gauss2": 173, "pivot_gauss3": 173, "numpy1": 173, "numpy2": 173, "17it": 173, "000028": 173, "000125": 173, "000512": 173, "000728": 173, "000110": 173, "000197": 173, "001367": 173, "000253": 173, "001134": 173, "000540": 173, "000623": 173, "002258": 173, "011340": 173, "003184": 173, "001312": 173, "000678": 173, "000639": 173, "002858": 173, "013121": 173, "001035": 173, "000375": 173, "000184": 173, "000233": 173, "000818": 173, "003753": 173, "001292": 173, "001557": 173, "001094": 173, "000686": 173, "003803": 173, "015571": 173, "016613": 173, "000404": 173, "000062": 173, "000331": 173, "000553": 173, "004045": 173, "000364": 173, "000471": 173, "000440": 173, "000545": 173, "004713": 173, "000482": 173, "003798": 173, "001491": 173, "002594": 173, "007715": 173, "037978": 173, "018972": 173, "001324": 173, "000265": 173, "001054": 173, "002030": 173, "013239": 173, "001341": 173, "000820": 173, "000190": 173, "000602": 173, "001140": 173, "008200": 173, "000651": 173, "004260": 173, "001177": 173, "002724": 173, "006471": 173, "042603": 173, "005198": 173, "001690": 173, "000268": 173, "001100": 173, "002116": 173, "016902": 173, "001080": 173, "009320": 173, "002581": 173, "005762": 173, "013509": 173, "093197": 173, "015497": 173, "001664": 173, "000133": 173, "001458": 173, "001827": 173, "016641": 173, "001309": 173, "005314": 173, "001348": 173, "003848": 173, "008252": 173, "053141": 173, "016670": 173, "001629": 173, "000216": 173, "001459": 173, "002045": 173, "016286": 173, "001499": 173, "011036": 173, "003890": 173, "007070": 173, "018254": 173, "110356": 173, "017467": 173, "002637": 173, "000582": 173, "001846": 173, "003606": 173, "026375": 173, "002417": 173, "021563": 173, "003232": 173, "017314": 173, "029488": 173, "215629": 173, "028747": 173, "004673": 173, "001109": 173, "003391": 173, "005935": 173, "046730": 173, "005792": 173, "profilag": 174, "_gini_sort": 174, "_gini_in": 174, "spy": [174, 175], "centiem": 174, "ralent": [174, 175, 246], "profiler": 174, "sortby": [174, 175], "print_stat": [174, 175, 176, 189], "ordered": [174, 175, 176, 189], "ncall": [174, 175, 176, 189], "tottim": [174, 175, 176, 189], "percall": [174, 175, 176, 189], "cumtim": [174, 175, 176, 189], "lineno": [174, 175, 176, 189, 229, 231], "venv": [174, 207], "interactiveshel": [174, 175, 189], "3472": [174, 175, 189], "run_cod": [174, 175, 189], "usr": [174, 189, 207, 229], "codeop": [174, 175, 189], "__call__": [174, 175, 189], "ipykernel_23329": 174, "1877708867": 174, "1359775409": 174, "contextlib": [174, 175], "279": [174, 175, 229], "traitlet": [174, 175], "692": [174, 175], "__get__": [174, 175], "compilerop": [174, 175, 207], "extra_flag": [174, 175], "3424": [174, 175], "listcomp": [174, 175, 176, 189, 225], "1229": [174, 175], "user_global_n": [174, 175], "_lsprof": [174, 176], "11038": 174, "841": 174, "4034582288": 174, "024": 174, "436": 174, "914": 174, "058": 174, "060": 174, "007": 174, "398": 174, "013": [174, 176], "039": 174, "_gini_final_fast": 174, "gini_fast": 174, "018": 174, "017": 174, "543": 174, "1862792531": 174, "866": 174, "867": 174, "530": 174, "070": 174, "output_html": 174, "_gini_cumsum2": 174, "_gini_cumsum2b": 174, "gini2": 174, "023": 174, "580": 174, "004": 174, "239060152": 174, "926": 174, "905": 174, "057": 174, "040": 174, "042": 174, "908": 174, "649": 174, "030": 174, "_gini_cumsum3b": 174, "total0": 174, "total1": 174, "_gini_cumsum3": 174, "gini3": 174, "022": [174, 176], "1743022160": 174, "059": 174, "064": 174, "921": 174, "699": 174, "028": [174, 176], "077": 174, "upload": 175, "wikimedi": 175, "9f": 175, "convolutionandpooling": 175, "signal": [175, 246, 248], "convolve2d": 175, "img": [175, 178], "11111111": 175, "000002": 175, "000004": 175, "convolve_na": 175, "9999995": 175, "000001": 175, "convolve_naive2": 175, "999998": 175, "retournent": [175, 240, 248], "test_unitair": 175, "decimal": [175, 239], "devien": 175, "_get_indic": 175, "_is_out": 175, "im2col_na": 175, "kernel_shap": 175, "fill_valu": 175, "output_shap": 175, "middl": 175, "kernel_siz": 175, "data_siz": 175, "i_dat": 175, "i_kernel": 175, "t_dat": 175, "t_kernel": 175, "i_out": 175, "convolve_im2col_na": 175, "conv": 175, "999996": 175, "test_unitaire2": 175, "dirnam": [175, 189, 241], "exec_prefix": 175, "profile_cod": 175, "133426": 175, "847": 175, "424": 175, "ipykernel_8787": 175, "3679460054": 175, "3311625431": 175, "88200": 175, "44100": 175, "fromnumeric": [175, 176, 189], "2979": 175, "_wrapreduct": [175, 176, 189], "dictcomp": [175, 176], "2974": 175, "_prod_dispatch": 175, "profileur": [175, 176], "text_prof": 175, "pre": 175, "00032": 175, "79024": 175, "00211": 175, "78992": 175, "29408": 175, "78693": 175, "00018": 175, "00065": 175, "00448": 175, "00134": 175, "00383": 175, "00025": 175, "ict": 175, "00017": 175, "00052": 175, "unc": 175, "00155": 175, "ufunc": [175, 176, 189], "24745": 175, "40406": 175, "176400": 175, "08453": 175, "07207": 175, "08270": 175, "00021": 175, "00007": 175, "00037": 175, "00049": 175, "00019": 175, "00087": 175, "176600": 175, "08463": 175, "88300": 175, "07226": 175, "proc\u00e8dent": 175, "interromp": 175, "enregistrent": [175, 231], "marqueur": 175, "interrompu": [175, 239], "interrompr": [175, 217, 233, 237, 239], "sampling": [175, 194], "d\u00e9buggag": 175, "im2col_recurs": 175, "im2col_naive_implement": 175, "fall_back_dim": 175, "func": [175, 176, 233], "unfold": 175, "padding": 175, "switch": 175, "k0": 175, "mini_kernel": 175, "mini_shap": 175, "cc2": 175, "new_shap": 175, "resh": 175, "convolve_im2col_recurs": 175, "test_unitaire3": 175, "r\u00e9impl\u00e9ment": 176, "9644453525543213": 176, "sigma2": 176, "001481771469116211": 176, "doprofil": 176, "normpath": [176, 189], "getcwd": [176, 233, 241], "base_prefix": 176, "dump_stat": 176, "10000000": 176, "6027283668518066": 176, "00013383": 176, "_distn_infrastructur": 176, "1958": 176, "_continuous_distn": 176, "361": 176, "_pdf": 176, "_norm_pdf": 176, "_multiarray_umath": 176, "implement_array_funct": 176, "048": 176, "__array_function__": 176, "internal": 176, "function_bas": 176, "1912": [176, 191, 192], "_insert": 176, "_support_mask": 176, "putmask": 176, "559": 176, "argsreduc": 176, "2406": 176, "2307": 176, "604": 176, "broadcast_array": 176, "stride_trick": 176, "480": [176, 179], "546": 176, "340": 176, "_broadcast_to": 176, "_ufunc_config": 176, "seterr": 176, "atleast_1d": 176, "shape_bas": 176, "416": 176, "_broadcast_shap": 176, "geterr": 176, "538": 176, "seterrobj": 176, "geterrobj": 176, "genexpr": 176, "asarray": 176, "1965": 176, "promote_typ": 176, "_argcheck": 176, "_maybe_view_as_subclass": 176, "2302": 176, "_any_dispatch": 176, "multiarray": 176, "1961": 176, "_shape_dispatch": 176, "ndit": 176, "1908": 176, "_place_dispatch": 176, "_get_support": 176, "asanyarray": 176, "_parse_arg": 176, "_atleast_1d_dispatch": 176, "2401": 176, "_all_dispatch": 176, "_broadcast_arrays_dispatch": 176, "1882781982421875": 176, "ipykernel_29119": 176, "200996087": 176, "guis": 176, "fatal": 177, "dicho": [177, 216], "liste_trie": 177, "recherche_dichotomique_recurs": 177, "parametres": 177, "para\u00eetr": [177, 225], "recherche_dichotomique_recursive2": 177, "pok\u00e9mon": 178, "pokemondb": 178, "demandon": 178, "pok\u00e9dex": 178, "breeding": 178, "databas": 178, "dossi": 178, "shutil": [178, 243], "bs4": 178, "utilison": 178, "mozill": 178, "req": 178, "pokedex": 178, "header": 178, "beautifulsoup": 178, "lxml": 178, "liste_pokemon": 178, "span": [178, 248], "infocard": 178, "lg": 178, "get_pag": 178, "pokemon_nam": 178, "url_pokemon": 178, "get_cara_pokemon": 178, "defaultdict": 178, "vital": 178, "table_body": 178, "findchildren": 178, "findchild": 178, "gettext": 178, "bulbasaur": 178, "ivysaur": 178, "venusaur": 178, "charmand": 178, "charmeleon": 178, "charizard": 178, "squirtl": 178, "spec": 178, "abilit": 178, "ev": [178, 208, 233], "catch": 178, "hp": 178, "attack": 178, "defens": 178, "sp": [178, 190], "atk": 178, "grass": 178, "seed": 178, "kg": 178, "lb": 178, "overgrowchlorophyll": 178, "hidden": 178, "ability": 178, "0226": 178, "gold": 178, "silv": 178, "cryst": 178, "pok\u00e9ball": 178, "medium": 178, "slow": 178, "monst": 178, "femal": 178, "0227": 178, "0228": 178, "fir": 178, "lizard": 178, "blazesolar": 178, "dragon": 178, "flam": 178, "0230": 178, "artwork": 178, "jpg": 178, "out_fil": 178, "copyfileobj": 178, "butterfre": 178, "spearow": 178, "skimag": 178, "imio": 178, "imread": 178, "get_yax": 178, "amus": 179, "gh": 179, "recontruir": 179, "36960": 179, "cpython": 179, "dv": 179, "devrion": 179, "max_j": 179, "r\u00e9present": 179, "arr": [179, 206], "\u00e9norm": 179, "9x8": 179, "amat": 179, "aarr": 179, "00984": 179, "00112": 179, "nb_lin": 179, "nb_col": 179, "asymptot": 180, "evident": 180, "chi2_contingency": 180, "chi2": 180, "168598503892621": 180, "4045712090580829": 180, "nj": 180, "nij": 180, "52941176": 180, "88235294": 180, "58823529": 180, "47058824": 180, "61764706": 180, "16176471": 180, "impens": 181, "unit_test": 181, "valeur_attendu": 181, "tour_prend_piec": 181, "test_tour_prend_piec": 181, "tour_prend_piece_tupl": 181, "test_tour_prend_piece_tupl": 181, "_tour_prend_piec": 181, "colori": 181, "find_neighbour": 181, "echiqui": 181, "coloring": 181, "next_cas": 181, "tour_prend_piece_obstacl": 181, "test_": 181, "assurent": 181, "testent": 181, "pytest": 181, "commencenc": 181, "test_tour_prend_piece_obstacle_except": 181, "sorted_hist": 182, "recontruit": 182, "sorted_en": 182, "sort_with_hist": 182, "sort_with_nohist": 182, "immpl\u00e9ment": 182, "smoothsort": 182, "quoiqu": 182, "sort_with_nohist_nocopy": 182, "tableaux_aleatoir": 182, "enss": 182, "fonc": [182, 229], "1e10": [182, 192], "nlnn": 182, "6e": 182, "grossi": [182, 213], "403": 182, "1096": 182, "2980": 182, "8103": 182, "22026": 182, "59874": 182, "162754": 182, "442413": 182, "df100": 182, "dfm": 182, "1e9": 182, "singuli": [183, 248], "z2": [183, 184], "npm": [183, 184], "44444444": 183, "pp": 183, "mp": 183, "lambda_3": 183, "simult": [183, 184], "17179957": 184, "80900898": 184, "53083278": 184, "48698277": 184, "95015277": 184, "66842305": 184, "53400158": 184, "42468545": 184, "41318128": 184, "97269198": 184, "62935172": 184, "0672538": 184, "88952227": 184, "09758362": 184, "36428305": 184, "00968737": 184, "07225686": 184, "0111879": 184, "26264038": 184, "16277675": 184, "05453658": 184, "varvar": 184, "99040557": 184, "31065402": 184, "4426555": 184, "09744081": 184, "13884485": 184, "19784207": 184, "multiply": 184, "95440895": 184, "89026339": 184, "71682496": 184, "91433544e": 184, "55111512e": 184, "77555756e": 184, "44438859e": 184, "60670907e": 184, "88137173e": 184, "square_root_matrix": 184, "30467222": 184, "77731521": 184, "55914512": 184, "95469126": 184, "96344225": 184, "9528626": 184, "33226763e": 184, "06581410e": 184, "44089210e": 184, "59780655": 184, "8510365": 184, "45002008": 184, "24634204": 184, "12707857": 184, "14682284": 184, "homomorph": [185, 186], "pr\u00e9serv": [185, 186], "fully": [185, 186], "encrypt": [185, 186], "keygen": [185, 186], "secret": [185, 186], "pk": [185, 186], "tau": [185, 186], "r_p": [185, 186], "2r": [185, 186], "decrypt": [185, 186], "tutoriel_graph": [187, 188], "xe9cr": [187, 188], "xe0": [187, 188], "minel": [187, 188], "xe9trang": [187, 188], "extr": [187, 188], "xeam": [187, 188], "spanning": [187, 188], "satisf": 187, "laplacien": [187, 188], "construis": [187, 201], "directionnel": 187, "traduisent": 187, "eigen": [187, 188], "eric": 187, "kolaczyk": 187, "compl\u00e9mentair": [187, 241], "phi": 187, "x_v": 187, "84737386691659533": [187, 188], "95848816613228727": [187, 188], "28893525107454354": [187, 188], "66073249195336492": [187, 188], "60382037086559148": [187, 188], "13747945088383384": [187, 188], "21951613156582261": [187, 188], "040905525433785228": [187, 188], "21613062123493632": [187, 188], "096875623632852625": [187, 188], "99787588721497178": [187, 188], "79337171783327132": [187, 188], "18576957348508683": [187, 188], "78396225027633837": [187, 188], "23875443625588322": [187, 188], "35497638429086975": [187, 188], "8713637939628045": [187, 188], "22983756618811024": [187, 188], "28301724069085921": [187, 188], "99408996134013161": [187, 188], "39792684083973429": [187, 188], "77105362865540716": [187, 188], "75452041353842147": [187, 188], "330325155167562": [187, 188], "24824845436118537": [187, 188], "95998690078041737": [187, 188], "92318434139996397": [187, 188], "38115765401571988": [187, 188], "54660304309415886": [187, 188], "62093667623480242": [187, 188], "58899996464290505": [187, 188], "9017292023892568": [187, 188], "60541336358687847": [187, 188], "28929082523865812": [187, 188], "87925379747840293": [187, 188], "94834058131858756": [187, 188], "61449632813730748": [187, 188], "94264237081849722": [187, 188], "13119804743502139": [187, 188], "44158556198130949": [187, 188], "20660796942108339": [187, 188], "915599021810789": [187, 188], "3097131996826511": [187, 188], "81979953110332837": [187, 188], "89711055197298928": [187, 188], "7298496710091944": [187, 188], "22499060312661545": [187, 188], "072786594549671291": [187, 188], "012604758185058018": [187, 188], "36199484670070914": [187, 188], "92050750708863993": [187, 188], "91447248587261709": [187, 188], "26304069827339327": [187, 188], "026058147250910935": [187, 188], "59289937178711172": [187, 188], "86673111722782969": [187, 188], "70640070176443837": [187, 188], "64096733852134291": [187, 188], "049399266565914535": [187, 188], "54027723332288746": [187, 188], "26450585597978316": [187, 188], "50883097182669357": [187, 188], "91987410679455195": [187, 188], "97753050553942622": [187, 188], "5618293073273094": [187, 188], "27688371997865069": [187, 188], "91241761244784847": [187, 188], "090310675429991605": [187, 188], "90925789663628509": [187, 188], "40628594240956295": [187, 188], "3832814495252409": [187, 188], "66221025722485627": [187, 188], "74928785967005418": [187, 188], "32840192750838815": [187, 188], "25478832731446643": [187, 188], "70269825611412617": [187, 188], "54293534537395793": [187, 188], "87800254191632932": [187, 188], "89603330911109724": [187, 188], "77106655965183546": [187, 188], "29830084404349644": [187, 188], "97117954065316903": [187, 188], "075137754060910056": [187, 188], "086473140735377596": [187, 188], "120307047737505": [187, 188], "073651360408690802": [187, 188], "87835916829742444": [187, 188], "34622147871872355": [187, 188], "20567119579830373": [187, 188], "42658381934346423": [187, 188], "27715586337053655": [187, 188], "87999487046170488": [187, 188], "16364186693234739": [187, 188], "98604111274325335": [187, 188], "31830209002283116": [187, 188], "36372930495109934": [187, 188], "73434680601907532": [187, 188], "65926820980026724": [187, 188], "9830474686174655": [187, 188], "12246834322318068": [187, 188], "0293130665095358": [187, 188], "0529459366329164": [187, 188], "7755737603387041": [187, 188], "2685053357046323": [187, 188], "1926920625846602": [187, 188], "4857321786911326": [187, 188], "1445647965531025": [187, 188], "8943143876324848": [187, 188], "87403644639763023": [187, 188], "6464000746270226": [187, 188], "5545355219233219": [187, 188], "8988261206085766": [187, 188], "0785612031685732": [187, 188], "2948920530351256": [187, 188], "4682717483474708": [187, 188], "2364561845005868": [187, 188], "0695530720860349": [187, 188], "9439062757612424": [187, 188], "9563571060210054": [187, 188], "0678946581365616": [187, 188], "2485209278176157": [187, 188], "6386418932454814": [187, 188], "4800728241977779": [187, 188], "72646452125011518": [187, 188], "8341241854718167": [187, 188], "3482541467971951": [187, 188], "5558692651012178": [187, 188], "5624030818263908": [187, 188], "6768285328272157": [187, 188], "0106699901361971": [187, 188], "9175303893386597": [187, 188], "1087117017596031": [187, 188], "9111941479785823": [187, 188], "70001353796486": [187, 188], "5501953466420737": [187, 188], "8544512068951891": [187, 188], "9246058344257151": [187, 188], "123740240481137": [187, 188], "110657752575519": [187, 188], "0774760107085393": [187, 188], "6547967574269418": [187, 188], "6868873425221045": [187, 188], "9308254017076039": [187, 188], "9448006865754279": [187, 188], "0788555249744247": [187, 188], "396205767032443": [187, 188], "0516249434348621": [187, 188], "42035392996461629": [187, 188], "2989465364173602": [187, 188], "2706795830191275": [187, 188], "651698949077459": [187, 188], "1364194264447973": [187, 188], "3637257964296152": [187, 188], "5082040184760555": [187, 188], "2502121678035314": [187, 188], "5383631321594571": [187, 188], "5274668721202556": [187, 188], "473426056956777": [187, 188], "400114365788911": [187, 188], "0434200740148363": [187, 188], "513062501300436": [187, 188], "718209259961025": [187, 188], "3986743034356737": [187, 188], "0590996420222467": [187, 188], "6632346815268289": [187, 188], "8894243587379433": [187, 188], "2802341564965607": [187, 188], "4921791441653762": [187, 188], "5297912885016269": [187, 188], "5780900056883569": [187, 188], "0634598983096293": [187, 188], "2904478604819776": [187, 188], "0857595813036722": [187, 188], "6366192967000295": [187, 188], "5596385297232223": [187, 188], "3177709282351766": [187, 188], "1361714943468244": [187, 188], "9107871995830976": [187, 188], "7240531749202161": [187, 188], "8033709892679886": [187, 188], "1017624989859351": [187, 188], "54374796617700816": [187, 188], "3715344477591818": [187, 188], "2387553898801391": [187, 188], "8187172884547076": [187, 188], "1522284671097314": [187, 188], "0454193728074506": [187, 188], "1688190599740418": [187, 188], "9848808505730315": [187, 188], "5176013894081675": [187, 188], "1965918931505275": [187, 188], "0248869962483522": [187, 188], "4535361867324776": [187, 188], "4437155145638751": [187, 188], "2171776428648808": [187, 188], "0867326734388021": [187, 188], "5763512667620065": [187, 188], "785293447306691": [187, 188], "2489915323631275": [187, 188], "6589505137265448": [187, 188], "2817385669950028": [187, 188], "0553290947191964": [187, 188], "5481507299407191": [187, 188], "2080477057573553": [187, 188], "2817876881965624": [187, 188], "12512408298772948": [187, 188], "4831125975271719": [187, 188], "7834950195462245": [187, 188], "2064606598908139": [187, 188], "2421411165648886": [187, 188], "3461204499811092": [187, 188], "65966593807378215": [187, 188], "36559473517464181": [187, 188], "9248327086099932": [187, 188], "4223418217602317": [187, 188], "790875007038224": [187, 188], "9026572243192548": [187, 188], "21621909226838504": [187, 188], "16100173690141428": [187, 188], "8875278273011942": [187, 188], "2792213808538602": [187, 188], "9041297697847308": [187, 188], "4298318748123444": [187, 188], "8717874765920124": [187, 188], "2660121035644738": [187, 188], "8922848961161609": [187, 188], "4724681658043082": [187, 188], "8875314666371643": [187, 188], "1337207059785208": [187, 188], "2290596706950154": [187, 188], "0970619686963916": [187, 188], "4188864705446997": [187, 188], "824501293502089": [187, 188], "87811217547665232": [187, 188], "6141377553638456": [187, 188], "4736768016729647": [187, 188], "9646033676482686": [187, 188], "7291507868196327": [187, 188], "6494860793108481": [187, 188], "1744278681124489": [187, 188], "3291564189715617": [187, 188], "1892910878432268": [187, 188], "6260111359196396": [187, 188], "8029748349762125": [187, 188], "1110554486386404": [187, 188], "0087017311510849682": [187, 188], "812034605848817": [187, 188], "8310006567642712": [187, 188], "0643824785110239": [187, 188], "7806635726760689": [187, 188], "8724397920934015": [187, 188], "65927045141188367": [187, 188], "6202135060380289": [187, 188], "18281430910806151": [187, 188], "8134764145891591": [187, 188], "0328054369849538": [187, 188], "0315824591034124": [187, 188], "5339867923196042": [187, 188], "0906912982614791": [187, 188], "8390710019489158": [187, 188], "77019164393866146": [187, 188], "0099320163703895": [187, 188], "2239134319849398": [187, 188], "5227757084315567": [187, 188], "5342615497190861": [187, 188], "5402720724503229": [187, 188], "52313297572359074": [187, 188], "8268409663350287": [187, 188], "0896974241486603": [187, 188], "83931337455192145": [187, 188], "9824769771009292": [187, 188], "8062615072223389": [187, 188], "7151819974072808": [187, 188], "6553638508191835": [187, 188], "94296691141453703": [187, 188], "3332773280899097": [187, 188], "9080659785364102": [187, 188], "8017876981653527": [187, 188], "146797854411842": [187, 188], "4943345068020939": [187, 188], "6135304662636716": [187, 188], "5968234340599352": [187, 188], "2240732422979015": [187, 188], "40050907128273239": [187, 188], "0003615064702411": [187, 188], "3564534485947091": [187, 188], "5251603471425388": [187, 188], "3602495377614252": [187, 188], "70829180528117897": [187, 188], "8705912438690024": [187, 188], "9857439387875215": [187, 188], "3495410597763557": [187, 188], "7415118623160484": [187, 188], "8482449535792851": [187, 188], "1227029816875906": [187, 188], "943690794192229": [187, 188], "5533372938495322": [187, 188], "23654193364300019": [187, 188], "9320538122814632": [187, 188], "27398085527961841": [187, 188], "5379571426787906": [187, 188], "5479478416595258": [187, 188], "9952197756192462": [187, 188], "9519866242123729": [187, 188], "63418929807710789": [187, 188], "9714021509147459": [187, 188], "7514419719026835": [187, 188], "7952656655539831": [187, 188], "8168652955867248": [187, 188], "8059389896821614": [187, 188], "86083201462211": [187, 188], "6763339473293351": [187, 188], "2346287443442741": [187, 188], "0049022214331869": [187, 188], "0159172780756807": [187, 188], "6747832401686313": [187, 188], "9625789720275502": [187, 188], "21332969214064601": [187, 188], "4459656516053521": [187, 188], "8490131071943328": [187, 188], "4887755131556295": [187, 188], "0537691340713213": [187, 188], "1214658457920255": [187, 188], "8180419262808878": [187, 188], "0417225435808637": [187, 188], "4876076903545457": [187, 188], "2056831059665383": [187, 188], "4403227294912879": [187, 188], "29183542445509": [187, 188], "1299087065549616": [187, 188], "6894950904308068": [187, 188], "67877427899602139": [187, 188], "2334935303450196": [187, 188], "66692066781151726": [187, 188], "918359229911677": [187, 188], "43825691963852248": [187, 188], "0912552685819197": [187, 188], "9256467457380193": [187, 188], "9995400634925016": [187, 188], "2633779062253305": [187, 188], "3270510253578853": [187, 188], "8998811026998816": [187, 188], "4372749748248483": [187, 188], "800876689538256": [187, 188], "5720483206059228": [187, 188], "5479241832525954": [187, 188], "5107697954439923": [187, 188], "6063323885377114": [187, 188], "45355690226015": [187, 188], "3924594206301864": [187, 188], "8170391803389006": [187, 188], "3343907023480963": [187, 188], "1592191821861308": [187, 188], "551692003143347": [187, 188], "2147820707711716": [187, 188], "55930561729387951": [187, 188], "2364813901253862": [187, 188], "7059292544869302": [187, 188], "5980046177747229": [187, 188], "0606302788023871": [187, 188], "0235041652892747": [187, 188], "27015781708378661": [187, 188], "4303330714757383": [187, 188], "3989583334332432": [187, 188], "4649562148782955": [187, 188], "3524552397826168": [187, 188], "3322237797463616": [187, 188], "6813558717119386": [187, 188], "3359544685337736": [187, 188], "7104894884469877": [187, 188], "350410042767797": [187, 188], "8412188670946792": [187, 188], "8993273426849919": [187, 188], "5101185505218293": [187, 188], "3563537615645282": [187, 188], "0439247587050282": [187, 188], "3738404946436238": [187, 188], "43277784903448813": [187, 188], "6236691719193734": [187, 188], "8192122194763103": [187, 188], "3000303214498619": [187, 188], "7045156595962521": [187, 188], "2036876689968699": [187, 188], "22379027409222038": [187, 188], "0078193725337679": [187, 188], "33061456656172339": [187, 188], "3173753727230917": [187, 188], "3292728936983247": [187, 188], "17305051546078376": [187, 188], "3708524146324814": [187, 188], "18920570140751003": [187, 188], "7288547711089577": [187, 188], "5559793038807355": [187, 188], "4460955268542377": [187, 188], "65537111745445098": [187, 188], "3024274811626642": [187, 188], "32733974310015845": [187, 188], "6653194005399481": [187, 188], "3495524342659682": [187, 188], "50620561077402126": [187, 188], "6859406925109957": [187, 188], "0042337939426813": [187, 188], "4168309661540643": [187, 188], "3784247121303279": [187, 188], "0873449293614152": [187, 188], "8206900404120345": [187, 188], "3397623772131446": [187, 188], "2347446764630474": [187, 188], "8720948774765485": [187, 188], "6955132035521556": [187, 188], "9472576652843694": [187, 188], "3542922693748149": [187, 188], "030233796538444": [187, 188], "6199282129862145": [187, 188], "7351581782776853": [187, 188], "5709314373179808": [187, 188], "14607908112131446": [187, 188], "79251837326064": [187, 188], "37002429983216167": [187, 188], "3653059393186942": [187, 188], "8616789948811956": [187, 188], "6100436336617339": [187, 188], "8019087210485418": [187, 188], "5911421188072357": [187, 188], "6953052292111459": [187, 188], "3928959775316905": [187, 188], "049532260408768": [187, 188], "9169000088107522": [187, 188], "8042700374731648": [187, 188], "6636201843555991": [187, 188], "2856117402115821": [187, 188], "497386564362329": [187, 188], "1085015582769402": [187, 188], "1635806015318408": [187, 188], "51764720743541925": [187, 188], "3207617687324866": [187, 188], "6552485122750968": [187, 188], "9457154950840061": [187, 188], "4574030967957459": [187, 188], "13220998701481373": [187, 188], "1064026703010086": [187, 188], "6992062016898437": [187, 188], "6218017958370492": [187, 188], "4171784152426357": [187, 188], "1893570148164336": [187, 188], "53987360896641756": [187, 188], "62289304323418893": [187, 188], "6377915319211773": [187, 188], "95656595366184183": [187, 188], "5482370903224183": [187, 188], "6552715153624238": [187, 188], "42419842122106877": [187, 188], "9138981541477369": [187, 188], "5211086418661788": [187, 188], "7643908686171743": [187, 188], "3462875243179644": [187, 188], "4001664954474204": [187, 188], "8715548148469952": [187, 188], "7209034976257116": [187, 188], "3132712976844925": [187, 188], "0077653108424371": [187, 188], "8044349295045858": [187, 188], "7004396541700451": [187, 188], "6313151291578776": [187, 188], "7805282578575432": [187, 188], "3496033840422226": [187, 188], "5149407509344646": [187, 188], "4491799573779538": [187, 188], "4969549443875327": [187, 188], "59052341158001964": [187, 188], "5871839418980924": [187, 188], "8626995345211439": [187, 188], "530084220131168": [187, 188], "73947783901217035": [187, 188], "2278934560638541": [187, 188], "4480933790189707": [187, 188], "6638968948801822": [187, 188], "8603129450393652": [187, 188], "0034748779660814": [187, 188], "3783603559660618": [187, 188], "24711046251746965": [187, 188], "0245225170472958": [187, 188], "75233017871629115": [187, 188], "4003624728787472": [187, 188], "3204808270534789": [187, 188], "8530050107548528": [187, 188], "66555456366565435": [187, 188], "210607962975542": [187, 188], "4312598575388913": [187, 188], "8510534338146063": [187, 188], "0579141292803367": [187, 188], "8599892658343156": [187, 188], "1580465239922022": [187, 188], "6376354853614972": [187, 188], "6525127599513731": [187, 188], "9406618825179196": [187, 188], "3353268107001339": [187, 188], "5193520805659642": [187, 188], "9838132614191322": [187, 188], "5937246171656669": [187, 188], "_i": [187, 188], "nmat": 188, "29862811e": 188, "97516377e": 188, "10328629e": 188, "90790022e": 188, "11774822e": 188, "71706160e": 188, "10657750e": 188, "06987653e": 188, "47893457e": 188, "95288785e": 188, "17873789e": 188, "62159368e": 188, "00171710e": 188, "22716812e": 188, "43721861e": 188, "46689480e": 188, "50739404e": 188, "65758626e": 188, "67080933e": 188, "01271960e": 188, "06246640e": 188, "12023335e": 188, "15823780e": 188, "40007127e": 188, "42330441e": 188, "44200543e": 188, "48046940e": 188, "83472417e": 188, "88760137e": 188, "98652806e": 188, "05062459e": 188, "45716799e": 188, "55952462e": 188, "72589427e": 188, "86383519e": 188, "98776759e": 188, "24048853e": 188, "51749090e": 188, "76260241e": 188, "09890091e": 188, "16973825e": 188, "38422915e": 188, "54406301e": 188, "82908856e": 188, "06195525e": 188, "21987207e": 188, "51026374e": 188, "31385944e": 188, "36832387e": 188, "10194808e": 188, "12706645": 188, "1471807": 188, "11300729": 188, "1497489": 188, "15689742": 188, "15497599": 188, "15887778": 188, "15239956": 188, "1541509": 188, "15434079": 188, "15308929": 188, "14778115": 188, "14353765": 188, "14642567": 188, "13629278": 188, "13739056": 188, "1202737": 188, "15177162": 188, "1510202": 188, "14927889": 188, "15778361": 188, "13734517": 188, "00981551": 188, "12396176": 188, "14384261": 188, "14991691": 188, "0936683": 188, "10998677": 188, "11870976": 188, "16228832": 188, "15880678": 188, "17617328": 188, "12965455": 188, "13772134": 188, "14785981": 188, "13627598": 188, "17093183": 188, "1189228": 188, "10336518": 188, "12629383": 188, "14222274": 188, "13799138": 188, "12981884": 188, "16297189": 188, "15845984": 188, "13077619": 188, "15656133": 188, "16060489": 188, "11805402": 188, "14021942": 188, "createproximitymatrix": 188, "33607823e": 188, "69976843e": 188, "80285954e": 188, "41648335e": 188, "38278275e": 188, "51753802e": 188, "90919719e": 188, "88702158e": 188, "65910722e": 188, "18671103e": 188, "73374647e": 188, "45881912e": 188, "59966914e": 188, "63553433e": 188, "85061645e": 188, "08380506e": 188, "21989770e": 188, "05000993e": 188, "56991352e": 188, "65510715e": 188, "18345495e": 188, "rem\u00e9di": [189, 225, 239, 246], "memory_profil": 189, "datax": [189, 190], "datay": [189, 190], "n_clusters_per_class": [189, 190], "62557523": 189, "92972784": 189, "19327029": 189, "01669145": 189, "66440003": 189, "05373302": 189, "09569564": 189, "62733": 189, "05437465": 189, "43404744": 189, "88137987": 189, "1603541": 189, "97569429": 189, "28962313": 189, "06727548": 189, "81364917": 189, "15972723": 189, "99923386": 189, "25393473": 189, "67807834": 189, "74986482": 189, "68848993": 189, "83230911": 189, "15836161": 189, "71428315": 189, "53155132": 189, "49799497": 189, "53866452": 189, "55477724": 189, "79401366": 189, "sklpathf": 189, "sklpath": 189, "448": 189, "ipykernel_4917": 189, "1382514021": 189, "_classif": 189, "738": 189, "_pairwise_distances_reduct": 189, "_dispatch": 189, "_validate_dat": 189, "check_array": 189, "_assert_all_finit": 189, "threadpool_limit": 189, "threadpoolctl": 189, "2177": 189, "458": 189, "412": 189, "414": [189, 191], "813": 189, "num_thread": 189, "is_usable_for": 189, "get_num_thread": 189, "set_num_thread": 189, "ctyp": 189, "_method": 189, "_sum": 189, "1417": 189, "check_is_fitted": 189, "1140": 189, "391": [189, 229], "__getitem__": [189, 225], "_wrapfunc": 189, "_set_threadpool_limit": 189, "joblib": [189, 245], "411": 189, "effective_n_job": 189, "1379": 189, "_is_fitted": 189, "get_active_backend": 189, "_num_sampl": 189, "restore_original_limit": 189, "1017": 189, "etudi": [189, 243], "pairwise_dist": 189, "what_to_measur": 190, "07576929999959248": 190, "nf_set": 190, "nob": 190, "dt2": 190, "ball_tre": 190, "0035799999996015686": 190, "08653190000040922": 190, "010255199999846809": 190, "11729259999992792": 190, "005994999999529682": 190, "11148469999989175": 190, "004818200000045181": 190, "12828609999996843": 190, "005615799999759474": 190, "0024919999996200204": 190, "04157219999979134": 190, "007431699999870034": 190, "11408440000013798": 190, "0051083999996990315": 190, "3907441999999719": 190, "random_sparse_matrix": 190, "ratio_spars": 190, "nnz": 190, "what_to_measure_spars": 190, "nb_spars": 190, "sparse_ratio": 190, "16139359999942826": 190, "16765100000066": 190, "9546476190476191": 190, "157290099999955": 190, "9173545454545454": 190, "374867700000323": 190, "37886189999972": 190, "7777733333333333": 190, "63584069999979": 190, "mesuron": 190, "what_to_measure_perf": 190, "good": [190, 202], "0014494000006379792": 190, "perf": 190, "0015942999998515006": 190, "0019345000000612345": 190, "002628500000355416": 190, "001998000000639877": 190, "0025021000001288485": 190, "concordent": 190, "hyperplan": 190, "inert": 190, "what_to_measure_perf_acp": 190, "acp_dim": 190, "t1o": 190, "t2o": 190, "goodo": 190, "t0": 190, "x_train_pc": 190, "x_test_pc": 190, "002483399999618996": 190, "06338310000046476": 190, "22452249999969354": 190, "p_noacp": 190, "y_noacp": 190, "dt_noacp": 190, "perf_noacp": 190, "dt_train": 190, "dt_predict": 190, "0015590000002703164": 190, "0045598999995490885": 190, "0020978000002287445": 190, "003090600000177801": 190, "10930980000011914": 190, "009109900000112248": 190, "05428739999933896": 190, "13726130000031844": 190, "0553301999998439": 190, "046151300000019546": 190, "eton": 190, "transfer": [190, 237], "conseerv": 190, "absurd": [191, 192], "contred": 191, "matrix_distance_7398": [191, 192], "boulogn": [191, 192], "billancourt": [191, 192], "beauv": [191, 192], "85597": [191, 192], "courbevoi": [191, 192], "sevran": [191, 192], "26564": [191, 192], "colomb": [191, 192], "alfortvill": [191, 192], "36843": [191, 192], "bagneux": [191, 192], "marcq": [191, 192], "baroeul": [191, 192], "233455": [191, 192], "suresn": [191, 192], "gennevilli": [191, 192], "10443": [191, 192], "charlevill": [191, 192], "mezier": [191, 192], "bordeau": [191, 192], "\u00e9chapp": [191, 208, 240], "djikstr": 191, "skieur": [191, 192, 219], "rentrent": 191, "lou": 191, "arrang": 191, "t_n": [191, 192], "hlin": [191, 241], "t_3": 191, "t_4": 191, "t_": 191, "s_3": 191, "s_4": 191, "s_5": 191, "s_6": 191, "s_7": 191, "sigma_m": 191, "ski": [191, 192, 219], "4496565125341727": 191, "6181478314088333": 191, "6472124781567143": 191, "689855001829289": 191, "7069363711449275": 191, "720882923000757": 191, "7315603136077902": 191, "757295341401446": 191, "806174917827697": 191, "8273604346819485": 191, "539691655662206": 191, "5677016209991443": 191, "651632433144162": 191, "6723990573029228": 191, "6967500647083442": 191, "6991707543184964": 191, "7173171973288348": 191, "764722044308385": 191, "789682343736771": 191, "8113678294188096": 191, "8872585832253812": 191, "8910607675180564": 191, "893354126537998": 191, "9435870591562554": 191, "9577834515908243": 191, "caract\u00e8ris": 191, "v_0": 191, "sum_v": 191, "agorithm": 191, "dikjstr": 191, "fe": [191, 208], "1684": 191, "3437": 191, "348": 191, "3980": 191, "698": 191, "d\u00e9compress": [191, 241], "7zip": 191, "pysens": 191, "mac": [191, 241], "tar": 191, "60050": 191, "2363": 191, "2346": 191, "2025": 191, "2140": 191, "2428": 191, "2201": 191, "2506": 191, "2425": 191, "2557": 191, "vil": 192, "rejoindr": 192, "7888": 192, "keyerror": [192, 228, 248], "m\u00e9zi": 192, "816197": 192, "813197": 192, "795670": 192, "skis": [192, 219], "t_j": 192, "t_k": 192, "nec\u00e9ssair": 192, "restreindr": 192, "301415513544109": 192, "graph_notebook_sk": 192, "xymatrix": 192, "tmoertel": 193, "w_": [193, 194], "brib": [193, 194], "prisoner": [193, 194], "royaum": 193, "prison": [193, 194], "vivent": [193, 208], "rel\u00e2ch": [193, 233, 246], "liber": [193, 246], "parlent": 193, "veil": 193, "relach": 193, "x_k": 193, "k_i": 193, "k_a": 193, "k_t": 193, "sol": 194, "inter": 194, "benjamin": 194, "donnot": 194, "new_intervall": 194, "mymax": 194, "fondamental": [194, 240], "oracl": 194, "esoudr": 194, "priso": 194, "groupkfold": 194, "stratified": 194, "codeforc": [195, 196], "483a": [195, 196], "geologist": [195, 196], "sometim": [195, 196], "rainfall": [195, 196], "drainag": [195, 196], "basin": [195, 196], "elev": [195, 196], "altitud": [195, 196, 225], "subject": [77, 195, 196, 241], "rul": [195, 196], "wat": [195, 196], "neighboring": [195, 196], "sink": [195, 196], "otherwis": [77, 195, 196], "ti": [195, 196, 248], "west": [195, 196], "south": [195, 196], "drain": [195, 196], "directly": [195, 196], "indirectly": [195, 196], "labeled": [195, 196], "concatenated": [195, 196], "resulting": [195, 196], "lexicographically": [195, 196], "western": [195, 196], "alway": [195, 196, 231, 239, 243], "lead": [195, 196], "evil": [195, 196], "leagu": [195, 196], "hors": [195, 196], "deal": [77, 195, 196], "recently": [195, 196], "been": [195, 196], "far": [195, 196], "backstabbing": [195, 196], "decided": [195, 196], "department": [195, 196], "separat": [195, 196], "troublesom": [195, 196], "thoroughbred": [195, 196], "isn": [195, 196], "his": [195, 196], "valuabl": [195, 196], "figuring": [195, 196], "himself": [195, 196], "got": [195, 196], "loyal": [195, 196], "henchman": [195, 196], "uva": [195, 196], "10911": [195, 196], "job": [195, 196], "forming": [195, 196], "quiz": [195, 196], "mca": [195, 196], "cpci": [195, 196], "championship": [195, 196], "student": [195, 196], "interested": [195, 196], "participat": [195, 196], "consisting": [195, 196], "memb": [195, 196], "near": [195, 196], "sure": [195, 196], "x_3": [195, 196], "minimized": [195, 196], "fulkerson": 196, "flot": 196, "enrich": 197, "physiqu": [197, 241], "atout": 197, "tarot": 197, "mesparametr": 197, "pas_gradient": 197, "fonction_any": 197, "pronom": 197, "0x7fb13a470c10": 197, "autre_point": 197, "appliq": 197, "carremag": [197, 198], "rattach": 197, "4031242374328485": 197, "lx": 197, "738793548317167": 197, "000000000010186": 197, "est_nul": 197, "somme_ligne_colonne_diagonal": 198, "coefficient_un": 198, "est_mag": 198, "tous_les_carre_na": 198, "tous_les_carre_naif2": 198, "stop_aft": 198, "tous_les_carres_permut": 198, "firstn": 198, "380064799999673": 198, "tous_les_carres_permutation_ligne12_meme_somm": 198, "435667799996736": 198, "5677748000016436": 198, "tous_les_carr": 198, "version1": 199, "fonction1": [199, 233], "fonction2": [199, 239], "fonction3": 199, "fonction_final": 199, "version2": 199, "tirage_aleatoir": [199, 200], "precedent": [199, 200, 233, 239, 240], "moyenne_tirag": [199, 200], "tricheur": 199, "piecetruque": [199, 200], "piecetruqueemix": [199, 200], "al\u00e9atoiremnt": 199, "truque": [199, 200, 225], "d\u00e9cryptag": [201, 202], "polynom": 201, "2x": 201, "log_bas": 201, "9999999999999996": 201, "965784284662087": 201, "lettre_suiv": [201, 202], "valeur_absolu": 201, "acroym": 201, "compact": [201, 211, 212], "timecomplexity": 201, "pr\u00e9dictibl": 201, "aeco": 201, "eddard": [201, 202], "catelyn": [201, 202], "robb": [201, 202], "sansa": [201, 202], "arya": [201, 202], "brandon": [201, 202], "rickon": [201, 202], "theon": [201, 202], "rorbert": [201, 202], "cersei": [201, 202], "tywin": [201, 202], "jaim": [201, 202], "tyrion": [201, 202], "sha": [201, 202], "bron": [201, 202], "lancel": [201, 202], "joffrey": [201, 202], "sandor": [201, 202], "vary": [201, 202], "renly": [201, 202], "mots_lettre_posit": [201, 202], "dictionnaire_bien_chois": [201, 202], "reformul": 201, "jenesuispascod": [201, 202], "mhqhvxlvsdvfrgh": [201, 202], "dop": [201, 202], "traduit": [201, 239, 240, 248], "dictionnaire_chois": 202, "dictionair": 202, "unordered_map": 202, "stl": 202, "accessing": 202, "code_cesar": 202, "mschgjlgedgrrrt": 202, "int_a": 203, "6145744834544478": [203, 204], "ave": [204, 208], "2320146802585272": 204, "integrale_precis": 204, "val0": 204, "5050000000000003": [204, 219], "2196877891927724": 204, "piano": 204, "int2": [204, 207], "integrale_precise_2n": 204, "5000454610560389": 204, "81920": 204, "2169740198498182": 204, "int_0": 204, "xdx": 204, "discontinu": 204, "max_fp": 204, "last_f": 204, "fx": 204, "integrale_precise_derive": 204, "5004995004994989": 204, "integrale_bizarr": 204, "px": 204, "0625": 204, "2857142857142856": 204, "rationnel": 204, "tombent": 204, "integrale_mc": 204, "5443922662659958": 204, "integrale_mc_precis": 204, "moy0": 204, "5001005538840249": 204, "i_n": 204, "16m": 204, "16e4": 204, "500765653300686": 204, "885": 204, "create_gam": 206, "gameover1": 206, "masked_not_equal": 206, "gameov": 206, "gam": 206, "process_lin": 206, "prev": 206, "update_gam": 206, "reversed": 206, "grammair": [207, 209, 239, 248], "interag": 207, "capteur": 207, "tsv": [207, 241], "fallu": [207, 225], "literal": [207, 240], "pr\u00e9vus": [207, 228], "permanent": [207, 246], "vocat": [207, 208, 246], "condens": 207, "pyramide_bigarre": 207, "td2_1": [207, 218], "classes_heritage_correct": 207, "lemonde5": [207, 214], "voeux83": [207, 208], "classes_carre_mag": 207, "lemonde3": [207, 214], "blogny1": [207, 214], "blog3": [207, 214], "nytimes5": [207, 214], "classes_carre_magique_correct": 207, "integrale_rectangle_correct": 207, "nytimes2": [207, 214], "voeux05": [207, 208], "module_file_regex": 207, "__pycache__": [207, 243], "lemonde1": [207, 214], "nytimes8": [207, 214], "voeux06": [207, 208], "dictionnaire_vigener": 207, "voeux": [207, 208], "lemonde9": [207, 214], "voeux08": [207, 208], "texte_langue_correct": 207, "nytimes1": [207, 214], "voeux01": [207, 208], "premiers_pas_correct": 207, "nytimes9": [207, 214], "voeux74": [207, 208], "j2048": 207, "voeux75": [207, 208], "elpais2": [207, 214], "lequipe1": [207, 214], "voeux94": [207, 208], "lemonde7": [207, 214], "lemonde10": [207, 214], "seance4_excel": [207, 208], "arthur_charpentier2": [207, 213, 214], "afp2": [207, 213, 214], "inconnu2": [207, 214], "pyramide_bigarree_correct": 207, "afp1": [207, 213, 214], "lemonde8": [207, 214], "elpais5": [207, 214], "hex": [207, 211, 212, 240], "module_file_regex_correct": 207, "nytimes3": [207, 214], "voeux89": [207, 208], "arthur_charpentier3": [207, 213, 214], "voeux87": [207, 208], "lemonde11": [207, 214], "elpais4": [207, 214], "nytimes7": [207, 214], "lemonde2": [207, 214], "inconnu1": [207, 214], "lequipe2": [207, 214], "premiers_p": 207, "lemonde6": [207, 214], "blog1": [207, 214], "voeux09": [207, 208], "voeux90": [207, 208], "elpais7": [207, 214], "exemple_fichi": 207, "elpais6": [207, 214], "texte_langu": 207, "integrale_rectangl": 207, "voeux07": [207, 208], "classes_heritag": 207, "arthur_charpentier1": [207, 213, 214], "lemonde4": [207, 214], "blog2": [207, 214], "dictionnaire_vigenere_correct": 207, "variable_boucle_test": 207, "nytimes6": [207, 214], "elpais3": [207, 214], "variable_boucle_tests_correct": 207, "j2048_correct": 207, "nytimes4": [207, 214], "voeux79": [207, 208], "elpais1": [207, 214], "pragmat": 207, "reconnu": 207, "exportent": 207, "grop": 207, "volum": 207, "3x3": [207, 208], "gz": 207, "wav": 207, "mp3": [207, 241, 248], "ogg": 207, "musiqu": [207, 248], "mp4": 207, "vorb": 207, "v\u00f4tr": 207, "5403023058681398": [207, 208], "\u00eate": [207, 208], "n\u00e9": [207, 212, 236], "fonction_cos_sequent": [207, 208], "dynload": 207, "4161468365471424": [207, 208], "recharg": [207, 208, 239, 243], "async_helper": 207, "autocall": 207, "builtin_trap": 207, "completerlib": 207, "pr\u00e9ambul": 207, "1903": 207, "1957": 207, "indiff\u00e9rent": 207, "securit": [207, 208], "insecurit": [207, 208], "mako": [207, 208], "templating": [207, 208], "seance4_excel_mat": 208, "6414749515069115": 208, "4096411389655439": 208, "7991926327688407": 208, "9918119068265183": 208, "07379598399157106": 208, "4290244325276996": 208, "9337274118746318": 208, "17483162769873706": 208, "6159652170653446": 208, "4835251137894401": 208, "date1": 208, "2013": 208, "date0": 208, "birth": 208, "1975": [208, 236], "weekday": 208, "monmodule2": 208, "monmodule3": 208, "Mes": 208, "compatriot": 208, "peupl": 208, "rassembl": [208, 225], "respir": 208, "rythm": 208, "bat": 208, "coeur": 208, "f\u00eat": 208, "no\u00ebl": 208, "participent": 208, "joi": 208, "retrouvaill": 208, "chaleur": 208, "familial": 208, "amical": 208, "toulous": 208, "\u00e9preuv": 208, "solidar": 208, "amiti": 208, "nation": 208, "vivr": 208, "ignorecas": 208, "soldat": 208, "constru": 208, "victim": 208, "salu": 208, "avancent": 208, "avan": 208, "souffranc": 208, "gouvern": 208, "tristess": 208, "foi": 208, "profon": 208, "craint": 208, "\u00e9prouvent": 208, "angoiss": 208, "\u00e9treint": 208, "peur": 208, "exasper": 208, "entreprendr": 208, "int\u00e9": 208, "fiert": 208, "brutal": 208, "efforc": 208, "agi": 208, "souc": [208, 233], "d\u00e9fendr": 208, "enver": 208, "trah": 208, "hypocris": 208, "urg": 208, "risquent": [208, 233], "leu": 208, "doulour": 208, "cett": 208, "responsab": 208, "prot": 208, "devo": 208, "persuad": 208, "fragil": 208, "r\u00e9form": 208, "p\u00e9nal": 208, "ministr": 208, "fran\u00e7ois": 208, "fillon": 208, "cepen": 208, "hommag": 208, "froid": 208, "partenair": 208, "renonc": [208, 240], "boulevers": 208, "r\u00e9publ": 208, "redon": 208, "JE": 208, "VOUS": 208, "NE": 208, "ennui": 208, "AI": 208, "dej": 208, "decrit": 208, "ET": 208, "DE": 208, "PAR": 208, "QUE": 208, "MES": 208, "SOIENT": 208, "LES": 208, "AU": 208, "LA": 208, "societ": 208, "francais": 208, "SOIT": 208, "fraternit": 208, "EST": 208, "AUX": 208, "agriculteur": 208, "artisan": 208, "devront": [208, 239], "examin": 208, "QU": 208, "EN": 208, "CE": 208, "rol": 208, "LUI": 208, "LE": 208, "OU": 208, "NOUS": 208, "appa": 208, "PAS": 208, "AVEZ": 208, "ILS": 208, "ONT": 208, "recu": 208, "AVEC": 208, "SUIS": 208, "etaient": 208, "couvert": 208, "LEUR": 208, "EUX": 208, "NOS": 208, "departem": 208, "a_l_etrang": 208, "QUI": 208, "malheur": 208, "SONT": 208, "hopital": 208, "egal": 208, "salut": 208, "travailleur": 208, "imm": 208, "chretien": 208, "TU": 208, "SOIES": 208, "UNE": 208, "accueil": 208, "POUR": 208, "president": 208, "1976": [208, 248], "grandeu": 208, "ELLE": 208, "SUR": 208, "entent": 208, "ren": 208, "aymon": 208, "SES": 208, "echangent": 208, "conduit": 208, "MON": 208, "SON": 208, "revien": 208, "afriqu": 208, "ME": 208, "union": [208, 240], "soviet": 208, "urss": 208, "UN": 208, "prepar": 208, "av": 208, "UNS": 208, "promet": 208, "fa": 208, "soutiendr": 208, "lass": 208, "invit": [208, 239], "\u00e2g\u00e9": 208, "fratern": 208, "ardemment": 208, "reprennent": [208, 240], "\u00e9lect": 208, "pr\u00e9sidentiel": 208, "na\u00eetr": 208, "conf\u00e9der": 208, "dign": 208, "chanti": 208, "tribun": 208, "der": 208, "dois": 208, "redir": 208, "admir": 208, "\u00e9quipag": 208, "r\u00e9confort": 208, "accompl": 208, "qual": 208, "dissoc": 208, "naguer": 208, "gra": 208, "\u00e9cout": [208, 240, 246], "enac": 208, "ins\u00e9cur": 208, "r\u00e9forment": 208, "rvic": 208, "\u00e9nerg": 208, "immigr": 208, "banlieu": 208, "r\u00e9nov": 208, "recour": [208, 240], "isra\u00ebl": 208, "palestinien": 208, "patr": 208, "python_": 208, "doctyp": 208, "noj": 208, "enabled": 208, "disabled": [208, 233, 246], "sticky": [208, 233], "pinned": 208, "toc": 208, "page_str": 208, "creativecommon": 208, "deed": 208, "af": 208, "programmeertaal": 208, "programmiersprach": 208, "d8": 208, "a8": 208, "a7": 208, "d9": 208, "8a": 208, "86_": 208, "ba": [208, 216], "a9_": 208, "a9": 208, "e0": [208, 216], "a6": 208, "a5": 208, "ast": 208, "az": 208, "proqraml": 208, "9fd": 208, "b1rma_dil": 208, "azb": 208, "8c": 208, "ul": 208, "endfor": 208, "tpl": 208, "ch\u00f4mag": 209, "incident": [209, 225, 239, 243], "aiguillag": [209, 246], "incompr\u00e9hensibl": 209, "torchon": 209, "serviet": 209, "factoriel": [209, 210, 239], "fautiv": 210, "195": [210, 229], "premmi": 210, "4037913": 210, "miracl": [211, 212], "verg": [211, 212], "commercial": [211, 212], "acre": [211, 212], "permacultur": [211, 212], "qu\u00e9bec": [211, 212], "biodiversite_tri2": [211, 212], "boul": [211, 212], "empil": [211, 212, 233, 246], "pyramide_num2": 212, "scatter_demo": 212, "typiqu": [213, 229], "oeuvr": 213, "litt\u00e9rair": 213, "m\u00e9langent": 213, "\u00e9tiquet": 213, "conclur": [213, 240], "admetton": 213, "disposon": 213, "infaillibl": 213, "dup": 213, "d\u00e9licat": 214, "read_file_enc": 214, "enc": [214, 237], "corbeau": 214, "bec": 214, "fromag": [214, 225], "ma\u00eetr": 214, "renard": 214, "odeur": [214, 225], "allech": 214, "Lui": 214, "\u00ee": 214, "histogram2": 214, "007751937984496124": 214, "06976744186046512": 214, "17829457364341086": 214, "03875968992248062": 214, "031007751937984496": 214, "08527131782945736": 214, "023255813953488372": 214, "10077519379844961": 214, "07751937984496124": 214, "05426356589147287": 214, "015503875968992248": 214, "0067247820672478205": 214, "007575757575757576": 214, "007012142979305627": 214, "02588801926550271": 214, "004853022739877981": 214, "010752688172043012": 214, "007556675062972292": 214, "010554089709762533": 214, "029830508474576273": 214, "01349112426035503": 214, "005625270445694505": 214, "005441436539246361": 214, "00224408769204212": 214, "009715025906735751": 214, "0051919661155895615": 214, "00016849199663016007": 214, "010804020100502512": 214, "007139797229758675": 214, "0021551724137931034": 214, "0055272108843537416": 214, "0014691478942213516": 214, "004875076173065204": 214, "0044822949350067235": 214, "007034547444114429": 214, "0020463847203274215": 214, "0034299968818210166": 214, "008162299639202697": 214, "00572041473006793": 214, "005029013539651838": 214, "030130034887408817": 214, "031933508311461065": 214, "02547634339541854": 214, "03934426229508197": 214, "035542582417582416": 214, "030610255410411385": 214, "04194094414143314": 214, "03151779230210603": 214, "03840526700804682": 214, "lemond": 214, "lem": 214, "text_other": 214, "wrap": 214, "tra\u00efll": 215, "mot_al": [215, 216], "list_exercice_1": 215, "ted": 215, "inn": 215, "wiki_tr": 215, "wiki_trie2": [215, 216], "2651422999999795": 216, "06771000000003369": 216, "tolook": 216, "ds": 216, "340000032243552e": 216, "00010930000007647322": 216, "1003433318879937": 216, "00016539999978704145": 216, "00020910000012008823": 216, "5017166594399687": 216, "0016119000001708628": 216, "0002951000001303328": 216, "3447777295997914": 216, "025103800000124465": 216, "0005895999997846957": 216, "085832971998425": 216, "4739787999997134": 216, "0006374999998115527": 216, "68666377598748": 216, "marginal": 216, "aba": 216, "aab": 216, "bba": 216, "bab": 216, "bcc": 216, "print_tr": 216, "00015950000033626566": 216, "00017660000003161258": 216, "0001847000003181165": 216, "0002316999998583924": 216, "00035339999976713443": 216, "0002839999997377163": 216, "0003455000000940345": 216, "00033450000000811997": 216, "0003973000002588378": 216, "0003483000000414904": 216, "session": 216, "children": 216, "child": 216, "child1": 216, "arbredicho": 216, "after": [216, 233], "add_befor": 216, "add_aft": 216, "sorted_list": 216, "zillion": 216, "merveil": 216, "tutor": 216, "pythontutor": 216, "uilis": 216, "liste_chaine": 216, "attach": [216, 233, 239, 241, 246, 248], "atteindre_la_fin": 216, "position_cour": 216, "e1": 216, "promen": 216, "cran": [216, 239], "appelon": 216, "surpren": [216, 239], "instuct": 216, "nplusieur": 217, "anything": 217, "trou": 217, "sloan": 217, "obtent": [217, 228, 240], "list1": 217, "list2": 217, "alourd": 217, "interrupt": 217, "lesqueel": 217, "experim": 217, "curieux": 218, "log2": 218, "456217": 218, "931568569324174": 218, "134146": 218, "166639": 218, "922092": 218, "728522": 218, "162931": 218, "741312": 218, "195045": 218, "642304": 218, "685730": 218, "__len__": [219, 225], "n_question": 219, "45454545454545453": 219, "glouton": 219, "baremeopt": 219, "matrice_not": 219, "els_pos": 219, "49000000000000005": 219, "4890909090909088": 219, "baremeopt2": 219, "b_j": 219, "remuner": 220, "renumer": 220, "distance_1": 220, "test_distance_1": 220, "fdist": 220, "remunner": 220, "distance_n": 220, "test_distance_n": 220, "iji": 220, "distance_levenstein": 220, "distance_levenstein_alignment": 220, "remunereer": 220, "rennnumer": 220, "munereer": 220, "rennnum": 220, "e\u00e9\u00eae": 220, "distance_levenstein_alignment_accent": 220, "r\u00e9munner": 220, "r\u00e9mu": 220, "ner": 220, "renuumer": 220, "eye": 222, "test_pivot_gauss": 222, "abn": 223, "aer": 223, "bii": 223, "bjk": 223, "cbb": 223, "position_premiere_lettr": 223, "ae": 223, "position_lettr": 223, "position_deux_lettr": 223, "pos1": [223, 233], "pos2": [223, 233], "build_dictionary": 223, "increment": 223, "premiere_lettr": 223, "position1": 223, "position_lettre_apr": 223, "position2": 223, "sous_mot": 223, "sous_mots_1": 223, "sous_dico": 223, "position_prefixe_dico": 223, "log_2": 223, "d\u00e9tien": 225, "banqui": 225, "d\u00e9tenu": 225, "rectifi": 225, "intern": [225, 242], "forment": 225, "pr\u00e9d\u00e9fin": [225, 229, 246, 248], "transposit": 225, "instanti": 225, "classe_vid": 225, "run_python_script_140020783919744": 225, "run_python_script_140020784094656": 225, "ob\u00e9it": [225, 228, 239], "imit": 225, "methode1": 225, "397204094": 225, "2147483647": 225, "nb2": 225, "pourvu": 225, "run_python_script_140020784934080": 225, "d\u00e9couvrent": 225, "progressivent": 225, "classe2": 225, "classe1": 225, "autonom": [225, 233], "destructeur": 225, "destruct": [225, 233], "__del__": 225, "r\u00e9initialisent": 225, "__module__": 225, "__bases__": 225, "run_python_script_140020821068928": 225, "__weakref__": [225, 243], "descriptor": [225, 243], "weak": [225, 243], "pydoc": 225, "essai_class": 225, "__delattr__": 225, "__dir__": 225, "__format__": 225, "__ge__": 225, "__gt__": 225, "__hash__": [225, 240], "__init_subclass__": 225, "__le__": 225, "__ne__": 225, "__new__": 225, "__reduce__": 225, "__reduce_ex__": 225, "__sizeof__": 225, "__subclasshook__": 225, "ensemble_el": 225, "nouvelle_cl": 225, "run_python_script_140020781699648": 225, "nombre_complex": 225, "get_modul": 225, "instar": [225, 239, 240, 248], "dor\u00e9nav": [225, 228, 239], "__iadd__": 225, "\u00e9toff": 225, "attard": 225, "__setitem__": 225, "point_espac": [225, 228], "l\u00e8vent": 225, "_z": 225, "run_python_script_140020782351040": 225, "arr\u00eatent": 225, "cmp": [225, 239], "__contains__": 225, "__abs__": 225, "lev": 225, "__delitem__": 225, "__int__": 225, "__float__": 225, "__complex__": 225, "__div__": 225, "__mul__": 225, "__sub__": 225, "__pow__": 225, "__lshift__": 225, "__idiv__": 225, "__imul__": 225, "__isub__": 225, "__ipow__": 225, "__ilshift__": 225, "__irshift__": 225, "exsit": 225, "moder": 225, "rightsid": 225, "leftsid": 225, "LS": 225, "__radd__": 225, "__rlshift__": 225, "__iter__": [225, 228], "__next__": 225, "stopiter": [225, 228, 239], "class_it": [225, 228], "_in": [225, 228], "_n": [225, 228], "affichent": 225, "ck": 225, "isntanc": 225, "incremente_rnd": 225, "classmethod": 225, "meth3": 225, "meth4": 225, "essai_cl": 225, "meth2": 225, "croir": 225, "d\u00e9truir": [225, 229, 233], "imaginair": 225, "conj": 225, "conjugu": 225, "set_modul": 225, "get_argu": 225, "set_argu": 225, "get_conjugu": 225, "866025": 225, "0471975512": 225, "09439510239": 225, "0471975511965976": 225, "0943951023931953": 225, "nom_copy": 225, "nom_inst": 225, "creationdestruct": 225, "d\u00e9truit": [225, 228, 229, 233], "classe_inclus": 225, "attr": 225, "re\u00e7oiv": [225, 233], "fonction_l": 225, "garbag": [225, 228, 229, 243, 246], "collector": [225, 228, 229, 243, 246], "__deepcopy__": 225, "memo": [225, 229], "objet1": 225, "objet2": 225, "o3": 225, "pointent": 225, "rencontrent": 225, "circulair": [225, 241], "artific": 225, "soupl": [225, 233, 240], "gag": 225, "t3": 225, "104043757999534": 225, "8743345659995612": 225, "1363816230004886": 225, "atribut": 225, "pil": [225, 228, 230, 246], "cent_tirag": 225, "truqu": 225, "piece_normal": 225, "piece_truque": 225, "devion": 225, "redevient": 225, "piece_tres_truque": 225, "resolu": [225, 228], "inherited": 225, "rubriqu": 225, "ira": 225, "run_python_script_140020780387584": 225, "h\u00e9ritent": 225, "offrait": 225, "appellent": [225, 246], "ancetr": 225, "h\u00e9riti": 225, "dilemm": 225, "cub": 225, "repren": [225, 233], "fonction_somme_list": 225, "fonction_somme_dict": 225, "fonction_somm": 225, "undeuxtrois": 225, "incorpor": [225, 239], "indentationerror": [225, 228, 239], "unindent": [225, 239], "confond": [225, 239], "seilf": 225, "decoup": 225, "gruyer": 225, "fr2": 225, "fr3": 225, "g3": 225, "8333333333333334": 225, "61538461538461": 225, "76923076923077": 225, "7923076923076924": 225, "get_lin": 225, "get_col": 225, "get_submat": 225, "set_submat": 225, "matricelist": 225, "matricedict": 225, "produitclass": 225, "produitstrassen": 225, "architectur": [225, 237], "facilit": [225, 246], "lanag": 227, "deux_entiers_somm": 227, "deux_entiers_multipl": 227, "pr\u00e3": 227, "deux_enti": 227, "deuxenti": 227, "plu": 227, "disparit": [227, 233], "\u00e3": 227, "taient": 227, "m\u00e3\u00aame": 227, "deuxentiersmodif": 227, "anodin": 227, "run_python_script_140020785707328": 228, "baseexcept": 228, "run_python_script_140020781514880": 228, "produisent": [228, 246], "dirig": [228, 233], "48606594010979": 228, "0822096637057887j": 228, "accol": 228, "orthograph": [228, 248], "inexist": [228, 233], "importerror": [228, 233], "inappropri": 228, "oserror": 228, "unicodeerror": 228, "arithmeticerror": 228, "standarderror": 228, "d\u00e9rivent": 228, "repr": [228, 239], "racine_carre": 228, "run_python_script_140020787769088": 228, "interrompt": 228, "closed": 228, "intervenu": 228, "pr\u00e9mun": 228, "manager": 228, "premi\u00e8rel": 229, "demeur": [229, 239], "foncb": 229, "foncc": 229, "format_stack": 229, "runpy": 229, "_run_module_as_main": 229, "_run_cod": 229, "main_global": 229, "run_global": 229, "vv": 229, "systemex": 229, "argv": 229, "build_main": 229, "app": 229, "force_all": 229, "355": 229, "build_updat": 229, "builder": 229, "to_build": 229, "updated_docnam": 229, "_read_serial": 229, "docnam": 229, "441": 229, "read_doc": 229, "publish": [77, 229], "reader": 229, "parser": 229, "statemachin": 229, "inputlin": 229, "rst": [229, 241], "statemachinew": 229, "input_lin": 229, "input_offset": 229, "next_stat": 229, "check_lin": 229, "445": 229, "3024": 229, "lstrip": 229, "new_subsect": 229, "newabsoffset": 229, "nested_pars": 229, "state_machin": 229, "block": [229, 239], "underlin": 229, "2355": 229, "explicit_markup": 229, "nodelist": 229, "blank_finish": 229, "explicit_construct": 229, "2367": 229, "expmatch": 229, "2104": 229, "run_direct": 229, "directive_inst": 229, "run_python_script": 229, "run_python_script_140020786775552": 229, "raise_except": 229, "insidef": 229, "exc_typ": 229, "exc_valu": 229, "exc_traceback": 229, "exc_info": 229, "format_tb": 229, "run_python_script_140021813468480": 229, "extract_tb": 229, "flask": [229, 245], "run_python_script_140020785915648": 229, "run_python_script_140020787489152": 229, "run_python_script_140020788158720": 229, "restrict": [77, 229], "fautif": 229, "file_to_read": 229, "download_content": 229, "permiss": [77, 229, 248], "read_fromf_fil": 229, "unicodeencodeerror": 229, "\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9": 229, "\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0": 229, "run_python_script_140020787125376": 229, "codec": 229, "ascii_decod": 229, "unicodedecodeerror": 229, "0xc3": 229, "ordinal": 229, "soup\u00e7on": 231, "deprecationwarning": 231, "subsist": 231, "agac": 231, "fxn": 231, "monwarning": 231, "mass": [231, 241], "d\u00e9bugg": [231, 246], "attaqu": 231, "tkint": [232, 239, 243, 246], "convivial": 233, "demandent": 233, "wxpython": 233, "rich": 233, "pyqt5": 233, "pyqt4": 233, "verion": 233, "jol": 233, "licenc": 233, "graphical": 233, "forum": 233, "stackoverflow": 233, "tk": [233, 239, 246], "troubl": 233, "Du": 233, "action": [77, 233, 246], "entrem\u00eal": [233, 246], "widget": 233, "pilotent": 233, "contr\u00f4lent": 233, "zone_text": 233, "enrob": 233, "mainloop": [233, 239, 246], "doiv": 233, "gris": [233, 243], "button": [233, 239, 246], "interdir": [233, 241, 246], "gif": 233, "photoimag": 233, "chameau": 233, "entry": [233, 239], "differ": 233, "nsecond": 233, "checkbutton": 233, "intvar": 233, "radiobutton": 233, "d\u00e9coch": 233, "deselect": 233, "case1": 233, "case2": 233, "case3": 233, "agiront": 233, "listbox": 233, "select_set": 233, "select_clear": 233, "curselect": 233, "sel": [77, 233], "indextkk": 233, "adjoindr": [233, 246], "scrollbar": 233, "yscrollcommand": 233, "yview": 233, "sid": [233, 239], "tix": 233, "exportselect": 233, "itemconfig": 233, "ttk": 233, "print_fil": 233, "canv": 233, "create_lin": 233, "create_rectangl": 233, "create_text": 233, "b\u00e9zi": 233, "assis": 233, "smooth": 233, "polic": 233, "arial": 233, "arborent": 233, "cnf": 233, "kw": 233, "unbound": 233, "keyword": [233, 239], "allowed": 233, "background": 233, "justify": 233, "borderwidth": 233, "takefocus": 233, "souci": 233, "attendus": 233, "both": 233, "pack_forget": 233, "r\u00e9appara\u00eetr": 233, "re\u00e7u": [233, 239, 241], "columnspan": 233, "rowspan": 233, "grid_forget": 233, "place_forget": 233, "focus_set": 233, "change_legend": 233, "augmentent": 233, "muet": 233, "ctrl": 233, "alt": 233, "suppr": 233, "keysym": 233, "x_root": 233, "y_root": 233, "bind": [233, 246], "buttonreleas": 233, "motion": 233, "enter": 233, "affiche_touche_presse": 233, "evt": 233, "presse": 233, "292": 233, "9261224": 233, "exemple_bind": 233, "python26": 233, "933": 233, "_bind": 233, "_w": 233, "_tkint": 233, "tclerror": 233, "bind_all": 233, "unbind": 233, "d\u00e9sact": [233, 246], "unbind_all": 233, "xsyntax": 233, "p\u00e9ripher": 233, "toplevel": 233, "add_cascad": 233, "mainmenu": 233, "msousmenu": 233, "add_command": 233, "sm1": 233, "sm2": 233, "ajoute_bouton": 233, "destroy": [233, 239], "deiconify": 233, "iconify": 233, "ic\u00f4n": 233, "withdraw": 233, "compl\u00e8tent": 233, "progressbar": 233, "treeview": 233, "dirtre": 233, "fileselectbox": 233, "appartiennent": 233, "nouvelle_fenetr": 233, "sec": 233, "fenetr": 233, "fileselect": 233, "get_list": 233, "isdir": [233, 241], "listf": 233, "lifil": 233, "lid": 233, "wm_titl": 233, "fli": 233, "update_chemin": 233, "update_list": 233, "update_sel": 233, "cget": 233, "isol": [233, 239, 241], "gestion": [233, 243], "\u00e9v\u00e9nementiel": 233, "diss\u00e9min": 233, "espion": 233, "lap": 233, "after_cancel": 233, "personnifi": 233, "substitu": [233, 239], "malistbox": 233, "bg": 233, "itemconfigur": 233, "prolong": 233, "mafenetr": 233, "commande_bouton1": 233, "commande_bouton2": 233, "lab": 233, "pointeur": 233, "r\u00e9cept": 233, "intervenus": 233, "offrent": [233, 240], "mafenetreseq": 233, "event_generat": [233, 246], "perso": 233, "rooty": 233, "conservent": 234, "classeperson": 234, "_field": 234, "comptag": 234, "agil": 234, "append_time_list": 234, "append_time_dequ": 234, "0948047800002314": 234, "07056761799958622": 234, "312000": 236, "12614": 236, "712000": 236, "770865": 236, "17836": 236, "calendar": [236, 243], "itermonthdays2": 236, "timestamp": 236, "fromtimestamp": 236, "1725707330": 236, "7812645": 236, "domin": 237, "japon": 237, "asiat": 237, "cp1252": [237, 240], "deviendr": 237, "e\u00e9": 237, "sb": 237, "platform": [237, 243], "getdefaultencoding": 237, "getdefaultlocal": 237, "0x7f59c77d3130": 237, "en_us": 237, "ordereddict": 238, "namedtupl": 238, "\u00e9l\u00e9mentair": 239, "aisanc": 239, "acquer": 239, "combinent": 239, "nuanc": 239, "reconna\u00eetr": 239, "inconnus": 239, "iskeyword": 239, "until": 239, "kwlist": 239, "async": 239, "await": 239, "nonlocal": 239, "ajoutent": 239, "particuili": 239, "grammar": 239, "specif": 239, "affil": 239, "condition2": 239, "condition3": 239, "instruction5": 239, "instruction6": 239, "instruction7": 239, "instruction8": 239, "transcrivent": 239, "prioritair": 239, "juxtapos": [239, 240, 248], "press": [239, 246], "repons": 239, "rget": 239, "nopass": 239, "indented": 239, "scrupul": 239, "d\u00e9guis": 239, "pr\u00e9matur": 239, "convertibl": 239, "run_python_script_140020825089600": 239, "collag": 239, "cribl": 239, "eratosthen": 239, "d\u00e9nich": 239, "3i": 239, "ray": 239, "run_python_script_140020828525440": 239, "endroitsfootnot": 239, "coordonnees_polair": 239, "414214": 239, "118034": 239, "434949": 239, "565051": 239, "commander_carte_orang": 239, "chequ": 239, "problem_zon": 239, "retor": 239, "valeur_": 239, "param_": 239, "identit": 239, "portent": 239, "run_python_script_140020857901888": 239, "required": 239, "positional": 239, "ndigit": 239, "floating": 239, "digit": 239, "negat": 239, "pho": 239, "somme_n_premier_term": 239, "statut": 239, "ininterrompu": 239, "fact": 239, "factorielle_non_recurs": 239, "run_python_script_140020829286272": 239, "portee_vari": 239, "run_python_script_140020823641984": 239, "opposit": 239, "locale_global": 239, "affiche_pair": 239, "fonction_local": 239, "run_python_script_140020861320512": 239, "ind\u00e9termin": 239, "liste_valeur_1": 239, "liste_valeur_p": 239, "nom_1": 239, "nom_q": 239, "v_q": 239, "n\u00e9cess": 239, "nom_fonct": 239, "reprendr": 239, "fonction_yield": 239, "run_python_script_140020836621632": 239, "4142135623730951": 239, "78539816339744828": 239, "7853981633974483": 239, "perl": 239, "est_pair": 239, "0x7f592344d630": 239, "issubclass": 239, "typag": 240, "desquel": 240, "suivront": [240, 241], "maint": 240, "repris": 240, "privileg": 240, "\u00e9num": 240, "impossibil": 240, "expliquent": 240, "comprennent": 240, "opertor": 240, "zz": 240, "guillemet": 240, "interchange": 240, "1morceau": 240, "commod": 240, "recoll": 240, "pourcentag": 240, "usit": 240, "lexical": 240, "567": 240, "ed": 240, "med": 240, "eniem": 240, "printf": 240, "formatting": 240, "transcrit": 240, "abra": 240, "cad": 240, "abracadabr": 240, "24n": 240, "81w": 240, "coord": 240, "aligned": 240, "centered": 240, "aleft": 240, "alignedb": 240, "oct": 240, "1234567890": 240, "2a": 240, "101010": 240, "0x2a": 240, "0o52": 240, "0b101010": 240, "indroduit": 240, "excentr": 240, "notabl": 240, "formattag": 240, "run_python_script_140020792613376": 240, "1j": 240, "2j": 240, "fromhex": 240, "2ef0": 240, "f1f2": 240, "xf0": 240, "xf1": 240, "xf2": 240, "sigl": 240, "soupless": 240, "compare_key": 240, "run_python_script_140020799757120": 240, "verron": 240, "dison": 240, "ensemb": 240, "juxtaposit": 240, "0x7f592187dc80": 240, "l3": 240, "surprendr": 240, "1111": 240, "dress": 240, "dinv": 240, "parcout": 240, "dicionnair": 240, "cledict": 240, "0x0120db90": 240, "18930576": 240, "0x120db90": 240, "hexad\u00e9cimal": 240, "st\u00e9thoscop": 240, "5555555555555554": 240, "__wd__": 240, "__builtins__": [240, 243], "reviendr": 240, "divmod": 240, "transpara\u00eetr": 240, "traduir": 240, "concepteur": 241, "reportlab": 241, "allong": [241, 243], "perturb": 241, "separated": 241, "ppend": 241, "ead": 241, "tampon": 241, "flush": 241, "technolog": [241, 246], "diverg": 241, "d\u00e9cryptent": 241, "acaracter": 241, "r\u00e9pandus": 241, "exemplezip": 241, "fz": 241, "infolist": 241, "date_tim": 241, "file_siz": 241, "testzip": 241, "zip_deflated": 241, "zip_stored": 241, "nom_fichier_dans_zip": 241, "couron": 241, "succes": 241, "spammeur": 241, "smtplib": 241, "mim": 241, "multipart": 241, "mimemultipart": 241, "mimebas": 241, "mimetext": 241, "formatdat": 241, "envoyer_mail": 241, "aqui": 241, "localtim": 241, "set_payload": 241, "encode_base64": 241, "add_head": 241, "attachment": 241, "basenam": 241, "smtp": 241, "gmail": 241, "ehlo": 241, "starttl": 241, "login": 241, "mot_de_p": 241, "sendmail": 241, "as_string": 241, "destinatair": 241, "r\u00e9organis": 241, "musical": 241, "mutagen": [241, 248], "famili": 241, "osx": 241, "d\u00e9bouchent": 241, "abspath": 241, "commonprefix": 241, "getatim": 241, "getmtim": 241, "getctim": 241, "getsiz": 241, "isab": 241, "isfil": 241, "splitext": 241, "chdir": 241, "mkdir": 241, "makedir": 241, "repfinal": 241, "renam": 241, "rmdir": 241, "liste_fichier_repertoir": 241, "ob\u00e9iss": 241, "rep": 241, "fo": 241, "gitattribut": 241, "gitignor": 241, "manifest": 241, "code_of_conduct": 241, "changelog": 241, "ruff_cach": 241, "circlec": 241, "relir": 241, "rawiobas": 241, "affili": 241, "quinz": 241, "soul\u00e8vent": 241, "modil": 241, "1415692": 241, "fb": 241, "sauvegard": 241, "abcdedf": 241, "calcule_norm": 241, "dic": 241, "830951894845301": 241, "nom_modul": 243, "pyc": 243, "bytecod": 243, "exemple_class": 243, "__import__": 243, "nom_module_sans_extens": 243, "absolus": 243, "python36_x64": 243, "exe": 243, "__all__": 243, "inh\u00e9rent": 243, "posix": 243, "depending": 243, "unlink": 243, "eith": 243, "posixpath": 243, "ntpath": 243, "curd": 243, "representing": 243, "pard": 243, "pathnam": 243, "separator": 243, "extsep": 243, "altsep": 243, "alternat": 243, "pathsep": 243, "linesep": 243, "defpath": 243, "devnull": 243, "stand": 243, "opend": 243, "module1": 243, "module2": 243, "_frozen_importlib": 243, "frozen": 243, "_imp": 243, "_thread": 243, "_warning": 243, "_weakref": 243, "python_cour": 243, "englob": 243, "mesmodul": 243, "part1": 243, "niveaud": 243, "part2": 243, "niveaudeuxb": 243, "subpackage1": 243, "modulex": 243, "subpackage2": 243, "moduley": 243, "pr\u00e9install": 243, "asyncio": [243, 245], "socket": 243, "cgi": 243, "cmath": 243, "getopt": 243, "htmllib": 243, "pathlib": 243, "sqlite3": 243, "gestionnair": 243, "dom": 243, "139508": 243, "carlo": 243, "integrale_monte_carlo": 243, "6656363410261761": 243, "simpliqu": 243, "interfa\u00e7ag": 243, "h\u00e9bergent": 243, "maintenus": 243, "ponctuel": 243, "tensorflow": 243, "setup": 243, "run_python_script_140020777237248": 244, "0x7f592224d420": 244, "ultrajson": 244, "restaur": 244, "crucial": 244, "librar": 244, "multithreading": 245, "bibliograph": 245, "gevent": 245, "uvloop": 245, "blazing": 245, "networking": 245, "sanic": 245, "openmp": [245, 246], "2004": 246, "microprocesseur": 246, "transistor": 246, "multicoeur": 246, "entam": 246, "processus": 246, "achev": 246, "asynchron": 246, "communiquent": 246, "synchronisent": 246, "monthread": 246, "proviennent": 246, "temporis": 246, "ojet": 246, "ind\u00e9fin": 246, "is_set": 246, "dixiem": 246, "verrous": 246, "indexfrr": 246, "veulent": 246, "11111111112222222222": 246, "acquir": 246, "entrem\u00ealent": 246, "thread_fin": 246, "thread_resultat": 246, "lance_thread": 246, "legnd": 246, "text2": 246, "thread_fini_fonct": 246, "envoient": 246, "get_now": 246, "put_now": 246, "qsiz": 246, "chevauchent": 246, "soumettr": 246, "subm": 246, "max_work": 246, "prim": 246, "112272535095293": 246, "112582705942171": 246, "115280095190773": 246, "115797848077099": 246, "1099726899285419": 246, "sqrt_n": 246, "ind\u00e9chiffr": 246, "logg": 246, "logger": 246, "get_logg": 246, "getlogg": 246, "setlevel": 246, "asctim": 246, "threadnam": 246, "levelnam": 246, "streamhandl": 246, "stdout": 246, "setformatt": 246, "addhandl": 246, "fh": 246, "filehandl": 246, "current_thread": 246, "end1": 246, "end2": 246, "end3": 246, "thread_0": 246, "thread_1": 246, "703": 246, "603": 246, "299": 246, "as_completed": 246, "compliquent": 246, "parallel_numpy_dot": 246, "vb": 246, "2660631890251": 246, "distribute_sum": 246, "inlass": 246, "enclench": 246, "distrinct": 246, "d\u00e9velopeur": 246, "multithread": 246, "nogil": 246, "parallelism": 246, "parallelizing": 246, "interp\u00e9teur": 246, "pythonnet": 246, "py4j": 246, "pyjnius": 246, "nuir": 246, "pluriel": 248, "formulair": 248, "1913": 248, "1978": 248, "1914": 248, "1941": 248, "1980": 248, "int\u00e9resson": 248, "r\u00e9pondent": 248, "0123456789": 248, "z0": 248, "taxinom": 248, "vba": 248, "vbatd1_4": 248, "suspens": 248, "yoyo": 248, "dupont": 248, "repl": 248, "valident": 248, "chanson": 248, "track03": 248, "audiotrack": 248, "pist": 248, "audiop": 248, "audio": 248, "heart": 248, "heartland": 248, "heartach": 248, "ache": 248, "easyid3": 248, "infomp3": 248, "all_fil": 248, "repertoir": 248, "heart_notitle_mot": 248, "liheart": 248, "notitl": 248, "nbmot": 248, "nbsong": 248, "album": 248, "tracknumb": 248, "moymot": 248, "nom_du_group": 248, "groupdict": 248, "trouve_toute_fonct": 248, "expm": 248, "get_function_list_definit": 248, "ndef": 248, "z_": 248, "z_0": 248, "get_function_list_call": 248, "detection_fonction_pas_appele": 248, "sfil": 248, "funcdef": 248, "funccal": 248, "fonction_inutil": 248, "dependency": 0, "helper": 0, "refactoring": 0, "copyright": 77, "hereby": 77, "granted": 77, "fre": 77, "obtaining": 77, "softwar": 77, "without": 77, "modify": 77, "distribut": 77, "sublicens": 77, "whom": 77, "furnished": 77, "notic": 77, "shall": 77, "substantial": 77, "provided": 77, "AS": 77, "warranty": 77, "implied": 77, "limited": 77, "warrant": 77, "merchantability": 77, "fitness": 77, "noninfring": 77, "holder": 77, "liabl": 77, "damag": 77, "liability": 77, "arising": 77, "dealing": 77}, "objects": {"teachpyx.datasets.data_helper": [[3, 0, 1, "", "get_data_folder"]], "teachpyx.datasets": [[3, 0, 1, "", "load_enedis_dataset"], [3, 0, 1, "", "load_wine_dataset"], [3, 0, 1, "", "load_wines_dataset"]], "teachpyx.examples": [[2, 1, 0, "-", "classiques"], [2, 1, 0, "-", "construction_classique"], [6, 1, 0, "-", "numpysex"]], "teachpyx.examples.classiques": [[2, 0, 1, "", "commentaire_accentues"], [2, 0, 1, "", "dictionnaire_modifie_dans_la_boucle"], [2, 0, 1, "", "dix_entiers_carre"], [2, 0, 1, "", "repetition_a_eviter"], [2, 0, 1, "", "str2date"]], "teachpyx.examples.construction_classique": [[2, 0, 1, "", "compte"], [2, 0, 1, "", "construit_matrice_carree"], [2, 0, 1, "", "enumerate_permutations"], [2, 0, 1, "", "enumerate_permutations_recursive"], [2, 0, 1, "", "integrale"], [2, 0, 1, "", "mat2text"], [2, 0, 1, "", "mat2vect"], [2, 0, 1, "", "minindex"], [2, 0, 1, "", "recherche"], [2, 0, 1, "", "recherche_dichotomique"], [2, 0, 1, "", "somme"], [2, 0, 1, "", "text2mat"], [2, 0, 1, "", "triindex"], [2, 0, 1, "", "vect2mat"]], "teachpyx.examples.numpysex": [[6, 0, 1, "", "numpy_matrix2list"], [6, 0, 1, "", "numpy_types"]], "teachpyx.faq": [[4, 1, 0, "-", "faq_exception"], [4, 1, 0, "-", "faq_geo"], [4, 1, 0, "-", "faq_numpy"], [4, 1, 0, "-", "faq_python"]], "teachpyx.faq.faq_exception": [[4, 0, 1, "", "call_stack"]], "teachpyx.faq.faq_geo": [[4, 0, 1, "", "lambert93_to_WGPS"]], "teachpyx.faq.faq_numpy": [[4, 0, 1, "", "to_float32"]], "teachpyx.faq.faq_python": [[4, 2, 1, "", "Distribution"], [4, 3, 1, "", "PQPipError"], [4, 0, 1, "", "class_getitem"], [4, 0, 1, "", "difference_div"], [4, 0, 1, "", "entier_grande_taille"], [4, 0, 1, "", "enumerate_regex_search"], [4, 0, 1, "", "get_day_name"], [4, 0, 1, "", "get_installed_distributions"], [4, 0, 1, "", "get_month_name"], [4, 0, 1, "", "get_package_info"], [4, 0, 1, "", "get_packages_list"], [4, 0, 1, "", "information_about_package"], [4, 0, 1, "", "list_of_installed_packages"], [4, 0, 1, "", "property_example"], [4, 0, 1, "", "python_path"], [4, 0, 1, "", "same_variable"], [4, 0, 1, "", "sortable_class"], [4, 0, 1, "", "stringio"]], "teachpyx.practice": [[7, 1, 0, "-", "rues_paris"], [8, 1, 0, "-", "tsp_bresenham"], [9, 1, 0, "-", "tsp_kohonen"], [10, 1, 0, "-", "tsp_kruskal"]], "teachpyx.practice.rues_paris": [[7, 0, 1, "", "bellman"], [7, 0, 1, "", "connected_components"], [7, 0, 1, "", "distance_haversine"], [7, 0, 1, "", "distance_paris"], [7, 0, 1, "", "euler_path"], [7, 0, 1, "", "eulerien_extension"], [7, 0, 1, "", "get_data"], [7, 0, 1, "", "graph_degree"], [7, 0, 1, "", "kruskal"], [7, 0, 1, "", "possible_edges"]], "teachpyx.practice.tsp_bresenham": [[8, 0, 1, "", "draw_ellipse"], [8, 0, 1, "", "draw_line"], [8, 0, 1, "", "trace_ligne_simple"]], "teachpyx.practice.tsp_kohonen": [[9, 0, 1, "", "ajoute_vecteur"], [9, 0, 1, "", "construit_liste_neurones"], [9, 0, 1, "", "construit_ville"], [9, 0, 1, "", "deplace_neurone"], [9, 0, 1, "", "distance_chemin"], [9, 0, 1, "", "distance_euclidienne_carree"], [9, 0, 1, "", "iteration"], [9, 0, 1, "", "modifie_structure"], [9, 0, 1, "", "moyenne_proximite"], [9, 0, 1, "", "multiplie_vecteur"], [9, 0, 1, "", "poids_attirance"], [9, 0, 1, "", "simulation"], [9, 0, 1, "", "soustrait_vecteur"], [9, 0, 1, "", "vecteur_norme"]], "teachpyx.practice.tsp_kruskal": [[10, 0, 1, "", "amelioration_chemin"], [10, 0, 1, "", "arbre_poids_minimal"], [10, 0, 1, "", "circuit_eulerien"], [10, 0, 1, "", "circuit_hamiltonien"], [10, 0, 1, "", "construit_ville"], [10, 0, 1, "", "dessin_arete_zone"], [10, 0, 1, "", "distance_euclidian"], [10, 0, 1, "", "echange_position"], [10, 0, 1, "", "echange_position_essai"], [10, 0, 1, "", "equation_droite"], [10, 0, 1, "", "evaluation_droite"], [10, 0, 1, "", "intersection_segment"], [10, 0, 1, "", "longueur_chemin"], [10, 0, 1, "", "oppose_vecteur"], [10, 0, 1, "", "repartition_zone"], [10, 0, 1, "", "retournement"], [10, 0, 1, "", "retournement_essai"], [10, 0, 1, "", "simulation"], [10, 0, 1, "", "supprime_croisement"], [10, 0, 1, "", "tsp_kruskal_algorithm"], [10, 0, 1, "", "vecteur_cosinus"], [10, 0, 1, "", "vecteur_norme"], [10, 0, 1, "", "vecteur_points"], [10, 0, 1, "", "vecteur_sinus"], [10, 0, 1, "", "voisinage_zone"], [10, 0, 1, "", "voisinage_zone_xy"]], "teachpyx.tools": [[11, 0, 1, "", "decompress_zip"], [11, 0, 1, "", "download_and_unzip"], [11, 0, 1, "", "draw_diagram"], [11, 1, 0, "-", "profiling"], [11, 0, 1, "", "total_size"]], "teachpyx.tools.display": [[11, 1, 0, "-", "pygame_helper"], [11, 1, 0, "-", "video_helper"]], "teachpyx.tools.display.pygame_helper": [[11, 0, 1, "", "build_diff_image"], [11, 0, 1, "", "display_line"], [11, 0, 1, "", "empty_main_loop"], [11, 0, 1, "", "get_pygame_screen_font"], [11, 0, 1, "", "wait_event"]], "teachpyx.tools.display.video_helper": [[11, 0, 1, "", "get_local_folder"], [11, 0, 1, "", "make_video"]], "teachpyx.tools.graphviz_helper": [[11, 0, 1, "", "draw_graph_graphviz"], [11, 0, 1, "", "run_graphviz"], [11, 0, 1, "", "run_subprocess"]], "teachpyx.tools.profiling": [[11, 2, 1, "", "ProfileNode"], [11, 0, 1, "", "profile"], [11, 0, 1, "", "profile2df"], [11, 0, 1, "", "profile2graph"]], "teachpyx.tools.profiling.ProfileNode": [[11, 4, 1, "", "add_called_by"], [11, 4, 1, "", "add_calls_to"], [11, 4, 1, "", "as_dict"], [11, 4, 1, "", "filter_node_"], [11, 4, 1, "", "get_root"], [11, 5, 1, "", "key"], [11, 4, 1, "", "to_json"], [11, 4, 1, "", "to_text"]], "teachpyx.video.tsp_kohonen_pygame": [[12, 0, 1, "", "pygame_simulation"]], "teachpyx.video.tsp_kruskal_pygame": [[13, 0, 1, "", "pygame_simulation"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:exception", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "function", "Python fonction"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python classe"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python m\u00e9thode"], "5": ["py", "property", "Python propri\u00e9t\u00e9"]}, "titleterms": {"survol": 1, "algorithm": [1, 43, 61, 63, 76, 78, 79, 80, 82, 84, 90, 95, 97, 125, 127, 128, 132, 134, 162, 172, 191, 193, 194, 195, 196, 220, 239], "ordre": [1, 58, 72, 80, 84, 91, 239], "grandeur": 1, "comprendr": 1, "co\u00fbt": [1, 43, 115, 116, 122, 125, 127, 161, 172, 201, 220], "mot": [1, 71, 82, 83, 89, 169, 201, 220], "cl\u00e9": [1, 71, 201, 240], "catalogu": 1, "problem": [1, 32, 58, 63, 64, 72, 78, 81, 84, 88, 91, 96, 97, 128, 137, 145, 159, 193, 194, 211, 212, 246], "np": [1, 128], "complet": [1, 126, 128, 159, 198, 248], "id\u00e9": [1, 88, 89, 95, 196, 211, 212], "d\u00e9monstr": [1, 114, 219], "lien": [1, 56], "articl": [1, 25], "livr": 1, "Pour": [1, 58, 181], "entra\u00een": 1, "googl": 1, "recommand": 1, "exampl": [2, 6], "construction_class": 2, "teachpyx": [2, 4, 7, 8, 9, 10, 12, 13], "classiqu": [2, 5, 93, 225, 233, 234, 235, 239], "python": [2, 48, 63, 71, 73, 75, 76, 78, 100, 101, 132, 156, 173, 207, 208, 209, 210, 225, 239, 240, 246, 249], "accept": [2, 73], "accent": [2, 73, 76, 220, 241], "modifi": [2, 71, 72, 125, 127, 235, 239, 240], "dictionnair": [2, 15, 71, 72, 89, 93, 127, 161, 166, 171, 179, 201, 202, 225, 235, 240], "parcour": [2, 94, 97, 128, 235], "Quelle": [2, 4, 73, 174], "diff\u00e9rent": [2, 4, 71, 73, 82, 83, 125, 135, 220], "entre": [2, 4, 53, 58, 71, 72, 73, 82, 83, 125, 170], "return": [2, 71, 73, 201], "print": [2, 71, 73, 240], "calcul": [2, 35, 43, 51, 52, 55, 66, 71, 79, 80, 81, 85, 87, 91, 92, 93, 96, 122, 123, 124, 125, 158, 168, 180, 183, 184, 203, 204, 213, 214, 235], "somm": [2, 85, 123, 166, 235], "dix": [2, 235], "premi": [2, 14, 56, 87, 88, 90, 97, 126, 127, 134, 157, 162, 166, 172, 194, 195, 196, 209, 210, 235, 246], "entier": [2, 185, 186, 235, 240], "carr": [2, 163, 183, 184, 197, 198, 235], "evit": [2, 235], "effectu": [2, 122, 235], "m\u00eam": [2, 56, 58, 82, 83, 84, 122, 125, 172, 207, 220, 235], "appel": [2, 72, 225, 229, 235, 239], "deux": [2, 34, 64, 82, 83, 89, 91, 117, 122, 123, 125, 126, 127, 174, 179, 225, 235], "fois": [2, 123, 235], "convers": [2, 33, 235, 240], "cha\u00een": [2, 42, 71, 72, 161, 235, 240], "caracter": [2, 42, 71, 72, 235, 237, 240, 248], "datetim": [2, 235, 236], "comptag": [2, 235], "fonction": [2, 5, 32, 41, 53, 55, 56, 63, 66, 71, 72, 79, 87, 89, 90, 115, 116, 122, 123, 125, 126, 127, 133, 159, 163, 168, 170, 174, 178, 182, 199, 200, 201, 202, 204, 225, 233, 235, 238, 239, 240, 248], "comm": [2, 115, 116, 235], "parametr": [2, 58, 64, 71, 72, 87, 88, 115, 116, 135, 149, 235, 239], "matric": [2, 50, 55, 63, 80, 86, 93, 97, 117, 118, 122, 125, 159, 179, 183, 184, 235, 240], "vecteur": [2, 235], "minimum": [2, 61, 235], "posit": [2, 58, 72, 127, 159, 235], "recherch": [2, 63, 71, 127, 177, 201, 207, 208, 215, 216, 217, 218, 223, 235], "index": [2, 52, 53, 55, 56, 127, 235], "dichotom": [2, 63, 85, 112, 177, 215, 216, 217, 218, 235], "tri": [2, 15, 80, 89, 90, 115, 116, 162, 168, 182, 215, 216, 235], "gard": [2, 91, 235], "initial": [2, 33, 235], "jeux": [3, 89, 163, 237], "don": [3, 14, 48, 53, 56, 64, 66, 71, 87, 97, 115, 116, 121, 125, 132, 135, 137, 142, 159, 167, 179, 183, 184, 191, 193, 194, 244], "cartograph": 3, "classif": [3, 29, 64, 72, 131, 133, 143, 144, 145], "outil": [3, 132], "r\u00e9gress": [3, 52, 64, 72, 131, 134, 137, 140, 141, 153], "faq": [4, 5, 73], "faq_python": 4, "divis": [4, 73], "Quel": [4, 73], "enti": [4, 73], "plus": [4, 14, 44, 58, 63, 64, 73, 79, 83, 84, 85, 89, 90, 92, 93, 95, 101, 117, 118, 122, 123, 125, 127, 146, 148, 157, 170, 174, 181, 182, 187, 188, 189, 190, 191, 192, 197, 198, 203, 204, 216, 217, 218, 229, 241, 246, 248], "grand": [4, 14, 73, 79, 85, 89, 157, 189, 190], "tabul": [4, 73], "espac": [4, 63, 73, 96, 125], "comment": [4, 73, 127], "iter": [4, 41, 54, 73, 121, 134, 155, 177, 225, 228, 239], "r\u00e9sultat": [4, 58, 73, 79, 87, 119, 120, 122, 125, 127, 233], "express": [4, 15, 73, 96, 169, 207, 208, 247, 248], "r\u00e9guli": [4, 15, 73, 96, 169, 207, 208, 247, 248], "r\u00e9cuper": [4, 53, 56, 73, 87, 229], "nom": [4, 73, 241, 243], "jour": [4, 53, 56, 73], "part": [4, 40, 52, 54, 67, 73, 187, 188, 209, 210, 217, 218], "dat": [4, 53, 73, 78, 236], "mois": [4, 73], "list": [4, 34, 35, 43, 70, 71, 72, 73, 124, 127, 161, 179, 201, 215, 217, 225, 233, 239, 240, 241, 243], "modul": [4, 42, 63, 71, 72, 73, 76, 94, 167, 174, 207, 208, 242, 243], "install": [4, 69, 73, 76], "pourquoi": [4, 29, 73, 89, 122], "pand": [4, 15, 39, 53, 56, 63, 73, 129], "numpy": [4, 6, 15, 38, 51, 52, 55, 56, 57, 63, 73, 129, 173, 180], "march": [4, 52, 58, 73, 87, 243], "sous": [4, 16, 73, 85, 233], "window": [4, 16, 73], "pip": [4, 73], "obten": [4, 73, 178, 228], "inform": [4, 73, 240, 246], "packag": [4, 70, 73, 76], "propriet": [4, 72, 73, 225], "\u00e9vit": [4, 73], "sy": [4, 73], "path": [4, 73], "append": [4, 73], "quand": [4, 73, 204], "d\u00e9velopp": [4, 73], "Qu": [4, 73, 199], "typ": [4, 6, 55, 56, 71, 72, 73, 225, 228, 229, 240], "immuabl": [4, 71, 72, 73, 240], "immut": [4, 72, 73, 240], "class": [4, 32, 41, 56, 64, 71, 72, 73, 126, 132, 133, 144, 145, 154, 156, 157, 158, 159, 160, 197, 198, 199, 200, 219, 225, 226, 227, 228, 233], "sortabl": [4, 73], "a": [4, 33, 67, 70, 73, 122, 126, 128, 159, 163, 248], "quoi": [4, 73, 163, 207, 248], "sert": [4, 73, 163, 207, 248], "stringio": [4, 73], "faq_except": 4, "faq_geo": 4, "Les": [4, 41, 64, 71, 73, 90, 97, 138, 191, 212, 228, 233, 239, 248], "fichi": [4, 53, 63, 71, 73, 76, 207, 208, 213, 214, 237, 241, 243], "geofl": [4, 73], "contiennent": [4, 73], "longitud": [4, 73], "latitud": [4, 73], "faq_numpy": 4, "cod": [5, 17, 32, 71, 98, 108, 112, 114, 126, 174, 201, 202], "inclus": [5, 225], "dan": [5, 63, 71, 84, 91, 122, 125, 126, 127, 137, 159, 161, 201, 207, 208, 215, 216, 233, 241], "librair": [5, 134], "construct": [5, 108, 109, 124, 199, 215, 225, 233, 234, 235, 239], "illustr": [5, 159], "solut": [5, 81, 85, 90, 92, 96, 97, 101, 193, 194, 196, 211, 212], "anim": 5, "numpysex": 6, "oper": [6, 37, 51, 52, 53, 55, 71, 72, 122, 156, 160, 161, 197, 198, 225, 239], "matrix": [6, 51, 52], "Quels": [6, 73], "support": [6, 73], "practic": [7, 8, 9, 10], "rues_par": 7, "tsp_bresenham": 8, "tsp_kohonen": 9, "tsp_kruskal": [10, 13], "tool": 11, "decompress_zip": 11, "download_and_unzip": 11, "draw_diagram": 11, "draw_graph_graphviz": 11, "total_siz": 11, "profiling": [11, 15, 132, 174, 175, 176], "run_graphviz": 11, "run_subprocess": 11, "video": [11, 12, 13], "tsp_kohonen_pygam": 12, "2022": [14, 15, 16, 25, 124, 125], "assur": 14, "auto": 14, "r\u00e9flex": [14, 44], "apprentissag": [14, 134, 135, 150, 151], "test": [14, 15, 64, 66, 71, 72, 76, 83, 91, 125, 135, 150, 151, 181, 217, 218, 239], "ajout": [14, 108, 135, 159, 181, 225, 239, 241, 243], "variabl": [14, 63, 66, 70, 71, 72, 101, 183, 184, 201, 217, 218, 238, 239, 240], "agreg": 14, "g\u00e9ograph": 14, "nombr": [14, 52, 72, 79, 81, 86, 122, 133, 159, 195, 196, 239, 240], "mod\u00e9lis": [14, 58], "peu": [14, 44, 55, 79, 183, 187, 188], "anonym": 14, "11": [15, 20, 24, 112], "31": [15, 20, 24], "rappel": [15, 20, 24, 29, 63], "feuill": [15, 20, 22, 24, 53, 157], "rout": [15, 20, 22, 24], "s\u00e9anc": [15, 20, 22, 24, 99, 130, 224], "1": [0, 15, 20, 22, 24, 52, 53, 72, 81, 86, 89, 90, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 122, 123, 125, 126, 127, 135, 159, 168, 169, 173, 174, 179, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 215, 216, 217, 225, 239, 243], "7": [15, 20, 24, 56, 100, 101, 159, 191, 192, 207, 208, 215, 216, 217, 218], "9": [15, 100, 101], "introduct": [15, 76, 79, 233], "2": [15, 20, 22, 24, 52, 53, 72, 81, 86, 89, 90, 96, 100, 101, 102, 103, 104, 106, 107, 110, 111, 112, 113, 116, 118, 120, 121, 122, 135, 159, 168, 169, 173, 174, 177, 179, 180, 185, 186, 187, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 216, 217, 225, 243], "14": [15, 104, 105], "programm": [15, 26, 31, 43, 64, 66, 71, 72, 75, 128, 191, 192, 194, 198, 243], "dynam": [15, 53, 128, 191, 192, 194, 239], "voyageur": [15, 63, 94], "commerc": [15, 44, 63, 94], "3": [0, 15, 20, 22, 24, 52, 53, 72, 81, 89, 90, 100, 101, 104, 110, 111, 112, 122, 124, 135, 156, 159, 168, 169, 174, 185, 186, 187, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 215, 216, 217, 218, 243], "21": [15, 114], "4": [0, 15, 20, 22, 24, 37, 52, 53, 58, 72, 89, 90, 100, 101, 109, 110, 111, 122, 159, 169, 174, 185, 186, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 215, 216, 217, 220], "28": 15, "graph": [15, 49, 53, 56, 63, 80, 86, 87, 95, 121, 128, 131, 159, 187, 188], "5": [0, 15, 20, 22, 24, 53, 89, 100, 101, 110, 159, 174, 191, 192, 207, 208, 215, 216, 217, 218], "10": [15, 100, 101, 103, 135], "s\u00e9rialis": [15, 41, 42, 170, 244], "unitair": [15, 71, 83, 125, 181], "6": [15, 20, 24, 53, 89, 100, 101, 107, 159, 191, 192, 207, 208, 215, 216, 217, 218], "12": [15, 16, 115, 116], "webscrapping": 15, "19": 15, "top": [15, 90], "k": [15, 90, 189, 190], "8": [15, 20, 22, 24, 100, 101, 126, 159, 191, 192, 207, 208], "26": [15, 22, 102, 106, 125], "07": 16, "utilis": [16, 66, 71, 89, 90, 125, 127, 158, 168, 169, 174, 199, 201, 202, 227, 228, 233], "cartopy": [16, 48], "wsl": [16, 21], "2023": [17, 18, 19, 20, 25, 126, 221], "08": [17, 18], "03": [17, 22], "jam": 17, "09": [18, 19, 23], "\u00e9nigm": [18, 32, 37], "hermion": 18, "06": 19, "ensa": [19, 23], "2024": [21, 22, 23, 24, 25, 126, 127], "01": [21, 22], "18": 21, "nettoyag": 21, "16": [22, 113], "23": [22, 117, 118], "projet": 22, "04": 23, "collect": 25, "p\u00e9riss": 25, "galler": [26, 27, 31], "exempl": [26, 27, 31, 52, 58, 72, 127, 134, 135, 142, 156, 176, 225, 228, 239, 240, 241, 243, 248], "machin": [26, 27, 62, 64, 78, 100, 101, 131, 168], "learning": [26, 27, 62, 64, 78, 99, 100, 101, 131, 134], "correl": [28, 58, 63, 183, 184], "receiv": 29, "operating": 29, "characteristic": 29, "roc": [29, 140, 143], "binair": [29, 41, 64, 72, 241, 244], "trois": [29, 64, 71, 76, 122, 124, 197, 198, 239], "courb": [29, 121, 140, 143], "predict_prob": 29, "decision_funct": 29, "precis": 29, "m\u00e9triqu": 29, "f1": [29, 58, 72], "alor": [29, 83], "comput": [30, 45, 46, 250], "tim": [30, 45, 46, 250], "L": [32, 134], "einstein": 32, "r\u00e9solu": 32, "permut": [32, 91, 94, 154, 156], "La": [32, 55, 56, 63, 85, 138, 191, 204, 212, 219], "rul": 32, "explic": 32, "descript": [32, 58], "float": [33, 217], "probability": 33, "float64": 33, "x": [33, 92, 118, 125, 156], "float32": 33, "interval": 33, "length": 33, "distribu": [33, 53, 55], "an": 33, "answer": 33, "to": [33, 67], "the": [33, 67], "question": [33, 111, 216, 227], "similar": 33, "what": 33, "about": 33, "not": [33, 67, 99, 108, 109, 110, 111, 112, 113, 114, 152, 219], "strict": 33, "comparison": 33, "conclus": [33, 58, 113], "Le": [34, 58, 63, 71, 72, 145, 228, 249], "gil": [34, 246], "parallel": 34, "Un": [34, 44, 79, 137, 156, 159, 160, 161, 181, 183, 187, 188, 220, 240, 243, 246], "autr": [34, 35, 58, 64, 71, 115, 134, 159, 168, 174, 179, 181, 199, 207, 208, 225, 233, 236, 244], "sc\u00e9nario": 34, "hypercub": 35, "exercic": [35, 43, 52, 53, 55, 56, 63, 64, 75, 89, 90, 96, 99, 110, 112, 113, 114, 121, 122, 123, 125, 126, 127, 132, 135, 164, 168, 169, 174, 185, 186, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 215, 216, 217, 218], "q1": [35, 40, 55, 56, 80, 82, 84, 87, 91, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 166, 167, 170, 175, 183, 184, 187, 188, 189, 190, 213, 214], "tripl": 35, "r\u00e9curs": [35, 72, 115, 116, 177, 201, 239], "q2": [35, 40, 55, 56, 80, 82, 84, 87, 91, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 166, 167, 170, 175, 183, 184, 187, 188, 189, 190, 213, 214], "comparaison": [35, 85, 239], "q3": [35, 40, 55, 56, 80, 82, 87, 91, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 166, 167, 170, 175, 183, 184, 187, 188, 189, 190, 213, 214], "pr\u00e9cis": [35, 43, 79, 203, 204], "q4": [35, 40, 55, 56, 80, 82, 87, 91, 103, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 166, 167, 175, 183, 184, 187, 188, 213, 214], "astuc": [36, 66, 71], "lambd": [36, 53, 71, 239], "function": [36, 53], "mathador": 37, "point": [38, 53, 63, 72, 94, 115, 116, 122, 125, 132, 135, 138, 243], "impl\u00e9ment": [38, 82, 145, 175, 185, 186, 205, 206], "acced": 38, "\u00e9l\u00e9ment": [38, 52, 79, 90, 108, 161, 166, 201, 239], "particuli": [38, 55, 132], "groupby": 39, "valeur": [39, 55, 56, 72, 80, 117, 118, 172, 201, 228, 239], "manqu": [39, 117, 118], "dam": [40, 164], "json": [41, 42, 167, 170, 244], "ecritur": [41, 71, 207, 239, 241], "lectur": [41, 53, 71, 75, 207, 241], "limit": 41, "rapid": [41, 85, 89, 90, 92, 122, 170, 174, 182, 197, 198, 203, 204], "pickl": [41, 170], "r\u00e9duir": [41, 126], "taill": [41, 79, 125, 126, 181], "cas": [41, 79, 122, 125, 126, 127, 159, 220, 233, 240, 243], "g\u00e9ner": [41, 52, 86, 135, 155, 166, 220, 231, 239], "protobuf": [42, 167], "schem": 42, "compil": [42, 225, 239], "import": [42, 72, 233, 243], "cr\u00e9": [42, 53, 55, 125, 207, 233], "plusieur": [42, 53, 142, 233, 239, 243], "expliqu": [43, 89, 114, 137], "cop": [43, 71, 225, 240, 241], "erreur": [43, 56, 71, 87, 219, 228, 229], "logiqu": [43, 179, 239], "h\u00e9ritag": [43, 71, 72, 158, 159, 199, 200, 225, 228], "doubl": 43, "autour": [44, 164, 225], "voyag": 44, "tsp": [44, 61, 91], "Des": [44, 66, 71, 181], "vill": [44, 91], "tir": [44, 91, 94, 125], "hasard": [44, 180], "crois": [44, 53, 64, 95, 137, 147], "noeud": [44, 95], "d\u00e9part": [44, 56], "const": [44, 72, 168, 240], "al\u00e9atoir": [44, 52, 63, 80, 86, 91, 94, 115, 116, 117, 118, 124, 125, 137, 155, 159, 168, 183, 184, 215], "datafram": [47, 50, 53, 54, 56, 63, 240], "trac": [48, 211, 212], "cart": [48, 56, 60, 63], "plotly": 48, "gmap": 48, "bingmap": 48, "geopand": 48, "folium": 48, "openstreetmap": 48, "matriciel": [51, 52, 55, 93], "optimis": [52, 58, 63, 72, 87, 88, 115, 116, 122, 123, 135, 137, 162, 219, 244], "array": [52, 54, 63], "creation": 52, "notion": [52, 170, 201, 246], "datatyp": 52, "dimens": [52, 93, 125, 133, 179, 189, 190], "slicing": 52, "fancy": 52, "indexing": 52, "view": 52, "contr": 52, "copy": [52, 225], "manipul": [52, 53, 56, 240, 241], "shap": 52, "echiqui": 52, "cribl": 52, "erathosthen": 52, "broadcasting": [52, 55], "r\u00e9duct": 52, "algebr": 52, "lin\u00e9air": [52, 85], "simpl": [52, 82, 132, 225, 239, 246], "statist": 52, "retrouv": [52, 122], "ser": [52, 53, 56, 58, 87, 131, 138], "scipy": [52, 180], "simul": [52, 87, 88, 128, 162, 183, 184], "estim": [52, 79, 87, 88, 121, 137], "maximis": 52, "vraisembl": 52, "r\u00e9f\u00e9rent": [52, 58], "el\u00e9ment": [52, 53], "r\u00e9pons": [52, 53, 55, 56, 80, 82, 84, 87, 89, 90, 91, 101, 166, 167, 168, 169, 174], "\u00e9critur": [53, 167, 181], "notat": [53, 240], "symbol": 53, "excel": [53, 167, 207, 208], "filtr": 53, "union": 53, "sort": [53, 242], "group": [53, 248], "by": 53, "join": 53, "pivot": [53, 173, 222], "filt": 53, "merg": 53, "fusion": [53, 56], "tableau": [53, 55, 57, 71, 159, 179, 180], "moyen": [53, 58, 115, 116, 117, 118, 157, 219], "Avec": [53, 125, 220], "san": [53, 96, 127, 168, 241], "plot": 53, "nuag": [53, 63, 115, 116], "matplotlib": [53, 63], "mariag": 53, "annex": 53, "\u00e9cart": 53, "mari": 53, "mesur": [54, 89, 93, 125, 189, 190, 204], "vitess": [54, 173], "cr\u00e9ation": [54, 56, 159, 183, 184, 240], "enonc": [55, 56, 78, 80, 81, 82, 84, 85, 87, 89, 90, 91, 92, 96, 99, 102, 103, 104, 105, 106, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 167, 168, 169, 174], "ma\u00eetris": [55, 56], "slic": 55, "nan": [55, 56], "chi_2": 55, "contingent": [55, 57, 180], "veut": [55, 87, 126, 127], "ident": [55, 79, 125], "million": 55, "dev": 55, "appliqu": [55, 85, 121, 127, 137, 175], "stopcovid": 55, "lign": [56, 159, 169, 225, 233], "colon": [56, 101, 117, 159], "ver": 56, "modif": [56, 67], "Une": [56, 97, 101, 138, 157, 159, 160, 162, 175, 181, 219], "warning": [56, 231], "fr\u00e9quent": [56, 71, 235], "On": [56, 87, 122, 126, 127], "covid": [56, 87], "r\u00e9gion": [56, 87], "\u00e2ge": [56, 87], "refair": 56, "graphiqu": [56, 66, 71, 232, 246], "pr\u00e9c\u00e9dent": [56, 89, 126, 127, 174], "votr": [56, 127], "fair": [56, 125, 197, 198], "diff\u00e9renci": 56, "liss": 56, "tabl": [56, 58, 72, 166], "pet": [56, 90, 181, 182], "apart": [56, 86, 94, 197], "q5": [56, 87, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 166, 167, 175, 187, 188, 213, 214], "strateg": [58, 72, 159, 205, 206], "automat": 58, "trading": [58, 72], "financ": 58, "quelqu": [58, 63, 66, 114, 135, 166], "vocabulair": [58, 86], "financi": 58, "liquid": 58, "figur": [58, 72], "open": [58, 72], "high": [58, 72], "low": [58, 72], "clos": [58, 72], "volum": [58, 72, 123], "f2": [58, 72], "ohlc": [58, 72], "intraday": [58, 72], "f3": [58, 72], "carnet": [58, 72], "tous": [58, 72, 78, 89, 95, 124, 125, 169, 196, 197, 198], "repr\u00e9sent": [58, 72, 157], "rend": [58, 72], "volatil": 58, "mobil": 58, "band": 58, "bolling": 58, "achat": 58, "vent": 58, "levi": 58, "hedg": [58, 72], "fund": [58, 72], "t1": [58, 72], "implant": [58, 72], "2007": [58, 72], "famill": 58, "trend": [58, 72], "following": [58, 72], "f4": [58, 72], "action": [58, 72], "bnp": [58, 72], "mean": [58, 72], "reversing": [58, 72], "revers": [58, 179], "f5": [58, 72], "pair": [58, 72], "f6": [58, 72], "styl": 58, "valu": 58, "growth": 58, "gestion": [58, 241], "portefeuill": [58, 72], "p1": [58, 64, 72], "horizon": 58, "daily": 58, "analys": [58, 138], "f7": [58, 72], "cour": [58, 72, 243], "d\u00e9but": [58, 72], "2003": [58, 72], "mi": [58, 72], "2008": [58, 72], "backtest": 58, "f8": [58, 72], "nav": [58, 72], "standard": [58, 233], "variat": [58, 121], "f9": [58, 72], "natur": 58, "f10": [58, 72], "fran\u00e7ais": [58, 72], "t2": [58, 72], "indiqu": [58, 72], "cred": [58, 72], "agricol": [58, 72], "danon": [58, 72], "societ": [58, 72], "g\u00e9n\u00e9ral": [58, 72], "f11": [58, 72], "d\u00e9composit": [58, 156, 159], "deal": [58, 72], "f12": [58, 72], "f13": [58, 72], "imag": [58, 72, 178], "f14": [58, 72], "n\u00e9gat": [58, 72, 235], "logn": [58, 72], "court": [58, 63, 72, 95, 99, 101, 156, 191, 192], "aller": [58, 181, 189, 190, 217, 218], "loin": [58, 89, 181, 187, 188, 217, 218], "diversif": 58, "expos": 59, "circuit": [60, 61, 154, 165], "hamiltonien": [60, 61], "kohonen": 60, "aper\u00e7u": [60, 160], "kruskal": 61, "arbre": [61, 63, 124, 135, 137, 155, 157, 215, 216], "poid": [61, 162], "minimal": 61, "a1": 61, "eul\u00e9rien": [61, 97], "a2": 61, "a3": 61, "simplif": 61, "a4": 61, "math\u00e9mat": [63, 163, 183], "continu": [63, 239], "d\u00e9riv": [63, 228], "vectoriel": 63, "produit": [63, 93, 122, 193, 194], "scalair": [63, 193, 194], "norm": [63, 117, 118], "histogramm": [63, 171, 179, 213, 214], "informat": 63, "csv": [63, 167], "hash": [63, 79, 166], "chemin": [63, 91, 94, 95, 97, 157, 191, 192, 241], "incourtourn": 63, "scik": [63, 135, 137], "learn": [63, 135, 137], "statsmodel": 63, "dessin": [63, 87, 108, 109, 115, 116, 124, 172], "d\u00e9couvert": [64, 133], "final": 64, "proch": [64, 83, 118, 125, 146, 148, 189, 190], "voisin": [64, 146, 148, 189, 190], "\u00e9tap": 64, "r\u00e9current": 64, "train": 64, "valid": [64, 137, 147], "hyp": [64, 149], "bas": [64, 127, 135, 150, 158, 193, 194], "beaucoup": 64, "d\u00e9finit": [64, 71, 72, 185, 186, 225, 239, 240, 243], "d1": [64, 72, 225, 239, 240, 243], "bruit": [64, 72], "blanc": [64, 72], "p2": [64, 72], "mult": [64, 133, 144, 145], "bibliograph": [64, 246], "cheat": [65, 67, 69, 70, 71], "sheet": [65, 67, 69, 70, 71], "conseil": [66, 71], "\u00e9crir": [66, 71, 83, 84, 87, 123, 125, 127, 170], "petit": [66, 71, 79, 87, 123, 168, 207], "Pas": 66, "global": [66, 72, 239, 246], "s\u00e9par": [66, 71, 191, 192, 195, 196], "charg": [66, 71], "interfac": [66, 71, 232, 246], "truc": [66, 71], "git": 67, "add": 67, "remot": 67, "submodul": 67, "checkout": 67, "specific": 67, "fil": [67, 70, 246], "from": 67, "creat": 67, "new": 67, "local": [67, 72, 201, 239], "branch": 67, "push": 67, "repository": 67, "remov": [67, 70], "reset": [67, 69], "updat": 67, "fix": 67, "mov": 67, "multipl": [67, 122, 185, 186, 225, 240, 248], "rebas": 67, "upsteam": 67, "and": 67, "eras": 67, "history": 67, "clon": 67, "of": 67, "all": [67, 70], "prec": 68, "jenkin": 69, "plugin": 69, "start": 69, "restart": 69, "password": 69, "linux": 70, "classic": 70, "installed": 70, "error": 70, "with": [70, 207], "clean": 70, "temporary": 70, "hard": 70, "driv": 70, "process": 70, "environment": 70, "other": 70, "langag": [71, 73, 126, 132, 225, 239, 240, 249], "numer": [71, 79, 119, 120], "boucl": [71, 72, 76, 127, 174, 217, 218, 239, 240], "for": [71, 72, 239], "whil": [71, 72, 239], "enumerat": 71, "zip": [71, 179, 240, 241], "map": 71, "yield": 71, "d\u00e9clar": [71, 72, 225, 239], "attribut": [71, 72, 197, 198, 225, 243], "m\u00e9thod": [71, 72, 89, 126, 127, 160, 197, 198, 199, 203, 204, 225, 233, 237, 240], "statiqu": [71, 72, 225], "instanc": [71, 225], "d\u00e9cor": 71, "text": [71, 96, 127, 167, 207, 208, 213, 214, 233, 241], "except": [71, 72, 181, 228, 229, 230], "confus": 71, "guillemet": 71, "rang": [71, 240], "initialis": 71, "partag": [71, 246], "moteur": 71, "syntax": [72, 225, 228, 239, 240, 243, 248], "entr\u00e9": [72, 242, 243], "d10": [72, 240], "frozenset": [72, 240], "d2": [72, 225, 239, 240], "instantiaion": [72, 225], "d3": [72, 225, 239, 240], "d4": [72, 225, 239, 240], "port": [72, 239], "d5": [72, 225, 239, 240], "tupl": [72, 161, 240], "d6": [72, 225, 239, 240], "mutabl": [72, 240], "d7": [72, 225, 240], "d8": [72, 225, 240], "surcharg": [72, 225, 239], "d9": [72, 240], "set": [72, 240], "s1": [72, 225, 228, 239, 243], "attrap": [72, 228], "s10": [72, 225], "s11": [72, 225], "s12": [72, 225], "s13": [72, 225], "__copy__": [72, 225], "s14": [72, 225], "fig": [72, 225], "s15": [72, 225], "s16": [72, 225], "h\u00e9rit": [72, 225], "s2": [72, 225, 228, 239, 243], "instanci": [72, 225], "instruct": [72, 228, 239], "pass": [72, 95, 239], "lev": [72, 228], "s3": [72, 225, 239, 243], "s4": [72, 225, 239], "s5": [72, 225, 239], "extens": [72, 76, 239, 240, 243], "s6": [72, 225, 239], "constructeur": [72, 225], "s7": [72, 225, 239], "s8": [72, 225, 239], "__str__": [72, 225], "d\u00e9faut": [72, 237, 239], "s9": [72, 225, 239], "ind\u00e9fin": [72, 239], "geo": 73, "En": [74, 168], "diagonal": [74, 163], "compl": [74, 75], "apprendr": 75, "older": 75, "version": [75, 86, 90, 109, 112, 142, 163, 172, 177, 181], "concept": [76, 239], "s\u00e9quenc": [76, 85, 126, 127, 233, 240], "notebook": [76, 78, 224], "licens": 77, "correct": [78, 99, 102, 103, 104, 105, 106, 107, 109, 122, 128, 132, 178, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218], "examen": 78, "streaming": 79, "bjkst": 79, "distinct": 79, "universal": 79, "hashing": 79, "collis": 79, "temp": [79, 85, 89, 93, 125, 170, 175, 204], "stream": [79, 170], "h_1": 79, "h_2": 79, "\u00e9gal": 79, "o\u00f9": [79, 125], "d\u00e9pend": 79, "epsilon": 79, "compos": [80, 86], "connex": [80, 86], "construir": [80, 89, 207, 208], "adjacent": [80, 86], "symetr": 80, "propr": [80, 207, 208, 228], "croiss": 80, "fait": [80, 126], "suiv": [80, 124, 126, 159], "retourn": [80, 94, 122, 123, 125, 126, 127], "fa\u00e7on": [81, 126, 189, 190], "mont": [81, 204], "\u00e9chel": 81, "distanc": [82, 83, 91, 94, 95, 115, 116, 124, 125, 158, 160, 220], "\u00e9dit": [82, 83, 220], "longueur": [82, 83, 220], "alambiqu": 82, "pag": [82, 207, 208], "wikipedi": 82, "na\u00efv": [83, 85, 175, 193], "tres": [83, 132], "si": [83, 84, 91, 174], "ff": 83, "f": [83, 240], "ph": 83, "person": 83, "sait": 83, "ordonnanc": 84, "d\u00e9termin": [84, 135, 159], "peut": [84, 126, 170, 175], "ex\u00e9cut": 84, "t\u00e2ch": 84, "Et": 84, "dur": [84, 121, 224], "li": 86, "puissanc": 86, "trouv": [86, 89, 127, 196, 197, 198, 207, 208], "model": [87, 88, 136, 142], "sird": [87, 88], "q0": 87, "propag": 87, "v\u00e9rifi": [87, 185, 186], "cel": [87, 89], "synthet": 87, "q6": [87, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 166, 167, 183, 184, 187, 188], "r\u00e9el": [87, 240], "cumul": 87, "\u00e9pid\u00e9miolog": 88, "visualis": [88, 94], "second": [88, 125, 175, 181, 194, 196, 233], "suffix": 89, "commun": [89, 233, 243], "partagent": 89, "constuir": 89, "assoc": 89, "chaqu": [89, 90, 125], "lettr": [89, 126, 166, 169], "termin": [89, 169], "ci": 89, "pris": 89, "tel": 89, "pouss": 89, "tout": [90, 91, 94, 96, 126, 127, 159, 170, 228, 243], "prend": [90, 167], "choix": 90, "s\u00e9lect": [90, 137, 149], "perf_count": 90, "compar": [90, 135, 170, 175], "vitesss": 90, "traveling": 91, "salesman": 91, "chois": 91, "rel": 91, "invers": 91, "am\u00e9lior": [91, 174], "moiti": 91, "possibl": [91, 92, 122, 174, 239], "plais": 91, "creus": 93, "\u00e9leg": 93, "affich": [94, 157], "tqdm": 94, "d\u00e9cod": 96, "mors": [96, 126], "traduir": 96, "contient": [96, 174], "alphabet": 96, "minimis": 96, "transcript": 96, "interpret": [96, 246], "ru": [97, 125], "paris": 97, "etap": 97, "bellman": 97, "kruskall": 97, "optimal": [97, 123, 135], "vari": 97, "sen": [97, 225], "interd": 97, "gaph": 97, "orient": 97, "windy": 97, "postman": 97, "cass": 98, "vigener": [98, 201, 202], "minut": [99, 130], "machain": 99, "evalu": [100, 101], "ann\u00e9": [100, 101], "2017": [100, 101, 114, 115, 116], "\u00e9nonc": [100, 111], "trait": 101, "sp\u00e9cif": 101, "cat\u00e9goriel": 101, "weekday": 101, "seul": [101, 127], "1a": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "e": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "interrog": [102, 103, 104, 105, 106, 107], "\u00e9crit": [102, 103, 104, 105, 106, 107, 111, 224], "septembr": [102, 106], "2014": [102, 103, 104, 105, 110], "octobr": [103, 117, 118, 119, 120, 125, 220], "novembr": [104, 105, 107, 108, 109, 121, 122, 123, 126], "2015": [106, 107, 111, 112], "td": [108, 109, 110, 111, 112, 113, 114], "27": [108, 109], "2012": [108, 109], "coloriag": [108, 109, 163], "spiral": [108, 109], "roug": [108, 123], "d\u00e9cembr": [110, 112, 113, 115, 116], "rattrapag": [111, 123, 124], "oral": 111, "lou": 112, "achet": 112, "appart": 112, "q7": [112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 166, 167, 183, 184, 187, 188], "exo": 112, "q8": [112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 183, 184], "q9": [112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 183, 184], "num\u00e9ros": 112, "t\u00e9l\u00e9phon": 112, "2016": 113, "q10": [113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 183, 184], "f\u00e9vri": 114, "commentair": [114, 225, 239, 240], "\u00e9chantillon": [115, 116, 117, 118], "encor": [115, 116], "seuil": 116, "2018": [117, 118], "m1": [117, 118, 122], "m2": [117, 118, 122], "m3": [117, 118, 122], "r\u00e9p\u00e9tit": [117, 118], "22": [119, 120], "2019": [119, 120], "distance_t": [119, 120], "distance_bord": [119, 120], "table_al": [119, 120], "n_table_al": [119, 120], "table_proch": [119, 120], "distance_n_tables_al": [119, 120], "meilleur_table_al": [119, 120], "plot_tabl": [119, 120], "vorono\u00ef": [119, 120], "kmean": [119, 120], "24": 121, "2020": 121, "gu\u00e9rison": 121, "kaplan": 121, "mei": 121, "publiqu": 121, "apres": 121, "T": 121, "vaccin": 121, "heur": 121, "2021": [122, 123], "lent": 122, "ecrir": [122, 125, 126, 127], "meilleur": 122, "option": 122, "v\u00e9rif": [122, 125], "mesure_temp": 122, "m4": 122, "pench": 122, "N": 122, "combien": [122, 174], "r\u00e9soudr": 122, "remarqu": 122, "lor": [122, 239], "15": 123, "air": 123, "surfac": [123, 163, 168], "briqu": 123, "fac": 123, "inclut": 123, "n\u00e9cessair": 123, "coll": 123, "extrem": 123, "bouteil": 123, "litr": 123, "larg": 123, "bleu": 123, "gross": 123, "mar": 124, "segment": 124, "niveau": 124, "Y": 125, "lorsqu": [125, 233], "2x2": 125, "indic": [125, 172], "m\u00e9decin": 125, "grill": 125, "10x10": 125, "quadrill": 125, "coordon": [125, 212], "dictionair": 125, "case_grill": 125, "pairwise_dist": 125, "1000x2": 125, "100x2": 125, "faux": 125, "corrig": 125, "d\u00e9codag": 126, "0": [0, 126, 135, 159], "int\u00e9ress": 126, "messag": [126, 229, 233, 246], "re\u00e7oit": 126, "correspond": 126, "form": 126, "Il": 126, "faut": 126, "Que": [126, 175], "\u00e9quiprob": 126, "chang": [0, 126, 156, 174, 181], "coding": 126, "b": 126, "\u00eatre": 126, "D": [126, 179, 233], "motif": [127, 207, 208], "pir": 127, "souhait": 127, "mainten": 127, "sein": 127, "acc\u00e9ler": 127, "processus": 127, "consider": 127, "coupl": 127, "non": [127, 167, 217, 218, 239, 240], "transform": [127, 172], "d\u00e9coup": 127, "\u00e9quivalent": 127, "conna\u00eetr": 128, "temporel": 131, "structur": [132, 167, 179], "jeu": [133, 137, 142, 154, 159, 165, 181, 183, 184, 205, 206], "mal": 133, "balanc": 133, "\u00e9volu": [133, 182], "varianc": 133, "retour": [133, 163], "derni": [133, 159, 175], "s\u00fbr": 133, "gradient": 134, "boosting": 134, "rat": 134, "inspir": [134, 167], "quantil": 134, "learning_rat": 134, "xgboost": [134, 135], "lightgbm": 134, "catboost": 134, "tre": 135, "hyperparametr": 135, "overfitting": 135, "d\u00e9cis": 135, "max_depth": 135, "min_samples_spl": 135, "random": 135, "forest": 135, "n_estimator": 135, "decis": 135, "r\u00e9seau": 135, "neuron": 135, "alpha": 135, "aberr": [135, 138, 228], "intervall": 135, "confianc": 135, "featur": [136, 189, 190], "ridg": 137, "lasso": 137, "nouvel": 137, "for\u00eat": 137, "g\u00e9ometr": 137, "nullit": 137, "coefficient": 137, "api": 137, "m\u00e9moir": [137, 179], "singl": 138, "spectrum": 138, "ssa": 138, "articiel": 138, "autocorrel": 138, "pr\u00e9dict": [138, 152], "acp": 139, "project": 139, "logist": [140, 141], "2d": 141, "disjoint": 142, "manuel": 142, "automatis": [142, 145], "articificiel": 142, "stacking": 145, "cross": 147, "\u00e9valu": 148, "d\u00e9coupag": [151, 193, 194], "stratifi": 151, "vin": 152, "polyn\u00f4mial": 153, "pipelin": 153, "d\u00e9": [154, 165], "rotat": [154, 165], "De": 154, "profondeur": [155, 157], "maximal": [155, 157], "transit": 156, "composit": 156, "transposit": 156, "d\u00e9m\u00eal": 156, "jet": 157, "depuis": 157, "racin": [157, 183, 184], "jusqu": 157, "intermed": [157, 187], "is": 157, "product": 158, "2048": [159, 205, 206], "libr": 159, "pourvu": 159, "perdu": 159, "aggreg": 159, "jou": 159, "coup": 159, "sach": 159, "direct": 159, "scor": [159, 213, 214], "fais": 159, "fin": [159, 239], "bref": 160, "station": 160, "m\u00e9tro": 160, "ensembl": [161, 182, 217, 240, 248], "insert": 161, "dequ": [161, 234], "loi": 162, "multinomial": 162, "bootstrap": 162, "colori": 163, "proport": 163, "couvert": 163, "\u00e7a": [163, 167, 207, 248], "r\u00e9partit": [166, 191], "hashag": 166, "pseudo": 166, "light": 166, "xml": [167, 170], "format": [167, 170, 195, 196, 207, 236, 240, 241], "relir": 167, "essai": 167, "html": 167, "sql": 167, "sas": 167, "trop": 167, "plac": [167, 233], "zippon": 167, "cercl": 168, "pi": 168, "ni": 168, "aucun": 168, "parfait": 168, "extrair": 169, "remplac": 169, "rim": 169, "elles": 169, "ail": 169, "flux": 170, "lir": [170, 213, 214], "gros": 170, "d\u00e9s\u00e9rialis": 170, "heap": 172, "tas": 172, "chos": [172, 244], "lieu": 172, "simplifi": [172, 239], "gauss": [173, 222], "gin": 174, "profil": [174, 176], "_gini_final": 174, "savoir": 174, "_gini_cumsum": 174, "convolu": 175, "ex\u00e9cu": [175, 243], "im2col": 175, "nouveau": 175, "\u00e9xecu": 175, "d\u00e9duir": 175, "profilag": 175, "\u00e9ven": [175, 233], "\u00e9chantillonnag": 175, "pouv": 175, "dir": 175, "bizarrer": 176, "web": 178, "scraping": 178, "pokemon": 178, "caract\u00e9rist": 178, "spars": [179, 189, 190], "chi": 180, "formul": 180, "obstacl": 181, "\u00e9chiqui": 181, "pr\u00e9vu": 182, "d\u00e9correl": [183, 184], "q11": [183, 184], "q12": [183, 184], "q13": [183, 184], "cryptag": [185, 186], "homomorphic": [185, 186], "craig": [185, 186], "gentry": [185, 186], "stabl": [185, 186], "addit": [185, 186], "impl\u00e9mentent": [185, 186], "spectral": [187, 188], "clustering": [187, 188], "pratiqu": [187, 188, 243], "th\u00e9oriqu": 187, "nn": [189, 190], "perform": [189, 190], "imagin": [189, 190], "vit": [189, 190], "observ": 190, "skis": 191, "facult": [191, 192], "prolong": [191, 192], "degr": [191, 192], "facebook": [191, 192], "puzzl": [193, 194, 195, 196], "moin": 193, "recouvr": [193, 194], "soudoi": [193, 194], "prisonni": [193, 194], "intelligent": [193, 194], "approch": 194, "watershed": [195, 196], "bagarreur": [195, 196], "bin\u00f4m": [195, 196], "magiqu": [197, 198], "suit": [197, 198], "piec": [199, 200, 225], "normal": [199, 200, 239], "truqu": [199, 200], "mer": 199, "mixt": [199, 200], "d\u00e9tail": [201, 216], "ordon": 201, "crypt": [201, 202], "d\u00e9crypt": [201, 202], "selon": [201, 202], "int\u00e9gral": [203, 204], "rectangl": [203, 204], "r\u00e9calcitr": 204, "carlo": 204, "arr\u00eat": 204, "gagn": [205, 206], "regl": [205, 206], "rightarrow": [207, 208], "cherch": [207, 208], "url": [207, 208], "wikip\u00e9di": [207, 208], "subtil": 207, "pyramid": [211, 212], "bigarr": [211, 212], "couleur": 212, "devin": [213, 214], "langu": [213, 214], "normalis": [213, 214], "int": 217, "str": [217, 240], "compact": 217, "berem": 219, "elev": 219, "barem": 219, "presqu": 220, "levenshtein": 220, "align": 220, "pr\u00e9fix": 223, "pr\u00e9sent": 225, "apport": 225, "implicit": 225, "aid": 225, "inclu": 225, "deepcopy": 225, "monnai": 225, "issubclass": 225, "isinst": 225, "C": [227, 246], "oblig": 227, "princip": 228, "lanc": [228, 233], "try": 228, "imbriqu": 228, "d\u00e9fin": 228, "personnalis": [228, 231, 233], "pieg": 228, "usag": 229, "pil": 229, "call": 229, "stack": 229, "explicit": 229, "convent": 229, "logging": 231, "intercept": 231, "tkint": 233, "objet": [233, 240, 241], "zon": 233, "bouton": 233, "sais": 233, "coch": 233, "rond": 233, "radio": 233, "barr": 233, "d\u00e9fil": 233, "combobox": 233, "canev": 233, "menus": 233, "disposit": 233, "fen\u00eatr": 233, "emplac": [233, 243], "pack": 233, "grid": 233, "even": 233, "principal": 233, "focus": 233, "press": 233, "associ": 233, "menu": 233, "pr\u00e9d\u00e9fin": 233, "contr\u00f4l": 233, "bo\u00eet": 233, "dialogu": 233, "compt": 233, "rebour": 233, "communiqu": 233, "ordereddict": 234, "namedtupl": 234, "count": 234, "encoding": [237, 241], "condens": 239, "tru": 239, "b1": 239, "pilotag": 239, "break": 239, "else": 239, "suppress": [239, 241], "identif": 239, "eval": [239, 240], "exec": 239, "indent": 239, "usuel": 239, "rien": 240, "bool\u00e9en": 240, "formatag": 240, "particul": 240, "r": 240, "complex": [240, 241], "byt": 240, "bytearray": 240, "collag": 240, "concaten": 240, "dict": 240, "repr": 240, "fourn": 240, "affect": 240, "hi\u00e9rarch": 240, "intern": [240, 243], "accentu": 240, "mod": 241, "Ce": 243, "cycliqu": 243, "arborescent": 243, "paquetag": 243, "relat": 243, "extern": 243, "parall\u00e9lis": 245, "thread": 246, "synchronis": 246, "attent": 246, "multithreading": 246, "concurrent": 246, "futur": 246, "blocag": 246, "async": 246, "await": 246, "asyncio": 246, "lock": 246, "cython": 246, "m\u00e9lang": 246, "jav": 246, "assembl": 248, "nomm": 248, "log": 0}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Survol algorithmique": [[1, "survol-algorithmique"]], "Ordres de grandeur": [[1, "ordres-de-grandeur"]], "Comprendre le co\u00fbt d\u2019un algorithme": [[1, "comprendre-le-cout-d-un-algorithme"]], "Mot-cl\u00e9": [[1, "mot-cle"]], "Catalogue d\u2019algorithmes": [[1, "catalogue-d-algorithmes"]], "Probl\u00e8mes NP-complets": [[1, "problemes-np-complets"]], "Id\u00e9e pour d\u00e9monstrer qu\u2019un probl\u00e8me est NP-complet": [[1, "idee-pour-demonstrer-qu-un-probleme-est-np-complet"]], "Liens": [[1, "liens"]], "Articles sur des algorithmes": [[1, "articles-sur-des-algorithmes"]], "Livres": [[1, "livres"]], "Pour s\u2019entra\u00eener": [[1, "pour-s-entrainer"]], "Google\u2019s recommandations": [[1, "google-s-recommandations"]], "examples.construction_classique": [[2, "examples-construction-classique"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "Python n\u2019accepte pas les accents": [[2, "indexfaqref-python0"], [73, "index-faqref-0-6"]], "Modifier un dictionnaire en le parcourant": [[2, "indexexref-Base -0"], [235, "index-exref-1-1"]], "Quelle est la diff\u00e9rence entre return et print ?": [[2, "indexfaqref-python1"], [73, "index-faqref-0-10"]], "calcul de la somme des dix premiers entiers au carr\u00e9": [[2, "indexexref-Base0"], [235, "index-exref-0-1"]], "Eviter d\u2019effectuer le m\u00eame appel deux fois": [[2, "indexexref-Base -1"], [235, "index-exref-1-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en datetime": [[2, "indexexref-Base1"], [235, "index-exref-0-4"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "comptage": [[2, "indexexref-Base2"], [235, "index-exref-0-2"]], "fonction comme param\u00e8tre": [[2, "indexexref-Base3"], [235, "index-exref-0-8"]], "conversion d\u2019une matrice en cha\u00eene de caract\u00e8res": [[2, "indexexref-Base4"], [235, "index-exref-0-6"]], "conversion d\u2019une matrice en un vecteur": [[2, "indexexref-Base5"], [235, "index-exref-0-7"]], "minimum avec position": [[2, "indexexref-Base6"], [235, "index-exref-0-9"]], "recherche avec index": [[2, "indexexref-Base7"], [235, "index-exref-0-10"]], "recherche dichotomique": [[2, "indexexref-Base8"], [235, "index-exref-0-11"]], "calcul d\u2019une somme": [[2, "indexexref-Base9"], [235, "index-exref-0-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en matrice": [[2, "indexexref-Base10"], [235, "index-exref-0-5"]], "tri, garder les positions initiales": [[2, "indexexref-Base11"], [235, "index-exref-0-12"]], "conversion d\u2019un vecteur en une matrice": [[2, "indexexref-Base12"], [235, "index-exref-0-3"]], "Jeux de donn\u00e9es": [[3, "jeux-de-donnees"]], "Cartographie": [[3, "cartographie"]], "Classification": [[3, "classification"], [64, "classification"], [131, null]], "Outils": [[3, "outils"], [132, null]], "R\u00e9gression": [[3, "regression"], [64, "regression"], [131, null]], "faq": [[4, "faq"]], "teachpyx.faq.faq_python": [[4, "module-teachpyx.faq.faq_python"]], "Quelle est la diff\u00e9rence entre / et // - division ?": [[4, "indexfaqref-python0"], [73, "index-faqref-0-9"]], "Quel est l\u2019entier le plus grand ?": [[4, "indexfaqref-python1"], [73, "index-faqref-0-8"]], "Tabulations ou espace ?": [[4, "indexfaqref-python2"], [73, "index-faqref-0-14"]], "Comment it\u00e9rer sur les r\u00e9sultats d\u2019une expression r\u00e9guli\u00e8re ?": [[4, "indexfaqref-python3"], [73, "index-faqref-0-2"]], "R\u00e9cup\u00e9rer le nom du jour \u00e0 partir d\u2019une date": [[4, "indexfaqref-python4"], [73, "index-faqref-0-12"]], "R\u00e9cup\u00e9rer le nom du mois \u00e0 partir d\u2019une date": [[4, "indexfaqref-python5"], [73, "index-faqref-0-13"]], "R\u00e9cup\u00e9rer la liste des modules install\u00e9s": [[4, "indexfaqref-python6"], [73, "index-faqref-0-11"]], "Pourquoi l\u2019installation de pandas (ou numpy)\nne marche pas sous Windows avec pip ?": [[4, "indexfaqref-python7"], [73, "index-faqref-0-5"]], "Obtenir des informations sur les packages install\u00e9s": [[4, "indexfaqref-python8"], [73, "index-faqref-0-4"]], "propri\u00e9t\u00e9": [[4, "indexfaqref-python9"], [73, "index-faqref-0-15"]], "Comment \u00e9viter sys.path.append\u2026 quand on d\u00e9veloppe un module ?": [[4, "indexfaqref-python10"], [73, "index-faqref-0-3"]], "Qu\u2019est-ce qu\u2019un type immuable ou immutable ?": [[4, "indexfaqref-python11"], [73, "index-faqref-0-7"]], "Classe sortable": [[4, "indexfaqref-python12"], [73, "index-faqref-0-1"]], "A quoi sert un ``StringIO`` ?": [[4, "indexfaqref-python13"], [73, "index-faqref-0-0"]], "teachpyx.faq.faq_exception": [[4, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_geo": [[4, "module-teachpyx.faq.faq_geo"]], "Les fichiers GEOFLA ne contiennent pas de longitude, latitude ?": [[4, "indexfaqref-geo0"], [73, "index-faqref-2-0"]], "teachpyx.faq.faq_numpy": [[4, "module-teachpyx.faq.faq_numpy"]], "Code inclus dans cette librairie": [[5, "code-inclus-dans-cette-librairie"]], "Constructions classiques": [[5, null], [225, "constructions-classiques"], [233, "constructions-classiques"], [234, "constructions-classiques"], [235, "constructions-classiques"], [239, "constructions-classiques"]], "Fonctions illustrant des solutions": [[5, null]], "Animations": [[5, null]], "FAQ": [[5, null], [73, "faq"]], "examples.numpysex": [[6, "module-teachpyx.examples.numpysex"]], "op\u00e9rations avec numpy.matrix": [[6, "indexexref-numpy0"], [51, "index-exref-0-0"]], "Quels sont les types que numpy supporte ?": [[6, "indexfaqref-numpy0"], [73, "index-faqref-1-0"]], "teachpyx.practice.rues_paris": [[7, "module-teachpyx.practice.rues_paris"]], "teachpyx.practice.tsp_bresenham": [[8, "module-teachpyx.practice.tsp_bresenham"]], "teachpyx.practice.tsp_kohonen": [[9, "module-teachpyx.practice.tsp_kohonen"]], "teachpyx.practice.tsp_kruskal": [[10, "module-teachpyx.practice.tsp_kruskal"]], "tools": [[11, "tools"]], "decompress_zip": [[11, "decompress-zip"]], "download_and_unzip": [[11, "download-and-unzip"]], "draw_diagram": [[11, "draw-diagram"]], "draw_graph_graphviz": [[11, "draw-graph-graphviz"]], "total_size": [[11, "total-size"]], "profiling": [[11, "module-teachpyx.tools.profiling"]], "run_graphviz": [[11, "run-graphviz"]], "run_subprocess": [[11, "run-subprocess"]], "video": [[11, "module-teachpyx.tools.display.pygame_helper"]], "teachpyx.video.tsp_kohonen_pygame": [[12, "teachpyx-video-tsp-kohonen-pygame"]], "teachpyx.video.tsp_kruskal": [[13, "teachpyx-video-tsp-kruskal"]], "2022 - Assurance auto": [[14, "assurance-auto"]], "Assurance": [[14, "assurance"]], "Donn\u00e9es": [[14, "donnees"]], "Premier r\u00e9flexe : apprentissage et test": [[14, "premier-reflexe-apprentissage-et-test"]], "Ajout de variables agr\u00e9g\u00e9es": [[14, "ajout-de-variables-agregees"]], "Donn\u00e9es g\u00e9ographiques": [[14, "donnees-geographiques"]], "Grand nombre de variables": [[14, "grand-nombre-de-variables"]], "Mod\u00e9lisation un peu plus anonyme": [[14, "modelisation-un-peu-plus-anonyme"]], "2022-11-31 : rappel feuille de route 2022": [[15, "rappel-feuille-de-route-2022"]], "S\u00e9ance 1 - 7-9 - introduction, dictionnaire": [[15, "seance-1-7-9-introduction-dictionnaire"]], "S\u00e9ance 2 - 14-9 - programmation dynamique, voyageur de commerce": [[15, "seance-2-14-9-programmation-dynamique-voyageur-de-commerce"]], "S\u00e9ance 3 - 21-9 - numpy, pandas": [[15, "seance-3-21-9-numpy-pandas"]], "S\u00e9ance 4 - 28-9 - graphes": [[15, "seance-4-28-9-graphes"]], "S\u00e9ance 5 - 5-10 - s\u00e9rialisation, tests unitaires, profiling": [[15, "seance-5-5-10-serialisation-tests-unitaires-profiling"]], "S\u00e9ance 6 - 12-10 - expressions r\u00e9guli\u00e8res, webscrapping": [[15, "seance-6-12-10-expressions-regulieres-webscrapping"]], "S\u00e9ance 7 - 19-10 - top k, tri": [[15, "seance-7-19-10-top-k-tri"]], "S\u00e9ance 8 - 26-10 - graphes": [[15, "seance-8-26-10-graphes"]], "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)": [[16, "utilisation-de-cartopy-sous-windows-sous-wsl"]], "2023-08-03 : Code Jam": [[17, "code-jam"]], "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne": [[18, "l-enigme-d-hermionne"]], "2023-09-06 : ENSAE": [[19, "ensae"]], "2023-11-31 : rappel feuille de route 2023": [[20, "rappel-feuille-de-route-2023"]], "S\u00e9ance 1": [[20, "seance-1"], [24, "seance-1"]], "S\u00e9ance 2": [[20, "seance-2"], [24, "seance-2"]], "S\u00e9ance 3": [[20, "seance-3"], [24, "seance-3"]], "S\u00e9ance 4": [[20, "seance-4"], [24, "seance-4"]], "S\u00e9ance 5": [[20, "seance-5"], [24, "seance-5"]], "S\u00e9ance 6": [[20, "seance-6"], [24, "seance-6"]], "S\u00e9ance 7": [[20, "seance-7"], [24, "seance-7"]], "S\u00e9ance 8": [[20, "seance-8"], [24, "seance-8"]], "2024-01-18 : WSL - nettoyage": [[21, "wsl-nettoyage"]], "2024-03-01 : feuille de route 2024": [[22, "feuille-de-route-2024"]], "S\u00e9ance 1 (26/1)": [[22, "seance-1-26-1"]], "S\u00e9ance 2 (2/2)": [[22, "seance-2-2-2"]], "S\u00e9ance 3 (8/2)": [[22, "seance-3-8-2"]], "S\u00e9ance 4 (16/2)": [[22, "seance-4-16-2"]], "S\u00e9ance 5 (23/2)": [[22, "seance-5-23-2"]], "Projets": [[22, "projets"]], "2024-09-04 : ENSAE": [[23, "ensae"]], "2024-11-31 : rappel feuille de route 2024": [[24, "rappel-feuille-de-route-2024"]], "Collections d\u2019articles p\u00e9rissables": [[25, "collections-d-articles-perissables"]], "2024": [[25, null]], "2023": [[25, null], [221, "id1"]], "2022": [[25, null]], "Gallerie d\u2019exemples": [[26, "gallerie-d-exemples"]], "Gallerie d\u2019exemples sur le machine learning": [[26, "gallerie-d-exemples-sur-le-machine-learning"], [27, "gallerie-d-exemples-sur-le-machine-learning"]], "Gallerie d\u2019exemples sur la programmation": [[26, "gallerie-d-exemples-sur-la-programmation"], [31, "gallerie-d-exemples-sur-la-programmation"]], "Corr\u00e9lations": [[28, "correlations"]], "Receiver Operating Characteristic (ROC)": [[29, "receiver-operating-characteristic-roc"]], "Classification binaire": [[29, "classification-binaire"]], "Trois courbes": [[29, "trois-courbes"]], "predict_proba ou decision_function": [[29, "predict-proba-ou-decision-function"]], "Precision Rappel": [[29, "precision-rappel"]], "M\u00e9trique F1": [[29, "metrique-f1"]], "Pourquoi ROC alors ?": [[29, "pourquoi-roc-alors"]], "Computation times": [[30, "computation-times"], [45, "computation-times"], [46, "computation-times"], [250, "computation-times"]], "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution": [[32, "l-enigme-d-einstein-et-sa-resolution"]], "Fonction permutation": [[32, "fonction-permutation"]], "La classe Rule": [[32, "la-classe-rule"]], "Explicit rules": [[32, "explicit-rules"]], "Description du probl\u00e8me avec ce code": [[32, "description-du-probleme-avec-ce-code"]], "Float Conversion": [[33, "float-conversion"]], "Probability (float64)x == (float32)x": [[33, "probability-float64-x-float32-x"]], "Interval length distribution": [[33, "interval-length-distribution"]], "An answer to the initial question": [[33, "an-answer-to-the-initial-question"]], "An answer to a similar question: what about not strict comparison?": [[33, "an-answer-to-a-similar-question-what-about-not-strict-comparison"]], "Conclusion": [[33, "conclusion"], [58, "conclusion"], [113, "Conclusion"]], "Le GIL": [[34, "le-gil"]], "Deux listes en parallel": [[34, "deux-listes-en-parallel"]], "Un autre sc\u00e9nario": [[34, "un-autre-scenario"]], "Hypercube et autres exercices": [[35, "hypercube-et-autres-exercices"]], "Q1 - triple r\u00e9cursivit\u00e9": [[35, "q1-triple-recursivite"]], "Q2 - comparaison de listes": [[35, "q2-comparaison-de-listes"]], "Q3 - pr\u00e9cision des calculs": [[35, "q3-precision-des-calculs"]], "Q4 - hypercube": [[35, "q4-hypercube"]], "Astuces avec les lambda functions": [[36, "astuces-avec-les-lambda-functions"]], "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations": [[37, "mathador-enigme-a-4-operations"]], "Points d\u2019impl\u00e9mentation avec numpy": [[38, "points-d-implementation-avec-numpy"]], "acc\u00e9der \u00e0 un \u00e9l\u00e9ment en particulier": [[38, "acceder-a-un-element-en-particulier"]], "Pandas et groupby": [[39, "pandas-et-groupby"]], "groupby et valeur manquantes": [[39, "groupby-et-valeur-manquantes"]], "Parties de dames": [[40, "parties-de-dames"]], "Q1": [[40, "q1"], [84, "Q1"], [91, "Q1"], [102, "Q1"], [102, "id1"], [103, "Q1"], [103, "id1"], [104, "Q1"], [104, "id1"], [104, "id6"], [105, "Q1"], [106, "Q1"], [106, "id1"], [107, "Q1"], [107, "id1"], [109, "Q1"], [112, "Q1"], [112, "id1"], [112, "id3"], [113, "Q1"], [114, "Q1"], [121, "Q1"], [183, "Q1"], [184, "Q1"], [187, "Q1"], [187, "id1"], [188, "Q1"], [188, "id1"]], "Q2": [[40, "q2"], [84, "Q2"], [91, "Q2"], [102, "Q2"], [102, "id2"], [103, "Q2"], [103, "id2"], [104, "Q2"], [104, "id2"], [104, "id7"], [105, "Q2"], [106, "Q2"], [106, "id2"], [107, "Q2"], [107, "id2"], [109, "Q2"], [112, "Q2"], [112, "id2"], [112, "id4"], [113, "Q2"], [114, "Q2"], [183, "Q2"], [184, "Q2"], [187, "Q2"], [187, "id2"], [188, "Q2"], [188, "id2"]], "Q3": [[40, "q3"], [91, "Q3"], [102, "Q3"], [102, "id3"], [103, "Q3"], [103, "id3"], [104, "Q3"], [104, "id3"], [104, "id8"], [105, "Q3"], [106, "Q3"], [106, "id3"], [107, "Q3"], [107, "id3"], [109, "Q3"], [112, "Q3"], [113, "Q3"], [114, "Q3"], [183, "Q3"], [184, "Q3"], [187, "Q3"], [188, "Q3"]], "Q4": [[40, "q4"], [91, "Q4"], [103, "Q4"], [103, "id4"], [104, "Q4"], [104, "id4"], [104, "id9"], [105, "Q4"], [112, "Q4"], [113, "Q4"], [113, "id1"], [114, "Q4"], [183, "Q4"], [184, "Q4"], [187, "Q4"], [188, "Q4"]], "S\u00e9rialisation": [[41, "serialisation"], [244, "serialisation"]], "JSON": [[41, "json"], [244, "json"]], "Ecriture (json)": [[41, "ecriture-json"]], "Lecture (json)": [[41, "lecture-json"]], "Limite": [[41, "limite"]], "S\u00e9rialisation rapide": [[41, "serialisation-rapide"]], "Pickle": [[41, "pickle"]], "Ecriture (pickle)": [[41, "ecriture-pickle"]], "Lecture (pickle)": [[41, "lecture-pickle"]], "Les classes": [[41, "les-classes"]], "R\u00e9duire la taille": [[41, "reduire-la-taille"]], "Cas des fonctions": [[41, "cas-des-fonctions"]], "Binaire": [[41, "binaire"], [244, "binaire"]], "Fonction et JSON": [[41, "fonction-et-json"]], "Cas des it\u00e9rateurs": [[41, "cas-des-iterateurs"]], "Cas des g\u00e9n\u00e9rateurs": [[41, "cas-des-generateurs"]], "S\u00e9rialisation avec protobuf": [[42, "serialisation-avec-protobuf"]], "Sch\u00e9ma": [[42, "schema"]], "Compilation": [[42, "compilation"]], "Import du module cr\u00e9\u00e9": [[42, "import-du-module-cree"]], "S\u00e9rialisation en cha\u00eene de caract\u00e8res": [[42, "serialisation-en-chaine-de-caracteres"]], "Plusieurs cha\u00eenes de caract\u00e8res": [[42, "plusieurs-chaines-de-caracteres"]], "S\u00e9rialisation JSON": [[42, "serialisation-json"]], "Exercices expliqu\u00e9s de programmation": [[43, "exercices-expliques-de-programmation"]], "Copie de listes": [[43, "copie-de-listes"]], "Erreur de logique": [[43, "erreur-de-logique"]], "Co\u00fbt d\u2019un algorithme": [[43, "cout-d-un-algorithme"]], "H\u00e9ritage double": [[43, "heritage-double"]], "Pr\u00e9cision des calculs": [[43, "precision-des-calculs"]], "R\u00e9flexions autour du voyage de commerce (TSP)": [[44, "reflexions-autour-du-voyage-de-commerce-tsp"]], "Des villes tir\u00e9es au hasard": [[44, "des-villes-tirees-au-hasard"]], "Croisements": [[44, "croisements"], [95, "Croisements"]], "Noeud de d\u00e9part constant": [[44, "noeud-de-depart-constant"]], "Un peu d\u2019al\u00e9atoire en plus": [[44, "un-peu-d-aleatoire-en-plus"]], "Dataframes": [[47, "dataframes"]], "Tracer une carte en Python": [[48, "Tracer-une-carte-en-Python"]], "donn\u00e9es": [[48, "donn\u00e9es"], [142, "donn\u00e9es"]], "cartopy": [[48, "cartopy"]], "plotly, gmaps, bingmaps": [[48, "plotly,-gmaps,-bingmaps"]], "geopandas": [[48, "geopandas"]], "folium": [[48, "folium"]], "cartopy avec les donn\u00e9es d\u2019OpenStreetMap": [[48, "cartopy-avec-les-donn\u00e9es-d'OpenStreetMap"]], "Graphes": [[49, "graphes"], [128, null], [131, null]], "Matrices et DataFrames": [[50, "matrices-et-dataframes"], [240, "matrices-et-dataframes"]], "Calcul matriciel": [[51, "calcul-matriciel"]], "Calcul Matriciel, Optimisation": [[52, "Calcul-Matriciel,-Optimisation"]], "Numpy arrays": [[52, "Numpy-arrays"]], "Creation d\u2019un array: notion de datatype, et dimensions": [[52, "Creation-d'un-array:-notion-de-datatype,-et-dimensions"]], "Indexation, Slicing, Fancy indexing": [[52, "Indexation,-Slicing,-Fancy-indexing"]], "View contre Copy": [[52, "View-contre-Copy"]], "Manipulation de shape": [[52, "Manipulation-de-shape"]], "Exercice 1 : Echiquier et Crible d\u2019Erathosth\u00e8ne": [[52, "Exercice-1-:-Echiquier-et-Crible-d'Erathosth\u00e8ne"]], "Manipulation et Op\u00e9rations sur les arrays": [[52, "Manipulation-et-Op\u00e9rations-sur-les-arrays"]], "Op\u00e9rations \u00e9l\u00e9ment par \u00e9l\u00e9ment": [[52, "Op\u00e9rations-\u00e9l\u00e9ment-par-\u00e9l\u00e9ment"]], "Broadcasting": [[52, "Broadcasting"]], "R\u00e9ductions": [[52, "R\u00e9ductions"]], "Alg\u00e8bre lin\u00e9aire": [[52, "Alg\u00e8bre-lin\u00e9aire"]], "Exemples simples": [[52, "Exemples-simples"]], "Numpy Matrix": [[52, "Numpy-Matrix"]], "G\u00e9n\u00e9ration de nombres al\u00e9atoires et statistiques": [[52, "G\u00e9n\u00e9ration-de-nombres-al\u00e9atoires-et-statistiques"]], "Exercice 2 : marches al\u00e9atoires": [[52, "Exercice-2-:-marches-al\u00e9atoires"]], "Exercice 3 : retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires": [[52, "Exercice-3-:-retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires"]], "Optimisation avec scipy": [[52, "Optimisation-avec-scipy"]], "Exercice 4 : simulation, r\u00e9gression, estimation par maximisation de la vraisemblance": [[52, "Exercice-4-:-simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance"]], "R\u00e9f\u00e9rences": [[52, "R\u00e9f\u00e9rences"]], "El\u00e9ments de r\u00e9ponses pour les exercices": [[52, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"], [53, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"]], "Exercice 1 (Echiquier et Crible d\u2019Erathosthene)": [[52, "Exercice-1-(Echiquier-et-Crible-d'Erathosthene)"]], "Exercice 2 (marches al\u00e9atoires)": [[52, "Exercice-2-(marches-al\u00e9atoires)"]], "Exercice 3 (retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires)": [[52, "Exercice-3-(retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires)"]], "Exercice 4 (simulation, r\u00e9gression, estimation par maximisation de la vraisemblance)": [[52, "Exercice-4-(simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance)"]], "DataFrame et Graphes": [[53, "DataFrame-et-Graphes"]], "DataFrame": [[53, "DataFrame"], [63, "dataframe"]], "Series": [[53, "Series"]], "DataFrame (pandas)": [[53, "DataFrame-(pandas)"]], "Lecture et \u00e9criture de DataFrame": [[53, "Lecture-et-\u00e9criture-de-DataFrame"]], "DataFrame et Index": [[53, "DataFrame-et-Index"]], "Notation avec le symbole :": [[53, "Notation-avec-le-symbole-:"]], "Exercice 1 : cr\u00e9er un fichier Excel": [[53, "Exercice-1-:-cr\u00e9er-un-fichier-Excel"], [53, "id1"]], "Manipuler un DataFrame": [[53, "Manipuler-un-DataFrame"]], "6 op\u00e9rations : filtrer, union, sort, group by, join, pivot": [[53, "6-op\u00e9rations-:-filtrer,-union,-sort,-group-by,-join,-pivot"]], "filter": [[53, "filter"]], "union": [[53, "union"]], "sort": [[53, "sort"]], "group by": [[53, "group-by"]], "join (merge ou fusion)": [[53, "join-(merge-ou-fusion)"]], "pivot (tableau crois\u00e9 dynamique)": [[53, "pivot-(tableau-crois\u00e9-dynamique)"]], "Lambda fonctions": [[53, "Lambda-fonctions"]], "Exercice 2 : lambda fonction": [[53, "Exercice-2-:-lambda-fonction"]], "Exercice 3 : moyennes par groupes": [[53, "Exercice-3-:-moyennes-par-groupes"], [53, "id2"]], "Avec ou sans index": [[53, "Avec-ou-sans-index"]], "Dates": [[53, "Dates"], [236, "dates"]], "Plot(s)": [[53, "Plot(s)"]], "R\u00e9cup\u00e9ration des donn\u00e9es": [[53, "R\u00e9cup\u00e9ration-des-donn\u00e9es"]], "Exercice 4 : nuage de points": [[53, "Exercice-4-:-nuage-de-points"]], "Exercice 5 : graphe d\u2019une distribution avec pandas": [[53, "Exercice-5-:-graphe-d'une-distribution-avec-pandas"]], "matplotlib": [[53, "matplotlib"], [63, "matplotlib"]], "Exercice 6 : distribution des mariages par jour": [[53, "Exercice-6-:-distribution-des-mariages-par-jour"], [53, "id3"]], "Annexes": [[53, "Annexes"]], "Cr\u00e9er un fichier Excel avec plusieurs feuilles": [[53, "Cr\u00e9er-un-fichier-Excel-avec-plusieurs-feuilles"]], "Exercice 2 : lambda function": [[53, "Exercice-2-:-lambda-function"]], "Exercice 4 : \u00e9cart entre les mari\u00e9s": [[53, "Exercice-4-:-\u00e9cart-entre-les-mari\u00e9s"]], "Exercice 5 : graphe de la distribution avec pandas": [[53, "Exercice-5-:-graphe-de-la-distribution-avec-pandas"]], "Mesures de vitesse sur les dataframes": [[54, "Mesures-de-vitesse-sur-les-dataframes"]], "Cr\u00e9ation d\u2019un dataframe \u00e0 partir d\u2019un it\u00e9rateur": [[54, "Cr\u00e9ation-d'un-dataframe-\u00e0-partir-d'un-it\u00e9rateur"]], "Cr\u00e9ation d\u2019un array \u00e0 partir d\u2019un it\u00e9rateur": [[54, "Cr\u00e9ation-d'un-array-\u00e0-partir-d'un-it\u00e9rateur"]], "Calcul matriciel avec numpy (exercices)": [[55, "Calcul-matriciel-avec-numpy-(exercices)"]], "Enonc\u00e9": [[55, "Enonc\u00e9"], [56, "Enonc\u00e9"], [80, "Enonc\u00e9"], [82, "Enonc\u00e9"], [84, "Enonc\u00e9"], [85, "Enonc\u00e9"], [87, "Enonc\u00e9"], [89, "Enonc\u00e9"], [90, "Enonc\u00e9"], [91, "Enonc\u00e9"], [92, "Enonc\u00e9"], [167, "Enonc\u00e9"], [168, "Enonc\u00e9"], [169, "Enonc\u00e9"], [174, "Enonc\u00e9"]], "La ma\u00eetrise du slice": [[55, "La-ma\u00eetrise-du-slice"]], "La ma\u00eetrise du nan": [[55, "La-ma\u00eetrise-du-nan"], [56, "La-ma\u00eetrise-du-nan"]], "La ma\u00eetrise des types": [[55, "La-ma\u00eetrise-des-types"], [56, "La-ma\u00eetrise-des-types"]], "La ma\u00eetrise du broadcasting": [[55, "La-ma\u00eetrise-du-broadcasting"]], "La ma\u00eetrise des index": [[55, "La-ma\u00eetrise-des-index"], [56, "La-ma\u00eetrise-des-index"]], "La ma\u00eetrise des op\u00e9rations et des fonctions": [[55, "La-ma\u00eetrise-des-op\u00e9rations-et-des-fonctions"]], "Q1 : calculer la valeur du \\chi_2 d\u2019un tableau de contingence": [[55, "Q1-:-calculer-la-valeur-du-\\chi_2-d'un-tableau-de-contingence"], [55, "id1"]], "Q2 : calculer une distribution un peu particuli\u00e8re": [[55, "Q2-:-calculer-une-distribution-un-peu-particuli\u00e8re"], [55, "id2"]], "Q3 : on veut cr\u00e9er une matrice identit\u00e9 un million par un million": [[55, "Q3-:-on-veut-cr\u00e9er-une-matrice-identit\u00e9-un-million-par-un-million"], [55, "id3"]], "Q4 : vous devez cr\u00e9er l\u2019application StopCovid": [[55, "Q4-:-vous-devez-cr\u00e9er-l'application-StopCovid"], [55, "id4"]], "R\u00e9ponses": [[55, "R\u00e9ponses"], [56, "R\u00e9ponses"], [80, "R\u00e9ponses"], [82, "R\u00e9ponses"], [84, "R\u00e9ponses"], [87, "R\u00e9ponses"], [89, "R\u00e9ponses"], [90, "R\u00e9ponses"], [91, "R\u00e9ponses"], [167, "R\u00e9ponses"], [168, "R\u00e9ponses"], [169, "R\u00e9ponses"], [174, "R\u00e9ponses"]], "Manipulation de donn\u00e9es avec pandas (exercices)": [[56, "Manipulation-de-donn\u00e9es-avec-pandas-(exercices)"]], "Cr\u00e9ation d\u2019un dataframe": [[56, "Cr\u00e9ation-d'un-dataframe"]], "La ma\u00eetrise des index des lignes": [[56, "La-ma\u00eetrise-des-index-des-lignes"]], "La ma\u00eetrise des index des colonnes": [[56, "La-ma\u00eetrise-des-index-des-colonnes"]], "Lien vers numpy": [[56, "Lien-vers-numpy"]], "Cr\u00e9ation de colonnes": [[56, "Cr\u00e9ation-de-colonnes"]], "Modifications de valeurs": [[56, "Modifications-de-valeurs"]], "Une erreur ou warning fr\u00e9quent": [[56, "Une-erreur-ou-warning-fr\u00e9quent"]], "La ma\u00eetrise des fonctions": [[56, "La-ma\u00eetrise-des-fonctions"]], "On r\u00e9cup\u00e8re les donn\u00e9es du COVID par r\u00e9gion et par \u00e2ge et premier graphe": [[56, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"], [87, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"]], "Q1 : refaire le graphique pr\u00e9c\u00e9dent pour votre classe d\u2019\u00e2ge": [[56, "Q1-:-refaire-le-graphique-pr\u00e9c\u00e9dent-pour-votre-classe-d'\u00e2ge"], [56, "id1"]], "Q2 : faire de m\u00eame avec les s\u00e9ries diff\u00e9renci\u00e9es": [[56, "Q2-:-faire-de-m\u00eame-avec-les-s\u00e9ries-diff\u00e9renci\u00e9es"], [56, "id2"]], "Q3 : faire de m\u00eame avec des s\u00e9ries liss\u00e9es sur sur 7 jours": [[56, "Q3-:-faire-de-m\u00eame-avec-des-s\u00e9ries-liss\u00e9es-sur-sur-7-jours"], [56, "id3"]], "Q4 : fusion de tables par d\u00e9partements": [[56, "Q4-:-fusion-de-tables-par-d\u00e9partements"], [56, "id4"]], "Petit apart\u00e9": [[56, "Petit-apart\u00e9"]], "Q5 : une carte ?": [[56, "Q5-:-une-carte-?"]], "Numpy et tableau de contingence": [[57, "Numpy-et-tableau-de-contingence"]], "Strat\u00e9gie automatique de trading en finance": [[58, "strategie-automatique-de-trading-en-finance"]], "Quelques r\u00e9f\u00e9rences": [[58, "quelques-references"]], "Vocabulaire financier": [[58, "vocabulaire-financier"]], "March\u00e9s liquides": [[58, "marches-liquides"]], "Description d\u2019une s\u00e9rie financi\u00e8re": [[58, "description-d-une-serie-financiere"]], "Figure F1 : Open-High-Low-Close-Volume": [[58, "indexmathe-Figure0"], [72, "index-mathdef-1-31"]], "Figure F2 : OHLC Intraday": [[58, "indexmathe-Figure1"], [72, "index-mathdef-1-37"]], "Figure F3 : Exemple de carnet d\u2019ordres, tous les ordres ne sont pas repr\u00e9sent\u00e9s.": [[58, "indexmathe-Figure2"], [72, "index-mathdef-1-38"]], "Rendements, Volatilit\u00e9, Corr\u00e9lation": [[58, "rendements-volatilite-correlation"]], "Moyenne mobile, bandes de Bollinger": [[58, "moyenne-mobile-bandes-de-bollinger"]], "Achats, ventes, levier": [[58, "achats-ventes-levier"]], "Hedge Funds": [[58, "hedge-funds"]], "Table T1 : Implantation des Hedge Funds en 2007": [[58, "indexmathe-Table0"], [72, "index-mathdef-4-78"]], "Familles de strat\u00e9gies": [[58, "familles-de-strategies"]], "Trend Following": [[58, "trend-following"]], "Figure F4 : Action BNP et Trend Following": [[58, "indexmathe-Figure3"], [72, "index-mathdef-1-39"]], "Mean Reversing ou Mean Reversion": [[58, "mean-reversing-ou-mean-reversion"]], "Figure F5 : Action BNP et Mean Reversing": [[58, "indexmathe-Figure4"], [72, "index-mathdef-1-40"]], "Pair Trading": [[58, "pair-trading"]], "Figure F6 : Action BNP et pair trading": [[58, "indexmathe-Figure5"], [72, "index-mathdef-1-41"]], "Styles, Value, Growth": [[58, "styles-value-growth"]], "Gestion de portefeuille": [[58, "gestion-de-portefeuille"]], "Probl\u00e8me P1 : optimisation d\u2019un portefeuille": [[58, "indexmathe-Probl\u00e8me0"], [72, "index-mathdef-2-46"]], "Horizon de trading, intraday, daily": [[58, "horizon-de-trading-intraday-daily"]], "Analyse d\u2019une strat\u00e9gie": [[58, "analyse-d-une-strategie"]], "Figure F7 : Le cours de la BNP entre d\u00e9but 2003 et mi 2008": [[58, "indexmathe-Figure6"], [72, "index-mathdef-1-42"]], "Backtest": [[58, "backtest"]], "Figure F8 : NAV": [[58, "indexmathe-Figure7"], [72, "index-mathdef-1-43"]], "Mod\u00e9lisation": [[58, "modelisation"]], "R\u00e9sultats standards": [[58, "resultats-standards"]], "Variation de param\u00e8tres": [[58, "variation-de-parametres"]], "Figure F9 : NAV d\u2019une strat\u00e9gie": [[58, "indexmathe-Figure8"], [72, "index-mathdef-1-44"]], "Autres s\u00e9ries financi\u00e8res de m\u00eame nature": [[58, "autres-series-financieres-de-meme-nature"]], "Figure F10 : 4 actions fran\u00e7aises": [[58, "indexmathe-Figure9"], [72, "index-mathdef-1-32"]], "Table T2 : Indicateurs BNP, Cr\u00e9dit Agricole, Danone, Soci\u00e9t\u00e9 G\u00e9n\u00e9rale": [[58, "indexmathe-Table1"], [72, "index-mathdef-4-79"]], "Figure F11 : Rendement pour 4 actions fran\u00e7aises": [[58, "indexmathe-Figure10"], [72, "index-mathdef-1-33"]], "D\u00e9composition en deals": [[58, "decomposition-en-deals"]], "Figure F12 : Deal": [[58, "indexmathe-Figure11"], [72, "index-mathdef-1-34"]], "Figure F13 : Deal en image": [[58, "indexmathe-Figure12"], [72, "index-mathdef-1-35"]], "Figure F14 : Deal positifs, n\u00e9gatifs, logns, courts": [[58, "indexmathe-Figure13"], [72, "index-mathdef-1-36"]], "Pour aller plus loin": [[58, "pour-aller-plus-loin"], [181, "Pour-aller-plus-loin"]], "Diversification": [[58, "diversification"]], "Expos\u00e9s": [[59, "exposes"]], "Circuit hamiltonien et Kohonen": [[60, "circuit-hamiltonien-et-kohonen"]], "Aper\u00e7u": [[60, "apercu"]], "Cartes de Kohonen": [[60, "cartes-de-kohonen"]], "Circuit hamiltonien et Kruskal": [[61, "circuit-hamiltonien-et-kruskal"]], "Arbre de poids minimal et circuit hamiltonien": [[61, "arbre-de-poids-minimal-et-circuit-hamiltonien"]], "Arbre de poids minimum": [[61, "arbre-de-poids-minimum"]], "Algorithme A1 : Kruskal": [[61, "indexmathe-Algorithme0"]], "Circuit eul\u00e9rien": [[61, "circuit-eulerien"]], "Algorithme A2 : Circuit Eul\u00e9rien": [[61, "indexmathe-Algorithme1"]], "Circuit hamiltonien": [[61, "circuit-hamiltonien"]], "Algorithme A3 : Circuit hamiltonien": [[61, "indexmathe-Algorithme2"]], "Simplification du circuit hamiltonien": [[61, "simplification-du-circuit-hamiltonien"]], "Algorithme A4 : TSP": [[61, "indexmathe-Algorithme3"]], "Machine Learning": [[62, "machine-learning"], [78, "machine-learning"], [131, "machine-learning"], [131, null]], "Quelques rappels": [[63, "quelques-rappels"]], "Rappels math\u00e9matiques": [[63, "rappels-mathematiques"]], "Fonction": [[63, "fonction"]], "Fonction continue": [[63, "fonction-continue"]], "Fonction d\u00e9rivable": [[63, "fonction-derivable"]], "Espace vectoriel": [[63, "espace-vectoriel"]], "Produit scalaire": [[63, "produit-scalaire"]], "Norme": [[63, "norme"]], "Matrice": [[63, "matrice"]], "Probl\u00e8me d\u2019optimisation": [[63, "probleme-d-optimisation"]], "Variable al\u00e9atoire": [[63, "variable-aleatoire"]], "Histogramme": [[63, "histogramme"]], "Corr\u00e9lation": [[63, "correlation"]], "Nuage de points": [[63, "nuage-de-points"]], "Rappels informatiques": [[63, "rappels-informatiques"]], "Le fichier csv": [[63, "le-fichier-csv"]], "Array": [[63, "array"]], "Fonction de hash": [[63, "fonction-de-hash"]], "Arbre": [[63, "arbre"]], "Rappels algorithmiques": [[63, "rappels-algorithmiques"]], "Le plus court chemin dans un graphe": [[63, "le-plus-court-chemin-dans-un-graphe"]], "La recherche dichotomique": [[63, "la-recherche-dichotomique"]], "Le voyageur du commerce": [[63, "le-voyageur-du-commerce"]], "Modules incourtournables en Python": [[63, "modules-incourtournables-en-python"]], "numpy": [[63, "numpy"], [73, "numpy"], [129, null]], "pandas": [[63, "pandas"], [129, null]], "scikit-learn": [[63, "scikit-learn"]], "statsmodels": [[63, "statsmodels"]], "Dessiner des cartes": [[63, "dessiner-des-cartes"]], "Exercices": [[63, "exercices"], [64, "exercices"], [75, null]], "Classification et r\u00e9gression": [[64, "classification-et-regression"]], "D\u00e9couverte du machine learning": [[64, "decouverte-du-machine-learning"]], "Finalit\u00e9": [[64, "finalite"]], "Les donn\u00e9es": [[64, "les-donnees"], [97, "Les-donn\u00e9es"], [191, "Les-donn\u00e9es"]], "Les plus proches voisins": [[64, "les-plus-proches-voisins"]], "Trois \u00e9tapes r\u00e9currentes": [[64, "trois-etapes-recurrentes"]], "Train / test": [[64, "train-test"]], "Validation crois\u00e9e": [[64, "validation-croisee"]], "Hyper-param\u00e8tres": [[64, "hyper-parametres"]], "Deux probl\u00e8mes \u00e0 la base de beaucoup d\u2019autres": [[64, "deux-problemes-a-la-base-de-beaucoup-d-autres"]], "D\u00e9finition D1 : bruit blanc": [[64, "indexmathe-D\u00e9finition0"], [72, "index-mathdef-0-5"]], "Probl\u00e8me P1 : R\u00e9gression": [[64, "indexmathe-Probl\u00e8me0"], [72, "index-mathdef-2-45"]], "Probl\u00e8me P2 : Classification binaire": [[64, "indexmathe-Probl\u00e8me1"], [72, "index-mathdef-2-47"]], "Classification multi-classe": [[64, "classification-multi-classe"], [144, "Classification-multi-classe"]], "Machine learning et programmation": [[64, "machine-learning-et-programmation"]], "Bibliographie": [[64, "bibliographie"], [246, "bibliographie"]], "Cheat Sheets": [[65, "cheat-sheets"]], "Quelques conseils pour \u00e9crire un programme": [[66, "quelques-conseils-pour-ecrire-un-programme"]], "Des petites fonctions": [[66, "des-petites-fonctions"], [71, "des-petites-fonctions"]], "Pas de variables globales": [[66, "pas-de-variables-globales"]], "S\u00e9parer les calculs, le chargement des donn\u00e9es, l\u2019interface graphique": [[66, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"], [71, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"]], "Utiliser des fonctions de tests": [[66, "utiliser-des-fonctions-de-tests"]], "Trucs et astuces": [[66, "trucs-et-astuces"], [71, "trucs-et-astuces"]], "Cheat Sheet on Git": [[67, "cheat-sheet-on-git"]], "Add a remote": [[67, "add-a-remote"]], "Add a submodule": [[67, "add-a-submodule"]], "Checkout a specific file from a remote": [[67, "checkout-a-specific-file-from-a-remote"]], "Create a new local branch": [[67, "create-a-new-local-branch"]], "Create a new remote branch": [[67, "create-a-new-remote-branch"]], "Push modification to remote repository": [[67, "push-modification-to-remote-repository"]], "Remove a submodule": [[67, "remove-a-submodule"]], "Reset a branch": [[67, "reset-a-branch"]], "Reset a submodule": [[67, "reset-a-submodule"]], "Update a branch": [[67, "update-a-branch"]], "Update a submodule": [[67, "update-a-submodule"]], "Update a submodule to the remote branch": [[67, "update-a-submodule-to-the-remote-branch"]], "Fix submodules": [[67, "fix-submodules"]], "Move multiple files": [[67, "move-multiple-files"]], "Rebase a branch to upsteam branch": [[67, "rebase-a-branch-to-upsteam-branch"]], "Rebase a branch to upsteam branch and erase history": [[67, "rebase-a-branch-to-upsteam-branch-and-erase-history"]], "Clone a part of a repository, not all": [[67, "clone-a-part-of-a-repository-not-all"]], "Pr\u00e9cis": [[68, "precis"]], "Cheat Sheet on Jenkins": [[69, "cheat-sheet-on-jenkins"]], "Installation": [[69, "installation"]], "Plugins": [[69, "plugins"]], "Start, Restart": [[69, "start-restart"]], "Reset passwords": [[69, "reset-passwords"]], "Cheat Sheet on Linux": [[70, "cheat-sheet-on-linux"]], "Classic": [[70, "classic"]], "List all installed packages": [[70, "list-all-installed-packages"]], "Remove packages": [[70, "remove-packages"]], "Error with a package": [[70, "error-with-a-package"]], "Clean temporary files": [[70, "clean-temporary-files"]], "Hard drive": [[70, "hard-drive"]], "Processes": [[70, "processes"]], "Environment variable": [[70, "environment-variable"]], "Others": [[70, "others"]], "Cheat sheet: Python": [[71, "cheat-sheet-python"]], "Le langage": [[71, "le-langage"]], "Les variables": [[71, "les-variables"]], "Les types immuables": [[71, "les-types-immuables"]], "Les types modifiables": [[71, "les-types-modifiables"]], "Liste": [[71, "liste"], [233, "liste"], [240, "liste"]], "Dictionnaire": [[71, "dictionnaire"], [240, "dictionnaire"]], "Tableaux num\u00e9riques": [[71, "tableaux-numeriques"]], "Tests et boucles": [[71, "tests-et-boucles"]], "Tests": [[71, "tests"], [239, "tests"]], "for ou while": [[71, "for-ou-while"]], "Fonction enumerate": [[71, "fonction-enumerate"]], "Fonction zip": [[71, "fonction-zip"]], "Fonction map": [[71, "fonction-map"]], "Autres mot-cl\u00e9s": [[71, "autres-mot-cles"]], "Fonctions": [[71, "fonctions"], [201, "Fonctions"], [239, "fonctions"], [248, "fonctions"]], "D\u00e9finition, param\u00e8tres": [[71, "definition-parametres"]], "mot-cl\u00e9 lambda": [[71, "mot-cle-lambda"]], "mot-cl\u00e9 yield": [[71, "mot-cle-yield"]], "Classes": [[71, "classes"], [132, null], [159, "Classes"], [225, "classes"], [226, "classes"]], "D\u00e9claration d\u2019une classe": [[71, "declaration-d-une-classe"]], "Attributs et m\u00e9thodes": [[71, "attributs-et-methodes"]], "M\u00e9thodes statiques": [[71, "methodes-statiques"]], "Op\u00e9rateurs": [[71, "operateurs"], [160, "Op\u00e9rateurs"], [225, "operateurs"]], "Copie d\u2019instances": [[71, "copie-d-instances"], [225, "copie-d-instances"]], "H\u00e9ritage": [[71, "heritage"], [225, "heritage"]], "D\u00e9corateur": [[71, "decorateur"]], "Fichiers": [[71, "fichiers"], [207, "Fichiers"], [237, "fichiers"], [241, "fichiers"]], "Ecriture dans un fichier texte": [[71, "ecriture-dans-un-fichier-texte"]], "Lecture dans un fichier texte": [[71, "lecture-dans-un-fichier-texte"]], "Modules": [[71, "modules"], [207, "Modules"]], "Exceptions": [[71, "exceptions"], [228, "exceptions"], [230, "exceptions"]], "Erreurs, confusions fr\u00e9quentes": [[71, "erreurs-confusions-frequentes"]], "Variables": [[71, "variables"], [240, "variables"]], "Cha\u00eene de caract\u00e8res = tableau de caract\u00e8res": [[71, "chaine-de-caracteres-tableau-de-caracteres"]], "Guillemets ou pas": [[71, "guillemets-ou-pas"]], "Boucles": [[71, "boucles"], [239, "boucles"]], "range ou pas range": [[71, "range-ou-pas-range"]], "Initialisation": [[71, "initialisation"]], "Diff\u00e9rence entre print et return": [[71, "difference-entre-print-et-return"]], "Trois conseils pour \u00e9crire un programme": [[71, "trois-conseils-pour-ecrire-un-programme"]], "Utiliser des tests unitaires": [[71, "utiliser-des-tests-unitaires"]], "Partager du code": [[71, "partager-du-code"]], "Moteurs de recherche": [[71, "moteurs-de-recherche"]], "Syntaxes et d\u00e9finitions": [[72, "syntaxes-et-definitions"]], "D\u00e9finitions": [[72, "definitions"]], "D\u00e9finition D1 : classe": [[72, "index-mathdef-0-6"], [225, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : point d\u2019entr\u00e9e du programme": [[72, "index-mathdef-0-7"], [243, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : test": [[72, "index-mathdef-0-8"], [239, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : variable": [[72, "index-mathdef-0-9"], [240, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D10 : frozenset": [[72, "index-mathdef-0-10"], [240, "indexmathe-D\u00e9finition9"]], "D\u00e9finition D2 : constante": [[72, "index-mathdef-0-11"], [240, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : fonction": [[72, "index-mathdef-0-12"], [239, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : instantiaion": [[72, "index-mathdef-0-13"], [225, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D3 : fonction r\u00e9cursive": [[72, "index-mathdef-0-14"], [239, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : m\u00e9thode": [[72, "index-mathdef-0-15"], [225, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : type immuable (ou immutable)": [[72, "index-mathdef-0-16"], [240, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D4 : attribut": [[72, "index-mathdef-0-17"], [225, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : cha\u00eene de caract\u00e8res": [[72, "index-mathdef-0-18"], [240, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : port\u00e9e d\u2019un variable": [[72, "index-mathdef-0-19"], [239, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D5 : m\u00e9thode statique": [[72, "index-mathdef-0-20"], [225, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : tuple": [[72, "index-mathdef-0-21"], [240, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : variable locale": [[72, "index-mathdef-0-22"], [239, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D6 : attribut statique": [[72, "index-mathdef-0-23"], [225, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : type modifiable (ou mutable)": [[72, "index-mathdef-0-24"], [240, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : variable globale": [[72, "index-mathdef-0-25"], [239, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D7 : h\u00e9ritage": [[72, "index-mathdef-0-26"], [225, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D7 : liste": [[72, "index-mathdef-0-27"], [240, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D8 : dictionnaire": [[72, "index-mathdef-0-28"], [240, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D8 : surcharge": [[72, "index-mathdef-0-29"], [225, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D9 : set": [[72, "index-mathdef-0-30"], [240, "indexmathe-D\u00e9finition8"]], "Figures": [[72, "figures"]], "Probl\u00e8mes": [[72, "problemes"], [78, "problemes"], [78, null]], "Syntaxe": [[72, "syntaxe"], [225, "syntaxe"], [248, "syntaxe"]], "Syntaxe S1 : Attraper une exception": [[72, "index-mathdef-3-48"], [228, "indexmathe-Syntaxe0"]], "Syntaxe S1 : D\u00e9claration d\u2019une classe": [[72, "index-mathdef-3-49"], [225, "indexmathe-Syntaxe0"]], "Syntaxe S1 : Tests": [[72, "index-mathdef-3-50"], [239, "indexmathe-Syntaxe0"]], "Syntaxe S1 : importer un module (1)": [[72, "index-mathdef-3-51"], [243, "indexmathe-Syntaxe0"]], "Syntaxe S10 : D\u00e9claration d\u2019un attribut statique": [[72, "index-mathdef-3-52"], [225, "indexmathe-Syntaxe9"]], "Syntaxe S11 : D\u00e9claration d\u2019une propri\u00e9t\u00e9": [[72, "index-mathdef-3-53"], [225, "indexmathe-Syntaxe10"]], "Syntaxe S12 : D\u00e9claration d\u2019une propri\u00e9t\u00e9 (2)": [[72, "index-mathdef-3-54"], [225, "indexmathe-Syntaxe11"]], "Syntaxe S13 : D\u00e9claration de l\u2019op\u00e9rateur __copy__": [[72, "index-mathdef-3-55"], [225, "indexmathe-Syntaxe12"]], "Syntaxe S14 : D\u00e9claration d\u2019attributs fig\u00e9s": [[72, "index-mathdef-3-56"], [225, "indexmathe-Syntaxe13"]], "Syntaxe S15 : H\u00e9ritage": [[72, "index-mathdef-3-57"], [225, "indexmathe-Syntaxe14"]], "Syntaxe S16 : Surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[72, "index-mathdef-3-58"], [225, "indexmathe-Syntaxe15"]], "Syntaxe S2 : Instanciation d\u2019une classe": [[72, "index-mathdef-3-59"], [225, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Instruction pass": [[72, "index-mathdef-3-60"], [239, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Lever une exception": [[72, "index-mathdef-3-61"], [228, "indexmathe-Syntaxe1"]], "Syntaxe S2 : importer un module (2)": [[72, "index-mathdef-3-62"], [243, "indexmathe-Syntaxe1"]], "Syntaxe S3 : Boucle while": [[72, "index-mathdef-3-63"], [239, "indexmathe-Syntaxe2"]], "Syntaxe S3 : D\u00e9claration d\u2019une m\u00e9thode": [[72, "index-mathdef-3-64"], [225, "indexmathe-Syntaxe2"]], "Syntaxe S3 : importer un module (3)": [[72, "index-mathdef-3-65"], [243, "indexmathe-Syntaxe2"]], "Syntaxe S4 : Appel d\u2019une m\u00e9thode": [[72, "index-mathdef-3-66"], [225, "indexmathe-Syntaxe3"]], "Syntaxe S4 : Boucle for": [[72, "index-mathdef-3-67"], [239, "indexmathe-Syntaxe3"]], "Syntaxe S5 : D\u00e9claration d\u2019un attribut": [[72, "index-mathdef-3-68"], [225, "indexmathe-Syntaxe4"]], "Syntaxe S5 : Liste en extension": [[72, "index-mathdef-3-69"], [239, "indexmathe-Syntaxe4"]], "Syntaxe S6 : D\u00e9claration d\u2019un constructeur": [[72, "index-mathdef-3-70"], [225, "indexmathe-Syntaxe5"]], "Syntaxe S6 : D\u00e9claration d\u2019une fonction": [[72, "index-mathdef-3-71"], [239, "indexmathe-Syntaxe5"]], "Syntaxe S7 : Appel d\u2019un constructeur": [[72, "index-mathdef-3-72"], [225, "indexmathe-Syntaxe6"]], "Syntaxe S7 : Appel d\u2019une fonction": [[72, "index-mathdef-3-73"], [239, "indexmathe-Syntaxe6"]], "Syntaxe S8 : D\u00e9claration de l\u2019op\u00e9rateur __str__": [[72, "index-mathdef-3-74"], [225, "indexmathe-Syntaxe7"]], "Syntaxe S8 : Valeurs par d\u00e9faut": [[72, "index-mathdef-3-75"], [239, "indexmathe-Syntaxe7"]], "Syntaxe S9 : D\u00e9claration d\u2019une m\u00e9thode statique": [[72, "index-mathdef-3-76"], [225, "indexmathe-Syntaxe8"]], "Syntaxe S9 : Nombre ind\u00e9fini de param\u00e8tres": [[72, "index-mathdef-3-77"], [239, "indexmathe-Syntaxe8"]], "Tables": [[72, "tables"]], "Langage Python": [[73, "langage-python"]], "geo": [[73, "geo"]], "En diagonal": [[74, "en-diagonal"]], "Compl\u00e9ments": [[74, null], [75, null]], "Introduction": [[76, "introduction"], [79, "Introduction"], [233, "introduction"]], "Installation de Python": [[76, "installation-de-python"]], "Installation d\u2019extensions ou modules ou packages": [[76, "installation-d-extensions-ou-modules-ou-packages"]], "Accents": [[76, "accents"]], "Trois concepts, s\u00e9quence, test, boucle": [[76, "trois-concepts-sequence-test-boucle"]], "Algorithmes": [[76, "algorithmes"], [78, "algorithmes"], [78, null], [78, null], [128, "algorithmes"]], "Fichier ou notebook": [[76, "fichier-ou-notebook"]], "Tous les notebooks": [[78, "tous-les-notebooks"]], "Python": [[78, "python"], [78, null], [78, null], [173, "Python"]], "Enonc\u00e9 - Correction": [[78, "enonce-correction"]], "Data": [[78, "data"], [78, null]], "Correction d\u2019examens": [[78, "correction-d-examens"]], "Examens": [[78, null]], "machine learning": [[78, null]], "Algorithmes de streaming, BJKST": [[79, "Algorithmes-de-streaming,-BJKST"]], "Estimer le nombre d\u2019\u00e9l\u00e9ments distincts: l\u2019algorithme BJKST": [[79, "Estimer-le-nombre-d'\u00e9l\u00e9ments-distincts:-l'algorithme-BJKST"]], "Universal hashing": [[79, "Universal-hashing"]], "Collisions": [[79, "Collisions"]], "Algorithme BJKST": [[79, "Algorithme-BJKST"]], "R\u00e9sultats num\u00e9riques": [[79, "R\u00e9sultats-num\u00e9riques"]], "Temps de calcul en fonction de la taille du stream": [[79, "Temps-de-calcul-en-fonction-de-la-taille-du-stream"]], "Un peu plus sur la pr\u00e9cision de l\u2019estimateur": [[79, "Un-peu-plus-sur-la-pr\u00e9cision-de-l'estimateur"]], "h_1 et h_2 \u00e9gales \u00e0 l\u2019identit\u00e9": [[79, "h_1-et-h_2-\u00e9gales-\u00e0-l'identit\u00e9"]], "cas o\u00f9 la taille du hash est petite": [[79, "cas-o\u00f9-la-taille-du-hash-est-petite"]], "cas o\u00f9 la taille de hash est plus grande": [[79, "cas-o\u00f9-la-taille-de-hash-est-plus-grande"]], "la taille de hash d\u00e9pend de la pr\u00e9cision \\epsilon": [[79, "la-taille-de-hash-d\u00e9pend-de-la-pr\u00e9cision-\\epsilon"]], "Graphe et Composantes connexes": [[80, "Graphe-et-Composantes-connexes"]], "Q1 : construire une matrice d\u2019adjacence sym\u00e9trique al\u00e9atoire": [[80, "Q1-:-construire-une-matrice-d'adjacence-sym\u00e9trique-al\u00e9atoire"], [80, "id1"]], "Q2 : calculer les valeurs propres et les trier par ordre croissant": [[80, "Q2-:-calculer-les-valeurs-propres-et-les-trier-par-ordre-croissant"], [80, "id2"]], "Q3 : que fait l\u2019algorithme suivant": [[80, "Q3-:-que-fait-l'algorithme-suivant"], [80, "id3"]], "Q4 : construire un algorithme qui retourne les composantes connexes d\u2019un graphe": [[80, "Q4-:-construire-un-algorithme-qui-retourne-les-composantes-connexes-d'un-graphe"], [80, "id4"]], "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.": [[81, "Calculer-le-nombre-de-fa\u00e7ons-de-monter-une-\u00e9chelle."]], "Enonc\u00e9s": [[81, "Enonc\u00e9s"], [96, "Enonc\u00e9s"], [99, "enonces"], [128, null], [132, null]], "Enonc\u00e9 1": [[81, "Enonc\u00e9-1"], [102, "Enonc\u00e9-1"], [103, "Enonc\u00e9-1"], [104, "Enonc\u00e9-1"], [105, "Enonc\u00e9-1"], [106, "Enonc\u00e9-1"], [107, "Enonc\u00e9-1"]], "Enonc\u00e9 2": [[81, "Enonc\u00e9-2"], [102, "Enonc\u00e9-2"], [103, "Enonc\u00e9-2"], [104, "Enonc\u00e9-2"], [106, "Enonc\u00e9-2"], [107, "Enonc\u00e9-2"]], "Enonc\u00e9 3": [[81, "Enonc\u00e9-3"], [104, "Enonc\u00e9-3"]], "Solutions": [[81, "Solutions"], [96, "Solutions"]], "Solution au probl\u00e8me 1": [[81, "Solution-au-probl\u00e8me-1"], [96, "Solution-au-probl\u00e8me-1"]], "Solution au probl\u00e8me 2": [[81, "Solution-au-probl\u00e8me-2"]], "Solution au probl\u00e8me 3": [[81, "Solution-au-probl\u00e8me-3"]], "Distance d\u2019\u00e9dition": [[82, "Distance-d'\u00e9dition"], [83, "Distance-d'\u00e9dition"]], "Q1 : Distance simple entre deux mots de m\u00eame longueur": [[82, "Q1-:-Distance-simple-entre-deux-mots-de-m\u00eame-longueur"], [82, "id1"]], "Q2 : Distance simple entre deux mots de longueur diff\u00e9rente": [[82, "Q2-:-Distance-simple-entre-deux-mots-de-longueur-diff\u00e9rente"], [82, "id2"]], "Q3 : Distance alambiqu\u00e9e\u2026": [[82, "Q3-:-Distance-alambiqu\u00e9e..."], [82, "id3"]], "Q4 : impl\u00e9menter l\u2019algorithme de la page wikipedia": [[82, "Q4-:-impl\u00e9menter-l'algorithme-de-la-page-wikipedia"], [82, "id4"]], "Distance entre deux mots de m\u00eame longueur et tests unitaires": [[83, "Distance-entre-deux-mots-de-m\u00eame-longueur-et-tests-unitaires"]], "Distance na\u00efve": [[83, "Distance-na\u00efve"]], "Distance tr\u00e8s na\u00efve": [[83, "Distance-tr\u00e8s-na\u00efve"]], "Distance entre deux mots de longueur diff\u00e9rente mais pas si diff\u00e9rente": [[83, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente-mais-pas-si-diff\u00e9rente"]], "Distance entre deux mots de longueur diff\u00e9rente": [[83, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente"]], "Test unitaires": [[83, "Test-unitaires"]], "m et n sont tr\u00e8s proches, et alors ?": [[83, "m-et-n-sont-tr\u00e8s-proches,-et-alors-?"]], "ff, f, ph, f\u2026 plus personne ne sait \u00e9crire": [[83, "ff,-f,-ph,-f...-plus-personne-ne-sait-\u00e9crire"]], "Probl\u00e8me d\u2019ordonnancement": [[84, "Probl\u00e8me-d'ordonnancement"]], "Q1 : \u00e9crire un algorithme qui d\u00e9termine dans quel ordre on peut ex\u00e9cuter les t\u00e2ches.": [[84, "Q1-:-\u00e9crire-un-algorithme-qui-d\u00e9termine-dans-quel-ordre-on-peut-ex\u00e9cuter-les-t\u00e2ches."]], "Q2 : Et si les t\u00e2ches n\u2019ont plus la m\u00eame dur\u00e9e ?": [[84, "Q2-:-Et-si-les-t\u00e2ches-n'ont-plus-la-m\u00eame-dur\u00e9e-?"]], "La sous-s\u00e9quence de plus grande somme": [[85, "La-sous-s\u00e9quence-de-plus-grande-somme"]], "Solution na\u00efve": [[85, "Solution-na\u00efve"], [193, "Solution-na\u00efve"]], "Solution plus rapide": [[85, "Solution-plus-rapide"]], "Solution dichotomique": [[85, "Solution-dichotomique"]], "Solution lin\u00e9aire": [[85, "Solution-lin\u00e9aire"]], "Comparaison des temps de calcul": [[85, "Comparaison-des-temps-de-calcul"]], "Application": [[85, "Application"]], "Graphes al\u00e9atoires": [[86, "Graphes-al\u00e9atoires"]], "Graphe al\u00e9atoire - matrice d\u2019adjacence al\u00e9atoire": [[86, "Graphe-al\u00e9atoire---matrice-d'adjacence-al\u00e9atoire"]], "Vocabulaire li\u00e9 aux graphes": [[86, "Vocabulaire-li\u00e9-aux-graphes"]], "Apart\u00e9 : matrice d\u2019adjacence \u00e0 la puissance n": [[86, "Apart\u00e9-:-matrice-d'adjacence-\u00e0-la-puissance-n"]], "Trouver le nombre de composantes connexes": [[86, "Trouver-le-nombre-de-composantes-connexes"]], "G\u00e9n\u00e9ration d\u2019un graphe al\u00e9atoire": [[86, "G\u00e9n\u00e9ration-d'un-graphe-al\u00e9atoire"]], "Version 1": [[86, "Version-1"]], "Version 2": [[86, "Version-2"]], "Simulation COVID": [[87, "Simulation-COVID"]], "Mod\u00e8le SIRD": [[87, "Mod\u00e8le-SIRD"]], "Q0 : une petite fonction pour dessiner": [[87, "Q0-:-une-petite-fonction-pour-dessiner"]], "Q1 : \u00e9crire une fonction qui calcule la propagation": [[87, "Q1-:-\u00e9crire-une-fonction-qui-calcule-la-propagation"]], "Q2 : on veut estimer les param\u00e8tres du mod\u00e8le, une fonction d\u2019erreur ?": [[87, "Q2-:-on-veut-estimer-les-param\u00e8tres-du-mod\u00e8le,-une-fonction-d'erreur-?"]], "Q3 : optimisation": [[87, "Q3-:-optimisation"]], "Q4 : dessiner les r\u00e9sultats": [[87, "Q4-:-dessiner-les-r\u00e9sultats"]], "Q5 : v\u00e9rifier que cela marche sur des donn\u00e9es synth\u00e9tiques": [[87, "Q5-:-v\u00e9rifier-que-cela-marche-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Q6 : sur des donn\u00e9es r\u00e9elles": [[87, "Q6-:-sur-des-donn\u00e9es-r\u00e9elles"], [87, "id1"]], "Q1 : propagation": [[87, "Q1-:-propagation"]], "Q2 : s\u00e9rie cumul\u00e9es et fonction erreur": [[87, "Q2-:-s\u00e9rie-cumul\u00e9es-et-fonction-erreur"]], "Q3, Q4, Q5 : optimisation sur des donn\u00e9es synth\u00e9tiques": [[87, "Q3,-Q4,-Q5-:-optimisation-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)": [[88, "Mod\u00e8le-\u00e9pid\u00e9miologique-(SIRD)"]], "Simulation": [[88, "Simulation"], [128, null]], "Visualisation": [[88, "Visualisation"], [94, "Visualisation"]], "Estimation des param\u00e8tres": [[88, "Estimation-des-param\u00e8tres"]], "Premi\u00e8re id\u00e9e": [[88, "Premi\u00e8re-id\u00e9e"], [196, "Premi\u00e8re-id\u00e9e"]], "Seconde id\u00e9e : probl\u00e8mes d\u2019optimisation": [[88, "Seconde-id\u00e9e-:-probl\u00e8mes-d'optimisation"]], "Jeux de dictionnaires, plus grand suffixe commun": [[89, "Jeux-de-dictionnaires,-plus-grand-suffixe-commun"]], "Exercice 1 : trouver les deux mots qui partagent le plus grand suffixe en commun": [[89, "Exercice-1-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun"], [89, "id1"]], "Exercice 2 : constuire un dictionnaire qui associe \u00e0 chaque lettre tous les mots se terminant par celle-ci": [[89, "Exercice-2-:-constuire-un-dictionnaire-qui-associe-\u00e0-chaque-lettre-tous-les-mots-se-terminant-par-celle-ci"], [89, "id2"]], "Exercice 3 : trouver les deux mots qui partagent le plus grand suffixe en commun en utilisant le dictionnaire pr\u00e9c\u00e9dent": [[89, "Exercice-3-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun-en-utilisant-le-dictionnaire-pr\u00e9c\u00e9dent"], [89, "id3"]], "Exercice 4 : mesurer le temps pris par chaque fonction": [[89, "Exercice-4-:-mesurer-le-temps-pris-par-chaque-fonction"], [89, "id4"]], "Exercice 5 : expliquer pourquoi telle m\u00e9thode est plus rapide.": [[89, "Exercice-5-:-expliquer-pourquoi-telle-m\u00e9thode-est-plus-rapide."], [89, "id5"]], "Exercice 6 : pousser l\u2019id\u00e9e plus loin et construire un trie": [[89, "Exercice-6-:-pousser-l'id\u00e9e-plus-loin-et-construire-un-trie"], [89, "id6"]], "Les k premiers \u00e9l\u00e9ments (top k)": [[90, "Les-k-premiers-\u00e9l\u00e9ments-(top-k)"]], "Exercice 1 : on trie tout et on prend les k plus petit": [[90, "Exercice-1-:-on-trie-tout-et-on-prend-les-k-plus-petit"], [90, "id1"]], "Exercice 2 : version plus rapide au choix": [[90, "Exercice-2-:-version-plus-rapide-au-choix"], [90, "id2"]], "Exercice 3 : algorithme de s\u00e9lection": [[90, "Exercice-3-:-algorithme-de-s\u00e9lection"], [90, "id3"]], "Exercice 4 : utiliser la fonction perf_counter pour comparer les vitessses de chaque solution": [[90, "Exercice-4-:-utiliser-la-fonction-perf_counter-pour-comparer-les-vitessses-de-chaque-solution"], [90, "id4"]], "TSP - Traveling Salesman Problem": [[91, "TSP---Traveling-Salesman-Problem"]], "Q1 : choisir une permutation al\u00e9atoire des villes et calculer la distance du chemin qui les relie dans cet ordre": [[91, "Q1-:-choisir-une-permutation-al\u00e9atoire-des-villes-et-calculer-la-distance-du-chemin-qui-les-relie-dans-cet-ordre"]], "Q2 : tirer deux villes al\u00e9atoirement, les inverser, garder la permutation si elle am\u00e9liore la distance": [[91, "Q2-:-tirer-deux-villes-al\u00e9atoirement,-les-inverser,-garder-la-permutation-si-elle-am\u00e9liore-la-distance"]], "Q3 : choisir deux villes al\u00e9atoirement, permuter une des deux moiti\u00e9s\u2026": [[91, "Q3-:-choisir-deux-villes-al\u00e9atoirement,-permuter-une-des-deux-moiti\u00e9s..."]], "Q4 : tester toutes les permutations possibles\u2026 je plaisante\u2026": [[91, "Q4-:-tester-toutes-les-permutations-possibles...-je-plaisante..."]], "Calculer x**n le plus rapidement possible": [[92, "Calculer-x**n-le-plus-rapidement-possible"]], "Solution": [[92, "Solution"]], "Produit matriciel avec une matrice creuse": [[93, "Produit-matriciel-avec-une-matrice-creuse"]], "Matrice creuse et dictionnaire": [[93, "Matrice-creuse-et-dictionnaire"]], "Calcul de la dimension": [[93, "Calcul-de-la-dimension"]], "Produit matriciel classique": [[93, "Produit-matriciel-classique"]], "Produit matriciel plus \u00e9l\u00e9gant": [[93, "Produit-matriciel-plus-\u00e9l\u00e9gant"]], "Mesure du temps": [[93, "Mesure-du-temps"], [204, "Mesure-du-temps"]], "Dictionnaires de dictionnaires": [[93, "Dictionnaires-de-dictionnaires"]], "Apart\u00e9 sur le voyageur de commerce": [[94, "Apart\u00e9-sur-le-voyageur-de-commerce"]], "Tirer des points al\u00e9atoirement et les afficher": [[94, "Tirer-des-points-al\u00e9atoirement-et-les-afficher"]], "Distance d\u2019un chemin": [[94, "Distance-d'un-chemin"]], "Parcourir toutes les permutations": [[94, "Parcourir-toutes-les-permutations"]], "Module tqdm": [[94, "Module-tqdm"]], "Retournement": [[94, "Retournement"]], "Plus court chemin passant par tous les noeuds d\u2019un graphe": [[95, "Plus-court-chemin-passant-par-tous-les-noeuds-d'un-graphe"]], "Distance": [[95, "Distance"]], "Id\u00e9e d\u2019algorithme": [[95, "Id\u00e9e-d'algorithme"]], "D\u00e9coder du Morse sans espaces": [[96, "D\u00e9coder-du-Morse-sans-espaces"]], "Exercice 1 : Traduire un texte Morse qui ne contient pas d\u2019espace": [[96, "Exercice-1-:-Traduire-un-texte-Morse-qui-ne-contient-pas-d'espace"]], "Exercice 2 : calculer l\u2019alphabet qui minimise une transcription": [[96, "Exercice-2-:-calculer-l'alphabet-qui-minimise-une-transcription"]], "Solution au probl\u00e8me 2 avec des expressions r\u00e9guli\u00e8res": [[96, "Solution-au-probl\u00e8me-2-avec-des-expressions-r\u00e9guli\u00e8res"]], "Solution au probl\u00e8me 2 : toutes les interpr\u00e9tations": [[96, "Solution-au-probl\u00e8me-2-:-toutes-les-interpr\u00e9tations"]], "Parcourir les rues de Paris": [[97, "Parcourir-les-rues-de-Paris"]], "Une premi\u00e8re solution au premier probl\u00e8me": [[97, "Une-premi\u00e8re-solution-au-premier-probl\u00e8me"]], "Etape 1 : la matrice Bellman": [[97, "Etape-1-:-la-matrice-Bellman"]], "Kruskall": [[97, "Kruskall"]], "Chemin Eul\u00e9rien": [[97, "Chemin-Eul\u00e9rien"]], "Algorithme optimal": [[97, "Algorithme-optimal"]], "Variantes": [[97, "Variantes"]], "Sens interdit et gaphe orient\u00e9": [[97, "Sens-interdit-et-gaphe-orient\u00e9"]], "Windy postman problem": [[97, "Windy-postman-problem"]], "Casser le code de Vigen\u00e8re": [[98, "Casser-le-code-de-Vigen\u00e8re"]], "Exercices minut\u00e9s": [[99, "exercices-minutes"]], "S\u00e9ances not\u00e9es": [[99, "seances-notees"]], "Corrections": [[99, "corrections"]], "Exercices courts": [[99, "exercices-courts"]], "S\u00e9ance not\u00e9es machaine learning": [[99, "seance-notees-machaine-learning"]], "Evaluation Python / Machine Learning ann\u00e9e 2017 - \u00e9nonc\u00e9": [[100, "Evaluation-Python-/-Machine-Learning-ann\u00e9e-2017---\u00e9nonc\u00e9"]], "1": [[100, "1"], [101, "1"]], "2": [[100, "2"], [101, "2"]], "3": [[100, "3"], [101, "3"]], "4": [[100, "4"], [101, "4"]], "5": [[100, "5"], [101, "5"]], "6": [[100, "6"], [101, "6"]], "7": [[100, "7"], [101, "7"]], "8": [[100, "8"], [101, "8"]], "9": [[100, "9"], [101, "9"]], "10": [[100, "10"], [101, "10"]], "Evaluation Python / Machine Learning ann\u00e9e 2017 - solution": [[101, "Evaluation-Python-/-Machine-Learning-ann\u00e9e-2017---solution"]], "8 - r\u00e9ponse plus courte": [[101, "8---r\u00e9ponse-plus-courte"]], "Traitement sp\u00e9cifique de la variable cat\u00e9gorielle weekday": [[101, "Traitement-sp\u00e9cifique-de-la-variable-cat\u00e9gorielle-weekday"]], "Une variable cat\u00e9gorielle en une seule colonne ?": [[101, "Une-variable-cat\u00e9gorielle-en-une-seule-colonne-?"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014": [[102, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014": [[103, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-10-octobre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014": [[104, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"], [105, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"]], "Q5": [[104, "Q5"], [104, "id5"], [104, "id10"], [105, "Q5"], [109, "Q5"], [112, "Q5"], [113, "Q5"], [113, "id2"], [114, "Q5"], [187, "Q5"], [188, "Q5"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015": [[106, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2015"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015": [[107, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-6-novembre-2015"]], "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)": [[108, "1A.e---TD-not\u00e9,-27-novembre-2012-(\u00e9l\u00e9ments-de-code-pour-le-coloriage)"]], "construction de la spirale": [[108, "construction-de-la-spirale"], [109, "construction-de-la-spirale"]], "dessin de la spirale": [[108, "dessin-de-la-spirale"], [109, "dessin-de-la-spirale"]], "ajouter du rouge": [[108, "ajouter-du-rouge"]], "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)": [[109, "1A.e---TD-not\u00e9,-27-novembre-2012-(coloriage,-correction)"]], "version 1": [[109, "version-1"], [109, "id1"]], "version 4": [[109, "version-4"], [109, "id2"]], "Q4 : spirale": [[109, "Q4-:-spirale"]], "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014": [[110, "1A.e---TD-not\u00e9,-5-d\u00e9cembre-2014"]], "Exercice 1": [[110, "Exercice-1"], [113, "Exercice-1"], [114, "Exercice-1"], [191, "Exercice-1"], [192, "Exercice-1"], [201, "Exercice-1"], [202, "Exercice-1"], [215, "Exercice-1"], [216, "Exercice-1"]], "Exercice 2": [[110, "Exercice-2"], [113, "Exercice-2"], [121, "Exercice-2"], [191, "Exercice-2"], [192, "Exercice-2"], [202, "Exercice-2"], [215, "Exercice-2"], [216, "Exercice-2"]], "Exercice 3": [[110, "Exercice-3"], [191, "Exercice-3"], [192, "Exercice-3"], [215, "Exercice-3"]], "Exercice 4": [[110, "Exercice-4"], [191, "Exercice-4"], [192, "Exercice-4"], [215, "Exercice-4"], [216, "Exercice-4"]], "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)": [[111, "1A.e---TD-not\u00e9-2015-rattrapage-(\u00e9nonc\u00e9,-\u00e9crit-et-oral)"]], "Question 1": [[111, "Question-1"]], "Question 2": [[111, "Question-2"]], "Question 3": [[111, "Question-3"]], "Question 4": [[111, "Question-4"]], "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015": [[112, "1A.e---TD-not\u00e9,-11-d\u00e9cembre-2015"]], "Exercice 1 : Louer ou acheter un appartement ?": [[112, "Exercice-1-:-Louer-ou-acheter-un-appartement-?"]], "Q6": [[112, "Q6"], [113, "Q6"], [113, "id3"], [114, "Q6"], [183, "Q6"], [184, "Q6"], [187, "Q6"], [188, "Q6"]], "Q7 exo 1": [[112, "Q7-exo-1"]], "Q7 exo 2": [[112, "Q7-exo-2"]], "Q8": [[112, "Q8"], [113, "Q8"], [113, "id5"], [114, "Q8"], [183, "Q8"], [184, "Q8"]], "Q9 version dichotomique de Q4": [[112, "Q9-version-dichotomique-de-Q4"]], "Exercice 2 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[112, "Exercice-2-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "Exercice 3 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[112, "Exercice-3-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016": [[113, "1A.e---TD-not\u00e9,-16-d\u00e9cembre-2016"]], "Q7": [[113, "Q7"], [113, "id4"], [114, "Q7"], [166, "Q7"], [183, "Q7"], [184, "Q7"], [187, "Q7"], [188, "Q7"]], "Q9": [[113, "Q9"], [113, "id6"], [114, "Q9"], [183, "Q9"], [184, "Q9"]], "Q10": [[113, "Q10"], [113, "id7"], [114, "Q10"], [118, "Q10"], [183, "Q10"], [184, "Q10"]], "Q1 - Q2 - Q3": [[113, "Q1---Q2---Q3"]], "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017": [[114, "1A.e---TD-not\u00e9,-21-f\u00e9vrier-2017"]], "Quelques explications et d\u00e9monstrations": [[114, "Quelques-explications-et-d\u00e9monstrations"]], "Quelques commentaires sur le code": [[114, "Quelques-commentaires-sur-le-code"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)": [[115, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(1)"]], "Q1 - \u00e9chantillon al\u00e9atoire": [[115, "Q1---\u00e9chantillon-al\u00e9atoire"], [116, "Q1---\u00e9chantillon-al\u00e9atoire"], [117, "Q1---\u00e9chantillon-al\u00e9atoire"], [118, "Q1---\u00e9chantillon-al\u00e9atoire"]], "Q1 - dessiner le nuage de points - donn\u00e9e": [[115, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"], [116, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"]], "Q2 - tri": [[115, "Q2---tri"], [116, "Q2---tri"]], "Q3 - moyenne": [[115, "Q3---moyenne"], [116, "Q3---moyenne"], [117, "Q3---moyenne"], [118, "Q3---moyenne"]], "Q4 - distance": [[115, "Q4---distance"], [116, "Q4---distance"]], "Q5 - fonction comme param\u00e8tre": [[115, "Q5---fonction-comme-param\u00e8tre"], [116, "Q5---fonction-comme-param\u00e8tre"]], "Q6 - optimiser": [[115, "Q6---optimiser"], [116, "Q6---optimiser"]], "Q7 - optimisation encore": [[115, "Q7---optimisation-encore"], [116, "Q7---optimisation-encore"]], "Q8 - fonction r\u00e9cursive": [[115, "Q8---fonction-r\u00e9cursive"], [116, "Q8---fonction-r\u00e9cursive"]], "Q9 - co\u00fbt": [[115, "Q9---co\u00fbt"]], "Q10 - autre nuage de points": [[115, "Q10---autre-nuage-de-points"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)": [[116, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(2)"]], "Q9 - seuil": [[116, "Q9---seuil"]], "Q10 - co\u00fbt": [[116, "Q10---co\u00fbt"]], "1A.e - Enonc\u00e9 23 octobre 2018 (1)": [[117, "1A.e---Enonc\u00e9-23-octobre-2018-(1)"]], "Q2 - matrice m1": [[117, "Q2---matrice-m1"], [118, "Q2---matrice-m1"]], "Q4 - matrice m2": [[117, "Q4---matrice-m2"], [118, "Q4---matrice-m2"]], "Q5 - matrice m3": [[117, "Q5---matrice-m3"]], "Q6 - norme": [[117, "Q6---norme"]], "Q7 - r\u00e9p\u00e9tition": [[117, "Q7---r\u00e9p\u00e9tition"]], "Q8 - plus de valeurs manquantes": [[117, "Q8---plus-de-valeurs-manquantes"]], "Q9 - 1 valeur manquante ?": [[117, "Q9---1-valeur-manquante-?"]], "Q10 - plus de deux colonnes ?": [[117, "Q10---plus-de-deux-colonnes-?"]], "1A.e - Enonc\u00e9 23 octobre 2018 (2)": [[118, "1A.e---Enonc\u00e9-23-octobre-2018-(2)"]], "Q5 - x le plus proche": [[118, "Q5---x-le-plus-proche"]], "Q6 - matrice m3": [[118, "Q6---matrice-m3"]], "Q7 - norme": [[118, "Q7---norme"]], "Q8 - r\u00e9p\u00e9tition": [[118, "Q8---r\u00e9p\u00e9tition"]], "Q9 - plus de valeurs manquantes": [[118, "Q9---plus-de-valeurs-manquantes"]], "1A.e - Enonc\u00e9 22 octobre 2019 (1)": [[119, "1A.e---Enonc\u00e9-22-octobre-2019-(1)"]], "Q1 - distance_table": [[119, "Q1---distance_table"], [120, "Q1---distance_table"]], "Q2 - distance_bord": [[119, "Q2---distance_bord"], [120, "Q2---distance_bord"]], "Q3 - table_alea": [[119, "Q3---table_alea"], [120, "Q3---table_alea"]], "Q4 - n_table_alea": [[119, "Q4---n_table_alea"], [120, "Q4---n_table_alea"]], "Q5 - table_proches": [[119, "Q5---table_proches"], [120, "Q5---table_proches"]], "Q6 - distance_n_tables_alea": [[119, "Q6---distance_n_tables_alea"], [120, "Q6---distance_n_tables_alea"]], "Q7 - meilleur_table_alea": [[119, "Q7---meilleur_table_alea"], [120, "Q7---meilleur_table_alea"]], "Q8 - r\u00e9sultat num\u00e9rique": [[119, "Q8---r\u00e9sultat-num\u00e9rique"], [120, "Q8---r\u00e9sultat-num\u00e9rique"]], "Q9 - plot_tables": [[119, "Q9---plot_tables"], [120, "Q9---plot_tables"]], "Q10 \u2026": [[119, "Q10-..."], [120, "Q10-..."]], "Q10 - Vorono\u00ef": [[119, "Q10---Vorono\u00ef"], [120, "Q10---Vorono\u00ef"]], "Q10 - KMeans": [[119, "Q10---KMeans"], [120, "Q10---KMeans"]], "1A.e - Enonc\u00e9 22 octobre 2019 (2)": [[120, "1A.e---Enonc\u00e9-22-octobre-2019-(2)"]], "1A - Enonc\u00e9 24 novembre 2020": [[121, "1A---Enonc\u00e9-24-novembre-2020"]], "Exercice 1 : gu\u00e9rison": [[121, "Exercice-1-:-gu\u00e9rison"]], "Q2 : dur\u00e9e de gu\u00e9rison": [[121, "Q2-:-dur\u00e9e-de-gu\u00e9rison"]], "Q3 : estimateur Kaplan-Meier (1)": [[121, "Q3-:-estimateur-Kaplan-Meier-(1)"]], "Q4 : courbe de Kaplan-Meier": [[121, "Q4-:-courbe-de-Kaplan-Meier"]], "Q5 : graphe": [[121, "Q5-:-graphe"]], "Q6 : application aux donn\u00e9es publiques": [[121, "Q6-:-application-aux-donn\u00e9es-publiques"]], "Q1 : t + 1": [[121, "Q1-:-t-+-1"]], "Q2 : apr\u00e8s T it\u00e9ration": [[121, "Q2-:-apr\u00e8s-T-it\u00e9ration"]], "Q3 : vaccin": [[121, "Q3-:-vaccin"]], "Q4 : apr\u00e8s T heures": [[121, "Q4-:-apr\u00e8s-T-heures"]], "Q5 : variation": [[121, "Q5-:-variation"]], "1A - Enonc\u00e9 3 novembre 2021": [[122, "1A---Enonc\u00e9-3-novembre-2021"]], "Exercice 1 : multiplication de matrices": [[122, "Exercice-1-:-multiplication-de-matrices"]], "Q1 : Pourquoi (m1 @ m2) @ m3 est-il plus lent que m1 @ (m2 @ m3) ? (2 points)": [[122, "Q1-:-Pourquoi-(m1-@-m2)-@-m3-est-il-plus-lent-que-m1-@-(m2-@-m3)-?-(2-points)"]], "Q2 : Ecrire une fonction qui calcule le nombre d\u2019operations dans une multiplication de deux matrices (2 points)": [[122, "Q2-:-Ecrire-une-fonction-qui-calcule-le-nombre-d'operations-dans-une-multiplication-de-deux-matrices-(2-points)"]], "Q3 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de deux matrices et la meilleure option (2 points)": [[122, "Q3-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-deux-matrices-et-la-meilleure-option-(2-points)"]], "Q4 : Ecrire une fonction qui effectue le produit de trois matrices le plus rapidement possible (2 points)": [[122, "Q4-:-Ecrire-une-fonction-qui-effectue-le-produit-de-trois-matrices-le-plus-rapidement-possible-(2-points)"]], "Q5 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps (2 points)": [[122, "Q5-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-(2-points)"]], "Q6 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de 4 matrices et la meilleure option (3 points)": [[122, "Q6-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-4-matrices-et-la-meilleure-option-(3-points)"]], "Q7 : Ecrire une fonction qui effectue le produit de 4 matrices le plus rapidement possible (3 points)": [[122, "Q7-:-Ecrire-une-fonction-qui-effectue-le-produit-de-4-matrices-le-plus-rapidement-possible-(3-points)"]], "Q8 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps et la matrice m4. (2 points)": [[122, "Q8-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-et-la-matrice-m4.-(2-points)"]], "Q9 : On se penche sur le cas \u00e0 une multiplication de N matrices, combien y a-t-il de multiplications de 2 matrices ? (2 points)": [[122, "Q9-:-On-se-penche-sur-le-cas-\u00e0-une-multiplication-de-N-matrices,-combien-y-a-t-il-de-multiplications-de-2-matrices-?-(2-points)"]], "Q10 : R\u00e9soudre l\u2019optimisation de multiplication de N matrices.": [[122, "Q10-:-R\u00e9soudre-l'optimisation-de-multiplication-de-N-matrices."]], "Remarques lors de la correction": [[122, "Remarques-lors-de-la-correction"]], "1A - Enonc\u00e9 15 novembre 2021 - rattrapage": [[123, "1A---Enonc\u00e9-15-novembre-2021---rattrapage"]], "Exercice 1 : optimisation de volume": [[123, "Exercice-1-:-optimisation-de-volume"]], "Q1 : \u00e9crire une fonction qui calcule l\u2019aire d\u2019une surface": [[123, "Q1-:-\u00e9crire-une-fonction-qui-calcule-l'aire-d'une-surface"]], "Q2 : \u00e9crire une fonction qui calcule le volume d\u2019une brique": [[123, "Q2-:-\u00e9crire-une-fonction-qui-calcule-le-volume-d'une-brique"]], "Q3 : \u00e9crire une fonction qui retourne la somme des surfaces des faces d\u2019une brique": [[123, "Q3-:-\u00e9crire-une-fonction-qui-retourne-la-somme-des-surfaces-des-faces-d'une-brique"]], "Q4 : la brique optimale": [[123, "Q4-:-la-brique-optimale"]], "Q5 : on inclut la surface n\u00e9cessaire pour coller les extremit\u00e9s": [[123, "Q5-:-on-inclut-la-surface-n\u00e9cessaire-pour-coller-les-extremit\u00e9s"]], "Q6 : une bouteille de deux litres deux fois plus large": [[123, "Q6-:-une-bouteille-de-deux-litres-deux-fois-plus-large"]], "Q7 : petite brique en bleue, grosse brique en rouge": [[123, "Q7-:-petite-brique-en-bleue,-grosse-brique-en-rouge"]], "1A - Enonc\u00e9 3 mars 2022- rattrapage": [[124, "1A---Enonc\u00e9-3-mars-2022--rattrapage"]], "Dessin d\u2019une liste de segments": [[124, "Dessin-d'une-liste-de-segments"]], "Distance d\u2019un segment": [[124, "Distance-d'un-segment"]], "Calcul du segment suivant": [[124, "Calcul-du-segment-suivant"]], "Calcul des trois segments suivants": [[124, "Calcul-des-trois-segments-suivants"]], "Construction de tous les niveaux de l\u2019arbre": [[124, "Construction-de-tous-les-niveaux-de-l'arbre"]], "Construction de trois segments al\u00e9atoires": [[124, "Construction-de-trois-segments-al\u00e9atoires"]], "Construction d\u2019un arbre al\u00e9atoire": [[124, "Construction-d'un-arbre-al\u00e9atoire"]], "1A - Enonc\u00e9 26 octobre 2022": [[125, "1A---Enonc\u00e9-26-octobre-2022"]], "Exercice 1 : calcul de distances": [[125, "Exercice-1-:-calcul-de-distances"]], "Q1 : tirer deux matrices al\u00e9atoires pour X et Y, de tailles diff\u00e9rentes": [[125, "Q1-:-tirer-deux-matrices-al\u00e9atoires-pour-X-et-Y,-de-tailles-diff\u00e9rentes"]], "Q2 : calculer tous les distances entre X et Y": [[125, "Q2-:-calculer-tous-les-distances-entre-X-et-Y"]], "Q3 : \u00e9crire un test unitaire qui v\u00e9rifie le r\u00e9sultat lorsque X est la matrice identit\u00e9 2x2": [[125, "Q3-:-\u00e9crire-un-test-unitaire-qui-v\u00e9rifie-le-r\u00e9sultat-lorsque-X-est-la-matrice-identit\u00e9-2x2"]], "Q4 : quel est le co\u00fbt de l\u2019algorithme en fonction des dimensions de X et Y ?": [[125, "Q4-:-quel-est-le-co\u00fbt-de-l'algorithme-en-fonction-des-dimensions-de-X-et-Y-?"]], "Q5 : Ecrire une fonction qui retourne l\u2019indice du m\u00e9decin le plus proche pour chaque rue": [[125, "Q5-:-Ecrire-une-fonction-qui-retourne-l'indice-du-m\u00e9decin-le-plus-proche-pour-chaque-rue"]], "Q6 : on cr\u00e9e une grille 10x10 pour quadriller l\u2019espace. Ecrire une fonction qui calcule les coordonn\u00e9es de la grille pour un point donn\u00e9.": [[125, "Q6-:-on-cr\u00e9e-une-grille-10x10-pour-quadriller-l'espace.-Ecrire-une-fonction-qui-calcule-les-coordonn\u00e9es-de-la-grille-pour-un-point-donn\u00e9."]], "Q7 : \u00e9crire une fonction qui cr\u00e9\u00e9 un dictionaire { case_grille : indices }.": [[125, "Q7-:-\u00e9crire-une-fonction-qui-cr\u00e9\u00e9-un-dictionaire-{-case_grille-:-indices-}."]], "Q8 : modifier la fonction pairwise_distance pour ne calculer que les distances des points dans la m\u00eame case": [[125, "Q8-:-modifier-la-fonction-pairwise_distance-pour-ne-calculer-que-les-distances-des-points-dans-la-m\u00eame-case"]], "Q9 : Mesurer le temps pour deux matrices 1000x2, 100x2 ?": [[125, "Q9-:-Mesurer-le-temps-pour-deux-matrices-1000x2,-100x2-?"]], "Q10 : le r\u00e9sultat est utilis\u00e9 pour retourner le m\u00e9decin le plus proche ? Avec la seconde fonction, o\u00f9 les r\u00e9sultats sont-ils faux et que faire pour corriger ?": [[125, "Q10-:-le-r\u00e9sultat-est-utilis\u00e9-pour-retourner-le-m\u00e9decin-le-plus-proche-?-Avec-la-seconde-fonction,-o\u00f9-les-r\u00e9sultats-sont-ils-faux-et-que-faire-pour-corriger-?"]], "1A - Enonc\u00e9 8 novembre 2023-2024": [[126, "1A---Enonc\u00e9-8-novembre-2023-2024"]], "Exercice 1 : d\u00e9codage fa\u00e7on Morse": [[126, "Exercice-1-:-d\u00e9codage-fa\u00e7on-Morse"]], "Q1 : Ecrire une fonction qui code une s\u00e9quence de lettres en une s\u00e9quence de 0 et 1.": [[126, "Q1-:-Ecrire-une-fonction-qui-code-une-s\u00e9quence-de-lettres-en-une-s\u00e9quence-de-0-et-1."]], "Q2 : On s\u2019int\u00e9resse au d\u00e9codage d\u2019un message.": [[126, "Q2-:-On-s'int\u00e9resse-au-d\u00e9codage-d'un-message."]], "Q3 : Ecrire une fonction qui re\u00e7oit une s\u00e9quence de 0 et de 1 et retourne la s\u00e9quence de lettres correspondante.": [[126, "Q3-:-Ecrire-une-fonction-qui-re\u00e7oit-une-s\u00e9quence-de-0-et-de-1-et-retourne-la-s\u00e9quence-de-lettres-correspondante."]], "Q4 : On forme une classe avec les deux fonctions pr\u00e9c\u00e9dentes. Il faut compl\u00e9ter le code suivant.": [[126, "Q4-:-On-forme-une-classe-avec-les-deux-fonctions-pr\u00e9c\u00e9dentes.-Il-faut-compl\u00e9ter-le-code-suivant."]], "Q5 : On veut r\u00e9duire la taille du message cod\u00e9.": [[126, "Q5-:-On-veut-r\u00e9duire-la-taille-du-message-cod\u00e9."]], "Q6 : Que fait la fonction suivante ?": [[126, "Q6-:-Que-fait-la-fonction-suivante-?"]], "Q7 : Dans ce langage, les lettres sont toutes \u00e9quiprobables": [[126, "Q7-:-Dans-ce-langage,-les-lettres-sont-toutes-\u00e9quiprobables"]], "Q8 : On change le Coding des lettres A et B": [[126, "Q8-:-On-change-le-Coding-des-lettres-A-et-B"]], "Q9 : Dans le cas pr\u00e9c\u00e9dent, la premi\u00e8re lettre peut \u00eatre soit B soit D.": [[126, "Q9-:-Dans-le-cas-pr\u00e9c\u00e9dent,-la-premi\u00e8re-lettre-peut-\u00eatre-soit-B-soit-D."]], "Q10 : Ecrire une m\u00e9thode\u2026": [[126, "Q10-:-Ecrire-une-m\u00e9thode..."]], "1A - Enonc\u00e9 2024": [[127, "1A---Enonc\u00e9-2024"]], "Exercice 1 : recherches de motifs": [[127, "Exercice-1-:-recherches-de-motifs"]], "Q1: Ecrire une fonction qui retourne la premi\u00e8re position du motif en utilisant une boucle et sans la m\u00e9thode index": [[127, "Q1:-Ecrire-une-fonction-qui-retourne-la-premi\u00e8re-position-du-motif-en-utilisant-une-boucle-et-sans-la-m\u00e9thode-index"]], "Q2 : quel est, dans le pire des cas, le co\u00fbt de l\u2019algorithme ?": [[127, "Q2-:-quel-est,-dans-le-pire-des-cas,-le-co\u00fbt-de-l'algorithme-?"]], "Q3 : On souhaite maintenant \u00e9crire une fonction qui retourne toutes les positions d\u2019un motif au sein d\u2019un texte.": [[127, "Q3-:-On-souhaite-maintenant-\u00e9crire-une-fonction-qui-retourne-toutes-les-positions-d'un-motif-au-sein-d'un-texte."]], "Q4 : quel est, dans le pire des cas, le co\u00fbt de l\u2019algorithme ?": [[127, "Q4-:-quel-est,-dans-le-pire-des-cas,-le-co\u00fbt-de-l'algorithme-?"]], "Q5 : comment modifier (ou pas) votre fonction pour cet exemple ?": [[127, "Q5-:-comment-modifier-(ou-pas)-votre-fonction-pour-cet-exemple-?"]], "Q6 : On veut acc\u00e9l\u00e9rer le processus. On consid\u00e8re un couple de bases et non plus une seule base.": [[127, "Q6-:-On-veut-acc\u00e9l\u00e9rer-le-processus.-On-consid\u00e8re-un-couple-de-bases-et-non-plus-une-seule-base."]], "Q7 : Transformer cette liste en dictionnaire.": [[127, "Q7-:-Transformer-cette-liste-en-dictionnaire."]], "Q8 : Ecrire une fonction qui d\u00e9coupe une s\u00e9quence de bases en s\u00e9quence de couples de bases.": [[127, "Q8-:-Ecrire-une-fonction-qui-d\u00e9coupe-une-s\u00e9quence-de-bases-en-s\u00e9quence-de-couples-de-bases."]], "Q9 : appliquer l\u2019une de vos pr\u00e9c\u00e9dente fonction de recherche avec ces deux s\u00e9quences pour trouver les positions.": [[127, "Q9-:-appliquer-l'une-de-vos-pr\u00e9c\u00e9dente-fonction-de-recherche-avec-ces-deux-s\u00e9quences-pour-trouver-les-positions."]], "Q10 : co\u00fbt de la recherche et r\u00e9sultats \u00e9quivalents": [[127, "Q10-:-co\u00fbt-de-la-recherche-et-r\u00e9sultats-\u00e9quivalents"]], "A conna\u00eetre": [[128, null]], "Programmation dynamique": [[128, null]], "Probl\u00e8me NP-complets": [[128, null]], "A parcourir": [[128, null]], "Correction": [[128, null], [132, null], [178, "Correction"]], "Numpy / Pandas": [[129, "numpy-pandas"]], "S\u00e9ances minut\u00e9es": [[130, "seances-minutees"]], "S\u00e9ries Temporelles": [[131, null]], "Exercices sur le langage python": [[132, "exercices-sur-le-langage-python"]], "Structure de donn\u00e9es": [[132, null]], "algorithmes tr\u00e8s simples": [[132, null]], "Profiling": [[132, null], [175, "Profiling"]], "Points particulier du langages": [[132, null]], "Classification multi-classe et jeu mal balanc\u00e9": [[133, "Classification-multi-classe-et-jeu-mal-balanc\u00e9"]], "d\u00e9couverte": [[133, "d\u00e9couverte"]], "\u00e9volution en fonction du nombre de classes": [[133, "\u00e9volution-en-fonction-du-nombre-de-classes"]], "\u00e9volution en fonction de la variance": [[133, "\u00e9volution-en-fonction-de-la-variance"]], "\u00e9volution en fonction de la dimension": [[133, "\u00e9volution-en-fonction-de-la-dimension"]], "retour sur le nombre de classes": [[133, "retour-sur-le-nombre-de-classes"]], "un dernier jeu s\u00fbr": [[133, "un-dernier-jeu-s\u00fbr"]], "Gradient Boosting": [[134, "Gradient-Boosting"]], "Premier exemple": [[134, "Premier-exemple"]], "learning rate et it\u00e9rations": [[134, "learning-rate-et-it\u00e9rations"]], "L\u2019algorithme": [[134, "L'algorithme"]], "Inspiration": [[134, "Inspiration"]], "Algorithme": [[134, "Algorithme"]], "R\u00e9gression quantile": [[134, "R\u00e9gression-quantile"]], "learning_rate et sur-apprentissage": [[134, "learning_rate-et-sur-apprentissage"]], "Gradient Boosting avec d\u2019autres librairies": [[134, "Gradient-Boosting-avec-d'autres-librairies"]], "XGBoost": [[134, "XGBoost"], [135, "XGBoost"]], "LightGbm": [[134, "LightGbm"]], "CatBoost": [[134, "CatBoost"]], "Tree, hyperparam\u00e8tres, overfitting": [[135, "Tree,-hyperparam\u00e8tres,-overfitting"]], "Donn\u00e9es g\u00e9n\u00e9r\u00e9es": [[135, "Donn\u00e9es-g\u00e9n\u00e9r\u00e9es"]], "Diff\u00e9rents arbres de d\u00e9cision": [[135, "Diff\u00e9rents-arbres-de-d\u00e9cision"]], "max_depth": [[135, "max_depth"], [135, "id1"]], "min_samples_split=10": [[135, "min_samples_split=10"], [135, "id2"]], "Random Forest": [[135, "Random-Forest"], [135, "id3"]], "n_estimators": [[135, "n_estimators"]], "Base d\u2019apprentissage et et base de test": [[135, "Base-d'apprentissage-et-et-base-de-test"]], "Decision Tree": [[135, "Decision-Tree"]], "R\u00e9seaux de neurones": [[135, "R\u00e9seaux-de-neurones"]], "R\u00e9seaux de neurones, alpha=0": [[135, "R\u00e9seaux-de-neurones,-alpha=0"]], "Exercice 1 : d\u00e9terminer les param\u00e8tres optimaux pour cet exemple": [[135, "Exercice-1-:-d\u00e9terminer-les-param\u00e8tres-optimaux-pour-cet-exemple"]], "Exercice 2 : ajouter quelques points aberrants": [[135, "Exercice-2-:-ajouter-quelques-points-aberrants"]], "Intervalles de confiance": [[135, "Intervalles-de-confiance"]], "Exercice 3 : optimiser les hyperparam\u00e8tres pour XGBoost et scikit-learn et comparer": [[135, "Exercice-3-:-optimiser-les-hyperparam\u00e8tres-pour-XGBoost-et-scikit-learn-et-comparer"]], "Features ou mod\u00e8le": [[136, "Features-ou-mod\u00e8le"]], "R\u00e9gression Ridge, Lasso et nouvel estimateur": [[137, "R\u00e9gression-Ridge,-Lasso-et-nouvel-estimateur"]], "Un jeu de donn\u00e9es pour un probl\u00e8me de r\u00e9gression": [[137, "Un-jeu-de-donn\u00e9es-pour-un-probl\u00e8me-de-r\u00e9gression"]], "R\u00e9gression Ridge": [[137, "R\u00e9gression-Ridge"]], "R\u00e9gression Lasso": [[137, "R\u00e9gression-Lasso"]], "Application \u00e0 la s\u00e9lection d\u2019arbre d\u2019une for\u00eat al\u00e9atoire": [[137, "Application-\u00e0-la-s\u00e9lection-d'arbre-d'une-for\u00eat-al\u00e9atoire"]], "Explication g\u00e9om\u00e9trique de la nullit\u00e9 des coefficients dans une r\u00e9gression Lasso": [[137, "Explication-g\u00e9om\u00e9trique-de-la-nullit\u00e9-des-coefficients-dans-une-r\u00e9gression-Lasso"]], "Validation crois\u00e9e et API scikit-learn": [[137, "Validation-crois\u00e9e-et-API-scikit-learn"]], "Optimisation m\u00e9moire": [[137, "Optimisation-m\u00e9moire"]], "Single Spectrum Analysis (SSA)": [[138, "Single-Spectrum-Analysis-(SSA)"]], "Une s\u00e9rie articielle": [[138, "Une-s\u00e9rie-articielle"]], "Autocorr\u00e9lations": [[138, "Autocorr\u00e9lations"]], "SSA": [[138, "SSA"]], "La pr\u00e9diction": [[138, "La-pr\u00e9diction"]], "Les points aberrants": [[138, "Les-points-aberrants"]], "ACP - projection": [[139, "ACP---projection"]], "R\u00e9gression logistique et courbe ROC": [[140, "R\u00e9gression-logistique-et-courbe-ROC"]], "R\u00e9gression logistique en 2D": [[141, "R\u00e9gression-logistique-en-2D"]], "Plusieurs mod\u00e8les, donn\u00e9es disjointes": [[142, "Plusieurs-mod\u00e8les,-donn\u00e9es-disjointes"]], "version manuelle": [[142, "version-manuelle"]], "Automatisation": [[142, "Automatisation"]], "Exemple sur un jeu articificiel": [[142, "Exemple-sur-un-jeu-articificiel"]], "Classifications et courbes ROC": [[143, "Classifications-et-courbes-ROC"]], "Classification multi-classe et stacking": [[145, "Classification-multi-classe-et-stacking"]], "Le probl\u00e8me": [[145, "Le-probl\u00e8me"]], "Automatisation avec une impl\u00e9mentation": [[145, "Automatisation-avec-une-impl\u00e9mentation"]], "Plus proches voisins": [[146, "Plus-proches-voisins"]], "Validation crois\u00e9e (cross-validation)": [[147, "Validation-crois\u00e9e-(cross-validation)"]], "Plus proches voisins - \u00e9valuation": [[148, "Plus-proches-voisins---\u00e9valuation"]], "S\u00e9lection des hyper-param\u00e8tres": [[149, "S\u00e9lection-des-hyper-param\u00e8tres"]], "Base d\u2019apprentissage et de test": [[150, "Base-d'apprentissage-et-de-test"]], "D\u00e9coupage stratifi\u00e9 apprentissage / test": [[151, "D\u00e9coupage-stratifi\u00e9-apprentissage-/-test"]], "Pr\u00e9diction de la note des vins": [[152, "Pr\u00e9diction-de-la-note-des-vins"]], "R\u00e9gression polyn\u00f4miale et pipeline": [[153, "R\u00e9gression-polyn\u00f4miale-et-pipeline"]], "Jeu de d\u00e9, rotation sur un circuit (classes)": [[154, "Jeu-de-d\u00e9,-rotation-sur-un-circuit-(classes)"]], "De": [[154, "De"]], "Permutation": [[154, "Permutation"]], "It\u00e9rateur": [[155, "It\u00e9rateur"]], "G\u00e9n\u00e9ration d\u2019un arbre al\u00e9atoire": [[155, "G\u00e9n\u00e9ration-d'un-arbre-al\u00e9atoire"]], "Profondeur maximale": [[155, "Profondeur-maximale"]], "Classe Permutation et d\u00e9composition en transitions": [[156, "Classe-Permutation-et-d\u00e9composition-en-transitions"]], "Composition": [[156, "Composition"]], "Op\u00e9rateur == et @": [[156, "Op\u00e9rateur-==-et-@"]], "D\u00e9composition": [[156, "D\u00e9composition"]], "Transposition": [[156, "Transposition"]], "Un exemple court pour d\u00e9m\u00ealer ce qui est chang\u00e9": [[156, "Un-exemple-court-pour-d\u00e9m\u00ealer-ce-qui-est-chang\u00e9"]], "Python 3.x": [[156, "Python-3.x"]], "Une classe pour repr\u00e9senter un arbre": [[157, "Une-classe-pour-repr\u00e9senter-un-arbre"]], "Premier jet": [[157, "Premier-jet"]], "Afficher l\u2019arbre": [[157, "Afficher-l'arbre"]], "Profondeur maximale : le plus grand chemin depuis la racine jusqu\u2019aux feuilles": [[157, "Profondeur-maximale-:-le-plus-grand-chemin-depuis-la-racine-jusqu'aux-feuilles"]], "Profondeur moyenne ?": [[157, "Profondeur-moyenne-?"]], "Interm\u00e8de : is ou == ?": [[157, "Interm\u00e8de-:-is-ou-==-?"]], "Classe, H\u00e9ritage, calcule d\u2019une distance": [[158, "Classe,-H\u00e9ritage,-calcule-d'une-distance"]], "Classe Product": [[158, "Classe-Product"]], "Classe utilisateur": [[158, "Classe-utilisateur"]], "Classe Base": [[158, "Classe-Base"]], "2048 et les classes": [[159, "2048-et-les-classes"]], "D\u00e9composition du probl\u00e8me": [[159, "D\u00e9composition-du-probl\u00e8me"]], "0 - Cr\u00e9ation de la matrice de jeu": [[159, "0---Cr\u00e9ation-de-la-matrice-de-jeu"]], "2 - D\u00e9termination de toutes les cases libres": [[159, "2---D\u00e9termination-de-toutes-les-cases-libres"]], "1 - Ajout d\u2019un nombre al\u00e9atoire dans {2,4} \u00e0 une position al\u00e9atoire pourvu qu\u2019elle soit libre": [[159, "1---Ajout-d'un-nombre-al\u00e9atoire-dans-{2,4}-\u00e0-une-position-al\u00e9atoire-pourvu-qu'elle-soit-libre"]], "3 - A-t-on perdu ?": [[159, "3---A-t-on-perdu-?"]], "5 - Aggr\u00e8ge les nombres dans un tableau que ce soit une ligne ou une colonne": [[159, "5---Aggr\u00e8ge-les-nombres-dans-un-tableau-que-ce-soit-une-ligne-ou-une-colonne"]], "4 - Joue un coup sachant une direction donn\u00e9e": [[159, "4---Joue-un-coup-sachant-une-direction-donn\u00e9e"]], "6 - score": [[159, "6---score"]], "7 - coup suivant": [[159, "7---coup-suivant"]], "8 - la fonction faisant tout": [[159, "8---la-fonction-faisant-tout"]], "Classe compl\u00e8te": [[159, "Classe-compl\u00e8te"]], "Un dernier graphe pour finir": [[159, "Un-dernier-graphe-pour-finir"]], "Une autre strat\u00e9gie pour illustrer l\u2019h\u00e9ritage": [[159, "Une-autre-strat\u00e9gie-pour-illustrer-l'h\u00e9ritage"]], "Un bref aper\u00e7u des classes": [[160, "Un-bref-aper\u00e7u-des-classes"]], "Une station de m\u00e9tro": [[160, "Une-station-de-m\u00e9tro"]], "Une distance": [[160, "Une-distance"]], "M\u00e9thode": [[160, "M\u00e9thode"]], "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations": [[161, "Liste,-tuple,-ensemble,-dictionnaire,-liste-cha\u00een\u00e9e,-co\u00fbt-des-op\u00e9rations"]], "Insertion avec list et deque": [[161, "Insertion-avec-list-et-deque"]], "Un \u00e9l\u00e9ment dans un ensemble": [[161, "Un-\u00e9l\u00e9ment-dans-un-ensemble"]], "Simuler une loi multinomiale": [[162, "Simuler-une-loi-multinomiale"]], "Algorithme de simulation": [[162, "Algorithme-de-simulation"]], "Une premi\u00e8re optimisation : tri des poids": [[162, "Une-premi\u00e8re-optimisation-:-tri-des-poids"]], "Optimisation bootstrap": [[162, "Optimisation-bootstrap"]], "Jeux de coloriage": [[163, "Jeux-de-coloriage"]], "Colorier un carr\u00e9 \u00e0 proportion": [[163, "Colorier-un-carr\u00e9-\u00e0-proportion"]], "Colorier en diagonale": [[163, "Colorier-en-diagonale"]], "Fonction de la surface couverte": [[163, "Fonction-de-la-surface-couverte"]], "Version math\u00e9matique": [[163, "Version-math\u00e9matique"]], "Retour au coloriage": [[163, "Retour-au-coloriage"]], "A quoi \u00e7a sert ?": [[163, "A-quoi-\u00e7a-sert-?"], [248, "a-quoi-ca-sert"]], "Exercices autour des dames": [[164, "Exercices-autour-des-dames"]], "Jeu de d\u00e9, rotation sur un circuit": [[165, "Jeu-de-d\u00e9,-rotation-sur-un-circuit"]], "R\u00e9partition, table de hashage": [[166, "R\u00e9partition,-table-de-hashage"]], "Q1 - premi\u00e8re lettre": [[166, "Q1---premi\u00e8re-lettre"]], "Q2 - somme": [[166, "Q2---somme"]], "Q3 - pseudo g\u00e9n\u00e9rateur": [[166, "Q3---pseudo-g\u00e9n\u00e9rateur"]], "Q4 - hash": [[166, "Q4---hash"]], "Q5 - light hash": [[166, "Q5---light-hash"]], "Q6 - r\u00e9partition": [[166, "Q6---r\u00e9partition"]], "Q7 - dictionnaire": [[166, "Q7---dictionnaire"]], "Quelques \u00e9l\u00e9ments de r\u00e9ponses": [[166, "Quelques-\u00e9l\u00e9ments-de-r\u00e9ponses"]], "Premi\u00e8re lettre": [[166, "Premi\u00e8re-lettre"]], "Somme": [[166, "Somme"]], "Pseudo": [[166, "Pseudo"]], "Hash": [[166, "Hash"]], "Light hash": [[166, "Light-hash"]], "JSON - XML": [[167, "JSON---XML"]], "Q1 : \u00e9criture des donn\u00e9es au format CSV": [[167, "Q1-:-\u00e9criture-des-donn\u00e9es-au-format-CSV"], [167, "id1"]], "Q2 : \u00e9criture des donn\u00e9es au format JSON": [[167, "Q2-:-\u00e9criture-des-donn\u00e9es-au-format-JSON"], [167, "id2"]], "Q3 : relire les donn\u00e9es avec le module json": [[167, "Q3-:-relire-les-donn\u00e9es-avec-le-module-json"], [167, "id3"]], "Q4 : essayez avec les format XML (ou HTML), SQL, SAS, Excel\u2026": [[167, "Q4-:-essayez-avec-les-format-XML-(ou-HTML),-SQL,-SAS,-Excel..."], [167, "id4"]], "Q5 : donn\u00e9es non structur\u00e9es": [[167, "Q5-:-donn\u00e9es-non-structur\u00e9es"], [167, "id5"]], "Q6 : le texte, \u00e7a prend trop de place, zippons": [[167, "Q6-:-le-texte,-\u00e7a-prend-trop-de-place,-zippons"], [167, "id6"]], "Q7 : que vous inspire protobuf ?": [[167, "Q7-:-que-vous-inspire-protobuf-?"], [167, "id7"]], "Calculs de surface et autres calculs": [[168, "Calculs-de-surface-et-autres-calculs"]], "Exercice 1 : calcul de la surface d\u2019un cercle": [[168, "Exercice-1-:-calcul-de-la-surface-d'un-cercle"]], "1.1 En utilisant la constante pi": [[168, "1.1-En-utilisant-la-constante-pi"]], "1.2 Sans utiliser pi ni aucune autre fonction": [[168, "1.2-Sans-utiliser-pi-ni-aucune-autre-fonction"]], "Exercice 2 : tri al\u00e9atoire": [[168, "Exercice-2-:-tri-al\u00e9atoire"]], "Exercice 3 : petits calculs parfaits pour une machine": [[168, "Exercice-3-:-petits-calculs-parfaits-pour-une-machine"]], "1.1. calcul de la surface d\u2019un cercle avec pi": [[168, "1.1.-calcul-de-la-surface-d'un-cercle-avec-pi"]], "1.2. calcul de la surface d\u2019un cercle sans pi ou autre fonction": [[168, "1.2.-calcul-de-la-surface-d'un-cercle-sans-pi-ou-autre-fonction"]], "2. tri al\u00e9atoire": [[168, "2.-tri-al\u00e9atoire"]], "3. petits calculs parfaits pour une machine": [[168, "3.-petits-calculs-parfaits-pour-une-machine"]], "Expressions r\u00e9guli\u00e8res": [[169, "Expressions-r\u00e9guli\u00e8res"], [207, "Expressions-r\u00e9guli\u00e8res"], [247, "expressions-regulieres"], [248, "expressions-regulieres"]], "Exercice 1 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots": [[169, "Exercice-1-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots"], [169, "id1"]], "Exercice 2 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots se terminant par la lettre s": [[169, "Exercice-2-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots-se-terminant-par-la-lettre-s"], [169, "id2"]], "Exercice 3 : utiliser les expression r\u00e9guli\u00e8res pour remplacer tous les \u00ab\u00a0de\u00a0\u00bb en 2": [[169, "Exercice-3-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-remplacer-tous-les-%22de%22-en-2"], [169, "id3"]], "Exercice 4 : utiliser les expression r\u00e9guli\u00e8res pour extraire les lignes des rimes en elle ou elles ou aile ou ailes": [[169, "Exercice-4-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-les-lignes-des-rimes-en-elle-ou-elles-ou-aile-ou-ailes"], [169, "id4"]], "S\u00e9rialisation avec JSON, XML, pickle": [[170, "S\u00e9rialisation-avec-JSON,-XML,-pickle"]], "Notion de stream ou flux": [[170, "Notion-de-stream-ou-flux"]], "Q1: quelle est la fonction la plus rapide ?": [[170, "Q1:-quelle-est-la-fonction-la-plus-rapide-?"]], "Format JSON": [[170, "Format-JSON"]], "Q1. lire du json": [[170, "Q1.-lire-du-json"]], "Q2: \u00e9crire du json": [[170, "Q2:-\u00e9crire-du-json"]], "Q3: gros json": [[170, "Q3:-gros-json"]], "XML": [[170, "XML"]], "pickle": [[170, "pickle"]], "Q1: comparer le temps de s\u00e9rialisation entre pickle et json": [[170, "Q1:-comparer-le-temps-de-s\u00e9rialisation-entre-pickle-et-json"]], "Q2: comparer le temps de d\u00e9s\u00e9rialisation entre pickle et json": [[170, "Q2:-comparer-le-temps-de-d\u00e9s\u00e9rialisation-entre-pickle-et-json"]], "Peut-on tout s\u00e9rialiser ?": [[170, "Peut-on-tout-s\u00e9rialiser-?"]], "Histogramme et dictionnaire": [[171, "Histogramme-et-dictionnaire"]], "Heap": [[172, "Heap"]], "Transformer en tas": [[172, "Transformer-en-tas"]], "Dessiner un tas": [[172, "Dessiner-un-tas"]], "Premi\u00e8re version": [[172, "Premi\u00e8re-version"]], "M\u00eame chose avec les indices au lieu des valeurs": [[172, "M\u00eame-chose-avec-les-indices-au-lieu-des-valeurs"]], "Co\u00fbt de l\u2019algorithme": [[172, "Co\u00fbt-de-l'algorithme"]], "Version simplifi\u00e9e": [[172, "Version-simplifi\u00e9e"]], "Pivot de gauss avec numpy": [[173, "Pivot-de-gauss-avec-numpy"]], "Numpy 1": [[173, "Numpy-1"]], "Numpy 2": [[173, "Numpy-2"]], "Vitesse": [[173, "Vitesse"]], "Profiling la fonction Gini": [[174, "Profiling-la-fonction-Gini"]], "Exercice 1 : profiler le code pr\u00e9c\u00e9dent": [[174, "Exercice-1-:-profiler-le-code-pr\u00e9c\u00e9dent"], [174, "id1"]], "Exercice 2 : changer la fonction _gini_final si possible en plus rapide": [[174, "Exercice-2-:-changer-la-fonction-_gini_final-si-possible-en-plus-rapide"], [174, "id2"]], "Exercice 3 : vous am\u00e9liorez la fonction _gini_final, profilez pour savoir de combien ?": [[174, "Exercice-3-:-vous-am\u00e9liorez-la-fonction-_gini_final,-profilez-pour-savoir-de-combien-?"], [174, "id3"]], "Exercice 4 : utiliser d\u2019autres modules de profiling": [[174, "Exercice-4-:-utiliser-d'autres-modules-de-profiling"], [174, "id4"]], "Exercice 5 : la fonction _gini_cumsum contient deux boucles. Quelle est la plus rapide ?": [[174, "Exercice-5-:-la-fonction-_gini_cumsum-contient-deux-boucles.-Quelle-est-la-plus-rapide-?"], [174, "id5"]], "Profiling, application \u00e0 la convolution": [[175, "Profiling,-application-\u00e0-la-convolution"]], "Impl\u00e9mentation na\u00efve": [[175, "Impl\u00e9mentation-na\u00efve"]], "Q1: comparer les temps d\u2019ex\u00e9cution": [[175, "Q1:-comparer-les-temps-d'ex\u00e9cution"]], "Q2: comparer avec une seconde impl\u00e9mentation": [[175, "Q2:-comparer-avec-une-seconde-impl\u00e9mentation"]], "im2col": [[175, "im2col"]], "Q3: comparer \u00e0 nouveau les temps d\u2019\u00e9xecution": [[175, "Q3:-comparer-\u00e0-nouveau-les-temps-d'\u00e9xecution"]], "Q4: que peut-on en d\u00e9duire ?": [[175, "Q4:-que-peut-on-en-d\u00e9duire-?"]], "Profilage : \u00e9v\u00e9nements ou \u00e9chantillonnage": [[175, "Profilage-:-\u00e9v\u00e9nements-ou-\u00e9chantillonnage"]], "Une derni\u00e8re impl\u00e9mentation": [[175, "Une-derni\u00e8re-impl\u00e9mentation"]], "Q5: Que pouvez-vous dire de cette derni\u00e8re impl\u00e9mentation ?": [[175, "Q5:-Que-pouvez-vous-dire-de-cette-derni\u00e8re-impl\u00e9mentation-?"]], "Exemple de profiling": [[176, "Exemple-de-profiling"]], "Bizarrerie": [[176, "Bizarrerie"]], "Profiler": [[176, "Profiler"]], "Recherche dichotomique": [[177, "Recherche-dichotomique"], [215, "Recherche-dichotomique"]], "Version it\u00e9rative": [[177, "Version-it\u00e9rative"]], "Version r\u00e9cursive": [[177, "Version-r\u00e9cursive"]], "Version r\u00e9cursive 2": [[177, "Version-r\u00e9cursive-2"]], "Web-Scraping - pokemon": [[178, "Web-Scraping---pokemon"]], "Fonction pour obtenir les caract\u00e9ristiques de pokemons": [[178, "Fonction-pour-obtenir-les-caract\u00e9ristiques-de-pokemons"]], "les images de pokemon": [[178, "les-images-de-pokemon"]], "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre": [[179, "D'une-structure-de-donn\u00e9es-\u00e0-l'autre"]], "histogramme et dictionnaire": [[179, "histogramme-et-dictionnaire"]], "liste \u00e0 dictionnaire": [[179, "liste-\u00e0-dictionnaire"]], "dictionnaire \u00e0 liste": [[179, "dictionnaire-\u00e0-liste"]], "dictionnaire et deux listes": [[179, "dictionnaire-et-deux-listes"]], "deux listes et dictionnaires": [[179, "deux-listes-et-dictionnaires"]], "zip reverse": [[179, "zip-reverse"]], "matrices et dictionnaires": [[179, "matrices-et-dictionnaires"]], "liste de listes et dictionnaires": [[179, "liste-de-listes-et-dictionnaires"]], "dictionnaires et liste de listes": [[179, "dictionnaires-et-liste-de-listes"]], "matrice sparse": [[179, "matrice-sparse"]], "matrices et tableaux": [[179, "matrices-et-tableaux"]], "2 dimensions logiques, 1 dimension en m\u00e9moire": [[179, "2-dimensions-logiques,-1-dimension-en-m\u00e9moire"]], "du tableau \u00e0 la liste de listes": [[179, "du-tableau-\u00e0-la-liste-de-listes"]], "Calculer un chi 2 sur un tableau de contingence": [[180, "Calculer-un-chi-2-sur-un-tableau-de-contingence"]], "formule": [[180, "formule"]], "tableau au hasard": [[180, "tableau-au-hasard"]], "calcul avec scipy": [[180, "calcul-avec-scipy"]], "calcul avec numpy": [[180, "calcul-avec-numpy"]], "Tests unitaires": [[181, "Tests-unitaires"]], "Un petit jeu": [[181, "Un-petit-jeu"]], "Une autre \u00e9criture": [[181, "Une-autre-\u00e9criture"]], "Des obstacles\u2026": [[181, "Des-obstacles..."]], "Ajouter d\u2019autres tests unitaires pour cette seconde version": [[181, "Ajouter-d'autres-tests-unitaires-pour-cette-seconde-version"]], "Changer la taille de l\u2019\u00e9chiquier": [[181, "Changer-la-taille-de-l'\u00e9chiquier"]], "Tester une exception": [[181, "Tester-une-exception"]], "Tri plus rapide que pr\u00e9vu": [[182, "Tri-plus-rapide-que-pr\u00e9vu"]], "trier un plus petit ensemble": [[182, "trier-un-plus-petit-ensemble"]], "\u00e9volution en fonction de n": [[182, "\u00e9volution-en-fonction-de-n"]], "D\u00e9corr\u00e9lation de variables al\u00e9atoires": [[183, "D\u00e9corr\u00e9lation-de-variables-al\u00e9atoires"]], "Cr\u00e9ation d\u2019un jeu de donn\u00e9es": [[183, "Cr\u00e9ation-d'un-jeu-de-donn\u00e9es"], [184, "Cr\u00e9ation-d'un-jeu-de-donn\u00e9es"]], "Corr\u00e9lation de matrices": [[183, "Corr\u00e9lation-de-matrices"], [184, "Corr\u00e9lation-de-matrices"]], "Un peu de math\u00e9matiques": [[183, "Un-peu-de-math\u00e9matiques"]], "Calcul de la racine carr\u00e9e": [[183, "Calcul-de-la-racine-carr\u00e9e"], [184, "Calcul-de-la-racine-carr\u00e9e"]], "D\u00e9corr\u00e9lation": [[183, "D\u00e9corr\u00e9lation"], [184, "D\u00e9corr\u00e9lation"]], "Simulation de variables corr\u00e9l\u00e9es": [[183, "Simulation-de-variables-corr\u00e9l\u00e9es"], [184, "Simulation-de-variables-corr\u00e9l\u00e9es"]], "Q11": [[183, "Q11"], [184, "Q11"]], "Q12": [[183, "Q12"], [184, "Q12"]], "Q13": [[183, "Q13"], [184, "Q13"]], "D\u00e9corr\u00e9lation de variables al\u00e9atoires - correction": [[184, "D\u00e9corr\u00e9lation-de-variables-al\u00e9atoires---correction"]], "Cryptage homomorphic de Craig Gentry": [[185, "Cryptage-homomorphic-de-Craig-Gentry"]], "D\u00e9finition du cryptage": [[185, "D\u00e9finition-du-cryptage"], [186, "D\u00e9finition-du-cryptage"]], "Exercice 1 : impl\u00e9menter le cryptage": [[185, "Exercice-1-:-impl\u00e9menter-le-cryptage"], [186, "Exercice-1-:-impl\u00e9menter-le-cryptage"]], "Exercice 2 : v\u00e9rifier que le cryptage est stable par addition et multiplication": [[185, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"], [186, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"]], "Exercice 3 : impl\u00e9mententer l\u2019addition enti\u00e8re": [[185, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"], [186, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"]], "Exercice 4 : impl\u00e9menter la multiplication enti\u00e8re": [[185, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"], [186, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"]], "Cryptage homomorphic de Craig Gentry - correction": [[186, "Cryptage-homomorphic-de-Craig-Gentry---correction"]], "Spectral Clustering": [[187, "Spectral-Clustering"]], "Un graphe": [[187, "Un-graphe"], [188, "Un-graphe"]], "Partie 1 : clustering en pratique": [[187, "Partie-1-:-clustering-en-pratique"], [188, "Partie-1-:-clustering-en-pratique"]], "Partie 2 : interm\u00e8de th\u00e9orique": [[187, "Partie-2-:-interm\u00e8de-th\u00e9orique"]], "Partie 3 : un peu plus loin": [[187, "Partie-3-:-un-peu-plus-loin"], [188, "Partie-3-:-un-peu-plus-loin"]], "Spectral Clustering - correction": [[188, "Spectral-Clustering---correction"]], "Plus proches voisins en grande dimension": [[189, "Plus-proches-voisins-en-grande-dimension"]], "Q1 : k-nn : mesurer la performance": [[189, "Q1-:-k-nn-:-mesurer-la-performance"], [190, "Q1-:-k-nn-:-mesurer-la-performance"]], "Q2 : k-nn avec sparse features": [[189, "Q2-:-k-nn-avec-sparse-features"], [190, "Q2-:-k-nn-avec-sparse-features"]], "Q3 : Imaginez une fa\u00e7on d\u2019aller plus vite ?": [[189, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"], [190, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"]], "Plus proches voisins en grande dimension - correction": [[190, "Plus-proches-voisins-en-grande-dimension---correction"]], "dimension": [[190, "dimension"]], "observations": [[190, "observations"]], "Programmation dynamique et plus court chemin": [[191, "Programmation-dynamique-et-plus-court-chemin"]], "Algorithme du plus court chemin": [[191, "Algorithme-du-plus-court-chemin"]], "La r\u00e9partition des skis": [[191, "La-r\u00e9partition-des-skis"]], "Exercice facultatif": [[191, "Exercice-facultatif"], [192, "Exercice-facultatif"]], "Exercice 5": [[191, "Exercice-5"], [192, "Exercice-5"], [215, "Exercice-5"]], "Exercice 6": [[191, "Exercice-6"], [192, "Exercice-6"], [215, "Exercice-6"]], "Exercice 7": [[191, "Exercice-7"], [192, "Exercice-7"], [215, "Exercice-7"], [216, "Exercice-7"]], "Exercice 8": [[191, "Exercice-8"], [192, "Exercice-8"]], "Prolongements : degr\u00e9 de s\u00e9paration sur Facebook": [[191, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"], [192, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"]], "Programmation dynamique et plus court chemin (correction)": [[192, "Programmation-dynamique-et-plus-court-chemin-(correction)"]], "Puzzles algorithmiques (1)": [[193, "Puzzles-algorithmiques-(1)"]], "Produits scalaires": [[193, "Produits-scalaires"], [194, "Produits-scalaires"]], "Solution moins na\u00efve": [[193, "Solution-moins-na\u00efve"]], "Probl\u00e8me de recouvrement": [[193, "Probl\u00e8me-de-recouvrement"], [194, "Probl\u00e8me-de-recouvrement"]], "Soudoyer les prisonniers": [[193, "Soudoyer-les-prisonniers"], [194, "Soudoyer-les-prisonniers"]], "D\u00e9coupage intelligent d\u2019une base de donn\u00e9es": [[193, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"], [194, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"]], "Puzzles algorithmes (1) - correction": [[194, "Puzzles-algorithmes-(1)---correction"]], "Premi\u00e8re solution": [[194, "Premi\u00e8re-solution"]], "Seconde solution": [[194, "Seconde-solution"]], "Approche par programmation dynamique": [[194, "Approche-par-programmation-dynamique"]], "Puzzles algorithmiques (2)": [[195, "Puzzles-algorithmiques-(2)"]], "Exercice 1 : nombres premiers": [[195, "Exercice-1-:-nombres-premiers"], [196, "Exercice-1-:-nombres-premiers"]], "Exercice 2 : watersheds": [[195, "Exercice-2-:-watersheds"], [196, "Exercice-2-:-watersheds"]], "Exercice 3 : s\u00e9paration des bagarreurs": [[195, "Exercice-3-:-s\u00e9paration-des-bagarreurs"], [196, "Exercice-3-:-s\u00e9paration-des-bagarreurs"]], "Exercice 4 : formation de bin\u00f4mes": [[195, "Exercice-4-:-formation-de-bin\u00f4mes"], [196, "Exercice-4-:-formation-de-bin\u00f4mes"]], "Puzzles algorithmes (2) - correction": [[196, "Puzzles-algorithmes-(2)---correction"]], "Seconde id\u00e9e : les trouver tous ?": [[196, "Seconde-id\u00e9e-:-les-trouver-tous-?"]], "solution": [[196, "solution"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique": [[197, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique"]], "Apart\u00e9 sur les classes": [[197, "Apart\u00e9-sur-les-classes"]], "Classes, attributs, op\u00e9rateurs": [[197, "Classes,-attributs,-op\u00e9rateurs"]], "Exercice 1 : carr\u00e9 magique": [[197, "Exercice-1-:-carr\u00e9-magique"], [198, "Exercice-1-:-carr\u00e9-magique"]], "M\u00e9thodes": [[197, "M\u00e9thodes"], [225, "methodes"], [237, "methodes"]], "Exercice 2 : \u00e0 faire \u00e0 trois, carr\u00e9 magique (suite)": [[197, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"], [198, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"]], "Exercice 3 : trouver tous les carr\u00e9s magiques": [[197, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"], [198, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"]], "Exercice 4 : faire plus rapide": [[197, "Exercice-4-:-faire-plus-rapide"], [198, "Exercice-4-:-faire-plus-rapide"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)": [[198, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique-(correction)"]], "Programme complet": [[198, "Programme-complet"]], "Classes, h\u00e9ritage": [[199, "Classes,-h\u00e9ritage"]], "Qu\u2019est-ce que l\u2019h\u00e9ritage ?": [[199, "Qu'est-ce-que-l'h\u00e9ritage-?"]], "Exercice 1 : pi\u00e8ce normale": [[199, "Exercice-1-:-pi\u00e8ce-normale"], [200, "Exercice-1-:-pi\u00e8ce-normale"]], "Exercice 2 : pi\u00e8ce truqu\u00e9e": [[199, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"], [200, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"]], "Utiliser des m\u00e9thodes de la classe m\u00e8re": [[199, "Utiliser-des-m\u00e9thodes-de-la-classe-m\u00e8re"]], "Exercice 3 : Pi\u00e8ce mixte": [[199, "Exercice-3-:-Pi\u00e8ce-mixte"], [200, "Exercice-3-:-Pi\u00e8ce-mixte"]], "Autre construction avec des fonctions": [[199, "Autre-construction-avec-des-fonctions"]], "Exercice 4 : pi\u00e8ce mixte avec des fonctions": [[199, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"], [200, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"]], "Classes, h\u00e9ritage (correction)": [[200, "Classes,-h\u00e9ritage-(correction)"]], "Dictionnaires, fonctions, code de Vigen\u00e8re": [[201, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re"]], "Fonctions dans le d\u00e9tail": [[201, "Fonctions-dans-le-d\u00e9tail"]], "Variable locale": [[201, "Variable-locale"]], "Mot-cl\u00e9 return": [[201, "Mot-cl\u00e9-return"]], "Fonction r\u00e9cursive": [[201, "Fonction-r\u00e9cursive"], [239, "fonction-recursive"]], "Dictionnaires": [[201, "Dictionnaires"]], "cl\u00e9 - valeur": [[201, "cl\u00e9---valeur"]], "notions de co\u00fbt": [[201, "notions-de-co\u00fbt"]], "ordonner les \u00e9l\u00e9ments d\u2019un dictionnaire": [[201, "ordonner-les-\u00e9l\u00e9ments-d'un-dictionnaire"]], "Exercice 2 : recherche dans une liste": [[201, "Exercice-2-:-recherche-dans-une-liste"]], "Exercice 3 : utilisation d\u2019un dictionnaire": [[201, "Exercice-3-:-utilisation-d'un-dictionnaire"], [202, "Exercice-3-:-utilisation-d'un-dictionnaire"]], "Exercice 4 : crypter de d\u00e9crypter selon Vigen\u00e8re": [[201, "Exercice-4-:-crypter-de-d\u00e9crypter-selon-Vigen\u00e8re"]], "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)": [[202, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re-(correction)"]], "Exercice 4 : crypter et d\u00e9crypter selon Vigen\u00e8re": [[202, "Exercice-4-:-crypter-et-d\u00e9crypter-selon-Vigen\u00e8re"]], "Int\u00e9grale et la m\u00e9thode des rectangles": [[203, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles"]], "Calcul de l\u2019int\u00e9grale": [[203, "Calcul-de-l'int\u00e9grale"], [204, "Calcul-de-l'int\u00e9grale"]], "Calcul de pr\u00e9cision": [[203, "Calcul-de-pr\u00e9cision"], [204, "Calcul-de-pr\u00e9cision"]], "Calcul plus rapide": [[203, "Calcul-plus-rapide"], [204, "Calcul-plus-rapide"]], "Int\u00e9grale et la m\u00e9thode des rectangles - correction": [[204, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles---correction"]], "La fonction r\u00e9calcitrante": [[204, "La-fonction-r\u00e9calcitrante"]], "Calcul de Monte Carlo": [[204, "Calcul-de-Monte-Carlo"]], "Quand s\u2019arr\u00eater ?": [[204, "Quand-s'arr\u00eater-?"]], "2048 - strat\u00e9gie gagnante": [[205, "2048---strat\u00e9gie-gagnante"]], "Exercice 1 : impl\u00e9menter les r\u00e8gles du jeu": [[205, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"], [206, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"]], "Exercice 2 : impl\u00e9menter une strat\u00e9gie": [[205, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"], [206, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"]], "2048 - strat\u00e9gie gagnante - correction": [[206, "2048---strat\u00e9gie-gagnante---correction"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res": [[207, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res"]], "Ecriture": [[207, "Ecriture"], [241, "ecriture"]], "Lecture": [[207, "Lecture"], [241, "lecture"]], "with": [[207, "with"]], "\u00e0 quoi \u00e7a sert ?": [[207, "\u00e0-quoi-\u00e7a-sert-?"]], "Exercice 1 : Excel \\rightarrow Python \\rightarrow Excel": [[207, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"], [208, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"]], "Autres formats de fichiers": [[207, "Autres-formats-de-fichiers"]], "Exercice 2 : trouver un module (1)": [[207, "Exercice-2-:-trouver-un-module-(1)"]], "Exercice 3 : trouver un module (2)": [[207, "Exercice-3-:-trouver-un-module-(2)"], [208, "Exercice-3-:-trouver-un-module-(2)"]], "Module qu\u2019on cr\u00e9e soi-m\u00eame": [[207, "Module-qu'on-cr\u00e9e-soi-m\u00eame"]], "Exercice 4 : son propre module": [[207, "Exercice-4-:-son-propre-module"], [208, "Exercice-4-:-son-propre-module"]], "Exercice 5 : chercher un motif dans un texte": [[207, "Exercice-5-:-chercher-un-motif-dans-un-texte"], [208, "Exercice-5-:-chercher-un-motif-dans-un-texte"]], "Exercice 6 : chercher un autre motif dans un texte": [[207, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"], [208, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"]], "Exercice 7 : recherche les urls dans une page wikip\u00e9dia": [[207, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"], [208, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"]], "Exercice 8 : construire un texte \u00e0 motif": [[207, "Exercice-8-:-construire-un-texte-\u00e0-motif"], [208, "Exercice-8-:-construire-un-texte-\u00e0-motif"]], "Petites subtilit\u00e9s avec les expressions r\u00e9guli\u00e8res en Python": [[207, "Petites-subtilit\u00e9s-avec-les-expressions-r\u00e9guli\u00e8res-en-Python"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)": [[208, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res-(correction)"]], "Premiers pas en Python": [[209, "Premiers-pas-en-Python"]], "Partie 1": [[209, "Partie-1"]], "Partie 2": [[209, "Partie-2"], [210, "Partie-2"]], "Partie 3": [[209, "Partie-3"], [210, "Partie-3"]], "Premiers pas en Python (correction)": [[210, "Premiers-pas-en-Python-(correction)"]], "Tracer une pyramide bigarr\u00e9e": [[211, "Tracer-une-pyramide-bigarr\u00e9e"]], "Probl\u00e8me": [[211, "Probl\u00e8me"], [212, "Probl\u00e8me"]], "Id\u00e9e de la solution": [[211, "Id\u00e9e-de-la-solution"], [212, "Id\u00e9e-de-la-solution"]], "Tracer une pyramide bigarr\u00e9e - correction": [[212, "Tracer-une-pyramide-bigarr\u00e9e---correction"]], "Les coordonn\u00e9es": [[212, "Les-coordonn\u00e9es"]], "La couleur": [[212, "La-couleur"]], "Deviner la langue d\u2019un texte": [[213, "Deviner-la-langue-d'un-texte"]], "Q1 : lire un fichier": [[213, "Q1-:-lire-un-fichier"], [214, "Q1-:-lire-un-fichier"]], "Q2 : histogramme": [[213, "Q2-:-histogramme"], [214, "Q2-:-histogramme"]], "Q3 : normalisation": [[213, "Q3-:-normalisation"], [214, "Q3-:-normalisation"]], "Q4 : calcul": [[213, "Q4-:-calcul"], [214, "Q4-:-calcul"]], "Q5 : score": [[213, "Q5-:-score"], [214, "Q5-:-score"]], "Deviner la langue d\u2019un texte (correction)": [[214, "Deviner-la-langue-d'un-texte-(correction)"]], "Arbre et Trie": [[215, "Arbre-et-Trie"]], "Construction d\u2019une liste al\u00e9atoire": [[215, "Construction-d'une-liste-al\u00e9atoire"]], "Trie": [[215, "Trie"]], "Recherche dans un trie": [[215, "Recherche-dans-un-trie"]], "Arbre et Trie (correction)": [[216, "Arbre-et-Trie-(correction)"]], "Exercice 3 : recherche dichotomique": [[216, "Exercice-3-:-recherche-dichotomique"]], "Exercice 5 : trie": [[216, "Exercice-5-:-trie"]], "Exercice 6 : recherche dans un trie": [[216, "Exercice-6-:-recherche-dans-un-trie"]], "Plus en d\u00e9tails": [[216, "Plus-en-d\u00e9tails"]], "Questions": [[216, "Questions"], [227, "questions"]], "Variables, boucles, tests": [[217, "Variables,-boucles,-tests"]], "Partie 1 : variables, int, float, str, list": [[217, "Partie-1-:-variables,-int,-float,-str,-list"]], "Partie 2 : Tests": [[217, "Partie-2-:-Tests"]], "Partie 3 : boucles": [[217, "Partie-3-:-boucles"]], "Partie 4 : les listes compactes, les ensembles": [[217, "Partie-4-:-les-listes-compactes,-les-ensembles"]], "Partie 5 : recherche non dichotomique (exercice)": [[217, "Partie-5-:-recherche-non-dichotomique-(exercice)"], [218, "Partie-5-:-recherche-non-dichotomique-(exercice)"]], "Partie 6 : Recherche dichotomique": [[217, "Partie-6-:-Recherche-dichotomique"]], "Partie 7 : pour aller plus loin": [[217, "Partie-7-:-pour-aller-plus-loin"]], "Variables, boucles, tests (correction)": [[218, "Variables,-boucles,-tests-(correction)"]], "Partie 3 : boucles (exercice)": [[218, "Partie-3-:-boucles-(exercice)"]], "Partie 6 : recherche dichotomique (exercice)": [[218, "Partie-6-:-recherche-dichotomique-(exercice)"]], "Partie 7 : pour aller plus loin (exercice)": [[218, "Partie-7-:-pour-aller-plus-loin-(exercice)"]], "Optimiser la note moyenne": [[219, "Optimiser-la-note-moyenne"]], "La classe Bereme": [[219, "La-classe-Bereme"]], "La classe Eleve": [[219, "La-classe-Eleve"]], "Une classe": [[219, "Une-classe"]], "Une bar\u00e8me optimis\u00e9": [[219, "Une-bar\u00e8me-optimis\u00e9"]], "Une erreur": [[219, "Une-erreur"]], "D\u00e9monstration": [[219, "D\u00e9monstration"]], "Distance d\u2019\u00e9dition (4 octobre)": [[220, "Distance-d'\u00e9dition-(4-octobre)"]], "distance avec des mots de m\u00eame longueur": [[220, "distance-avec-des-mots-de-m\u00eame-longueur"]], "Distance avec des mots presque de m\u00eame longueur": [[220, "Distance-avec-des-mots-presque-de-m\u00eame-longueur"]], "Cas g\u00e9n\u00e9rique": [[220, "Cas-g\u00e9n\u00e9rique"]], "Co\u00fbt algorithmique": [[220, "Co\u00fbt-algorithmique"]], "Distance de Levenshtein": [[220, "Distance-de-Levenshtein"]], "Avec alignement": [[220, "Avec-alignement"]], "Un co\u00fbt diff\u00e9rent pour les accents": [[220, "Un-co\u00fbt-diff\u00e9rent-pour-les-accents"]], "Pivot de Gauss": [[222, "Pivot-de-Gauss"]], "Recherche de pr\u00e9fixes": [[223, "Recherche-de-pr\u00e9fixes"]], "Notebooks \u00e9crits durant les s\u00e9ances": [[224, "notebooks-ecrits-durant-les-seances"]], "Pr\u00e9sentation des classes : m\u00e9thodes et attributs": [[225, "presentation-des-classes-methodes-et-attributs"]], "D\u00e9finition, d\u00e9claration": [[225, "definition-declaration"]], "Attributs": [[225, "attributs"]], "Constructeur": [[225, "constructeur"]], "Apport du langage python": [[225, "apport-du-langage-python"]], "Liste des attributs": [[225, "liste-des-attributs"]], "Attributs implicites": [[225, "attributs-implicites"]], "Commentaires, aide": [[225, "commentaires-aide"]], "Classe incluse": [[225, "classe-incluse"]], "It\u00e9rateurs": [[225, "iterateurs"], [239, "iterateurs"]], "M\u00e9thodes, attributs statiques et ajout de m\u00e9thodes": [[225, "methodes-attributs-statiques-et-ajout-de-methodes"]], "M\u00e9thode statique": [[225, "methode-statique"]], "Attributs statiques": [[225, "attributs-statiques"]], "Ajout de m\u00e9thodes": [[225, "ajout-de-methodes"]], "Propri\u00e9t\u00e9s": [[225, "proprietes"]], "Copie d\u2019instance de classe simple": [[225, "copie-d-instance-de-classe-simple"]], "Copie d\u2019instance de classes incluant d\u2019autres classes": [[225, "copie-d-instance-de-classes-incluant-d-autres-classes"]], "Listes et dictionnaires": [[225, "listes-et-dictionnaires"]], "copy et deepcopy": [[225, "copy-et-deepcopy"]], "Attributs fig\u00e9s": [[225, "attributs-figes"]], "Exemple autour de pi\u00e8ces de monnaie": [[225, "exemple-autour-de-pieces-de-monnaie"]], "Sens de l\u2019h\u00e9ritage (2)": [[225, "sens-de-l-heritage-2"]], "H\u00e9ritage multiple": [[225, "heritage-multiple"]], "Fonctions issubclass et isinstance": [[225, "fonctions-issubclass-et-isinstance"]], "Compilation de classes": [[225, "compilation-de-classes"]], "Surcharge d\u2019op\u00e9rateur sur des types": [[225, "surcharge-d-operateur-sur-des-types"]], "Sens de l\u2019h\u00e9ritage (1)": [[225, "sens-de-l-heritage-1"]], "Deux lign\u00e9es d\u2019h\u00e9ritages": [[225, "deux-lignees-d-heritages"]], "C\u2019est oblig\u00e9 d\u2019utiliser les classes ?": [[227, "c-est-oblige-d-utiliser-les-classes"]], "Principe des exceptions": [[228, "principe-des-exceptions"]], "Attraper toutes les erreurs": [[228, "attraper-toutes-les-erreurs"]], "Obtenir le type d\u2019erreur, attraper un type d\u2019exception": [[228, "obtenir-le-type-d-erreur-attraper-un-type-d-exception"]], "Lancer une exception": [[228, "lancer-une-exception"]], "H\u00e9ritage et exception": [[228, "heritage-et-exception"]], "Instructions try, except imbriqu\u00e9es": [[228, "instructions-try-except-imbriquees"]], "D\u00e9finir ses propres exceptions": [[228, "definir-ses-propres-exceptions"]], "D\u00e9river une classe d\u2019exception": [[228, "deriver-une-classe-d-exception"]], "Personnalisation d\u2019une classe d\u2019exception": [[228, "personnalisation-d-une-classe-d-exception"]], "Exemples d\u2019utilisation des exceptions": [[228, "exemples-d-utilisation-des-exceptions"]], "Les it\u00e9rateurs": [[228, "les-iterateurs"]], "Exception ou valeur aberrante": [[228, "exception-ou-valeur-aberrante"]], "Le pi\u00e8ge des exceptions": [[228, "le-piege-des-exceptions"]], "Usage": [[229, "usage"]], "Pile d\u2019appel ou call stack": [[229, "pile-d-appel-ou-call-stack"]], "R\u00e9cup\u00e9ration de la pile d\u2019appel": [[229, "recuperation-de-la-pile-d-appel"]], "Message d\u2019erreur plus explicite": [[229, "message-d-erreur-plus-explicite"]], "Type d\u2019exception": [[229, "type-d-exception"]], "Conventions": [[229, "conventions"]], "Warning et logging": [[231, "warning-et-logging"]], "Warnings": [[231, "warnings"]], "G\u00e9n\u00e9rer un warning": [[231, "generer-un-warning"]], "Intercepter un warning": [[231, "intercepter-un-warning"]], "Warning personnalis\u00e9": [[231, "warning-personnalise"]], "Logging": [[231, "logging"]], "Interfaces graphiques": [[232, "interfaces-graphiques"]], "tkinter": [[233, "tkinter"]], "Les objets": [[233, "les-objets"]], "Zone de texte": [[233, "zone-de-texte"]], "Bouton": [[233, "bouton"]], "Zone de saisie": [[233, "zone-de-saisie"]], "Zone de saisie \u00e0 plusieurs lignes": [[233, "zone-de-saisie-a-plusieurs-lignes"]], "Case \u00e0 cocher": [[233, "case-a-cocher"]], "Case ronde ou bouton radio": [[233, "case-ronde-ou-bouton-radio"]], "Liste avec barre de d\u00e9filement, Combobox": [[233, "liste-avec-barre-de-defilement-combobox"]], "Canevas": [[233, "canevas"]], "Menus": [[233, "menus"]], "M\u00e9thodes communes": [[233, "methodes-communes"]], "Disposition des objets dans une fen\u00eatre": [[233, "disposition-des-objets-dans-une-fenetre"]], "Emplacements": [[233, "emplacements"]], "M\u00e9thode pack": [[233, "methode-pack"]], "M\u00e9thode grid": [[233, "methode-grid"]], "M\u00e9thode place": [[233, "methode-place"]], "Sous-fen\u00eatre": [[233, "sous-fenetre"]], "Ev\u00e9nements": [[233, "evenements"]], "Fen\u00eatre principale": [[233, "fenetre-principale"]], "Focus": [[233, "focus"]], "Lancer une fonction lorsqu\u2019un bouton est press\u00e9": [[233, "lancer-une-fonction-lorsqu-un-bouton-est-presse"]], "Associer n\u2019importe quel \u00e9v\u00e9nement \u00e0 un objet": [[233, "associer-n-importe-quel-evenement-a-un-objet"]], "Menu": [[233, "menu"]], "Fonctions pr\u00e9d\u00e9finies": [[233, "fonctions-predefinies"]], "D\u2019autres fen\u00eatres et contr\u00f4les": [[233, "d-autres-fenetres-et-controles"]], "Cr\u00e9er une seconde bo\u00eete de dialogues": [[233, "creer-une-seconde-boite-de-dialogues"]], "Fen\u00eatres standard": [[233, "fenetres-standard"]], "Compte \u00e0 rebours": [[233, "compte-a-rebours"]], "Contr\u00f4les personnalis\u00e9s : utilisation des classes": [[233, "controles-personnalises-utilisation-des-classes"]], "Fen\u00eatres personnalis\u00e9es : utilisation des classes": [[233, "fenetres-personnalisees-utilisation-des-classes"]], "S\u00e9quence d\u2019\u00e9v\u00e9nements": [[233, "sequence-d-evenements"]], "Communiquer un r\u00e9sultat par message": [[233, "communiquer-un-resultat-par-message"]], "OrderedDict": [[234, "ordereddict"]], "namedtuple": [[234, "namedtuple"]], "Counter": [[234, "counter"]], "deque": [[234, "deque"]], "Constructions fr\u00e9quentes": [[235, "constructions-frequentes"]], "Constructions n\u00e9gatives": [[235, "constructions-negatives"]], "datetime": [[236, "datetime"]], "Autres formats de date": [[236, "autres-formats-de-date"]], "Encoding et jeux de caract\u00e8res": [[237, "encoding-et-jeux-de-caracteres"]], "Jeux de caract\u00e8res": [[237, "jeux-de-caracteres"]], "Encodings par d\u00e9faut": [[237, "encodings-par-defaut"]], "Variables et fonctions": [[238, "variables-et-fonctions"]], "Syntaxe du langage Python (boucles, tests, fonctions)": [[239, "syntaxe-du-langage-python-boucles-tests-fonctions"]], "Les trois concepts des algorithmes": [[239, "les-trois-concepts-des-algorithmes"]], "D\u00e9finition et syntaxe": [[239, "definition-et-syntaxe"]], "Comparaisons possibles": [[239, "comparaisons-possibles"]], "Op\u00e9rateurs logiques": [[239, "operateurs-logiques"]], "Ecriture condens\u00e9e (test)": [[239, "ecriture-condensee-test"]], "Exemple (test)": [[239, "exemple-test"]], "None, True et 1": [[239, "none-true-et-1"]], "Passer, instruction pass": [[239, "passer-instruction-pass"]], "Boucle B1 : test": [[239, "indexmathe-Boucle0"]], "Boucle while": [[239, "boucle-while"]], "Boucle for": [[239, "boucle-for"]], "Listes, boucle for, liste en extension": [[239, "listes-boucle-for-liste-en-extension"]], "Plusieurs variables de boucles": [[239, "plusieurs-variables-de-boucles"]], "Ecriture condens\u00e9e (for)": [[239, "ecriture-condensee-for"]], "Pilotage d\u2019une boucle : continue": [[239, "pilotage-d-une-boucle-continue"]], "Pilotage d\u2019une boucle : break": [[239, "pilotage-d-une-boucle-break"]], "Fin normale d\u2019une boucle : else": [[239, "fin-normale-d-une-boucle-else"]], "Suppression ou ajout d\u2019\u00e9l\u00e9ments lors d\u2019une boucle": [[239, "suppression-ou-ajout-d-elements-lors-d-une-boucle"]], "D\u00e9finition, syntaxe": [[239, "definition-syntaxe"]], "Exemple (for)": [[239, "exemple-for"]], "Param\u00e8tres avec des valeurs par d\u00e9faut": [[239, "parametres-avec-des-valeurs-par-defaut"]], "Ordre des param\u00e8tres": [[239, "ordre-des-parametres"]], "Surcharge de fonction": [[239, "surcharge-de-fonction"]], "Commentaires": [[239, "commentaires"]], "Param\u00e8tres modifiables": [[239, "parametres-modifiables"]], "Port\u00e9e des variables, des param\u00e8tres": [[239, "portee-des-variables-des-parametres"]], "Port\u00e9e des fonctions": [[239, "portee-des-fonctions"]], "Nombre de param\u00e8tres variable": [[239, "nombre-de-parametres-variable"]], "Ecriture simplifi\u00e9e pour des fonctions simples : lambda": [[239, "ecriture-simplifiee-pour-des-fonctions-simples-lambda"]], "Fonctions g\u00e9n\u00e9rateur": [[239, "fonctions-generateur"]], "Identificateur appelable": [[239, "identificateur-appelable"]], "Compilation dynamique (eval)": [[239, "compilation-dynamique-eval"]], "Compilation dynamique (compile, exec)": [[239, "compilation-dynamique-compile-exec"]], "Indentation": [[239, "indentation"]], "Fonctions usuelles": [[239, "fonctions-usuelles"]], "Types et variables du langage python": [[240, "types-et-variables-du-langage-python"]], "Types immuables (ou immutable)": [[240, "types-immuables-ou-immutable"]], "Type \u00ab\u00a0rien\u00a0\u00bb ou None": [[240, "type-rien-ou-none"]], "Nombres r\u00e9els et entiers": [[240, "nombres-reels-et-entiers"]], "Bool\u00e9en": [[240, "booleen"]], "Cha\u00eene de caract\u00e8res": [[240, "chaine-de-caracteres"]], "Cr\u00e9ation d\u2019une cha\u00eene de caract\u00e8res - str": [[240, "creation-d-une-chaine-de-caracteres-str"]], "Manipulation d\u2019une cha\u00eene de caract\u00e8res": [[240, "manipulation-d-une-chaine-de-caracteres"]], "Formatage d\u2019une cha\u00eene de caract\u00e8res": [[240, "formatage-d-une-chaine-de-caracteres"]], "Syntaxe %": [[240, "syntaxe"]], "M\u00e9thode format": [[240, "methode-format"]], "Notation f{}": [[240, "notation-f"]], "Un cas particuler %r ou {!r}": [[240, "un-cas-particuler-r-ou-r"]], "tuple": [[240, "tuple"]], "Nombres complexes": [[240, "nombres-complexes"]], "bytes": [[240, "bytes"]], "Types modifiables ou mutable": [[240, "types-modifiables-ou-mutable"]], "bytearray": [[240, "bytearray"]], "D\u00e9finition et m\u00e9thodes (list)": [[240, "definition-et-methodes-list"]], "Exemples (list)": [[240, "exemples-list"]], "Fonction range": [[240, "fonction-range"]], "Boucles et listes": [[240, "boucles-et-listes"]], "Collage de s\u00e9quences, fonction zip": [[240, "collage-de-sequences-fonction-zip"]], "Concat\u00e9nation de cha\u00eene de caract\u00e8res": [[240, "concatenation-de-chaine-de-caracteres"]], "Copie": [[240, "copie"]], "D\u00e9finition et m\u00e9thodes (dict)": [[240, "definition-et-methodes-dict"]], "Exemples (dict)": [[240, "exemples-dict"]], "Copie (dict)": [[240, "copie-dict"]], "Cl\u00e9s de type modifiable": [[240, "cles-de-type-modifiable"]], "Ensemble ou set": [[240, "ensemble-ou-set"]], "Extensions": [[240, "extensions"]], "Fonction print, repr et conversion en cha\u00eene de caract\u00e8res": [[240, "fonction-print-repr-et-conversion-en-chaine-de-caracteres"]], "Fonction eval": [[240, "eval-fonction-chapitre-deux"]], "Informations fournies par python": [[240, "informations-fournies-par-python"]], "Affectations multiples": [[240, "affectations-multiples"]], "Hi\u00e9rarchie des objets": [[240, "hierarchie-des-objets"]], "Objets internes": [[240, "objets-internes"]], "Commentaires accentu\u00e9s": [[240, "commentaires-accentues"]], "Format texte": [[241, "format-texte"]], "Ecriture en mode \u00ab\u00a0ajout\u00a0\u00bb": [[241, "ecriture-en-mode-ajout"]], "Encoding et les accents": [[241, "encoding-et-les-accents"]], "Fichiers zip": [[241, "fichiers-zip"]], "Lecture (zip)": [[241, "lecture-zip"]], "Ecriture (zip)": [[241, "ecriture-zip"]], "Manipulation de fichiers": [[241, "manipulation-de-fichiers"]], "Gestion des noms de chemins": [[241, "gestion-des-noms-de-chemins"]], "Copie, suppression": [[241, "copie-suppression"]], "Liste de fichiers": [[241, "liste-de-fichiers"]], "Sans format ou format binaire": [[241, "sans-format-ou-format-binaire"]], "Ecriture dans un fichier binaire": [[241, "ecriture-dans-un-fichier-binaire"]], "Lecture d\u2019un fichier binaire": [[241, "lecture-d-un-fichier-binaire"]], "Exemple fichier binaire": [[241, "exemple-fichier-binaire"]], "Objets plus complexes": [[241, "objets-plus-complexes"]], "Entr\u00e9es, Sorties, Modules": [[242, "entrees-sorties-modules"]], "Module ou extension": [[243, "module-ou-extension"]], "Un module": [[243, "un-module"]], "Exemple": [[243, "exemple"]], "Importer un module": [[243, "importer-un-module"]], "Nom d\u2019un module": [[243, "nom-d-un-module"]], "Modules et fichiers": [[243, "modules-et-fichiers"]], "Emplacement d\u2019un module": [[243, "emplacement-d-un-module"]], "Attributs communs \u00e0 tout module": [[243, "attributs-communs-a-tout-module"]], "Cas pratiques": [[243, "cas-pratiques"]], "Ce qui ne marche pas : les import cycliques": [[243, "ce-qui-ne-marche-pas-les-import-cycliques"]], "Ajouter un module en cours d\u2019ex\u00e9cution": [[243, "ajouter-un-module-en-cours-d-execution"]], "Liste des modules import\u00e9s": [[243, "liste-des-modules-importes"]], "Plusieurs modules et fichiers": [[243, "plusieurs-modules-et-fichiers"]], "Arborescence de modules, paquetage": [[243, "arborescence-de-modules-paquetage"]], "Import relatif": [[243, "import-relatif"]], "Modules internes": [[243, "modules-internes"]], "Modules externes": [[243, "modules-externes"]], "Optimisation": [[244, "optimisation"]], "S\u00e9rialiser autre chose que des donn\u00e9es": [[244, "serialiser-autre-chose-que-des-donnees"]], "Parall\u00e9lisation": [[245, "parallelisation"]], "Threads": [[246, "threads"]], "Premier thread": [[246, "premier-thread"]], "Synchronisation": [[246, "synchronisation"]], "Attente": [[246, "attente"]], "Partage d\u2019informations": [[246, "partage-d-informations"]], "Interface graphique": [[246, "interface-graphique"]], "Files de messages": [[246, "files-de-messages"]], "Multithreading plus simple": [[246, "multithreading-plus-simple"]], "concurrent.futures": [[246, "concurrent-futures"]], "Notion de futures": [[246, "notion-de-futures"]], "Un probl\u00e8me de blocage": [[246, "un-probleme-de-blocage"]], "async - await - asyncio": [[246, "async-await-asyncio"]], "GIL - Global Interpreter Lock": [[246, "gil-global-interpreter-lock"]], "cython : un m\u00e9lange de python et C": [[246, "cython-un-melange-de-python-et-c"]], "C#, Java": [[246, "c-java"]], "Les ensembles de caract\u00e8res": [[248, "les-ensembles-de-caracteres"]], "Les multiplicateurs": [[248, "les-multiplicateurs"]], "Groupes": [[248, "groupes"]], "Assembler les caract\u00e8res": [[248, "assembler-les-caracteres"]], "Exemple plus complet": [[248, "exemple-plus-complet"]], "Groupes nomm\u00e9s": [[248, "groupes-nommes"]], "Le langage Python": [[249, "le-langage-python"]], "Apprendre la programmation avec Python": [[75, "apprendre-la-programmation-avec-python"]], "Lectures": [[75, null]], "Older versions": [[75, "older-versions"]], "Change Logs": [[0, "change-logs"]], "0.5.0": [[0, "id1"]], "0.4.0": [[0, "id2"]], "0.3.1": [[0, "id3"]], "License": [[77, "license"]]}, "indexentries": {}})