Search.setIndex({"docnames": ["CHANGELOGS", "algorithm_culture", "api/classique", "api/datasets", "api/faqs", "api/index", "api/numpysex", "api/practice/rues_paris", "api/practice/tsp_bresenham", "api/practice/tsp_kohonen", "api/practice/tsp_kruskal", "api/tools", "api/video/tsp_kohonen", "api/video/tsp_kruskal", "articles/2022-01-01-assurance", "articles/2022-11-31-route2022", "articles/2022-12-07-cartopy", "articles/2023-08-03-code-jam", "articles/2023-08-09-hermionne", "articles/2023-09-06-ensae", "articles/2023-11-31-route2023", "articles/index", "auto_examples/index", "auto_examples/ml/index", "auto_examples/ml/plot_correlations", "auto_examples/ml/plot_roc", "auto_examples/ml/sg_execution_times", "auto_examples/prog/index", "auto_examples/prog/plot_einstein_riddle", "auto_examples/prog/plot_float_and_double_rouding", "auto_examples/prog/plot_gil_example", "auto_examples/prog/plot_hypercube", "auto_examples/prog/plot_lambda_function", "auto_examples/prog/plot_matador", "auto_examples/prog/plot_numpy_tricks", "auto_examples/prog/plot_pandas_groupby", "auto_examples/prog/plot_partie_dame", "auto_examples/prog/plot_serialisation_examples", "auto_examples/prog/plot_serialisation_protobuf", "auto_examples/prog/plot_tarabiscote", "auto_examples/prog/plot_tsp", "auto_examples/prog/sg_execution_times", "auto_examples/sg_execution_times", "c_data/dataframes", "c_data/enedis_cartes", "c_data/graphes", "c_data/index", "c_data/matrices", "c_data/nb_array", "c_data/nb_dataframe", "c_data/nb_numpy", "c_data/nb_pandas", "c_data/numpy_broadcast", "c_expose/finance/finance_autostrat", "c_expose/index", "c_expose/tsp/tsp_kohonen", "c_expose/tsp/tsp_kruskal", "c_ml/index", "c_ml/rappel", "c_resume/cheat_sheet", "c_resume/conseil_programmes", "c_resume/git", "c_resume/index", "c_resume/jenkins", "c_resume/linux", "c_resume/python_sheet", "i_ex", "i_faq", "i_index", "index", "introduction", "license", "notebook_gallery", "practice/algo-base/BJKST", "practice/algo-base/exercice_compose_connexe", "practice/algo-base/exercice_echelle", "practice/algo-base/exercice_edit_distance", "practice/algo-base/exercice_editdist", "practice/algo-base/exercice_ordonnancement", "practice/algo-base/exercice_plus_grande_somme", "practice/algo-base/exercice_random_graph", "practice/algo-base/exercice_simulation_covid", "practice/algo-base/exercice_simulation_covid_simple", "practice/algo-base/exercice_suffix", "practice/algo-base/exercice_topk", "practice/algo-base/exercice_tsp", "practice/algo-base/exercice_xn", "practice/algo-base/matrix_dictionary", "practice/algo-base/tsp_aparte", "practice/algo-base/tsp_simplifie", "practice/algo-compose/exercice_morse", "practice/algo-compose/paris_parcours", "practice/algo-compose/vigenere", "practice/exams", "practice/exams/interro_rapide_20_minutes_2014_09", "practice/exams/interro_rapide_20_minutes_2014_10", "practice/exams/interro_rapide_20_minutes_2014_11", "practice/exams/interro_rapide_20_minutes_2014_12", "practice/exams/interro_rapide_20_minutes_2015_09", "practice/exams/interro_rapide_20_minutes_2015_11", "practice/exams/td_note_2013_bout_de_code_coloriage", "practice/exams/td_note_2013_coloriage_correction", "practice/exams/td_note_2015", "practice/exams/td_note_2015_rattrapage_enonce", "practice/exams/td_note_2016", "practice/exams/td_note_2017", "practice/exams/td_note_2017_2", "practice/exams/td_note_2018_1", "practice/exams/td_note_2018_2", "practice/exams/td_note_2019_1", "practice/exams/td_note_2019_2", "practice/exams/td_note_2020_1", "practice/exams/td_note_2020_2", "practice/exams/td_note_2021", "practice/exams/td_note_2022", "practice/exams/td_note_2022_rattrapage", "practice/exams/td_note_2022_rattrapage2", "practice/exams/td_note_2023", "practice/exams/td_note_2023-2024", "practice/index_algo", "practice/index_data", "practice/index_exam", "practice/index_ml", "practice/index_python", "practice/ml/winesc_color", "practice/ml/winesr_reg", "practice/py-base/classe_de", "practice/py-base/classe_iterateur", "practice/py-base/classe_permutation", "practice/py-base/classe_tree", "practice/py-base/classe_user_p", "practice/py-base/classes_2048", "practice/py-base/classes_metro", "practice/py-base/code_liste_tuple", "practice/py-base/code_multinomial", "practice/py-base/coloriage_carre", "practice/py-base/de_rotation", "practice/py-base/exercice_hash", "practice/py-base/exercice_json_xml", "practice/py-base/exercice_pi", "practice/py-base/exercice_regex", "practice/py-base/exercice_serialisation_json", "practice/py-base/histogramme_rapide", "practice/py-base/nbheap", "practice/py-base/pivot_gauss", "practice/py-base/profile_gini", "practice/py-base/profiling_conv", "practice/py-base/profiling_example", "practice/py-base/recherche_dichotomique", "practice/py-base/scrapping", "practice/py-base/structures_donnees_conversion", "practice/py-base/tableau_contingence", "practice/py-base/tests_unitaires", "practice/py-base/tri_nlnd", "practice/tds-algo/decorrelation", "practice/tds-algo/decorrelation_correction", "practice/tds-algo/gentry_integer_encryption", "practice/tds-algo/gentry_integer_encryption_correction", "practice/tds-algo/graph_spectral_clustering", "practice/tds-algo/graph_spectral_clustering_correction", "practice/tds-algo/knn_high_dimension", "practice/tds-algo/knn_high_dimension_correction", "practice/tds-algo/plus_court_chemin", "practice/tds-algo/plus_court_chemin_correction", "practice/tds-algo/puzzle_algo_1", "practice/tds-algo/puzzle_algo_1_correction", "practice/tds-algo/puzzle_algo_2", "practice/tds-algo/puzzle_algo_2_correction", "practice/tds-base/classes_carre_magique", "practice/tds-base/classes_carre_magique_correction", "practice/tds-base/classes_heritage", "practice/tds-base/classes_heritage_correction", "practice/tds-base/dictionnaire_vigenere", "practice/tds-base/dictionnaire_vigenere_correction", "practice/tds-base/integrale_rectangle", "practice/tds-base/integrale_rectangle_correction", "practice/tds-base/j2048", "practice/tds-base/j2048_correction", "practice/tds-base/module_file_regex", "practice/tds-base/module_file_regex_correction", "practice/tds-base/premiers_pas", "practice/tds-base/premiers_pas_correction", "practice/tds-base/pyramide_bigarree", "practice/tds-base/pyramide_bigarree_correction", "practice/tds-base/texte_langue", "practice/tds-base/texte_langue_correction", "practice/tds-base/trie", "practice/tds-base/trie_correction", "practice/tds-base/variable_boucle_tests", "practice/tds-base/variable_boucle_tests_correction", "practice/years/2023/bareme_note_optimisation", "practice/years/2023/editdist", "practice/years/2023/index", "practice/years/2023/pivot_gauss", "practice/years/2023/prefix_search", "practice/years/index", "py/c_classes/classes", "py/c_classes/index", "py/c_classes/questions", "py/c_exception/exception", "py/c_exception/exception_ext", "py/c_exception/index", "py/c_exception/warning", "py/c_gui/index", "py/c_gui/tkinter", "py/c_lang/collections", "py/c_lang/constructions", "py/c_lang/dates", "py/c_lang/encoding", "py/c_lang/index", "py/c_lang/syntaxe", "py/c_lang/types", "py/c_module/files", "py/c_module/index", "py/c_module/module", "py/c_module/serialization", "py/c_parallelisation/index", "py/c_parallelisation/thread", "py/c_regex/index", "py/c_regex/regex", "py/index", "sg_execution_times"], "filenames": ["CHANGELOGS.rst", "algorithm_culture.rst", "api/classique.rst", "api/datasets.rst", "api/faqs.rst", "api/index.rst", "api/numpysex.rst", "api/practice/rues_paris.rst", "api/practice/tsp_bresenham.rst", "api/practice/tsp_kohonen.rst", "api/practice/tsp_kruskal.rst", "api/tools.rst", "api/video/tsp_kohonen.rst", "api/video/tsp_kruskal.rst", "articles/2022-01-01-assurance.rst", "articles/2022-11-31-route2022.rst", "articles/2022-12-07-cartopy.rst", "articles/2023-08-03-code-jam.rst", "articles/2023-08-09-hermionne.rst", "articles/2023-09-06-ensae.rst", "articles/2023-11-31-route2023.rst", "articles/index.rst", "auto_examples/index.rst", "auto_examples/ml/index.rst", "auto_examples/ml/plot_correlations.rst", "auto_examples/ml/plot_roc.rst", "auto_examples/ml/sg_execution_times.rst", "auto_examples/prog/index.rst", "auto_examples/prog/plot_einstein_riddle.rst", "auto_examples/prog/plot_float_and_double_rouding.rst", "auto_examples/prog/plot_gil_example.rst", "auto_examples/prog/plot_hypercube.rst", "auto_examples/prog/plot_lambda_function.rst", "auto_examples/prog/plot_matador.rst", "auto_examples/prog/plot_numpy_tricks.rst", "auto_examples/prog/plot_pandas_groupby.rst", "auto_examples/prog/plot_partie_dame.rst", "auto_examples/prog/plot_serialisation_examples.rst", "auto_examples/prog/plot_serialisation_protobuf.rst", "auto_examples/prog/plot_tarabiscote.rst", "auto_examples/prog/plot_tsp.rst", "auto_examples/prog/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "c_data/dataframes.rst", "c_data/enedis_cartes.ipynb", "c_data/graphes.rst", "c_data/index.rst", "c_data/matrices.rst", "c_data/nb_array.ipynb", "c_data/nb_dataframe.ipynb", "c_data/nb_numpy.ipynb", "c_data/nb_pandas.ipynb", "c_data/numpy_broadcast.ipynb", "c_expose/finance/finance_autostrat.rst", "c_expose/index.rst", "c_expose/tsp/tsp_kohonen.rst", "c_expose/tsp/tsp_kruskal.rst", "c_ml/index.rst", "c_ml/rappel.rst", "c_resume/cheat_sheet.rst", "c_resume/conseil_programmes.rst", "c_resume/git.rst", "c_resume/index.rst", "c_resume/jenkins.rst", "c_resume/linux.rst", "c_resume/python_sheet.rst", "i_ex.rst", "i_faq.rst", "i_index.rst", "index.rst", "introduction.rst", "license.rst", "notebook_gallery.rst", "practice/algo-base/BJKST.ipynb", "practice/algo-base/exercice_compose_connexe.ipynb", "practice/algo-base/exercice_echelle.ipynb", "practice/algo-base/exercice_edit_distance.ipynb", "practice/algo-base/exercice_editdist.ipynb", "practice/algo-base/exercice_ordonnancement.ipynb", "practice/algo-base/exercice_plus_grande_somme.ipynb", "practice/algo-base/exercice_random_graph.ipynb", "practice/algo-base/exercice_simulation_covid.ipynb", "practice/algo-base/exercice_simulation_covid_simple.ipynb", "practice/algo-base/exercice_suffix.ipynb", "practice/algo-base/exercice_topk.ipynb", "practice/algo-base/exercice_tsp.ipynb", "practice/algo-base/exercice_xn.ipynb", "practice/algo-base/matrix_dictionary.ipynb", "practice/algo-base/tsp_aparte.ipynb", "practice/algo-base/tsp_simplifie.ipynb", "practice/algo-compose/exercice_morse.ipynb", "practice/algo-compose/paris_parcours.ipynb", "practice/algo-compose/vigenere.ipynb", "practice/exams.rst", "practice/exams/interro_rapide_20_minutes_2014_09.ipynb", "practice/exams/interro_rapide_20_minutes_2014_10.ipynb", "practice/exams/interro_rapide_20_minutes_2014_11.ipynb", "practice/exams/interro_rapide_20_minutes_2014_12.ipynb", "practice/exams/interro_rapide_20_minutes_2015_09.ipynb", "practice/exams/interro_rapide_20_minutes_2015_11.ipynb", "practice/exams/td_note_2013_bout_de_code_coloriage.ipynb", "practice/exams/td_note_2013_coloriage_correction.ipynb", "practice/exams/td_note_2015.ipynb", "practice/exams/td_note_2015_rattrapage_enonce.ipynb", "practice/exams/td_note_2016.ipynb", "practice/exams/td_note_2017.ipynb", "practice/exams/td_note_2017_2.ipynb", "practice/exams/td_note_2018_1.ipynb", "practice/exams/td_note_2018_2.ipynb", "practice/exams/td_note_2019_1.ipynb", "practice/exams/td_note_2019_2.ipynb", "practice/exams/td_note_2020_1.ipynb", "practice/exams/td_note_2020_2.ipynb", "practice/exams/td_note_2021.ipynb", "practice/exams/td_note_2022.ipynb", "practice/exams/td_note_2022_rattrapage.ipynb", "practice/exams/td_note_2022_rattrapage2.ipynb", "practice/exams/td_note_2023.ipynb", "practice/exams/td_note_2023-2024.ipynb", "practice/index_algo.rst", "practice/index_data.rst", "practice/index_exam.rst", "practice/index_ml.rst", "practice/index_python.rst", "practice/ml/winesc_color.ipynb", "practice/ml/winesr_reg.ipynb", "practice/py-base/classe_de.ipynb", "practice/py-base/classe_iterateur.ipynb", "practice/py-base/classe_permutation.ipynb", "practice/py-base/classe_tree.ipynb", "practice/py-base/classe_user_p.ipynb", "practice/py-base/classes_2048.ipynb", "practice/py-base/classes_metro.ipynb", "practice/py-base/code_liste_tuple.ipynb", "practice/py-base/code_multinomial.ipynb", "practice/py-base/coloriage_carre.ipynb", "practice/py-base/de_rotation.ipynb", "practice/py-base/exercice_hash.ipynb", "practice/py-base/exercice_json_xml.ipynb", "practice/py-base/exercice_pi.ipynb", "practice/py-base/exercice_regex.ipynb", "practice/py-base/exercice_serialisation_json.ipynb", "practice/py-base/histogramme_rapide.ipynb", "practice/py-base/nbheap.ipynb", "practice/py-base/pivot_gauss.ipynb", "practice/py-base/profile_gini.ipynb", "practice/py-base/profiling_conv.ipynb", "practice/py-base/profiling_example.ipynb", "practice/py-base/recherche_dichotomique.ipynb", "practice/py-base/scrapping.ipynb", "practice/py-base/structures_donnees_conversion.ipynb", "practice/py-base/tableau_contingence.ipynb", "practice/py-base/tests_unitaires.ipynb", "practice/py-base/tri_nlnd.ipynb", "practice/tds-algo/decorrelation.ipynb", "practice/tds-algo/decorrelation_correction.ipynb", "practice/tds-algo/gentry_integer_encryption.ipynb", "practice/tds-algo/gentry_integer_encryption_correction.ipynb", "practice/tds-algo/graph_spectral_clustering.ipynb", "practice/tds-algo/graph_spectral_clustering_correction.ipynb", "practice/tds-algo/knn_high_dimension.ipynb", "practice/tds-algo/knn_high_dimension_correction.ipynb", "practice/tds-algo/plus_court_chemin.ipynb", "practice/tds-algo/plus_court_chemin_correction.ipynb", "practice/tds-algo/puzzle_algo_1.ipynb", "practice/tds-algo/puzzle_algo_1_correction.ipynb", "practice/tds-algo/puzzle_algo_2.ipynb", "practice/tds-algo/puzzle_algo_2_correction.ipynb", "practice/tds-base/classes_carre_magique.ipynb", "practice/tds-base/classes_carre_magique_correction.ipynb", "practice/tds-base/classes_heritage.ipynb", "practice/tds-base/classes_heritage_correction.ipynb", "practice/tds-base/dictionnaire_vigenere.ipynb", "practice/tds-base/dictionnaire_vigenere_correction.ipynb", "practice/tds-base/integrale_rectangle.ipynb", "practice/tds-base/integrale_rectangle_correction.ipynb", "practice/tds-base/j2048.ipynb", "practice/tds-base/j2048_correction.ipynb", "practice/tds-base/module_file_regex.ipynb", "practice/tds-base/module_file_regex_correction.ipynb", "practice/tds-base/premiers_pas.ipynb", "practice/tds-base/premiers_pas_correction.ipynb", "practice/tds-base/pyramide_bigarree.ipynb", "practice/tds-base/pyramide_bigarree_correction.ipynb", "practice/tds-base/texte_langue.ipynb", "practice/tds-base/texte_langue_correction.ipynb", "practice/tds-base/trie.ipynb", "practice/tds-base/trie_correction.ipynb", "practice/tds-base/variable_boucle_tests.ipynb", "practice/tds-base/variable_boucle_tests_correction.ipynb", "practice/years/2023/bareme_note_optimisation.ipynb", "practice/years/2023/editdist.ipynb", "practice/years/2023/index.rst", "practice/years/2023/pivot_gauss.ipynb", "practice/years/2023/prefix_search.ipynb", "practice/years/index.rst", "py/c_classes/classes.rst", "py/c_classes/index.rst", "py/c_classes/questions.rst", "py/c_exception/exception.rst", "py/c_exception/exception_ext.rst", "py/c_exception/index.rst", "py/c_exception/warning.rst", "py/c_gui/index.rst", "py/c_gui/tkinter.rst", "py/c_lang/collections.rst", "py/c_lang/constructions.rst", "py/c_lang/dates.rst", "py/c_lang/encoding.rst", "py/c_lang/index.rst", "py/c_lang/syntaxe.rst", "py/c_lang/types.rst", "py/c_module/files.rst", "py/c_module/index.rst", "py/c_module/module.rst", "py/c_module/serialization.rst", "py/c_parallelisation/index.rst", "py/c_parallelisation/thread.rst", "py/c_regex/index.rst", "py/c_regex/regex.rst", "py/index.rst", "sg_execution_times.rst"], "titles": ["Change Logs", "Survol algorithmique", "examples.construction_classique", "Jeux de donn\u00e9es", "faq", "Code inclus dans cette librairie", "examples.numpysex", "teachpyx.practice.rues_paris", "teachpyx.practice.tsp_bresenham", "teachpyx.practice.tsp_kohonen", "teachpyx.practice.tsp_kruskal", "tools", "teachpyx.video.tsp_kohonen_pygame", "teachpyx.video.tsp_kruskal", "Assurance auto", "2022-11-31 : rappel feuille de route 2022", "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)", "2023-08-03 : Code Jam", "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne", "2023-09-06 : ENSAE", "2023-11-31 : rappel feuille de route 2023", "Collections d\u2019articles p\u00e9rissables", "Gallerie d\u2019exemples", "Gallerie d\u2019exemples sur le machine learning", "Corr\u00e9lations", "Receiver Operating Characteristic (ROC)", "Computation times", "Gallerie d\u2019exemples sur la programmation", "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution", "Float Conversion", "Le GIL", "Hypercube et autres exercices", "Astuces avec les lambda functions", "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations", "Points d\u2019impl\u00e9mentation avec numpy", "Pandas et groupby", "Parties de dames", "S\u00e9rialisation", "S\u00e9rialisation avec protobuf", "Exercices expliqu\u00e9s de programmation", "R\u00e9flexions autour du voyage de commerce (TSP)", "Computation times", "Computation times", "Dataframes", "Tracer une carte en Python", "Graphes", "Matrices et DataFrames", "Calcul matriciel", "Calcul Matriciel, Optimisation", "DataFrame et Graphes", "Calcul matriciel avec numpy (exercices)", "Manipulation de donn\u00e9es avec pandas (exercices)", "Numpy et tableau de contingence", "Strat\u00e9gie automatique de trading en finance", "Expos\u00e9s", "Circuit hamiltonien et Kohonen", "Circuit hamiltonien et Kruskal", "Machine Learning", "Quelques rappels", "Cheat Sheets", "Quelques conseils pour \u00e9crire un programme", "Cheat Sheet on Git", "Pr\u00e9cis", "Cheat Sheet on Jenkins", "Cheat Sheet on Linux", "Cheat sheet: Python", "Syntaxes et d\u00e9finitions", "FAQ", "En diagonal", "Apprendre la programmation avec Python", "Introduction", "License", "Tous les notebooks", "Algorithmes de streaming, BJKST", "Graphe et Composantes connexes", "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.", "Distance d\u2019\u00e9dition", "Distance entre deux mots de m\u00eame longueur et tests unitaires", "Probl\u00e8me d\u2019ordonnancement", "La sous-s\u00e9quence de plus grande somme", "Graphes al\u00e9atoires", "Simulation COVID", "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)", "Jeux de dictionnaires, plus grand suffixe commun", "Les k premiers \u00e9l\u00e9ments (top k)", "TSP - Traveling Salesman Problem", "Calculer x**n le plus rapidement possible", "Produit matriciel avec une matrice creuse", "Apart\u00e9 sur le voyageur de commerce", "Plus court chemin passant par tous les noeuds d\u2019un graphe", "D\u00e9coder du Morse sans espaces", "Parcourir les rues de Paris", "Casser le code de Vigen\u00e8re", "Exercices minut\u00e9s", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015", "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015", "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)", "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)", "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014", "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)", "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015", "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016", "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)", "1A.e - Enonc\u00e9 23 octobre 2018 (1)", "1A.e - Enonc\u00e9 23 octobre 2018 (2)", "1A.e - Enonc\u00e9 22 octobre 2019 (1)", "1A.e - Enonc\u00e9 22 octobre 2019 (2)", "1A - Enonc\u00e9 24 novembre 2020", "1A - Enonc\u00e9 3 novembre 2021", "1A - Enonc\u00e9 15 novembre 2021 - rattrapage", "1A - Enonc\u00e9 3 mars 2022- rattrapage", "1A - Enonc\u00e9 26 octobre 2022", "1A - Enonc\u00e9 8 novembre 2023-2024", "Algorithmes", "Numpy / Pandas", "S\u00e9ances minut\u00e9es", "Machine Learning", "Exercices sur le langage python", "R\u00e9gression logistique et courbe ROC", "Pr\u00e9diction de la note des vins", "Jeu de d\u00e9, rotation sur un circuit (classes)", "It\u00e9rateur", "Classe Permutation et d\u00e9composition en transitions", "Une classe pour repr\u00e9senter un arbre", "Classe, H\u00e9ritage, calcule d\u2019une distance", "2048 et les classes", "Un bref aper\u00e7u des classes", "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations", "Simuler une loi multinomiale", "Jeux de coloriage", "Jeu de d\u00e9, rotation sur un circuit", "R\u00e9partition, table de hashage", "JSON - XML", "Calculs de surface et autres calculs", "Expressions r\u00e9guli\u00e8res", "S\u00e9rialisation avec JSON, XML, pickle", "Histogramme et dictionnaire", "Heap", "Pivot de gauss avec numpy", "Profiling la fonction Gini", "Profiling, application \u00e0 la convolution", "Exemple de profiling", "Recherche dichotomique", "Web-Scraping - pokemon", "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre", "Calculer un chi 2 sur un tableau de contingence", "Tests unitaires", "Tri plus rapide que pr\u00e9vu", "D\u00e9corr\u00e9lation de variables al\u00e9atoires", "D\u00e9corr\u00e9lation de variables al\u00e9atoires - correction", "Cryptage homomorphic de Craig Gentry", "Cryptage homomorphic de Craig Gentry - correction", "Spectral Clustering", "Spectral Clustering - correction", "Plus proches voisins en grande dimension", "Plus proches voisins en grande dimension - correction", "Programmation dynamique et plus court chemin", "Programmation dynamique et plus court chemin (correction)", "Puzzles algorithmiques (1)", "Puzzles algorithmes (1) - correction", "Puzzles algorithmiques (2)", "Puzzles algorithmes (2) - correction", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)", "Classes, h\u00e9ritage", "Classes, h\u00e9ritage (correction)", "Dictionnaires, fonctions, code de Vigen\u00e8re", "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)", "Int\u00e9grale et la m\u00e9thode des rectangles", "Int\u00e9grale et la m\u00e9thode des rectangles - correction", "2048 - strat\u00e9gie gagnante", "2048 - strat\u00e9gie gagnante - correction", "Modules, fichiers, expressions r\u00e9guli\u00e8res", "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)", "Premiers pas en Python", "Premiers pas en Python (correction)", "Tracer une pyramide bigarr\u00e9e", "Tracer une pyramide bigarr\u00e9e - correction", "Deviner la langue d\u2019un texte", "Deviner la langue d\u2019un texte (correction)", "Arbre et Trie", "Arbre et Trie (correction)", "Variables, boucles, tests", "Variables, boucles, tests (correction)", "Optimiser la note moyenne", "Distance d\u2019\u00e9dition (4 octobre)", "2023", "Pivot de Gauss", "Recherche de pr\u00e9fixes", "Notebooks \u00e9crits durant les s\u00e9ances", "Classes", "Classes", "Questions", "Exceptions", "Usage", "Exceptions", "Warning et logging", "Interfaces graphiques", "tkinter", "Constructions classiques", "Constructions classiques", "Dates", "Encoding et jeux de caract\u00e8res", "Variables et fonctions", "Syntaxe du langage Python (boucles, tests, fonctions)", "Types et variables du langage python", "Fichiers", "Entr\u00e9es, Sorties, Modules", "Module ou extension", "S\u00e9rialisation", "Parall\u00e9lisation", "Threads", "Expressions r\u00e9guli\u00e8res", "Expressions r\u00e9guli\u00e8res", "Le langage Python", "Computation times"], "terms": {"55": [0, 31, 44, 48, 49, 51, 75, 91, 105, 106, 115, 131, 175, 181, 185, 211], "add": [0, 11, 38, 49, 63, 73, 90, 105, 130, 204], "one": [0, 1, 4, 6, 10, 11, 47, 48, 49, 50, 105, 106, 146, 147, 166, 167, 204], "map": [0, 2, 30, 44, 55, 99, 142, 153, 166, 167, 173, 187, 204, 206, 210, 217], "54": [0, 48, 49, 51, 53, 91, 106, 131, 185, 196], "content": [0, 11, 38, 51, 56, 65, 104, 179, 200, 212], "for": [0, 1, 2, 4, 11, 16, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 48, 49, 51, 52, 53, 55, 60, 61, 62, 63, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 202, 204, 205, 206, 207, 211, 212, 214, 217, 219, 221], "machin": [0, 1, 6, 14, 19, 50, 53, 55, 58, 67, 68, 69, 70, 84, 88, 135, 138, 146, 187, 217], "learning": [0, 1, 6, 14, 19, 48, 53, 58, 67, 68, 69, 84, 146, 187], "47": [0, 29, 44, 48, 49, 51, 106, 131, 146, 153, 158, 159, 160, 175, 196, 210, 219], "helper": 0, "to": [0, 1, 4, 6, 10, 11, 13, 16, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 53, 63, 64, 67, 71, 81, 91, 98, 105, 124, 138, 140, 146, 160, 166, 167, 173, 186, 196, 199, 200, 204, 210, 211, 212, 214, 219], "creat": [0, 4, 11, 44, 48, 53, 67], "a": [0, 1, 2, 6, 8, 9, 10, 11, 14, 18, 20, 25, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 124, 125, 126, 127, 128, 129, 132, 133, 134, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 194, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218], "video": [0, 5, 68], "24": [0, 28, 34, 44, 48, 49, 50, 51, 52, 53, 65, 73, 79, 80, 81, 84, 92, 93, 95, 96, 102, 104, 106, 107, 111, 112, 114, 118, 124, 125, 138, 146, 150, 155, 158, 159, 168, 172, 175, 178, 179, 187, 188, 207], "25": [0, 9, 11, 12, 24, 28, 39, 48, 49, 50, 51, 73, 74, 80, 81, 84, 89, 91, 92, 96, 102, 104, 105, 107, 111, 112, 114, 118, 124, 125, 138, 139, 146, 147, 150, 151, 158, 159, 168, 172, 175, 178, 179, 181, 186, 187, 188, 196, 200, 207], "26": [0, 44, 48, 49, 50, 51, 52, 53, 65, 73, 80, 81, 84, 85, 90, 91, 92, 93, 95, 96, 102, 104, 110, 111, 112, 114, 118, 124, 125, 127, 137, 138, 146, 150, 153, 158, 159, 168, 172, 173, 175, 178, 185, 186, 187, 194, 196, 200, 207], "27": [0, 2, 44, 48, 49, 50, 51, 52, 73, 80, 84, 91, 93, 96, 102, 106, 109, 111, 112, 113, 114, 118, 124, 127, 138, 146, 150, 158, 159, 168, 172, 175, 178, 187, 196, 206, 207], "28": [0, 33, 44, 48, 49, 50, 51, 52, 65, 73, 80, 84, 89, 91, 96, 102, 109, 111, 112, 113, 114, 124, 127, 138, 141, 146, 149, 158, 159, 161, 168, 172, 175, 178, 179, 181, 187, 207], "29": [0, 29, 41, 44, 48, 49, 50, 51, 52, 73, 80, 89, 91, 96, 102, 104, 111, 113, 114, 124, 127, 138, 146, 158, 159, 168, 172, 178, 179, 187, 207, 210, 221], "30": [0, 28, 34, 40, 48, 49, 50, 51, 53, 73, 80, 81, 91, 92, 96, 102, 104, 105, 113, 114, 125, 127, 130, 135, 138, 144, 146, 158, 159, 160, 172, 178, 179, 185, 187, 188, 204, 207, 211, 219], "31": [0, 19, 21, 34, 44, 48, 49, 50, 51, 53, 66, 73, 89, 91, 96, 102, 110, 113, 114, 125, 127, 138, 145, 146, 158, 159, 172, 175, 179, 187, 188, 196, 207, 210], "32": [0, 2, 29, 34, 48, 49, 50, 51, 73, 79, 80, 86, 89, 91, 96, 102, 125, 127, 131, 137, 138, 146, 147, 150, 158, 159, 179, 188, 206, 211, 212], "33": [0, 34, 44, 48, 49, 50, 51, 79, 96, 102, 110, 116, 125, 127, 137, 138, 146, 158, 159, 172, 175, 188], "34": [0, 24, 34, 44, 48, 49, 50, 51, 53, 66, 75, 80, 83, 89, 91, 96, 98, 102, 104, 115, 125, 138, 140, 141, 146, 158, 159, 163, 172, 179, 185, 188, 196], "35": [0, 44, 48, 49, 50, 51, 53, 66, 67, 73, 91, 96, 102, 118, 125, 127, 131, 134, 146, 153, 158, 159, 172, 179, 185], "36": [0, 29, 44, 48, 49, 51, 52, 53, 91, 102, 110, 118, 146, 158, 159, 172, 179, 181, 193, 207, 211], "ajout": [0, 2, 4, 7, 9, 10, 31, 39, 44, 48, 49, 50, 53, 56, 65, 66, 67, 70, 77, 79, 81, 84, 91, 94, 95, 96, 97, 98, 101, 102, 104, 105, 107, 109, 110, 111, 112, 114, 116, 126, 133, 138, 141, 146, 148, 150, 153, 168, 169, 171, 173, 177, 178, 180, 181, 185, 187, 188, 197, 198, 199, 200, 204, 207, 211, 215, 217, 219], "exercic": [0, 1, 17, 19, 22, 27, 36, 41, 43, 46, 47, 52, 86, 103, 119, 121, 141, 149, 182, 183, 196, 210, 221], "exist": [0, 1, 2, 4, 10, 14, 28, 36, 37, 38, 40, 48, 49, 50, 51, 53, 55, 56, 58, 60, 65, 66, 67, 70, 74, 79, 80, 81, 85, 86, 88, 91, 99, 117, 126, 127, 128, 130, 141, 146, 150, 151, 153, 158, 159, 162, 163, 165, 166, 167, 168, 172, 178, 179, 181, 187, 188, 194, 196, 199, 200, 204, 206, 208, 210, 211, 212, 214, 215, 216, 217], "22": [0, 16, 28, 34, 44, 48, 49, 50, 51, 52, 73, 80, 81, 84, 91, 93, 96, 99, 102, 104, 105, 106, 107, 110, 113, 114, 118, 124, 125, 138, 146, 149, 150, 151, 155, 158, 159, 161, 168, 172, 175, 178, 187, 188, 200, 207, 211, 219], "exempl": [0, 2, 4, 25, 28, 31, 38, 39, 40, 49, 55, 56, 57, 58, 60, 65, 67, 68, 69, 70, 73, 77, 82, 90, 92, 95, 98, 99, 102, 104, 107, 108, 111, 112, 117, 123, 124, 125, 127, 133, 137, 145, 149, 150, 152, 153, 154, 162, 164, 167, 168, 170, 172, 174, 178, 179, 182, 183, 186, 187, 188, 190, 200, 201, 204, 205, 206, 207, 208, 215, 217], "mathador": [0, 22, 27, 41, 123, 221], "21": [0, 1, 28, 34, 44, 48, 49, 50, 51, 73, 75, 80, 81, 84, 89, 93, 96, 98, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 124, 125, 134, 135, 138, 144, 145, 146, 150, 155, 158, 159, 161, 168, 172, 175, 178, 181, 187, 188, 207, 210, 219], "refactoring": 0, "L": [1, 2, 4, 10, 14, 16, 18, 22, 27, 31, 36, 38, 39, 41, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 64, 65, 67, 69, 70, 73, 74, 75, 79, 80, 81, 82, 83, 84, 86, 90, 91, 96, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 125, 126, 127, 128, 129, 132, 134, 135, 137, 141, 146, 148, 152, 153, 154, 155, 159, 161, 162, 163, 167, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 217, 219, 221], "part": [1, 2, 6, 10, 14, 20, 22, 25, 27, 28, 31, 33, 39, 40, 41, 44, 47, 49, 53, 56, 58, 60, 65, 66, 70, 73, 79, 80, 81, 82, 83, 84, 85, 91, 96, 103, 104, 105, 107, 108, 110, 111, 112, 113, 117, 123, 124, 127, 130, 131, 134, 141, 145, 146, 148, 150, 152, 153, 154, 155, 161, 162, 164, 165, 166, 167, 170, 171, 172, 175, 177, 178, 179, 184, 185, 186, 187, 190, 196, 199, 200, 204, 206, 207, 210, 211, 212, 214, 215, 217, 219, 221], "math\u00e9mat": [1, 2, 19, 49, 57, 65, 70, 81, 96, 124, 129, 141, 155, 196, 206, 210, 211, 214], "On": [1, 2, 4, 7, 14, 25, 28, 30, 31, 32, 36, 37, 38, 39, 40, 44, 48, 49, 50, 53, 55, 56, 57, 58, 60, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 196, 198, 199, 200, 202, 204, 205, 206, 207, 210, 211, 212, 214, 215, 217, 219], "toujour": [1, 2, 4, 6, 14, 25, 31, 37, 40, 48, 49, 50, 53, 55, 56, 57, 60, 65, 66, 67, 70, 73, 75, 77, 80, 81, 83, 84, 91, 94, 97, 104, 114, 115, 124, 127, 129, 130, 132, 135, 141, 145, 148, 150, 158, 161, 168, 170, 172, 173, 178, 179, 184, 185, 187, 194, 196, 198, 199, 200, 204, 206, 210, 211, 212, 214, 217, 219], "\u00e9tat": [1, 4, 49, 58, 67, 87, 97, 103, 104, 135, 180, 204, 210, 217], "initial": [1, 7, 40, 48, 49, 53, 56, 73, 84, 91, 104, 136, 141, 146, 150, 153, 164, 173, 178, 187, 194, 200, 212, 214], "arriv": [1, 2, 25, 28, 49, 53, 56, 75, 79, 81, 91, 96, 127, 179, 180, 196, 199, 200, 204, 206, 210, 211, 212, 217], "apres": [1, 2, 7, 14, 25, 28, 30, 36, 39, 40, 49, 53, 55, 56, 58, 60, 65, 67, 80, 84, 87, 89, 90, 96, 97, 102, 103, 104, 109, 110, 111, 112, 114, 137, 139, 141, 158, 159, 162, 170, 172, 178, 179, 187, 190, 196, 200, 204, 210, 211, 212, 214, 217, 219], "ser": [1, 2, 4, 14, 31, 36, 37, 44, 56, 57, 58, 65, 66, 67, 73, 77, 79, 84, 89, 90, 91, 96, 102, 104, 105, 113, 117, 124, 128, 137, 148, 158, 159, 163, 168, 173, 175, 179, 180, 184, 186, 187, 188, 196, 199, 200, 202, 204, 206, 210, 211, 212, 214, 217], "oper": [1, 2, 4, 19, 22, 27, 29, 39, 41, 51, 53, 56, 58, 67, 95, 98, 102, 117, 123, 130, 146, 150, 153, 156, 157, 179, 180, 181, 187, 188, 197, 199, 204, 206, 207, 211, 212, 215, 221], "connu": [1, 48, 53, 55, 58, 70, 73, 79, 80, 81, 91, 152, 173, 188, 196, 204, 210, 212], "final": [1, 49, 51, 53, 55, 65, 73, 87, 102, 105, 106, 125, 131, 146, 149, 150, 186, 196, 202, 210, 211, 214, 217, 219], "Cette": [1, 2, 4, 39, 49, 53, 55, 56, 58, 65, 66, 67, 70, 73, 76, 81, 87, 90, 91, 92, 95, 96, 97, 104, 124, 125, 126, 128, 134, 137, 139, 143, 146, 150, 154, 170, 179, 184, 186, 187, 190, 196, 199, 200, 204, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217], "d\u00e9pend": [1, 14, 31, 39, 49, 53, 55, 56, 65, 70, 78, 81, 83, 87, 97, 104, 134, 135, 137, 139, 141, 150, 161, 168, 172, 173, 187, 188, 196, 202, 207, 210, 211, 214, 217], "Elle": [1, 2, 4, 25, 38, 50, 51, 53, 58, 60, 65, 66, 67, 70, 75, 79, 91, 94, 106, 118, 124, 127, 134, 141, 143, 146, 147, 150, 162, 165, 170, 172, 175, 196, 204, 210, 212, 214, 215, 217, 219], "peut": [1, 2, 4, 6, 7, 10, 14, 18, 25, 28, 31, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 65, 66, 67, 70, 73, 74, 75, 79, 80, 81, 82, 83, 84, 87, 89, 90, 91, 95, 96, 98, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 148, 150, 151, 152, 153, 154, 158, 159, 162, 163, 165, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 186, 187, 188, 194, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 217, 219], "inclur": [1, 37, 44, 65, 79, 146, 196, 198, 204, 210, 211, 214, 219], "al\u00e9atoir": [1, 3, 9, 10, 25, 31, 47, 49, 50, 53, 55, 56, 73, 79, 81, 84, 87, 89, 103, 106, 111, 112, 118, 119, 134, 151, 156, 157, 158, 161, 162, 175, 177, 178, 196, 214, 217], "parl": [1, 40, 48, 53, 57, 90, 127, 179, 215], "lorsqu": [1, 2, 4, 9, 14, 25, 31, 36, 37, 39, 40, 48, 49, 51, 53, 55, 56, 57, 58, 60, 65, 66, 67, 70, 73, 76, 77, 78, 84, 85, 86, 90, 94, 96, 102, 104, 106, 107, 118, 127, 128, 130, 132, 134, 141, 146, 147, 148, 150, 158, 159, 163, 168, 169, 170, 172, 178, 180, 184, 186, 187, 188, 189, 194, 196, 199, 200, 202, 206, 208, 210, 211, 212, 214, 215, 217, 219], "d\u00e9montr": [1, 39, 58, 124, 162], "s\u00e9quenc": [1, 31, 58, 73, 74, 76, 80, 90, 119, 141, 153, 156, 157, 162, 167, 178, 185, 188, 208, 210, 215, 217, 219], "produit": [1, 2, 4, 6, 10, 37, 40, 44, 47, 48, 53, 57, 65, 67, 74, 96, 97, 99, 107, 108, 109, 110, 119, 125, 126, 128, 130, 146, 170, 171, 181, 188, 196, 198, 199, 200, 202, 204, 206, 210, 212, 215, 217], "men": [1, 39, 53, 57, 104, 107, 108, 137, 179, 196, 204, 217], "souhait": [1, 2, 4, 14, 31, 32, 36, 48, 49, 53, 65, 67, 75, 77, 79, 80, 84, 91, 99, 102, 104, 106, 107, 108, 115, 117, 124, 128, 131, 135, 137, 145, 152, 158, 162, 164, 165, 168, 170, 172, 175, 176, 178, 179, 188, 196, 200, 202, 204, 206, 210, 211, 212, 214], "Il": [1, 2, 4, 14, 16, 17, 18, 28, 31, 33, 35, 36, 37, 38, 39, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 65, 66, 67, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 126, 127, 129, 133, 135, 136, 137, 140, 141, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 168, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 198, 199, 200, 202, 204, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 219], "grand": [1, 7, 10, 15, 17, 18, 31, 39, 40, 44, 48, 49, 50, 51, 53, 55, 56, 58, 60, 65, 70, 74, 75, 81, 84, 85, 87, 89, 91, 92, 96, 97, 102, 103, 104, 105, 107, 108, 112, 115, 117, 118, 119, 124, 125, 128, 133, 134, 140, 143, 145, 146, 150, 158, 173, 175, 178, 179, 188, 190, 194, 196, 198, 199, 204, 208, 210, 211, 212, 214, 217, 219], "variet": [1, 51, 178], "d\u00e9j\u00e0": [1, 40, 48, 49, 53, 56, 65, 66, 70, 80, 84, 90, 91, 109, 110, 114, 153, 172, 178, 179, 187, 188, 196, 199, 210, 211, 212, 214, 215, 217, 219], "r\u00e9solus": [1, 204], "util": [1, 31, 39, 48, 49, 53, 55, 59, 60, 65, 77, 81, 84, 88, 106, 117, 119, 126, 129, 140, 160, 170, 172, 178, 196, 199, 202, 204, 210, 211, 212, 217], "conna\u00eetr": [1, 2, 4, 14, 58, 65, 67, 75, 87, 91, 115, 194, 196, 204, 205, 206, 211, 212, 219], "C": [1, 2, 4, 6, 11, 14, 18, 25, 30, 33, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 70, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 96, 99, 102, 104, 105, 107, 110, 111, 112, 115, 117, 118, 124, 126, 127, 128, 129, 134, 135, 137, 138, 139, 141, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 168, 172, 173, 175, 177, 178, 179, 184, 186, 187, 188, 190, 194, 196, 197, 199, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 219], "aut": [1, 9, 53, 56, 57, 58, 65, 77, 80, 95, 102, 106, 107, 115, 163, 168, 170, 172, 173, 196, 204, 210, 211, 212, 217], "outil": [1, 5, 14, 44, 53, 57, 65, 70, 74, 126, 138, 146, 160, 178, 179, 196, 199], "disponibl": [1, 16, 37, 49, 50, 51, 53, 65, 69, 70, 91, 105, 113, 124, 133, 179, 196, 204, 211, 214], "cr\u00e9": [1, 4, 6, 14, 30, 34, 37, 39, 47, 48, 51, 53, 58, 65, 66, 67, 70, 74, 78, 80, 81, 87, 91, 94, 96, 102, 111, 112, 118, 127, 128, 130, 131, 150, 152, 153, 154, 155, 158, 160, 161, 162, 168, 170, 172, 173, 177, 179, 185, 187, 188, 196, 199, 202, 210, 211, 212, 217], "propr": [1, 4, 37, 39, 44, 48, 50, 51, 53, 65, 66, 67, 80, 90, 130, 154, 155, 158, 159, 196, 201, 202, 204, 210, 211, 215, 217], "Qu": [1, 40, 91, 134, 152, 160, 175, 187, 188], "raison": [1, 6, 14, 31, 40, 51, 53, 58, 60, 65, 67, 89, 94, 96, 99, 102, 104, 117, 124, 161, 163, 168, 179, 184, 188, 196, 204, 210], "fair": [1, 2, 4, 14, 25, 37, 38, 39, 44, 46, 48, 49, 50, 53, 55, 56, 58, 60, 65, 66, 67, 70, 73, 74, 75, 77, 78, 81, 82, 84, 85, 87, 90, 91, 93, 99, 104, 105, 107, 108, 109, 110, 114, 125, 126, 128, 132, 134, 135, 140, 141, 145, 146, 150, 151, 153, 161, 162, 165, 170, 175, 177, 178, 179, 180, 181, 185, 187, 188, 191, 196, 199, 200, 204, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219], "suppos": [1, 2, 7, 8, 10, 14, 25, 36, 51, 53, 55, 56, 58, 65, 70, 75, 78, 79, 81, 84, 85, 90, 91, 92, 95, 102, 104, 105, 106, 107, 108, 113, 114, 115, 117, 118, 135, 139, 148, 150, 152, 153, 162, 163, 164, 170, 173, 175, 187, 196, 204, 206, 210, 211, 212, 217], "dispos": [1, 14, 53, 65, 91, 102, 104, 105, 106, 111, 112, 117, 145, 162, 164, 168, 194, 196, 200, 204, 211, 212, 214], "seul": [1, 2, 10, 14, 16, 18, 28, 31, 36, 48, 49, 50, 51, 53, 56, 57, 65, 70, 73, 74, 80, 81, 83, 84, 88, 90, 91, 96, 99, 106, 109, 110, 113, 117, 127, 129, 134, 138, 139, 141, 150, 154, 158, 159, 161, 164, 168, 169, 170, 172, 173, 178, 179, 180, 187, 188, 190, 196, 199, 204, 206, 208, 210, 211, 212, 214, 215, 217, 219], "La": [1, 2, 4, 9, 10, 12, 13, 14, 16, 25, 31, 32, 36, 37, 39, 40, 44, 46, 48, 49, 53, 55, 56, 60, 65, 66, 67, 70, 73, 75, 76, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136, 138, 139, 140, 141, 143, 145, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 168, 169, 170, 172, 174, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 191, 193, 194, 196, 199, 200, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219], "m\u00e9moir": [1, 4, 6, 37, 48, 50, 51, 58, 67, 73, 75, 138, 141, 178, 186, 196, 204, 205, 208, 210, 211, 212, 215], "plus": [1, 2, 6, 9, 10, 15, 16, 17, 18, 19, 25, 28, 30, 31, 32, 33, 35, 36, 37, 39, 44, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 65, 66, 69, 70, 74, 75, 76, 80, 81, 82, 85, 90, 91, 92, 94, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 111, 112, 113, 118, 119, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 146, 147, 150, 154, 156, 157, 164, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 196, 198, 199, 201, 202, 204, 205, 206, 208, 210, 211, 214, 215, 216], "Le": [1, 2, 3, 4, 6, 14, 19, 20, 22, 25, 27, 28, 31, 32, 36, 37, 39, 40, 41, 44, 46, 48, 49, 50, 51, 55, 56, 57, 60, 62, 67, 69, 70, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 88, 90, 91, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 119, 123, 125, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 196, 198, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219, 221], "temp": [1, 2, 4, 14, 17, 30, 37, 39, 40, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 66, 67, 70, 78, 80, 81, 88, 89, 91, 95, 96, 99, 101, 104, 106, 107, 108, 114, 125, 133, 135, 138, 142, 145, 147, 150, 153, 158, 160, 161, 167, 168, 169, 176, 177, 179, 180, 183, 186, 187, 188, 190, 194, 196, 199, 204, 206, 210, 211, 212, 214, 215, 217, 219], "calcul": [1, 4, 6, 7, 9, 10, 14, 15, 19, 25, 30, 32, 40, 46, 49, 51, 52, 53, 58, 62, 66, 67, 70, 76, 77, 78, 80, 82, 83, 84, 89, 91, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 123, 124, 127, 129, 134, 135, 137, 141, 145, 146, 147, 150, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 172, 178, 180, 181, 186, 196, 198, 199, 204, 207, 210, 211, 212, 214, 216, 217], "leqsl": [1, 29, 58, 75, 79, 95, 106, 139, 158, 162, 163, 164, 165, 166, 167, 175], "10": [1, 2, 4, 6, 7, 10, 11, 13, 14, 16, 28, 29, 31, 34, 35, 36, 39, 40, 44, 47, 48, 49, 50, 51, 52, 53, 58, 60, 64, 65, 66, 67, 70, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 130, 131, 134, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 199, 200, 204, 205, 206, 207, 210, 211, 212, 214, 217, 219], "o": [1, 2, 6, 11, 33, 37, 39, 40, 44, 47, 49, 50, 56, 58, 63, 77, 79, 83, 84, 85, 88, 89, 90, 94, 95, 96, 102, 105, 107, 108, 111, 112, 114, 117, 134, 140, 143, 148, 153, 156, 157, 161, 162, 173, 175, 179, 185, 187, 189, 191, 194, 196, 204, 210, 211, 215], "2": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 18, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 50, 51, 52, 53, 55, 56, 58, 60, 65, 67, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 97, 100, 101, 106, 107, 109, 111, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 147, 149, 152, 153, 154, 155, 159, 160, 161, 164, 165, 174, 175, 182, 183, 184, 185, 189, 190, 191, 193, 194, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 217, 219], "15": [1, 11, 31, 39, 40, 48, 49, 50, 51, 53, 73, 77, 79, 80, 81, 83, 84, 87, 89, 90, 91, 93, 95, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 125, 131, 134, 135, 138, 142, 144, 145, 146, 149, 150, 153, 155, 158, 159, 161, 162, 163, 168, 172, 175, 179, 181, 183, 185, 187, 188, 189, 196, 204, 207, 219, 221], "3": [1, 2, 4, 6, 11, 16, 18, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 50, 51, 52, 53, 56, 65, 67, 69, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 164, 165, 174, 175, 177, 182, 183, 184, 185, 190, 191, 193, 194, 196, 198, 199, 202, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 219], "7": [1, 2, 4, 11, 18, 24, 25, 29, 32, 35, 39, 40, 44, 48, 49, 50, 52, 53, 60, 64, 65, 67, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 168, 169, 170, 173, 175, 177, 181, 184, 185, 190, 191, 194, 196, 200, 205, 206, 207, 210, 211, 212, 217, 219], "ln": [1, 39, 48, 49, 53, 58, 79, 81, 83, 84, 94, 102, 107, 108, 134, 143, 153, 187, 196], "8": [1, 2, 24, 25, 29, 31, 38, 39, 40, 44, 48, 49, 50, 51, 52, 53, 65, 67, 70, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 124, 125, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 158, 159, 160, 161, 168, 169, 175, 177, 181, 185, 186, 188, 189, 190, 191, 194, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 217, 219], "nombreux": [1, 28, 48, 49, 53, 56, 58, 65, 66, 70, 73, 74, 81, 128, 146, 168, 178, 196, 204, 210, 212, 214], "non": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 19, 28, 29, 30, 31, 33, 34, 36, 37, 44, 48, 49, 50, 53, 54, 55, 56, 58, 65, 67, 70, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 97, 102, 107, 108, 109, 110, 111, 112, 114, 115, 118, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 141, 147, 150, 151, 152, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 175, 178, 179, 187, 190, 191, 194, 196, 198, 199, 200, 202, 204, 205, 206, 212, 214, 215, 217, 219], "d\u00e9compos": [1, 2, 39, 53, 56, 66, 86, 104, 128, 168, 173, 206], "comm": [1, 4, 14, 16, 17, 28, 31, 36, 37, 39, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 61, 65, 66, 67, 69, 70, 76, 77, 78, 79, 80, 81, 82, 86, 87, 89, 90, 91, 94, 95, 96, 97, 98, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 124, 125, 126, 127, 128, 129, 130, 132, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 150, 151, 154, 158, 161, 162, 168, 170, 172, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 187, 188, 189, 194, 196, 198, 199, 200, 202, 204, 205, 207, 208, 210, 211, 212, 214, 215, 217, 219], "suit": [1, 2, 14, 20, 31, 32, 39, 48, 49, 51, 53, 56, 58, 65, 66, 70, 73, 75, 77, 78, 80, 82, 85, 90, 91, 96, 97, 98, 104, 106, 107, 108, 109, 110, 114, 118, 132, 134, 137, 139, 146, 147, 148, 151, 154, 158, 162, 172, 175, 178, 187, 189, 196, 199, 200, 202, 204, 206, 208, 210, 211, 212, 214, 215, 217, 219], "alpha": [1, 7, 9, 12, 25, 48, 51, 53, 56, 66, 74, 90, 105, 109, 110, 111, 112, 124, 163, 182, 183], "bet": [1, 9, 12, 48, 51, 53, 66, 81, 82, 106, 214], "1": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 50, 51, 52, 53, 55, 56, 58, 60, 61, 64, 65, 67, 69, 70, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 92, 93, 100, 108, 110, 112, 116, 119, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 160, 161, 174, 175, 181, 182, 183, 184, 185, 189, 190, 191, 193, 194, 198, 199, 200, 202, 204, 205, 206, 207, 208, 211, 212, 215, 217, 219], "chaqu": [1, 2, 4, 7, 10, 14, 25, 28, 30, 31, 32, 36, 39, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 65, 66, 67, 70, 73, 74, 77, 78, 79, 80, 81, 82, 85, 89, 90, 91, 92, 95, 96, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 124, 127, 128, 134, 137, 138, 140, 141, 145, 146, 147, 148, 154, 155, 156, 157, 158, 162, 163, 164, 168, 172, 173, 175, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 194, 196, 198, 199, 200, 202, 204, 205, 206, 208, 210, 211, 212, 214, 217, 219], "term": [1, 31, 53, 58, 65, 66, 79, 109, 110, 118, 131, 153, 161, 196, 210, 211, 212, 215, 217, 219], "correspond": [1, 4, 14, 48, 49, 53, 65, 66, 67, 73, 74, 79, 81, 96, 97, 102, 104, 105, 107, 108, 148, 154, 162, 163, 178, 186, 188, 190, 196, 199, 200, 204, 207, 208, 210, 211, 212, 214, 219], "in": [1, 2, 3, 4, 10, 11, 22, 25, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 44, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 202, 204, 205, 206, 207, 210, 211, 212, 214, 216, 217, 219], "mathbb": [1, 25, 29, 48, 73, 105, 106, 107, 108, 109, 110, 124, 139, 156, 157, 164, 175], "N": [1, 39, 40, 42, 48, 49, 50, 52, 53, 55, 56, 66, 73, 74, 77, 80, 81, 82, 83, 90, 95, 96, 102, 109, 110, 111, 112, 113, 117, 133, 134, 135, 139, 151, 154, 155, 162, 163, 164, 166, 167, 173, 175, 179, 180, 187, 190, 194, 204, 210], "probem": 1, "combinatoir": [1, 55, 162], "r\u00e9sum": [1, 2, 49, 53, 58, 65, 66, 104, 196, 199, 206, 210, 211, 217, 219], "quadrat": [1, 53, 58, 106, 163], "cel": [1, 2, 4, 6, 10, 14, 16, 25, 28, 30, 31, 32, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 65, 66, 67, 70, 77, 78, 79, 80, 82, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 114, 115, 117, 124, 125, 128, 129, 131, 132, 134, 135, 136, 138, 141, 142, 145, 146, 149, 150, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 196, 198, 199, 200, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 217, 219], "d\u00fb": [1, 53, 94, 124], "programm": [1, 2, 4, 19, 28, 31, 33, 36, 38, 40, 41, 48, 49, 53, 58, 62, 67, 68, 70, 77, 79, 81, 90, 94, 95, 96, 97, 98, 99, 102, 105, 107, 108, 115, 123, 132, 133, 135, 145, 146, 147, 150, 152, 154, 155, 168, 172, 178, 179, 180, 181, 184, 187, 188, 189, 190, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 215, 217, 219, 221], "dynam": [1, 19, 58, 79, 81, 90, 190, 196, 211], "dan": [1, 2, 4, 7, 9, 10, 14, 18, 19, 25, 28, 31, 32, 36, 37, 38, 39, 40, 44, 48, 49, 50, 53, 55, 56, 57, 60, 66, 67, 68, 69, 70, 73, 74, 77, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 167, 168, 170, 173, 175, 176, 177, 180, 181, 182, 183, 184, 188, 189, 190, 194, 196, 198, 199, 200, 202, 203, 205, 206, 207, 208, 210, 211, 214, 215, 217, 219], "plupart": [1, 2, 4, 14, 49, 53, 58, 67, 91, 95, 106, 138, 141, 148, 168, 170, 175, 184, 187, 188, 196, 199, 200, 202, 204, 206, 211, 212, 214, 217], "cas": [1, 2, 4, 28, 31, 32, 36, 38, 39, 40, 48, 49, 50, 53, 55, 56, 58, 65, 66, 67, 70, 77, 79, 80, 81, 84, 87, 89, 90, 91, 92, 96, 99, 102, 103, 104, 105, 106, 107, 109, 110, 113, 115, 125, 128, 129, 134, 139, 146, 147, 148, 150, 152, 153, 156, 157, 158, 160, 162, 163, 166, 167, 168, 170, 172, 173, 175, 176, 177, 178, 179, 181, 187, 188, 190, 196, 199, 200, 206, 210, 212, 213, 215, 217, 219], "obtient": [1, 6, 47, 48, 53, 56, 75, 102, 106, 107, 108, 109, 110, 114, 173, 187, 196, 207, 210], "avoir": [1, 2, 14, 28, 36, 49, 53, 56, 58, 60, 65, 66, 67, 70, 74, 78, 81, 90, 91, 96, 104, 109, 113, 134, 137, 138, 162, 170, 172, 173, 179, 180, 184, 186, 187, 196, 199, 200, 202, 204, 206, 210, 211, 212, 214, 215, 217], "transform": [1, 2, 4, 6, 44, 47, 50, 56, 67, 80, 81, 82, 83, 87, 90, 95, 104, 105, 106, 108, 125, 137, 146, 150, 161, 177, 193, 206, 208, 210, 212], "form": [1, 2, 8, 14, 28, 31, 36, 48, 49, 51, 53, 55, 56, 58, 65, 70, 78, 95, 100, 101, 111, 112, 115, 138, 141, 150, 162, 163, 164, 166, 167, 168, 178, 179, 196, 199, 202, 204, 210, 211, 212, 214, 215, 217, 219], "r\u00e9current": [1, 31, 53, 56, 75, 79, 80, 84, 102, 114, 118, 138, 162, 196, 204], "\u00e9crit": [1, 4, 31, 39, 40, 44, 48, 55, 58, 60, 65, 67, 69, 70, 89, 93, 106, 107, 108, 109, 118, 127, 128, 132, 135, 137, 141, 145, 152, 170, 177, 178, 180, 184, 187, 188, 196, 199, 202, 204, 205, 208, 210, 211, 212, 214, 215, 217, 219], "faut": [1, 2, 4, 9, 14, 28, 31, 33, 36, 37, 38, 39, 44, 48, 49, 50, 51, 53, 56, 57, 58, 60, 65, 66, 67, 69, 70, 73, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 91, 95, 96, 98, 102, 104, 107, 108, 109, 110, 113, 115, 117, 125, 128, 129, 130, 132, 133, 136, 137, 140, 141, 145, 146, 148, 149, 150, 152, 153, 156, 157, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 193, 196, 199, 202, 204, 205, 206, 208, 210, 211, 212, 214, 215, 217, 219], "solut": [1, 9, 28, 32, 33, 36, 39, 40, 48, 49, 51, 53, 55, 56, 58, 60, 65, 82, 85, 88, 89, 99, 102, 103, 104, 106, 109, 111, 112, 114, 115, 118, 119, 135, 136, 140, 141, 162, 163, 169, 170, 196, 199, 204, 210, 211, 212, 215, 217], "\u00e9l\u00e9ment": [1, 2, 4, 6, 10, 15, 19, 31, 37, 39, 44, 47, 49, 50, 57, 58, 60, 65, 66, 67, 74, 79, 80, 83, 93, 95, 96, 97, 99, 102, 106, 107, 108, 119, 124, 126, 127, 128, 141, 143, 145, 148, 149, 150, 152, 153, 161, 169, 173, 177, 178, 180, 187, 188, 189, 196, 199, 200, 204, 205, 206, 211, 212, 214, 215, 217, 219], "sach": [1, 10, 28, 53, 90, 173, 196, 219], "conna\u00eet": [1, 14, 58, 70, 81, 84, 111, 112, 185, 196, 210, 214], "0": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 65, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 202, 204, 205, 206, 207, 210, 211, 212, 214, 215, 217, 219, 221], "dichotom": [1, 19, 84, 86, 91, 107, 109, 110, 123, 137, 173, 194, 210], "coup": [1, 2, 49, 53, 66, 76, 79, 87, 91, 104, 107, 108, 152, 158, 159, 170, 177, 179, 204, 206, 211], "deux": [1, 4, 6, 7, 9, 10, 14, 17, 18, 20, 25, 28, 31, 34, 36, 37, 38, 39, 40, 44, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 65, 66, 67, 70, 73, 74, 75, 78, 79, 80, 81, 84, 87, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 112, 119, 124, 128, 129, 130, 131, 133, 134, 136, 138, 139, 143, 146, 148, 151, 152, 153, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 202, 204, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219], "iter": [1, 2, 5, 7, 9, 10, 11, 12, 20, 31, 40, 48, 55, 56, 65, 79, 80, 82, 84, 85, 86, 87, 91, 95, 98, 107, 108, 111, 112, 123, 124, 128, 129, 147, 162, 163, 168, 175, 177, 181, 188, 189, 191, 197, 206, 211, 215, 217], "tabl": [1, 14, 15, 49, 68, 90, 102, 111, 112, 123, 135, 138, 149, 151, 172, 173, 178, 187, 196, 204, 210, 211, 214], "hashag": [1, 15, 73, 123, 172, 173], "D\u00e8s": [1, 2, 67], "sort": [1, 2, 4, 9, 11, 14, 29, 36, 48, 50, 51, 53, 55, 56, 58, 64, 65, 67, 70, 74, 77, 79, 81, 82, 84, 87, 90, 91, 94, 96, 102, 104, 105, 107, 108, 111, 112, 113, 119, 124, 126, 127, 130, 134, 139, 146, 153, 159, 162, 163, 164, 168, 172, 175, 179, 181, 187, 189, 190, 194, 196, 199, 202, 204, 206, 208, 210, 211, 212, 214, 217, 220], "puissanc": [1, 19, 65, 86, 102, 199, 210, 211, 217], "entier": [1, 4, 6, 31, 36, 48, 49, 50, 51, 56, 60, 65, 67, 70, 73, 74, 78, 79, 83, 84, 94, 96, 102, 107, 108, 127, 134, 148, 165, 166, 167, 172, 180, 181, 187, 196, 198, 199, 204, 205, 207, 209, 210, 212], "attendr": [1, 30, 53, 56, 66, 204, 217], "trivial": [1, 75], "tel": [1, 2, 14, 19, 37, 44, 49, 53, 55, 56, 58, 65, 74, 79, 80, 82, 91, 104, 105, 106, 107, 108, 128, 134, 139, 140, 141, 153, 154, 155, 156, 157, 158, 162, 163, 164, 166, 167, 170, 172, 175, 178, 179, 181, 184, 196, 204, 206, 210, 211, 212, 214, 216, 219], "strassen": [1, 196], "multipl": [1, 6, 7, 9, 14, 39, 47, 48, 53, 56, 58, 60, 65, 81, 92, 94, 96, 102, 104, 105, 139, 175, 187, 198, 210], "matric": [1, 6, 15, 25, 37, 39, 47, 48, 49, 51, 53, 66, 67, 69, 78, 81, 95, 100, 101, 102, 105, 106, 113, 119, 124, 141, 146, 147, 151, 158, 162, 163, 177, 178, 179, 193, 196, 209, 212], "807": [1, 196], "celui": [1, 2, 4, 25, 28, 30, 32, 36, 37, 39, 40, 49, 53, 55, 56, 58, 65, 67, 70, 90, 91, 104, 106, 107, 108, 128, 129, 149, 150, 162, 163, 168, 178, 179, 184, 187, 188, 190, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 217, 219], "marco": 1, "bodrato": 1, "lik": [1, 11, 29], "matrix": [1, 24, 28, 50, 87, 154, 155, 159], "suited": 1, "squaring": 1, "and": [1, 4, 10, 11, 25, 28, 29, 31, 36, 37, 44, 49, 53, 64, 65, 67, 71, 73, 74, 75, 76, 80, 81, 83, 84, 91, 96, 99, 100, 101, 102, 104, 107, 108, 125, 126, 131, 134, 136, 139, 143, 144, 146, 152, 166, 167, 168, 169, 173, 178, 185, 191, 196, 200, 204, 210, 211, 212, 214, 215, 217], "high": 1, "pow": [1, 149], "comput": [1, 7, 146, 160], "minimal": [1, 10, 48, 53, 58, 79, 91, 102, 115, 126], "tri": [1, 11, 12, 13, 19, 39, 49, 50, 53, 56, 58, 65, 70, 90, 91, 94, 102, 106, 109, 110, 123, 125, 137, 143, 148, 162, 163, 172, 173, 188, 189, 190, 194, 202, 210, 211], "g\u00e9ner": [1, 25, 38, 47, 49, 50, 51, 65, 73, 95, 105, 106, 107, 108, 109, 110, 113, 134, 138, 154, 155, 158, 177, 178, 184, 196, 199, 200, 204, 211, 214, 215, 217], "dir": [1, 2, 4, 14, 25, 31, 37, 39, 53, 55, 57, 58, 65, 67, 70, 73, 79, 83, 84, 90, 91, 95, 98, 99, 104, 109, 110, 124, 130, 139, 140, 150, 158, 159, 160, 161, 163, 168, 178, 179, 180, 184, 187, 188, 189, 190, 196, 200, 204, 208, 210, 211, 212, 214, 217, 219], "san": [1, 2, 14, 31, 33, 36, 39, 44, 48, 50, 51, 52, 53, 57, 58, 65, 66, 70, 73, 77, 80, 84, 85, 87, 89, 92, 94, 95, 99, 102, 109, 110, 113, 114, 117, 119, 126, 127, 135, 150, 151, 152, 161, 162, 170, 172, 179, 180, 184, 196, 199, 200, 202, 204, 206, 210, 211, 213, 214, 215, 216, 217, 219], "hypothes": [1, 56, 162], "don": [1, 2, 4, 5, 7, 15, 19, 24, 25, 28, 32, 36, 37, 38, 39, 40, 43, 45, 46, 48, 53, 57, 58, 62, 64, 66, 67, 68, 70, 73, 79, 80, 82, 83, 90, 94, 98, 100, 102, 104, 105, 110, 111, 112, 114, 118, 125, 128, 132, 136, 141, 146, 153, 158, 160, 161, 168, 172, 173, 178, 179, 180, 185, 186, 187, 188, 190, 194, 196, 198, 199, 200, 204, 206, 207, 210, 211, 212, 213, 214, 217, 219], "En": [1, 2, 20, 25, 30, 39, 44, 47, 48, 49, 53, 55, 56, 58, 65, 66, 69, 70, 73, 79, 80, 86, 89, 90, 97, 99, 102, 104, 106, 130, 132, 134, 138, 140, 141, 147, 158, 162, 163, 164, 169, 175, 179, 180, 187, 188, 194, 196, 199, 200, 202, 204, 206, 210, 211, 212, 214, 217], "revanch": [1, 56, 65, 80, 113, 141, 180, 196, 199, 204, 210, 212, 217], "o\u00f9": [1, 2, 4, 9, 12, 13, 14, 17, 25, 48, 49, 51, 53, 55, 56, 57, 58, 65, 66, 67, 70, 74, 75, 77, 78, 79, 80, 83, 84, 91, 95, 97, 98, 104, 106, 107, 108, 109, 110, 115, 124, 126, 127, 137, 138, 148, 153, 158, 160, 161, 162, 164, 165, 168, 173, 175, 178, 179, 180, 187, 188, 189, 190, 194, 196, 199, 202, 204, 206, 208, 210, 211, 212, 214, 215, 217, 219], "issu": [1, 29, 49, 51, 53, 66, 76, 80, 104, 113, 125, 141, 162, 200, 212], "ensembl": [1, 2, 7, 8, 9, 10, 14, 25, 28, 36, 37, 48, 49, 53, 55, 56, 58, 65, 66, 70, 73, 74, 76, 79, 80, 81, 83, 84, 85, 91, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 115, 123, 125, 126, 127, 128, 134, 138, 143, 150, 154, 155, 156, 157, 158, 159, 162, 164, 165, 168, 169, 172, 175, 178, 181, 186, 196, 199, 200, 204, 205, 206, 208, 210, 212, 214, 215], "fin": [1, 2, 4, 10, 14, 20, 31, 38, 48, 49, 53, 57, 58, 65, 66, 67, 70, 73, 77, 78, 83, 84, 85, 89, 91, 98, 102, 104, 109, 110, 128, 129, 133, 134, 135, 139, 140, 141, 147, 148, 180, 181, 187, 188, 189, 196, 204, 206, 211, 212, 214, 217, 219], "cardinal": [1, 56, 73], "meilleur": [1, 2, 25, 40, 49, 53, 56, 58, 66, 73, 75, 77, 78, 79, 85, 88, 89, 91, 102, 104, 105, 109, 110, 111, 112, 115, 131, 139, 162, 163, 179, 184, 187, 196, 211, 212], "revient": [1, 14, 28, 31, 32, 53, 66, 91, 94, 96, 107, 126, 128, 136, 141, 153, 162, 173, 196, 211, 212, 215, 217], "histogramm": [1, 25, 49, 53, 66, 105, 107, 108, 123, 153], "inf\u00e9rieur": [1, 2, 30, 31, 48, 53, 55, 66, 74, 80, 84, 91, 96, 104, 105, 106, 124, 125, 148, 175, 188, 206, 210, 211], "inf": [1, 48, 84, 124], "blog": [1, 21, 53], "fast": [1, 29, 49, 216], "interesect": 1, "of": [1, 4, 6, 7, 10, 11, 13, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 48, 49, 50, 51, 53, 55, 56, 64, 67, 71, 79, 81, 87, 89, 96, 98, 99, 104, 107, 108, 110, 114, 117, 124, 135, 138, 141, 142, 143, 145, 146, 147, 153, 158, 160, 161, 166, 167, 169, 173, 175, 185, 187, 196, 200, 204, 206, 210, 214, 215], "sorted": [1, 2, 80, 90, 91, 106, 125, 134, 145, 153, 178, 185, 187, 188, 194, 206, 210], "list": [1, 2, 6, 7, 8, 9, 10, 11, 14, 19, 28, 32, 36, 37, 40, 48, 49, 51, 53, 56, 57, 58, 60, 63, 73, 74, 79, 80, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 111, 114, 118, 123, 124, 125, 126, 127, 128, 134, 136, 141, 142, 143, 145, 147, 148, 149, 153, 159, 162, 163, 164, 166, 167, 168, 169, 173, 175, 177, 178, 179, 185, 187, 189, 190, 194, 199, 200, 205, 206, 207, 215, 217, 219], "using": [1, 11, 28, 51, 204, 217], "sse": 1, "instruct": [1, 2, 4, 16, 44, 49, 51, 61, 65, 67, 70, 79, 94, 96, 97, 107, 108, 130, 146, 150, 154, 172, 178, 180, 181, 186, 187, 188, 196, 202, 204, 206, 208, 211, 212, 214, 217], "simpl": [1, 2, 4, 10, 14, 28, 32, 33, 39, 49, 50, 51, 53, 55, 56, 58, 65, 66, 67, 70, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 90, 91, 94, 102, 104, 105, 109, 110, 112, 128, 138, 141, 143, 147, 148, 150, 158, 160, 161, 162, 168, 169, 172, 175, 176, 177, 178, 179, 180, 184, 186, 187, 190, 199, 202, 204, 206, 211, 212, 214, 215, 216, 219], "intersect": [1, 10, 44, 56, 164, 211], "montr": [1, 25, 39, 48, 53, 56, 58, 65, 66, 75, 77, 79, 83, 90, 106, 109, 110, 132, 147, 154, 158, 163, 166, 167, 168, 170, 172, 179, 187, 189, 196, 199, 204, 205, 208, 210, 211, 212, 214, 217, 219], "comment": [1, 14, 19, 28, 36, 37, 44, 48, 49, 51, 53, 58, 60, 73, 78, 80, 81, 83, 87, 90, 91, 99, 107, 108, 110, 114, 124, 138, 139, 141, 143, 146, 151, 160, 168, 169, 170, 172, 176, 177, 184, 187, 196, 200, 204, 208, 210, 211, 212, 214, 215, 217, 219], "optimis": [1, 20, 38, 46, 47, 50, 55, 56, 73, 84, 88, 89, 90, 106, 117, 118, 141, 145, 146, 147, 153, 162, 168, 169, 192, 195, 205, 211, 213], "impl\u00e9ment": [1, 2, 4, 6, 7, 10, 22, 27, 31, 40, 41, 48, 50, 51, 56, 58, 67, 70, 77, 84, 87, 91, 102, 103, 107, 108, 109, 110, 120, 125, 128, 129, 133, 134, 137, 139, 142, 144, 147, 148, 150, 153, 158, 159, 170, 185, 186, 187, 190, 194, 196, 202, 206, 210, 211, 214, 216, 217, 221], "introduis": 1, "notion": [1, 4, 14, 19, 53, 57, 58, 67, 73, 75, 79, 90, 106, 211], "partit": [1, 64, 211], "peu": [1, 4, 37, 44, 48, 49, 51, 53, 55, 56, 58, 65, 66, 67, 69, 70, 74, 77, 78, 80, 82, 83, 84, 87, 91, 96, 97, 99, 102, 105, 111, 112, 113, 114, 125, 128, 130, 134, 135, 137, 141, 143, 145, 148, 150, 160, 161, 168, 172, 174, 179, 185, 194, 196, 199, 202, 204, 210, 211, 212, 214, 215, 217], "parall\u00e9lis": [1, 217, 220], "object": [1, 4, 11, 24, 25, 28, 29, 31, 36, 37, 40, 49, 51, 53, 57, 65, 66, 67, 81, 90, 91, 95, 96, 98, 116, 126, 127, 128, 129, 141, 145, 146, 147, 160, 162, 163, 168, 172, 184, 186, 187, 196, 204, 210, 211, 214, 215, 217, 219], "tous": [1, 2, 4, 7, 10, 28, 30, 31, 32, 36, 39, 40, 48, 49, 50, 55, 56, 58, 65, 67, 68, 70, 73, 74, 77, 79, 80, 82, 84, 90, 91, 95, 102, 104, 107, 108, 114, 115, 119, 125, 127, 128, 129, 133, 145, 152, 162, 164, 165, 172, 173, 178, 179, 189, 196, 199, 204, 206, 207, 210, 211, 212, 214, 215, 217, 219], "lesquel": [1, 31, 48, 49, 53, 56, 77, 80, 91, 125, 153, 166, 167, 196, 210, 212], "con\u00e7us": [1, 214], "distanc": [1, 7, 9, 10, 12, 13, 15, 19, 20, 40, 50, 53, 55, 58, 82, 91, 92, 102, 109, 110, 111, 112, 119, 123, 124, 158, 159, 161, 162, 163, 165, 166, 167, 192, 195], "\u00e9dit": [1, 15, 19, 20, 58, 119, 165, 192, 195], "sert": [1, 2, 14, 32, 39, 44, 46, 48, 51, 53, 65, 66, 82, 91, 94, 115, 117, 128, 144, 151, 168, 170, 172, 173, 175, 179, 180, 186, 196, 198, 199, 204, 210, 211, 212, 217, 218], "entre": [1, 6, 8, 9, 10, 14, 20, 25, 36, 46, 48, 51, 55, 56, 58, 73, 74, 80, 82, 83, 84, 85, 90, 91, 92, 99, 102, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 119, 124, 125, 127, 130, 135, 143, 150, 158, 159, 161, 162, 163, 166, 167, 169, 172, 175, 176, 178, 179, 180, 181, 188, 196, 199, 204, 206, 207, 210, 211, 212, 214, 215, 217, 219], "utilis": [1, 2, 4, 6, 8, 10, 14, 20, 21, 25, 28, 32, 33, 36, 37, 39, 44, 48, 49, 50, 51, 53, 55, 56, 58, 62, 66, 67, 70, 73, 74, 77, 81, 87, 90, 91, 94, 95, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 114, 115, 118, 119, 124, 126, 127, 129, 134, 137, 138, 141, 143, 146, 147, 149, 150, 152, 153, 154, 155, 161, 162, 165, 168, 169, 174, 175, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 194, 196, 197, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219], "trouv": [1, 2, 4, 14, 18, 25, 28, 33, 39, 40, 48, 50, 51, 53, 57, 58, 60, 65, 67, 70, 79, 82, 84, 85, 88, 90, 91, 92, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 134, 135, 140, 148, 161, 163, 164, 165, 166, 172, 182, 183, 187, 188, 189, 196, 204, 206, 207, 210, 211, 212, 214, 217, 219], "proch": [1, 9, 10, 37, 53, 55, 56, 58, 66, 73, 85, 104, 105, 111, 112, 119, 130, 154, 155, 162, 179, 187, 196, 204, 205, 211, 212, 215], "autr": [1, 2, 4, 14, 15, 16, 18, 20, 22, 25, 27, 28, 36, 37, 38, 39, 40, 41, 44, 46, 48, 49, 50, 51, 55, 56, 58, 60, 62, 66, 67, 70, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 98, 102, 105, 106, 108, 109, 110, 111, 112, 114, 117, 118, 119, 123, 124, 125, 126, 128, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 147, 153, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 180, 181, 184, 185, 187, 188, 189, 190, 191, 198, 199, 200, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221], "condit": [1, 31, 48, 49, 51, 56, 65, 66, 71, 73, 96, 97, 143, 162, 172, 175, 188, 196, 204, 210, 211, 212, 214, 217], "sim": [1, 31, 48, 53, 66, 79, 81, 82, 118, 156, 157, 173, 175, 189, 196], "4": [1, 2, 4, 6, 9, 11, 12, 22, 24, 25, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 50, 51, 52, 65, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 164, 165, 174, 175, 176, 177, 180, 181, 182, 183, 185, 189, 190, 192, 193, 194, 195, 196, 199, 202, 204, 205, 206, 207, 210, 211, 212, 214, 216, 217, 219, 221], "Que": [1, 39, 48, 49, 83, 96, 97, 98, 99, 106, 140, 147, 154, 160, 162, 178, 184, 188], "quand": [1, 2, 14, 32, 48, 49, 53, 57, 58, 65, 66, 70, 77, 83, 87, 104, 105, 113, 115, 124, 127, 138, 139, 147, 152, 158, 159, 160, 164, 179, 185, 187, 189, 199, 206, 211, 217], "milliard": [1, 73], "Ce": [1, 2, 4, 14, 19, 25, 30, 31, 39, 40, 44, 48, 50, 51, 53, 55, 56, 58, 65, 66, 67, 69, 70, 73, 79, 81, 83, 85, 88, 89, 90, 91, 94, 97, 102, 104, 105, 109, 110, 113, 114, 115, 117, 119, 124, 126, 127, 128, 129, 134, 135, 139, 150, 154, 161, 162, 163, 165, 172, 173, 175, 178, 179, 184, 185, 187, 188, 190, 196, 199, 200, 204, 205, 206, 207, 208, 210, 211, 212, 217, 219], "facil": [1, 28, 31, 36, 37, 40, 49, 51, 53, 55, 57, 58, 60, 65, 66, 69, 70, 73, 80, 89, 91, 102, 115, 125, 135, 137, 141, 142, 143, 145, 146, 153, 162, 163, 196, 204, 208, 210, 211, 212, 214, 215, 217, 219], "si": [1, 2, 4, 6, 7, 8, 9, 10, 14, 19, 25, 30, 31, 32, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 65, 66, 67, 70, 73, 74, 75, 76, 79, 80, 81, 83, 84, 86, 87, 89, 91, 92, 94, 96, 97, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 124, 127, 128, 130, 134, 139, 141, 146, 150, 151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 177, 178, 179, 180, 181, 187, 188, 189, 190, 196, 199, 200, 202, 204, 206, 208, 210, 211, 212, 214, 215, 217, 219], "repr\u00e9sent": [1, 2, 6, 20, 25, 31, 36, 39, 48, 49, 50, 55, 56, 58, 67, 78, 80, 81, 83, 87, 90, 91, 95, 100, 101, 111, 112, 118, 123, 136, 141, 143, 150, 154, 155, 163, 173, 179, 185, 186, 187, 196, 198, 204, 206, 208, 210, 211, 212, 215], "vecteur": [1, 9, 10, 50, 53, 55, 56, 58, 65, 66, 74, 105, 106, 109, 110, 111, 112, 134, 147, 150, 154, 155, 158, 159, 161, 196, 211], "voir": [1, 2, 4, 13, 16, 19, 20, 25, 28, 31, 37, 40, 44, 48, 49, 53, 55, 58, 65, 67, 70, 73, 78, 83, 84, 85, 90, 91, 92, 105, 107, 108, 109, 110, 125, 127, 128, 131, 134, 137, 139, 150, 154, 155, 158, 159, 165, 168, 173, 176, 178, 179, 180, 186, 187, 188, 191, 196, 202, 204, 206, 210, 211, 212, 215, 217], "word2vec": 1, "auto": [1, 21, 111, 112], "encoder": [1, 212], "veut": [1, 2, 4, 14, 37, 44, 48, 49, 51, 53, 58, 60, 65, 67, 69, 75, 77, 79, 80, 83, 91, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 128, 130, 131, 133, 140, 150, 152, 154, 158, 159, 160, 161, 162, 163, 166, 167, 168, 170, 172, 175, 177, 179, 180, 184, 185, 186, 188, 189, 199, 206, 211, 214, 217, 219], "compar": [1, 2, 29, 30, 31, 48, 49, 50, 53, 56, 58, 65, 70, 77, 81, 83, 91, 104, 109, 110, 125, 130, 131, 133, 136, 145, 148, 151, 153, 154, 161, 175, 184, 187, 188, 196, 199, 204, 206, 210, 211, 212], "model": [1, 14, 25, 48, 51, 53, 55, 58, 80, 84, 104, 105, 119, 124, 125, 160, 161, 211], "ranking": 1, "pouvoir": [1, 4, 7, 53, 58, 67, 73, 77, 84, 90, 115, 129, 141, 145, 162, 168, 170, 177, 179, 180, 188, 196, 204, 210, 211, 212, 215, 217], "visuel": [1, 4, 40, 53, 58, 67, 83, 204], "r\u00e9sultat": [1, 2, 7, 14, 25, 31, 32, 34, 36, 39, 40, 48, 49, 50, 51, 56, 57, 58, 60, 65, 66, 70, 75, 77, 78, 80, 83, 84, 89, 96, 97, 100, 101, 102, 105, 107, 108, 109, 113, 125, 126, 127, 134, 137, 139, 141, 145, 146, 148, 152, 154, 155, 156, 157, 158, 159, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 186, 187, 188, 189, 194, 196, 199, 202, 206, 210, 211, 212, 214, 215, 217, 219], "Quel": [1, 39, 57, 95, 107, 108, 118, 158, 159, 178], "mieux": [1, 2, 14, 15, 33, 39, 40, 53, 57, 58, 60, 65, 81, 84, 87, 89, 90, 105, 107, 108, 110, 117, 127, 135, 138, 141, 143, 145, 178, 180, 190, 196, 204, 206, 214, 215, 217], "affich": [1, 2, 4, 7, 11, 39, 48, 49, 53, 65, 66, 67, 70, 77, 79, 80, 91, 96, 97, 105, 114, 127, 139, 168, 178, 179, 180, 187, 188, 189, 196, 199, 202, 204, 206, 207, 208, 210, 211, 212, 214, 217, 219], "moteur": [1, 49, 59, 60, 105, 178, 204, 212], "recherch": [1, 5, 10, 19, 20, 36, 49, 53, 55, 57, 59, 60, 79, 84, 85, 90, 91, 104, 105, 107, 110, 123, 128, 137, 140, 163, 173, 190, 192, 195, 199, 204, 210, 211, 212, 219], "oeil": [1, 48, 49, 53, 211], "humain": [1, 53, 58, 180, 217], "sais": [1, 14, 58, 90, 179, 210, 212], "rapid": [1, 2, 4, 31, 36, 38, 39, 48, 49, 50, 53, 55, 56, 58, 65, 67, 70, 73, 80, 87, 91, 104, 107, 108, 109, 110, 117, 119, 123, 133, 134, 135, 139, 142, 146, 148, 152, 172, 173, 178, 179, 185, 186, 196, 202, 204, 206, 211, 214, 215, 216, 217], "diff\u00e9rent": [1, 14, 18, 25, 28, 31, 36, 37, 40, 48, 49, 50, 51, 53, 55, 56, 58, 60, 66, 74, 75, 83, 84, 89, 90, 102, 104, 107, 108, 110, 112, 113, 114, 119, 125, 132, 133, 134, 137, 140, 142, 150, 162, 163, 168, 169, 172, 175, 178, 180, 181, 186, 187, 188, 190, 194, 196, 199, 204, 205, 206, 207, 208, 210, 211, 212, 214, 216, 217, 219], "tout": [1, 2, 4, 7, 11, 14, 18, 25, 28, 31, 33, 36, 37, 39, 40, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 65, 66, 67, 70, 73, 74, 76, 77, 78, 79, 81, 82, 83, 87, 89, 91, 92, 94, 99, 102, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 124, 126, 127, 128, 134, 136, 137, 138, 139, 143, 147, 149, 150, 152, 153, 154, 158, 159, 161, 162, 163, 164, 165, 168, 169, 172, 173, 175, 178, 179, 180, 183, 184, 190, 193, 194, 196, 200, 202, 204, 206, 208, 210, 211, 212, 215, 217, 219], "fusion": [1, 19, 53, 84, 102, 138, 153], "algo": 1, "bucket": 1, "bull": 1, "complex": [1, 4, 28, 53, 56, 65, 67, 70, 73, 77, 91, 141, 178, 180, 196, 204, 210, 214, 215], "lempel": 1, "ziv": 1, "python": [1, 3, 4, 6, 16, 19, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 61, 62, 64, 66, 68, 84, 94, 95, 98, 99, 102, 105, 106, 107, 108, 126, 127, 130, 131, 132, 133, 134, 137, 140, 141, 145, 146, 148, 149, 150, 151, 152, 153, 168, 169, 170, 173, 185, 187, 188, 197, 198, 199, 200, 202, 204, 205, 206, 208, 209, 212, 214, 215, 216, 219], "implement": [1, 56, 146, 173], "kullback": 1, "leibl": 1, "divergent": 1, "kl": [1, 58], "ucb": 1, "index": [1, 10, 65, 81, 83, 84, 96, 98, 99, 113, 117, 124, 133, 138, 141, 144, 172, 179, 186, 187, 196, 199, 210, 211, 214], "matriciel": [1, 6, 15, 31, 46, 58, 114, 119, 146, 154, 155], "winograd": 1, "minimum": [1, 40, 48, 50, 58, 75, 77, 79, 80, 94, 106, 111, 112, 113, 117, 158, 159, 164, 165], "filtering": 1, "convolu": [1, 15, 123], "im2col": 1, "r\u00e9arrang": 1, "divis": [1, 2, 14, 39, 48, 49, 53, 56, 65, 73, 74, 79, 92, 96, 104, 106, 109, 110, 129, 139, 145, 148, 156, 157, 164, 172, 174, 189, 198, 199, 210, 211], "reign": 1, "branch": [1, 187], "bound": [1, 48, 204], "the": [1, 3, 4, 6, 7, 10, 11, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 50, 51, 53, 55, 56, 63, 64, 67, 71, 73, 77, 81, 89, 90, 100, 101, 104, 124, 138, 140, 145, 146, 153, 156, 157, 160, 164, 165, 166, 167, 196, 200, 204, 214, 217], "ultimat": 1, "planar": 1, "convex": [1, 53, 106], "hull": [1, 53], "relectur": [1, 37, 70, 196, 212, 215], "kirkpatrick": 1, "seidel": 1, "prun": [1, 107, 108], "search": [1, 4, 11, 63, 67, 214, 219], "an": [1, 4, 7, 11, 14, 49, 50, 53, 56, 58, 64, 66, 70, 71, 89, 104, 105, 166, 167, 179, 200, 204, 210, 217], "finding": [1, 48], "point": [1, 2, 8, 9, 10, 12, 22, 25, 27, 31, 39, 40, 41, 44, 48, 53, 55, 56, 65, 79, 82, 90, 91, 105, 106, 109, 110, 111, 112, 120, 124, 125, 139, 146, 158, 159, 161, 168, 175, 178, 179, 180, 185, 187, 188, 190, 196, 200, 204, 206, 210, 211, 212, 217, 219, 221], "set": [1, 4, 11, 28, 49, 51, 65, 67, 73, 74, 80, 83, 90, 101, 118, 126, 133, 136, 152, 188, 196, 200, 204, 205, 210, 217], "d\u00e9termin": [1, 2, 7, 9, 31, 36, 39, 48, 53, 55, 56, 57, 58, 65, 91, 92, 104, 105, 106, 107, 108, 114, 124, 145, 158, 159, 162, 178, 179, 180, 184, 188, 196, 202, 204, 206, 210, 211, 214, 217, 219], "envelopp": 1, "h": [1, 11, 31, 37, 49, 53, 56, 58, 61, 64, 73, 83, 90, 105, 109, 110, 111, 112, 113, 118, 127, 131, 137, 141, 173, 175, 185, 196, 204, 205, 207, 211, 212, 215, 217], "nombr": [1, 2, 4, 6, 7, 9, 10, 12, 17, 31, 32, 33, 39, 40, 47, 49, 50, 53, 55, 56, 58, 60, 65, 67, 70, 74, 76, 77, 79, 81, 83, 84, 85, 86, 87, 89, 91, 92, 95, 96, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 113, 115, 117, 119, 124, 127, 129, 133, 134, 137, 138, 140, 141, 142, 143, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 168, 169, 172, 173, 175, 177, 178, 180, 181, 184, 186, 187, 188, 189, 190, 194, 196, 199, 202, 204, 206, 207, 208, 209, 212, 214, 215, 217, 219], "segment": [1, 10, 55, 56, 79, 85, 91, 164, 174, 196], "court": [1, 4, 9, 10, 14, 15, 19, 31, 37, 40, 49, 55, 56, 67, 74, 76, 77, 81, 85, 90, 91, 98, 99, 102, 118, 119, 121, 135, 152, 153, 178, 184, 196, 210, 211, 212], "chemin": [1, 4, 9, 10, 15, 19, 40, 55, 56, 67, 74, 75, 80, 90, 102, 119, 127, 146, 158, 159, 175, 178, 186, 187, 200, 204, 214], "graph": [1, 7, 10, 11, 14, 19, 20, 25, 40, 43, 46, 48, 53, 55, 56, 66, 73, 78, 83, 90, 91, 102, 125, 127, 129, 146, 162, 167, 183, 187, 196, 204], "ordonnanc": [1, 15, 119], "permut": [1, 2, 3, 18, 20, 33, 39, 40, 55, 56, 58, 77, 84, 89, 104, 105, 115, 123, 125, 139, 163, 164, 165, 169, 172, 178, 190, 199], "sattolo": 1, "voyageur": [1, 19, 20, 40, 55, 56, 85, 119], "commerc": [1, 19, 20, 22, 27, 41, 55, 56, 73, 85, 119, 221], "hamiltonien": [1, 10, 13, 20, 40, 54], "lir": [1, 2, 4, 6, 49, 50, 53, 56, 57, 58, 65, 67, 69, 74, 104, 140, 145, 150, 162, 173, 178, 179, 196, 199, 200, 202, 204, 206, 208, 210, 211, 212, 214, 215], "larg": [1, 40, 55, 56, 64, 73], "scal": [1, 56, 124], "traveling": [1, 15, 55, 56, 119], "salesman": [1, 15, 20, 55, 56, 58, 88, 119], "tourn": [1, 39, 53, 55, 84, 126, 136, 172, 187, 217], "v\u00e9hicul": 1, "extens": [1, 7, 16, 46, 50, 58, 76, 80, 91, 106, 141, 178, 185, 196, 204, 209, 212, 213, 219], "affect": [1, 2, 39, 48, 53, 56, 65, 70, 77, 85, 137, 172, 181, 187, 188, 196, 199, 204, 206, 210, 214, 217], "m\u00e9thod": [1, 2, 4, 19, 36, 39, 48, 49, 53, 55, 56, 58, 67, 73, 82, 84, 87, 92, 95, 96, 98, 105, 109, 110, 123, 126, 128, 130, 131, 134, 141, 146, 150, 154, 155, 158, 159, 160, 161, 167, 173, 178, 179, 186, 197, 198, 199, 206, 209, 210, 212, 214, 217, 219], "hongrois": [1, 167], "arbre": [1, 10, 19, 80, 83, 90, 102, 123, 137, 143, 185], "poid": [1, 7, 9, 10, 53, 57, 58, 91, 106, 196], "miminum": [1, 75], "kruskal": [1, 5, 7, 10, 13, 19, 20, 54, 91], "bor\u016fvk": 1, "sac": 1, "dos": 1, "structur": [1, 2, 4, 9, 11, 31, 49, 50, 51, 53, 58, 65, 67, 80, 83, 91, 143, 168, 172, 173, 178, 186, 187, 194, 196, 206, 211, 212, 214], "cha\u00een": [1, 49, 51, 58, 76, 94, 95, 96, 98, 104, 123, 126, 141, 162, 168, 172, 178, 180, 181, 184, 185, 187, 188, 190, 196, 199, 204, 205, 208, 209, 210, 212, 214, 215, 217, 219], "def": [1, 2, 4, 10, 11, 28, 29, 30, 31, 32, 36, 37, 39, 40, 44, 48, 49, 50, 58, 60, 65, 66, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 159, 161, 165, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 184, 185, 186, 187, 190, 191, 193, 194, 196, 198, 199, 200, 202, 204, 205, 206, 210, 211, 212, 214, 215, 217, 219], "hachag": [1, 49, 73, 187], "distribu": [1, 4, 5, 16, 25, 48, 53, 58, 66, 67, 70, 73, 80, 124, 134, 137, 139, 150, 151, 153, 162, 204, 217], "suffix": [1, 15, 119, 211], "tre": [1, 28, 58, 61, 158, 159, 173, 179, 196], "b": [1, 2, 4, 8, 10, 11, 25, 28, 32, 33, 35, 37, 38, 39, 48, 49, 52, 53, 56, 61, 65, 66, 67, 70, 73, 75, 76, 77, 81, 82, 83, 84, 85, 90, 91, 95, 96, 97, 98, 102, 105, 106, 111, 112, 115, 116, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 140, 148, 150, 154, 162, 163, 165, 166, 167, 172, 173, 174, 175, 179, 185, 187, 188, 189, 190, 191, 194, 196, 199, 204, 205, 206, 210, 211, 212, 214, 215, 217, 219], "x": [1, 2, 4, 8, 9, 10, 11, 25, 31, 32, 37, 39, 40, 48, 49, 50, 53, 55, 56, 58, 65, 66, 67, 73, 74, 79, 81, 83, 87, 90, 94, 95, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 119, 124, 125, 127, 131, 134, 135, 137, 142, 143, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 168, 172, 174, 175, 178, 179, 180, 182, 183, 185, 187, 188, 189, 196, 199, 204, 206, 210, 211, 212, 214, 217, 219], "tas": [1, 84, 138], "heap": [1, 84, 123], "fibonacc": [1, 75], "judy": 1, "array": [1, 25, 29, 34, 37, 39, 47, 50, 51, 52, 53, 55, 56, 65, 66, 73, 74, 78, 79, 80, 81, 82, 84, 88, 89, 97, 105, 106, 109, 110, 111, 112, 113, 117, 124, 131, 134, 135, 144, 146, 147, 150, 151, 154, 155, 158, 159, 160, 162, 163, 166, 167, 175, 177, 190, 193, 215, 217], "sit": [1, 3, 4, 16, 19, 38, 44, 49, 50, 53, 55, 67, 69, 70, 82, 92, 113, 145, 147, 149, 160, 164, 165, 166, 167, 178, 183, 184, 187, 200, 202, 207, 211, 214, 219], "mapping": [1, 49, 105, 118], "int": [1, 4, 7, 9, 10, 11, 13, 29, 31, 36, 44, 48, 49, 50, 65, 67, 73, 80, 83, 87, 96, 98, 100, 101, 104, 107, 108, 113, 126, 128, 131, 135, 136, 137, 153, 174, 175, 177, 178, 179, 181, 196, 199, 210, 211, 215, 217], "efficac": [1, 2, 25, 34, 36, 48, 53, 58, 80, 83, 84, 87, 90, 91, 96, 102, 118, 131, 138, 153, 196, 205, 206, 210, 215, 217], "traditionnel": [1, 69], "propriet": [1, 58, 65, 74, 80, 161, 162, 170, 175, 187], "cach": [1, 4, 39, 49, 55, 60, 63, 64, 65, 67, 107, 108, 114, 187, 196, 198, 210, 211], "processeur": [1, 50, 146, 210, 217], "compos": [1, 14, 15, 19, 33, 53, 55, 56, 65, 91, 119, 124, 128, 146, 158, 159, 204, 210, 211, 214], "connex": [1, 7, 15, 19, 53, 56, 91, 119, 158, 159, 202], "parcour": [1, 10, 28, 31, 40, 49, 56, 58, 65, 73, 79, 83, 85, 87, 92, 94, 95, 102, 117, 129, 141, 150, 168, 169, 172, 175, 186, 187, 188, 196, 199, 210, 211, 217], "profondeur": [1, 53, 102], "largeur": [1, 53, 66, 80, 102, 115, 150, 204], "orient": [1, 10, 56, 65, 74, 80, 138, 211], "acycl": [1, 102], "degr": [1, 7, 56, 74, 80, 91, 151, 158, 172, 210], "floyd": [1, 167], "flukerson": 1, "cut": [1, 64, 103], "maximum": [1, 6, 9, 10, 12, 47, 48, 50, 53, 65, 66, 78, 79, 90, 92, 104, 106, 113, 117, 131], "bi": [1, 48, 53, 167, 179, 196, 204], "pagerank": 1, "appari": [1, 9, 49, 91, 163, 167], "edmond": [1, 91], "blossum": 1, "hopcroft": [1, 167], "karp": [1, 167], "blossom": [1, 167], "5": [1, 2, 4, 6, 7, 9, 10, 11, 12, 24, 25, 28, 29, 31, 32, 33, 34, 36, 37, 39, 40, 44, 47, 48, 50, 51, 52, 53, 58, 65, 66, 67, 70, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 168, 169, 170, 172, 173, 175, 177, 180, 181, 182, 183, 184, 185, 190, 191, 193, 194, 196, 198, 199, 204, 206, 207, 210, 211, 212, 214, 217, 219], "couplag": [1, 91, 167], "gal": 1, "shapley": 1, "mariag": [1, 111, 112], "stabl": [1, 48, 51, 53, 63, 66, 124], "robinson": 1, "fould": 1, "robustess": [1, 53], "r\u00e9seau": [1, 73, 80, 162], "quantifying": 1, "robustness": 1, "metro": [1, 51, 53], "network": [1, 90, 158], "d\u00e9tect": [1, 39, 53, 65, 151, 153, 179, 185, 196, 199, 200, 204, 207, 210, 219], "motif": [1, 140, 182, 183], "fr\u00e9quent": [1, 2, 9, 37, 49, 53, 55, 59, 62, 73, 84, 90, 92, 114, 141, 146, 150, 172, 178, 184, 196, 199, 204, 208, 209, 210, 211, 212, 215, 217], "fp": [1, 11], "growth": [1, 149], "text": [1, 2, 4, 11, 28, 31, 33, 40, 49, 51, 53, 55, 56, 58, 60, 66, 67, 70, 73, 78, 83, 92, 105, 106, 118, 123, 124, 125, 140, 141, 145, 146, 158, 159, 170, 172, 175, 180, 186, 188, 199, 200, 206, 208, 210, 211, 213, 214, 215, 217, 219], "knuth": 1, "morr": 1, "pratt": 1, "rabin": 1, "jaccard": 1, "gramm": 1, "aho": 1, "corasick": 1, "auss": [1, 2, 4, 10, 14, 19, 20, 25, 28, 31, 32, 37, 38, 39, 40, 44, 48, 49, 50, 51, 53, 55, 56, 58, 65, 66, 67, 70, 77, 80, 81, 84, 90, 91, 109, 110, 111, 114, 115, 124, 128, 134, 137, 139, 145, 146, 147, 150, 152, 154, 155, 158, 162, 163, 172, 175, 179, 181, 184, 186, 187, 188, 194, 196, 199, 200, 202, 204, 206, 210, 211, 212, 214, 215, 217, 219], "commentz": 1, "walt": 1, "burrow": 1, "wheel": [1, 16, 204], "aprior": 1, "apprentissag": [1, 25, 125, 161, 164, 204], "regl": [1, 28, 50, 53, 56, 57, 58, 65, 77, 162, 175, 178, 179, 196, 200, 202, 204, 210, 211, 212], "associ": [1, 2, 3, 10, 14, 28, 49, 50, 53, 56, 58, 65, 66, 70, 74, 83, 87, 96, 105, 111, 112, 146, 150, 158, 159, 163, 172, 175, 181, 187, 190, 196, 199, 205, 206, 207, 210, 211, 212, 214, 217, 219], "boi": 1, "moor": 1, "string": [1, 11, 38, 48, 49, 65, 66, 140, 141, 147, 166, 167, 178, 204, 210, 211, 212, 214], "simplex": 1, "lin\u00e9air": [1, 47, 53, 58, 73, 84, 105, 106, 107, 108, 109, 110, 125, 137, 143, 153, 154, 155, 161, 204, 214], "thes": [1, 11, 166, 167, 204], "neld": [1, 48], "mead": [1, 48], "codag": 1, "huffman": [1, 90], "lz77": 1, "lz78": 1, "bootstrap": 1, "intervall": [1, 2, 29, 31, 50, 53, 58, 65, 79, 81, 91, 106, 107, 108, 109, 134, 156, 157, 164, 165, 174, 175, 206, 214, 217], "confianc": [1, 53, 124, 175], "filtr": [1, 7, 125, 145, 212, 219], "bloom": 1, "woodbury": 1, "identity": [1, 50, 117, 193], "blockwis": 1, "invers": [1, 6, 10, 28, 37, 39, 40, 47, 48, 49, 53, 56, 65, 66, 73, 81, 104, 114, 118, 128, 141, 150, 154, 169, 178, 179, 183, 196, 199, 204, 208, 211, 212, 215, 217], "toom": 1, "cook": 1, "canopy": 1, "clustering": [1, 14, 55, 58, 119], "lru": 1, "last": [1, 2, 4, 49, 60, 61, 65, 67, 84, 85, 87, 95, 96, 98, 99, 104, 109, 163, 196, 199, 200, 204, 206, 210, 211, 219], "recent": [1, 2, 4, 49, 60, 65, 67, 95, 96, 98, 99, 104, 163, 196, 199, 200, 204, 206, 210, 211, 219], "used": [1, 4, 11, 28, 214], "yield": [1, 37, 95, 127, 149, 153, 196, 210], "m\u00e9mo\u00efz": 1, "fonction": [1, 4, 7, 10, 14, 19, 25, 30, 31, 32, 36, 38, 39, 40, 48, 53, 55, 62, 67, 70, 74, 75, 76, 77, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 123, 124, 126, 127, 128, 129, 130, 132, 134, 137, 140, 143, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 174, 177, 178, 184, 185, 186, 187, 188, 190, 191, 193, 194, 198, 199, 200, 202, 205, 207, 208, 212, 214, 215, 217, 220], "fonctionnel": [1, 36, 65, 70, 196], "r\u00e9curs": [1, 2, 28, 65, 75, 76, 77, 79, 102, 114, 141, 162, 165, 194, 211, 212, 217], "kahan": 1, "summat": [1, 166, 167], "probabil": [1, 139], "probabilistic": 1, "dat": [1, 2, 3, 7, 14, 35, 37, 38, 44, 48, 51, 53, 66, 68, 73, 81, 82, 113, 124, 138, 140, 141, 144, 146, 149, 158, 173, 178, 179, 196, 204, 209, 211, 212, 214, 215, 219], "web": [1, 2, 15, 65, 67, 70, 123, 178, 179, 202, 207, 215, 216], "analytic": 1, "mining": 1, "compress": [1, 74, 90, 141, 178, 186, 212], "lzfse": 1, "lzma": 1, "squash": 1, "benchmark": [1, 48], "inspir": [1, 28, 31, 48, 53, 56, 80, 90, 91, 102, 106, 111, 112, 134, 137, 152, 162, 165, 179, 182, 183], "quantiqu": [1, 19, 70], "quantum": 1, "inspired": [1, 4], "classical": 1, "recommend": 1, "system": [1, 4, 44, 48, 49, 53, 67, 74, 79, 81, 90, 105, 106, 156, 157, 207, 208, 211, 212, 214, 217, 219], "beaucoup": [1, 6, 7, 14, 18, 28, 31, 49, 50, 53, 55, 56, 57, 58, 65, 66, 67, 69, 70, 77, 80, 83, 87, 96, 97, 102, 104, 108, 110, 125, 133, 134, 146, 150, 153, 162, 168, 169, 172, 173, 178, 179, 180, 185, 196, 198, 204, 208, 211, 212, 215, 217, 219], "projet": [1, 44, 51, 53, 55, 168, 198, 214], "thealgorithm": 1, "modul": [1, 2, 6, 11, 12, 13, 14, 30, 31, 37, 44, 47, 48, 49, 56, 60, 61, 62, 91, 95, 96, 98, 99, 104, 105, 106, 107, 108, 123, 124, 126, 133, 134, 137, 140, 141, 146, 149, 150, 152, 154, 155, 158, 160, 162, 163, 185, 186, 196, 199, 200, 202, 204, 205, 206, 207, 210, 211, 212, 215, 216, 217, 219, 220], "classiqu": [1, 6, 47, 48, 52, 53, 55, 67, 84, 85, 90, 115, 178, 188, 197, 203, 209], "binair": [1, 53, 65, 73, 80, 86, 105, 107, 115, 129, 141, 143, 161, 179, 187, 211, 213], "mersen": 1, "heapsort": 1, "distingu": [1, 4, 49, 53, 65, 67, 80, 91, 132, 172, 178, 184, 196, 210, 211], "trois": [1, 2, 18, 28, 36, 39, 44, 49, 53, 55, 56, 58, 62, 66, 79, 83, 87, 90, 92, 102, 125, 128, 130, 132, 136, 148, 154, 155, 166, 167, 170, 172, 178, 179, 180, 183, 186, 188, 196, 199, 204, 206, 209, 211, 212, 214, 217, 219], "class": [1, 11, 15, 19, 20, 25, 39, 44, 48, 49, 53, 55, 62, 70, 81, 94, 102, 124, 125, 127, 137, 138, 141, 149, 150, 158, 159, 160, 162, 163, 179, 186, 187, 188, 202, 205, 207, 208, 210, 211, 212, 214, 215, 217, 219, 220], "p": [1, 9, 10, 11, 25, 28, 29, 31, 38, 53, 56, 61, 64, 65, 73, 80, 83, 84, 88, 89, 90, 92, 102, 104, 109, 110, 113, 117, 126, 128, 130, 131, 133, 134, 137, 141, 145, 146, 147, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 175, 179, 185, 188, 190, 191, 193, 194, 196, 205, 210, 212, 219], "Un": [1, 4, 7, 15, 25, 28, 31, 33, 36, 38, 39, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 65, 66, 67, 74, 78, 83, 92, 95, 104, 105, 107, 108, 109, 110, 111, 112, 123, 124, 126, 127, 130, 140, 141, 143, 150, 156, 157, 164, 168, 172, 176, 177, 178, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 202, 204, 208, 210, 212, 213, 215], "appartient": [1, 36, 55, 56, 79, 80, 106, 134, 146, 150, 158, 159, 186, 196, 204, 210, 211, 219], "\u00eatre": [1, 2, 4, 14, 28, 37, 39, 40, 48, 49, 51, 53, 55, 56, 57, 58, 60, 65, 66, 67, 70, 73, 74, 77, 80, 81, 87, 89, 90, 91, 92, 96, 102, 104, 106, 107, 108, 109, 110, 113, 114, 124, 125, 126, 127, 128, 130, 140, 141, 143, 145, 146, 148, 150, 151, 152, 154, 162, 163, 164, 168, 172, 173, 174, 178, 179, 184, 185, 186, 187, 188, 196, 199, 202, 204, 206, 208, 210, 211, 212, 214, 217, 219], "d\u00e9cid": [1, 31, 53, 65, 77, 90, 91, 114, 179, 199], "polyn\u00f4mial": [1, 40, 55, 58, 88, 162, 167], "d\u00e9cis": [1, 25, 53, 57, 58, 66, 187], "turing": 1, "polynomial": [1, 91, 158], "rapport": [1, 28, 44, 53, 55, 66, 70, 73, 91, 107, 108, 110, 114, 124, 145, 153, 161, 170, 196, 198, 204, 210, 216, 217], "taill": [1, 9, 10, 12, 13, 39, 48, 49, 50, 56, 58, 65, 70, 83, 84, 90, 92, 102, 106, 107, 108, 111, 112, 113, 137, 139, 143, 150, 153, 162, 163, 164, 175, 186, 187, 188, 189, 190, 196, 204, 210, 211, 212, 215, 217], "entr\u00e9": [1, 4, 36, 47, 48, 67, 69, 73, 113, 126, 128, 137, 152, 172, 178, 179, 188, 196, 199, 200, 204, 206, 208, 210, 220], "impliqu": [1, 30, 37, 48, 50, 53, 65, 66, 81, 94, 110, 134, 196, 204, 210, 212], "possibl": [1, 2, 4, 6, 7, 17, 28, 31, 35, 37, 39, 40, 48, 49, 51, 53, 55, 56, 58, 65, 66, 67, 70, 74, 75, 76, 79, 80, 81, 82, 90, 91, 97, 104, 110, 111, 112, 113, 117, 119, 131, 135, 138, 139, 141, 150, 156, 157, 158, 159, 161, 162, 163, 166, 167, 169, 170, 172, 178, 179, 180, 184, 185, 186, 187, 190, 196, 199, 200, 202, 204, 206, 208, 211, 212, 214, 215, 217, 219], "v\u00e9rifi": [1, 7, 14, 31, 36, 39, 44, 51, 53, 56, 58, 60, 65, 66, 70, 73, 77, 79, 80, 89, 90, 94, 96, 106, 107, 108, 109, 110, 115, 124, 126, 128, 129, 140, 150, 154, 155, 158, 169, 177, 186, 190, 202, 204, 210, 211, 212, 214, 217, 219], "admet": [1, 58, 106, 175], "capabl": [1, 31, 57, 88, 128, 158, 184, 196, 204, 212, 214, 217], "pr\u00e9cis": [1, 4, 25, 38, 48, 49, 53, 65, 66, 67, 70, 78, 104, 106, 109, 110, 114, 124, 134, 139, 168, 179, 180, 186, 196, 199, 200, 204, 208, 210, 211, 212, 214, 215, 217, 219], "r\u00e9duct": [1, 50, 116], "f": [1, 2, 4, 9, 11, 12, 29, 32, 37, 38, 44, 48, 49, 51, 56, 58, 61, 65, 67, 73, 75, 78, 79, 83, 85, 90, 91, 96, 97, 100, 101, 104, 106, 107, 108, 118, 126, 127, 128, 130, 134, 136, 137, 141, 146, 152, 162, 168, 172, 173, 174, 175, 178, 179, 181, 185, 187, 188, 190, 193, 196, 199, 200, 204, 206, 208, 210, 212, 214, 217, 219], "bpp": 1, "objet": [1, 2, 4, 19, 28, 30, 34, 48, 49, 53, 58, 65, 66, 67, 128, 130, 132, 141, 149, 150, 168, 170, 172, 173, 185, 187, 196, 199, 203, 205, 206, 207, 210, 214, 215, 217, 219], "th\u00e9or": [1, 196], "informat": [1, 28, 39, 53, 65, 132, 141, 168, 175, 196, 198, 208, 210, 212], "th\u00e9oriqu": [1, 14, 53, 66, 73, 127, 187], "d\u00e9fin": [1, 4, 7, 9, 10, 28, 31, 32, 36, 39, 48, 50, 51, 53, 55, 56, 58, 65, 66, 67, 74, 78, 80, 107, 109, 110, 126, 128, 130, 132, 134, 141, 154, 158, 162, 168, 172, 178, 179, 185, 186, 187, 188, 196, 200, 201, 202, 204, 208, 210, 211, 212, 214, 215, 217, 219], "acronym": [1, 172], "vient": [1, 39, 53, 79, 89, 90, 91, 99, 125, 133, 134, 148, 168, 171, 180, 196, 204, 210, 212], "bounded": 1, "error": [1, 38, 81, 200], "tim": [1, 4, 11, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 53, 55, 56, 67, 73, 80, 83, 84, 86, 87, 89, 114, 125, 133, 134, 145, 146, 147, 151, 153, 154, 155, 158, 160, 161, 166, 167, 169, 173, 185, 186, 187, 196, 204, 207, 214, 217], "encor": [1, 4, 9, 14, 20, 32, 36, 39, 48, 49, 53, 55, 56, 65, 67, 70, 73, 77, 79, 82, 83, 84, 87, 91, 92, 98, 99, 109, 110, 117, 118, 126, 128, 136, 145, 162, 163, 164, 168, 169, 179, 183, 184, 187, 196, 198, 202, 205, 210, 211, 212, 214, 217, 219], "irr\u00e9solu": 1, "Une": [1, 2, 4, 14, 28, 31, 32, 36, 49, 53, 56, 57, 58, 65, 66, 67, 70, 73, 75, 76, 78, 82, 84, 85, 87, 90, 96, 102, 104, 109, 110, 111, 112, 118, 123, 126, 135, 139, 142, 150, 161, 165, 168, 170, 172, 175, 180, 181, 186, 196, 199, 204, 206, 207, 210, 211, 212, 214, 215, 217, 219], "preuv": 1, "cour": [1, 14, 49, 55, 56, 57, 65, 80, 81, 86, 113, 133, 151, 178, 187, 199, 204, 210, 211, 212, 217], "logiqu": [1, 28, 49, 65, 66, 127, 178, 198, 204, 211, 215], "423": 1, "m\u00eam": [1, 4, 6, 10, 14, 18, 20, 25, 28, 30, 31, 32, 34, 36, 37, 39, 40, 48, 49, 50, 55, 56, 58, 60, 65, 66, 67, 70, 75, 80, 81, 83, 84, 88, 89, 91, 92, 94, 96, 102, 104, 105, 107, 108, 110, 111, 112, 113, 118, 119, 125, 127, 128, 129, 130, 132, 133, 134, 138, 140, 141, 145, 146, 147, 148, 149, 150, 152, 153, 158, 161, 162, 163, 168, 169, 170, 172, 173, 175, 177, 179, 180, 181, 185, 186, 187, 188, 190, 193, 194, 196, 199, 200, 204, 207, 208, 210, 211, 212, 214, 215, 217, 219], "r\u00e9duir": [1, 14, 32, 49, 53, 56, 65, 70, 125, 183, 188, 211, 212, 215], "fa\u00e7on": [1, 2, 4, 7, 14, 18, 28, 31, 37, 38, 40, 44, 48, 49, 50, 53, 54, 55, 56, 57, 58, 67, 69, 70, 74, 77, 79, 80, 81, 84, 86, 87, 91, 95, 98, 99, 105, 106, 107, 109, 111, 112, 114, 116, 117, 119, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 138, 141, 145, 146, 150, 151, 158, 162, 168, 172, 178, 179, 184, 185, 186, 189, 194, 196, 199, 200, 204, 206, 208, 210, 211, 212, 214, 216, 217], "dont": [1, 2, 4, 14, 25, 28, 36, 39, 44, 49, 50, 53, 56, 57, 58, 65, 66, 67, 73, 79, 80, 95, 109, 110, 111, 112, 115, 126, 128, 137, 148, 150, 152, 162, 164, 175, 179, 184, 185, 186, 187, 196, 199, 200, 204, 206, 208, 210, 211, 212, 214, 217, 219], "cherch": [1, 2, 4, 31, 36, 48, 49, 51, 53, 56, 58, 65, 67, 70, 79, 82, 84, 90, 91, 92, 102, 104, 105, 106, 109, 110, 111, 112, 115, 117, 128, 131, 134, 139, 145, 148, 149, 152, 154, 155, 156, 157, 158, 162, 165, 166, 167, 172, 174, 181, 184, 188, 189, 190, 194, 196, 198, 199, 204, 206, 210, 211, 214, 219], "puiss": [1, 28, 104, 164, 178, 179, 196, 204], "r\u00e9ciproqu": [1, 2, 36, 65, 104, 135, 141, 172, 196, 204, 208, 210, 211, 212, 215], "premi": [1, 4, 6, 7, 15, 18, 19, 25, 28, 31, 32, 36, 39, 40, 44, 47, 48, 49, 50, 53, 55, 56, 58, 65, 66, 67, 70, 73, 75, 76, 77, 78, 79, 80, 83, 85, 87, 90, 92, 94, 95, 96, 98, 99, 102, 104, 105, 107, 108, 109, 111, 112, 114, 115, 116, 119, 123, 124, 127, 128, 130, 132, 135, 136, 138, 141, 145, 148, 150, 153, 154, 155, 158, 159, 161, 162, 163, 169, 170, 172, 177, 178, 179, 183, 184, 186, 187, 188, 189, 194, 196, 199, 200, 202, 204, 208, 210, 211, 212, 214, 215, 216, 219], "lequel": [1, 4, 7, 49, 55, 65, 67, 70, 73, 75, 78, 89, 91, 97, 162, 163, 167, 172, 173, 196, 205, 208, 210, 211, 212, 214, 217], "compl\u00e9tud": 1, "th\u00e9orem": [1, 57, 58, 124, 128, 175], "stephen": [1, 53], "sat": 1, "\u00e9quivalent": [1, 2, 28, 31, 32, 36, 40, 49, 53, 65, 106, 127, 133, 136, 161, 163, 164, 165, 166, 167, 168, 178, 187, 196, 199, 204, 206, 210, 211, 212, 216, 219], "pr\u00e9sentent": [1, 53, 141, 178, 204, 212], "sous": [1, 2, 8, 10, 14, 21, 25, 36, 44, 48, 49, 51, 53, 54, 55, 56, 58, 65, 66, 70, 73, 74, 76, 83, 91, 92, 95, 100, 101, 119, 124, 138, 141, 150, 162, 163, 164, 168, 178, 179, 188, 196, 199, 202, 210, 211, 212, 214, 215, 217, 219], "or": [1, 2, 4, 11, 25, 28, 38, 39, 40, 44, 48, 51, 53, 65, 71, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 89, 91, 92, 95, 96, 98, 102, 106, 107, 108, 109, 110, 115, 124, 126, 127, 136, 138, 146, 152, 160, 164, 165, 166, 167, 170, 171, 175, 190, 191, 193, 199, 204, 206, 210, 211, 214, 215, 219], "acc": [1, 53, 56], "v\u00e9rif": [1, 31, 36, 39, 48, 49, 53, 56, 58, 60, 65, 70, 73, 74, 76, 77, 78, 81, 87, 90, 91, 94, 95, 96, 102, 104, 105, 107, 108, 109, 124, 126, 128, 130, 134, 143, 150, 154, 155, 162, 175, 177, 178, 187, 189, 193, 196, 200, 204, 210, 211, 214, 217, 219], "claus": [1, 28, 188, 199, 210], "vee_k": 1, "y_": [1, 29, 58], "1k": [1, 58], "wedg": 1, "n_k": 1, "k": [1, 2, 6, 7, 10, 31, 36, 37, 44, 47, 48, 49, 55, 56, 58, 65, 73, 75, 79, 80, 81, 83, 86, 87, 90, 91, 92, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 119, 124, 127, 128, 134, 135, 143, 144, 146, 150, 153, 159, 163, 164, 165, 172, 173, 175, 185, 186, 187, 189, 193, 194, 196, 206, 210, 211, 219], "ik": [1, 40, 80], "x_i": [1, 48, 58, 73, 105, 106, 107, 108, 109, 110, 124, 156, 157, 158, 159, 161, 175], "neg": [1, 49], "pass": [1, 2, 4, 10, 14, 19, 30, 31, 33, 35, 36, 37, 39, 40, 48, 49, 51, 53, 55, 56, 57, 58, 65, 67, 74, 79, 81, 84, 85, 91, 96, 104, 107, 108, 109, 118, 119, 127, 128, 135, 138, 140, 145, 146, 147, 149, 150, 152, 160, 161, 162, 165, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 187, 188, 189, 194, 196, 199, 202, 204, 206, 208, 211, 212, 214, 215, 216, 217, 219], "\u00e9valu": [1, 14, 25, 39, 48, 53, 93, 210, 211], "sup\u00e9rieur": [1, 2, 25, 53, 66, 70, 80, 84, 91, 104, 105, 106, 108, 109, 110, 148, 188, 193, 204, 206, 210, 211, 212], "certain": [1, 4, 9, 14, 37, 40, 44, 49, 50, 51, 53, 54, 55, 56, 60, 65, 66, 67, 70, 73, 79, 95, 104, 127, 129, 133, 148, 149, 162, 168, 170, 175, 178, 179, 184, 194, 196, 198, 199, 202, 204, 207, 210, 211, 212, 214, 215, 217, 219], "seuil": [1, 7, 25, 53, 73, 91, 124], "wikip\u00e9di": [1, 49, 76, 141, 182, 183], "version": [1, 2, 4, 16, 35, 37, 38, 39, 40, 48, 49, 51, 53, 58, 61, 64, 65, 66, 67, 70, 76, 79, 87, 90, 102, 107, 108, 134, 141, 142, 145, 146, 169, 170, 175, 179, 181, 185, 188, 190, 196, 204, 205, 206, 208, 210, 211, 212, 214, 217, 219], "fran\u00e7ais": [1, 57, 58], "concept": [1, 39, 53, 58, 65, 168, 196, 198, 204, 209, 217], "statist": [1, 14, 47, 49, 53, 58, 66, 80, 145, 146, 151, 185], "introduct": [1, 44, 49, 53, 69, 81, 203], "\u00e9chantillon": [1, 48, 49, 89, 91, 154, 155, 162], "markov": [1, 55, 58, 190], "central": [1, 2, 175, 206], "flow": [1, 166, 167], "blossom5": 1, "matching": 1, "local": [1, 3, 4, 11, 32, 44, 53, 58, 64, 65, 146, 149, 160, 196, 200, 208, 212, 215, 217], "max": [1, 6, 10, 29, 47, 48, 49, 50, 51, 53, 65, 66, 73, 77, 78, 79, 81, 83, 85, 87, 91, 106, 109, 110, 112, 117, 125, 126, 127, 129, 131, 139, 143, 150, 158, 159, 165, 169, 175, 187, 188, 196, 210, 211, 219], "smoothed": 1, "expand": [1, 204], "geometric": 1, "embedding": 1, "partitioning": 1, "partitionning": 1, "read": [1, 29, 37, 38, 49, 51, 64, 92, 141, 149, 178, 179, 185, 200, 208, 212, 215, 217, 219], "optimized": 1, "period": 1, "order": [1, 28, 48, 53, 109, 141, 166, 167, 196, 199], "preserving": 1, "recurs": [1, 28, 61, 107, 108, 146, 172], "gram": 1, "hashing": [1, 58], "is": [1, 4, 10, 11, 25, 28, 29, 31, 37, 44, 48, 50, 51, 61, 71, 76, 77, 79, 81, 82, 83, 84, 85, 89, 90, 95, 96, 99, 106, 107, 108, 109, 110, 114, 115, 118, 124, 126, 127, 135, 140, 146, 152, 160, 163, 165, 166, 167, 175, 187, 190, 191, 194, 196, 204, 210, 211, 214, 215, 217, 219], "pairwis": [1, 117], "independent": 1, "at": [1, 4, 11, 24, 25, 28, 37, 40, 48, 49, 53, 65, 73, 95, 100, 101, 107, 108, 114, 126, 127, 166, 167, 168, 179, 204, 208, 210, 211, 215], "best": [1, 28, 79, 81, 83, 88, 104, 110, 111, 112, 140, 163, 165, 191], "hash": [1, 141, 173], "featur": [1, 44, 179], "classif": [1, 5, 14, 124, 161, 184], "malwar": 1, "detect": [1, 51, 179, 185], "computing": 1, "deriv": 1, "tensor": 1, "express": [1, 10, 39, 48, 49, 65, 66, 71, 102, 106, 123, 126, 129, 135, 150, 162, 196, 210, 211, 212, 214, 220], "prec": [1, 25, 39, 44, 48, 53, 58, 69, 75, 79, 95, 96, 102, 104, 150, 162, 172, 174, 175, 200, 202, 204, 208, 210, 211, 219], "op\u00e9rationnel": [1, 4, 67, 190], "robert": 1, "faur": 1, "bernard": [1, 179], "lemair": 1, "christoph": 1, "picouleau": 1, "programming": [1, 17, 164], "pearl": 1, "jon": 1, "bentley": 1, "3rd": [1, 53], "edit": [1, 4, 53, 63, 77, 204], "thom": 1, "cormen": 1, "charl": [1, 92, 132], "e": [1, 6, 11, 25, 31, 36, 37, 38, 39, 47, 48, 49, 50, 51, 53, 56, 65, 73, 76, 83, 84, 90, 91, 92, 93, 113, 116, 118, 125, 126, 127, 129, 137, 140, 149, 150, 153, 158, 159, 162, 163, 164, 172, 173, 177, 179, 180, 181, 184, 185, 188, 190, 194, 196, 199, 200, 204, 205, 210, 211, 212, 214, 215, 217, 219], "leiserson": 1, "ronald": 1, "rivest": 1, "clifford": 1, "stein": 1, "128": [1, 79, 86, 102, 131, 200], "compr": [1, 2, 50, 53, 65, 67, 124, 169, 170, 172, 179, 187, 196, 204, 210, 211, 219], "cod": [1, 2, 4, 6, 11, 16, 19, 21, 22, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 55, 57, 60, 66, 67, 68, 69, 70, 73, 77, 85, 90, 91, 93, 95, 96, 97, 99, 105, 107, 108, 109, 110, 114, 115, 119, 123, 126, 127, 128, 130, 136, 137, 138, 141, 146, 147, 150, 156, 157, 160, 164, 165, 166, 167, 168, 170, 178, 179, 180, 186, 187, 188, 196, 198, 199, 200, 202, 204, 206, 208, 210, 211, 212, 214, 215, 217], "vi": [1, 2, 4, 14, 16, 37, 44, 48, 49, 53, 58, 66, 67, 77, 104, 133, 164, 178, 179, 196, 204, 210, 212, 215, 217], "accompagn": [1, 4, 53, 66, 67], "r\u00e9pertoir": [1, 4, 7, 12, 13, 65, 67, 152, 178, 204, 212, 214, 219], "github": [1, 7, 19, 25, 37, 44, 48, 49, 50, 51, 52, 60, 61, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 200, 204, 214], "tryalgo": 1, "document": [1, 25, 48, 49, 51, 58, 71, 124, 150, 160, 178, 196, 199, 204, 208, 211, 214, 217], "r\u00e9solu": [1, 18, 22, 27, 41, 44, 53, 80, 90, 119, 138, 211, 221], "Des": [1, 19, 53, 62, 70, 211], "appliqu": [1, 2, 7, 15, 25, 37, 39, 49, 53, 55, 57, 58, 65, 66, 70, 73, 76, 77, 81, 85, 89, 90, 104, 105, 114, 123, 125, 126, 127, 128, 132, 136, 140, 141, 145, 151, 154, 158, 159, 162, 168, 178, 184, 186, 188, 189, 193, 196, 199, 200, 204, 206, 210, 211, 212, 214, 215, 217, 219], "efficient": [1, 50, 53, 91], "practical": 1, "preconditioning": 1, "solving": 1, "laplacian": 1, "survey": 1, "driven": [1, 53, 66], "dictionary": [1, 2, 4, 7, 11, 91, 196, 204, 206, 211, 214], "based": [1, 11, 55, 81, 166, 167], "method": [1, 11, 28, 48, 51, 53, 145, 146, 147, 160, 196, 199, 200, 204, 211, 214], "3d": [1, 48], "modeling": [1, 53], "project": [1, 4, 44, 48, 55, 67], "eul": [1, 48, 91], "archiv": 1, "jam": [1, 9, 14, 21, 25, 40, 48, 51, 53, 56, 57, 58, 65, 79, 95, 96, 103, 104, 134, 141, 164, 165, 166, 167, 172, 179, 196, 199, 200, 204, 210, 211, 217, 219], "2020": [1, 51, 81, 93], "2019": [1, 93], "2018": [1, 93, 141], "2017": [1, 58, 93, 207], "earli": 1, "leetcod": 1, "comp\u00e9tit": [1, 53], "recensent": [1, 113], "plusieur": [1, 4, 14, 28, 31, 40, 44, 48, 50, 51, 53, 55, 56, 57, 58, 60, 65, 66, 67, 70, 73, 74, 78, 89, 105, 106, 108, 109, 110, 111, 112, 115, 119, 125, 131, 142, 145, 152, 162, 163, 165, 167, 168, 170, 175, 177, 178, 179, 185, 186, 188, 196, 199, 208, 211, 212, 213, 216, 217, 219], "ci": [1, 2, 16, 25, 37, 40, 48, 50, 51, 53, 55, 56, 58, 65, 67, 70, 73, 76, 78, 82, 84, 90, 96, 102, 104, 106, 107, 108, 113, 115, 124, 125, 128, 130, 135, 141, 149, 150, 153, 161, 162, 168, 178, 180, 184, 187, 196, 199, 200, 202, 204, 205, 206, 207, 210, 211, 212, 214, 215, 217, 219], "southwestern": 1, "europ": [1, 44, 179], "regional": 1, "contest": 1, "swerc": 1, "pr\u00e9c\u00e9dent": [1, 15, 19, 20, 36, 48, 49, 53, 55, 56, 65, 66, 75, 76, 77, 78, 79, 80, 82, 84, 85, 91, 102, 104, 105, 106, 107, 108, 109, 110, 115, 131, 134, 136, 139, 150, 152, 154, 155, 158, 161, 165, 170, 172, 173, 174, 178, 181, 183, 187, 188, 196, 199, 200, 204, 208, 210, 211, 212, 214, 217, 219], "acm": 1, "icpc": 1, "liv": 1, "castor": 1, "jeun": [1, 158, 159, 179], "coding": [1, 2, 67, 70, 178, 179, 204, 208, 211], "you": [1, 11, 29, 44, 61, 166, 167, 196], "should": [1, 29, 146], "know": [1, 6, 28], "least": [1, 28, 106, 114], "languag": [1, 51, 78, 83, 141, 179, 185, 187, 211, 215], "really": 1, "wel": [1, 11], "it": [1, 11, 29, 37, 40, 48, 61, 81, 88, 91, 106, 111, 112, 166, 167, 196, 204, 210], "preferably": 1, "be": [1, 2, 4, 10, 11, 28, 44, 48, 51, 61, 71, 81, 146, 166, 167, 179, 194, 204, 206, 210], "jav": [1, 63], "ok": [1, 29, 196, 204, 210], "too": [1, 61, 125, 166, 167, 210], "sinc": [1, 61, 166, 167], "pretty": 1, "similar": 1, "will": [1, 11, 44, 61, 81, 166, 167, 204], "expected": [1, 29, 80, 81, 125, 126, 151, 210], "writ": [1, 29, 38, 49, 51, 65, 138, 141, 178, 179, 185, 199, 200, 212], "som": [1, 28, 29, 55, 61], "your": [1, 61], "interview": [1, 53], "amount": 1, "detail": [1, 2, 67, 70, 138, 204, 211], "about": [1, 2, 4, 6, 14, 39, 53, 56, 57, 65, 77, 80, 102, 105, 128, 136, 162, 166, 167, 204, 206, 211, 215, 217], "favorit": 1, "sorting": [1, 211], "how": [1, 4, 29, 48, 49, 67, 105, 166, 167, 173, 200, 211], "do": [1, 11, 16, 38, 48, 61, 64, 71, 95, 96, 166, 167, 179, 196, 200, 210, 211], "bubbl": 1, "log": [1, 48, 61, 63, 69, 73, 81, 95, 105, 124, 127, 138, 153, 172, 175, 179, 187, 189, 200, 202, 212, 214, 217], "two": [1, 10, 11, 12, 13, 28, 29, 48, 49, 53, 81, 114, 166, 167], "say": 1, "quick": [1, 48], "merg": [1, 51, 61, 71, 138], "can": [1, 2, 4, 11, 29, 37, 44, 48, 61, 67, 98, 200, 204, 205, 206], "highly": 1, "useful": [1, 11], "situat": [1, 53, 196, 198, 210, 217], "wher": [1, 4, 13, 48, 49, 166, 167, 204], "impractical": 1, "so": [1, 10, 29, 71, 81, 166, 167], "tak": [1, 10, 50], "look": [1, 11, 48], "hashtabl": 1, "arguably": 1, "singl": [1, 51], "most": [1, 2, 4, 49, 60, 65, 67, 95, 96, 98, 99, 104, 163, 166, 167, 196, 199, 200, 204, 206, 210, 211, 214, 219], "import": [1, 2, 4, 6, 11, 12, 13, 14, 24, 25, 28, 29, 30, 33, 34, 35, 37, 39, 40, 44, 47, 48, 49, 50, 51, 52, 53, 55, 56, 61, 64, 65, 67, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 199, 200, 202, 205, 206, 207, 208, 210, 211, 212, 215, 217, 219], "known": 1, "mankind": 1, "absolutely": 1, "they": [1, 53, 61, 204, 214], "work": [1, 38], "able": 1, "only": [1, 4, 10, 11, 214], "spac": [1, 10, 73, 125, 146], "basic": [1, 6, 67], "construct": [1, 53, 56, 58, 80, 106, 145, 159, 162, 178, 179, 187, 197, 203, 209, 211, 217, 219], "traversal": 1, "manipul": [1, 15, 19, 30, 31, 39, 43, 44, 46, 47, 53, 58, 65, 66, 70, 141, 168, 178, 188, 196, 199, 208, 210, 213, 214], "familiariz": 1, "yourself": 1, "with": [1, 2, 4, 11, 25, 28, 29, 30, 38, 48, 49, 51, 65, 67, 71, 73, 92, 106, 124, 125, 138, 141, 146, 149, 160, 161, 162, 166, 167, 179, 185, 199, 200, 202, 204, 208, 210, 211, 212, 217], "binary": [1, 63, 212], "ary": 1, "familiar": 1, "typ": [1, 2, 28, 36, 37, 38, 44, 48, 49, 53, 55, 56, 58, 60, 61, 62, 64, 73, 80, 95, 96, 99, 104, 126, 128, 130, 132, 133, 138, 141, 145, 146, 147, 149, 150, 163, 167, 168, 170, 172, 173, 178, 180, 181, 187, 188, 197, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 215, 217, 219], "balanced": 1, "wheth": [1, 71, 204], "red": [1, 11, 24, 44, 51, 73, 100, 101, 124, 131, 149, 204], "black": [1, 11, 44, 125, 126, 204], "splay": 1, "avl": [1, 173], "implemented": 1, "understand": 1, "treetraversal": 1, "bf": 1, "df": [1, 11, 24, 29, 35, 44, 49, 51, 64, 74, 81, 82, 84, 87, 104, 109, 110, 113, 125, 131, 137, 138, 143, 144, 149, 153, 158, 159, 162, 163, 179, 211], "different": [1, 4, 11, 28, 29, 49, 106, 107, 108, 166, 167, 214], "between": [1, 10, 11, 12, 13, 29, 166, 167, 214], "inord": 1, "postord": 1, "preord": 1, "are": [1, 28, 29, 48, 61, 124, 146, 166, 167, 204, 211, 214], "ther": [1, 28, 61, 166, 167], "way": [1, 4, 7, 48, 49, 67, 140, 166, 167], "represent": [1, 11, 25, 124, 141, 160], "memory": [1, 11, 64, 204], "pointer": 1, "adjacency": 1, "each": [1, 10, 11, 28, 48, 49, 50, 79, 81, 87, 89, 107, 108, 110, 117, 135, 141, 142, 143, 153, 160, 166, 167, 169, 175, 185, 187, 204], "pros": 1, "con": [1, 53, 80, 179], "breadth": 1, "first": [1, 11, 48, 143, 166, 167, 204], "depth": [1, 83], "their": [1, 4, 11, 166, 167], "computational": 1, "complexity": [1, 173, 187], "tradeoff": 1, "them": [1, 4, 11, 28, 50, 53, 214], "real": 1, "if": [1, 2, 4, 11, 25, 28, 29, 31, 33, 36, 37, 38, 39, 40, 44, 49, 56, 60, 61, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 152, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 185, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 204, 206, 210, 211, 212, 214, 215, 217, 219], "get": [1, 2, 4, 37, 38, 44, 48, 49, 63, 64, 65, 77, 87, 90, 91, 96, 105, 142, 145, 146, 149, 150, 153, 163, 169, 172, 173, 185, 196, 204, 206, 210, 211, 215, 217], "chanc": [1, 56, 58, 92, 113, 141, 179, 214], "try": [1, 25, 31, 33, 36, 37, 38, 44, 48, 49, 50, 51, 65, 66, 76, 95, 99, 104, 106, 113, 124, 125, 126, 160, 163, 177, 179, 180, 196, 200, 205, 210, 211, 215, 219], "study": [1, 29], "up": [1, 29, 49, 65], "fanci": 1, "such": [1, 4, 38, 166, 167, 219], "dijkstr": [1, 58], "other": [1, 11, 71, 185, 204], "many": [1, 28, 29, 48, 81, 146, 166, 167, 210], "especially": 1, "famous": 1, "knapsack": 1, "recogniz": 1, "when": [1, 7, 11, 16, 166, 167, 204], "ask": 1, "disguis": 1, "find": [1, 10, 11, 28, 29, 64, 65, 92, 149, 187, 211, 219], "out": [1, 11, 29, 38, 49, 61, 71, 96, 98, 99, 166, 167, 196, 200, 210], "whatnp": 1, "mean": [1, 48, 49, 50, 51, 73, 79, 81, 82, 87, 89, 106, 107, 108, 109, 110, 111, 112, 113, 117, 125, 135, 141, 142, 143, 147, 153, 160, 169, 175, 185, 187, 190, 196], "mathematic": 1, "interviewer": 1, "discret": [1, 55, 105], "math": [1, 14, 28, 39, 48, 49, 94, 95, 100, 101, 111, 116, 132, 139, 141, 153, 159, 162, 172, 174, 175, 178, 179, 181, 187, 189, 196, 200, 210, 214, 217], "question": [1, 25, 28, 39, 48, 49, 50, 53, 58, 65, 70, 79, 82, 84, 85, 90, 91, 94, 95, 97, 102, 104, 105, 107, 109, 110, 111, 112, 114, 138, 149, 154, 174, 180, 188, 190, 196, 197, 204, 210, 217], "this": [1, 3, 4, 11, 25, 28, 29, 61, 71, 77, 89, 124, 160, 166, 167, 204, 210, 214, 217], "mor": [1, 6, 50, 53, 138], "prevalent": 1, "than": [1, 28, 29, 48, 53, 89, 153, 166, 167], "compan": 1, "becaus": 1, "counting": 1, "probability": 1, "101": [1, 48, 51, 118], "surround": 1, "us": 1, "spend": [1, 166, 167], "befor": [1, 11, 28, 53, 187], "refreshing": 1, "teaching": 1, "essential": 1, "combinatoric": 1, "choos": [1, 166, 167], "ilk": 1, "operating": [1, 22, 23, 26, 122, 221], "process": [1, 4, 11, 219], "thread": [1, 30, 60, 204, 214, 216], "concurrency": 1, "lock": [1, 30, 204, 216], "mutex": 1, "semaphor": [1, 217], "monitor": 1, "knowabout": 1, "deadlock": 1, "livelock": 1, "avoid": [1, 28, 91, 219], "what": [1, 4, 16, 48, 67, 140, 166, 167, 204, 214], "resourc": [1, 81, 204], "need": [1, 11, 29, 61], "context": [1, 199, 200, 210, 217], "switching": 1, "initiated": 1, "by": [1, 4, 10, 11, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 53, 65, 145, 146, 147, 160, 166, 167, 179, 199, 204, 214], "underlying": 1, "hardwar": 1, "littl": [1, 6], "scheduling": 1, "world": [1, 44, 49, 65], "rapidly": 1, "moving": [1, 53], "toward": 1, "mult": [1, 53, 66], "cor": [1, 49, 51, 58, 61, 79, 106, 145, 146, 147, 155, 160, 165, 178, 200], "fundamental": 1, "modern": 1, "inform": [1, 2, 7, 14, 25, 28, 36, 37, 38, 39, 44, 49, 53, 58, 65, 66, 70, 74, 77, 92, 109, 110, 124, 126, 138, 141, 146, 149, 150, 178, 181, 196, 199, 200, 202, 204, 206, 208, 210, 212, 214, 215, 219], "design": [1, 58, 196, 217], "distributed": [1, 53], "parallel": [1, 78, 109, 110, 150, 160, 204, 216, 217], "commentaire_accentu": [2, 5, 67], "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 53, 60, 63, 65, 66, 67, 69, 200, 204, 210, 214], "aid": [2, 25, 36, 40, 48, 53, 56, 65, 73, 78, 83, 84, 90, 106, 135, 146, 154, 155, 158, 178, 179, 182, 183, 184, 187, 199, 204, 210, 211, 212, 214, 217, 219], "contient": [2, 10, 18, 31, 36, 39, 48, 49, 50, 51, 53, 56, 58, 65, 66, 69, 74, 75, 79, 91, 94, 96, 99, 102, 104, 117, 141, 150, 153, 158, 159, 162, 163, 168, 169, 170, 173, 178, 180, 184, 185, 188, 196, 199, 200, 204, 206, 208, 210, 211, 212, 214, 217, 219], "assur": [2, 21, 48, 53, 65, 70, 75, 91, 104, 125, 137, 146, 152, 158, 190, 204, 214, 215, 217], "langag": [2, 4, 6, 19, 36, 37, 39, 46, 48, 49, 50, 51, 58, 62, 66, 68, 69, 70, 83, 84, 94, 95, 105, 107, 108, 128, 132, 134, 141, 145, 146, 150, 152, 168, 169, 170, 178, 179, 180, 185, 188, 197, 198, 199, 200, 202, 204, 205, 206, 209, 212, 214, 215, 216, 217, 219], "con\u00e7u": [2, 67, 70, 125, 212, 214], "anglais": [2, 4, 28, 50, 53, 55, 57, 58, 66, 67, 74, 80, 88, 141, 145, 158, 184, 185, 186, 208, 211, 212, 215, 219], "fait": [2, 4, 14, 17, 25, 28, 30, 33, 36, 37, 39, 40, 48, 49, 50, 53, 55, 56, 57, 58, 65, 66, 67, 69, 70, 73, 75, 76, 78, 80, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 113, 115, 117, 125, 126, 128, 129, 132, 134, 135, 136, 137, 138, 139, 141, 143, 145, 146, 147, 148, 150, 154, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 178, 179, 180, 183, 186, 187, 188, 196, 199, 204, 206, 207, 210, 211, 212, 214, 215, 217], "alphabet": [2, 39, 67, 83, 92, 97, 172, 187, 194, 210], "ponctuat": [2, 67], "compris": [2, 36, 58, 67, 127, 211, 219], "d\u00e9clench": [2, 4, 48, 65, 67, 96, 99, 104, 108, 130, 172, 181, 189, 196, 199, 202, 204, 210, 211, 217], "erreur": [2, 4, 37, 40, 48, 49, 50, 53, 55, 56, 60, 62, 66, 67, 70, 73, 77, 89, 94, 96, 97, 98, 99, 104, 105, 106, 107, 109, 110, 114, 124, 125, 126, 128, 132, 151, 152, 154, 155, 162, 172, 175, 180, 181, 188, 189, 196, 201, 202, 204, 206, 208, 210, 211], "fil": [2, 4, 11, 26, 38, 41, 42, 60, 63, 65, 67, 70, 71, 98, 104, 127, 129, 162, 187, 190, 196, 199, 200, 204, 206, 210, 211, 212, 214, 216, 219, 221], "faq_cvxopt": [2, 67], "py": [2, 4, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 60, 65, 67, 70, 80, 81, 102, 124, 145, 146, 147, 160, 175, 178, 179, 183, 200, 204, 206, 210, 211, 212, 214, 221], "lin": [2, 4, 11, 25, 40, 47, 48, 49, 56, 60, 65, 67, 70, 95, 98, 101, 107, 108, 141, 145, 163, 177, 187, 196, 199, 200, 202, 204, 206, 210, 211, 212, 214, 219], "syntaxerror": [2, 65, 67, 70, 98, 199, 210, 211], "utf": [2, 49, 51, 67, 70, 92, 137, 141, 178, 179, 185, 200, 204, 208, 211, 212], "starting": [2, 67, 211], "\u00e8": [2, 67, 83, 185], "but": [2, 14, 28, 29, 39, 48, 56, 67, 70, 71, 146, 204, 211], "no": [2, 11, 29, 38, 49, 56, 61, 67, 70, 71, 96, 124, 140, 161, 163, 179, 196, 204, 211, 219], "encoding": [2, 49, 51, 65, 67, 70, 105, 141, 178, 179, 185, 200, 209, 211], "declared": [2, 67, 70, 211], "see": [2, 7, 10, 11, 12, 13, 48, 61, 67, 70, 92, 146, 204, 206, 211], "http": [2, 4, 7, 28, 44, 48, 49, 51, 61, 63, 67, 70, 78, 81, 83, 91, 92, 106, 113, 124, 134, 138, 141, 146, 149, 162, 163, 178, 179, 184, 185, 187, 211], "org": [2, 4, 25, 28, 48, 51, 67, 70, 78, 83, 106, 124, 134, 146, 160, 179, 211], "dev": [2, 19, 48, 49, 53, 61, 67, 79, 87, 89, 90, 106, 107, 108, 110, 117, 135, 141, 142, 143, 153, 160, 169, 175, 179, 185, 187, 204, 211, 214], "pep": [2, 48, 67, 70, 106, 211], "0263": [2, 67, 70, 211], "Pour": [2, 4, 12, 13, 14, 16, 25, 28, 31, 36, 37, 38, 39, 40, 48, 49, 50, 55, 56, 58, 60, 65, 67, 70, 73, 74, 75, 77, 79, 80, 81, 85, 87, 90, 91, 92, 94, 95, 96, 99, 102, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 124, 125, 128, 131, 134, 135, 140, 141, 145, 147, 149, 150, 153, 154, 156, 157, 158, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 177, 178, 179, 180, 181, 184, 187, 188, 190, 196, 199, 200, 204, 206, 208, 210, 211, 212, 214, 215, 217, 219], "r\u00e9soudr": [2, 18, 48, 53, 55, 58, 67, 81, 84, 91, 102, 158, 162, 167, 196, 211, 217], "interpr\u00e9teur": [2, 4, 30, 65, 66, 67, 70, 84, 126, 131, 146, 181, 196, 199, 200, 210, 211, 214], "peuvent": [2, 37, 49, 53, 55, 56, 58, 60, 65, 66, 67, 70, 73, 91, 96, 109, 110, 118, 126, 141, 162, 164, 172, 188, 196, 199, 204, 206, 208, 210, 211, 212, 214, 217], "appara\u00eetr": [2, 25, 38, 65, 67, 91, 143, 196, 204, 210, 211, 212], "\u00e9crir": [2, 4, 31, 32, 36, 39, 49, 50, 52, 58, 62, 67, 70, 73, 79, 86, 87, 90, 91, 98, 103, 104, 109, 110, 111, 112, 118, 128, 132, 133, 137, 139, 142, 150, 151, 154, 162, 168, 169, 170, 172, 174, 175, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 196, 200, 204, 206, 208, 210, 211, 212, 214, 215, 217, 219], "lign": [2, 4, 6, 8, 11, 17, 25, 36, 37, 39, 44, 47, 48, 49, 50, 58, 65, 67, 70, 73, 74, 78, 79, 80, 83, 87, 90, 91, 96, 98, 99, 101, 102, 104, 106, 109, 110, 114, 117, 126, 127, 138, 141, 145, 146, 150, 154, 155, 162, 164, 168, 169, 172, 173, 177, 178, 179, 180, 181, 188, 189, 193, 199, 200, 205, 206, 208, 210, 211, 212, 214, 217, 219], "latin": [2, 67, 179, 185, 194, 208, 211], "Ou": [2, 21, 32, 49, 65, 67, 81, 98, 99, 106, 118, 128, 138, 168, 204, 210, 211, 212], "chinois": [2, 67, 91, 185], "\u00e9diteur": [2, 4, 67, 70, 208, 211, 212], "scit": [2, 4, 67], "window": [2, 10, 21, 51, 65, 70, 204, 208, 211, 212], "conseil": [2, 48, 49, 53, 55, 62, 67, 91, 105, 170, 179, 196, 206, 210, 211, 214, 217, 219], "ferm": [2, 48, 53, 65, 67, 115, 178, 182, 183, 199, 200, 212], "fichi": [2, 38, 51, 62, 81, 123, 138, 141, 152, 162, 163, 196, 199, 200, 204, 206, 207, 209, 210, 211, 213, 217, 219], "puis": [2, 4, 10, 16, 20, 34, 40, 49, 50, 51, 53, 55, 56, 65, 66, 67, 70, 73, 77, 81, 82, 85, 91, 92, 95, 102, 107, 108, 109, 111, 112, 113, 127, 128, 131, 134, 139, 144, 153, 172, 173, 175, 178, 187, 189, 191, 196, 202, 204, 206, 210, 211, 212, 214, 215, 217, 219], "r\u00e9ouvr": [2, 67, 212], "trait": [2, 4, 10, 14, 36, 39, 49, 53, 55, 58, 66, 67, 73, 79, 90, 104, 107, 140, 153, 162, 173, 179, 199, 204, 210, 211, 212, 216, 217, 219], "encodag": [2, 67, 199, 208], "norm": [2, 9, 10, 65, 67, 125, 139, 147, 168, 185, 196], "internet": [2, 4, 37, 49, 53, 65, 67, 69, 70, 73, 90, 91, 141, 149, 178, 179, 184, 200, 204, 211, 212, 214, 215, 217], "pourquoi": [2, 6, 14, 31, 39, 48, 51, 53, 56, 65, 73, 77, 79, 81, 84, 90, 91, 96, 98, 99, 109, 110, 135, 141, 150, 168, 172, 178, 180, 187, 193, 196, 199, 204, 210, 211, 212, 214, 217, 219], "pr\u00e9fer": [2, 4, 25, 37, 39, 53, 56, 57, 65, 67, 70, 95, 102, 104, 124, 150, 184, 196, 199, 200, 202, 204, 206, 210, 211, 212, 214, 215], "partag": [2, 48, 49, 56, 60, 66, 67, 70, 77, 83, 196, 204], "pag": [2, 4, 25, 48, 49, 50, 51, 58, 65, 67, 70, 91, 124, 137, 141, 145, 149, 160, 172, 173, 182, 183, 184, 187, 210, 211, 214, 216, 217, 219], "dictionnaire_modifie_dans_la_boucl": [2, 5, 206], "boucl": [2, 19, 30, 31, 36, 39, 40, 49, 50, 52, 60, 62, 79, 80, 83, 84, 87, 89, 91, 94, 95, 96, 97, 98, 99, 102, 104, 107, 108, 123, 134, 139, 151, 169, 180, 186, 191, 196, 199, 200, 202, 204, 206, 209, 217], "parcourt": [2, 37, 40, 56, 65, 79, 83, 84, 89, 91, 96, 97, 169, 204, 206, 210, 212], "\u00e9vit": [2, 14, 36, 40, 50, 51, 53, 56, 60, 65, 79, 80, 85, 87, 90, 91, 94, 96, 102, 104, 106, 109, 111, 112, 131, 136, 154, 158, 165, 168, 172, 175, 179, 183, 187, 196, 204, 206, 207, 208, 210, 211, 212, 214, 215, 217, 219], "contain": [2, 10, 11, 28, 114, 130, 168, 173, 204, 206], "supprim": [2, 4, 9, 10, 49, 51, 55, 56, 65, 67, 80, 91, 96, 158, 159, 162, 178, 188, 196, 200, 202, 204, 206, 210, 211, 212, 214, 217], "ancien": [2, 170, 179, 196, 204, 206], "d\u00e9but": [2, 4, 49, 50, 51, 60, 65, 67, 78, 80, 91, 104, 133, 141, 147, 148, 187, 196, 204, 205, 206, 210, 211, 214, 217, 219], "rang": [2, 10, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 48, 49, 51, 52, 53, 58, 60, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 139, 142, 143, 144, 145, 146, 147, 150, 151, 153, 155, 159, 161, 162, 163, 165, 168, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 204, 205, 206, 210, 212, 214, 217], "v": [2, 9, 44, 48, 49, 53, 56, 66, 74, 83, 87, 90, 91, 95, 97, 105, 108, 109, 115, 118, 127, 128, 129, 143, 148, 150, 153, 154, 155, 158, 159, 162, 163, 164, 165, 170, 171, 172, 173, 179, 185, 187, 188, 189, 190, 193, 196, 199, 204, 206, 210, 219], "item": [2, 11, 65, 83, 87, 90, 91, 95, 96, 97, 102, 105, 117, 118, 125, 137, 138, 141, 142, 146, 147, 149, 150, 153, 159, 172, 185, 187, 194, 196, 205, 206, 211], "del": [2, 37, 65, 81, 84, 96, 99, 111, 146, 152, 178, 188, 196, 206, 210, 211, 212], "pr\u00e9viennent": [2, 206], "intervient": [2, 25, 39, 53, 58, 73, 199, 206, 210, 215], "tard": [2, 53, 60, 65, 73, 89, 184, 199, 202, 204, 206, 210, 211, 217], "valeur": [2, 7, 10, 31, 32, 39, 48, 49, 53, 55, 58, 60, 65, 70, 73, 79, 81, 82, 83, 87, 95, 96, 97, 98, 102, 104, 105, 106, 107, 108, 112, 113, 125, 134, 144, 145, 147, 150, 153, 154, 155, 156, 157, 158, 159, 162, 170, 173, 174, 175, 178, 179, 180, 181, 184, 185, 187, 188, 189, 196, 204, 205, 206, 207, 208, 211, 212, 214], "numer": [2, 4, 31, 39, 46, 48, 49, 53, 57, 66, 67, 70, 97, 104, 105, 109, 110, 134, 147, 152, 154, 155, 158, 162, 168, 175, 178, 184, 188, 196, 206, 210, 211, 212, 215, 216, 219], "inattendu": [2, 178, 200, 206, 210], "traceback": [2, 4, 49, 60, 65, 67, 95, 96, 98, 99, 104, 163, 196, 199, 200, 204, 206, 210, 211, 219], "call": [2, 4, 11, 49, 53, 60, 65, 67, 95, 96, 98, 99, 104, 145, 146, 147, 160, 163, 196, 199, 201, 204, 206, 210, 211, 219], "session1": [2, 206], "176": [2, 52, 104, 131, 206], "liste_modifie_dans_la_boucl": [2, 206], "169": [2, 81, 200, 206], "runtimeerror": [2, 91, 114, 206, 211], "changed": [2, 91, 206, 211], "siz": [2, 9, 10, 11, 12, 13, 38, 40, 48, 64, 73, 74, 78, 82, 91, 106, 109, 110, 125, 143, 182, 183, 204, 206, 211, 212], "during": [2, 91, 206, 211], "stock": [2, 12, 13, 37, 50, 51, 53, 66, 70, 73, 115, 127, 133, 138, 145, 150, 172, 173, 180, 198, 206, 211, 212, 215, 219], "ensuit": [2, 28, 36, 44, 48, 49, 51, 53, 56, 57, 66, 70, 84, 85, 89, 91, 136, 137, 138, 145, 148, 154, 168, 172, 175, 184, 194, 196, 198, 199, 204, 206, 210, 211, 215, 217, 219], "rem": [2, 147, 206], "append": [2, 28, 29, 30, 31, 33, 38, 48, 51, 65, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 92, 95, 96, 97, 98, 99, 101, 102, 104, 105, 109, 110, 111, 112, 113, 117, 118, 125, 127, 128, 129, 130, 131, 133, 134, 138, 139, 143, 144, 146, 147, 149, 150, 152, 153, 161, 163, 165, 169, 170, 171, 173, 177, 178, 182, 183, 187, 188, 191, 196, 204, 205, 206, 210, 211, 212, 214, 217, 219], "r": [2, 4, 10, 25, 28, 31, 37, 38, 40, 44, 48, 49, 51, 53, 55, 58, 63, 64, 65, 66, 67, 73, 77, 79, 80, 81, 82, 83, 84, 86, 89, 90, 92, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 125, 126, 136, 138, 139, 141, 146, 147, 156, 157, 162, 163, 165, 166, 167, 173, 178, 179, 181, 182, 183, 185, 187, 188, 194, 196, 200, 204, 206, 208, 210, 212, 214, 215, 217, 219], "autoris": [2, 90, 108, 128, 179, 196, 204, 206, 207, 210, 212, 214, 217], "absten": [2, 206], "ains": [2, 49, 53, 56, 65, 73, 94, 98, 102, 110, 127, 137, 161, 181, 189, 196, 199, 200, 204, 206, 210, 211, 212, 217], "habitud": [2, 14, 70, 179, 206, 210], "serv": [2, 37, 48, 49, 51, 53, 65, 66, 81, 89, 104, 105, 107, 108, 143, 154, 172, 179, 196, 204, 206, 210, 211, 212, 219], "dix_entiers_carr": [2, 5, 67, 206], "renvoi": [2, 3, 4, 6, 7, 9, 10, 11, 13, 48, 49, 73, 97, 187, 196, 204], "r\u00e9el": [2, 4, 39, 50, 53, 60, 65, 67, 73, 104, 138, 150, 168, 188, 189, 196, 207, 209, 210, 212, 215], "standard": [2, 4, 19, 36, 37, 48, 49, 64, 65, 67, 141, 168, 173, 178, 187, 196, 199, 205, 208, 210, 212, 214, 217], "moment": [2, 14, 32, 48, 53, 67, 70, 78, 104, 126, 127, 129, 135, 141, 175, 179, 180, 187, 188, 196, 204, 208, 210, 211, 212, 217], "impact": [2, 11, 14, 53, 56, 65, 66, 67, 70, 210, 211], "d\u00e9roul": [2, 49, 57, 67, 90, 204, 210, 212], "mot": [2, 20, 32, 49, 55, 59, 67, 90, 92, 95, 98, 99, 102, 119, 127, 137, 170, 173, 178, 179, 180, 184, 186, 187, 194, 196, 199, 204, 206, 210, 211, 212, 214, 217, 219], "cl\u00e9": [2, 31, 32, 36, 49, 51, 55, 59, 66, 67, 87, 91, 92, 95, 96, 97, 105, 127, 132, 150, 152, 156, 157, 170, 173, 178, 180, 184, 187, 196, 199, 206, 210, 212, 214, 217, 219], "rencontr": [2, 65, 67, 172, 196, 199, 210, 212, 214], "commenc": [2, 4, 12, 13, 14, 25, 28, 31, 48, 53, 57, 58, 65, 66, 67, 70, 75, 77, 78, 89, 90, 91, 94, 97, 104, 105, 113, 114, 118, 136, 150, 165, 172, 175, 178, 179, 184, 188, 189, 194, 204, 210, 211, 212, 217, 219], "quitt": [2, 53, 67, 179, 184, 189, 210], "transmet": [2, 67], "modif": [2, 9, 10, 39, 40, 48, 49, 53, 55, 56, 60, 65, 67, 70, 74, 76, 81, 85, 91, 96, 102, 109, 110, 140, 143, 170, 172, 173, 187, 196, 204, 207, 210, 211, 212, 214, 217], "votr": [2, 4, 31, 67, 70, 99, 104, 106, 110, 118, 133, 152, 154, 155, 168, 179, 184, 212, 214, 215], "algorithm": [2, 7, 8, 10, 17, 19, 20, 28, 31, 36, 40, 53, 55, 65, 67, 68, 69, 77, 79, 80, 85, 88, 90, 92, 95, 96, 102, 104, 106, 107, 108, 111, 112, 114, 116, 128, 137, 139, 146, 148, 152, 153, 158, 159, 160, 161, 163, 170, 175, 186, 188, 189, 190, 196, 199, 206, 209, 219], "sp\u00e9cif": [2, 39, 48, 49, 65, 67, 113, 118, 168, 196, 204, 205, 208, 212, 214, 215, 216], "diff\u00e8rent": [2, 206], "mani": [2, 4, 25, 28, 39, 48, 49, 53, 55, 56, 58, 65, 66, 67, 73, 128, 142, 162, 181, 196, 199, 200, 204, 206, 208, 210, 211, 212, 215, 217], "i": [2, 6, 10, 25, 28, 29, 30, 31, 33, 34, 36, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 64, 65, 66, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 202, 204, 205, 206, 210, 211, 212, 214, 217], "11": [2, 4, 11, 19, 21, 24, 28, 29, 34, 39, 40, 44, 48, 49, 51, 53, 58, 63, 64, 65, 67, 70, 73, 74, 75, 77, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 125, 128, 130, 131, 135, 138, 139, 143, 144, 145, 146, 150, 151, 153, 155, 158, 159, 161, 163, 173, 175, 178, 179, 181, 185, 187, 188, 191, 196, 199, 200, 206, 207, 210, 211], "D": [2, 11, 14, 39, 53, 73, 75, 80, 81, 82, 90, 97, 103, 123, 126, 127, 129, 133, 137, 156, 157, 158, 165, 173, 179, 205, 206, 211, 212, 214, 215, 219], "abreg": [2, 16, 65, 181, 206, 211], "sum": [2, 6, 29, 35, 47, 48, 49, 50, 51, 52, 60, 65, 74, 78, 79, 80, 81, 82, 85, 89, 91, 94, 95, 96, 98, 105, 106, 107, 108, 113, 117, 130, 134, 139, 146, 151, 159, 160, 161, 169, 170, 171, 172, 181, 185, 190, 206, 210, 211, 219], "repetition_a_evit": [2, 5, 206], "a_evit": 2, "fals": [2, 3, 4, 7, 10, 11, 12, 13, 25, 28, 35, 36, 38, 48, 49, 50, 51, 63, 65, 67, 74, 77, 78, 80, 81, 85, 87, 92, 94, 113, 114, 124, 129, 130, 131, 136, 138, 139, 146, 149, 152, 168, 169, 173, 187, 196, 199, 204, 210, 211, 217], "r\u00e9p\u00e9tit": [2, 79, 90, 92, 180, 188, 210, 211, 212, 214, 217], "varianc": [2, 39, 53, 80, 96, 105, 106, 109, 110, 154, 155, 175, 206], "observ": [2, 14, 25, 40, 49, 53, 57, 58, 66, 81, 82, 105, 106, 107, 108, 125, 134, 151, 153, 160, 164, 165, 183, 188, 204, 206, 217], "moyen": [2, 4, 9, 14, 20, 25, 30, 37, 39, 44, 48, 51, 65, 66, 67, 73, 79, 81, 82, 96, 104, 105, 106, 118, 124, 125, 150, 154, 155, 161, 164, 170, 171, 174, 175, 180, 183, 187, 189, 192, 195, 196, 204, 206, 210, 212, 214, 219], "len": [2, 10, 28, 29, 31, 36, 38, 39, 40, 44, 48, 49, 65, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 114, 118, 124, 128, 130, 131, 133, 134, 135, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 152, 153, 159, 161, 163, 169, 170, 171, 172, 173, 177, 178, 187, 188, 189, 190, 191, 193, 194, 196, 202, 204, 206, 208, 210, 211, 212, 214, 219], "variance_a_evit": [2, 206], "ob": [2, 74, 82, 84, 87, 89, 105, 131, 138, 152, 206], "passag": [2, 39, 48, 53, 65, 96, 133, 134, 162, 188, 193, 206, 208, 210, 211, 212], "rien": [2, 4, 18, 30, 40, 44, 49, 53, 57, 65, 67, 94, 104, 109, 110, 117, 126, 132, 139, 149, 168, 178, 179, 188, 196, 198, 204, 206, 210, 212, 214, 217], "chang": [2, 4, 7, 10, 11, 14, 25, 32, 40, 48, 49, 50, 51, 53, 56, 58, 63, 65, 67, 69, 70, 73, 74, 78, 80, 82, 84, 85, 91, 105, 109, 110, 113, 117, 126, 134, 149, 162, 169, 170, 173, 179, 183, 187, 189, 196, 202, 204, 205, 206, 208, 210, 211, 212, 217], "vaut": [2, 36, 53, 58, 60, 65, 81, 87, 96, 97, 98, 105, 106, 129, 138, 141, 168, 172, 188, 189, 196, 204, 206, 210, 211, 214, 215, 217], "variabl": [2, 4, 25, 32, 36, 39, 48, 49, 50, 53, 56, 61, 62, 67, 70, 73, 80, 94, 96, 97, 99, 104, 105, 109, 110, 119, 123, 126, 127, 130, 132, 133, 134, 138, 139, 145, 150, 151, 164, 168, 169, 173, 175, 178, 180, 181, 187, 196, 198, 199, 200, 204, 206, 208, 212, 214, 215, 217, 220], "moy": [2, 105, 175, 210], "co\u00fbt": [2, 6, 31, 36, 40, 49, 53, 55, 56, 58, 67, 77, 79, 83, 84, 86, 87, 91, 94, 95, 96, 102, 109, 110, 123, 134, 148, 150, 153, 161, 162, 163, 173, 186, 187, 188, 189, 194, 196], "alor": [2, 4, 10, 14, 31, 39, 48, 49, 53, 55, 56, 58, 65, 66, 67, 70, 73, 74, 78, 79, 80, 81, 83, 84, 86, 87, 90, 91, 94, 104, 105, 106, 143, 146, 150, 153, 154, 158, 162, 165, 166, 167, 173, 175, 177, 179, 187, 196, 199, 200, 204, 206, 210, 211, 212, 214, 217], "endroit": [2, 58, 65, 70, 91, 107, 138, 196, 200, 202, 204, 208, 210, 211, 212, 214, 217], "survient": [2, 53, 104, 196, 199, 200, 204, 210, 211, 217], "suiv": [2, 4, 7, 14, 19, 28, 31, 39, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 65, 67, 70, 75, 79, 81, 83, 87, 90, 91, 92, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 119, 123, 127, 128, 134, 139, 140, 141, 145, 146, 148, 150, 152, 153, 154, 155, 158, 159, 162, 163, 164, 165, 166, 167, 170, 172, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219], "major": [2, 50, 56, 125, 150, 175, 187, 198], "argument": [2, 4, 32, 35, 48, 49, 53, 65, 95, 107, 108, 152, 154, 166, 167, 170, 171, 184, 196, 199, 204, 210, 211, 212, 214, 217], "retourn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 31, 34, 39, 40, 47, 48, 49, 53, 55, 56, 58, 60, 65, 66, 67, 75, 77, 79, 84, 85, 87, 89, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 126, 127, 128, 137, 143, 148, 150, 152, 154, 155, 165, 167, 170, 172, 173, 183, 184, 186, 188, 190, 194, 196, 199, 200, 204, 205, 206, 207, 208, 210, 211, 212, 217, 219], "quelqu": [2, 4, 6, 14, 28, 34, 39, 40, 47, 48, 49, 50, 55, 56, 57, 62, 65, 67, 70, 73, 77, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 97, 99, 102, 105, 107, 111, 112, 115, 119, 124, 128, 135, 136, 140, 141, 146, 152, 154, 158, 159, 172, 177, 178, 179, 180, 188, 196, 199, 204, 206, 207, 210, 211, 212, 214, 217], "chos": [2, 14, 37, 39, 40, 49, 53, 57, 58, 65, 70, 83, 84, 85, 90, 91, 94, 95, 97, 105, 114, 118, 128, 132, 141, 146, 147, 150, 170, 175, 177, 178, 179, 180, 187, 196, 198, 199, 204, 207, 210, 211, 212, 213, 214, 217], "tru": [2, 4, 10, 11, 24, 25, 28, 29, 36, 38, 44, 48, 49, 50, 51, 53, 61, 63, 65, 67, 73, 74, 77, 78, 80, 81, 84, 85, 87, 90, 91, 92, 94, 104, 111, 112, 113, 114, 124, 125, 126, 128, 129, 130, 131, 134, 136, 139, 143, 146, 149, 152, 159, 165, 168, 169, 172, 173, 177, 178, 179, 185, 187, 188, 196, 199, 202, 204, 211, 212, 217], "leaf": [2, 80], "guess": 2, "str2dat": [2, 5, 206], "fmt": [2, 11, 217], "Y": [2, 10, 14, 25, 36, 48, 53, 58, 90, 104, 105, 106, 107, 108, 109, 110, 135, 145, 178, 179, 204, 206, 207, 211], "convert": [2, 4, 6, 11, 37, 44, 49, 50, 51, 58, 65, 67, 98, 104, 105, 113, 126, 141, 146, 162, 172, 178, 179, 181, 196, 199, 206, 207, 208, 210, 211, 212, 214, 215], "format": [2, 4, 11, 19, 29, 37, 44, 48, 49, 51, 58, 65, 73, 75, 79, 81, 86, 87, 90, 104, 105, 125, 143, 149, 154, 155, 161, 168, 179, 187, 188, 196, 199, 202, 204, 206, 208, 209, 213, 214, 215, 217, 219], "genr": [2, 14, 53, 179, 196, 206, 210, 219], "souvent": [2, 4, 14, 25, 39, 44, 48, 49, 51, 53, 55, 57, 58, 60, 65, 67, 69, 70, 73, 77, 80, 84, 96, 99, 104, 106, 109, 110, 119, 124, 129, 131, 132, 135, 145, 146, 148, 152, 168, 172, 178, 180, 187, 188, 194, 196, 199, 200, 202, 204, 205, 206, 210, 211, 212, 214, 215, 217, 219], "pein": [2, 94, 179, 189, 206], "retrouv": [2, 14, 17, 49, 51, 53, 55, 57, 58, 81, 82, 84, 92, 105, 107, 145, 150, 165, 172, 173, 178, 186, 187, 188, 196, 204, 206, 210, 211, 212, 217, 219], "besoin": [2, 4, 14, 25, 37, 39, 44, 48, 49, 52, 53, 58, 65, 67, 70, 84, 87, 91, 102, 104, 114, 128, 143, 150, 168, 172, 179, 180, 196, 200, 202, 206, 208, 211, 212, 214, 215, 217], "strftim": [2, 4, 67, 206, 207], "dt": [2, 4, 67, 81, 82, 87, 113, 161, 187, 206], "strptim": [2, 49, 206], "16": [2, 4, 25, 28, 39, 40, 44, 48, 49, 50, 51, 53, 65, 67, 73, 74, 78, 79, 80, 81, 83, 84, 86, 87, 89, 90, 91, 93, 95, 96, 97, 99, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 125, 128, 131, 134, 135, 137, 138, 144, 145, 146, 150, 155, 158, 159, 161, 168, 169, 175, 177, 178, 179, 181, 183, 187, 188, 189, 196, 206, 207, 208, 210, 211], "01": [2, 11, 26, 31, 39, 48, 49, 51, 73, 74, 91, 105, 106, 109, 110, 118, 124, 139, 155, 159, 178, 206, 207, 211, 217, 221], "2014": [2, 49, 93, 166, 167, 206], "compt": [2, 4, 5, 9, 14, 31, 35, 39, 49, 53, 55, 56, 57, 58, 66, 67, 77, 78, 79, 81, 91, 92, 95, 96, 104, 105, 107, 108, 109, 110, 113, 114, 115, 129, 139, 142, 145, 150, 152, 168, 172, 178, 179, 180, 184, 187, 196, 202, 205, 206, 210, 211, 212, 214, 217, 219], "li": [2, 25, 28, 31, 39, 56, 58, 65, 79, 81, 96, 133, 148, 150, 155, 159, 179, 188, 196, 198, 204, 206, 210, 211, 212, 214, 215, 219], "occurrent": [2, 31, 65, 92, 184, 206, 211], "tableau": [2, 31, 34, 36, 39, 46, 47, 53, 58, 66, 74, 78, 80, 84, 94, 98, 102, 107, 110, 123, 124, 128, 133, 136, 139, 141, 143, 145, 149, 153, 162, 163, 164, 165, 168, 169, 173, 177, 187, 188, 189, 199, 206, 211, 212, 217, 219], "Par": [2, 4, 31, 39, 40, 48, 49, 51, 53, 55, 56, 58, 65, 67, 70, 79, 80, 92, 94, 95, 96, 104, 106, 114, 130, 153, 159, 162, 178, 187, 188, 189, 196, 199, 204, 206, 208, 210, 211, 212, 217, 219], "pourr": [2, 14, 40, 48, 49, 51, 53, 56, 57, 66, 78, 79, 82, 83, 84, 85, 90, 91, 96, 104, 107, 108, 114, 126, 131, 137, 140, 141, 152, 162, 173, 174, 178, 179, 184, 187, 190, 196, 199, 200, 202, 204, 206, 210, 211, 212, 217], "popular": [2, 206, 214], "discour": [2, 178, 179, 206], "polit": [2, 53, 206], "\u00e9tendu": [2, 55, 204, 206, 210], "vocabulair": [2, 130, 168, 206], "not": [2, 3, 4, 11, 15, 19, 20, 25, 28, 31, 37, 39, 48, 49, 53, 55, 57, 58, 62, 64, 65, 71, 73, 74, 77, 80, 81, 83, 85, 87, 91, 95, 96, 97, 99, 114, 117, 118, 121, 122, 127, 129, 131, 137, 146, 151, 154, 158, 159, 162, 163, 164, 166, 167, 169, 174, 175, 178, 179, 185, 187, 189, 192, 194, 195, 196, 199, 200, 204, 206, 210, 211, 212, 215, 217, 219], "else": [2, 4, 25, 28, 29, 31, 37, 38, 44, 65, 66, 67, 70, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 94, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 124, 125, 126, 127, 128, 129, 130, 131, 135, 137, 139, 142, 143, 146, 148, 150, 152, 159, 161, 163, 165, 168, 169, 170, 171, 172, 175, 177, 180, 185, 187, 188, 189, 190, 191, 194, 196, 199, 200, 204, 206, 211, 212, 214, 215], "appropri": [2, 58, 65, 196, 206], "puisqu": [2, 14, 34, 48, 51, 53, 56, 58, 81, 84, 87, 89, 90, 91, 94, 96, 97, 102, 109, 134, 139, 145, 146, 153, 172, 175, 189, 196, 199, 204, 206, 210, 211, 217], "faudr": [2, 4, 14, 39, 49, 50, 53, 57, 58, 65, 66, 67, 74, 81, 82, 84, 90, 97, 104, 109, 110, 111, 112, 113, 114, 117, 127, 128, 140, 141, 162, 172, 184, 196, 204, 206, 210, 211, 214, 217, 219], "ceux": [2, 4, 25, 28, 48, 50, 53, 58, 65, 66, 67, 69, 70, 77, 81, 91, 99, 114, 124, 145, 162, 168, 179, 180, 196, 199, 204, 206, 210, 211, 212, 214, 215, 217, 219], "immuabl": [2, 133, 172, 187, 188, 205, 206, 209, 210, 212], "illustr": [2, 48, 49, 53, 56, 58, 148, 172, 187, 196, 204, 206, 211, 212, 214, 219], "mat": [2, 6, 34, 37, 47, 50, 65, 74, 77, 78, 80, 87, 95, 99, 100, 101, 102, 103, 109, 110, 130, 150, 154, 155, 159, 161, 169, 178, 179, 196, 206, 212, 215], "str": [2, 4, 7, 10, 11, 28, 33, 65, 67, 88, 96, 98, 104, 126, 127, 128, 129, 137, 141, 169, 177, 178, 179, 181, 187, 196, 199, 204, 206, 208, 210, 212, 214, 215, 217, 219], "tupl": [2, 4, 7, 8, 9, 10, 11, 13, 28, 31, 44, 48, 49, 58, 65, 67, 90, 91, 96, 114, 117, 123, 146, 150, 152, 158, 172, 178, 188, 196, 205, 206, 210, 212], "Les": [2, 6, 10, 14, 15, 17, 18, 19, 24, 28, 30, 32, 34, 35, 36, 39, 44, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 70, 73, 74, 80, 81, 83, 87, 88, 90, 92, 98, 104, 106, 111, 112, 113, 114, 117, 118, 119, 123, 124, 128, 130, 132, 137, 140, 141, 145, 146, 149, 150, 152, 153, 158, 163, 164, 168, 172, 173, 175, 176, 178, 179, 180, 181, 182, 185, 186, 187, 188, 196, 198, 202, 203, 206, 208, 209, 211, 212, 214, 215, 217], "why": [2, 206], "key": [2, 5, 11, 25, 49, 63, 65, 90, 91, 114, 117, 137, 150, 163, 165, 204, 206, 210, 211], "\u00e9gal": [2, 4, 6, 10, 14, 31, 39, 40, 44, 47, 48, 49, 50, 51, 53, 55, 56, 58, 65, 66, 67, 74, 77, 79, 80, 81, 82, 90, 91, 98, 104, 105, 106, 107, 108, 114, 115, 117, 118, 124, 128, 129, 132, 139, 141, 143, 145, 146, 148, 149, 150, 154, 155, 156, 157, 164, 168, 173, 175, 179, 187, 188, 196, 202, 204, 205, 206, 210, 211, 212, 214, 217, 219], "vouloir": [2, 95, 179, 204, 206], "m\u00e9moris": [2, 14, 39, 65, 75, 96, 97, 165, 168, 187, 196, 200, 202, 204, 206, 217, 219], "ident": [2, 10, 18, 34, 51, 53, 56, 58, 65, 70, 75, 83, 84, 85, 91, 104, 109, 114, 126, 128, 131, 137, 145, 150, 154, 155, 172, 176, 177, 196, 199, 204, 206, 208, 210, 211, 212, 214, 219], "doit": [2, 4, 7, 39, 49, 51, 53, 55, 56, 60, 65, 66, 67, 70, 73, 77, 81, 91, 95, 104, 105, 108, 109, 110, 111, 112, 114, 125, 126, 130, 141, 150, 152, 156, 157, 162, 165, 168, 170, 173, 180, 188, 196, 199, 204, 206, 208, 210, 211, 212, 214, 215, 219], "enumerat": [2, 25, 74, 79, 80, 81, 84, 91, 92, 95, 98, 102, 104, 105, 109, 111, 112, 125, 126, 128, 130, 138, 140, 141, 143, 149, 150, 159, 163, 172, 173, 179, 188, 189, 190, 194, 200, 202, 205, 206, 210, 212], "S": [2, 31, 49, 53, 65, 66, 73, 81, 82, 90, 91, 102, 104, 109, 115, 148, 156, 157, 158, 162, 173, 177, 188, 196, 199, 204, 206, 207, 210, 211, 214, 219], "suff": [2, 4, 16, 36, 39, 53, 57, 58, 65, 66, 67, 70, 75, 79, 81, 84, 86, 91, 94, 96, 97, 102, 104, 105, 106, 107, 109, 110, 114, 115, 127, 134, 163, 168, 169, 173, 175, 180, 187, 188, 196, 204, 206, 208, 210, 211, 214, 217, 219], "just": [2, 4, 11, 28, 37, 40, 48, 53, 66, 67, 79, 87, 107, 109, 118, 128, 139, 146, 158, 170, 190, 198, 199, 206, 210, 211], "\u00e9critur": [2, 4, 6, 31, 34, 37, 38, 46, 47, 48, 58, 65, 67, 86, 115, 128, 132, 141, 150, 170, 178, 181, 188, 196, 198, 199, 206, 210, 211, 212, 214, 215, 219], "construit_matrice_carre": [2, 5], "construit": [2, 7, 10, 14, 39, 49, 53, 56, 65, 66, 74, 76, 79, 83, 91, 95, 100, 101, 102, 105, 110, 124, 126, 139, 154, 155, 158, 159, 164, 165, 179, 186, 187, 196, 204, 210, 211, 212, 217], "rempl": [2, 73, 99, 103, 162, 163, 172, 188, 212, 214, 219], "z\u00e9ro": [2, 39, 48, 49, 65, 73, 79, 189, 199, 204, 211], "dimens": [2, 14, 31, 36, 39, 49, 50, 51, 55, 58, 65, 80, 106, 109, 115, 119, 146, 148, 151, 158, 168, 183, 196, 204, 211, 212], "enumerate_permut": [2, 5], "enumer": 2, "enumerate_permutations_recurs": [2, 5], "integral": [2, 5, 175, 206], "int\u00e9gral": [2, 4, 65, 67, 104, 123, 214, 217, 219], "rienmann": [2, 175], "born": [2, 53, 66, 91, 175], "recevoir": [2, 104, 178, 196, 199, 204, 206, 210], "inclut": [2, 39, 44, 65, 66, 79, 107, 108, 165, 168, 196, 199, 206, 210, 211, 212, 214, 217], "calcul_n_valeur": [2, 196, 206], "prend": [2, 4, 39, 44, 49, 53, 57, 58, 66, 67, 73, 75, 77, 81, 88, 89, 91, 95, 98, 101, 104, 109, 110, 111, 112, 128, 132, 134, 137, 142, 145, 150, 151, 152, 154, 163, 183, 184, 196, 204, 206, 210, 211, 212], "fonction_carr": [2, 206], "fonction_cub": [2, 206], "ex\u00e9cut": [2, 4, 32, 38, 39, 53, 60, 65, 66, 67, 70, 91, 95, 96, 107, 108, 126, 127, 131, 145, 146, 152, 179, 180, 186, 187, 188, 196, 199, 200, 202, 204, 206, 210, 211, 212, 214, 217], "re": [2, 10, 28, 30, 33, 37, 38, 51, 74, 81, 83, 84, 87, 88, 90, 94, 95, 101, 102, 104, 105, 106, 109, 110, 113, 114, 116, 117, 118, 125, 138, 140, 143, 144, 146, 147, 153, 160, 165, 169, 173, 177, 178, 179, 185, 187, 191, 196, 206, 211, 212, 214, 215, 217, 219], "l1": [2, 4, 39, 58, 67, 188, 196, 206, 210, 211], "9": [2, 9, 12, 24, 28, 29, 31, 39, 40, 44, 48, 49, 50, 51, 52, 53, 56, 58, 65, 67, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 128, 130, 131, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 161, 163, 168, 169, 170, 171, 172, 175, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 205, 206, 207, 210, 211, 217, 219], "l2": [2, 4, 39, 58, 65, 67, 102, 188, 196, 206, 210, 211], "mat2text": [2, 5, 206], "sep_row": 2, "sep_col": 2, "fn": [2, 7, 11, 65, 92, 146, 206], "text2mat": [2, 5, 206], "s\u00e9par": [2, 25, 53, 58, 62, 79, 90, 107, 108, 127, 150, 164, 178, 181, 182, 183, 184, 185, 204, 206, 210, 211, 212, 219], "colon": [2, 6, 14, 47, 49, 50, 58, 65, 87, 106, 110, 138, 150, 158, 162, 168, 177, 178, 196, 204, 206, 212, 219], "case11": [2, 206], "case12": [2, 206], "case13": [2, 206], "case21": [2, 206], "case22": [2, 206], "case23": [2, 206], "join": [2, 28, 33, 48, 51, 65, 78, 83, 90, 92, 98, 99, 118, 126, 127, 128, 129, 140, 143, 145, 147, 160, 169, 173, 178, 179, 186, 187, 191, 200, 206, 210, 211, 212, 214, 219], "mat2vect": [2, 5, 206], "vect2mat": [2, 5, 206], "car": [2, 4, 25, 30, 31, 32, 37, 39, 40, 48, 49, 50, 53, 57, 65, 66, 67, 70, 73, 75, 77, 79, 80, 82, 83, 84, 87, 89, 90, 91, 95, 96, 98, 101, 102, 104, 105, 107, 108, 109, 110, 112, 114, 117, 125, 126, 128, 130, 134, 135, 139, 141, 146, 150, 153, 161, 163, 172, 175, 178, 180, 181, 183, 187, 188, 194, 196, 198, 199, 200, 202, 204, 206, 208, 210, 211, 212, 214, 215, 217], "donc": [2, 14, 30, 31, 36, 39, 40, 48, 49, 50, 51, 53, 55, 56, 58, 65, 66, 73, 74, 80, 81, 82, 83, 84, 91, 92, 96, 102, 104, 106, 107, 113, 114, 115, 118, 128, 129, 130, 136, 139, 149, 158, 161, 162, 163, 164, 165, 175, 178, 179, 185, 186, 187, 189, 190, 191, 196, 199, 205, 206, 210, 211, 212, 214, 215, 217, 219], "indic": [2, 7, 9, 10, 31, 36, 40, 48, 49, 51, 53, 55, 60, 65, 66, 79, 84, 87, 89, 91, 94, 98, 99, 102, 111, 112, 124, 149, 150, 183, 187, 188, 193, 196, 199, 200, 204, 205, 206, 210, 211, 219], "bien": [2, 4, 16, 25, 30, 36, 39, 48, 51, 53, 57, 58, 66, 67, 70, 73, 75, 76, 77, 78, 80, 84, 85, 89, 90, 91, 94, 104, 107, 108, 109, 111, 112, 113, 124, 129, 132, 134, 136, 138, 139, 145, 149, 150, 152, 154, 162, 168, 179, 180, 181, 183, 185, 187, 196, 199, 200, 202, 204, 206, 210, 211, 212], "s\u00fbr": [2, 14, 25, 39, 40, 58, 77, 81, 84, 87, 89, 91, 99, 104, 124, 163, 168, 189, 206, 211, 212], "const": [2, 4, 30, 32, 48, 50, 53, 56, 67, 81, 105, 161, 168, 175, 196, 206, 207, 217], "Vous": [2, 48, 49, 50, 58, 84, 90, 145, 158, 162, 173, 178, 179, 186, 206], "pouv": [2, 48, 50, 90, 104, 107, 108, 114, 145, 162, 173, 179, 184, 186, 206], "reduc": [2, 28, 134, 146, 147, 160, 206], "from": [2, 4, 11, 12, 13, 24, 25, 26, 28, 30, 33, 37, 38, 41, 42, 44, 48, 49, 50, 51, 53, 64, 65, 66, 71, 74, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 100, 101, 104, 106, 109, 111, 112, 113, 114, 116, 117, 124, 125, 131, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 158, 159, 160, 161, 162, 163, 165, 166, 167, 172, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 193, 196, 200, 205, 206, 210, 212, 214, 215, 219, 221], "functool": [2, 134, 206], "lambd": [2, 11, 22, 27, 39, 41, 48, 79, 99, 105, 114, 123, 142, 144, 145, 154, 156, 157, 165, 170, 171, 174, 175, 206, 214, 221], "minindex": [2, 5, 206], "min": [2, 29, 40, 48, 49, 53, 65, 66, 74, 76, 77, 79, 80, 84, 85, 87, 94, 100, 104, 105, 106, 109, 110, 114, 117, 125, 126, 130, 152, 162, 163, 165, 169, 191, 194, 206, 210, 211], "minium": [2, 206], "r\u00e9flex": [2, 22, 27, 41, 119, 178, 184, 202, 206, 211, 221], "recod": [2, 206], "conserv": [2, 4, 32, 37, 48, 49, 53, 56, 66, 67, 75, 87, 90, 102, 107, 129, 150, 161, 165, 178, 186, 188, 189, 196, 205, 206, 210, 211, 212, 215], "434": [2, 147, 206], "43": [2, 34, 44, 48, 49, 51, 91, 104, 106, 108, 109, 140, 146, 149, 158, 159, 172, 185, 196, 206, 207, 210], "6436": [2, 206], "Mais": [2, 14, 39, 40, 44, 49, 50, 58, 65, 77, 79, 82, 83, 87, 89, 90, 91, 92, 95, 96, 98, 117, 124, 126, 127, 128, 132, 148, 150, 153, 162, 172, 178, 183, 184, 190, 193, 196, 200, 206, 211, 217, 219], "astuc": [2, 4, 22, 27, 41, 50, 62, 67, 78, 79, 123, 129, 179, 206, 214, 217, 221], "obten": [2, 38, 39, 44, 48, 49, 53, 55, 56, 65, 79, 84, 87, 135, 139, 143, 154, 158, 162, 163, 169, 172, 175, 178, 184, 196, 204, 206, 208, 210, 211, 212, 219], "reprogramm": [2, 204, 206], "chois": [2, 7, 9, 10, 39, 40, 44, 48, 49, 50, 53, 55, 56, 58, 60, 65, 66, 70, 73, 80, 81, 84, 90, 91, 103, 105, 109, 110, 111, 112, 114, 115, 125, 127, 129, 131, 133, 136, 139, 151, 154, 155, 156, 157, 162, 163, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 196, 200, 204, 206, 210, 211, 212, 215, 219], "coupl": [2, 14, 36, 48, 53, 56, 58, 65, 66, 73, 74, 87, 102, 109, 110, 139, 145, 150, 172, 173, 188, 196, 199, 204, 206, 210, 211, 217, 219], "d\u00e9parteg": [2, 206], "exaequo": [2, 206], "45": [2, 44, 48, 49, 51, 80, 91, 117, 125, 130, 140, 146, 149, 158, 159, 181, 185, 196, 206, 210], "56": [2, 24, 48, 49, 51, 91, 105, 106, 109, 110, 170, 185, 196, 206, 217, 219], "permet": [2, 4, 10, 14, 18, 31, 36, 38, 39, 40, 46, 48, 49, 50, 51, 53, 55, 56, 58, 65, 67, 70, 73, 75, 76, 77, 83, 85, 92, 96, 104, 105, 106, 107, 108, 111, 112, 126, 127, 128, 132, 134, 138, 141, 145, 146, 150, 151, 154, 162, 168, 169, 170, 172, 173, 174, 178, 179, 180, 186, 188, 194, 196, 198, 199, 200, 202, 204, 206, 207, 208, 210, 211, 212, 214, 215, 217, 219], "\u00e7a": [2, 33, 44, 50, 58, 83, 85, 87, 88, 89, 132, 146, 168, 172, 173, 186, 198, 206, 208, 218], "pris": [2, 35, 36, 53, 56, 58, 79, 158, 159, 175, 179, 180, 184, 186, 187, 202, 204, 206, 212], "aucun": [2, 8, 36, 37, 50, 53, 55, 57, 65, 66, 70, 73, 74, 77, 78, 80, 87, 90, 96, 104, 113, 162, 163, 178, 179, 196, 199, 200, 204, 206, 210, 211, 212, 214], "bout": [2, 53, 65, 69, 70, 79, 83, 102, 104, 127, 150, 175, 177, 178, 187, 199, 205, 206, 211], "pr\u00e9senc": [2, 49, 70, 184, 196, 206, 211, 214, 219], "second": [2, 4, 6, 7, 11, 19, 20, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 49, 50, 53, 55, 56, 57, 58, 65, 66, 67, 70, 73, 75, 76, 77, 78, 79, 80, 83, 84, 87, 90, 91, 96, 102, 104, 105, 109, 110, 112, 114, 118, 124, 127, 128, 131, 132, 134, 136, 145, 147, 148, 158, 159, 160, 161, 163, 169, 170, 172, 175, 177, 178, 179, 180, 181, 187, 188, 196, 199, 200, 206, 207, 210, 211, 212, 214, 215, 217, 219], "probabl": [2, 14, 48, 53, 56, 58, 73, 74, 84, 92, 110, 113, 114, 118, 124, 125, 134, 139, 146, 170, 187, 196, 206], "faibl": [2, 14, 53, 73, 74, 84, 91, 125, 153, 206], "recherche_dichotom": [2, 5, 138, 148, 206], "id\u00e9": [2, 14, 31, 53, 55, 56, 58, 73, 74, 75, 77, 78, 79, 84, 86, 91, 102, 104, 111, 112, 116, 117, 134, 135, 141, 146, 152, 153, 161, 162, 184, 190, 194, 204, 206, 212], "\u00e9limin": [2, 18, 28, 90, 188, 206, 219], "moiti": [2, 40, 56, 73, 77, 115, 148, 188, 189, 206], "whil": [2, 28, 29, 31, 38, 40, 56, 64, 73, 74, 75, 78, 80, 84, 85, 86, 87, 89, 90, 91, 94, 95, 96, 97, 101, 102, 104, 109, 110, 111, 118, 128, 131, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 148, 152, 163, 165, 169, 175, 177, 187, 188, 189, 191, 193, 196, 206, 211, 217, 219], "elif": [2, 4, 31, 65, 66, 67, 79, 80, 83, 97, 102, 105, 107, 108, 111, 112, 114, 126, 128, 131, 143, 148, 177, 187, 188, 189, 191, 196, 204, 206, 210], "interven": [2, 56, 91, 114, 134, 196, 204, 206, 212, 217], "addit": [2, 39, 58, 65, 90, 91, 96, 104, 139, 168, 180, 188, 196, 206, 210, 211], "schem": [2, 56, 65, 95, 173, 196, 199, 204, 206, 210, 212, 215, 217], "initialis": [2, 7, 48, 50, 55, 56, 70, 73, 85, 126, 162, 165, 168, 187, 196, 206, 210, 211], "6456": [2, 206], "6933": [2, 206], "integr": [2, 4, 19, 53, 67, 152, 174, 175, 199, 206, 210, 211, 216, 217], "sen": [2, 7, 10, 14, 39, 40, 48, 50, 53, 56, 58, 65, 66, 79, 83, 84, 95, 98, 124, 130, 133, 136, 141, 179, 199, 204, 206, 207, 210, 212], "Et": [2, 4, 14, 25, 31, 32, 37, 38, 40, 44, 49, 50, 57, 58, 65, 67, 70, 77, 80, 81, 84, 87, 89, 96, 104, 109, 110, 111, 112, 114, 127, 130, 131, 132, 135, 136, 139, 141, 148, 150, 151, 158, 159, 168, 173, 174, 176, 179, 183, 186, 198, 199, 202, 204, 205, 206, 210, 212, 214, 215, 217], "gr\u00e2c": [2, 53, 58, 65, 70, 111, 112, 196, 204, 206, 211, 212, 214, 215, 219], "s1": [2, 124, 132, 141, 206], "s2": [2, 49, 65, 124, 132, 206, 211, 212], "s3": [2, 44, 206], "avantag": [2, 56, 179, 194, 196, 204, 206, 210, 211, 212], "derni": [2, 14, 25, 35, 36, 40, 44, 49, 51, 53, 56, 58, 65, 66, 70, 79, 81, 83, 85, 87, 90, 91, 92, 94, 95, 98, 99, 102, 104, 109, 110, 111, 112, 129, 137, 142, 162, 165, 170, 172, 173, 178, 186, 187, 188, 196, 199, 200, 204, 206, 210, 211, 212, 214, 216, 217], "elles": [2, 3, 4, 9, 10, 32, 36, 37, 46, 48, 51, 53, 55, 56, 58, 65, 66, 67, 70, 78, 81, 83, 89, 91, 111, 112, 113, 114, 115, 124, 161, 162, 172, 178, 179, 196, 198, 199, 204, 206, 210, 211, 212, 214, 217, 219], "\u00e9vitent": [2, 206], "cr\u00e9ation": [2, 48, 49, 65, 66, 80, 91, 127, 170, 172, 178, 188, 196, 204, 206, 210, 212, 214, 217], "interm\u00e9diair": [2, 34, 56, 58, 65, 97, 98, 172, 173, 181, 199, 202, 206, 210, 211, 212, 215, 217], "prendr": [2, 14, 30, 36, 39, 49, 50, 53, 56, 70, 73, 78, 81, 84, 91, 102, 137, 145, 152, 162, 172, 174, 178, 179, 184, 186, 190, 196, 206, 210, 211, 214, 219], "laquel": [2, 25, 48, 50, 53, 56, 57, 66, 70, 74, 91, 96, 97, 104, 115, 131, 145, 163, 170, 175, 187, 188, 190, 196, 204, 206, 210, 211, 217], "volumin": [2, 53, 206, 211], "suivent": [2, 53, 55, 58, 65, 81, 178, 179, 199, 204, 206, 210, 211, 212, 214, 219], "permettent": [2, 14, 49, 53, 60, 65, 66, 70, 73, 104, 126, 130, 132, 146, 168, 178, 179, 188, 196, 198, 199, 202, 204, 206, 210, 211, 212, 214, 217, 219], "proced": [2, 53, 56, 65, 134, 138, 141, 148, 188, 190, 196, 204, 206, 212, 214, 217], "r\u00e9cuper": [2, 24, 38, 44, 48, 50, 65, 66, 91, 92, 97, 113, 125, 141, 149, 162, 163, 178, 179, 199, 201, 204, 205, 206, 207, 208, 210, 211, 212, 219], "depuis": [2, 4, 10, 31, 35, 38, 48, 49, 50, 51, 53, 58, 65, 66, 67, 92, 113, 149, 162, 163, 168, 172, 186, 196, 199, 204, 205, 206, 207, 208, 212, 214, 215, 217], "proven": [2, 4, 53, 67, 204, 206, 217], "tableur": [2, 206, 212], "d\u00e9composit": [2, 20, 39, 48, 73, 123, 154, 206], "split": [2, 10, 11, 44, 49, 65, 83, 137, 140, 145, 160, 162, 166, 167, 178, 179, 187, 204, 206, 211, 212, 214, 219], "tres": [2, 4, 14, 16, 33, 36, 37, 39, 40, 44, 48, 49, 51, 53, 56, 57, 58, 59, 60, 65, 66, 67, 73, 74, 83, 84, 85, 87, 88, 89, 91, 92, 95, 102, 105, 111, 112, 114, 117, 118, 124, 125, 126, 129, 131, 138, 141, 146, 148, 150, 152, 153, 161, 162, 169, 172, 178, 179, 180, 186, 187, 188, 194, 196, 199, 202, 204, 205, 206, 210, 211, 212, 214, 215], "travaill": [2, 48, 70, 104, 152, 179, 199, 206], "pand": [2, 3, 19, 22, 27, 28, 29, 41, 43, 46, 48, 69, 74, 81, 82, 84, 87, 105, 109, 110, 113, 124, 125, 131, 137, 138, 143, 144, 149, 153, 158, 159, 162, 163, 179, 206, 211, 221], "robust": [2, 14, 53, 66, 187, 206], "consider": [2, 3, 4, 14, 31, 36, 39, 48, 49, 51, 53, 55, 56, 58, 60, 65, 67, 75, 77, 79, 91, 95, 96, 104, 106, 107, 110, 111, 112, 114, 115, 125, 129, 143, 146, 150, 152, 163, 164, 165, 168, 172, 180, 184, 196, 198, 200, 204, 206, 210, 211, 214, 217, 219], "to_csv": [2, 49, 113, 138, 179, 206], "read_csv": [2, 28, 49, 51, 81, 113, 138, 162, 163, 179, 206], "direct": [2, 4, 36, 48, 49, 53, 65, 70, 75, 80, 81, 91, 102, 103, 105, 124, 146, 152, 166, 167, 168, 176, 177, 184, 187, 188, 196, 199, 200, 206, 210, 211, 212], "enregistr": [2, 38, 49, 50, 57, 65, 79, 138, 146, 149, 178, 179, 196, 206, 212, 214, 219], "excel": [2, 19, 65, 70, 206, 212], "read_excel": [2, 51, 138, 206], "to_excel": [2, 49, 138, 206], "triindex": [2, 5, 206], "quicksort": [2, 206], "consist": [2, 14, 18, 25, 32, 33, 40, 44, 49, 53, 55, 56, 58, 65, 66, 70, 75, 78, 79, 81, 85, 86, 90, 91, 102, 104, 105, 106, 111, 112, 124, 128, 134, 141, 148, 154, 155, 162, 172, 175, 179, 184, 187, 188, 196, 204, 206, 210, 211, 212, 214, 215, 217, 219], "pet": [2, 4, 6, 14, 15, 31, 33, 35, 39, 48, 50, 53, 58, 65, 67, 73, 74, 77, 79, 81, 83, 89, 91, 92, 94, 96, 102, 104, 109, 114, 115, 137, 140, 141, 151, 162, 170, 175, 180, 185, 194, 199, 206, 210, 211], "\u00e9chang": [2, 30, 53, 56, 57, 87, 102, 128, 141, 178, 196, 204, 206, 211, 212, 217], "plac": [2, 6, 8, 9, 10, 28, 53, 55, 65, 67, 70, 90, 91, 102, 104, 107, 108, 128, 131, 147, 150, 152, 162, 179, 185, 188, 196, 206, 210, 211, 212, 214, 217, 219], "recomment": [2, 25, 50, 109, 160, 161, 179, 185, 206, 217], "proc\u00e9dur": [2, 179, 206, 214], "troisiem": [2, 44, 50, 53, 56, 65, 70, 77, 84, 102, 118, 148, 169, 172, 178, 196, 199, 204, 206, 210, 211, 212, 217, 219], "jusqu": [2, 18, 28, 31, 40, 52, 53, 55, 56, 58, 65, 66, 70, 73, 77, 81, 83, 84, 91, 95, 96, 104, 127, 128, 164, 175, 186, 191, 196, 199, 200, 204, 205, 206, 210, 211, 212, 217], "6": [2, 4, 7, 11, 16, 18, 24, 29, 32, 33, 37, 39, 40, 44, 47, 48, 50, 51, 52, 53, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 164, 167, 168, 169, 170, 171, 172, 173, 175, 177, 181, 190, 191, 194, 196, 198, 202, 204, 205, 206, 207, 208, 210, 211, 217, 219], "exclu": [2, 31, 40, 65, 70, 94, 107, 108, 133, 181, 188, 204, 206, 210, 211], "pos": [2, 28, 39, 53, 56, 70, 82, 87, 90, 96, 102, 103, 105, 106, 109, 110, 111, 112, 114, 131, 137, 138, 143, 150, 159, 163, 169, 187, 194, 196, 198, 204, 206, 212, 219], "ech": [2, 102, 206], "selon": [2, 10, 14, 25, 48, 49, 51, 53, 56, 58, 65, 66, 70, 81, 84, 91, 95, 107, 108, 109, 111, 112, 117, 125, 131, 143, 146, 154, 155, 156, 157, 158, 159, 161, 168, 178, 186, 188, 196, 199, 204, 206, 208, 210, 211, 212, 219], "timsort": [2, 153, 206], "parfois": [2, 28, 32, 37, 48, 51, 53, 57, 58, 65, 66, 70, 77, 104, 113, 128, 137, 158, 159, 160, 162, 170, 187, 196, 199, 200, 202, 204, 205, 206, 208, 210, 211, 212, 214, 215, 217], "amen": [2, 91, 206], "parc": [2, 4, 25, 36, 37, 49, 56, 60, 65, 67, 70, 81, 84, 96, 158, 168, 169, 179, 196, 199, 206, 210, 211], "moin": [2, 4, 6, 9, 14, 25, 31, 39, 44, 49, 53, 56, 58, 65, 66, 67, 70, 73, 75, 80, 81, 83, 85, 87, 93, 95, 104, 109, 110, 114, 117, 134, 135, 138, 139, 141, 145, 146, 148, 150, 153, 158, 165, 168, 169, 170, 172, 178, 186, 196, 199, 200, 202, 204, 206, 207, 208, 210, 211, 212, 217, 219], "applic": [2, 31, 56, 196, 198, 206, 212], "tab": [2, 39, 94, 98, 102, 143, 206], "zero": [2, 29, 48, 65, 73, 199, 204, 206, 211], "trop": [2, 7, 9, 10, 14, 31, 36, 44, 48, 49, 51, 53, 55, 56, 57, 58, 65, 70, 73, 77, 81, 84, 87, 89, 91, 101, 104, 112, 114, 145, 146, 147, 158, 159, 168, 178, 190, 199, 206, 210, 211, 212, 214, 215, 217], "succinct": [2, 206], "tab_posit": [2, 206], "vect": [2, 206], "ncol": [2, 109, 206], "teachpyx": [3, 5, 6, 11, 19, 24, 25, 37, 44, 47, 49, 51, 55, 67, 68, 69, 70, 91, 92, 113, 124, 125, 141, 143, 144, 146, 150, 158, 159, 162, 163, 178, 179, 184, 185, 206, 212], "dataset": [3, 24, 25, 44, 51, 81, 113, 124, 125, 138, 160, 161], "load_enedis_dataset": [3, 5, 44], "datafram": [3, 11, 15, 29, 35, 69, 74, 81, 82, 84, 87, 105, 109, 110, 113, 124, 125, 131, 137, 138, 141, 143, 144, 149, 153, 158, 159, 209], "extrait": [3, 6, 10, 19, 34, 47, 48, 49, 51, 53, 58, 65, 66, 92, 158, 180, 196, 210, 212, 219], "ened": [3, 44], "product": [3, 200], "\u00e9lectr": [3, 57], "annuel": [3, 14, 44, 53, 104], "fili": [3, 44], "maill": 3, "commun": [3, 15, 44, 48, 49, 50, 53, 77, 92, 119, 124, 130, 184, 196, 210, 211, 212, 215, 217], "jeu": [3, 20, 24, 28, 36, 49, 70, 82, 89, 103, 123, 161, 168, 204, 208], "propos": [3, 4, 6, 17, 20, 25, 36, 39, 44, 49, 50, 53, 55, 56, 58, 67, 74, 81, 84, 90, 91, 93, 96, 102, 103, 104, 109, 110, 111, 112, 114, 117, 119, 133, 134, 136, 138, 141, 145, 151, 154, 155, 156, 157, 161, 162, 166, 167, 169, 170, 178, 179, 180, 185, 186, 188, 196, 198, 199, 200, 204, 205, 210, 211, 212, 214, 216, 217], "ann\u00e9": [3, 14, 15, 19, 20, 44, 49, 53, 70, 104, 113, 178, 179, 198, 217, 219], "2015": [3, 93, 94], "2016": [3, 4, 44, 67, 71, 93], "notebook": [3, 16, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 52, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 204, 215, 217], "trac": [3, 4, 8, 39, 45, 46, 49, 51, 57, 58, 67, 81, 91, 114, 123, 131, 158, 159, 185, 196, 200, 202, 212], "cart": [3, 4, 45, 46, 67, 168, 210], "load_wines_dataset": [3, 5, 24, 124, 125], "download": [3, 11, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 49], "bool": [3, 4, 7, 10, 11, 13, 48, 49, 65, 67, 126, 136, 205, 210], "shuffl": [3, 40, 153, 179], "win": [3, 204, 217], "quality": [3, 24, 124, 125], "pr\u00e9dict": [3, 14, 25, 81, 84, 105, 122, 160, 161], "vinsn": 3, "parametr": [3, 4, 6, 7, 9, 10, 11, 12, 13, 36, 39, 48, 49, 55, 56, 60, 77, 80, 91, 100, 101, 104, 106, 111, 112, 113, 114, 116, 126, 128, 132, 168, 170, 172, 179, 196, 198, 199, 204, 208, 211, 212, 214, 217, 219], "t\u00e9l\u00e9charg": [3, 4, 7, 44, 65, 67, 70, 141, 149, 178, 179, 184], "cop": [3, 4, 48, 49, 51, 66, 67, 71, 73, 74, 85, 94, 95, 136, 187, 188, 197, 210, 214, 215], "data_help": [3, 162, 163, 178, 179, 184, 185], "get_data_fold": [3, 5], "return": [3, 4, 6, 10, 11, 28, 29, 30, 31, 32, 36, 37, 39, 40, 44, 48, 49, 50, 60, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 159, 161, 165, 168, 169, 170, 171, 173, 175, 177, 178, 179, 184, 185, 186, 187, 190, 191, 193, 194, 196, 198, 199, 200, 204, 205, 206, 210, 211, 212, 214, 215, 217, 219], "fold": [3, 11, 12, 13, 61, 64, 212], "including": [3, 71], "packag": [3, 16, 19, 38, 44, 50, 145, 146, 147, 160, 178, 200, 204, 214, 216, 217], "load_wine_dataset": [3, 5], "logist": [3, 122], "courb": [3, 49, 53, 56, 66, 79, 81, 122, 174, 204], "rocn": 3, "dist": [4, 9, 49, 53, 80, 85, 88, 111, 112, 117, 146, 160, 162, 163, 191, 212], "common": [4, 28, 146, 211, 214], "interfac": [4, 39, 48, 62, 67, 70, 196, 204, 210, 214, 216, 220], "old": [4, 65, 211], "except": [4, 29, 31, 33, 36, 37, 38, 44, 48, 49, 50, 51, 53, 57, 60, 62, 70, 75, 76, 87, 92, 95, 96, 99, 102, 104, 105, 106, 108, 109, 110, 113, 125, 126, 130, 141, 150, 163, 172, 177, 179, 180, 181, 196, 202, 204, 205, 210, 211, 212, 214, 215, 217, 219, 220], "pqpiperror": [4, 5], "arg": [4, 11, 48, 84, 85, 105, 106, 162, 196, 200], "any": [4, 10, 11, 48, 71, 147, 196, 210], "raised": [4, 200], "following": [4, 11, 29, 48, 61, 71, 166, 167, 200, 204], "function": [4, 7, 10, 11, 13, 22, 27, 37, 41, 48, 65, 123, 137, 145, 146, 147, 160, 173, 200, 204, 208, 210, 214, 217, 219, 221], "class_getitem": [4, 5], "show": [4, 11, 24, 25, 48, 67, 124, 160], "enabl": [4, 145, 146, 147, 160], "instanc": [4, 11, 49, 55, 66, 67, 94, 128, 130, 132, 168, 197, 199, 204, 205, 210, 211, 214, 215, 217], "through": [4, 10], "__class_getitem__": [4, 196], "difference_div": [4, 5, 67], "quotient": [4, 67], "div1": [4, 67], "div2": [4, 67], "div3": [4, 67], "div4": [4, 67], "print": [4, 6, 11, 24, 25, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 47, 48, 49, 50, 51, 61, 64, 66, 70, 73, 75, 76, 77, 78, 79, 80, 83, 85, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 110, 111, 112, 113, 114, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 140, 141, 143, 145, 146, 147, 149, 154, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 185, 187, 188, 189, 190, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 214, 215, 217, 219], "rest": [4, 14, 28, 36, 37, 40, 50, 53, 56, 65, 66, 67, 76, 80, 84, 85, 87, 91, 92, 96, 97, 104, 109, 117, 126, 129, 140, 141, 150, 156, 157, 158, 172, 175, 177, 178, 179, 186, 187, 196, 199, 202, 204, 210, 211, 212, 215, 217], "obtenu": [4, 25, 40, 48, 53, 56, 65, 66, 67, 79, 82, 89, 104, 108, 136, 137, 175, 186, 196, 212, 214], "entier_grande_taill": [4, 5, 67], "maxint": [4, 67], "new": [4, 11, 28, 49, 53, 65, 67, 185, 211], "De": [4, 14, 28, 53, 67, 74, 81, 91, 114, 130, 134, 137, 158, 168, 172, 178, 181, 196, 200, 204, 210, 211, 212, 214, 217], "getrandb": [4, 67], "random": [4, 29, 40, 48, 49, 50, 67, 73, 74, 79, 80, 81, 82, 84, 85, 87, 88, 89, 91, 96, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 124, 125, 127, 131, 134, 139, 142, 143, 144, 153, 154, 155, 161, 162, 163, 170, 171, 175, 177, 179, 186, 187, 189, 190, 196, 205, 214, 217], "getrandbit": [4, 67], "2048": [4, 58, 67, 79, 95, 103, 123, 178], "Qui": [4, 28, 67, 83, 140], "2882159224557107513165483098383814837021447484558010147211921": [4, 67], "304219017212673656549681269862792029": [4, 67], "font": [4, 11, 28, 30, 48, 53, 56, 57, 65, 67, 77, 80, 109, 110, 178, 179, 196, 199, 204, 210, 211, 212, 217], "huit": [4, 67, 91, 211, 212, 219], "octet": [4, 6, 39, 67, 138, 141, 150, 179, 185, 208, 211, 212, 215], "Au": [4, 30, 32, 48, 49, 53, 55, 67, 79, 80, 107, 168, 196, 211, 214, 217], "del\u00e0": [4, 7, 49, 55, 67, 73, 104, 124, 162, 217], "librair": [4, 6, 37, 46, 48, 50, 51, 55, 60, 67, 68, 137, 141, 147, 152, 200, 211, 216], "gmpy2": [4, 67], "recommand": [4, 49, 65, 67, 70, 74, 93, 104, 150, 179, 196, 199, 204, 214], "20": [4, 7, 10, 11, 13, 25, 28, 34, 35, 37, 40, 44, 48, 49, 50, 51, 53, 58, 66, 67, 73, 80, 81, 82, 84, 85, 89, 91, 95, 96, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 124, 125, 134, 135, 138, 139, 143, 144, 146, 149, 150, 151, 158, 159, 161, 164, 168, 172, 174, 175, 178, 186, 187, 188, 189, 204, 207, 210, 211, 215, 217, 219], "40": [4, 28, 34, 36, 37, 48, 49, 51, 53, 67, 73, 84, 91, 104, 110, 113, 116, 125, 130, 144, 146, 150, 158, 159, 175, 204, 215, 219, 221], "chiffr": [4, 31, 33, 53, 57, 65, 66, 67, 90, 92, 103, 104, 168, 169, 176, 178, 199, 211, 219], "overview": [4, 67, 204], "remplac": [4, 31, 48, 65, 67, 74, 79, 91, 96, 97, 102, 104, 109, 110, 131, 152, 154, 168, 170, 172, 176, 178, 179, 188, 196, 198, 204, 210, 211, 212, 217, 219], "editeur": [4, 67], "bougent": [4, 55, 67, 136], "essentiel": [4, 53, 56, 65, 67, 170, 210, 214, 217], "m\u00e9lang": [4, 14, 67, 111, 112, 140, 196, 210], "aller": [4, 31, 39, 48, 58, 67, 75, 79, 83, 94, 141, 145, 169, 173, 174, 175, 178, 210], "menu": [4, 67, 179], "option": [4, 11, 16, 48, 49, 51, 53, 58, 61, 67, 70, 76, 80, 88, 90, 102, 109, 111, 112, 118, 124, 131, 135, 141, 149, 168, 196, 204, 211, 214, 219], "indent": [4, 65, 67, 127, 129, 181, 196, 199, 209], "setting": [4, 63, 67], "similair": [4, 49, 51, 53, 58, 66, 67, 91, 162, 196, 210, 211, 217, 219], "enumerate_regex_search": [4, 5, 67], "exp": [4, 33, 48, 67, 90, 95, 147, 153, 159, 178, 179, 214, 219], "occurent": [4, 65, 142, 211], "pars": [4, 38, 200, 212], "findit": [4, 67, 90, 140, 178], "found": [4, 28, 49, 67, 118, 178], "get_day_nam": [4, 5, 67], "day": [4, 53, 81, 179, 207], "nam": [4, 11, 28, 38, 44, 49, 51, 64, 66, 67, 96, 99, 125, 132, 144, 149, 162, 163, 196, 200, 210, 211, 214, 217], "giv": 4, "datatim": 4, "month": 4, "datetim": [4, 49, 67, 81, 91, 179, 209, 211, 214], "friday": [4, 67], "get_installed_distribu": [4, 5], "local_only": 4, "skip": [4, 91, 125], "include_edit": 4, "editables_only": 4, "user_only": 4, "use_cmd": 4, "installed": 4, "default": [4, 11, 37, 38, 61, 65, 204, 210, 214, 215, 219], "current": [4, 80, 109, 138, 166, 167, 214], "virtualenv": 4, "low": [4, 25, 29, 65, 83, 137, 166, 167, 211, 219], "ignor": [4, 125, 179, 202, 208, 210], "compat": 4, "stdlib_pkg": 4, "report": 4, "user": [4, 63, 64, 130, 149, 204, 211], "directory": [4, 38, 214, 219], "use": [4, 11, 28, 29, 38, 48, 71, 214], "updated": [4, 61], "get_month_nam": [4, 5, 67], "january": [4, 67], "get_package_info": [4, 5], "start": [4, 11, 17, 65, 73, 140, 145, 178, 211, 217], "end": [4, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 53, 55, 56, 58, 65, 66, 77, 79, 81, 97, 105, 106, 118, 124, 140, 154, 158, 159, 162, 163, 175, 178, 200, 204, 211, 217, 219], "retriev": [4, 64], "he": [4, 166, 167], "all": [4, 10, 11, 22, 28, 48, 71, 146, 147, 166, 167, 187, 196, 214, 219, 221], "get_packages_list": [4, 5], "dictionar": [4, 11], "information_about_packag": [4, 5, 67], "nouveau": [4, 51, 53, 65, 67, 77, 81, 127, 131, 132, 137, 141, 153, 162, 172, 178, 179, 186, 187, 196, 198, 204, 211, 212], "main": [4, 7, 11, 49, 51, 61, 65, 67, 91, 92, 113, 138, 141, 162, 163, 178, 179, 184, 185, 200, 217], "lent": [4, 39, 48, 55, 56, 57, 58, 67, 87, 95, 128, 141, 145, 146, 147, 158, 159, 161, 205, 211, 215], "incluent": [4, 65, 67, 211, 214], "matplotlib": [4, 25, 29, 40, 44, 48, 50, 51, 62, 67, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 100, 101, 104, 107, 108, 109, 110, 111, 112, 113, 116, 124, 125, 127, 131, 134, 135, 137, 139, 143, 144, 149, 153, 161, 175, 179, 182, 183, 185], "scipy": [4, 47, 50, 58, 62, 67, 85, 111, 112, 117, 134, 146, 147, 161, 168, 214], "scik": [4, 67, 124, 125, 152, 202, 216], "learn": [4, 67, 124, 125, 152, 202, 216], "linux": [4, 16, 38, 59, 62, 67, 70, 162, 204, 208, 211, 212], "compil": [4, 67, 90, 145, 146, 150, 178, 179, 197, 199, 211, 214, 219], "met": [4, 36, 55, 56, 58, 67, 99, 107, 108, 114, 126, 150, 169, 196, 204, 210], "implicit": [4, 25, 49, 65, 67, 115, 130, 131, 141, 178, 187, 210, 211, 212], "contribu": [4, 67, 179, 214], "d\u00e9faut": [4, 16, 32, 48, 49, 51, 53, 65, 67, 70, 94, 95, 106, 130, 146, 172, 188, 189, 196, 204, 209, 211, 212, 214, 215, 217, 219], "attent": [4, 14, 16, 30, 40, 48, 53, 65, 67, 81, 91, 149, 179, 190, 199, 208, 210, 214], "exact": [4, 49, 65, 67, 83, 104, 135, 146, 167, 173, 196, 204, 210], "compiling": [4, 67], "anacond": [4, 16, 19, 67, 70], "pr\u00e9compil": [4, 67, 214], "cond": [4, 66, 67, 70, 179, 210], "module_compil": [4, 67], "list_of_installed_packag": [4, 5, 67], "licens": [4, 67, 69, 179], "summary": [4, 67], "powerful": [4, 67], "analys": [4, 55, 64, 66, 67, 73, 81, 105, 158, 211], "statistic": [4, 11, 67], "hom": [4, 37, 38, 44, 67, 124, 145, 160, 178, 200], "pydat": [4, 51, 67], "author": [4, 67, 71], "development": [4, 16, 67], "team": [4, 67, 166, 167], "email": [4, 38, 60, 65, 67, 212], "googlegroup": [4, 67], "com": [4, 7, 38, 44, 49, 51, 61, 67, 81, 91, 92, 113, 141, 162, 163, 178, 179, 184, 185, 187, 212, 219], "bsd": [4, 67], "locat": [4, 7, 44, 67, 138, 166, 167, 190], "python35_x64": [4, 67], "lib": [4, 44, 50, 63, 64, 67, 145, 146, 147, 160, 178, 200, 204], "requir": [4, 10, 61, 67], "dateutil": [4, 67, 81], "pytz": [4, 67], "freez": [4, 67], "r\u00e9pliqu": [4, 65, 67, 96], "environ": [4, 31, 48, 53, 56, 67, 70, 91, 95, 117, 211, 214], "docutil": [4, 67, 200], "jinja2": [4, 67, 178, 179], "markupsaf": [4, 67], "19": [4, 28, 39, 40, 44, 48, 49, 50, 51, 53, 67, 73, 78, 79, 80, 81, 84, 91, 96, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 124, 125, 134, 135, 138, 144, 145, 146, 147, 148, 149, 150, 153, 158, 159, 161, 168, 172, 175, 178, 179, 181, 188, 189, 196, 207, 210, 211, 219], "pygment": [4, 67], "sphinx": [4, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 67, 196, 200], "txt": [4, 49, 61, 65, 67, 92, 162, 163, 178, 179, 184, 185, 199, 200, 208, 211, 212], "property_exampl": [4, 5, 67], "property": [4, 11, 28, 65, 66, 67, 141, 196, 204], "appel": [4, 30, 31, 36, 37, 39, 48, 50, 51, 53, 55, 58, 65, 67, 77, 80, 84, 89, 91, 92, 95, 108, 114, 124, 128, 130, 131, 132, 145, 146, 147, 158, 162, 164, 168, 170, 172, 175, 178, 179, 187, 188, 190, 198, 199, 201, 202, 204, 207, 208, 211, 212, 214, 216, 217, 219], "attribut": [4, 11, 19, 28, 37, 39, 48, 67, 96, 123, 126, 130, 132, 197, 198, 199, 204, 205, 212, 215, 217, 219], "classeavecproperty": [4, 67], "__init__": [4, 28, 37, 39, 44, 65, 66, 67, 118, 126, 127, 128, 129, 130, 131, 132, 145, 146, 147, 160, 168, 169, 170, 187, 190, 196, 198, 199, 200, 204, 212, 214, 215, 217], "self": [4, 28, 37, 39, 44, 50, 55, 65, 66, 67, 118, 126, 127, 128, 129, 130, 131, 132, 168, 169, 170, 171, 187, 190, 196, 198, 199, 200, 204, 211, 212, 214, 215, 217], "_x": [4, 67, 196], "_y": [4, 67, 196], "norm2": [4, 67], "impossibl": [4, 28, 36, 37, 39, 40, 53, 58, 66, 67, 74, 80, 81, 87, 92, 96, 172, 196, 202, 210, 211, 212, 214, 215], "\u00e9criv": [4, 39, 67, 96, 146, 170, 172, 204, 211], "455": [4, 67, 160], "attributeerror": [4, 67, 96, 196, 199, 205], "python_path": [4, 5, 67], "pr\u00e9sent": [4, 7, 31, 32, 48, 49, 53, 55, 56, 58, 65, 66, 67, 73, 81, 84, 89, 105, 106, 117, 119, 128, 129, 137, 138, 149, 152, 162, 172, 178, 179, 184, 188, 197, 199, 202, 204, 210, 211, 212, 214, 217, 219], "introduit": [4, 48, 49, 65, 67, 106, 128, 172, 210, 214], "avant": [4, 12, 13, 14, 28, 39, 49, 50, 51, 53, 55, 56, 58, 65, 66, 67, 79, 80, 87, 89, 91, 95, 104, 109, 110, 140, 141, 162, 164, 172, 177, 178, 179, 180, 186, 187, 190, 196, 199, 204, 210, 211, 212, 214, 217], "fais": [4, 48, 49, 67, 84, 185, 196, 210, 211, 217], "moncod": [4, 67], "monmodul": [4, 67, 178], "src": [4, 67, 78, 83], "petit": [4, 18, 31, 49, 53, 56, 57, 58, 62, 67, 78, 82, 83, 84, 91, 102, 104, 124, 143, 150, 158, 170, 174, 179, 182, 183, 184, 194, 204, 210, 211, 214, 219], "fois": [4, 6, 10, 14, 25, 28, 31, 37, 48, 50, 53, 55, 56, 57, 58, 60, 65, 67, 70, 73, 76, 78, 79, 80, 82, 83, 84, 89, 90, 91, 92, 94, 95, 96, 102, 104, 105, 107, 108, 109, 110, 111, 112, 114, 117, 127, 128, 133, 134, 135, 136, 145, 150, 153, 163, 165, 168, 169, 172, 173, 175, 177, 178, 179, 180, 186, 187, 188, 196, 198, 199, 202, 204, 205, 210, 211, 212, 214, 215, 216, 217, 219], "barb": [4, 67], "ailleur": [4, 48, 53, 58, 67, 70, 91, 127, 139, 187, 202, 210], "pythonpath": [4, 67], "same_vari": [4, 5, 67], "dit": [4, 10, 31, 36, 40, 49, 53, 55, 58, 65, 66, 73, 80, 81, 91, 92, 105, 106, 124, 150, 158, 159, 168, 172, 175, 179, 196, 199, 204, 210, 211, 212, 217], "modifi": [4, 39, 48, 49, 51, 53, 60, 62, 67, 79, 81, 85, 91, 94, 96, 99, 102, 103, 104, 106, 107, 109, 114, 115, 133, 136, 141, 150, 152, 170, 178, 180, 187, 188, 196, 198, 199, 200, 202, 204, 207, 209, 212, 214, 215, 217], "concern": [4, 25, 49, 53, 56, 65, 67, 70, 179, 196, 199, 204, 208, 210, 211, 212, 217, 219], "principal": [4, 39, 44, 50, 51, 53, 55, 58, 65, 67, 69, 70, 150, 161, 172, 178, 180, 202, 211, 212, 214, 215, 217, 219], "float": [4, 7, 8, 9, 10, 11, 22, 27, 39, 41, 44, 48, 50, 52, 65, 67, 92, 109, 119, 126, 130, 146, 150, 162, 175, 178, 179, 199, 210, 211, 214, 219, 221], "effectu": [4, 10, 31, 36, 37, 39, 48, 49, 50, 51, 53, 55, 65, 67, 79, 84, 102, 104, 105, 111, 112, 150, 156, 157, 162, 164, 169, 173, 179, 186, 187, 191, 196, 199, 204, 208, 210, 211, 212, 214, 215, 217, 219], "dictionnair": [4, 31, 36, 37, 49, 51, 58, 67, 74, 90, 94, 95, 96, 97, 99, 102, 105, 118, 119, 123, 132, 141, 158, 162, 168, 184, 185, 186, 187, 198, 199, 205, 210, 212, 214, 215, 217, 219], "mutabl": [4, 67, 187, 188, 209], "d\u00e9sign": [4, 36, 39, 48, 49, 50, 51, 53, 55, 56, 65, 66, 67, 106, 124, 127, 133, 138, 141, 148, 158, 168, 180, 187, 196, 204, 208, 210, 211, 214, 217, 219], "emplac": [4, 67, 111, 112], "accessibl": [4, 44, 53, 66, 67, 113, 163, 178, 196, 204, 210, 211, 212, 214], "paur": [4, 67], "identifi": [4, 14, 50, 53, 65, 67, 130, 187, 204, 210, 211], "_immutable_": [4, 67], "_mutable_": [4, 67], "effet": [4, 36, 53, 56, 67, 73, 85, 104, 107, 134, 187, 196, 204, 210, 211, 212, 214], "copi": [4, 51, 65, 67, 95, 109, 110, 131, 196, 211, 212], "explicit": [4, 28, 39, 48, 52, 65, 66, 67, 94, 95, 114, 128, 141, 188, 196, 198, 199, 201, 204, 210, 211, 214, 217], "demand": [4, 14, 25, 55, 57, 60, 65, 67, 70, 94, 95, 105, 179, 187, 188, 196, 204, 211, 219], "sequenc": [4, 11, 67, 204, 211], "d\u00e9taill": [4, 44, 51, 58, 67, 91, 199], "parm": [4, 9, 14, 25, 28, 36, 48, 53, 56, 67, 84, 95, 105, 113, 124, 131, 136, 137, 162, 163, 172, 178, 196, 210, 211, 212, 214], "byt": [4, 67, 178, 200, 208, 212, 215], "frozenset": [4, 11, 67, 133], "dict": [4, 7, 10, 11, 25, 29, 37, 44, 51, 65, 67, 73, 74, 81, 82, 83, 84, 90, 99, 105, 109, 110, 113, 116, 124, 125, 131, 133, 138, 144, 146, 147, 149, 150, 153, 173, 196, 205, 210, 215], "bytearray": [4, 67], "rendr": [4, 14, 39, 67, 83, 91, 179, 204, 210], "__slots__": [4, 66, 67, 196, 211], "mak": [4, 11, 67, 166, 167], "surcharg": [4, 48, 65, 67, 128, 130, 170, 197, 212, 217], "__getattr__": [4, 67, 160], "__getattribute__": [4, 67, 196], "__setattr__": [4, 67, 196], "enfin": [4, 48, 53, 67, 92, 114, 139, 158, 179, 196, 204], "imbriquent": [4, 67], "uns": [4, 30, 53, 67, 70, 80, 141, 179, 204, 212, 219], "deepcopy": [4, 28, 65, 67, 211], "recop": [4, 48, 67, 148, 188, 196, 211], "uniqu": [4, 7, 14, 30, 48, 49, 50, 51, 58, 65, 66, 67, 78, 80, 90, 95, 114, 126, 133, 138, 164, 166, 167, 168, 169, 173, 184, 188, 189, 196, 199, 204, 208, 210, 211, 212, 215, 217], "copy": [4, 28, 39, 40, 44, 49, 51, 65, 67, 71, 73, 74, 80, 81, 84, 85, 90, 91, 94, 102, 106, 107, 109, 110, 111, 113, 124, 128, 136, 137, 139, 144, 153, 154, 159, 190, 193, 210, 211, 212, 214, 217], "inclus": [4, 10, 36, 40, 48, 55, 56, 65, 67, 68, 91, 99, 158, 178, 199, 204, 210, 211, 212, 219], "appliquent": [4, 53, 65, 67, 153, 198, 204, 211, 219], "sortable_class": [4, 5, 67], "cl": [4, 11, 28, 37, 66, 118, 153, 196, 215], "prononc": [4, 67, 186], "o1": [4, 67, 196], "o2": [4, 67, 196], "macl": [4, 67], "__lt__": [4, 67, 196], "autre_inst": [4, 67], "jenesaisp": [4, 67], "jenesaispas2": [4, 67], "teturn": 4, "io": [4, 19, 28, 37, 38, 44, 49, 63, 67, 78, 83, 138, 141, 145, 146, 147, 149, 160, 200, 212, 215, 219], "disqu": [4, 58, 67, 70, 130, 141, 178, 179, 212, 214], "dur": [4, 14, 48, 49, 51, 53, 58, 66, 67, 69, 81, 104, 114, 141, 178, 179, 207, 211, 212, 214, 217, 219], "ordin": [4, 18, 31, 39, 53, 58, 65, 66, 67, 70, 106, 141, 180, 200, 208, 211, 212, 214, 217], "automatis": [4, 57, 67, 70, 180], "processur": [4, 67], "r\u00e9pet": [4, 36, 48, 60, 65, 67, 70, 92, 96, 104, 109, 110, 111, 112, 162, 163, 168, 177, 178, 179, 180, 188, 196, 210, 212], "processus_quotidien": [4, 67], "nom_fichi": [4, 67, 212], "nb": [4, 9, 10, 12, 13, 28, 30, 44, 48, 49, 67, 75, 80, 85, 87, 91, 96, 100, 101, 102, 109, 110, 126, 131, 175, 196, 204, 210, 214], "open": [4, 19, 38, 44, 48, 49, 51, 60, 65, 67, 141, 149, 162, 178, 179, 185, 199, 200, 208, 212, 217, 219], "recopi": [4, 34, 60, 65, 67, 141, 172, 187, 196, 210, 211, 212, 214], "gigaoctet": [4, 67], "apercevoir": [4, 67, 210], "corrompu": [4, 67], "perdu": [4, 30, 53, 65, 67, 150, 160, 178, 179, 181, 199, 212, 217], "heur": [4, 49, 53, 66, 67, 93, 179, 207, 214], "aur": [4, 36, 40, 48, 49, 53, 58, 65, 67, 83, 91, 107, 111, 112, 124, 126, 167, 178, 179, 196, 199, 211, 212, 214], "voulu": [4, 67, 75, 99], "d\u00e8s": [4, 14, 53, 57, 58, 60, 65, 67, 70, 102, 104, 126, 128, 162, 170, 175, 179, 196, 199, 204, 211, 212], "invent": [4, 58, 67], "stream": [4, 67, 145, 146, 147, 149, 160, 212], "flux": [4, 67, 73, 74], "data_stream": [4, 67], "__file__": [4, 67, 146, 147, 160, 211, 214, 219], "ligne1": [4, 67], "nligne2": [4, 67], "st": [4, 28, 65, 67, 90, 113, 141, 207, 208, 211], "call_stack": [4, 5], "lambert93_to_wgp": [4, 5, 44, 67], "lambert": [4, 44, 67], "lambertn": 4, "coordinat": [4, 10, 211], "given": [4, 166, 167, 210], "93": [4, 44, 51, 67, 73, 89, 110, 114, 142, 160], "ign": 4, "east": [4, 166, 167], "north": [4, 44, 166, 167], "lam93tolatlon": 4, "coordon": [4, 7, 8, 10, 14, 36, 44, 50, 51, 55, 56, 57, 58, 67, 87, 91, 95, 110, 111, 112, 161, 168, 196, 199, 204, 210], "contenu": [4, 36, 39, 53, 65, 66, 67, 69, 130, 149, 178, 179, 189, 196, 204, 210, 211, 212, 214], "exprim": [4, 28, 39, 53, 56, 58, 66, 67, 158, 161, 162, 179, 204], "coniqu": [4, 67], "cartopy": [4, 21, 45, 67], "conformal": [4, 67], "to_float32": [4, 5], "exampl": [5, 11, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 61, 64, 67, 68, 75, 92, 115, 126, 188, 204, 206, 221], "construction_class": [5, 68, 206], "somm": [5, 6, 14, 29, 30, 31, 39, 47, 48, 49, 53, 56, 60, 65, 70, 74, 75, 76, 80, 81, 91, 95, 96, 98, 104, 107, 108, 119, 126, 129, 150, 158, 161, 168, 169, 173, 174, 175, 176, 179, 180, 181, 198, 210, 211, 214, 217, 219], "jeux": [5, 15, 49, 51, 68, 70, 81, 91, 119, 123, 160, 161, 209, 217], "cartograph": [5, 44], "r\u00e9gress": [5, 105, 106, 107, 125], "tool": [5, 68, 143, 146, 150, 158, 159, 162, 163, 178, 179, 184, 185], "decompress_zip": 5, "download_and_unzip": [5, 162, 163, 178, 179, 184, 185], "draw_diagram": [5, 143], "draw_graph_graphviz": [5, 158, 159], "total_siz": [5, 150], "profiling": [5, 160], "profilenod": [5, 11], "add_called_by": [5, 11], "add_calls_to": [5, 11], "as_dict": [5, 11], "filter_node_": [5, 11], "get_root": [5, 11], "to_json": [5, 11, 138], "to_text": [5, 11, 146], "profil": [5, 11, 53, 146, 160, 214], "profile2df": [5, 11], "profile2graph": [5, 11, 146], "run_graphviz": 5, "run_subprocess": 5, "build_diff_imag": [5, 11], "display_lin": [5, 11], "empty_main_loop": [5, 11], "get_pygame_screen_font": [5, 11], "wait_event": [5, 11], "get_local_fold": [5, 11], "make_video": [5, 11], "practic": [5, 12, 55, 68, 91, 164, 166, 167], "rues_par": [5, 68, 91], "bellman": [5, 7, 162], "connected_component": [5, 7], "distance_haversin": [5, 7, 91, 132], "distance_par": [5, 7], "euler_path": [5, 7, 91], "eulerien_extens": [5, 7, 91], "get_dat": [5, 7, 91], "graph_degre": [5, 7], "possible_edg": [5, 7], "tsp_bresenham": [5, 68], "draw_ellips": [5, 8], "draw_lin": [5, 8], "trace_ligne_simpl": [5, 8], "tsp_kohonen": [5, 12, 55, 68], "ajoute_vecteur": [5, 9], "construit_liste_neuron": [5, 9], "construit_vill": [5, 9, 10], "deplace_neuron": [5, 9], "distance_chemin": [5, 9, 88], "distance_euclidienne_carre": [5, 9], "modifie_structur": [5, 9], "moyenne_proximit": [5, 9], "multiplie_vecteur": [5, 9], "poids_attir": [5, 9], "simul": [5, 9, 10, 12, 13, 53, 105, 113, 123, 156, 157, 177, 196, 210, 214, 217], "soustrait_vecteur": [5, 9], "vecteur_norm": [5, 9, 10], "tsp_kruskal": [5, 56, 68], "amelioration_chemin": [5, 10], "arbre_poids_minimal": [5, 10], "circuit_eulerien": [5, 10], "circuit_hamiltonien": [5, 10], "dessin_arete_zon": [5, 10], "distance_euclidian": [5, 10], "echange_posit": [5, 10], "echange_position_ess": [5, 10], "equation_droit": [5, 10], "evaluation_droit": [5, 10], "intersection_segment": [5, 10], "longueur_chemin": [5, 10], "oppose_vecteur": [5, 10], "repartition_zon": [5, 10], "retournement_ess": [5, 10], "supprime_crois": [5, 10], "tsp_kruskal_algorithm": [5, 10, 13], "vecteur_cosinus": [5, 10], "vecteur_point": [5, 10], "vecteur_sinus": [5, 10], "voisinage_zon": [5, 10], "voisinage_zone_xy": [5, 10], "tsp_kohonen_pygam": [5, 68], "pygame_simul": [5, 12, 13], "numpysex": [5, 47, 67, 68], "numpy_matrix2list": [5, 6, 47], "numpy_typ": [5, 6, 67], "faq_python": [5, 67], "stringio": [5, 28, 37, 138, 141, 145, 146, 147, 160, 215], "faq_except": 5, "faq_geo": [5, 67], "faq_numpy": 5, "voic": [6, 17, 36, 39, 47, 48, 49, 51, 58, 65, 99, 104, 133, 148, 158, 187, 196, 204, 210, 211, 212, 214, 217], "np": [6, 19, 40, 47, 48, 52, 55, 58, 88, 91, 109, 110, 130, 147, 154, 155, 158, 191, 193], "shap": [6, 29, 34, 47, 49, 50, 51, 52, 74, 78, 80, 81, 82, 84, 85, 88, 89, 105, 106, 109, 110, 113, 114, 117, 124, 125, 131, 138, 139, 144, 146, 147, 149, 151, 152, 154, 155, 161, 162, 177, 193, 217], "iv": [6, 47], "10x10": [6, 47, 48], "diag": [6, 47, 48, 106, 154, 155], "diagonal": [6, 36, 39, 47, 48, 53, 66, 69, 70, 74, 106, 124, 154, 155, 163, 168], "dd": [6, 47, 81, 82, 187], "transpos": [6, 47, 48, 49, 50, 53, 58, 106, 146, 154, 155, 196, 204], "mx": [6, 47, 107, 108], "diagflat": [6, 47], "bool\u00e9en": [6, 36, 47, 48, 49, 65, 204, 210], "avail": [6, 11], "bit": [6, 73, 118, 156, 157, 211, 212], "thos": 6, "programmeur": [6, 65, 67, 196, 198, 204, 208, 212], "cherchent": [6, 53, 56, 67], "possed": [6, 48, 53, 55, 56, 65, 67, 87, 92, 104, 179, 186, 196, 199, 204, 211, 217], "255": [6, 67, 196], "uint8": [6, 67], "expliqu": [6, 22, 27, 31, 41, 51, 53, 55, 66, 67, 84, 90, 104, 107, 108, 115, 123, 125, 150, 153, 175, 187, 196, 199, 210, 211, 212, 221], "float32": [6, 39, 51, 67, 146], "plut\u00f4t": [6, 14, 32, 48, 49, 51, 53, 55, 57, 58, 60, 65, 66, 67, 70, 80, 81, 95, 96, 102, 104, 109, 110, 114, 117, 125, 126, 134, 145, 150, 153, 184, 185, 186, 188, 196, 199, 200, 204, 210, 211, 212, 215, 217], "float64": [6, 48, 49, 50, 51, 67, 81, 193, 217], "doubl": [6, 29, 53, 58, 66, 67, 91, 95, 96, 99, 102, 114, 188, 204, 211, 212, 219], "prennent": [6, 53, 58, 67, 70, 138, 210], "co\u00fbteux": [6, 53, 56, 67, 133, 145, 146, 164, 196, 211, 212], "gpu": [6, 48, 67], "explaining": [6, 67], "fp64": [6, 67], "perform": [6, 14, 25, 50, 53, 56, 67, 73, 79, 124, 135, 173, 174, 176, 205, 212, 217], "gpus": [6, 67], "edge": [7, 11, 74, 80, 91, 102, 159, 162, 163], "max_it": [7, 9, 10, 12, 13, 81, 111, 112, 124], "allow": [7, 49, 204], "callabl": [7, 10, 11, 210], "init": [7, 61, 63, 91, 111, 112], "verbos": [7, 9, 10, 11, 13, 77, 91, 111, 112, 114, 136], "ford": [7, 91, 162], "noeud": [7, 10, 56, 74, 80, 83, 90, 91, 102, 119, 127, 129, 158, 159, 162, 186, 187], "maximal": [7, 48, 53, 58, 79, 97, 104, 150, 158, 167, 173, 175, 186, 187, 217], "envisag": [7, 36, 53, 56, 91, 104, 114, 163, 167, 204, 212], "liaison": 7, "continu": [7, 19, 28, 48, 53, 55, 65, 70, 77, 78, 80, 81, 83, 84, 87, 90, 91, 102, 105, 109, 110, 111, 112, 115, 117, 118, 125, 128, 137, 152, 162, 175, 177, 179, 187, 188, 189, 193, 194, 199, 200, 202, 219], "ex\u00e9cu": [7, 32, 53, 56, 65, 66, 70, 91, 98, 104, 114, 127, 145, 153, 172, 178, 186, 187, 188, 190, 196, 199, 200, 202, 204, 210, 211, 212, 217], "progres": 7, "arc": [7, 10, 40, 56, 74, 80, 91, 102, 158, 159, 210], "connected": [7, 10], "component": [7, 10, 214], "vertex": [7, 80], "id": [7, 38, 73, 78, 83, 141, 204, 210, 211], "lat1": [7, 132], "lng1": [7, 132], "lat2": [7, 132], "lng2": [7, 132], "haversin": [7, 91], "formul": [7, 48, 50, 70, 75, 105, 108, 115, 124, 148], "euclidien": [7, 9, 58, 158, 159], "approch": [7, 14, 31, 39, 40, 56, 58, 81, 91, 104, 106, 119, 139, 158, 162, 167, 219], "paris": [7, 49, 53, 104, 119], "added_edg": [7, 91], "eulerian": [7, 91], "path": [7, 10, 28, 38, 61, 64, 90, 91, 146, 147, 160, 178, 200, 204, 212, 214], "we": [7, 11, 28, 29, 48, 91, 214], "assum": [7, 11, 179], "every": [7, 11, 49, 61, 166, 167], "has": [7, 11, 29, 61, 96, 106, 114, 166, 167, 196, 204], "even": [7, 203], "degre": [7, 80, 151, 210], "added": [7, 61, 91], "typing": 7, "eul\u00e9rien": [7, 10], "coefficient": [7, 10, 48, 50, 53, 74, 80, 87, 91, 95, 104, 105, 106, 124, 150, 161, 169, 172, 196], "max_segment": [7, 91], "longu": [7, 10, 31, 53, 56, 57, 58, 66, 76, 77, 78, 90, 91, 104, 114, 115, 175, 178, 196, 210, 211, 214, 215], "avanc": [7, 18, 57, 58, 73, 80, 179, 187, 204, 210, 211], "url": [7, 11, 44, 51, 81, 91, 92, 141, 149, 162, 163, 184, 185], "sdpython": [7, 19, 49, 51, 61, 78, 83, 91, 92, 113, 141, 162, 163, 178, 179, 184, 185], "raw": [7, 11, 49, 51, 81, 91, 92, 113, 141, 149, 162, 163, 178, 179, 184, 185], "_dat": [7, 49, 51, 91, 92, 113, 141, 162, 163, 178, 179, 184, 185], "paris_54000": [7, 91], "zip": [7, 11, 22, 33, 44, 49, 76, 80, 91, 99, 105, 107, 108, 113, 138, 146, 162, 163, 178, 179, 184, 185, 210, 213, 214, 217], "dest": [7, 11], "timeout": [7, 11, 63, 217], "keep": [7, 11, 91], "ru": [7, 119], "rightarrow": [7, 49, 56, 58, 91, 95, 98, 99, 106, 139], "cec": [7, 12, 13, 37, 39, 53, 55, 56, 65, 66, 70, 73, 79, 94, 96, 97, 99, 115, 117, 128, 136, 150, 178, 186, 187, 190, 196, 199, 202, 204, 210, 211, 212, 219], "test": [7, 11, 19, 20, 25, 28, 36, 39, 48, 49, 53, 56, 58, 62, 79, 81, 87, 91, 94, 95, 98, 104, 113, 119, 123, 125, 128, 139, 146, 151, 162, 164, 169, 173, 177, 180, 185, 190, 196, 200, 202, 209, 211, 212, 214], "estabishing": 7, "connect": [7, 10, 19, 56, 65, 71, 80, 89, 102, 204, 212], "gard": [7, 18, 49, 50, 51, 53, 65, 75, 79, 84, 87, 89, 91, 92, 102, 107, 108, 109, 110, 114, 115, 140, 141, 159, 200, 214, 217], "sinon": [7, 10, 48, 56, 65, 70, 74, 79, 80, 84, 85, 92, 94, 97, 101, 102, 104, 105, 114, 139, 148, 158, 159, 162, 172, 175, 177, 189, 204, 210, 211, 214, 217, 219], "1000": [7, 9, 10, 28, 29, 38, 44, 48, 49, 50, 51, 53, 65, 73, 74, 81, 84, 89, 95, 101, 104, 106, 107, 108, 109, 110, 117, 118, 124, 133, 134, 139, 142, 143, 145, 150, 161, 168, 172, 178, 179, 186, 187, 204, 210, 211, 212], "construir": [7, 14, 39, 44, 48, 49, 50, 53, 55, 56, 65, 66, 75, 79, 85, 90, 91, 95, 105, 111, 112, 116, 117, 119, 146, 154, 155, 161, 162, 175, 184, 186, 187, 194, 196, 204, 207, 210, 211, 219], "uple": [7, 36, 65, 199, 207, 211, 219], "conten": [7, 48, 49, 55, 65, 66, 70, 115, 141, 154, 155, 165, 168, 180, 196, 199, 204, 210, 211, 212, 219], "v1": [7, 85, 87, 91, 102, 162, 163, 188, 211], "v2": [7, 85, 87, 91, 102, 162, 163, 188, 211], "p1": [7, 9, 10, 11, 28, 65, 124, 128, 130, 159, 163, 168, 212], "p2": [7, 9, 10, 11, 28, 65, 124, 128, 130, 159, 163, 168, 196, 212], "ressembl": [7, 12, 13, 49, 55, 57, 58, 73, 77, 97, 102, 183, 188, 196, 212, 215], "threshold": [7, 124, 146], "vol": [7, 91], "oiseau": [7, 28, 91], "duquel": [7, 124], "symetr": [7, 49, 65, 78, 80, 91, 94, 154, 172], "inclu": [7, 65, 66, 79, 87, 172, 178, 207, 210, 211, 212, 214], "xc": 8, "yc": 8, "dessin": [8, 24, 44, 78, 83, 85, 89, 158, 159, 182, 183, 204], "ellips": 8, "centr": [8, 14, 28, 111, 112, 204, 210], "dem": [8, 91, 96, 112, 129], "axe": [8, 10, 29, 49, 53, 66, 81, 100, 101, 158, 159, 174, 204], "horizontal": [8, 10, 48, 53, 66, 73, 163, 204], "vertical": [8, 10, 48, 53, 66, 204], "\u00e9quat": [8, 10, 39, 81, 105, 106, 211], "x\u00b2": 8, "a\u00b2": 8, "y\u00b2": 8, "b\u00b2": 8, "origin": [8, 48, 61, 78, 207], "tangent": [8, 210], "x0": [8, 40, 48], "y0": [8, 40], "frac": [8, 25, 31, 39, 48, 50, 52, 53, 55, 56, 58, 73, 79, 81, 82, 84, 94, 95, 96, 97, 104, 105, 106, 108, 109, 110, 118, 139, 151, 154, 155, 156, 157, 158, 161, 164, 174, 175, 183, 189, 191, 196], "x_0": [8, 44, 156, 157], "y_0": [8, 44], "bresenham": 8, "x1": [8, 29, 40, 48, 96, 111, 112, 116, 152], "y1": [8, 40, 96, 111, 112, 116, 152], "x2": [8, 29, 48, 58, 96, 107, 108, 111, 112, 116, 135, 152, 154, 155, 172], "y2": [8, 96, 107, 108, 111, 112, 116, 135, 152, 154, 155], "contraint": [8, 53, 55, 56, 66, 73, 90, 91, 141, 143, 169, 170, 196, 210, 217], "pixel": [8, 204], "vill": [9, 10, 14, 49, 55, 56, 58, 89, 91, 162, 163], "neuron": [9, 55], "\u00e9cran": [9, 10, 11, 12, 13, 65, 70, 178, 204, 211, 212], "700": [9, 10, 13, 110], "tir": [9, 10, 35, 48, 49, 50, 53, 55, 58, 80, 81, 82, 84, 89, 99, 105, 109, 110, 111, 112, 127, 134, 139, 150, 156, 157, 164, 165, 166, 167, 175, 177, 182, 183, 190, 214, 217], "carr": [9, 10, 36, 39, 48, 56, 58, 65, 103, 104, 105, 107, 108, 112, 115, 123, 139, 150, 151, 158, 161, 178, 179, 180, 181, 188, 193, 196, 210, 211, 214], "dist_w": 9, "forc": [9, 40, 48, 53, 61, 79, 91, 107, 127, 139, 163, 179, 204, 210, 211, 212, 214], "d\u00e9plac": [9, 10, 36, 56, 84, 97, 107, 148, 187, 189, 204, 212], "voisin": [9, 10, 28, 36, 55, 56, 58, 102, 111, 112, 117, 119, 164, 204], "attir": [9, 55], "incr\u00e9ment": [9, 73, 80, 180, 196], "compte_v": 9, "compte_n": 9, "nb_sel": 9, "solliqu": 9, "scalair": [9, 10, 48, 49], "attract": 9, "ver": [9, 39, 53, 55, 58, 65, 66, 73, 80, 83, 102, 104, 106, 109, 110, 139, 175, 180, 196, 199, 204, 208, 210, 211, 212, 217], "800": [9, 10, 12, 13, 56, 110, 143], "500": [9, 10, 12, 13, 29, 41, 56, 70, 73, 91, 109, 110, 131, 138, 143, 161, 165, 221], "200": [9, 12, 49, 53, 73, 84, 91, 110, 111, 112, 135, 138, 146, 148, 150, 153, 161, 176, 177, 187, 204], "tour": [9, 12, 35, 85, 91, 127, 136, 152, 168, 204, 210, 214], "dist_ratio": [9, 12], "75": [9, 12, 24, 49, 53, 66, 73, 151, 161, 162, 163, 219], "12000": [9, 12], "99": [9, 12, 36, 39, 48, 49, 51, 73, 87, 109, 113, 117, 131, 153, 185, 196, 210], "tirag": [9, 48, 50, 73, 80, 111, 112, 113, 134, 139, 170, 171, 196], "ratio": [9, 12, 29, 53, 66, 73, 81, 87, 109, 110, 139, 161, 187], "soustr": 9, "taille_zon": 10, "am\u00e9lior": [10, 14, 40, 50, 53, 55, 56, 58, 66, 77, 90, 161, 165, 196, 200, 210, 214], "croisent": [10, 40, 55, 85], "quadrillag": [10, 111, 112], "zon": [10, 13, 14, 25, 53, 56, 57, 66, 111, 112, 124, 210, 217], "longueur": [10, 20, 31, 39, 40, 48, 49, 53, 55, 56, 65, 79, 80, 83, 90, 91, 92, 96, 98, 104, 115, 116, 118, 119, 141, 150, 162, 169, 173, 186, 187, 188, 194, 208, 210, 211, 212, 217], "c\u00f4t": [10, 14, 28, 39, 53, 58, 70, 84, 91, 107, 108, 112, 115, 117, 139, 150, 183, 196], "zone_taill": 10, "d\u00e9coup": [10, 14, 25, 65, 79, 84, 90, 140, 145, 162, 204, 210, 211, 212, 219], "imag": [10, 11, 12, 13, 44, 49, 56, 79, 90, 91, 100, 101, 104, 136, 138, 146, 148, 158, 159, 163, 165, 174, 175, 176, 177, 179, 182, 183, 186, 187, 189, 204, 217, 219], "which": [10, 11, 28, 29, 61, 204], "element": [10, 28, 49, 81, 114, 127, 148, 187, 194, 196, 200], "sublist": 10, "neighbor": [10, 28, 117, 125, 160, 161, 166, 167], "nod": [10, 11, 80, 127], "that": [10, 11, 29, 48, 61, 89, 146, 166, 167, 214], "whol": 10, "circuit": [10, 13, 20, 40, 54, 89, 91, 123], "tand": [10, 31, 65, 196, 204, 210, 211, 212, 214], "march": [10, 16, 36, 39, 40, 49, 58, 66, 77, 80, 89, 90, 92, 106, 107, 111, 112, 118, 124, 135, 138, 185, 191, 196, 210, 211, 217], "confondu": 10, "ar\u00eat": [10, 56, 91], "sommet": [10, 55, 56, 158], "sortent": 10, "pres": [10, 36, 48, 51, 58, 104, 112, 117, 135, 137, 143, 155, 174, 178, 185, 187, 196, 199, 204, 210, 211], "euclien": 10, "regard": [10, 49, 53, 58, 65, 73, 75, 80, 81, 83, 91, 104, 117, 124, 145, 147, 150, 153, 169, 173, 178, 180, 185, 204], "neglige": 10, "1e": [10, 39, 74, 104, 135, 144, 175], "05": [10, 25, 34, 37, 39, 48, 49, 53, 65, 73, 81, 84, 131, 134, 141, 187, 207, 219], "echang": [10, 143], "ka": 10, "kb": 10, "inser": [10, 44, 49, 55, 56, 65, 77, 84, 85, 99, 115, 127, 146, 162, 188, 196, 199, 202, 204, 205, 208, 210, 211, 214, 217, 219], "droit": [10, 49, 53, 56, 58, 65, 66, 73, 79, 84, 91, 127, 129, 131, 139, 164, 179, 180, 204, 210, 211, 212, 214], "ax": [10, 25, 29, 44, 48, 49, 51, 73, 74, 80, 81, 82, 84, 85, 87, 88, 89, 91, 100, 101, 109, 110, 111, 112, 113, 116, 124, 125, 131, 135, 137, 149, 161, 175, 182, 183, 185], "p3": [10, 65, 130, 168, 196], "p4": [10, 113], "vec": [10, 159], "oppos": [10, 28, 48, 53, 74, 126, 136, 210], "ask_zon": 10, "r\u00e9part": [10, 14, 53, 56, 60, 65, 81, 91, 104, 137, 178, 214], "z": [10, 48, 49, 56, 65, 73, 83, 90, 98, 105, 137, 140, 154, 155, 156, 157, 172, 173, 180, 196, 210, 211, 219], "zx": 10, "zy": 10, "absciss": [10, 25, 49, 53, 66, 110, 131, 174, 196], "ordon": [10, 28, 49, 70, 109, 110, 131, 162, 186, 196, 210], "suppl\u00e9mentair": [10, 37, 39, 48, 53, 65, 96, 196, 199, 204, 211, 214, 217], "judici": [10, 53, 66, 212], "length": [10, 13, 138, 219], "simplif": [10, 65, 132, 198], "numb": [10, 11, 13, 28, 29, 30, 34, 37, 38, 48, 117, 124, 143, 144, 161, 204, 205, 210, 217], "cit": [10, 13, 44, 49, 53, 58, 65, 70, 81, 89, 104, 210, 211, 217], "crois": [10, 56, 85, 125, 178, 179, 187], "shortest": 10, "going": 10, "dimensional": [10, 166, 167], "2d": [10, 44, 48, 140], "plan": [10, 19, 44, 49, 53, 55, 56, 158, 159, 168], "into": [10, 11, 61, 64, 166, 167], "squar": [10, 48, 97, 106], "sub": [10, 11, 49, 65, 84, 140, 211, 219], "enlev": [10, 37, 49, 56, 60, 65, 70, 73, 89, 91, 92, 98, 101, 104, 112, 131, 158, 170, 178, 202, 204, 211, 212, 214, 215], "vec1": 10, "vec2": 10, "cosinus": [10, 94], "sinus": 10, "vectoriel": [10, 106], "zmax": 10, "filenam": [11, 49, 145, 146, 147, 160, 179, 184, 185, 200, 202, 212], "unzip": [11, 49], "destin": [11, 39, 53, 114, 217], "verbosity": [11, 13], "decompressed": 11, "display": [11, 12, 13, 28, 49, 78, 79, 83, 90, 91, 104, 136, 145, 146, 148, 158, 159, 163, 165, 174, 175, 176, 177, 182, 183, 186, 187, 189], "progress": [11, 80, 81, 179], "unzipped": 11, "blockdiag": [11, 143], "pillow": 11, "draw": [11, 29, 80, 91, 116, 134, 137], "definit": 11, "valu": [11, 29, 44, 48, 49, 51, 65, 73, 81, 84, 90, 91, 109, 113, 124, 141, 144, 146, 150, 152, 158, 162, 163, 179, 185, 187, 194, 204, 210, 211, 212], "additional": [11, 204], "g": [11, 48, 56, 58, 65, 80, 83, 90, 91, 117, 118, 124, 127, 137, 145, 158, 161, 165, 179, 185, 196, 204, 211, 214, 219], "graphviz_help": [11, 158, 159], "vertic": [11, 74, 91, 102], "engin": [11, 138], "dot": [11, 48, 50, 78, 83, 106, 217], "graphviz": [11, 78, 83], "below": [11, 146], "output": [11, 48, 64, 199], "neato": 11, "gv": 11, "label": [11, 25, 29, 51, 73, 79, 83, 87, 91, 111, 113, 124, 125, 131, 135, 161, 166, 167, 185, 204, 210, 217], "color": [11, 24, 25, 28, 40, 44, 56, 73, 100, 101, 105, 124, 125, 131, 135, 182, 183], "image_nam": 11, "png": [11, 49, 79, 90, 91, 104, 136, 148, 158, 159, 163, 165, 174, 175, 176, 177, 178, 182, 183, 186, 187, 189, 219], "handler": 11, "approximat": [11, 29], "footprint": 11, "measur": 11, "recursivity": 11, "purpos": [11, 71], "total": [11, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 53, 56, 64, 73, 79, 81, 89, 124, 131, 145, 211, 221], "automatically": 11, "builtin": [11, 145, 146, 147, 160, 196, 204, 210, 214], "container": [11, 133, 173, 187, 211], "subcl": 11, "dequ": [11, 209], "iterat": 11, "over": [11, 48, 53, 156, 157, 177], "somecontainerclass": 11, "othercontainerclass": 11, "get_el": 11, "getsizeof": [11, 150, 211], "func_nam": 11, "nc1": 11, "nc2": 11, "tin": [11, 146], "tall": 11, "spent": 11, "pnod": 11, "called": [11, 166, 167, 204], "time_el": 11, "filter_nod": 11, "sort_key": 11, "sortkey": [11, 145, 146], "render": 11, "result": [11, 28, 29, 89, 128, 146, 200, 217], "interpreted": 11, "then": [11, 28, 61, 64, 166, 167, 214], "loaded": 11, "remov": [11, 63, 65, 73, 80, 140, 211, 212], "built": [11, 145, 146, 147, 160, 200, 210, 214], "small": [11, 53], "row": [11, 28, 29, 36, 48, 49, 51, 78, 83, 109, 110, 125, 127, 129, 143, 149, 150, 162, 163, 166, 167, 169, 178, 179, 187, 204], "static": 11, "info": [11, 61, 64, 77, 78, 83, 138, 160, 212, 217, 219], "filter": 11, "displayed": 11, "overwrit": 11, "held": 11, "boolean": [11, 48, 49, 204], "forget": 11, "root": [11, 48, 83, 127, 143, 155, 187, 204, 210, 217], "as_str": 11, "kwarg": 11, "json": [11, 15, 19, 123, 178, 213], "dump": [11, 37, 141, 212, 215], "fct_width": [11, 146], "60": [11, 28, 44, 48, 49, 51, 52, 73, 81, 104, 131, 144, 149, 179, 185, 204, 219], "fct": [11, 29, 32, 84, 107, 108, 114, 137], "cumul": [11, 48, 49, 79, 113, 134, 145, 146, 147, 160], "rootrem": 11, "as_df": 11, "return_result": 11, "execu": [11, 26, 41, 42, 63, 221], "pstat": [11, 145, 146, 147, 160], "stat": [11, 37, 44, 48, 81, 128, 141, 145, 146, 147, 149, 151, 160, 200, 204, 214, 215, 217], "sort_stat": [11, 145, 146, 147, 160], "posit": [11, 25, 28, 31, 40, 44, 48, 49, 50, 51, 56, 57, 58, 65, 70, 77, 79, 80, 81, 84, 92, 102, 103, 109, 110, 113, 114, 124, 126, 128, 132, 136, 143, 148, 154, 158, 159, 172, 173, 178, 182, 183, 186, 187, 188, 189, 190, 191, 194, 196, 199, 200, 204, 210, 211, 219], "parameter": 11, "cprofil": [11, 145, 146, 147, 160], "hir": 11, "pdf": [11, 147, 212], "clean_text": 11, "logf": [11, 28], "clean": [11, 146], "logging": [11, 201, 217], "onnx_array_ap": 11, "bench_ortmodule_nn_gpu6": 11, "prof": [11, 147], "pd": [11, 149], "pyinstru": [11, 145], "nic": [11, 49], "stack": [11, 48, 49, 90, 201], "sam": [11, 28, 29, 48, 49, 166, 167], "replicat": 11, "produced": 11, "her": [11, 28, 138, 196, 204, 214], "fct0": 11, "sleep": [11, 30, 114, 217], "fct1": 11, "fct2": 11, "fct3": 11, "fct4": 11, "00003": 11, "61117": 11, "61114": 11, "00001": 11, "81157": 11, "11033": 11, "11032": 11, "70123": 11, "00006": 11, "20037": 11, "20031": 11, "50085": [11, 29], "81145": 11, "run": [11, 48, 49, 50, 79, 87, 89, 107, 108, 110, 117, 135, 141, 142, 143, 153, 160, 169, 175, 185, 187, 200, 204, 217], "cwd": 11, "pygame_help": 11, "pygam": [11, 12, 13], "screen": [11, 204], "maxw": 11, "seq1": 11, "seq2": 11, "diff": [11, 51, 73, 82, 109, 110, 113, 153, 212, 217], "bar": [11, 49, 58, 134, 137, 158, 164], "prev_bar": 11, "build": [11, 63, 152, 200], "distinct": [11, 32, 49, 53, 74, 80, 105, 107, 108, 126, 134, 153, 187, 205, 211], "surfac": [11, 39, 44, 91, 101, 104, 123], "height": [11, 149, 204], "width": [11, 91, 138, 158, 159, 165, 175, 176, 177, 204, 210], "cannot": [11, 37, 50], "sequencematch": 11, "font_small": 11, "font_half": 11, "associated": [11, 71], "previous": [11, 138, 204], "blu": [11, 28, 51, 73, 100, 101, 112, 135, 149, 204], "deleted": 11, "green": 11, "vert": [11, 28, 51, 53, 56, 66, 83, 105, 106, 139, 140, 161, 175], "yellow": [11, 149], "pictur": 11, "kind": [11, 49, 71, 81, 125, 131], "averag": [11, 53, 143, 144], "suggest": [11, 83, 90], "mov": [11, 204], "defin": [11, 28, 29, 73], "circl": [11, 111, 162], "msg": [11, 212], "event": [11, 53, 66, 71, 204, 217], "loop": [11, 48, 49, 50, 60, 79, 80, 84, 87, 88, 89, 104, 107, 108, 110, 117, 135, 141, 142, 143, 153, 160, 169, 175, 185, 187, 217], "mous": [11, 204], "click": [11, 138], "program": [11, 214], "halt": 11, "anoth": [11, 61, 64], "again": [11, 63, 77], "quit": [11, 204], "flag": [11, 12, 13, 219], "initializ": 11, "set_mod": [11, 12, 13], "thre": [11, 49], "3h": [11, 113], "5h": 11, "leav": [11, 127, 204, 214], "still": 11, "opened": 11, "generat": [11, 28], "warning": [11, 44, 80, 125, 152, 160, 201, 219], "paramet": [11, 81, 82, 204], "working": [11, 49], "seen": 11, "wait": [11, 38, 104, 217], "video_help": 11, "file_or_fold": 11, "temp_video": 11, "outvid": 11, "is_color": 11, "xvid": 11, "opencv": 11, "fram": [11, 204], "per": [11, 28, 38, 48, 49, 50, 53, 79, 87, 89, 104, 107, 108, 110, 117, 135, 141, 142, 143, 153, 160, 169, 175, 179, 185, 187], "fourcc": 11, "videowrit": 11, "rel": [11, 53, 56, 66, 80, 196], "hav": [11, 48, 51, 166, 167, 204], "resiz": [11, 155, 161, 204], "adding": 11, "first_click": [12, 13], "See": [12, 51], "attend": [12, 13, 53, 60, 65, 184, 204, 212, 217, 219], "pression": [12, 13, 103, 204, 217], "clic": [12, 13, 204, 217], "sour": [12, 13, 204, 217], "delay": [12, 13, 51, 104, 113], "lanc": [12, 13, 30, 65, 66, 83, 91, 140, 200, 202, 212, 217], "tsp_kruskal_pygam": 13, "sav": [13, 14], "J": [14, 16, 33, 40, 77, 90, 91, 94, 118, 127, 131, 137, 151, 158, 159, 178, 179], "avou": 14, "allait": 14, "s\u00e9anc": [14, 19, 48, 58, 69, 170, 178, 186], "pr\u00e9dir": [14, 58, 105, 124], "racont": [14, 58], "avion": [14, 53, 70, 179], "avon": [14, 87, 150, 154, 163, 179, 204], "\u00e9tudi": [14, 53, 57, 58, 92, 97, 105, 137, 147, 184, 187, 190], "problem": [14, 15, 19, 20, 25, 31, 33, 39, 40, 44, 48, 55, 56, 65, 68, 70, 77, 79, 80, 81, 83, 87, 88, 97, 98, 102, 103, 104, 106, 109, 110, 113, 115, 117, 135, 137, 138, 141, 148, 158, 159, 161, 162, 166, 167, 168, 172, 178, 180, 184, 185, 186, 189, 190, 196, 199, 200, 202, 204, 207, 208, 211, 212, 215, 219], "int\u00e9ress": [14, 28, 31, 44, 48, 53, 56, 58, 65, 73, 82, 84, 102, 103, 134, 135, 175, 204, 210, 211, 212, 214, 219], "compagn": [14, 53], "r\u00e9pons": [14, 25, 36, 39, 43, 47, 65, 75, 95, 104, 105, 107, 108, 109, 110, 114, 119, 124, 136, 158, 165, 167, 169, 187, 189, 190, 204, 210, 212], "client": [14, 49, 179, 196], "risqu": [14, 49, 53, 66, 158, 159, 199], "assez": [14, 17, 32, 48, 49, 53, 57, 58, 65, 66, 73, 75, 84, 87, 91, 97, 105, 115, 124, 131, 141, 142, 143, 148, 160, 161, 174, 176, 177, 196, 204, 207, 212, 214, 215], "flou": 14, "n\u00e9cessit": [14, 39, 53, 65, 70, 94, 109, 163, 181, 196, 204, 212], "\u00e9clairc": 14, "aiment": [14, 70], "impr\u00e9cis": 14, "quantifi": [14, 118], "Je": [14, 25, 28, 48, 51, 53, 57, 77, 83, 90, 91, 97, 124, 135, 138, 140, 158, 159, 178, 179, 183, 187, 217], "dis": [14, 51, 92, 179], "vrai": [14, 16, 39, 48, 53, 65, 73, 77, 79, 81, 82, 87, 90, 91, 94, 104, 124, 127, 128, 139, 143, 161, 172, 175, 179, 186, 196, 204, 210, 211, 212, 215], "vais": [14, 179], "Nous": [14, 58, 73, 106, 108, 149, 150, 163, 204, 211], "perm": [14, 31, 49, 70, 71, 79, 84, 85, 88, 92, 128, 146, 190, 198], "r\u00eav": 14, "chauffeur": 14, "disparaissent": [14, 125], "mutualis": 14, "cons\u00e9quent": [14, 31, 39, 40, 48, 53, 56, 65, 79, 92, 104, 168, 187, 189, 196, 199, 204, 210, 211, 214, 217, 219], "financi": [14, 66, 104], "accident": [14, 179], "vivon": [14, 179], "\u00e9conom": [14, 19, 53, 104], "quas": [14, 53, 57, 58, 69, 70, 75, 85, 99, 107, 108, 117, 144, 178, 211], "argent": [14, 53, 104], "d\u00e9pens": [14, 104, 165], "estim": [14, 31, 53, 57, 92, 104, 125, 139, 175, 184, 187, 196, 214], "sinistr": 14, "facteur": [14, 53, 125, 151, 187], "\u00e2ge": [14, 49, 73, 207], "marqu": [14, 53, 90, 211, 217], "voitur": [14, 91], "mesur": [14, 30, 36, 37, 53, 58, 73, 79, 84, 89, 104, 114, 124, 137, 142, 145, 146, 147, 150, 153, 164, 169, 176, 179, 186, 187, 204, 214, 217, 219], "person": [14, 28, 38, 53, 58, 60, 65, 70, 71, 74, 81, 104, 113, 179, 205, 207, 211, 214, 215], "bas": [14, 19, 20, 25, 28, 31, 37, 48, 50, 53, 57, 58, 70, 73, 79, 84, 103, 109, 110, 119, 125, 131, 138, 141, 146, 149, 160, 161, 172, 186, 190, 196, 199, 204, 205, 210, 211, 212, 214, 217], "sembl": [14, 36, 51, 53, 66, 73, 74, 80, 110, 170], "manqu": [14, 36, 49, 50, 51, 53, 65, 81, 91, 96, 147, 180, 181, 210, 211], "souv": [14, 145], "long": [14, 29, 30, 32, 44, 49, 50, 53, 56, 58, 65, 66, 79, 83, 85, 89, 90, 91, 96, 125, 127, 135, 137, 141, 146, 150, 153, 163, 169, 178, 184, 187, 204, 211, 212, 217], "organis": [14, 17, 53, 57, 65, 132, 143, 179, 196, 198, 204, 212, 214], "kilom\u00e9trag": 14, "adress": [14, 51, 53, 69, 70, 81, 179, 204, 208, 210], "longitud": [14, 44, 51, 91, 211], "lattitud": 14, "quarti": 14, "anonymis": 14, "dout": [14, 33, 40, 48, 53, 57, 58, 65, 66, 85, 102, 109, 110, 114, 117, 179, 184, 204, 210, 211], "r\u00e9duit": [14, 48, 50, 65, 66, 77, 92, 102, 109, 110, 114, 148, 161, 169, 184, 204, 210], "mont": [14, 33, 53, 58, 104, 119, 214], "souhaiton": [14, 185], "null": [14, 28, 53, 74, 95, 104, 109, 110, 144, 154, 155, 158, 161, 162, 175, 199, 211, 212, 214], "semain": [14, 49, 51, 70, 178, 207], "horizon": 14, "difficil": [14, 53, 58, 65, 70, 111, 112, 161, 179, 181, 202, 210, 211, 217], "fix": [14, 25, 32, 44, 53, 55, 58, 65, 73, 80, 104, 134, 150, 160, 172, 173, 198, 210, 211], "tendanc": [14, 40, 53, 66], "surapprentissag": 14, "possibil": [14, 28, 36, 48, 56, 58, 65, 90, 115, 132, 168, 186, 196, 204, 210, 211, 214], "temporel": [14, 48], "futur": [14, 30, 53, 214], "para\u00eet": [14, 39, 53, 56, 66, 90, 131, 145, 150, 153, 184, 187, 196, 198, 210, 212, 214, 219], "adapt": [14, 39, 44, 49, 55, 87, 141, 153, 186, 194, 196, 217], "vu": [14, 48, 51, 81, 90, 125, 132, 150, 162, 179, 196, 204, 211], "incap": 14, "nouvel": [14, 48, 49, 51, 53, 65, 70, 73, 77, 85, 90, 113, 130, 164, 172, 179, 187, 196, 204, 210, 212, 214, 217], "temorel": 14, "\u00e9volu": [14, 31, 48, 53, 56, 57, 65, 66, 70, 73, 77, 81, 84, 160, 202, 204, 210, 211, 212, 217, 219], "exclur": [14, 115], "taux": [14, 53, 74, 81, 104, 124, 146, 180, 190, 212], "chacun": [14, 18, 25, 28, 36, 39, 48, 49, 53, 55, 76, 115, 118, 134, 149, 164, 179, 184, 196, 204, 210, 211, 214, 217, 219], "pertinent": [14, 25, 53, 56, 73, 124, 130], "aper\u00e7oit": [14, 95, 147, 162, 211], "absolu": [14, 53, 58, 106, 107, 108, 112, 204, 210, 212], "intuit": [14, 40, 51, 58, 77, 102, 127, 190, 196], "r\u00e9gion": [14, 44], "pay": [14, 44, 49, 53, 58, 104, 179], "propic": 14, "improb": [14, 50, 109], "correl": [14, 22, 23, 26, 51, 66, 109, 110, 122, 221], "latitud": [14, 44, 51, 91, 211], "conduir": [14, 179], "nord": 14, "sud": [14, 182, 183], "franc": [14, 44, 49, 50, 51, 53, 57, 58, 66, 81, 92, 104, 117, 143, 179, 184, 185, 208, 211, 212], "regroup": [14, 28, 48, 50, 53, 55, 65, 85, 168, 196, 198, 199, 204, 210, 211, 212, 214, 215], "habit": [14, 28], "dens": 14, "constraindr": 14, "milli": [14, 56, 58, 152], "ascend": 14, "hi\u00e9rarch": 14, "000": [14, 31, 42, 48, 49, 50, 64, 79, 89, 105, 117, 118, 135, 141, 142, 145, 146, 147, 153, 160, 175, 185, 211], "clusteris": [14, 158, 159], "cluster": [14, 111, 112], "num\u00e9ro": [14, 28, 74, 80, 104, 105, 168, 196, 204, 211, 219], "clust": [14, 111, 112], "cat\u00e9goriel": [14, 105], "onehotencod": 14, "dep": [14, 48, 49, 51, 53, 56, 66, 104, 108], "acp": [14, 55, 161], "indiqu": [14, 36, 37, 44, 48, 49, 51, 58, 65, 70, 78, 79, 97, 104, 114, 124, 125, 126, 141, 164, 175, 178, 181, 184, 189, 196, 199, 202, 204, 210, 211, 212, 214, 215, 217], "interpret": [14, 30, 49, 77, 145, 146, 180, 188, 196, 199, 210, 211, 216], "fort": [14, 49, 53, 58, 65, 66, 92, 114, 117, 161, 168, 179, 212], "l\u00e0": [14, 49, 50, 51, 53, 60, 65, 81, 84, 91, 106, 111, 112, 129, 190, 196, 200], "personnalis": [14, 49], "requiert": [14, 16, 49, 60, 73, 109, 110, 204], "sensibl": [14, 53, 58, 187], "group": [14, 53, 83, 90, 92, 104, 128, 137, 140, 149, 166, 167, 178, 204, 210], "individus": 14, "fr\u00e9quenc": [14, 31, 53, 73, 92, 150, 172, 184, 185, 204, 217], "particuli": [14, 44, 48, 49, 53, 56, 65, 73, 80, 84, 90, 126, 141, 147, 153, 179, 184, 187, 196, 199, 200, 202, 204, 205, 210, 211, 212, 217], "personnel": [14, 48, 149], "r\u00e9partit": [15, 49, 53, 58, 66, 111, 112, 123, 134], "bref": [15, 50, 81, 123, 161], "aper\u00e7u": [15, 39, 58, 123], "appr\u00e9hend": [15, 53], "autour": [15, 20, 22, 27, 31, 35, 39, 41, 53, 55, 65, 66, 77, 82, 83, 91, 103, 119, 124, 140, 178, 188, 210, 217, 221], "tsp": [15, 20, 22, 27, 41, 55, 58, 119, 221], "correct": [15, 40, 44, 48, 65, 68, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 124, 152, 196, 199, 210, 211, 212], "xml": [15, 19, 63, 65, 123, 178, 212, 214, 215], "scraping": [15, 123], "pokemon": [15, 123], "r\u00e9vis": 15, "pr\u00e9vis": [15, 214], "td": [15, 19, 20, 58, 82, 93, 138, 149, 154, 186], "\u00e9nonc": [15, 19, 39, 49, 74, 75, 91, 93, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 123, 141, 159, 166, 167, 171, 173, 179, 187], "minut": [15, 19, 20, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 53, 69, 77, 91, 219], "install": [16, 38, 44, 49, 51, 65, 124, 145, 178, 179, 199, 202, 204, 214], "gageur": 16, "archived": 16, "unofficial": 16, "binar": 16, "maintenu": [16, 70, 214], "veux": [16, 179], "comprendr": [16, 49, 53, 57, 58, 65, 77, 81, 104, 127, 146, 150, 169, 178, 180, 187, 190, 196, 199, 202, 204, 210, 211, 212], "travail": [16, 60, 65, 70, 78, 204], "ingrat": 16, "permen": 16, "gohlk": 16, "servic": [16, 53, 63, 179, 196, 215], "shut": 16, "down": [16, 166, 167], "viabl": 16, "ubuntu": [16, 38], "subsystem": 16, "ca": [16, 40, 44, 50, 53, 58, 66, 76, 77, 81, 87, 90, 91, 132, 135, 138, 141, 150, 183, 185, 187, 204, 214], "d\u00e9marr": [16, 78, 217], "serveur": [16, 70, 212, 216], "jupyt": [16, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 70, 124, 138, 160], "notebookapp": 16, "token": 16, "password": 16, "acced": [16, 36, 65, 70, 73, 82, 95, 141, 172, 187, 196, 199, 204, 205, 211, 212, 215], "navig": [16, 70, 214], "visual": [16, 19, 70], "studio": [16, 19, 70], "remot": 16, "noyau": 16, "04": [16, 48, 49, 73, 81, 91, 124, 149, 153, 219], "googl": [17, 38, 60, 65, 91, 103, 164, 165, 166, 167], "concour": 17, "passion": [17, 179], "d\u00e9veloppeur": [17, 40, 200, 202], "complet": [17, 19, 31, 40, 48, 53, 55, 56, 58, 65, 70, 81, 88, 90, 91, 105, 109, 110, 125, 128, 154, 155, 158, 172, 178, 186, 188, 196, 199, 204, 210, 211, 212], "sujet": [17, 19, 53, 54, 58, 69, 77, 90, 91, 97, 104, 130, 135, 210, 211, 212], "kick": 17, "logic": [17, 164], "personnag": [18, 137], "r\u00e9soud": [18, 28, 58, 105, 106], "tom": [18, 28, 53], "harry": [18, 28, 53], "pott": [18, 28], "fiol": 18, "poison": [18, 149], "vin": [18, 57, 122, 124], "orti": 18, "recul": [18, 158, 159], "imm\u00e9diat": [18, 53, 65, 107, 199, 202, 212], "gauch": [18, 28, 36, 49, 53, 58, 66, 79, 84, 127, 129, 131, 204, 211, 212, 214], "contenus": [18, 184, 211], "ni": [18, 65, 66, 126, 128, 140, 151, 179, 196, 204, 208, 210, 211, 219], "enjeu": [18, 70, 215], "insurmont": 18, "einstein": [18, 22, 27, 41, 119, 221], "ma\u00eetris": [19, 70, 204, 210], "h\u00e9ritag": [19, 20, 123, 128, 197, 198], "numpy": [19, 20, 22, 25, 27, 29, 37, 39, 41, 46, 49, 62, 65, 68, 69, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 88, 89, 100, 101, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 123, 125, 130, 131, 134, 135, 139, 141, 143, 146, 147, 150, 152, 154, 155, 158, 159, 160, 161, 177, 178, 190, 191, 193, 211, 215, 217, 221], "broadcasting": 19, "html": [19, 25, 48, 51, 65, 78, 83, 124, 134, 145, 146, 149, 160, 178, 179, 196, 212, 214, 215], "csv": [19, 51, 81, 113, 178, 179, 212, 214], "unitair": [19, 20, 119, 123, 146, 202, 214], "unittest": [19, 152, 214], "git": [19, 59, 62, 212], "pull": [19, 61], "request": [19, 49, 92, 141, 149, 179], "abord": [19, 31, 38, 39, 44, 49, 50, 51, 53, 56, 65, 66, 70, 73, 74, 75, 78, 79, 80, 81, 87, 88, 90, 91, 94, 102, 107, 108, 119, 134, 140, 147, 153, 162, 168, 172, 173, 179, 184, 185, 196, 210, 211, 212, 214, 216, 217, 219], "Elles": [19, 48, 51, 53, 57, 58, 65, 66, 70, 126, 145, 168, 178, 196, 204, 211, 214], "evalu": [19, 56], "ressourc": [19, 70, 200, 212, 217], "doc": [19, 48, 51, 66, 78, 83, 134, 196], "algortihm": 19, "examen": [19, 58, 68, 93, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 190], "2022": [19, 51, 81, 93, 141], "aspect": [19, 53, 84, 133, 168, 204, 217], "r\u00e9uss": [19, 49, 60, 65, 77, 109, 110, 153, 154], "getting": 19, "started": 19, "cheat": [19, 62], "sheet": [19, 49, 62], "minicond": [19, 70], "mamb": 19, "logiciel": [19, 49, 53, 65, 138, 178], "ing\u00e9nier": 19, "produir": [19, 53, 98, 196, 199], "fiabl": [19, 73, 81, 125, 152, 186, 214], "collabor": 19, "demain": [19, 57, 179, 180], "intelligent": [19, 53, 69], "artificiel": [19, 25, 51, 53, 69, 111, 112, 113], "nvidi": 19, "hi": 19, "rappel": [19, 21, 48, 57, 60, 65, 81, 91, 97, 115, 124, 154, 155, 158, 179, 204, 210, 211], "feuill": [19, 21, 28, 65, 80, 127, 186, 212], "rout": [19, 21, 51, 53, 85, 91, 162, 187], "_l": 20, "d\u00e9": [20, 123], "rotat": [20, 123, 125, 185], "transit": [20, 123, 217], "broadcast": [20, 48], "pivot": [20, 51, 84, 123, 179, 192, 195], "gauss": [20, 105, 123, 154, 155, 162, 163, 192, 195], "rechech": 20, "pr\u00e9fix": [20, 83, 90, 179, 192, 195, 199, 211, 212, 214], "variat": [20, 66], "travelling": [20, 58, 88], "kohonen": [20, 54], "1h30": 20, "enonc": [20, 43, 47, 68], "09": [21, 28, 29, 39, 48, 49, 73, 81, 91, 124, 143, 159, 217, 219], "06": [21, 39, 48, 49, 73, 81, 104, 133, 211, 212], "ensa": [21, 58, 91], "08": [21, 28, 29, 39, 48, 49, 51, 73, 81, 91, 133, 141, 143, 159, 178, 217, 219], "\u00e9nigm": [21, 22, 27, 41, 58, 119, 123, 221], "hermion": [21, 28], "03": [21, 41, 49, 51, 73, 74, 81, 88, 106, 113, 131, 135, 139, 149, 155, 175, 219, 221], "12": [21, 25, 28, 33, 34, 39, 40, 44, 48, 49, 50, 51, 53, 58, 65, 73, 75, 77, 79, 80, 81, 82, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 124, 125, 130, 131, 134, 135, 138, 139, 142, 143, 144, 145, 146, 149, 150, 151, 153, 155, 158, 159, 161, 163, 169, 178, 179, 181, 183, 187, 188, 196, 207, 210, 211, 217], "07": [21, 29, 39, 49, 50, 51, 53, 73, 81, 91, 131, 133, 144, 149, 159], "wsl": 21, "receiv": [22, 23, 26, 122, 221], "characteristic": [22, 23, 26, 122, 221], "roc": [22, 23, 26, 122, 221], "groupby": [22, 27, 41, 49, 51, 113, 120, 142, 221], "gil": [22, 27, 41, 123, 216, 221], "convers": [22, 27, 31, 37, 41, 50, 65, 113, 119, 126, 141, 178, 179, 196, 199, 207, 210, 212, 215, 221], "dam": [22, 27, 41, 123, 196, 221], "s\u00e9rialis": [22, 27, 41, 123, 138, 196, 211, 212, 213, 214, 221], "protobuf": [22, 27, 41, 215, 221], "hypercub": [22, 27, 41, 119, 210, 221], "voyag": [22, 27, 41, 119, 162, 221], "auto_examples_python": 22, "auto_examples_jupyt": 22, "gallery": [22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "generated": [22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 134, 204], "go": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 50, 141], "full": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 146, 149, 160, 210, 217], "seaborn": [24, 58, 125], "clustermap": 24, "head": [24, 28, 29, 44, 49, 51, 61, 64, 82, 84, 113, 124, 131, 138, 143, 149, 162, 163, 179], "T": [24, 25, 39, 44, 48, 49, 50, 51, 64, 65, 74, 80, 81, 84, 90, 105, 106, 109, 110, 137, 139, 143, 148, 151, 177, 199], "fixed_acidity": 24, "volatile_acidity": 24, "88": [24, 52, 53, 73, 91, 106, 113, 139, 142, 179, 196, 204], "citric_acid": 24, "residual_sugar": 24, "chlorid": 24, "076": [24, 145], "098": 24, "free_sulfur_dioxid": 24, "total_sulfur_dioxid": 24, "67": [24, 48, 51, 53, 66, 73, 96, 104, 113, 210], "density": [24, 147], "9978": 24, "9968": 24, "ph": [24, 141], "51": [24, 48, 49, 51, 91, 106, 135, 140, 185], "sulphat": 24, "68": [24, 48, 51, 73, 104, 107, 151], "alcohol": 24, "corr": [24, 51, 109, 110], "numeric_only": 24, "cent": [24, 51, 60, 65, 196], "cmap": [24, 48], "vlag": 24, "linewidth": [24, 81, 125], "figsiz": [24, 25, 44, 48, 49, 51, 74, 80, 81, 82, 84, 85, 88, 89, 91, 109, 110, 111, 112, 113, 116, 124, 125, 131, 134, 135, 137, 149, 161, 183, 185], "plt": [24, 25, 29, 40, 44, 48, 49, 50, 51, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 100, 101, 107, 108, 109, 110, 111, 112, 113, 116, 124, 125, 127, 131, 134, 135, 137, 139, 143, 149, 161, 175, 182, 183, 185], "clustergrid": 24, "0x7f8889b4b520": 24, "running": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "script": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 78, 83, 214], "505": [24, 26, 221], "plot_correl": [24, 26, 221], "ipynb": [24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 138, 178], "nuag": [25, 55, 105, 109, 110, 161, 185], "Cet": [25, 48, 53, 56, 57, 104, 105, 106, 130, 153, 182, 183, 187, 189, 196, 199, 204, 210, 212, 214], "sklearn": [25, 111, 112, 124, 125, 138, 160, 161], "metric": [25, 124, 125, 160], "f1_scor": 25, "precision_recall_curv": [25, 124], "roc_curv": [25, 124], "confusion_matrix": [25, 124], "linear_model": [25, 124, 125], "logisticregress": [25, 124], "model_select": [25, 124, 125, 161], "train_test_spl": [25, 124, 125, 161], "make_classif": [25, 160, 161], "pyplot": [25, 29, 40, 44, 48, 49, 50, 51, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 100, 101, 107, 108, 109, 110, 111, 112, 113, 116, 124, 125, 127, 131, 134, 135, 137, 139, 143, 149, 161, 175, 182, 183, 185], "ext_test_cas": [25, 125, 143, 144], "unit_test_going": [25, 125], "n_sampl": [25, 48], "10000": [25, 48, 81, 84, 89, 95, 96, 104, 110, 116, 134, 139, 143, 153, 160, 161, 186, 187, 205], "100": [25, 28, 29, 30, 31, 34, 37, 38, 48, 49, 50, 51, 53, 62, 73, 74, 79, 80, 81, 82, 83, 84, 87, 91, 95, 96, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 117, 118, 124, 127, 131, 133, 134, 135, 139, 141, 143, 144, 146, 148, 149, 153, 155, 161, 168, 170, 171, 175, 185, 186, 187, 190, 196, 204, 205, 210, 211, 217], "n_featur": [25, 160, 161], "n_class": [25, 160, 161], "n_repeated": 25, "n_redund": 25, "fig": [25, 44, 48, 51, 74, 81, 82, 84, 85, 88, 89, 91, 109, 110, 111, 112, 113, 116, 124, 125, 131, 135, 137, 149, 161, 175, 182, 183, 185, 197, 215], "figur": [25, 44, 48, 55, 56, 68, 134, 136, 148, 163, 168, 196, 204, 214, 217], "subplot": [25, 44, 48, 51, 73, 74, 80, 81, 82, 84, 85, 88, 89, 91, 100, 101, 109, 110, 111, 112, 113, 116, 124, 125, 131, 135, 137, 149, 161, 175, 182, 183, 185], "plot": [25, 29, 40, 43, 44, 48, 50, 51, 73, 74, 79, 81, 82, 84, 85, 87, 88, 89, 91, 100, 101, 107, 108, 109, 110, 111, 112, 113, 116, 124, 125, 127, 131, 135, 137, 139, 143, 144, 153, 158, 159, 161, 175, 185], "line2d": [25, 40, 107, 108], "0x7f88864f7670": 25, "train": [25, 70, 126, 146, 187, 200, 210, 211], "x_train": [25, 124, 125, 161], "x_test": [25, 124, 125, 161], "y_train": [25, 124, 125, 161], "y_test": [25, 124, 125, 161], "apprend": [25, 58], "logreg": 25, "fit": [25, 48, 58, 111, 112, 113, 124, 125, 160, 161], "environment": [25, 61, 124, 160], "pleas": [25, 81, 124, 138, 160], "rerun": [25, 124, 160], "trust": [25, 124, 160], "unabl": [25, 38, 124, 160, 200, 219], "rend": [25, 65, 104, 124, 160, 178, 179, 196, 205, 210], "loading": [25, 124, 160], "nbview": [25, 124, 160], "nbsp": [25, 124, 160], "logisticregressionifittedlogisticregress": [25, 124], "pred": [25, 105, 111, 112, 124, 125, 165, 191], "y_pred": 25, "predict": [25, 58, 111, 112, 124, 125, 160, 161], "confus": [25, 62, 77, 90, 124, 196, 210], "conf": [25, 124], "scind": [25, 65, 204, 212], "scor": [25, 124], "valid": [25, 31, 53, 65, 73, 124, 125, 126, 146, 152, 153, 160, 168, 196, 204, 210, 211, 212, 219], "n\u00e9cessair": [25, 30, 36, 39, 48, 49, 53, 56, 58, 65, 66, 70, 79, 83, 84, 85, 91, 94, 96, 104, 106, 109, 110, 143, 145, 147, 152, 154, 163, 175, 179, 188, 190, 196, 199, 200, 202, 204, 210, 211, 212, 214, 215, 217], "choix": [25, 31, 53, 90, 91, 109, 114, 129, 162, 163, 179, 184, 188, 196, 210, 211, 215], "r\u00e9pondr": [25, 84, 90, 104, 114, 141], "fpr_cl": 25, "tpr_cl": 25, "y_prob": 25, "_": [25, 28, 38, 40, 44, 48, 73, 77, 80, 91, 105, 106, 107, 108, 109, 110, 124, 139, 156, 157, 159, 161, 178, 185, 187, 198, 219], "ravel": [25, 74, 82, 85, 106, 109, 110, 113, 117, 147, 177], "prob_pred": 25, "lw": [25, 48, 113, 116, 125], "navy": 25, "linestyl": [25, 44, 73], "xlim": 25, "ylim": [25, 125], "xlabel": [25, 29, 73, 158, 159, 185], "proport": [25, 74, 124], "mal": [25, 53, 81, 85, 90, 91, 102, 149, 199, 210, 217], "ylabel": [25, 73, 158, 159, 185], "titl": [25, 48, 51, 73, 74, 79, 81, 84, 131, 141, 143, 144, 200, 204, 210, 219], "legend": [25, 49, 51, 73, 79, 81, 87, 111, 113, 124, 125, 135, 137, 161, 185, 210], "loc": [25, 49, 51, 73, 138, 196, 199, 200, 210, 211], "right": [25, 29, 39, 48, 49, 50, 53, 56, 61, 71, 73, 79, 84, 97, 104, 106, 114, 127, 129, 138, 143, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 174, 175, 185, 191, 204, 211], "0x7f8886317430": 25, "sugger": [25, 53, 102, 104, 105, 109, 110, 118, 138, 150, 156, 157, 158, 159, 161, 162, 163, 173, 184, 204, 211], "optimal": [25, 40, 53, 55, 56, 70, 88, 89, 106, 107, 108, 114, 119, 162, 163, 167], "pren": [25, 50, 53, 91, 106, 179, 204], "monoton": 25, "vstack": [25, 48, 50, 111, 112, 146], "0x7f88861ca020": 25, "reten": [25, 48, 53, 65, 178, 205, 211, 212, 214, 217], "d\u00e9finit": [25, 56, 57, 68, 82, 106, 172, 188, 204, 217, 219], "rat": [25, 58, 124, 149], "fpr": [25, 124], "tpr": [25, 124], "docu": [25, 49, 53, 55, 65, 69, 70, 78, 83, 178, 179, 184, 200, 212, 214, 217], "rapp": 25, "0x7f8886237460": 25, "ponder": [25, 49, 106], "y_scor": 25, "precd": 25, "rappd": 25, "seuild": 25, "f1d": 25, "set_titl": [25, 44, 48, 49, 73, 85, 88, 91, 109, 110, 111, 112, 124, 125, 135], "0x7f8886135690": 25, "graphiqu": [25, 40, 49, 53, 55, 58, 62, 70, 81, 91, 182, 184, 185, 196, 204, 210, 214, 216, 220], "compr\u00e9hensibl": [25, 207], "air": [25, 34, 39, 40, 124, 139, 174, 179], "auc": [25, 124], "reli": [25, 36, 40, 53, 55, 56, 58, 65, 69, 74, 80, 85, 90, 91, 113, 124, 158, 159, 163, 196, 204, 210, 214, 217], "s_f": 25, "s_t": [25, 81], "hist": [25, 29, 49, 50, 80, 124, 142, 150, 153, 184, 185], "prob": [25, 105, 124, 153], "bin": [25, 29, 49, 73, 124, 211, 212], "600": [25, 110], "250": [25, 73, 84, 111, 161], "0x7f8885ec2440": 25, "pointill": [25, 204], "d\u00e9lim": [25, 174], "ajust": [25, 53, 91], "haut": [25, 36, 37, 50, 53, 84, 109, 115, 131, 172, 187, 199, 204, 210, 219], "bleu": [25, 28, 83, 89, 105, 140, 204], "roug": [25, 28, 51, 53, 57, 58, 66, 73, 83, 89, 105, 124, 140, 175, 187, 204], "Ces": [25, 37, 49, 50, 53, 55, 56, 58, 60, 65, 66, 70, 79, 91, 93, 146, 162, 178, 179, 184, 188, 196, 204, 205, 208, 210, 211, 214, 215, 217, 219], "quantit": [25, 39, 53, 58, 66, 106, 108, 165, 184, 190], "bon": [25, 28, 39, 50, 51, 53, 58, 73, 87, 91, 92, 102, 107, 109, 110, 111, 112, 124, 170, 178, 179, 182, 183, 184, 187, 190, 212], "mauvais": [25, 53, 66, 70, 73, 124, 131, 199, 210], "constitu": [25, 53, 55, 60, 65, 79, 87, 90, 104, 124, 170, 210, 215], "var": [25, 48, 50, 51, 53, 58, 63, 64, 78, 83, 107, 153, 155, 210, 212], "046": [25, 26, 217, 221], "plot_roc": [25, 26, 221], "00": [26, 41, 42, 48, 53, 65, 66, 74, 80, 81, 84, 88, 91, 105, 106, 113, 118, 124, 127, 131, 139, 143, 144, 149, 155, 159, 179, 221], "02": [26, 41, 48, 49, 53, 73, 74, 84, 104, 105, 124, 159, 178, 221], "551": 26, "auto_exampl": [26, 41, 42], "ml": [26, 221], "mem": [26, 41, 42, 92, 221], "mb": [26, 41, 42, 79, 221], "impl\u00e9mentatin": 28, "reproduis": [28, 217], "cinq": [28, 39, 53, 66, 70, 90, 134, 139, 172, 204, 211, 214], "maison": [28, 58], "couleur": [28, 36, 105, 124, 168, 182, 196, 204], "vit": [28, 33, 39, 53, 70, 79, 83, 84, 85, 102, 117, 148, 152, 169, 173, 174, 179, 204, 214], "national": [28, 49, 149], "boit": 28, "boisson": 28, "fum": 28, "cigar": 28, "animal": [28, 83, 140], "domest": 28, "su\u00e9dois": 28, "chien": 28, "danois": 28, "th\u00e9": 28, "blanch": [28, 175], "propri\u00e9tair": 28, "caf": [28, 53], "pall": 28, "mall": 28, "jaun": [28, 204], "dunhill": 28, "lait": [28, 115], "norv\u00e9gien": 28, "homm": [28, 90, 179], "blend": 28, "chat": 28, "cheval": 28, "mast": [28, 61, 81, 204], "bier": 28, "allemand": 28, "princ": 28, "eau": [28, 166, 167], "poisson": [28, 57, 58], "essais": [28, 40, 55, 111, 112, 217], "papi": [28, 69], "reconstitu": 28, "d\u00e9duct": 28, "puzzl": [28, 57, 119], "configur": [28, 88, 113, 196, 204, 215], "piec": [28, 152, 164, 165, 212], "bord": [28, 36, 107, 111, 112, 138, 204], "embo\u00eet": 28, "ecrir": [28, 49, 94, 95, 98, 99, 102, 104, 105, 106, 107, 108, 111, 112, 137, 152, 154, 155, 158, 159, 162, 170, 174, 178, 180, 181, 184, 212, 217], "combinaison": [28, 49, 53, 56, 90, 154, 155, 210], "notr": [28, 40, 53, 56, 58, 66, 105, 109, 113, 125, 131, 160, 165, 168, 179], "d\u00e9crit": [28, 53, 66, 84, 91, 130, 162, 172, 196, 199, 204, 210, 211, 214, 219], "compatibil": 28, "cat\u00e9gor": [28, 53, 80, 81, 105, 211, 212], "exclus": [28, 53, 63, 196, 211], "compatibl": [28, 38, 217], "incompatibl": 28, "r\u00e9sult": [28, 49, 53, 65, 204, 211], "Avec": [28, 31, 36, 48, 51, 52, 53, 65, 70, 91, 109, 118, 138, 146, 151, 156, 157, 164, 168, 178, 179, 187, 188, 204, 208, 210, 211, 219], "2023": [28, 51, 65, 81, 91, 93, 113, 195], "\u00e9numer": [28, 48, 127, 162, 181], "cont": [28, 85, 113, 179], "break": [28, 38, 65, 80, 90, 91, 100, 101, 104, 109, 135, 138, 141, 143, 149, 152, 165, 177, 188, 189, 190, 196, 204, 212, 214], "constraint": 28, "described": 28, "enigm": 28, "gener": 28, "triplet": [28, 31], "category": [28, 130, 140, 202], "__str__": [28, 65, 126, 127, 128, 129, 168, 169, 187, 190, 199, 212, 214], "__dict__": [28, 37, 65, 196, 204, 212, 214, 215], "al": [28, 92, 179], "260": 28, "combin": [28, 49, 53, 85, 177, 184], "cl1": [28, 210], "cl2": [28, 210], "nothing": 28, "everything": 28, "concaten": [28, 39, 48, 49, 51, 65, 187, 204], "param": [28, 66, 81, 92, 146, 196, 204], "incompatibility": 28, "propert": [28, 65, 204], "compatibility": 28, "combine_cross_set": 28, "set1": 28, "set2": 28, "ruleposit": 28, "overrid": 28, "ruleequivalent": 28, "equivalent": [28, 48, 146], "rulevoisin": 28, "ruleav": 28, "ruleensembl": 28, "categor": [28, 179], "tl": 28, "ttcouleur": 28, "blanc": [28, 36, 65, 66, 83, 124, 140, 196, 211], "ttnationalit": 28, "norvegien": 28, "suedois": 28, "ttboisson": 28, "ttcigar": 28, "bluemast": 28, "ttanimal": 28, "gar": 28, "constituent": [28, 212], "pr\u00e9dicat": 28, "fr": [28, 49, 51, 81, 82, 90, 113, 141, 179, 196], "wikipedi": [28, 48, 51, 58, 91, 141, 146, 151, 179], "wik": [28, 179], "calcul_des_pr": 28, "c3": [28, 49, 77, 169, 196], "a9dicat": 28, "solv": [28, 48, 124, 165], "Soit": [28, 40, 49, 56, 91, 107, 108, 136, 158, 159, 162, 187], "appara\u00eet": [28, 31, 51, 53, 65, 80, 133, 170, 176, 178, 179, 180, 196, 202, 204, 210, 211, 212, 214, 215], "incompatibil": 28, "apparaissent": [28, 55, 58, 65, 89, 185, 187, 204, 210, 211, 212, 214], "describ": [28, 49], "defined": [28, 96, 99, 163, 196, 204, 210, 214], "abov": [28, 71, 200], "count": [28, 49, 65, 73, 80, 129, 134, 142, 150, 177, 185, 209, 211, 219], "hous": [28, 166, 167], "to_datafram": 28, "sr": 28, "eploring": 28, "deepness": 28, "empty": [28, 50, 81, 105, 106, 111, 112, 117, 130, 146, 217], "beginning": 28, "recursively": 28, "must": [28, 48, 61, 114, 204, 214], "solved": 28, "unless": 28, "looking": 28, "possibilit": [28, 115], "much": [28, 166, 167], "research": 28, "could": [28, 48, 81, 89], "represented": 28, "creating": 28, "check": [28, 29, 61], "bringing": 28, "back": [28, 49, 81, 146], "14": [28, 31, 34, 39, 40, 44, 48, 49, 50, 51, 53, 58, 66, 73, 74, 75, 77, 80, 81, 83, 84, 87, 90, 91, 93, 95, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 124, 125, 130, 131, 134, 135, 138, 142, 143, 144, 146, 150, 151, 153, 155, 158, 159, 161, 163, 164, 169, 172, 175, 179, 180, 181, 183, 187, 188, 207, 210, 214, 219], "50": [28, 29, 44, 48, 49, 50, 51, 53, 66, 73, 79, 84, 96, 105, 108, 109, 111, 112, 117, 124, 135, 136, 139, 140, 144, 146, 149, 159, 160, 161, 166, 167, 179, 185, 204, 210], "70": [28, 44, 48, 51, 73, 79, 106, 113, 144, 147, 196], "80": [28, 73, 80, 91, 113, 135, 139, 144, 149, 150, 153, 204, 210, 211], "90": [28, 29, 51, 73, 81, 91, 113, 117, 139, 142, 179], "110": [28, 31, 44, 51, 53, 118, 142, 160], "120": [28, 44, 53, 81, 135, 150, 204], "130": [28, 145, 146], "625": [28, 41, 221], "plot_einstein_riddl": [28, 38, 41, 221], "cam": 29, "longrightarrow": [29, 55, 56], "hold": 29, "let": [29, 48, 90, 118, 166, 167], "evaluat": [29, 156, 157], "equal": [29, 44], "rnd": [29, 50, 74, 81, 109, 110, 113, 116, 125, 134, 139, 143, 161, 196, 205], "100000000": 29, "dtyp": [29, 48, 49, 50, 51, 52, 73, 80, 81, 113, 117, 130, 131, 146, 162, 163, 177, 193], "rnd32": 29, "astyp": [29, 48, 50, 51, 80, 113, 139, 146, 217], "very": 29, "revers": [29, 40, 65, 90, 128, 134, 163, 165, 191, 210, 211], "rnd32b": 29, "delt": [29, 39, 49, 73, 77, 81, 104, 106, 204], "9802321277472288e": 29, "9802321610539195e": 29, "2304242402727539e": 29, "9999999918788068": 29, "50077": 29, "49673": 29, "50187": 29, "49916": 29, "50119": 29, "49943": 29, "49836": 29, "50147": 29, "49716": 29, "50214": 29, "49857": 29, "49756": 29, "50317": 29, "50188": 29, "49884": 29, "50337": 29, "49914": 29, "49961": 29, "50003": 29, "49750": 29, "50056": 29, "50276": 29, "50176": 29, "50001": 29, "50075": 29, "49999": 29, "49868": 29, "50352": 29, "49880": 29, "49879": 29, "49707": 29, "49856": 29, "49850": 29, "50124": 29, "50088": 29, "49963": 29, "50278": 29, "50195": 29, "50313": 29, "49883": 29, "50393": 29, "50107": 29, "49871": 29, "50029": 29, "50116": 29, "49668": 29, "49390": 29, "50110": 29, "50510": 29, "50005": 29, "50071": 29, "50207": 29, "49951": 29, "49666": 29, "50059": 29, "50284": 29, "50581": 29, "50324": 29, "50133": 29, "49731": 29, "50013": 29, "50120": 29, "49878": 29, "50205": 29, "49682": 29, "49720": 29, "50260": 29, "49902": 29, "50291": 29, "49978": 29, "50098": 29, "49977": 29, "49735": 29, "50371": 29, "49706": 29, "50101": 29, "49782": 29, "50027": 29, "50455": 29, "50283": 29, "50117": 29, "50095": 29, "49785": 29, "49532": 29, "49965": 29, "50150": 29, "49705": 29, "50134": 29, "50092": 29, "49994": 29, "50246": 29, "50165": 29, "50243": 29, "50456": 29, "50405": 29, "49801": 29, "49937": 29, "49839": 29, "50065": 29, "49929": 29, "49875": 29, "49554": 29, "50208": 29, "49942": 29, "49915": 29, "49765": 29, "49990": 29, "49886": 29, "49698": 29, "50115": 29, "50015": 29, "49656": 29, "49861": 29, "50184": 29, "49610": 29, "49774": 29, "50196": 29, "49606": 29, "50354": 29, "49826": 29, "50305": 29, "49797": 29, "49829": 29, "50180": 29, "49605": 29, "49947": 29, "50237": 29, "50040": 29, "49862": 29, "49896": 29, "49676": 29, "50158": 29, "50451": 29, "49817": 29, "49940": 29, "49980": 29, "49909": 29, "50322": 29, "49885": 29, "49954": 29, "50279": 29, "50076": 29, "49918": 29, "50094": 29, "49985": 29, "49616": 29, "50253": 29, "50026": 29, "50173": 29, "49729": 29, "49816": 29, "50011": 29, "49781": 29, "49542": 29, "49944": 29, "49824": 29, "49991": 29, "49671": 29, "49893": 29, "50261": 29, "49810": 29, "49684": 29, "49898": 29, "49881": 29, "50146": 29, "50035": 29, "50017": 29, "49815": 29, "49796": 29, "49803": 29, "50343": 29, "49845": 29, "49870": 29, "50048": 29, "49537": 29, "49443": 29, "50290": 29, "49973": 29, "50222": 29, "49920": 29, "50019": 29, "49520": 29, "50128": 29, "50303": 29, "49899": 29, "50087": 29, "49928": 29, "49908": 29, "49974": 29, "49683": 29, "49607": 29, "49833": 29, "49727": 29, "50086": 29, "49647": 29, "50009": 29, "49982": 29, "49764": 29, "49853": 29, "49975": 29, "49917": 29, "50392": 29, "50430": 29, "50194": 29, "50139": 29, "50000": [29, 95], "50051": 29, "50281": 29, "49695": 29, "50008": 29, "49779": 29, "50193": 29, "50025": 29, "50262": 29, "50060": 29, "99791": 29, "100138": 29, "100114": 29, "100440": 29, "99760": 29, "99533": 29, "99561": 29, "99705": 29, "100612": 29, "101023": 29, "99740": 29, "99732": 29, "99813": 29, "100107": 29, "99312": 29, "99914": 29, "99675": 29, "99818": 29, "100257": 29, "99272": 29, "99995": 29, "100108": 29, "99882": 29, "100011": 29, "100019": 29, "100057": 29, "100318": 29, "100091": 29, "100406": 29, "99651": 29, "100288": 29, "100210": 29, "99667": 29, "99610": 29, "100134": 29, "100173": 29, "100154": 29, "99679": 29, "100174": 29, "100132": 29, "100280": 29, "99921": 29, "99978": [29, 95], "100285": 29, "100330": 29, "100305": 29, "99718": 29, "99993": 29, "100090": 29, "100699": 29, "99807": 29, "99671": 29, "99778": 29, "100051": 29, "100133": 29, "100396": 29, "100175": 29, "100528": 29, "100127": 29, "99834": 29, "100399": 29, "99761": 29, "99723": 29, "99630": 29, "100468": 29, "100558": 29, "99861": 29, "100125": 29, "99563": 29, "100512": 29, "99672": 29, "99918": 29, "100109": 29, "100470": 29, "100017": 29, "100303": 29, "99945": 29, "100050": 29, "99742": 29, "100425": 29, "100139": 29, "100316": 29, "100567": 29, "100032": 29, "100038": 29, "99976": 29, "99737": 29, "99832": 29, "99673": 29, "100146": 29, "99823": 29, "100007": 29, "99730": 29, "99669": 29, "100643": 29, "99795": 29, "100245": 29, "100376": 29, "99755": 29, "99951": 29, "100040": 29, "99709": 29, "99518": 29, "99937": 29, "99866": 29, "99785": 29, "99708": 29, "100188": 29, "100093": 29, "99800": 29, "100607": 29, "100634": 29, "100610": 29, "100106": 29, "99973": 29, "149222": 29, "150154": 29, "150329": 29, "149474": 29, "149686": 29, "150695": 29, "149865": 29, "151164": 29, "150298": 29, "149818": 29, "150215": 29, "150134": 29, "150076": 29, "149725": 29, "150141": 29, "149707": 29, "150575": 29, "150165": 29, "149795": 29, "149570": 29, "149558": 29, "149509": 29, "149428": 29, "149466": 29, "149752": 29, "149763": 29, "149788": 29, "150403": 29, "150086": 29, "150237": 29, "149597": 29, "149687": 29, "150483": 29, "149517": 29, "150119": 29, "149779": 29, "150002": 29, "150259": 29, "149913": 29, "149566": 29, "150476": 29, "150475": 29, "150202": 29, "150538": 29, "150771": 29, "149821": 29, "150168": 29, "149898": 29, "150138": 29, "149497": 29, "149852": 29, "150582": 29, "149877": 29, "149809": 29, "150277": 29, "150024": 29, "150015": 29, "150222": 29, "150461": 29, "174520": 29, "199630": 29, "199485": 29, "200140": 29, "199974": 29, "199099": 29, "199289": 29, "199865": 29, "199854": 29, "200503": 29, "199933": 29, "200187": 29, "199843": 29, "199875": 29, "199632": 29, "199884": 29, "199800": 29, "199579": 29, "199917": 29, "200073": 29, "200262": 29, "199977": 29, "199727": 29, "199756": 29, "200377": 29, "199806": 29, "199856": 29, "200697": 29, "199351": 29, "200607": 29, "213103": 29, "250057": 29, "250601": 29, "250450": 29, "249030": 29, "250785": 29, "249899": 29, "249132": 29, "249616": 29, "249114": 29, "249801": 29, "249928": 29, "249345": 29, "250513": 29, "249609": 29, "249553": 29, "281355": 29, "299911": 29, "299924": 29, "300999": 29, "300193": 29, "301001": 29, "300929": 29, "300078": 29, "341682": 29, "349720": 29, "349772": 29, "350147": 29, "394660": 29, "399716": 29, "447326": 29, "547097": 29, "547512": 29, "446020": 29, "399458": 29, "394410": 29, "349714": 29, "349075": 29, "350012": 29, "340303": 29, "299562": 29, "299896": 29, "300316": 29, "299800": 29, "300304": 29, "299008": 29, "300341": 29, "280108": 29, "249591": 29, "250242": 29, "250026": 29, "250164": 29, "250006": 29, "249900": 29, "250059": 29, "250387": 29, "250167": 29, "249087": 29, "249859": 29, "250045": 29, "250787": 29, "250122": 29, "250453": 29, "212554": 29, "199326": 29, "199145": 29, "200346": 29, "199946": 29, "199366": 29, "200081": 29, "200597": 29, "199407": 29, "201004": 29, "199774": 29, "200825": 29, "198968": 29, "200449": 29, "199446": 29, "200147": 29, "200016": 29, "199954": 29, "199132": 29, "200574": 29, "199556": 29, "200021": 29, "200253": 29, "201025": 29, "199952": 29, "199362": 29, "199597": 29, "200175": 29, "200526": 29, "200445": 29, "174765": 29, "150470": 29, "149691": 29, "150604": 29, "150063": 29, "149851": 29, "150039": 29, "150088": 29, "150353": 29, "150164": 29, "149089": 29, "149977": 29, "149894": 29, "149782": 29, "150467": 29, "149455": 29, "150190": 29, "149770": 29, "150720": 29, "149496": 29, "149747": 29, "149575": 29, "149567": 29, "149481": 29, "149976": 29, "149784": 29, "149914": 29, "149800": 29, "150246": 29, "150252": 29, "149473": 29, "150297": 29, "150839": 29, "149193": 29, "149823": 29, "150325": 29, "150120": 29, "149908": 29, "150234": 29, "149612": 29, "149745": 29, "150266": 29, "150053": 29, "149790": 29, "150419": 29, "149762": 29, "148681": 29, "150863": 29, "150084": 29, "149921": 29, "149108": 29, "150149": 29, "150047": 29, "149938": 29, "150201": 29, "149589": 29, "150358": 29, "149900": 29, "149766": 29, "149801": 29, "149543": 29, "100149": 29, "100194": 29, "99838": 29, "99806": 29, "99788": 29, "100041": 29, "100211": 29, "100049": 29, "99684": 29, "100410": 29, "99501": 29, "100018": 29, "99966": 29, "100644": 29, "99867": 29, "99661": 29, "99902": 29, "99645": 29, "100185": 29, "100006": 29, "99985": 29, "100213": 29, "100300": 29, "100004": 29, "99873": 29, "100126": 29, "100662": 29, "99907": 29, "99962": 29, "99896": 29, "100343": 29, "99551": 29, "99678": 29, "99805": 29, "100349": 29, "100137": 29, "100385": 29, "99523": 29, "100443": 29, "99743": 29, "100301": 29, "100392": 29, "99320": 29, "100144": 29, "100192": 29, "100272": 29, "100484": 29, "100070": 29, "100325": 29, "100215": 29, "99762": 29, "100005": 29, "100069": 29, "99862": 29, "99575": 29, "100085": 29, "100542": 29, "100095": 29, "100196": 29, "99712": 29, "99974": 29, "100264": 29, "100168": 29, "100054": 29, "100180": 29, "99981": 29, "99822": 29, "100161": 29, "99860": 29, "99972": 29, "99988": 29, "100251": 29, "99930": 29, "100531": 29, "99792": 29, "100058": 29, "100025": 29, "100202": 29, "100635": 29, "100320": 29, "99556": 29, "99655": 29, "99783": 29, "99856": 29, "99617": 29, "99889": 29, "100187": 29, "100097": 29, "99904": 29, "99891": 29, "100071": 29, "100076": 29, "100099": 29, "100479": 29, "99729": 29, "100391": 29, "99586": 29, "99923": 29, "50093": 29, "50528": 29, "50096": 29, "50183": 29, "50306": 29, "50297": 29, "49852": 29, "50435": 29, "49970": 29, "49775": 29, "50273": 29, "50113": 29, "50186": 29, "50275": 29, "49925": 29, "49819": 29, "49688": 29, "49657": 29, "50181": 29, "49838": 29, "49923": 29, "49865": 29, "50066": 29, "50355": 29, "49971": 29, "49669": 29, "49863": 29, "50300": 29, "50199": 29, "50325": 29, "49984": 29, "49913": 29, "50318": 29, "49728": 29, "50486": 29, "49855": 29, "50235": 29, "50321": 29, "50081": 29, "50310": 29, "50097": 29, "49721": 29, "50169": 29, "50314": 29, "49895": 29, "50388": 29, "49930": 29, "49794": 29, "49935": 29, "49932": 29, "50148": 29, "50012": 29, "50020": 29, "49813": 29, "49907": 29, "49820": 29, "50361": 29, "50334": 29, "50157": 29, "49834": 29, "50049": 29, "49588": 29, "49934": 29, "50227": 29, "49874": 29, "50232": 29, "49958": 29, "50010": 29, "50230": 29, "49746": 29, "49725": 29, "49939": 29, "50171": 29, "50384": 29, "50197": 29, "50156": 29, "50512": 29, "50036": 29, "49841": 29, "50137": 29, "49987": 29, "49788": 29, "50326": 29, "50135": 29, "49887": 29, "49822": 29, "49405": 29, "49911": 29, "50569": 29, "49921": 29, "49498": 29, "50365": 29, "50457": 29, "50198": 29, "49877": 29, "50161": 29, "50256": 29, "49823": 29, "50145": 29, "49897": 29, "50006": 29, "50525": 29, "50345": 29, "50342": 29, "50070": 29, "50032": 29, "49522": 29, "49831": 29, "49876": 29, "50257": 29, "49637": 29, "50206": 29, "50041": 29, "49956": 29, "50472": 29, "49343": 29, "49723": 29, "50213": 29, "49802": 29, "50265": 29, "50045": 29, "50448": 29, "50357": 29, "49983": 29, "49747": 29, "49585": 29, "50033": 29, "50164": 29, "50159": 29, "49846": 29, "50062": 29, "49888": 29, "50185": 29, "49906": 29, "49737": 29, "49654": 29, "50212": 29, "50129": 29, "50351": 29, "50202": 29, "50089": 29, "50014": 29, "50272": 29, "50155": 29, "50103": 29, "50210": 29, "49783": 29, "50102": 29, "50002": 29, "49919": 29, "49678": 29, "49290": 29, "50126": 29, "49733": 29, "50178": 29, "50046": 29, "49760": 29, "50082": 29, "49792": 29, "98023213e": 29, "97427166e": 29, "96831120e": 29, "96831123e": 29, "97427170e": 29, "98023216e": 29, "barcontain": 29, "artist": [29, 219], "finally": [29, 210], "numper": 29, "remain": 29, "100000": [29, 30, 48, 49, 81, 84, 95, 100, 101, 124, 133, 134, 145, 150, 186, 187, 212, 214, 217], "randint": [29, 40, 48, 49, 50, 73, 79, 80, 85, 87, 91, 96, 99, 102, 105, 106, 109, 110, 111, 112, 124, 127, 131, 134, 139, 142, 153, 170, 171, 177, 186, 187, 189, 190, 196, 205, 217], "d32": 29, "d64": 29, "rais": [29, 60, 65, 66, 76, 87, 92, 104, 113, 114, 125, 126, 128, 130, 146, 152, 177, 191, 193, 196, 199, 200, 210, 219], "imagin": [29, 53, 56, 57, 58, 82, 107, 108, 131, 137, 163, 164, 175, 176, 177], "now": [29, 91, 207, 211], "want": [29, 48, 166, 167], "converted": 29, "find_interval": 29, "dx": [29, 88, 89, 111, 112, 145, 150, 159, 174], "ab": [29, 31, 48, 53, 58, 73, 74, 77, 100, 106, 107, 108, 110, 112, 114, 130, 135, 144, 163, 168, 175, 178, 179, 196, 198, 210, 211], "usually": 29, "zeros": [29, 34, 48, 50, 52, 73, 77, 80, 81, 82, 105, 109, 110, 113, 131, 146, 147, 152, 159, 177, 191], "2000": [29, 74, 81, 143, 145, 161, 217, 219], "902177131426653e": 29, "9604642110855366e": 29, "126": [29, 48], "235": [29, 104, 107], "519": 29, "1008": [29, 50, 113], "90217713e": 29, "22053418e": 29, "41204658e": 29, "60355899e": 29, "79507140e": 29, "98658381e": 29, "17809621e": 29, "36960862e": 29, "56112103e": 29, "07526334e": 29, "19441458e": 29, "31356582e": 29, "43271707e": 29, "55186831e": 29, "67101955e": 29, "79017079e": 29, "90932203e": 29, "02847327e": 29, "14762451e": 29, "26677575e": 29, "38592699e": 29, "50507823e": 29, "62422947e": 29, "74338071e": 29, "86253195e": 29, "98168319e": 29, "10083443e": 29, "21998568e": 29, "33913692e": 29, "45828816e": 29, "57743940e": 29, "69659064e": 29, "81574188e": 29, "93489312e": 29, "05404436e": 29, "17319560e": 29, "29234684e": 29, "41149808e": 29, "53064932e": 29, "64980056e": 29, "76895180e": 29, "88810304e": 29, "00725429e": 29, "12640553e": 29, "24555677e": 29, "36470801e": 29, "48385925e": 29, "60301049e": 29, "72216173e": 29, "84131297e": 29, "96046421e": 29, "something": [29, 178, 184, 219], "ql": 29, "9527662799041536e": 29, "estimat": [29, 73], "left": [29, 39, 48, 49, 50, 53, 56, 79, 84, 97, 104, 106, 114, 125, 127, 129, 143, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 174, 175, 191, 204, 210, 211], "x_": [29, 53, 58, 81, 137, 156, 157, 175], "64": [29, 48, 49, 73, 79, 86, 91, 102, 104, 113, 131, 144, 149, 212], "inf_strict": 29, "f1": [29, 64, 124, 141, 212, 217], "f2": [29, 141, 212, 217, 219], "count_event": 29, "di": [29, 65, 80, 81, 82, 196], "1001": [29, 48, 95, 118, 175], "357489651913738e": 29, "611": 29, "979": 29, "190": [29, 104], "1310255931817892e": 29, "810": [29, 51, 113], "290": 29, "7263022211722046e": 29, "878": 29, "996": [29, 50, 108], "390": 29, "32157884916262e": 29, "911": [29, 48], "1003": [29, 113, 114], "490": 29, "9168554771530353e": 29, "919": [29, 48, 145], "978": [29, 51], "590": 29, "5121321051434506e": 29, "947": [29, 48], "690": 29, "107408733133866e": 29, "958": 29, "1013": [29, 95], "790": 29, "7026853611242814e": 29, "990": 29, "1026": 29, "890": [29, 113, 211], "297961989114697e": 29, "944": 29, "980": 29, "893238617105112e": 29, "956": 29, "989": 29, "952766e": 29, "019685": 29, "1016": 29, "190553e": 29, "051417": 29, "953": [29, 48, 147], "785830e": 29, "058223": 29, "381107e": 29, "063508": 29, "992": 29, "976383e": 29, "085914": 29, "logx": [29, 84], "inf_equal": 29, "df2": [29, 51, 113, 131, 138], "1040": 29, "1025": 29, "1015": 29, "940": 29, "966": [29, 113], "983": [29, 48], "1024": [29, 95, 127], "985": [29, 33, 41, 221], "999": [29, 39, 148, 210], "971": [29, 48], "997": [29, 48, 50, 108, 114], "sup_strict": 29, "df3": [29, 138], "614": 29, "1004": 29, "995": [29, 50], "870": 29, "905": [29, 145], "908": [29, 145], "977": [29, 48], "930": 29, "994": 29, "954": 29, "984": [29, 73], "1021": 29, "972": 29, "038105": 29, "032417": 29, "1018": 29, "054601": 29, "069601": 29, "074540": 29, "1033": 29, "sup_equal": 29, "df4": 29, "1011": [29, 211], "982": 29, "981": 29, "998": [29, 108], "1029": 29, "1002": [29, 51, 101], "988": 29, "inf_strict_neg": 29, "dfn": 29, "991": [29, 48], "975": [29, 147], "1010": [29, 51], "1019": 29, "957": 29, "As": [29, 61, 166, 167], "soon": 29, "rounded": 29, "inequality": 29, "howev": 29, "handl": 29, "templat": [29, 179], "inequalit": 29, "easi": 29, "articl": [29, 48, 53, 55, 66, 69, 81, 90, 91, 156, 157, 178, 182, 183, 184, 185, 196, 217], "according": 29, "processing": [29, 216], "cost": [29, 114, 191], "versus": [29, 51], "plot_float_and_double_rouding": [29, 38, 41, 221], "global": [30, 31, 34, 36, 37, 38, 53, 62, 65, 96, 117, 125, 146, 196, 204, 216], "verrou": [30, 217], "auquel": [30, 53, 65, 133, 134, 146, 148, 204, 211, 214], "proteg": [30, 65, 66, 199, 217], "contr": [30, 53, 82, 91, 141, 199, 217], "acces": [30, 31, 37, 38, 51, 65, 66, 137, 173, 187, 196, 200, 204, 210, 212, 214, 217], "concurrentiel": [30, 217], "timeit": [30, 34, 37, 38, 48, 49, 50, 79, 87, 89, 104, 107, 108, 110, 117, 135, 137, 141, 142, 143, 146, 153, 160, 169, 175, 185, 186, 187, 205], "concurrent": 30, "threadpoolexecutor": [30, 217], "create_list": 30, "5017731000007188": 30, "run2": 30, "max_worker": [30, 217], "executor": [30, 217], "0972130999998626": 30, "synchronis": [30, 207, 216], "termin": [30, 56, 65, 79, 89, 102, 150, 172, 177, 178, 200, 204, 210, 211, 212, 217], "mettr": [30, 48, 53, 65, 107, 109, 110, 134, 137, 163, 204, 210, 219], "jour": [30, 53, 55, 56, 66, 70, 74, 81, 82, 83, 92, 102, 107, 108, 113, 114, 140, 162, 163, 164, 177, 178, 179, 196, 204, 207, 211, 212, 214, 219], "impos": [30, 38, 40, 49, 53, 141, 196, 204, 211, 215], "mis": [30, 39, 53, 65, 70, 74, 79, 102, 107, 124, 125, 162, 177, 181, 196, 204, 211, 212, 214], "lieu": [30, 31, 39, 49, 53, 56, 66, 75, 80, 117, 128, 168, 187, 196, 204, 210, 214, 217, 219], "va": [30, 40, 44, 48, 53, 58, 65, 70, 85, 91, 92, 94, 104, 106, 107, 109, 125, 136, 162, 165, 169, 178, 179, 186, 189, 196, 202, 204, 210, 211, 212, 214, 217], "009": [30, 145], "9519763000007515": 30, "run3": 30, "001": [30, 31, 39, 81, 116, 118, 145, 146, 160, 168, 217], "3304714000005333": 30, "signific": 30, "887": [30, 41, 48, 221], "plot_gil_exampl": [30, 38, 41, 221], "r\u00e9\u00e9crir": [31, 49, 60, 70, 114, 126, 170, 172, 196, 200], "u": [31, 37, 56, 61, 73, 83, 90, 92, 130, 140, 148, 179, 185, 215], "compteur": [31, 139], "u_st": 31, "u_non_recurs": 31, "u0": 31, "u1": [31, 130], "u2": [31, 130], "\u00e8me": [31, 211], "arr\u00eat": [31, 53, 65, 108, 114, 134, 139, 145, 172, 178, 189, 199, 202, 210, 217], "compare_l": 31, "q": [31, 53, 55, 63, 80, 83, 90, 102, 113, 156, 157, 164, 165, 179, 191], "g\u00e9ometr": [31, 56, 95, 96, 135], "sum_": [31, 48, 49, 50, 52, 53, 55, 56, 58, 66, 73, 79, 94, 95, 96, 105, 106, 107, 108, 109, 110, 124, 139, 151, 156, 157, 158, 159, 161, 162, 163, 164, 165, 174, 175, 180, 181], "infty": [31, 55, 56, 95, 129, 162], "convergent": [31, 48, 55, 56, 85, 97], "infin": [31, 58, 69, 80, 84, 104, 162, 188, 200, 210, 219], "outr": [31, 53, 65, 179, 204], "suite_geometrique_1": 31, "1075": 31, "informaticien": [31, 53, 198], "exp\u00e9riment": 31, "suite_geometrique_2": 31, "yold": 31, "reper": [31, 44, 56, 92, 114, 182, 183, 211], "17": [31, 33, 39, 40, 44, 48, 49, 50, 51, 73, 78, 80, 81, 84, 87, 89, 90, 91, 95, 96, 97, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 124, 125, 131, 134, 135, 138, 144, 146, 147, 150, 151, 155, 158, 159, 161, 162, 168, 175, 178, 181, 183, 187, 188, 196, 200, 204, 207, 210, 211], "mainten": [31, 37, 39, 40, 46, 49, 56, 58, 70, 77, 81, 83, 87, 89, 91, 106, 118, 126, 130, 136, 143, 146, 158, 159, 164, 168, 170, 172, 175, 179, 180, 188, 194, 196, 204, 211, 217], "agit": [31, 48, 49, 53, 55, 56, 58, 65, 66, 81, 85, 91, 102, 125, 141, 146, 180, 181, 182, 183, 184, 187, 196, 204, 210, 211, 212, 215, 217], "savoir": [31, 36, 40, 48, 49, 51, 53, 58, 65, 69, 81, 86, 93, 97, 102, 104, 126, 135, 146, 152, 160, 172, 180, 184, 185, 187, 189, 196, 199, 204, 210, 211, 212, 217], "approxim": [31, 39, 51, 65, 81, 91, 105, 106, 108, 117, 174, 175], "devient": [31, 44, 53, 56, 57, 73, 79, 96, 118, 150, 161, 187, 196, 204, 210, 211, 214, 215, 217, 219], "nul": [31, 50, 53, 65, 74, 80, 87, 96, 109, 145, 150, 161, 177, 187, 199, 211], "1055": 31, "toutefois": [31, 53, 55, 56, 150, 187, 196, 200, 204, 210, 211], "indispens": [31, 65, 152, 168, 179, 186, 196, 202, 210], "loin": [31, 44, 58, 90, 91, 146, 196, 210, 211, 212], "remarqu": [31, 48, 53, 65, 80, 90, 91, 94, 102, 104, 106, 109, 110, 136, 196, 210, 211, 215, 217], "addition": [31, 53, 96, 104, 131, 210], "s_n": 31, "croiss": [31, 49, 50, 53, 56, 65, 79, 83, 91, 104, 106, 107, 108, 125, 134, 135, 137, 162, 163, 172, 190, 196, 210, 211], "u_i": [31, 175], "u_n": [31, 97, 196], "d\u00e9croiss": [31, 39, 53, 55, 56, 65, 73, 83, 84, 106, 172, 175, 211], "chercheur": [31, 70], "success": [31, 48, 55, 83, 175, 196, 204, 210, 211, 214], "01100111": 31, "011": [31, 118, 145, 147], "111": [31, 44, 50, 51, 91], "hyper_cube_l": 31, "hyper_cube_dico": 31, "ind": [31, 44, 117, 146, 179], "cle": [31, 65, 83, 92, 150, 172, 173], "hyper_cub": 31, "Sur": [31, 53, 56, 66, 87, 94], "port": [31, 39, 49, 51, 65, 69, 172, 178, 196, 214, 217], "prior": [31, 32, 53, 56, 65, 84, 87, 105, 150, 175, 196, 214], "occurrence2": 31, "uplet": [31, 53], "recevr": [31, 55, 196], "curios": [31, 57], "occurrence3": 31, "hyper_cube_liste2": 31, "m2": [31, 39, 76, 77, 83, 87, 102, 107, 108, 113, 190, 191, 196, 204, 217], "occurrence4": 31, "hyper_cube_liste3": 31, "occurrence5": 31, "013": [31, 35, 41, 145, 147, 221], "plot_hypercub": [31, 38, 41, 221], "esthet": 32, "twoarg": 32, "onearg": 32, "retard": [32, 53, 70, 214], "fcts_a": 32, "fcts_b": 32, "partagent": [32, 49, 204], "004": [32, 34, 41, 145, 221], "plot_lambda_funct": [32, 38, 41, 221], "itertool": [33, 88, 89, 169], "op": [33, 211], "parenthes": [33, 65, 172, 178, 181, 196, 199, 210, 211, 219], "pn": 33, "po": 33, "eval": 33, "zerodivisionerror": [33, 65, 199], "plot_matador": [33, 38, 41, 221], "13": [34, 39, 40, 41, 44, 48, 49, 50, 51, 53, 58, 66, 67, 73, 75, 77, 79, 80, 81, 82, 83, 84, 87, 90, 91, 95, 96, 97, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 124, 125, 128, 130, 131, 134, 135, 138, 143, 144, 145, 146, 149, 150, 153, 155, 158, 159, 161, 163, 175, 179, 181, 185, 187, 188, 196, 200, 204, 207, 210, 211, 217], "23": [34, 38, 48, 49, 50, 51, 53, 66, 73, 80, 81, 84, 89, 91, 93, 96, 102, 104, 105, 107, 111, 112, 113, 114, 117, 118, 124, 125, 138, 146, 147, 150, 158, 159, 164, 168, 172, 175, 178, 185, 187, 188, 207, 210, 211], "41": [34, 44, 48, 49, 51, 80, 117, 125, 146, 149, 158, 159, 172, 185, 196, 210, 211], "42": [34, 44, 48, 49, 51, 53, 66, 81, 91, 102, 146, 158, 159, 172, 185, 196, 211], "44": [34, 44, 48, 49, 51, 53, 66, 91, 106, 110, 125, 140, 146, 158, 159, 160, 185, 196, 207, 211, 217], "1400001060101204e": 34, "9200000173877925e": 34, "n\u00e9anmoin": [34, 53, 55, 57, 65, 70, 87, 91, 117, 126, 145, 170, 187, 196, 199, 204, 205, 210, 211, 214, 215], "temporair": [34, 53, 66, 211], "plot_numpy_trick": [34, 38, 41, 221], "nan": [35, 48, 49, 81, 109, 110, 113, 124, 141, 144, 179], "disparu": 35, "comport": [35, 53, 65, 73, 81, 107, 162, 196, 204, 211, 212], "attendu": [35, 40, 48, 60, 65, 102, 104, 114, 117, 125, 134, 143, 145, 210, 217], "corrig": [35, 39, 40, 55, 56, 58, 60, 65, 81, 96, 99, 113, 150, 180, 181, 200, 202], "dropn": 35, "plot_pandas_groupby": [35, 38, 41, 221], "quar": 36, "pion": 36, "vingt": [36, 53], "noir": [36, 55, 56, 83, 140, 175, 187, 196, 204], "39": [36, 44, 48, 49, 50, 51, 73, 77, 82, 83, 87, 90, 91, 92, 95, 96, 97, 98, 99, 102, 104, 105, 110, 111, 112, 116, 117, 118, 125, 126, 132, 137, 138, 140, 141, 145, 146, 147, 149, 150, 151, 158, 159, 160, 161, 162, 163, 172, 173, 178, 179, 184, 185, 187, 188, 191, 194], "dami": 36, "enti": [36, 48, 49, 50, 53, 65, 70, 73, 75, 86, 96, 126, 128, 134, 148, 156, 157, 165, 168, 181, 188, 196, 199, 204, 210, 211, 212, 215, 217], "vitess": [36, 53, 55, 56, 57, 168, 215], "utilisent": [36, 48, 50, 53, 58, 65, 168, 173, 198, 211, 217], "pratiqu": [36, 48, 53, 58, 70, 73, 90, 187, 188, 202, 204, 205, 207, 210, 211, 213, 219], "voisinag": [36, 55, 111, 112], "quatr": [36, 39, 49, 53, 56, 65, 66, 81, 92, 96, 103, 136, 137, 146, 152, 172, 179, 180, 196, 199, 210, 211, 212, 216, 217, 219], "coin": [36, 204], "libr": [36, 113], "contiennent": [36, 44, 49, 53, 56, 66, 149, 158, 187, 196, 205, 210, 211, 212, 214, 215, 217, 219], "sait": [36, 39, 49, 58, 70, 79, 84, 90, 91, 104, 109, 110, 111, 112, 113, 126, 128, 130, 135, 146, 162, 175, 178, 181, 188, 199, 200, 210, 211, 217], "revu": [36, 55, 79, 165, 189, 216], "occup": [36, 58, 102, 164, 204, 208, 212, 217], "assembl": [36, 53, 66, 70, 153, 188, 212], "num\u00e9rot": [36, 80, 136, 164, 183, 187], "Quels": [36, 48, 162], "d\u00e9sir": [36, 39, 77, 170, 179, 196, 199, 204, 210, 211, 212, 214], "dix": [36, 53, 70, 73, 114, 180, 184, 190, 196, 210, 211], "vid": [36, 49, 65, 79, 85, 102, 103, 107, 164, 172, 176, 177, 188, 196, 204, 210, 211, 212, 214], "adversair": 36, "pion_prendr": 36, "advers": 36, "\u00e9chou": [36, 77, 108, 196, 199, 214], "pion_prendre_dict": 36, "damier_dict": 36, "laiss": [36, 40, 53, 58, 65, 77, 90, 91, 104, 109, 110, 129, 179, 183, 187, 204, 211], "restent": [36, 51, 196], "\u00e9chiqui": [36, 48], "pion_prendre_list": 36, "damier_list": 36, "extend": [36, 65, 91, 98, 102, 116, 187, 211, 212], "hor": [36, 97, 111, 112, 135, 168, 196], "devr": [36, 40, 48, 53, 58, 70, 83, 91, 97, 135, 185, 187, 190, 196, 208, 210, 211, 217], "pion_prendre_bord": 36, "accept": [36, 49, 53, 65, 106, 161, 170, 196, 204, 210, 211, 212, 219], "n\u00e9gat": [36, 39, 79, 96, 104, 113, 125, 158, 159, 199, 209, 210, 211, 219], "005": [36, 41, 146, 147, 221], "plot_partie_dam": [36, 38, 41, 221], "explor": [37, 40, 55, 91, 102, 135, 196, 212], "notemm": 37, "api": [37, 44, 202, 215, 217], "bytesio": [37, 38, 215], "ujson": [37, 141], "cloudpickl": [37, 141], "record": [37, 49, 53, 138, 202, 215], "nom": [37, 44, 48, 49, 51, 53, 55, 65, 66, 70, 79, 91, 94, 124, 132, 137, 138, 141, 149, 152, 172, 178, 179, 185, 188, 196, 199, 204, 205, 210, 211, 215, 217, 219], "xavi": [37, 49, 69, 71, 90, 188, 210, 215, 219], "pr\u00e9nom": [37, 49, 65, 97, 137, 173, 210, 212, 215], "age": [37, 207, 215], "buff": [37, 38, 138, 212, 215], "seq": [37, 178, 179, 215], "getvalu": [37, 38, 138, 141, 145, 146, 147, 160, 215], "pr": [37, 145, 146, 147, 160, 179, 215], "u00e9nom": [37, 215], "load": [37, 49, 138, 212, 215], "ndarray": [37, 146, 147, 160, 215], "serializ": [37, 215], "att": [37, 215], "jsonencod": [37, 215], "myencod": [37, 215], "classnam": [37, 215], "__class__": [37, 65, 196, 199, 215], "__name__": [37, 60, 65, 84, 125, 178, 179, 196, 204, 211, 214, 215], "jsondecod": [37, 215], "mydecod": [37, 215], "decod": [37, 92, 118, 141, 173, 179, 185, 200, 208, 211, 215], "dec": [37, 53, 91, 128, 215], "isinst": [37, 83, 126, 128, 146, 147, 160, 188, 199, 210, 215], "obj": [37, 65, 196, 199, 200, 204, 210, 211, 215], "__main__": [37, 60, 65, 126, 168, 178, 179, 196, 200, 204, 210, 211, 214], "0x7f87ddae8340": 37, "altern": [37, 48, 53, 124, 134, 204, 212, 215], "002849399999831803": 37, "00033690000054775737": 37, "0005795999986730749": 37, "0003201000017725164": 37, "creation": [37, 204], "570000080799218e": 37, "lu": [37, 48, 65, 90, 185, 208, 212], "x80": [37, 215], "x04": [37, 215], "x95f": [37, 215], "x00": [37, 215], "x94": [37, 215], "x8c": [37, 215], "x07record": [37, 215], "x03nom": [37, 215], "x06xavi": [37, 215], "x07pr": [37, 215], "xc3": [37, 215], "xa9nom": [37, 215], "x94h": [37, 215], "x05": [37, 215], "x08langag": [37, 215], "x03c": [37, 215], "x03ag": [37, 215], "x94k": [37, 215], "x06python": [37, 215], "x0bk": [37, 215], "x14ueu": [37, 215], "x95": 37, "x08__main__": 37, "x01a": 37, "x93": 37, "x81": 37, "x03att": 37, "x01r": 37, "x94sb": 37, "0x7f8889b4b940": 37, "duppliqu": 37, "surtout": [37, 53, 58, 69, 83, 84, 102, 134, 150, 196, 210, 211], "voluminu": 37, "att1": [37, 65, 215], "att2": [37, 65, 215], "x01b": 37, "x04att1": 37, "x04att2": 37, "x06ub": 37, "eviton": 37, "__getstate__": [37, 212, 215], "__setstate__": [37, 212, 215], "setattr": [37, 215], "0x7f88877b2dd0": 37, "000416300001234049": 37, "00032219999957305845": 37, "habituel": 37, "niveau": [37, 44, 50, 53, 73, 80, 84, 146, 187, 196, 204, 205, 210, 212, 217], "comparaison": [37, 50, 65, 87, 125, 131, 141, 188, 196, 207, 211], "pr\u00e9visibl": 37, "acc\u00e9ler": [37, 38, 39, 49, 56, 58, 85, 145, 146, 160, 161, 173, 194, 211, 216], "protocol": [37, 214], "highest_protocol": 37, "0003802999999606982": 37, "tent": [37, 53, 83, 108, 130, 140, 217], "myfunc": 37, "x01x": 37, "x01f": 37, "x06myfunc": 37, "x94u": 37, "0x7f8885f8b130": 37, "contourn": [37, 53, 91, 92, 204, 215], "obstacl": [37, 53, 92, 215], "x02": 37, "x17cloudpickl": 37, "x0e_make_funct": 37, "x03": 37, "r_builtin_typ": 37, "x08codetyp": 37, "x85": 37, "x94r": 37, "x01k": 37, "x00k": 37, "x02kcc": 37, "x08": 37, "x00d": 37, "x01": 37, "x17": 37, "x94nk": 37, "x86": 37, "x8co": 37, "xadupr": [37, 44, 124, 145, 160, 178, 200], "_doc": [37, 61], "prog": [37, 41, 221], "plot_serialisation_exampl": [37, 38, 41, 221], "x94m": 37, "x97": 37, "x01c": 37, "x0b__package__": 37, "x08__name__": 37, "x94unnnt": 37, "x1ccloudpickl": 37, "cloudpickle_fast": 37, "x12_function_setstat": 37, "x19": 37, "x16h": 37, "x0f": 37, "x0c__qualname__": 37, "x0f__annotations__": 37, "x0e__kwdefaults__": 37, "x94n": 37, "x0c__defaults__": 37, "n__module__": 37, "x07__doc__": 37, "x0b__closure__": 37, "x17_cloudpickle_submodul": 37, "x0b__globals__": 37, "x86r0u": 37, "0x7f8885f895a0": 37, "typeerror": [37, 48, 95, 96, 98, 99, 104, 126, 128, 146, 196, 199, 210, 211], "0x7f8885f8a560": 37, "fonctionnent": [37, 51, 58, 60, 65, 70, 119, 123, 178, 199, 204], "ens": [37, 39, 106, 128, 143, 150, 153, 196, 205, 210], "x953": 37, "x02it": 37, "x08builtin": 37, "x04it": 37, "x02e": 37, "x00bu": 37, "list_iterator": 37, "0x7f8889b4b7c0": 37, "Ils": [37, 53, 66, 70, 119, 138, 141, 152, 179, 187, 196, 199, 202, 205, 208, 211, 212, 217], "ensgen": 37, "generator": [37, 65, 95, 127], "030": [37, 41, 145, 221], "lectur": [38, 48, 51, 62, 91, 140, 141, 214, 215, 217], "d\u00e9s\u00e9rialis": [38, 215], "r\u00e9alis": [38, 50, 51, 53, 55, 80, 104, 131, 135, 168, 187, 196, 204], "strict": [38, 165, 181, 208, 215], "protoc": 38, "messag": [38, 48, 60, 65, 66, 70, 92, 115, 172, 173, 178, 179, 196, 199, 201, 202, 210, 211, 212, 216], "contrair": [38, 44, 53, 55, 66, 70, 75, 77, 109, 110, 150, 167, 172, 196, 199, 204, 210, 211, 212, 214, 217], "gp": 38, "__version__": [38, 61, 64], "tutorial": [38, 62], "os": [38, 138, 146, 147, 149, 160, 178, 200, 204, 212, 214, 219], "sy": [38, 65, 105, 145, 146, 147, 150, 178, 200, 205, 208, 211, 214, 217], "struct": [38, 212], "sphinx_runpython": [38, 65, 196, 200, 210, 215], "runpython": [38, 65, 196, 200, 210, 215], "run_cmd": 38, "json_format": 38, "messagetojson": 38, "parsejson": 38, "syntax": [38, 39, 48, 49, 65, 68, 98, 140, 178, 180, 181, 188, 198, 204, 209, 212, 215, 218], "proto2": 38, "optional": 38, "int32": [38, 51, 80, 113], "enum": 38, "phonetyp": 38, "mobil": [38, 66], "phonenumb": 38, "repeated": 38, "phon": 38, "addressbook": 38, "peopl": 38, "debian": [38, 63], "apt": [38, 63, 64, 204], "proto": 38, "w": [38, 44, 51, 58, 65, 74, 90, 105, 106, 138, 141, 162, 163, 164, 165, 173, 178, 179, 184, 185, 200, 202, 204, 212, 217, 219], "cmd": [38, 64, 200, 204], "python_out": 38, "err": [38, 81, 200, 208], "use_protoc": 38, "filenotfounderror": [38, 200, 219], "errno": [38, 219], "listd": [38, 138, 149, 178, 204, 212], "plot_tarabiscot": [38, 39, 41, 221], "plot_serialisation_protobuf": [38, 41, 221], "plot_tsp": [38, 40, 41, 221], "schema_pb2": 38, "missing": [38, 49, 210], "utlis": 38, "noq": 38, "e402": 38, "1234": 38, "john": [38, 53, 141], "jdo": 38, "555": 38, "4321": 38, "serializetostring": 38, "fromstring": 38, "parsefromstring": 38, "db": [38, 179], "5678": 38, "johnet": 38, "doet": 38, "jtdoet": 38, "example2": 38, "777": 38, "bytesiz": 38, "pack": [38, 210, 212, 217], "db2": 38, "bsiz": 38, "unpack": [38, 210, 212], "js": [38, 78, 83], "055": [38, 41, 221], "cens": [39, 113, 180, 199], "effect": [39, 53, 56, 187, 196, 204, 205, 210], "identif": [39, 53, 65, 66, 81, 153, 196, 204, 211, 214], "Ici": [39, 65, 114, 128, 132, 210, 211, 217], "d\u00e9signent": [39, 106, 130, 196], "fall": [39, 58, 99, 109, 110, 114, 146, 179], "escompt": 39, "mi": [39, 125], "ordre": [39, 40, 48, 49, 50, 55, 56, 58, 65, 83, 84, 87, 89, 91, 97, 102, 106, 107, 108, 114, 125, 128, 131, 137, 150, 162, 163, 164, 167, 170, 172, 187, 188, 190, 196, 205, 211, 217], "lor": [39, 40, 48, 49, 51, 53, 58, 65, 66, 70, 73, 79, 86, 91, 104, 119, 128, 141, 163, 168, 172, 178, 179, 186, 194, 196, 198, 199, 202, 204, 211, 212, 214, 215, 217, 219], "quant": [39, 53, 65, 126, 196, 210], "pieg": [39, 48], "entrer": [39, 204, 217], "3n": [39, 97], "exigent": [39, 53], "rar": [39, 53, 60, 65, 70, 152, 178, 179, 196, 204, 208, 211, 212], "exig": [39, 73], "con\u00e7oit": [39, 91, 196, 217], "debug": [39, 200, 217], "\u00e9tap": [39, 49, 53, 55, 56, 65, 81, 83, 85, 91, 101, 106, 144, 148, 154, 155, 162, 163, 168, 204, 211, 212, 215, 219], "releas": [39, 202, 217], "\u00f4t\u00e9": [39, 83, 90, 104], "devenus": [39, 58], "inutil": [39, 57, 60, 65, 87, 94, 117, 169, 170, 202, 210, 217], "invisibl": [39, 204], "favoris": [39, 53], "multitud": [39, 204], "rectangl": [39, 56, 112, 123, 135, 196, 204], "h\u00e9rit": [39, 65, 118, 130, 131, 199, 202, 204, 210], "red\u00e9fin": [39, 65, 66, 130, 141, 168, 196, 199], "losang": 39, "Est": [39, 40, 48, 58, 80, 104, 137, 146, 154, 155, 158, 162, 169, 190], "introduir": [39, 49, 181, 198, 204, 210, 217], "princip": [39, 48, 53, 73, 81, 196, 201, 204, 212, 219], "angle": [39, 54, 55, 56, 58, 116, 119, 204], "paraiss": 39, "g\u00e9n\u00e9ral": [39, 49, 56, 58, 65, 70, 107, 117, 153, 162, 179, 184, 188, 194, 196, 199, 200, 204, 210, 211, 215, 217], "afin": [39, 53, 55, 56, 58, 65, 104, 107, 108, 115, 165, 179, 186, 188, 196, 199, 204, 208, 210, 211, 212, 217, 219], "b\u00e9n\u00e9fici": 39, "contien": [39, 184, 196, 199, 214], "thet": [39, 48, 210], "cos": [39, 58, 94, 100, 101, 111, 116, 132, 172, 174, 175, 178, 179, 196, 214], "sin": [39, 94, 100, 101, 111, 116, 132, 166, 167, 196], "183676841431136": 39, "fill": [39, 112, 146, 196, 204], "sens": [39, 141], "emploi": [39, 179, 196, 204, 210, 211], "31622776601683794": 39, "03162277660168379": 39, "9999": [39, 113], "0001": [39, 81, 106, 111, 112, 118, 149], "99999": 39, "0031622776601683794": 39, "999999": [39, 146], "0000000000000002e": 39, "9999999": 39, "000316227766016838": 39, "99999999": 39, "999999999": 39, "0000000000000003e": 39, "1622776601683795e": 39, "9999999999": [39, 196], "99999999999": 39, "1622776601683796e": 39, "999999999999": 39, "9999999999999": 39, "1622776601683797e": 39, "99999999999999": 39, "0000000000000001e": 39, "999999999999999": 39, "162277660168379e": 39, "9999999999999999": [39, 196], "18": [39, 40, 44, 48, 49, 50, 51, 67, 73, 78, 80, 81, 83, 84, 87, 89, 91, 96, 97, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 125, 126, 134, 135, 138, 144, 146, 149, 150, 158, 159, 161, 166, 167, 168, 169, 172, 175, 178, 179, 181, 183, 187, 188, 189, 196, 206, 207, 219], "signif": [39, 48, 49, 50, 53, 55, 56, 58, 65, 66, 78, 91, 104, 110, 117, 145, 168, 178, 179, 180, 188, 196, 198, 199, 204, 205, 207, 210, 211, 212, 217, 219], "8999999985098839": 39, "3162277683729184": 39, "9900000002235174": 39, "0999999988824129": 39, "9990000000689179": 39, "0009999999": 39, "03162277551199656": 39, "9999000000098022": 39, "999999e": 39, "009999999509891484": 39, "9999900000011621": 39, "0031622774764217087": 39, "9999990000001162": 39, "0009999999418942008": 39, "999999900000013": 39, "0003162277453952373": 39, "999999990000001": 39, "999999525523424e": 39, "9999999990000001": 39, "162277439909038e": 39, "99999937286775e": 39, "162277516708525e": 39, "999999437919884e": 39, "162277525279896e": 39, "999999488741863e": 39, "162277498494361e": 39, "999999422567411e": 39, "162277503725911e": 39, "999999712080637e": 39, "1622776099917643e": 39, "matrice_carree_2": 39, "determin": [39, 92], "m1": [39, 76, 77, 81, 83, 87, 102, 107, 108, 190, 191, 204], "fauss": [39, 87, 146, 166, 167, 190, 210], "M": [39, 48, 49, 52, 53, 58, 74, 90, 104, 105, 106, 108, 109, 110, 113, 117, 137, 151, 154, 155, 158, 159, 162, 164, 169, 173, 175, 179, 185, 193, 204, 207, 211, 219], "begin": [39, 48, 53, 55, 56, 58, 66, 79, 81, 97, 105, 106, 114, 124, 125, 154, 158, 159, 162, 163, 175, 196, 200], "cc": [39, 77, 109, 110, 146], "det": [39, 48], "tr": [39, 64, 128, 138, 149], "lambda_1": [39, 154], "lambda_2": [39, 154, 158], "v\u00e9rifient": [39, 53, 55, 109, 110, 183, 187, 219], "lll": [39, 55, 56], "discrimin": [39, 184], "polyn\u00f4m": [39, 172], "sqrt": [39, 48, 53, 58, 107, 108, 132, 154, 158, 175, 183, 196, 210, 214, 217], "valeurs_propr": 39, "9999990000110609": 39, "000000999988939": 39, "m_2": [39, 109, 110], "_2": [39, 58], "99999999900000002828": 39, "000000001": 39, "Quelles": [39, 115, 162], "diagonalis": [39, 154, 196], "faux": [39, 48, 58, 124, 166, 167, 196, 199, 210], "014": [39, 41, 221], "0x7f87dde1b820": 40, "\u00e9loign": [40, 48, 51, 53, 55, 111, 112, 117], "0x7f87ddd9cf70": 40, "constat": [40, 179], "d\u00e9duit": [40, 86, 109, 143, 175], "d\u00e9crois": 40, "milieu": [40, 58, 79, 106, 148, 187, 188, 189], "diminu": [40, 49, 53, 56, 73, 162], "pair": [40, 49, 50, 56, 58, 65, 80, 83, 85, 91, 97, 102, 106, 111, 112, 117, 119, 123, 156, 157, 162, 163, 190, 196, 204, 211], "dessous": [40, 51, 53, 65, 96, 128, 153, 196, 204, 207, 211, 217], "505907269186013": 40, "d0": [40, 81, 89], "ordre2": 40, "xo": 40, "yo": [40, 219], "691942421153962": 40, "1903892598312495": 40, "0x7f87dde1af50": 40, "voil\u00e0": [40, 89, 178, 179], "supposon": [40, 53, 79, 170], "faison": 40, "oublion": [40, 179], "078025608783923": 40, "6771876900613591": 40, "1391250768731818": 40, "1046501462201344": 40, "0784484090749775": 40, "0x7f87ddd3e8f0": 40, "concord": 40, "oubl": [40, 180, 181, 210], "d\u00e9liber": 40, "bouclag": 40, "gagn": [40, 53, 58, 65, 66, 123, 146, 188, 205, 211, 215, 217], "boug": [40, 107, 111, 112, 176, 204], "weight": [40, 149], "bold": 40, "181581748314381": 40, "5243392021523936": 40, "4158660324899728": 40, "7332034403329302": 40, "2868319034555752": 40, "pourt": [40, 48, 53, 150, 175, 178, 186, 190, 196, 199], "tort": [40, 71, 124, 178], "empress": 40, "443079572694948": 40, "523338179940478": 40, "3819249081186789": 40, "194186815206845": 40, "1883320298224307": 40, "0767649820540774": 40, "16329823208868144": 40, "016637088361759367": 40, "Pas": [40, 62, 77, 81, 84, 85, 125, 143, 168], "parf": [40, 44, 89, 108], "conform": [40, 219], "mien": [40, 179], "inchang": [40, 196, 210, 211, 217], "parfait": [40, 53, 58, 73, 83, 210, 211], "voit": [40, 48, 49, 53, 65, 66, 73, 90, 109, 110, 114, 133, 134, 168, 199, 219], "circonst": [40, 178], "aurion": 40, "al\u00e9": [40, 111, 112], "permutation_rnd": 40, "4489424506049406": 40, "6524839602002874": 40, "5691003846597402": 40, "4629741018183848": 40, "aberr": [40, 53, 81, 106, 117, 125], "syst\u00e9mat": [40, 53], "9657797307374083": 40, "8005404539463572": 40, "2436614330765459": 40, "15328048902852542": 40, "027303437404047504": 40, "recommenc": [40, 74, 85, 107, 108, 109, 110, 125, 127, 156, 157], "minit": 40, "n_permut": 40, "bordr": 40, "1380905804644303": 40, "0971799688330344": 40, "096552604587197": 40, "0873102647994237": 40, "6066673059897301": 40, "29070487509552667": 40, "502": [40, 41, 221], "37": [41, 48, 49, 51, 73, 90, 91, 104, 110, 127, 131, 146, 158, 159, 160, 169, 172, 179, 185, 210, 211], "637": 41, "annex": [43, 214], "el\u00e9ment": [43, 47, 165, 167], "statiqu": [44, 197], "basemap": 44, "surcouch": 44, "anim": 44, "pygal": 44, "ipyleaflet": 44, "g\u00e9ograph": [44, 55, 91], "pyproj": 44, "fronti": [44, 111, 112, 117, 124], "fleuv": 44, "etat": [44, 53, 217], "unis": [44, 53], "d\u00e9part": [44, 49, 50, 55, 56, 75, 79, 80, 82, 86, 91, 153, 162, 168, 196, 204, 217], "difficult": [44, 73, 91, 179], "charg": [44, 52, 53, 62, 71, 178, 186, 200, 204, 211], "fou": [44, 50], "lisibl": [44, 49, 81, 128, 168, 188, 202, 204, 205, 210, 211, 212, 214, 215], "inlin": [44, 48, 49, 50, 51, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 91, 100, 101, 104, 107, 108, 109, 110, 111, 112, 124, 125, 134, 135, 137, 139, 143, 144, 153, 161, 175, 179, 182, 183, 185, 200], "ponteil": 44, "varredd": 44, "66145": 44, "77483": 44, "epci": 44, "cu": 44, "perpignan": 44, "m\u00e9diterran": 44, "pmcu": 44, "meau": 44, "200027183": 44, "247700628": 44, "pyren": 44, "oriental": 44, "sein": [44, 53, 65, 70, 80, 196, 204, 211, 215, 217], "marn": 44, "66": [44, 48, 73, 87, 116, 141, 172, 196], "77": [44, 73, 81, 91, 106, 108, 113], "occitan": 44, "\u00eele": 44, "76": [44, 73, 109, 139, 196, 200], "domain": [44, 53, 55, 57, 58, 73, 200], "tension": 44, "bt": 44, "gt": [44, 48, 49, 73, 79, 83, 90, 95, 96, 98, 99, 100, 101, 102, 104, 106, 107, 108, 125, 126, 127, 138, 141, 145, 146, 147, 158, 159, 160, 163, 168, 179, 188], "kva": 44, "lt": [44, 48, 49, 73, 74, 80, 81, 84, 91, 95, 96, 98, 99, 100, 101, 104, 107, 108, 125, 126, 127, 131, 138, 139, 141, 143, 144, 145, 146, 147, 158, 159, 160, 163, 168, 179, 188], "photovolta": 44, "73": [44, 48, 51, 73, 91, 113, 141, 179, 196, 210], "energ": 44, "mwh": 44, "10728": 44, "620366": 44, "41684": 44, "eolien": 44, "hydraul": 44, "bio": 44, "cog\u00e9ner": 44, "geo": [44, 65, 68], "6323626522": 44, "82631103755": 44, "49": [44, 48, 49, 51, 109, 113, 146, 149, 158, 159, 210], "0059497861": 44, "92725176893": 44, "826311": 44, "927252": 44, "lat": [44, 132], "632363": 44, "00595": 44, "anc\u00eatr": [44, 66, 196], "terr": [44, 179], "sph\u00e9riqu": 44, "localis": [44, 53, 66, 138], "wgs_84": 44, "inse": [44, 49], "epsg": 44, "2154": [44, 200], "proj": 44, "cr": 44, "ccr": 44, "cfeatur": 44, "add_subplot": [44, 48], "platecarre": 44, "set_extent": 44, "52": [44, 48, 49, 51, 109, 110, 113, 149, 211], "add_featur": 44, "ocean": 44, "coastlin": 44, "border": 44, "python3": [44, 64, 145, 146, 160, 178, 200, 204], "241": [44, 48, 104], "downloadwarning": 44, "downloading": 44, "naturalearth": 44, "amazonaw": 44, "10m_physical": 44, "ne_10m_ocean": 44, "warn": [44, 80, 202, 219], "ne_10m_coastlin": 44, "10m_cultural": 44, "ne_10m_admin_0_boundary_lines_land": 44, "with_scal": 44, "10m": 44, "50m": 44, "110m": 44, "river": 44, "50m_physical": 44, "ne_50m_ocean": 44, "ne_50m_coastlin": 44, "ne_50m_rivers_lake_centerlin": 44, "50m_cultural": 44, "ne_50m_admin_0_boundary_lines_land": 44, "from_cr": 44, "4326": 44, "latidud": 44, "6634541": 44, "621546051": 44, "1633374": 44, "3871915536": 44, "6723037": 44, "367738617": 44, "4228679": 44, "19768552": 44, "lamb_x": 44, "lamb_y": 44, "glob": [44, 138, 196, 199, 200, 210, 211, 212, 214, 219], "parse_option_pyproj": 44, "strip": [44, 65, 162, 178, 179, 212], "valueerror": [44, 48, 50, 76, 146, 152, 191, 193, 199, 200, 210, 211], "mycr": 44, "proj4_param": 44, "sup": [44, 81, 84, 128, 170, 175], "cliqu": [44, 204, 217], "lcc": 44, "lat_1": 44, "lat_2": 44, "lat_0": 44, "46": [44, 48, 49, 50, 51, 87, 104, 140, 146, 158, 159, 185, 196], "lon_0": 44, "700000": 44, "6600000": 44, "ellp": 44, "grs80": 44, "unit": [44, 49, 104, 179], "no_def": 44, "Ne": [44, 78, 87], "lambert93": 44, "proj4_list": 44, "crs_lambert93": 44, "36954": 44, "1181938": 44, "6133555": 44, "7233428": 44, "oubli": [44, 49, 79, 109, 110, 148, 158, 159, 178, 188, 189, 196, 210, 212, 214, 217], "authentifi": 44, "populair": [44, 58, 176, 177], "gpd": 44, "read_fil": [44, 184, 185], "get_path": 44, "naturalearth_cit": 44, "tmp": [44, 48, 51, 64, 80, 81, 145, 146, 147, 160], "ipykernel_25365": 44, "1282256058": 44, "futurewarning": 44, "deprecated": [44, 202], "removed": [44, 61, 73], "original": [44, 47, 51, 58, 66, 67, 91, 109, 110, 150, 200, 206, 219], "www": [44, 49, 51, 81, 106, 113], "naturalearthdat": 44, "cultural": 44, "vector": [44, 158, 179], "geometry": [44, 204], "vatican": 44, "city": 44, "45339": 44, "90328": 44, "marino": 44, "44177": 44, "93610": 44, "vaduz": 44, "51667": 44, "13372": 44, "lobamb": 44, "20000": [44, 95, 104], "46667": 44, "luxembourg": [44, 53, 66], "13000": 44, "61166": 44, "naturalearth_lowr": 44, "913829029": 44, "pop_est": 44, "continent": 44, "iso_a3": 44, "gdp_md_est": 44, "889953": 44, "oceani": 44, "fij": 44, "fji": 44, "5496": 44, "multipolygon": 44, "180": [44, 51, 81, 104, 145, 146], "00000": [44, 49], "06713": 44, "58005463": 44, "afric": 44, "tanzani": 44, "tza": 44, "63177": 44, "polygon": [44, 135], "90371": 44, "95000": 44, "07262": 44, "05982": 44, "603253": 44, "sahar": 44, "esh": 44, "907": [44, 48], "66559": 44, "65643": 44, "66512": 44, "58948": 44, "37589262": 44, "americ": 44, "canad": 44, "1736425": 44, "122": 44, "84000": 44, "9742": 44, "328239523": 44, "united": 44, "usa": [44, 49, 53, 66], "21433226": 44, "0000": [44, 49, 118], "set_aspect": 44, "whit": [44, 124, 146], "edgecolor": 44, "mark": 44, "markersiz": 44, "restreint": [44, 141], "m\u00e9tropol": [44, 179], "shapely": 44, "144373535": 44, "russi": 44, "rus": [44, 50], "1699876": 44, "67591": 44, "64149": 44, "68201": 44, "5347896": 44, "norway": 44, "nor": 44, "403336": 44, "39955": 44, "69": [44, 48, 49, 51, 73, 147, 196], "15692": 44, "59193": 44, "67059887": 44, "fra": [44, 179], "2715518": 44, "65823": 44, "20196": 44, "09928": 44, "10285453": 44, "sweden": 44, "swe": 44, "530883": 44, "46827": 44, "59": [44, 48, 49, 51, 91, 140, 171, 185, 210], "43239": 44, "30037": 44, "11793": 44, "9466856": 44, "belarus": 44, "blr": 44, "63080": 44, "22951": 44, "91834": 44, "37157": 44, "67009": 44, "lon": 44, "itertupl": [44, 125], "geodatafram": 44, "82631": 44, "63236": 44, "92725": 44, "21389": 44, "46046": 44, "97421": 44, "12047": 44, "08532": 44, "48": [44, 48, 49, 51, 52, 53, 91, 109, 113, 132, 140, 145, 146, 153, 158, 159, 185, 196], "61706": 44, "map_osm": 44, "85": [44, 73, 80, 110, 113, 117, 142, 179, 196], "add_child": [44, 187], "regularpolygonmark": 44, "popup": 44, "fill_color": 44, "132b5e": 44, "radius": [44, 132], "d\u00e9tail": [44, 58, 73, 77, 107, 108, 109, 110, 125, 138, 196, 204, 211], "img_til": 44, "osm": 44, "imagery": 44, "add_imag": 44, "plotly": 45, "gmap": 45, "bingmap": 45, "geopand": 45, "folium": 45, "openstreetmap": [45, 51], "incontourn": [46, 50, 51, 58, 211], "tant": [46, 49, 55, 56, 58, 65, 74, 80, 85, 107, 108, 132, 162, 187, 196, 210, 211, 212, 214, 217], "simplifient": [46, 58], "contingent": [46, 47, 123], "algebr": 47, "r\u00e9f\u00e9rent": [47, 55, 65, 196, 199, 210, 211, 212, 214, 217], "raccourc": [47, 56, 65, 150, 196, 211], "docstring": [47, 67, 206], "d\u00e9di": [48, 55, 70, 152], "aven": [48, 215], "deep": [48, 69, 146], "\u00e9merg": [48, 217], "offrant": 48, "vari": [48, 53, 58, 65, 84, 112, 115, 141, 162, 190, 196, 211, 212], "cpu": 48, "pytorch": 48, "\u00e9mergent": 48, "usag": [48, 49, 58, 65, 70, 73, 87, 129, 141, 151, 178, 179, 180, 196, 201, 205, 211, 212, 216, 217], "standardis": 48, "presqu": [48, 75, 91, 107, 124, 133, 155, 161, 162, 172, 204, 210, 212, 217], "convent": [48, 49, 50, 51, 58, 65, 77, 129, 132, 168, 178, 179, 188, 199, 201, 211], "etc": [48, 63, 73, 164, 214], "ndim": 48, "int64": [48, 49, 50, 51, 113, 117, 139, 146], "s\u00e9lection": [48, 49, 51, 53, 73, 204, 212], "automat": [48, 49, 54, 65, 109, 149, 178, 179, 184, 196, 204, 211, 212], "allez": [48, 84], "jet": [48, 49, 76, 91], "bb": [48, 76], "assign": [48, 49, 105, 214], "cast": 48, "casting": 48, "aa": [48, 76, 179, 187, 191, 205, 219], "dimmensionnel": 48, "aplat": 48, "1d": 48, "transposed": 48, "flatten": [48, 146], "flattened": 48, "multidimensionnel": [48, 105], "mask": [48, 49], "extrair": [48, 49, 56, 79, 83, 219], "\u00e9lement": [48, 49, 73, 128, 139], "ar": [48, 150, 163, 179], "arang": [48, 73, 74, 80, 84, 109, 110, 115, 117, 135, 146], "idx": 48, "idx_bool": 48, "did": [48, 196], "match": [48, 178, 196, 200, 210, 219], "indexed": 48, "along": 48, "corresponding": [48, 61], "essai": [48, 50, 56, 58, 65, 70, 81, 82, 91, 106, 117, 131, 140, 141, 146, 188, 199, 200, 204, 208, 211, 212, 217], "list_python": 48, "integer": [48, 156, 157], "slic": [48, 51], "cr\u00e9on": 48, "step": [48, 104, 149], "flott": 48, "shallow": 48, "fourn": [48, 49, 53, 65, 91, 207, 214], "pi": [48, 49, 65, 84, 100, 101, 102, 111, 112, 116, 141, 147, 196, 214], "14159265": 48, "indirect": [48, 196, 199], "linspac": 48, "subsidiair": 48, "quoi": [48, 49, 53, 58, 65, 73, 77, 96, 105, 130, 141, 154, 168, 172, 173, 186, 218], "71828183": 48, "silenci": [48, 57, 202], "vicieux": 48, "r\u00e2l": 48, "habitu": [48, 53], "naturel": [48, 150], "coh\u00e9rent": [48, 65], "nuit": [48, 53, 70, 179], "notanumb": 48, "slice_of_d": 48, "nslice_of_d": 48, "nd": 48, "fancy_indexed_subarray": 48, "nfancy_indexed_subarray": 48, "reshap": [48, 50, 105, 106, 117, 144, 146, 147, 151], "fortran": [48, 50, 58, 134], "column": [48, 49, 51, 63, 81, 82, 105, 109, 110, 113, 124, 137, 138, 144, 149, 153, 158, 159, 179, 204], "connaissent": [48, 179], "matlab": 48, "jok": 48, "infer": [48, 81, 169], "zeros_lik": 48, "ones_lik": 48, "concatenat": [48, 49, 73], "gmat": 48, "axis": [48, 49, 50, 51, 52, 80, 81, 82, 84, 85, 89, 106, 109, 110, 117, 124, 125, 130, 151, 190], "hstack": [48, 50, 105, 161], "8x8": [48, 152], "til": [48, 103], "extract": [48, 188], "ccccc": 48, "ccc": [48, 58], "routin": [48, 214], "d\u00e9clar": [48, 49, 179, 211, 217], "allon": [48, 56, 108, 179, 204], "arithmet": 48, "effectuent": [48, 65, 210], "adopt": 48, "36787944": 48, "3890561": 48, "08553692": 48, "59815003": 48, "provoqu": [48, 49, 53, 60, 65, 70, 96, 98, 99, 172, 180, 200, 202, 210, 211, 214], "ipykernel_4567": 48, "2601360242": 48, "runtimewarning": 48, "divid": [48, 166, 167], "encountered": 48, "33333333": 48, "operand": [48, 65, 96, 106, 196], "togeth": [48, 166, 167], "sep": [48, 49, 51, 65, 81, 113, 162, 163, 211, 214, 219], "dupliqu": [48, 55, 138, 204], "newax": [48, 146], "38": [48, 49, 51, 98, 105, 110, 118, 146, 158, 159, 172, 179], "existent": [48, 65, 70, 73, 80, 129, 167, 172, 179, 196, 210, 211, 212], "unes": [48, 55, 65, 78, 81, 99, 111, 112, 196, 199, 204, 210, 211], "op\u00e8rent": 48, "\u00e9ventail": 48, "qr": 48, "svd": 48, "commen\u00e7on": 48, "triangulair": [48, 80, 193], "tril": 48, "whatsnew": 48, "465": 48, "dedicated": 48, "infix": 48, "operator": [48, 49, 196, 210], "linalg": [48, 74, 105, 106, 154, 155, 159], "inv_a": 48, "inv": [48, 105, 106, 154, 155], "equat": 48, "eig": [48, 74, 154, 155, 159], "eigresult": 48, "eigenvalu": 48, "eigenvector": 48, "00000000e": [48, 106, 155], "93038066e": 48, "22044605e": 48, "eigval": 48, "sp\u00e9cialis": [48, 53, 212], "traver": [48, 196, 204, 210, 212], "pens": [48, 51, 58, 70, 73, 97, 148, 158, 172, 178, 179, 184, 196, 211, 219], "virgul": [48, 65, 211, 212], "indiquent": 48, "symbol": [48, 65, 96, 106, 172, 178, 179, 185, 196, 210, 211, 212, 214, 217, 219], "81": [48, 73, 110, 200], "96": [48, 50, 73, 113, 139, 153, 160, 172, 175], "102": [48, 50, 106, 145, 146, 164], "150": [48, 81, 84, 107, 111, 112, 113, 139, 141, 143, 196], "priorit": [48, 65, 210, 211], "l\u00e9ger": [48, 49, 75, 76, 91], "53": [48, 49, 51, 91, 101, 135, 140, 153, 160, 185, 196, 210], "rank": [48, 141], "matrix_rank": 48, "000000000000016": 48, "77475828e": 48, "10542736e": 48, "88178420e": [48, 155], "66453526e": 48, "77635684e": [48, 105, 155], "apport": [48, 104, 197, 217], "natif": 48, "referent": [48, 134, 196, 204, 214], "randomnumpy": 48, "4x3": 48, "gaussien": [48, 154, 155], "randn": [48, 50, 82, 89, 114, 143, 217], "normal": [48, 53, 58, 109, 110, 111, 112, 141, 154, 155, 175, 196, 198, 204, 214, 217], "78986084": 48, "56625033": 48, "50288104": 48, "17435748": 48, "99013306": 48, "07810937": 48, "5082934": 48, "08166826": 48, "04530213": 48, "01406781": 48, "38415054": 48, "05907499": 48, "convaincr": [48, 73, 96, 140, 179, 187, 217], "pur": [48, 134], "1e6": [48, 117, 196], "normalvariat": 48, "691": 48, "ms": [48, 49, 73, 79, 87, 89, 104, 107, 108, 110, 117, 138, 141, 143, 153, 160, 169, 175, 187], "std": [48, 49, 50, 79, 87, 89, 107, 108, 110, 117, 135, 141, 142, 143, 153, 160, 169, 175, 185, 187, 217], "\u00e9quiprob": 48, "racin": [48, 80, 127, 186, 187, 188, 210, 211, 214], "instant": [48, 53, 73, 81, 91, 200, 211], "amplitud": 48, "atteint": [48, 53, 73], "combien": [48, 49, 51, 75, 96, 104, 111, 112, 115, 152, 172, 179], "argmax": [48, 50, 160], "cumsum": [48, 49, 51, 134], "optimiz": [48, 53, 107, 108, 168, 190], "panel": [48, 49], "ad\u00e9quat": [48, 50, 53, 210, 212], "viv": [48, 179], "tutoriel": [48, 49], "mathematical": 48, "minim": 48, "ga\u00ebl": 48, "varoqual": 48, "r\u00e9cent": [48, 53, 179, 204, 210, 214, 216, 217], "solver": 48, "normalis": [48, 125], "minimis": [48, 53, 66, 76, 91, 105, 106, 115, 158, 162, 165, 196], "minimiz": [48, 168], "minimize_scalar": 48, "obtiendr": 48, "optimizeresult": 48, "d\u00e9velopp": [48, 53, 56, 77, 126, 202, 204, 211, 214, 215, 216], "toolbox": 48, "clair": [48, 58, 65, 89, 91, 97], "rafraich": 48, "bowl_peak": 48, "57": [48, 49, 51, 91, 109, 117, 142, 171, 185, 196, 217], "galler": [48, 49, 68, 221], "contour3d_demo3": 48, "58": [48, 49, 91, 106, 107, 131, 140, 149, 185, 196, 217], "mpl_toolkit": 48, "mplot3d": 48, "axes3d": 48, "cm": [48, 58, 138], "colormap": [48, 204], "min_val": 48, "max_val": 48, "x_ax": 48, "y_ax": 48, "meshgrid": 48, "xy": [48, 73, 105, 106, 107, 108, 125], "get_test_dat": 48, "plot_surfac": 48, "rstrid": 48, "cstrid": 48, "cset": 48, "contour": [48, 51], "zdir": 48, "offset": 48, "coolwarm": 48, "set_xlabel": [48, 49, 124, 135, 161, 185], "set_xlim": [48, 100, 101, 111, 112, 116], "set_ylabel": [48, 124, 135, 161, 185], "set_ylim": [48, 100, 101, 111, 112, 116, 125], "set_zlabel": 48, "set_zlim": 48, "fun": 48, "cg": 48, "bfg": 48, "powel": 48, "cobyl": 48, "optim_r": 48, "nmethod": 48, "terminated": 48, "successfully": 48, "status": [48, 124], "4052368582391728": 48, "690e": 48, "446e": 48, "nit": 48, "nfev": 48, "final_simplex": 48, "691e": 48, "814e": 48, "011e": 48, "052e": 48, "40523687026669025": 48, "670e": 48, "jac": 48, "863e": 48, "000e": 48, "njev": 48, "40523687025688715": 48, "451e": 48, "083e": 48, "hess_inv": 48, "287e": 48, "836e": 48, "154e": 48, "direc": 48, "854e": 48, "4052368678399868": 48, "892e": 48, "maxcv": 48, "norm_of_projected_gradient_": 48, "_pgtol": 48, "4052368702662145": 48, "828e": 48, "360e": 48, "2x2": 48, "lbfgsinvhessproduct": 48, "4052": 48, "669": 48, "gradient": [48, 53, 58], "optimum": 48, "reposent": 48, "relanc": [48, 55, 90, 92, 179], "anneal": 48, "m\u00e9taheurist": 48, "61": [48, 49, 51, 73, 91, 108, 113, 117, 142, 185, 196, 210], "797": 48, "\u00b5": [48, 49, 50, 79, 87, 89, 107, 108, 110, 117, 135, 141, 142, 143, 153, 175, 185], "91": [48, 73, 142, 160], "87": [48, 73, 113, 143, 149, 153, 179], "771": 48, "369": 48, "616": [48, 73], "vraissembl": 48, "rescaled": 48, "62": [48, 49, 51, 106, 113, 135, 149, 170, 185], "shifted_scaled_bowlpeak": 48, "05000000677266441": 48, "500e": 48, "229e": 48, "918e": 48, "635e": 48, "407e": 48, "579e": 48, "174e": 48, "72": [48, 51, 73, 89, 131, 146, 196], "hessien": 48, "x_1": [48, 58, 66, 106, 158, 159, 166, 167, 210], "x_2": [48, 158, 159, 166, 167], "epsilon": [48, 53, 55, 58, 105, 106, 109, 110], "mathcal": [48, 73, 156, 157], "moindr": [48, 53, 55, 104, 132, 158, 159, 204], "ordinair": [48, 65, 217], "mco": 48, "hat": [48, 105, 214], "densit": [48, 73, 125], "mu": [48, 81, 82, 113], "sigm": [48, 53, 66, 126, 128, 162, 163, 164, 165], "overlin": [48, 53], "equiv": [48, 56], "exercis": [48, 62], "auteur": [48, 70, 99, 212, 219], "partiel": 48, "63": [48, 49, 53, 66, 73, 107, 131, 149, 178, 210, 219], "exo1": 48, "chess": 48, "chess2": 48, "exo1b": 48, "idx_row": 48, "idx_col": 48, "wrong": 48, "also": [48, 61, 124, 204], "broadcasted": 48, "ix_": 48, "65": [48, 73, 92, 106, 113, 131, 149, 153, 172, 173, 196], "exo1c": 48, "is_prim": [48, 217], "71": [48, 51, 73, 102, 113, 117, 131, 146, 160, 196, 210], "79": [48, 51, 73, 110, 113, 117, 143, 153, 210], "83": [48, 73, 109, 110, 149, 160, 210], "89": [48, 51, 73, 75, 91, 113, 115, 153, 160, 196, 210], "97": [48, 51, 73, 87, 91, 92, 97, 113, 114, 139, 142, 172, 186, 187, 210], "103": 48, "107": [48, 162], "109": [48, 50, 51, 91, 155], "113": [48, 91, 106, 145, 147], "127": 48, "131": [48, 147], "137": 48, "139": [48, 134, 135, 145, 146, 160], "149": [48, 138], "151": [48, 113], "157": 48, "163": [48, 51, 135], "167": 48, "173": [48, 104, 106], "179": [48, 104], "181": [48, 160], "191": [48, 104], "193": [48, 49, 104], "197": [48, 81, 104, 135], "199": [48, 51, 104, 134], "211": 48, "223": 48, "227": [48, 88, 91, 104], "229": [48, 104], "233": [48, 75, 104, 180, 200], "239": [48, 104, 160, 204], "251": [48, 49, 87, 139], "257": [48, 175], "263": 48, "269": [48, 175], "271": 48, "277": 48, "281": 48, "283": 48, "293": [48, 200], "307": 48, "311": 48, "313": [48, 200], "317": [48, 95], "331": 48, "337": 48, "347": [48, 49], "349": 48, "353": 48, "359": [48, 49], "367": 48, "373": [48, 51], "379": 48, "383": 48, "389": 48, "397": 48, "401": 48, "409": 48, "419": 48, "421": 48, "431": [48, 200], "433": 48, "439": 48, "443": [48, 117], "449": 48, "457": [48, 146], "461": [48, 145], "463": 48, "467": 48, "479": 48, "487": 48, "491": 48, "499": [48, 109, 110], "503": [48, 107], "509": [48, 87, 160], "521": 48, "523": 48, "541": 48, "547": 48, "557": 48, "563": 48, "569": 48, "571": 48, "577": [48, 155], "587": [48, 212], "593": 48, "599": 48, "601": 48, "607": 48, "613": 48, "617": 48, "619": 48, "631": 48, "641": 48, "643": 48, "647": 48, "653": 48, "659": 48, "661": 48, "673": 48, "677": 48, "683": 48, "701": [48, 51, 145], "709": 48, "719": [48, 51], "727": 48, "733": 48, "739": [48, 51, 145], "743": 48, "751": 48, "757": 48, "761": [48, 51], "769": [48, 51], "773": 48, "787": [48, 108], "809": 48, "811": 48, "821": 48, "823": 48, "827": 48, "829": 48, "839": 48, "853": 48, "857": 48, "859": 48, "863": 48, "877": [48, 145], "881": 48, "883": [48, 81], "929": 48, "937": 48, "941": [48, 147], "967": 48, "barr": [48, 53, 66, 81, 90, 91, 98, 139], "961": 48, "n_walk": 48, "n_step": 48, "walk": [48, 83, 212, 219], "few": 48, "evolv": 48, "rms_posit": 48, "highest": 48, "lowest": [48, 166, 167], "wand": 48, "furth": [48, 138, 204], "hits_the_bound": 48, "2f": [48, 65, 73, 79, 88, 91, 211], "among": 48, "beyond": 48, "hit": 48, "first_hit": 48, "crossing": 48, "d\u00e9riv": [48, 53, 81, 104, 105, 106, 175, 196, 217], "derive": 48, "2n": [48, 56, 86, 95, 166, 167, 175], "x1_x2_ep": 48, "beta_hat": 48, "coef": [48, 144, 169, 196], "9970383": 48, "99521061": 48, "99634679": 48, "log_likelihood": 48, "sigma_squar": 48, "neg_log_likelihood_vectoriel": 48, "theta0": 48, "8178268765388288": 48, "984e": 48, "395e": 48, "985e": 48, "818e": 48, "ind\u00e9pend": [48, 53, 60, 65, 66, 73, 80, 84, 136, 151, 154, 155, 210, 215, 217], "9844993574269878": 48, "952430926826533": 48, "recet": 49, "cookbook": 49, "fen\u00eatr": [49, 164, 203, 210, 211, 217], "extern": [49, 178, 213], "spyd": 49, "sql": [49, 51], "million": [49, 87], "decr": [49, 50, 53, 56, 58, 74, 76, 91, 105, 106, 148, 196, 204, 208, 210, 211, 214, 217, 219], "gros": [49, 53, 58, 81, 138, 212], "mo": [49, 70, 102, 179, 210], "patient": 49, "astuci": 49, "sqllit": 49, "streaming": [49, 119], "ipython": [49, 78, 79, 83, 90, 91, 95, 96, 98, 99, 104, 136, 145, 146, 148, 158, 159, 160, 163, 165, 174, 175, 176, 177, 178, 182, 183, 186, 187, 189], "td2df": 49, "pr\u00e9vu": [49, 57, 123, 196, 199, 204, 212], "bloc": [49, 180, 181, 198, 204, 210], "uni": [49, 179], "dimensionnel": 49, "hello": [49, 65], "missing1": 49, "missing2": 49, "city2cp_dict": 49, "paris14": 49, "75014": 49, "paris18": 49, "75018": 49, "malakoff": 49, "92240": 49, "6300": 49, "lien": [49, 58, 62, 80, 81, 124, 178, 196, 204, 212], "isnull": [49, 109], "notnull": 49, "cities_list": 49, "paris12": 49, "vanv": 49, "cities2": 49, "\u00e9ventuel": [49, 53, 114, 179], "75012": 49, "92": [49, 73, 91, 142, 153], "align": [49, 138, 181, 204, 210, 211], "paris13": 49, "184480": 49, "12600": 49, "150028": 49, "150036": 49, "additionnent": 49, "nomm": [49, 51, 58, 65, 70, 80, 180, 187, 188, 196, 210, 211, 217], "postal": 49, "collect": [49, 66, 69, 80, 81, 133, 134, 142, 149, 150, 178, 185, 196, 205, 211], "apparent": [49, 153, 188, 204, 211], "prix": [49, 53, 66, 104, 130], "220": [49, 52, 53, 89, 104, 149], "devis": [49, 53], "euros": [49, 53, 66, 104], "221": [49, 50, 135, 175], "aujourd": [49, 53, 57, 58, 60, 65, 70, 73, 88, 178, 214], "hui": [49, 53, 57, 58, 60, 65, 70, 73, 88, 178, 214], "ger": [49, 53, 58, 90, 103, 147, 199, 204, 208, 211, 212, 214, 217, 219], "section": [49, 54, 63, 196, 199, 200, 204, 210, 212, 217], "briev": 49, "reprend": [49, 53, 56, 76, 83, 85, 128, 145, 170, 187, 196, 199, 204, 210, 211], "obligatoir": [49, 65, 70, 170, 188, 196, 198, 210], "accent": [49, 104, 140, 162, 199, 211], "xlsx": [49, 138], "special": 49, "bash": [49, 64], "command": [49, 61, 64, 70, 138, 152, 162, 186, 204, 210, 211, 212, 217], "caracter": [49, 51, 58, 67, 70, 76, 77, 90, 92, 94, 95, 96, 98, 104, 126, 140, 141, 162, 168, 172, 178, 179, 180, 181, 184, 185, 187, 188, 194, 196, 199, 200, 204, 209, 210, 212, 214, 215, 217], "tail": [49, 51, 64, 81, 109, 110, 113, 138], "df_marathon": 49, "marathon": 49, "anne": [49, 179], "2011": [49, 70], "7589": 49, "2010": [49, 179, 219], "7601": 49, "2009": [49, 70, 166, 167, 179], "7547": 49, "2008": [49, 164, 165], "7600": 49, "2007": 49, "7637": 49, "000000": [49, 51, 124, 196, 210], "1989": 49, "754875": 49, "7933": 49, "660167": 49, "028545": 49, "385": 49, "289830": 49, "1947": 49, "7382": 49, "1981": [49, 179], "7698": 49, "1991": 49, "7820": 49, "2001": [49, 53, 143, 179], "8046": 49, "500000": [49, 196, 210, 211], "10028": 49, "iloc": [49, 51, 81, 109, 113], "set_index": [49, 51, 81, 84, 109, 110, 137, 143], "dfi": [49, 51], "r\u00e9fer": [49, 65], "dupr": [49, 63, 69, 71, 210, 211, 215], "arrond": [49, 96, 210, 211], "cl\u00e9menc": 49, "reset_index": [49, 51, 113, 125], "drop": [49, 51, 81, 84, 104, 113, 124, 125], "inplac": 49, "dfi2": 49, "plag": 49, "urllib": [49, 92, 141, 149, 179, 214], "2006": 49, "7683": 49, "2005": [49, 53], "renomm": [49, 51, 198, 212], "year": [49, 53], "donnees_enquete_2003_televis": 49, "poidslog": 49, "individuel": 49, "relat": [49, 51, 53, 73, 74, 81, 105, 106, 113, 175, 204, 211, 212, 217], "poidsf": 49, "clt1freq": 49, "t\u00e9l\u00e9vis": 49, "clt2freq": 49, "mois": [49, 53, 70, 81, 104, 207, 219], "renseign": [49, 65, 109, 110, 165, 196, 211, 217], "sauv": [49, 179, 212], "isnan": [49, 50, 109, 110], "apply": [49, 153], "filln": [49, 51], "n_1": 49, "n_2": 49, "sas": 49, "boston": 49, "fukuok": 49, "chicago": 49, "stockolm": 49, "york": [49, 53, 185], "london": 49, "berlin": 49, "amsterdam": 49, "1948": 49, "1949": [49, 141], "1950": 49, "1951": 49, "1952": 49, "1953": 49, "1954": 49, "1955": 49, "1956": 49, "chaining": 49, "indexing": [49, 50, 51, 95], "selecting": 49, "subset": [49, 56, 156, 157], "1971": [49, 219], "112": 49, "7971": 49, "204": [49, 104], "8574": 49, "285": 49, "8325": 49, "query": 49, "concat": [49, 51, 81], "concat_lign": 49, "718": 49, "concat_col": 49, "sort_valu": [49, 109, 110, 125, 137], "ascending": 49, "7418": 49, "325": [49, 200], "202": [49, 104], "7480": 49, "276": 49, "8047": 49, "caract\u00e9rist": [49, 53, 70, 145, 204], "top": [49, 61, 64, 119, 166, 167, 204], "customis": 49, "gr": [49, 90, 113, 127, 146, 219], "generic": 49, "dataframegroupby": 49, "0x7fd034df94b0": 49, "sort_index": 49, "37916": 49, "68673": 49, "7583": 49, "200000": [49, 81, 187], "7630": 49, "333333": 49, "7652": 49, "555556": 49, "mention": [49, 196, 199, 200, 204, 211], "aggreg": [49, 51, 81, 134], "max_enti": 49, "agg": [49, 134], "8134": 49, "7968": 49, "nsmallest": 49, "171": [49, 104, 160], "170": [49, 104, 142, 196], "324": 49, "357": 49, "74": [49, 73, 91, 113, 135, 169], "234": [49, 104, 200, 211], "222": [49, 104, 105], "248": [49, 113], "7544": 49, "7578": 49, "7439": 49, "7552": 49, "7541": 49, "1999": 49, "7542": 49, "7518": 49, "7570": 49, "7510": 49, "7663": 49, "7681": 49, "1983": 49, "7897": 49, "1986": [49, 219], "7953": 49, "inner": 49, "merging": 49, "joining": 49, "jointur": 49, "patat": 49, "correspondent": [49, 53, 168, 175, 211, 219], "germany": 49, "uk": 49, "dfavecpay": 49, "left_on": [49, 51, 138], "right_on": [49, 51, 138], "192": [49, 91], "joindr": 49, "c_1": [49, 55, 156, 157], "c_2": 49, "c_3": 49, "respect": [49, 73, 109, 110, 143, 170, 179, 196, 210, 211], "a_i": [49, 134, 164], "b_i": [49, 164, 190], "c_i": [49, 55, 80], "contiendr": [49, 65, 162, 196, 199, 211, 212, 214], "a1": [49, 73, 116, 169, 196], "b1": [49, 73, 169, 179, 204], "c1": [49, 76, 77, 102, 169, 191, 196, 211], "b2": [49, 73, 169, 204], "c2": [49, 76, 77, 102, 112, 169, 191, 196, 211], "a2": [49, 73, 116, 169, 196], "c4": [49, 77, 179], "b3": [49, 169, 204], "c5": [49, 179], "pivot_t": [49, 51], "reshaping": 49, "piv": [49, 144], "1967": 49, "1968": [49, 91], "1969": 49, "1987": 49, "1988": 49, "syntactic": 49, "sugar": 49, "2em": [49, 95], "four": 49, "riemann": 49, "3328334999999999": 49, "na\u00efv": [49, 174, 178], "mn": [49, 85, 140], "\u00e9vident": [49, 53, 55, 56, 66, 79, 84, 89, 91, 97, 109, 143, 145, 184, 185, 196, 204, 210, 212, 214, 219], "klib": 49, "appui": [49, 53, 60, 65, 180, 202, 204], "magic": 49, "cellul": [49, 50, 164, 165, 178, 188], "big_df": 49, "cle1": [49, 65, 95, 211], "cle2": [49, 65, 95, 211], "784": 49, "310": 49, "gain": [49, 53, 56, 66, 117, 118, 131, 194, 214], "compliqu": [49, 53, 57, 58, 78, 81, 84, 199, 215, 217, 219], "aaa": [49, 76, 90, 98, 187, 219], "mm": [49, 53, 219], "jj": [49, 219], "hh": 49, "ss": 49, "timedelt": [49, 81, 207], "recr\u00e9": [49, 91, 210, 211, 214], "1900": 49, "total_second": 49, "naissanc": [49, 83, 140, 141, 207, 219], "d\u00e9ces": [49, 51, 81], "2012": [49, 53, 93], "zipfil": [49, 138, 212, 214], "download_and_sav": 49, "root_url": 49, "respons": [49, 53, 149, 179], "urlopen": [49, 92, 141, 149, 179], "timeouterror": 49, "urlerror": 49, "badstatuslin": 49, "teachdat": 49, "naissance_deces_mariag": 49, "wb": [49, 149, 179, 212], "outfil": 49, "extractall": 49, "etatcivil2012_mar2012_dbas": 49, "etatcivil2012_nais2012_dbas": 49, "etatcivil2012_dec2012_dbas": 49, "2407910": 49, "dbfread": 49, "dbf": 49, "dbase2df": 49, "dbase_filenam": 49, "cp437": 49, "df_civil": 49, "mar2012": 49, "utf8": [49, 65, 179], "modulenotfounderror": [49, 163], "named": [49, 163, 204], "sp\u00e9cial": [49, 50, 53, 70, 128, 211, 212, 219], "accentu": [49, 70, 179, 209], "r\u00e9pandu": [49, 53, 65, 141, 178, 196, 210], "lit": [49, 65, 70, 78, 83, 126, 141, 212, 217], "vardf": 49, "varlist_mariag": 49, "libel": 49, "amar": 49, "char": [49, 137, 191, 204], "anaisf": 49, "\u00e9pous": 49, "anaish": 49, "\u00e9poux": 49, "depdom": 49, "domicil": [49, 113], "depmar": 49, "depnaisf": 49, "depnaish": 49, "etamatf": 49, "matrimonial": 49, "ant\u00e9rieur": 49, "etamath": 49, "indnatf": 49, "indnath": 49, "jsemain": 49, "mmar": 49, "nbenfcom": 49, "enfant": [49, 128, 179], "tucom": 49, "tranch": 49, "tudom": 49, "urbain": 49, "mar": [49, 53, 66, 93], "femm": [49, 158, 159, 178, 179], "etant": [49, 53, 73, 196, 199, 211, 214], "heatmap": 49, "visualiz": 49, "titr": [49, 70, 73, 81, 138, 179, 204, 217, 219], "grill": [49, 50, 103, 176, 204], "grid": 49, "superpos": [49, 81], "as_index": 49, "fontsiz": 49, "set_visibl": [49, 149], "l\u00e9gend": [49, 204, 217], "requ\u00eat": [49, 65, 105, 212], "excelwrit": 49, "existing": [49, 64], "workbook": 49, "df1000": 49, "ton_example100": 49, "clos": [49, 65, 178, 199, 200, 212, 219], "poidlog": 49, "unnamed": 49, "889422": 49, "4766": 49, "865201": 49, "310209": 49, "12381": 49, "589746": 49, "740070": 49, "14685": 49, "431344": 49, "775545": 49, "9516": 49, "049939": 49, "732512": 49, "3925": 49, "907588": 49, "8403": 49, "7386": 49, "8397": 49, "502091": 49, "2690": 49, "961176": 49, "8398": 49, "306852": 49, "1644": 49, "574141": 49, "8399": 49, "501181": 49, "13405": 49, "104689": 49, "8400": 49, "382758": 49, "7410": 49, "905653": 49, "8401": 49, "343340": 49, "1840": 49, "132652": 49, "obtenus": [49, 53, 56, 91, 185, 187], "select": [49, 64, 204], "echantillon": 49, "830": 49, "7883": 49, "371429": 49, "7922": 49, "315789": 49, "7891": 49, "061224": 49, "7815": 49, "909091": 49, "8075": 49, "187500": 49, "secondes_x": 49, "secondes_y": 49, "7937": 49, "028571": 49, "7466": 49, "8053": 49, "7871": 49, "7599": 49, "7661": 49, "7744": 49, "8456": 49, "7672": 49, "7665": 49, "7585": 49, "7515": 49, "7723": 49, "8163": 49, "7568": 49, "7722": 49, "7755": 49, "7508": 49, "7704": 49, "7519": 49, "7694": 49, "pivmean": 49, "7695": 49, "161290": 49, "7928": 49, "560976": 49, "8133": 49, "393939": 49, "1612903225805": 49, "909090909091": 49, "371428571429": 49, "061224489796": 49, "315789473684": 49, "5609756097565": 49, "028571428571": 49, "1875": 49, "393939393939": 49, "courus": 49, "16129": 49, "246123": 49, "1982": 49, "1984": 49, "1992": 49, "1985": 49, "84": [49, 51, 73, 113, 161, 179, 196], "1963": 49, "ageh": 49, "agef": 49, "scatt": [49, 51, 111, 112, 125, 131, 158, 159, 182, 183, 185], "hexbin": 49, "differencehf": 49, "dissem": 49, "repsem": 49, "secondary_y": 49, "fonctionnal": [50, 178, 196, 202, 204, 211, 212, 214, 219], "basiqu": 50, "blas": 50, "assembleur": 50, "peaufin": 50, "gr\u00e9": 50, "mat\u00e9riel": 50, "r\u00e9ag": [50, 53, 66, 204, 217], "integ": 50, "matint": 50, "540": 50, "ns": [50, 51, 109, 110, 135, 141, 153, 175, 185], "matintf": 50, "549": 50, "1005": 50, "1006": 50, "1007": 50, "1009": 50, "106": [50, 81], "95": [50, 58, 73, 106, 113, 116, 139, 142, 175], "108": 50, "multipli": [50, 53, 55, 87, 91, 207, 211], "valent": [50, 118], "rand": [50, 74, 81, 85, 106, 113, 117, 139, 144, 161], "squeez": 50, "expend_dim": 50, "argmin": [50, 85, 110, 117], "prod": [50, 146], "commm": 50, "chisquar": 50, "p_": [50, 55], "o_": 50, "ij": [50, 52, 53, 74, 80, 151, 158, 159], "histogram": [50, 153, 184, 185], "empir": [50, 53, 66], "plein": [50, 57, 81, 82, 83, 87, 90, 114, 127, 140, 153, 168, 179, 204, 212, 217], "r\u00e9flech": [50, 70, 179], "csr_matrix": [50, 161], "re\u00e7oit": [50, 53, 66, 70, 172, 196, 210, 211, 217], "t\u00e9l\u00e9phon": [50, 57, 212], "portabl": [50, 214], "contact": 50, "chi_squar": 50, "pis": [50, 141], "keepdim": [50, 52], "pj": 50, "pispj": 50, "chi": [50, 123], "5798254016266716": 50, "98556467": 50, "47377301": 50, "77148185": 50, "26135908": 50, "27373018": 50, "0240458": 50, "55360714": 50, "3575369": 50, "71740732": 50, "3260206": 50, "876020129318981": 50, "plusieurs_tirag": 50, "99594032": 50, "67914189": 50, "98105965": 50, "93181536": 50, "86827764": 50, "5000": [50, 73, 92, 143, 145, 161], "407": [50, 185], "785": 50, "1273": 50, "2135": 50, "437878": 50, "49408914": 50, "55030028": 50, "60651142": 50, "66272256": 50, "7189337": 50, "77514485": 50, "83135599": 50, "88756713": 50, "94377827": 50, "99998941": 50, "tient": [50, 51, 53, 81, 102, 107, 109, 110, 113, 141, 196, 204, 210], "sauf": [50, 58, 65, 91, 164, 175, 196, 214, 217, 219], "gross": 50, "creus": [50, 51, 109, 110, 119], "spars": [50, 61, 87], "concret": [50, 58, 196, 199, 211, 217], "ide": 50, "1000000": [50, 133, 189, 196, 214], "setdiag": 50, "python395_x64": 50, "_index": 50, "125": [50, 175, 196], "sparseefficiencywarning": 50, "changing": 50, "sparsity": 50, "expens": 50, "lil_matrix": 50, "_set_arrayxarray": 50, "territoir": 50, "export": [51, 214], "col1": 51, "col2": 51, "schtroumph": 51, "schtroumphet": 51, "offre": [51, 53, 179, 196, 210, 211], "impress": [51, 178], "souven": [51, 59, 90, 108, 179, 210], "particular": [51, 66, 71, 166, 167, 196, 211, 212], "potentiel": [51, 84, 107], "sup055": 51, "notat": [51, 52, 56, 58, 65, 86, 114, 151, 181, 210], "df1": 51, "col3": 51, "ipykernel_5653": 51, "164517544": 51, "settingwithcopywarning": 51, "trying": 51, "row_index": 51, "col_index": 51, "instead": 51, "caveat": 51, "user_guid": 51, "returning": 51, "view": [51, 138], "avert": [51, 211], "stipul": [51, 104, 204, 214], "dispara\u00eetr": [51, 150, 202, 204], "cr\u00e9ent": [51, 204], "congestion": 51, "utilitair": 51, "isna": [51, 81], "to_datetim": [51, 81, 113], "isin": [51, 81], "filt": [51, 65, 145, 212], "quantil": [51, 106, 107, 117], "hospitali": [51, 113], "\u00e9pidem": [51, 74, 81, 82, 113], "gouv": [51, 81, 82, 113], "63352e38": [51, 113], "d353": [51, 113], "4b54": [51, 113], "bfd1": [51, 113], "f1b3ee1cabd7": [51, 113], "08c18e08": 51, "6780": 51, "452d": 51, "9b8c": 51, "ae244ad529b3": 51, "reg": [51, 90, 125, 179, 210], "cl_age90": 51, "hosp": [51, 113], "hospconv": 51, "ssr_usld": 51, "rad": [51, 113], "dc": [51, 113], "219577": 51, "94": [51, 73, 81, 113, 115, 131], "387": [51, 81], "219578": 51, "536": 51, "219579": 51, "129": [51, 134], "219580": 51, "888": [51, 204], "219581": 51, "388": 51, "121": [51, 145], "datetime64": 51, "agg_par_jour": 51, "26110": 51, "1452": 51, "14586": 51, "9311": 51, "1717663": 51, "271176": 51, "26239": 51, "1435": 51, "14707": 51, "9336": 51, "1718630": 51, "271254": 51, "26255": 51, "1465": 51, "14704": 51, "9323": 51, "763": 51, "1719634": 51, "271322": 51, "26253": 51, "1460": 51, "14680": 51, "9344": 51, "1720370": 51, "271394": 51, "26174": 51, "1413": 51, "14658": 51, "9354": 51, "749": 51, "1721380": 51, "271456": 51, "evolu": [51, 81, 109, 110, 124], "hospitalis": [51, 81], "\u00e9chel": [51, 81, 119], "logarithm": [51, 53, 58, 81, 95, 124, 148, 153, 172, 187, 199], "logy": [51, 81, 84], "covid49": 51, "agg_par_jour49": 51, "372": [51, 143], "57846": 51, "1554": 51, "377": [51, 75], "184": [51, 150], "57859": 51, "374": [51, 127], "177": [51, 104, 134, 147], "57877": 51, "375": 51, "175": 51, "57889": 51, "57900": 51, "nag": 51, "736": [51, 113], "rolling": [51, 81], "roll": [51, 53], "857143": 51, "142857": 51, "571429": 51, "428571": 51, "gen": [51, 53, 77, 81], "h\u00f4pital": [51, 81], "gu\u00e9rison": [51, 81], "r\u00e9anim": 51, "d\u00e9cal": [51, 65, 148, 172, 183, 210, 211], "pic": [51, 53, 66], "714286": 51, "285714": 51, "data_last": 51, "ts": [51, 207], "dclag": 51, "shift": [51, 204], "realag": 51, "ts_cor": 51, "corr_dc": 51, "corr_r": 51, "m\u00e9dical": [51, 58], "sir": [51, 81], "sex": 51, "338240": 51, "976": 51, "1766": 51, "338241": 51, "338242": 51, "338243": 51, "338244": 51, "4acad602": 51, "d8b1": 51, "4516": 51, "bc71": 51, "7d5574d5f33e": 51, "iso": [51, 179], "8859": [51, 179], "1911493942": 51, "dtypewarning": 51, "mixed": 51, "specify": [51, 81], "low_memory": 51, "extract_dat": [51, 81], "depart": 51, "region": [51, 81, 166, 167], "libelle_reg": 51, "libelle_dep": 51, "tx_incid": 51, "taux_occupation_sa": 51, "tx_pos": 51, "tx_incid_couleur": 51, "r_couleur": 51, "taux_occupation_sae_couleur": 51, "tx_pos_couleur": 51, "nb_orang": 51, "nb_roug": 51, "90390": 51, "provenc": 51, "alpe": 51, "c\u00e3": 51, "azur": 51, "vauclus": 51, "721489": 51, "orang": [51, 107], "90391": 51, "719256": 51, "90392": 51, "524887": 51, "90393": 51, "566028": 51, "90394": 51, "570747": 51, "chardet": [51, 179, 185], "covid19": [51, 81], "rb": [51, 179, 185, 212], "confident": [51, 179, 185], "issus": [51, 65], "barycentr": [51, 55, 196], "departement_french_2018": 51, "spher": [51, 91], "dep_pos": 51, "code_inse": 51, "nuts3": 51, "surf_km2": 51, "deplong": 51, "deplat": 51, "morbihan": 51, "fr524": 51, "6870": 51, "812320": 51, "846846": 51, "98": [51, 73, 79, 110, 113, 134, 139, 142, 153, 172], "doub": 51, "fr431": 51, "5256": 51, "362722": 51, "165964": 51, "jur": 51, "fr432": 51, "5049": 51, "697361": 51, "729368": 51, "ardech": 51, "fr712": 51, "5566": 51, "425582": 51, "752771": 51, "fr812": 51, "5875": 51, "179861": 51, "993601": 51, "last_extract_dat": 51, "indic_last": 51, "ain": 51, "348764": 51, "099799": 51, "alli": [51, 56], "187644": 51, "393637": 51, "cantal": 51, "669045": 51, "051247": 51, "dr\u00f4m": 51, "167364": 51, "685239": 51, "018230": 51, "090620": 51, "dordogn": 51, "741203": 51, "104948": 51, "girond": 51, "575870": 51, "823614": 51, "land": [51, 166, 167, 219], "783793": 51, "965855": 51, "lot": [51, 166, 167], "garon": 51, "460747": 51, "367964": 51, "bigr1": 51, "bigr2": 51, "SAE": 51, "arden": 51, "640751": 51, "616226": 51, "chi_2": [52, 151], "suivr": [52, 53, 58, 114, 128, 130, 187, 196, 204, 210, 212], "m_": [52, 58, 74, 105, 114, 151, 158, 159], "forall": [52, 53, 55, 58, 66, 81, 151, 162, 163, 175], "bullet": [52, 151], "sum_j": [52, 80, 151, 161], "n_": [52, 151], "n2": [52, 79, 124, 133], "03061224": 52, "95408163": 52, "93877551": 52, "92346939": 52, "8877551": 52, "83163265": 52, "7755102": 52, "71938776": 52, "132": [52, 145], "r\u00f4l": [53, 55, 80, 202, 210, 211, 219], "trad": 53, "concevoir": [53, 55, 172, 196, 204, 212, 217], "sc\u00e9nario": 53, "rendu": 53, "vont": [53, 58, 65, 130, 187, 196, 212, 217], "ultra": 53, "verizon": 53, "speed": [53, 149], "auror": 53, "financial": 53, "market": [53, 66], "cme": 53, "techniqu": [53, 55, 117, 134, 146, 214], "renaiss": 53, "soin": [53, 57, 109, 110, 111, 112, 186, 204], "bug": [53, 65, 199], "extr\u00eam": [53, 58, 117], "imper": [53, 70, 196], "frequency": 53, "manuel": [53, 212], "servent": [53, 77, 172, 188, 204, 208, 210, 212, 219], "\u00e9lev": [53, 66, 91, 94, 104, 109, 110, 113, 125, 137, 168, 169], "invest": [53, 57, 104], "limit": [53, 58, 71, 80, 117, 169, 175, 204, 211, 217], "cess": [53, 179, 196, 210, 212, 217], "paragraph": [53, 55, 56, 65, 66, 140, 196, 199, 204, 210, 211, 212, 214, 216, 217, 219], "livr": [53, 57, 65, 69, 70, 119, 130, 158, 212], "d\u00e9criv": [53, 56, 138, 211], "mond": [53, 66, 70, 83, 140, 179, 180, 185, 211, 215], "succint": 53, "pr\u00e9tend": 53, "reflet": 53, "exhaust": [53, 54, 196, 204, 210, 211, 212], "bibl": 53, "actif": [53, 164, 217], "hull2011": 53, "paul": 53, "wilmott": 53, "wilmott2008": 53, "cinqu": 53, "conclut": 53, "r\u00e9dact": 53, "cv": [53, 125], "entretien": [53, 58, 86, 119], "vivac": 53, "esprit": [53, 104, 137, 179], "candidat": [53, 179], "intitul": [53, 204], "privat": 53, "equity": [53, 66], "frer": 53, "ennem": 53, "bertrand": 53, "jacquillat": 53, "jacquillat2008": [53, 66], "recueil": 53, "mondial": [53, 58], "pench": [53, 77, 80, 113, 198, 207], "r\u00e9gul": 53, "activ": [53, 202, 204, 217], "tier": [53, 104], "\u00e9tabl": [53, 179], "ile": [53, 66], "cayman": [53, 66], "rocchichristiaens2007": 53, "personnal": 53, "histoir": [53, 57, 107, 139, 186], "henry2008": 53, "Ayant": 53, "pu": [53, 75, 179, 199], "cris": [53, 66], "subprim": [53, 66], "d\u00e9march": 53, "valabl": [53, 65, 210, 211], "surveil": 53, "kaggl": 53, "challeng": 53, "winton": 53, "particip": [53, 91], "explicitent": 53, "winn": 53, "2nd": 53, "nim": 53, "shahbaz": 53, "chahhou": 53, "mohamed": 53, "d\u00e9couvr": [53, 65, 98, 105, 145, 163, 164, 186, 212, 217], "disert": 53, "mendrik": 53, "ramarlin": 53, "publient": 53, "post": 53, "mortem": 53, "pr\u00e9f\u00e9rent": [53, 55, 151, 196, 210, 211], "marcher": 53, "int\u00e9ret": [53, 104], "limitent": 53, "jacent": [53, 138], "vendeur": 53, "acheteur": 53, "ult\u00e9rieur": [53, 65, 196, 211], "matur": [53, 58], "achet": [53, 66, 130], "p\u00e9trol": 53, "engag": [53, 179], "contrat": 53, "transact": 53, "clor": 53, "contract": [53, 71, 104], "caus": [53, 70, 138, 199, 200, 202, 211], "sp\u00e9cul": 53, "ouvert": [53, 199, 212], "pari": 53, "euro": [53, 179], "dollar": 53, "int\u00e9r\u00eat": [53, 65, 83, 104, 114, 134, 168, 179, 196, 211, 212], "vendr": [53, 66], "big": [53, 73, 87], "cap": [53, 104, 156, 157, 194], "mid": [53, 66], "capitalis": 53, "boursi": 53, "secteur": 53, "momentan": [53, 199], "quotidien": [53, 66, 69], "journ": [53, 58, 66, 212], "vingtain": [53, 91], "p\u00e9riod": [53, 79, 81, 179], "soir": [53, 91, 179], "europ\u00e9en": [53, 66], "am\u00e9ricain": [53, 66], "acteur": 53, "attendent": 53, "annonc": 53, "baiss": 53, "satisfact": [53, 91], "m\u00e9nag": 53, "uen": [53, 102], "le\u00e7on": 53, "vagu": [53, 66], "paus": [53, 66, 90], "d\u00e9jeun": [53, 66], "ouvertur": [53, 65, 66, 178, 212], "tomb": [53, 58, 66, 104, 111, 112, 139, 176, 177, 183, 189, 196, 204], "13h30": [53, 66], "organ": [53, 179], "b\u00e2t": [53, 217], "n\u00e9cessitent": [53, 211, 214], "tick": 53, "prochain": [53, 84, 104, 179, 202, 204, 210], "bruit": [53, 82, 105, 106, 161], "r\u00e9percut": [53, 210], "assoc": [53, 56, 58, 65, 80, 91, 98, 172, 199, 204, 210, 211, 217], "intent": [53, 130], "\u00e9cart": [53, 109, 110, 111, 112, 217], "bid": 53, "offer": 53, "spread": 53, "augment": [53, 56, 73, 84, 91, 104, 109, 110, 150, 160, 161, 211, 217], "nettoi": [53, 65, 146, 196, 212], "vend": 53, "cher": [53, 179], "hyp": 53, "agiss": 53, "suffis": [53, 56, 66, 91, 92, 104, 175, 185, 196, 200, 210], "millisecond": [53, 204, 207, 217], "retour": [53, 106, 211, 219], "bours": 53, "banqu": [53, 66, 104, 196], "cac": 53, "x_t": [53, 81], "_t": [53, 164], "journali": 53, "eqnarray": 53, "r_t": [53, 81], "r_": [53, 66], "manipulent": [53, 126, 196, 198, 208, 212], "annualis": 53, "longleftrightarrow": [53, 106, 163], "045": 53, "excellent": [53, 200, 204], "graduel": 53, "pa": [53, 55, 56, 58, 179], "esp": [53, 214], "sum_1": 53, "r_i": 53, "\u00e9ven": [53, 84, 202, 207, 211, 217], "bancair": 53, "proxim": [53, 55, 58], "rho": [53, 58, 156, 157, 210], "r_1": 53, "r_2": 53, "sigma_1": 53, "sigma_2": 53, "1t": 53, "cro": [53, 55], "\u00e9coul": [53, 115, 166, 167, 207, 214], "gliss": 53, "visualis": [53, 58, 80, 124, 187, 210], "gomm": [53, 84], "MA": 53, "d\u00e9centr": 53, "d\u00e9gag": 53, "pr\u00e9voit": [53, 199, 204], "enserrent": 53, "tub": 53, "interval": [53, 175], "couloir": 53, "trader": 53, "o_t": 53, "h_t": 53, "l_t": 53, "c_t": [53, 156, 157], "exponentiel": [53, 58, 113, 211], "accord": 53, "mme_": 53, "mme": [53, 137], "ema": 53, "exponential": [53, 113], "tr_t": 53, "c_": [53, 55], "intra": 53, "semblabl": [53, 204, 211, 219], "r\u00e9activ": [53, 204, 217], "macd": 53, "macd_": 53, "ema_m": 53, "ema_n": 53, "sign": [53, 66, 111, 112, 178, 196, 198, 210, 212], "parabolic": 53, "sar": 53, "stop": [53, 124, 145], "ep": [53, 73], "cro\u00eet": 53, "haussi": 53, "baissi": [53, 66], "situ": [53, 56, 117, 139, 210, 212], "actuel": [53, 70, 85, 90, 107, 108, 196, 207, 217], "dessus": [53, 56, 82, 104, 106, 113, 124, 128, 130, 141, 162, 168, 180, 204, 210, 211, 214, 217], "rsi": 53, "strength": 53, "indicator": 53, "mouv": [53, 204], "u_t": 53, "d_t": [53, 81], "emu_n": 53, "emd_n": 53, "rs_n": 53, "rsi_n": 53, "rachet": 53, "emprunt": [53, 75, 104], "brok": 53, "interd": 53, "d\u00e9couvert": [53, 81, 198], "attrap": [53, 126, 200, 204], "frequ": 53, "fond": [53, 179, 204], "leverag": 53, "anglic": 53, "essort": 53, "f\u00e9d\u00e9ral": 53, "dang": 53, "pert": [53, 79], "ouvr": [53, 65, 212, 219], "discuss": [53, 204], "proposent": [53, 55, 133, 168, 178, 196, 204, 212], "majoritair": [53, 87, 184, 198], "favorisent": 53, "lipp": [53, 66], "british": [53, 66], "virgin": [53, 66], "island": [53, 66], "bermud": [53, 66], "irland": [53, 66], "baham": [53, 66], "guernsey": [53, 66], "antill": [53, 66, 179], "n\u00e9erlandais": [53, 66], "short": [53, 66], "commodity": [53, 66], "advisor": [53, 66], "cta": [53, 66], "fixed": [53, 66], "incom": [53, 66], "arbitrag": [53, 66], "emerging": [53, 66], "macro": [53, 66], "neutral": [53, 66], "vendeux": [53, 66], "\u00e9tendr": [53, 106, 109, 204, 212], "exposit": 53, "focalis": 53, "actual": 53, "mouvement": 53, "essayent": [53, 146], "anticip": [53, 80], "acquisit": 53, "publiqu": [53, 156, 157, 214], "opa": 53, "livraison": 53, "a380": 53, "rentr": [53, 58, 146, 179, 204], "r\u00e9ussit": 53, "connaiss": [53, 57, 58, 70, 92, 164, 210, 214], "bilan": 53, "mati": [53, 115], "commodit": 53, "pr\u00e9dilect": 53, "concernent": [53, 217], "bl\u00e9": 53, "cac40": 53, "promess": [53, 217], "brent": 53, "crud": 53, "oil": 53, "merchantil": 53, "exchang": 53, "nymex": 53, "aug08": 53, "ao\u00fbt": [53, 66, 207], "pai": [53, 104, 210], "affirm": [53, 165, 179], "investisseur": 53, "fass": [53, 70, 107, 108, 124, 179], "tenu": [53, 70, 204], "vers": 53, "forfaitair": 53, "marg": [53, 175, 178], "chambr": 53, "compens": 53, "pali": [53, 66], "ach\u00e8tent": 53, "entendu": 53, "vendent": 53, "pr\u00eat": [53, 58, 104, 217], "jou": [53, 170, 177, 178, 179, 210, 217], "hauss": 53, "pr\u00e9voir": [53, 65, 125, 204, 211], "croissanc": [53, 66], "couvr": [53, 164, 165, 214], "exerc": [53, 58], "confer": 53, "b\u00e9n\u00e9fic": [53, 178], "put": [53, 217], "souhaitent": [53, 70, 211], "regardent": 53, "track": [53, 219], "capac": [53, 70, 125], "synonym": [53, 210], "incertitud": [53, 175], "absenc": [53, 219], "capt": 53, "appuient": [53, 70, 137], "\u00e9mettric": 53, "affair": [53, 66, 128], "constuir": [53, 162, 211], "licenci": 53, "d\u00e9pr\u00e9ci": 53, "entra\u00een": [53, 66, 179, 211], "justif": [53, 91, 104], "corrigent": 53, "int\u00e8grent": 53, "profit": 53, "impass": [53, 91], "errat": 53, "passager": 53, "compr\u00e9hens": [53, 162, 196, 211], "cadr": [53, 65, 179, 210], "longtemp": [53, 58, 114], "annul": [53, 85, 105, 106, 204], "revendr": [53, 66], "avers": 53, "d\u00e9conseil": [53, 70, 178, 210, 211, 212, 214], "fac": [53, 126, 136, 162, 179, 196], "touch": [53, 57, 103, 175, 204, 210, 217], "expert": [53, 210], "\u00e9voqu": [53, 148, 199], "susceptibl": [53, 56, 164, 196, 199, 204, 211, 214, 219], "trentain": 53, "immiscent": 53, "mun": [53, 65, 164, 204, 210], "m\u00e9can": [53, 65, 141, 187, 188, 196, 199, 200, 204, 212, 217], "descend": [53, 58, 196], "stopp": 53, "rapproch": [53, 55, 73, 111, 112, 173, 210], "diminuent": 53, "oscill": 53, "\u00e9quilibr": [53, 58, 179, 187], "perdr": [53, 83, 160, 179, 200], "contrarian": 53, "consensus": 53, "\u00e9tud": [53, 79, 104, 211, 215], "apparten": [53, 74, 80, 132, 196, 211], "rebond": 53, "reviennent": [53, 91, 204], "net": [53, 65, 66, 74, 90, 124, 149, 210, 211, 215], "d\u00e9grad": [53, 66], "kerviel": [53, 66], "janvi": [53, 66], "auparav": [53, 66, 82], "simultan": [53, 204, 210, 211, 217], "d\u00e9crivent": [53, 204, 210], "sant": 53, "entrepris": [53, 179, 211], "cot": 53, "oblig": [53, 132, 179, 196, 197], "r\u00e9guli": [53, 94, 119, 123, 173, 199, 204, 212, 214, 220], "perspect": 53, "centain": [53, 55, 56, 58, 212], "earning": 53, "interest": 53, "tax": [53, 219], "depreci": 53, "amortiz": 53, "ebitd": 53, "revenus": 53, "imp\u00f4t": 53, "dotat": 53, "amort": 53, "provis": 53, "shar": 53, "mbox": 53, "outstanding": 53, "pric": 53, "sal": 53, "revenu": 53, "dividend": 53, "payout": 53, "dpr": 53, "annual": 53, "i_t": [53, 81], "infegal": [53, 66, 214], "extrem": [53, 56, 58, 74, 80, 91, 107, 196], "rebalancing": 53, "guid": [53, 83, 196], "grandeur": [53, 58, 105, 164, 179], "incontest": 53, "markowitz": 53, "re\u00e7ut": 53, "nobel": 53, "traval": [53, 55], "1990": 53, "repos": [53, 73, 83, 212], "sigma_": [53, 66], "alpha_": [53, 66, 105], "alpha_1": [53, 66], "alpha_n": [53, 66], "rho_": 53, "alpha_j": 53, "sigma_j": 53, "covari": [53, 105, 154, 155], "ll": [53, 56, 66, 79, 97, 158, 159, 162, 175, 196, 211], "underset": [53, 66, 175], "supegal": [53, 55, 66], "maximis": [53, 56, 66, 107, 108, 131], "contrain": [53, 66], "assoupl": 53, "r\u00e9solvent": [53, 196], "lagrang": 53, "s\u00e9quentiel": [53, 73, 141], "inegl": 53, "boyd": 53, "admm": 53, "boyd2012": 53, "statistical": [53, 158], "alternating": 53, "cvxgen": 53, "p_i": [53, 55, 139], "cl\u00f4tur": 53, "expriment": [53, 207], "oe": 53, "uvre": 53, "\u00e9paul": 53, "chevron": 53, "contr\u00f4l": [53, 208, 212], "pend": [53, 65, 81, 147, 179, 199, 202, 204, 210, 217], "7822": 53, "7823": 53, "7818": 53, "7819": 53, "1130": 53, "7830": 53, "1543": 53, "7827": 53, "7824": 53, "1244": 53, "7825": 53, "216": [53, 139], "7828": 53, "7833": 53, "640": 53, "7829": 53, "7831": 53, "478": [53, 105, 217], "7821": 53, "716": 53, "7834": 53, "7826": 53, "681": 53, "24h": 53, "immobil": 53, "fermetur": [53, 65, 212], "fur": [53, 214, 219], "informatisent": 53, "ten": [53, 66, 78, 91, 104, 108, 115, 133, 185, 186, 196, 210, 212], "histor": [53, 65, 66, 179], "exploit": [53, 83, 204, 207, 208, 212, 214, 217], "incoh\u00e9rent": [53, 126], "mulitpl": 53, "redescend": 53, "franch": 53, "remont": [53, 75, 199], "inefficac": 53, "dizain": [53, 56, 58], "vendu": [53, 66], "hauteur": [53, 66, 115, 175, 183, 204], "six": [53, 55, 179, 211, 219], "absent": [53, 210], "impr\u00e9vu": 53, "d\u00e9cevoir": 53, "cascad": 53, "vigil": 53, "remettr": 53, "qualit": [53, 57, 73], "\u00e9prouv": [53, 179], "d\u00e9pass": [53, 104, 176, 177], "cert": 53, "permettr": [53, 65, 163, 179, 196, 211, 212, 217], "asset": 53, "tiennent": 53, "frais": 53, "r\u00e9invest": 53, "r\u00e9alit": [53, 179, 196, 210], "Cee": 53, "\u00e9cueil": 53, "in\u00e9vit": [53, 204, 217], "doivent": [53, 65, 66, 152, 168, 172, 196, 204, 210, 211, 214, 219], "connus": [53, 58, 81, 84, 119, 162, 196], "malgr": [53, 57, 125, 141, 200, 210, 211], "avis": [53, 73, 99, 104], "attribu": [53, 196, 210, 211], "slippag": 53, "surviennent": [53, 199, 202, 208], "d\u00e9calag": [53, 92, 172, 179, 210, 211], "d\u00e9faveur": 53, "fraction": 53, "pourcent": 53, "diziem": [53, 217], "n\u00e9glig": 53, "surestim": 53, "donnent": [53, 58, 211], "observent": 53, "d\u00e9cro\u00eetr": [53, 56, 104], "p\u00e9nalis": 53, "davantag": [53, 55, 199, 211], "proportionnel": [53, 56, 73, 87, 134], "sharp": [53, 66], "ref": [53, 56, 124], "finance_rendemnt_anne": 53, "caution": 53, "partiquent": 53, "empruntent": 53, "tripl": [53, 139, 204], "g\u00e8rent": 53, "gratuit": 53, "retranch": [53, 107], "drawdown": [53, 66, 79], "succed": 53, "roul": 53, "reproduisent": [53, 172], "criter": [53, 80, 189, 214], "risk": 53, "repr\u00e9sentent": [53, 56, 58], "pir": [53, 73, 79, 84, 94, 143], "lendemain": 53, "mauv": [53, 66, 124, 210], "Leur": [53, 65, 196, 211], "82": [53, 73, 89, 149], "vraisembl": [53, 81], "r\u00e9percuss": [53, 210], "exp\u00e9rient": [53, 56, 137, 168, 196, 210, 211], "obtien": [53, 66], "passent": [53, 66, 113, 178, 196], "montrent": [53, 66], "confirm": [53, 73, 187], "d\u00e9correl": [53, 58, 109, 110, 119], "permettront": 53, "sc\u00e9nar": 53, "banquair": [53, 66], "alimentair": [53, 66], "autocorrel": [53, 66], "sg": [53, 66], "homogen": [53, 66], "mitig": [53, 66], "perd": [53, 57, 66, 104, 146, 147, 150, 161, 170, 205, 211], "tend": [53, 58, 66, 109, 110, 175], "t_1": [53, 162], "t_2": [53, 162], "p_1": [53, 55, 162], "p_2": [53, 162], "flech": [53, 56, 66], "superposent": [53, 66, 124], "d_i": [53, 158, 159], "potters2005": [53, 66], "diff\u00e9renc": [53, 214], "reconna\u00eet": 53, "bouchaud": [53, 66], "potter": [53, 66], "troisem": [53, 66], "interrog": [53, 93, 196], "Ses": [53, 83, 140], "reproduir": [53, 70, 187], "t\u00f4t": [53, 108, 134, 202], "in\u00e9gal": 53, "coupur": [53, 65, 66, 76, 107, 108, 211], "envisage": [53, 66, 84], "os\u00e9": [53, 66], "ambiti": [53, 214], "alter": [53, 196, 211, 214], "sc\u00e9narios": 53, "volontair": [53, 104, 200], "exager": [53, 217], "visent": 53, "sall": [53, 111, 112], "voi": [53, 58, 137, 174], "sytem": 53, "agent": [53, 149], "micro\u00e9conom": 53, "montent": 53, "baissent": 53, "rentabl": 53, "suppl\u00e9ent": 53, "accel": 53, "capturent": 53, "impr\u00e9visibl": [53, 97, 211, 217], "maximisent": 53, "regularized": 53, "wahlberg": 53, "annergren": 53, "wang": 53, "proceeding": 53, "16th": 53, "ifac": 53, "symposium": 53, "july": 53, "g\u00e9rard": 53, "henry": 53, "eyroll": 53, "pearson": [53, 58], "educ": 53, "puf": 53, "follower": 53, "los": 53, "often": 53, "marc": 53, "jean": [53, 97, 137], "philipp": 53, "r\u00e9f\u00e9renc": [53, 150, 196], "econpaper": 53, "arxiv": 53, "michel": [53, 104, 132], "rocch": 53, "arnaud": 53, "christiaen": 53, "sef": 53, "willmott": 53, "abordent": 54, "strateg": [54, 58, 80, 104, 123, 216, 219], "trading": [54, 79], "financ": 54, "travevelling": 55, "magasin": [55, 57, 162], "probl\u00e9mat": [55, 114, 196], "plannif": 55, "t\u00e2ch": [55, 70, 124, 132, 186, 210, 211, 217, 219], "cepend": [55, 65, 84, 187, 211, 212], "pr\u00e9par": [55, 173, 179], "jouent": [55, 80, 211, 219], "300": [55, 56, 84, 110, 111, 112, 138, 141, 147, 160, 179, 182, 183, 204], "cercl": [55, 111, 112, 204], "converg": [55, 73, 104, 106, 124, 139, 175], "sued": 55, "diver": 55, "vast": 55, "backbon": 55, "heuristic": [55, 56], "espac": [55, 65, 73, 77, 92, 104, 106, 119, 148, 150, 160, 162, 181, 196, 204, 205, 210, 211, 215, 219], "puissent": [55, 212], "organized": 55, "citeindex": 55, "koivisto1999": 55, "vesanto2000": 55, "divers": [55, 73, 212], "reconnaiss": [55, 179], "parol": 55, "d\u00e9form": 55, "mod\u00e9lis": [55, 74, 196], "torsion": 55, "ressemblent": 55, "papillon": 55, "organizing": 55, "agrand": 55, "rejoint": [55, 91], "v_1": [55, 56, 164, 165, 210], "v_n": [55, 56, 164, 165], "p_l": 55, "mod": [55, 65, 73, 107, 124, 137, 146, 156, 157, 178, 196, 199, 210, 217], "c_l": 55, "longleftarrow": [55, 56], "allant": [55, 56, 65, 70, 127, 210], "v_i": [55, 56, 74, 190], "eta": [55, 58, 156, 157], "rcl": [55, 58, 79, 124, 154, 158, 163], "epsilon_0": 55, "d_0": [55, 81], "eta_0": 55, "d\u00e9pendr": [55, 186], "d\u00e9pendent": [55, 56, 70, 78, 186, 210], "suppress": [55, 65, 196], "insert": [55, 65, 84, 91, 146, 188, 204, 205, 211], "maillag": 55, "vid\u00e9o": [55, 56, 178], "esper": [56, 80, 91, 179], "ud": 56, "redond": [56, 162, 196], "d\u00e9barrass": [56, 107, 108], "e_1": [56, 106], "e_n": 56, "emptyset": 56, "quad": 56, "e_i": [56, 74, 75], "neq": [56, 158, 159, 162], "cup": 56, "foreach": [56, 61], "Son": [56, 58, 73, 83, 134, 190, 196, 204, 210, 212], "majeur": [56, 65, 107, 108, 141, 161], "quadrill": 56, "30000": [56, 95, 153], "algo_kruskal_tsp": 56, "3000": [56, 143, 145], "reven": [56, 79, 91, 184, 204, 210, 214], "composent": 56, "trigonometr": 56, "confondus": 56, "ch": [56, 204, 217], "parcouru": [56, 80, 91, 210], "visit": [56, 196, 210, 217], "parcourus": [56, 83], "quelconqu": [56, 65, 105, 107, 126, 163, 210, 211], "appartien": [56, 79], "poursuit": [56, 81, 179, 199, 210], "imperfect": 56, "morceau": [56, 210, 211, 219], "kernighan": 56, "portion": [56, 65, 66, 71, 172, 199, 210, 214, 217], "notin": [56, 106], "v_": [56, 164, 165], "d\u00e9cro\u00eet": [56, 81], "v_j": [56, 74, 190], "v_k": 56, "pr\u00e9c\u00e8dent": [56, 65], "d\u00e9terminent": 56, "resteindr": 56, "concentr": [56, 145], "r\u00e9sorb": 56, "inconv\u00e9nient": [56, 87, 132, 141, 169, 187, 196, 204, 217], "a\u00b5": 56, "lieux": 56, "recens": [56, 65, 92, 196, 205, 208, 211, 214], "travers": [56, 83, 91, 140, 152], "extr\u00e9mit": 56, "ext\u00e9rieur": [56, 65, 172, 196, 204, 210, 211, 216], "libert": [56, 151, 179, 217], "etap": [56, 80, 144, 162], "1500": 56, "scienc": 57, "d\u00e9marrag": 57, "lecteur": 57, "comprend": [57, 60, 65, 126, 187], "d\u00e9monstr": [57, 65, 162], "fidel": 57, "enseign": [57, 58], "plais": 57, "professeur": [57, 190], "digress": 57, "m\u00ealent": 57, "soulign": [57, 65, 66, 196, 211], "assist": 57, "chapitr": [57, 196, 199, 204, 205, 210, 211, 212, 214, 217], "d\u00e9battr": [57, 179], "supposit": 57, "appr\u00e9ci": 57, "tradit": 57, "motiv": [57, 73], "sanction": 57, "aveugl": 57, "invari": [57, 65, 196], "vois": [57, 84, 99], "agenc": [57, 58], "terrain": 57, "r\u00e9sist": 57, "nait": 57, "d\u00e9crir": [57, 168, 180], "ph\u00e9nomen": 57, "bocal": 57, "enivr": 57, "bient\u00f4t": [57, 217], "datascient": 57, "phras": 57, "concis": [57, 211], "charm": 57, "scientif": [57, 204], "d\u00e9duir": [57, 81, 162], "vif": [57, 58], "nourr": 57, "d\u00e9press": 57, "frapp": [57, 179], "clavi": [57, 204, 210], "fascin": 57, "langu": [57, 118, 123, 194, 199, 208], "limpid": 57, "jogging": 57, "menac": 57, "s\u00e9cur": [57, 70, 179], "militair": 57, "bo\u00eet": 57, "tourment": [57, 179], "laisson": 57, "partout": [57, 175, 184, 210], "ustensil": 57, "journal": [57, 185], "intim": 57, "passon": 57, "tripot": 57, "disposit": [57, 203, 212, 214, 217], "v\u00e9rit": [58, 113, 179], "expos": [58, 69, 202, 204], "symbolis": 58, "purist": 58, "diront": 58, "trompeur": [58, 112], "r\u00e9vel": 58, "confondr": [58, 65, 96, 98, 131, 211], "pr\u00e9cieux": [58, 200], "h\u00e9sit": [58, 65, 180], "iri": 58, "t\u00eat": [58, 65, 129, 204], "\u00e9crivent": [58, 152, 212], "x_n": [58, 66, 106, 137, 158, 166, 167, 210], "bilin\u00e9air": 58, "y_i": [58, 73, 105, 106, 107, 108, 109, 110, 124], "simplifi": [58, 65, 70, 77, 90, 99, 128, 144, 198], "_1": 58, "viennent": [58, 127, 162, 217], "beaoucoup": 58, "interviennent": [58, 84, 199, 208], "minuscul": [58, 65, 66, 211, 212], "majuscul": [58, 65, 66, 99, 211, 212], "lettr": [58, 65, 66, 70, 90, 92, 95, 97, 98, 104, 172, 173, 178, 184, 185, 186, 187, 188, 194, 204, 211, 219], "grecqu": 58, "r\u00e9flexion": 58, "min_w": 58, "newton": 58, "synth\u00e9tis": 58, "biolog": 58, "ami": [58, 137], "r\u00e9cit": 58, "endort": 58, "paress": [58, 95], "hasard": [58, 76, 82, 84, 85, 89, 102, 111, 112, 124, 131, 177, 190, 214, 217], "loi": [58, 80, 84, 104, 105, 107, 108, 109, 110, 113, 117, 123, 151, 154, 155, 156, 157, 175, 178], "uniform": [58, 73, 105, 107, 108, 111, 112, 117, 118, 134, 137, 175, 178], "chapeau": 58, "fabriqu": 58, "ampoul": 58, "vision": [58, 162], "y_1": [58, 108], "y_n": 58, "varient": [58, 211], "r\u00e9su": 58, "spearman": 58, "rg_x": 58, "rg_y": 58, "traduct": [58, 214], "volont": 58, "gamm": [58, 156, 157], "ampleur": 58, "math\u00e9maticien": [58, 91], "guerr": 58, "reconstruir": [58, 141], "aimon": 58, "prou": 58, "litt\u00e9ral": [58, 211], "crypt": [58, 92, 156, 157], "uniformis": 58, "garant": [58, 66, 73, 83, 104, 179, 211], "illustrent": [58, 119], "mard": 58, "d\u00e9cembr": [58, 93, 179], "\u00e9col": [58, 70], "dispens": [58, 168], "lyc": [58, 179], "cultur": [58, 70], "auxquel": [58, 70, 83, 179], "quadrupl": [58, 219], "x4": 58, "viterb": 58, "levenstein": [58, 76, 77, 167], "exeric": 58, "embauch": [58, 86, 119], "d\u00e9nomin": [58, 124], "apprendr": [58, 125, 179], "Sa": [58, 204, 210], "plair": 58, "statisticien": 58, "pyramid": [58, 77, 123], "bigarr": [58, 123], "spectral": [58, 119], "manil": 59, "jenkin": [59, 62, 212], "r\u00e9utilis": [60, 65, 70, 78, 198, 204, 210], "vglob": 60, "un_calcul": 60, "contors": 60, "bouton": [60, 65, 217], "somme_doubl": [60, 65], "test_somme_doubl": [60, 65], "quiconqu": [60, 65], "bing": [60, 65], "envois": [60, 65], "remote_nam": 61, "url_repo": 61, "upstream_dmlc": 61, "dmlc": 61, "xgboost": 61, "repo": 61, "branchpy": 61, "machinelearning": 61, "cscod": 61, "patch": [61, 111, 112, 135], "ish": 61, "pathspec": 61, "includ": 61, "predictor": 61, "new_branch": 61, "upstream": 61, "rm": [61, 64, 104], "localpath": 61, "hard": 61, "included": [61, 71], "mad": 61, "fetch": 61, "banch": 61, "insid": 61, "sync": 61, "assuming": 61, "reposity": 61, "ongoing": 61, "away": 61, "retain": 61, "may": [61, 210], "seem": 61, "renamed": 61, "renaming": 61, "own": 61, "moved": 61, "delet": [61, 204], "tagged": 61, "declar": 61, "onnx": 61, "extended": 61, "config": [61, 63, 204, 217], "sparsecheckout": 61, "echo": [61, 63, 64], "_unittest": 61, "pyproject": [61, 212], "toml": [61, 212], "cominf": 61, "stor": [61, 64], "onnx_extended": [61, 64], "tag": [61, 219], "thistag": 61, "truc": 62, "crash": 62, "cours": [62, 214, 217], "programmer": 62, "openjdk": 63, "jdk": 63, "wget": 63, "pkg": [63, 64], "sudo": [63, 204], "sh": [63, 64], "deb": 63, "updat": [63, 65, 78, 90, 91, 137, 144, 211, 212], "purg": [63, 64], "nano": 63, "chown": 63, "consol": 63, "next": [63, 145, 166, 167, 187, 196, 199, 210], "collapsing": 63, "usesecurity": 63, "security": 63, "ls": 64, "cd": 64, "pattern": [64, 196, 204, 219], "autoremov": 64, "aptitud": 64, "dpkg": 64, "xarg": 64, "fi": [64, 141, 204, 212], "files0": 64, "sed": 64, "rn": 64, "causing": 64, "mtim": 64, "exec": [64, 145, 160, 196, 199, 200, 211, 214], "fuser": 64, "ncdu": 64, "sfdisk": 64, "lht": 64, "human": 64, "readabl": 64, "shc": 64, "heavy": 64, "folder": 64, "rh": 64, "kill": 64, "pid": 64, "eo": 64, "envvar": 64, "execut": [64, 187, 214], "suffisent": [65, 196], "jun": 65, "gcc": 65, "derri": [65, 73], "commentair": [65, 153, 181, 199, 208, 209, 217], "commencent": [65, 137, 152, 211, 212, 214], "help": [65, 145, 146, 170, 196, 199, 204, 210, 214], "encadr": [65, 109, 196, 211], "\u00e9tal": 65, "sphinx_runpython_extens": [65, 196, 200, 210, 215], "douteux": 65, "incorrect": [65, 98, 196], "\u00e9tend": [65, 204, 211, 212], "\u00e9cras": [65, 212], "apostroph": [65, 211], "guill": 65, "crochet": [65, 143, 211, 219], "usuel": [65, 209], "145": [65, 81, 138], "\u00e9quivaut": [65, 178, 211], "idem": [65, 204], "upper": [65, 92, 99, 137, 165, 211], "isalph": [65, 211], "isdig": [65, 199, 211], "replac": [65, 78, 83, 92, 95, 109, 146, 147, 149, 160, 179, 204, 211, 214, 219], "optionnel": [65, 204, 211], "maxspl": [65, 211, 219], "d\u00e9limiteur": [65, 210, 211], "agglutin": [65, 211], "facult": [65, 66, 190, 196, 199, 210, 211, 219], "affichag": [65, 98, 126, 144, 146, 188, 196, 199, 204, 210, 211, 212, 217], "tronqu": [65, 199, 211], "d\u00e9cimal": [65, 207, 210, 211, 212], "123456789": [65, 211], "2e": 65, "14159": 65, "14e": 65, "support": [65, 70, 95, 96, 205, 211, 217, 219], "iem": [65, 211], "2k": [65, 175, 211], "3k": [65, 211], "pop": [65, 84, 211], "\u00e9changent": [65, 204, 215], "s\u00e9lect": [65, 91, 204, 211], "valeur1": [65, 95, 211], "valeur2": [65, 66, 95, 196, 211], "superflu": [65, 199, 211], "clear": [65, 211, 217], "d2": [65, 76, 89, 102, 107, 109, 110, 137, 163], "d1": [65, 76, 102, 107], "setdefault": [65, 211], "popitem": 65, "contrepart": [65, 66, 196, 211], "encha\u00eenent": 65, "syumbol": 65, "xrang": 65, "li2": 65, "random_matrix": [65, 87], "__enter__": [65, 145, 146, 147, 160], "__exit__": [65, 145, 146, 147, 160], "acceptent": [65, 196, 211], "exemple_fonct": [65, 66, 214], "r1": [65, 107, 108, 117], "r2": [65, 107, 108, 111, 117, 125], "re\u00e7oivent": [65, 204, 210], "follow": [65, 210], "int\u00e9rieur": [65, 66, 168, 172, 196, 199, 204, 210, 211, 212, 217, 219], "r\u00e9percu": 65, "d\u00e9clin": 65, "iterate_double_on_list": 65, "run_python_script_140224195665216": 65, "0x7f887d4e1770": 65, "ma_cl": 65, "att3": 65, "att4": 65, "constructeur": [65, 126, 128, 130, 168, 197, 199, 204, 212, 217], "calcule4": 65, "pr\u00e9ced": [65, 79, 187, 196, 198, 210, 211, 212, 219], "staticmethod": [65, 66, 196], "calcule_static": 65, "terminent": [65, 78, 211], "__": 65, "__add__": [65, 168, 169, 196], "soustract": [65, 168, 196, 207, 210, 211], "__cmp__": [65, 196], "ma_classe2": 65, "mer": [65, 83, 140, 179, 217], "makebold": 65, "wrapped": 65, "makeitalic": 65, "membr": [65, 162, 196], "_p": 65, "val": [65, 150, 159, 175], "p_get": 65, "p_set": 65, "tabul": [65, 135, 204, 211, 212, 219], "sp\u00e9cifi": [65, 199, 202, 204, 208, 210, 211], "readlin": [65, 162, 178, 179, 212, 219], "backslash": 65, "marquent": [65, 212], "nettoyag": [65, 212], "l_net": [65, 212], "balis": 65, "htmlpars": 65, "sax": [65, 214], "descript": [65, 91], "d\u00e9limit": [65, 212], "hugo": [65, 212], "victor": [65, 212], "miser": [65, 212], "kessel": [65, 212], "joseph": [65, 212], "lion": [65, 212], "woolf": [65, 212], "virgini": [65, 212], "mr": [65, 137, 141, 212], "dalloway": [65, 212], "calvino": [65, 212], "italo": [65, 212], "baron": [65, 212], "perch": [65, 185, 212], "geometr": 65, "deuxiem": [65, 91, 175, 187], "pseudonym": 65, "rattrap": [65, 199], "agir": [65, 199], "exc": [65, 199, 200], "rapportent": 65, "insoup\u00e7on": [65, 199], "imbriqu": [65, 95, 99, 100, 101, 186, 210, 211], "aucunchiffr": [65, 199], "123a": [65, 199], "__doc__": [65, 196, 199, 211, 214], "runpythonerror": [65, 196, 199, 200, 210, 211, 219], "stdin": [65, 196, 219], "invalid": [65, 98], "abcdefghijklmnopqrstuvwxyz": [65, 137], "ef": 65, "entour": [65, 113, 204, 211], "r\u00e9sid": [65, 212], "calcul1": 65, "calcul2": 65, "calcul3": 65, "calculx": 65, "transm": [65, 90, 168, 210], "transmettr": [65, 138, 202, 210, 212, 215, 217], "calcul4": 65, "essay": [65, 75, 92, 98, 104, 111, 112, 175, 185, 196, 199, 211, 217, 219], "ported": 65, "nonetyp": [65, 96], "dropbox": 65, "skydriv": 65, "googledr": 65, "propag": [65, 74, 113], "svn": 65, "tortoisesvn": 65, "caract\u00e9ris": [66, 211], "diff\u00e9renci": [66, 211], "poss\u00e8dent": [66, 196, 204, 211, 214, 217], "corp": [66, 196, 210], "privil\u00e9gi": [66, 179, 196, 211], "comportent": [66, 196, 210], "recouvr": [66, 111, 112, 210], "duplicat": [66, 67], "implic": 66, "target": [66, 67, 138], "volatil": 66, "achat": [66, 130, 179], "conclus": [66, 109, 110, 147], "band": 66, "bolling": 66, "vent": 66, "type_exception_1": [66, 199], "type_exception_": [66, 199], "type_exception_j": [66, 199], "type_exception_n": [66, 199], "apparu": [66, 114, 199, 211, 217], "nom_cl": [66, 196], "condition1": [66, 210], "instruction1": [66, 210], "instruction2": [66, 210], "instruction3": [66, 210], "instruction4": [66, 210], "importlib": [66, 214], "module_exempl": [66, 214], "exemple_vari": [66, 214], "reload": [66, 210, 214], "nom_class": [66, 196], "attribut_stat": [66, 196], "nom_method": [66, 196], "attribut_statique2": [66, 196], "nom_methode_st": [66, 196], "attribut_statique3": [66, 196], "valeur3": [66, 196], "nom_propriet": [66, 196], "fget": [66, 196], "fset": [66, 196], "fdel": [66, 196], "fget_vari": [66, 196], "fset_vari": [66, 196], "attribut_1": [66, 196], "attribut_n": [66, 196], "nom_ancetr": [66, 196], "nom_autre_method": [66, 196], "chez": [66, 82, 99, 179, 196], "exception_typ": [66, 199], "ali": [66, 178, 214], "exemple_cl": [66, 196, 214], "param_1": [66, 196, 210], "param_n": [66, 196, 210], "d\u00e9commmand": [66, 214], "valeur_1": [66, 196, 210], "valeur_n": [66, 196, 210], "nom_attribut": [66, 196], "fonction_nom": [66, 210], "par_1": [66, 210], "par_n": [66, 210], "instruction_1": [66, 210], "instruction_n": [66, 210], "res_1": [66, 210], "res_n": [66, 210], "valeur_2": [66, 210], "param_2": [66, 210], "explic": 67, "faq": 68, "picor": 69, "savent": [69, 180], "p\u00e9riss": 69, "survol": 69, "langgag": 69, "transcript": [70, 196], "d\u00e9butent": [70, 99], "macos": 70, "alleg": 70, "officiel": [70, 178, 219], "gourmand": [70, 73, 212], "d\u00e9fault": [70, 150], "horm": [70, 196, 210, 212], "heureux": [70, 179], "pyp": [70, 214], "florileg": 70, "awesom": [70, 81], "pip": 70, "anglophon": [70, 199], "apparit": [70, 118, 134, 196, 214], "ascii": [70, 200, 208, 211, 212], "charact": [70, 204], "xe9": [70, 158, 159, 211], "pourront": 70, "soulev": 70, "r\u00e9serv": [70, 178], "h\u00f4tel": 70, "vieillot": 70, "obsolet": 70, "lisibil": [70, 204], "autorisent": 70, "publi": 70, "enhanc": 70, "proposal": 70, "calendri": [70, 207, 214], "assemblag": [70, 141, 188, 196, 204, 215, 217], "encha\u00een": [70, 177, 188, 210, 211, 217], "relev": [70, 179], "immens": [70, 73], "manquent": 70, "qualif": 70, "cursus": 70, "scolair": 70, "intemporel": 70, "couvrent": 70, "mail": [70, 212], "serr": 70, "exit": 70, "vis": [70, 189, 212], "copyright": 71, "2024": [71, 93, 207, 211, 217], "permiss": [71, 200, 219], "hereby": 71, "granted": 71, "fre": 71, "obtaining": 71, "softwar": 71, "deal": [71, 166, 167], "without": [71, 204], "restrict": [71, 200], "modify": 71, "publish": [71, 200], "distribut": 71, "sublicens": 71, "sel": [71, 204], "whom": 71, "furnished": 71, "subject": [71, 166, 167, 212], "notic": 71, "shall": 71, "substantial": 71, "provided": 71, "AS": 71, "warranty": 71, "implied": 71, "limited": 71, "warrant": 71, "merchantability": 71, "fitness": 71, "noninfring": 71, "holder": 71, "liabl": 71, "claim": [71, 141], "damag": 71, "liability": 71, "action": [71, 204, 217], "otherwis": [71, 166, 167], "arising": 71, "dealing": 71, "social": [73, 80, 162, 179], "connexion": 73, "lourd": [73, 148], "86": [73, 104, 110, 113, 117, 142, 179, 200, 211], "facebook": 73, "formel": [73, 198], "consid\u00e9ron": 73, "univer": 73, "s_1": [73, 162], "s_2": [73, 162], "ldot": 73, "s_m": [73, 162, 163], "noton": 73, "satisfair": 73, "actualis": 73, "toler": 73, "do\u00eet": 73, "lvert": 73, "rvert": 73, "leq": 73, "geq": 73, "m\u00e9dian": [73, 106], "pr\u00e9senton": 73, "correspondr": [73, 184, 219], "famill": [73, 137, 179], "universel": 73, "mapsto": 73, "h_": 73, "mathrm": 73, "prenon": [73, 168], "arbitrair": 73, "4294967291": 73, "tiron": 73, "sampl": [73, 91, 141], "calculon": 73, "compton": 73, "p_collis": 73, "effectuon": 73, "reiter": 73, "r\u00e9it\u00e9ron": 73, "750": 73, "a_1": 73, "a_2": 73, "essayon": [73, 125, 133, 150], "64bit": 73, "i8": 73, "univers": 73, "\u00e9chantillonag": 73, "b_": 73, "b_max": 73, "b_1": 73, "b_2": 73, "h1": [73, 219], "h2": 73, "initialison": 73, "464": 73, "z\u00e9ros": [73, 106, 131, 150], "consecut": 73, "trailing": 73, "modulus": 73, "lookup": [73, 187], "78": [73, 79, 139], "mod_37bit_posit": 73, "decomposit": [73, 128, 161], "0b10": 73, "0b10000000000": 73, "0b1101": 73, "comparon": [73, 142], "rajouton": 73, "539": 73, "atteindr": [73, 152, 164, 188], "parcouron": 73, "regardon": [73, 125], "card": 73, "384": [73, 79, 108, 124, 160], "remarquon": 73, "divisibl": 73, "dernier": 73, "obtenon": 73, "regroupon": 73, "2500": 73, "median": [73, 106], "1f": 73, "axhlin": 73, "0x7f1d715b2860": 73, "observon": 73, "approx": [73, 174], "rappelon": 73, "size_bound": 73, "satisfais": [73, 196], "effort": [73, 179, 183], "stad": 73, "impair": [73, 80, 91, 102, 156, 157, 180, 181, 211], "rajout": 73, "cf": [73, 124, 217], "estimated": 73, "nonzero": 73, "annotat": 73, "xytext": 73, "arrowprop": 73, "arrowstyl": 73, "pr\u00e9conisent": 73, "precis": [73, 124, 135, 175, 210], "consomm": 74, "ji": 74, "random_adjacency_matrix": 74, "remplissag": 74, "e_j": 74, "random_symmetric_adjacency_matrix": 74, "rnd2": 74, "tqdm": [74, 80, 81, 84, 91, 127, 131, 139, 143, 144, 161], "total_nb1": 74, "nb1": 74, "emptyness": 74, "73it": 74, "0000000e": 74, "4408921e": 74, "total_null": 74, "nb_null": 74, "82it": 74, "90it": 74, "connex_component": 74, "total_cnx": 74, "cnx": 74, "ny": [74, 185], "96it": 74, "accumul": [74, 104], "connex_components_indic": 74, "grenouill": 75, "bond": 75, "barreau": 75, "treiz": 75, "saut": [75, 104, 210], "\u00e9paisseur": [75, 116, 204], "ven": [75, 169, 177], "144": 75, "e_": 75, "geqsl": [75, 79, 124, 143, 163], "grenouille2": 75, "g1": [75, 219], "g2": [75, 196], "grenouille3": 75, "pr\u00e9d\u00e9cesseur": [75, 80], "levenshtein": 76, "tron\u00e7on": [76, 79], "distance_meme_longueur": 76, "abcef": 76, "abcde": 76, "mind": [76, 80], "bbb": [76, 187], "distance_alambique": 76, "verlan": 76, "abc": [76, 83, 114, 137, 194, 211], "ac": [76, 179], "distance_alambiquee_levenstein": 76, "ace": 76, "t\u00e2ton": [77, 204], "occas": [77, 179, 185], "na\u00eff": 77, "restraint": 77, "distance1": 77, "imfo": 77, "distance2": 77, "m1_e": 77, "cab": 77, "abcd": [77, 212], "bcdef": 77, "aim": [77, 149, 158, 159, 179, 196], "distance2_verbos": 77, "disent": 77, "pirat": 77, "distance3": 77, "pimfos": 77, "fastid": 77, "convien": 77, "test_dist_equal": 77, "assert": [77, 117, 118, 126, 128, 131, 136, 152, 187, 191, 196, 210], "test_distance1": 77, "test_dist_diff1": 77, "_a": [77, 164], "a_": [77, 80], "test_distance2": 77, "magnif": 77, "test_dist_diff2": 77, "_ab": 77, "ab_": 77, "a_b": 77, "test_distance3": 77, "incroi": 77, "edit_dist": 77, "agraf": 77, "agra": 77, "test_edit_dist": 77, "r\u00e9muner": 77, "r\u00e9numer": 77, "voudr": [77, 105, 138, 179, 180, 196], "edit_distance2": 77, "cmp_char": 77, "test_special": 77, "test_edit_distance2": 77, "agraff": 77, "\u00e9leph": 77, "\u00e9lef": 77, "edit_distance3": 77, "ins_char": 77, "test_edit_distance3": 77, "adjacent": [78, 102, 164], "uuid": [78, 83], "plot_network": 78, "lang": [78, 83, 215], "digraph": [78, 83], "rankd": 78, "lr": 78, "d\u00e9comment": [78, 83], "hdot": [78, 83], "uid": [78, 83], "uuid4": [78, 83], "viz": [78, 83], "div": [78, 83], "svggraph": [78, 83], "getelementbyid": [78, 83], "innerhtml": [78, 83], "Quelle": [78, 104, 127, 137, 162, 174], "f_": 78, "order_same_weight": 78, "mat2": [78, 87, 178, 196], "order_any_weight": 78, "durat": [78, 125], "duract": 78, "new_end": 78, "subarray": 79, "l_1": 79, "l_2": 79, "l_n": 79, "l_k": 79, "max_": [79, 150, 175], "somme_partiel": 79, "plus_grande_sous_l": 79, "im": [79, 204], "jm": 79, "cout": [79, 102, 114], "l_j": 79, "plus_grande_sous_liste_n2": 79, "l_a": 79, "l_i": 79, "k_1": 79, "k_2": 79, "r\u00e9union": 79, "jonction": 79, "plus_grande_sous_liste_nlnn2_r": 79, "ia": 79, "ja": 79, "ib": [79, 107, 108, 196], "jb": 79, "plus_grande_sous_liste_nlnn2": 79, "160": [79, 160], "896": 79, "256": [79, 86, 102, 179, 185, 208], "512": 79, "4608": 79, "leftrightarrow": 79, "ln_2": [79, 95, 148, 173, 189], "4f": 79, "cumul2": 79, "quatriem": [79, 172], "arrier": [79, 141, 196], "l_": 79, "sommemax": 79, "red\u00e9marr": 79, "plus_grande_sous_liste_n": 79, "el": [79, 90, 143, 178, 196, 211], "li100": 79, "565": [79, 107], "134": 79, "binomial": 80, "adja": 80, "networkx": [80, 91], "from_numpy_array": 80, "with_label": 80, "distrib": [80, 111, 112], "successeur": [80, 102], "pr\u00e9decesseur": 80, "partent": [80, 91], "arrivent": 80, "sup\u00e9rieu": 80, "profond": [80, 196], "2_": 80, "jk": 80, "pq": [80, 156, 157], "3_": 80, "adjan": 80, "coloriag": [80, 93, 123, 152], "c_j": 80, "maj": 80, "queu": [80, 217], "\u00e9paiss": 80, "lois": [80, 111, 112, 154, 155], "admettent": 80, "distribution_to_degree_list": 80, "deg": 80, "nh": 80, "random_graph": 80, "distribution_degre": 80, "n_it": [80, 82], "set_descript": [80, 88], "dj": 80, "incomplet": 80, "ndegre": 80, "ncurrent": 80, "376": 80, "28it": 80, "ipykernel_17111": 80, "4037000715": 80, "userwarning": [80, 81, 202], "382": 80, "61it": [80, 81], "r\u00e9pond": [80, 82, 105, 141, 167, 174, 198, 210, 217], "bloqu": [80, 178, 217], "a_t": 80, "voyon": [80, 107, 108, 124, 180], "random_graph_remov": 80, "last_added": 80, "n_removed": 80, "dh": 80, "341": [80, 200], "30it": 80, "distribution_degree_realis": 80, "sumd": 80, "rejet": 80, "d3a98a30": 81, "893f": 81, "47f7": 81, "96c5": 81, "2f4bcaaa0d71": 81, "total_cas_confirm": 81, "total_deces_hopital": 81, "total_deces_ehpad": 81, "total_cas_confirmes_ehpad": 81, "total_cas_possibles_ehpad": 81, "patients_reanim": 81, "patients_hospitalis": 81, "total_patients_guer": 81, "nouveaux_patients_hospitalis": 81, "nouveaux_patients_reanim": 81, "802": 81, "118431": 81, "28826": 81, "1233": 81, "19272": 81, "653050": 81, "756": 81, "803": 81, "118494": 81, "28837": 81, "1213": [81, 91], "18901": 81, "653734": 81, "804": 81, "118508": 81, "28844": 81, "1214": 81, "18935": 81, "653827": 81, "805": 81, "118633": 81, "28845": 81, "1199": 81, "18742": 81, "654775": 81, "900": [81, 110], "806": [81, 113], "118723": 81, "1173": 81, "18290": 81, "655984": 81, "set_yscal": [81, 124], "courag": [81, 141, 179], "rigour": [81, 154, 155, 161], "death": 81, "country": 81, "githubusercontent": 81, "cssegisanddat": 81, "csse_covid_19_dat": 81, "csse_covid_19_time_ser": 81, "time_series_covid19_": 81, "s_global": 81, "eur": 81, "provinc": 81, "tf": 81, "extract_whole_dat": 81, "confirmed": 81, "recovered": 81, "popul": 81, "67e6": 81, "conc": [81, 215], "infected": 81, "saf": 81, "ipykernel_20449": 81, "102400080": 81, "parsed": 81, "individually": 81, "falling": 81, "ensur": 81, "parsing": 81, "consistent": 81, "161407": 81, "38591184": 81, "38429777": 81, "28408816": 81, "161450": 81, "38599330": 81, "38437880": 81, "28400670": 81, "161474": 81, "38606393": 81, "38444919": 81, "28393607": 81, "161501": 81, "38612201": 81, "38450700": 81, "28387799": 81, "161512": 81, "38618509": 81, "38456997": 81, "28381491": 81, "r\u00e9par": 81, "improvis": 81, "correct_ser": 81, "covid_modified": 81, "09it": 81, "342253": 81, "liss": 81, "recoup": [81, 91, 219], "compartimental": 81, "\u00e9pid\u00e9miolog": [81, 119], "contamin": [81, 113], "malad": [81, 179], "guer": [81, 113], "d\u00e9ced": [81, 113], "changent": [81, 161, 204, 208, 211], "dS": [81, 82], "nu": [81, 82, 113, 140], "dr": [81, 82, 163], "transmiss": 81, "plot_simul": 81, "day0": 81, "true_dat": 81, "infect": 81, "coch": [81, 210], "visibil": 81, "tdf": 81, "sob": 81, "iob": 81, "rob": 81, "dob": 81, "s_0": 81, "i_0": 81, "r_0": 81, "s0": 81, "9990": 81, "i0": [81, 101], "r0": 81, "\u00e9voluent": [81, 135, 204], "masqu": [81, 199, 204, 214], "confin": 81, "reconfin": 81, "temp\u00e9ratur": 81, "lisse_mar": 81, "28305367": 81, "1697884": 81, "1640875027069664": 81, "626756310367156": 81, "9857629613918629": 81, "533445387958945": 81, "transitoir": 81, "simulation_cumule": 81, "minimisent": [81, 106], "i_rang": 81, "beta_rang": 81, "mu_rang": 81, "nu_rang": 81, "error_fct": 81, "err_min": 81, "di0": 81, "j_t": 81, "cum": [81, 134], "gras": 81, "240": [81, 104], "sim_opt": 81, "3f": [81, 105], "3g": 81, "3772": 81, "51it": [81, 131], "188": [81, 104], "39it": 81, "mort": [81, 178], "error_norm": 81, "m3": [81, 191, 204], "45it": [81, 91], "aticl": 81, "modified": [81, 141], "contagion": 81, "italy": 81, "estimating": 81, "simulating": 81, "countr": 81, "s_": [81, 162, 163], "beta_t": 81, "incub": 81, "d_": [81, 158], "inconnu": [81, 184, 211], "epidemic": 81, "identifying": 81, "unreported": 81, "inferent": 81, "modelling": 81, "forecasting": 81, "outbreak": 81, "seird": 81, "covidtrack": 81, "pyepidemic": 81, "pandemic": 81, "control": [81, 204], "modcov19": 81, "etrang": [82, 136, 150], "inacessibl": 82, "pann": 82, "ovh": 82, "inaccessibl": [82, 87], "909090909090908": 82, "8909090909090909": 82, "90909091": 82, "89090909": 82, "82883546": 82, "79298272": 82, "18909091": 82, "simulation_bruite": 82, "90629495": 82, "90818313": 82, "0769856": 82, "10853633": 82, "84322669": 82, "77113049": 82, "17022418": 82, "21541865": 82, "sim_bruit": 82, "estimation_coefficient": 82, "645167": 82, "153483": 82, "113224": 82, "prouv": [82, 162], "distance_sim": 82, "1379327480825296": 82, "b0": 82, "m0": 82, "n0": [82, 146, 175], "distance0": 82, "mu0": 82, "nu0": 82, "175492030437819": 82, "21093122422461147": 82, "11141742761811038": 82, "12240477": 82, "1995322": 82, "09668045": 82, "06764482535407212": 82, "0880922396685696": 82, "poem": [83, 140], "arthur": [83, 140], "rimbaud": [83, 140], "voyel": [83, 95, 99, 104, 140], "latent": [83, 140], "corset": [83, 140], "velu": [83, 140], "mouch": [83, 140], "\u00e9clat": [83, 140], "bombillent": [83, 140], "puanteur": [83, 140], "cruel": [83, 140, 179], "golf": [83, 140], "ombre": [83, 140], "candeur": [83, 140], "vapeur": [83, 140], "glaci": [83, 140], "fier": [83, 140], "rois": [83, 140], "frisson": [83, 140], "ombel": [83, 140], "pourpr": [83, 140], "sang": [83, 140, 179], "crach": [83, 140], "rir": [83, 140], "levr": [83, 140], "bel": [83, 140, 204], "coler": [83, 140, 164], "ivress": [83, 140], "p\u00e9nitent": [83, 140], "cycl": [83, 140, 149, 187], "vibr": [83, 140], "divin": [83, 140], "virid": [83, 140], "paix": [83, 140, 164, 179], "p\u00e2t": [83, 140], "sem": [83, 140], "rid": [83, 140], "alchim": [83, 140], "imprim": [83, 140, 217], "front": [83, 140, 217], "studieux": [83, 140], "supr\u00eam": [83, 140, 179], "clairon": [83, 140], "strideur": [83, 140], "\u00e9trang": [83, 140, 179, 196], "silenc": [83, 140, 158, 159], "ange": [83, 140], "omeg": [83, 140], "rayon": [83, 111, 139, 140, 179], "violet": [83, 140], "yeux": [83, 140], "extract_word": [83, 140], "spl": 83, "perf_count": [83, 87, 114, 125, 133, 134, 153, 161, 169, 187, 196], "plus_grand_suffix_commun": 83, "longueur_max": 83, "meilleure_pair": 83, "meilleur_suffix": 83, "pareil": [83, 89, 211], "suffix_map": 83, "\u00e9": [83, 137, 185], "ingr\u00e9dient": 83, "plus_grand_suffix_commun_dictionnair": 83, "debut": [83, 147, 187, 211, 219], "5386918000003789": 83, "17898409999997966": 83, "n_x": 83, "sum_x": 83, "build_tr": [83, 187], "zabc": 83, "\u00ea": 83, "\u00e2": 83, "illisibl": [83, 145, 202, 210, 212, 215], "partiqu": 83, "build_dot": 83, "predecessor": 83, "root_nam": 83, "set2374575491648": 83, "n2374575489600": 83, "e2374575503808": 83, "t2374575329600": 83, "a2374575329984": 83, "l2374575327296": 83, "fin2374494191824": 83, "i2374575817216": 83, "n2374575817280": 83, "e2374575817344": 83, "p2374575817408": 83, "a2374575326656": 83, "t2374575325312": 83, "a2374575330240": 83, "l2374575340416": 83, "c2374575339968": 83, "e2374575595200": 83, "plot_dot": 83, "plus_grand_suffix_commun_dictionnaire_tr": 83, "whole_tr": 83, "23091779999958817": 83, "05081569999947533": 83, "topk_sortall": 84, "topk_idee1ou2": 84, "trich": 84, "d\u00e9brouill": [84, 178], "fairr": 84, "tris": 84, "interstic": 84, "topk_tri_select": 84, "kn": [84, 175], "topk_insert": 84, "topk_fus": 84, "topk": [84, 143], "topk_select_recurs": 84, "topk_select": 84, "pivot_index": 84, "measure_tim": [84, 143, 144], "repeat": [84, 117, 143, 144, 146], "t1": [84, 87, 152, 161, 196], "0023090000031515956": 84, "06701939999766182": 84, "017117299998062663": 84, "0257670000064536": 84, "010535299996263348": 84, "05852940000477247": 84, "perm10000": 84, "006514400003652554": 84, "0134890000044834": 84, "019539000000804663": 84, "041308899999421556": 84, "014250300002458971": 84, "062273499999719206": 84, "perm1000": 84, "501": 84, "71it": [84, 139], "000692": 84, "194126": 84, "003134": 84, "003230": 84, "013448": 84, "015127": 84, "000383": 84, "283472": 84, "001300": 84, "003163": 84, "022354": 84, "010969": 84, "000835": 84, "377026": 84, "001189": 84, "003169": 84, "022742": 84, "024926": 84, "000522": 84, "450699": 84, "001051": 84, "002952": 84, "045683": 84, "038119": 84, "000527": 84, "539852": 84, "001091": 84, "003602": 84, "038593": 84, "026605": 84, "affin": 84, "permn": 84, "70it": 84, "000620": 84, "000124": 84, "000111": 84, "000137": [84, 144], "000411": 84, "000030": [84, 144], "002329": 84, "000275": 84, "000402": 84, "000326": 84, "001340": 84, "000328": 84, "021377": 84, "001635": 84, "005340": 84, "001277": 84, "005500": 84, "005612": 84, "178028": 84, "011507": 84, "034768": 84, "008894": 84, "022889": 84, "066547": 84, "755049": 84, "115708": 84, "361258": 84, "099447": 84, "233724": 84, "paraissent": 84, "n\u00e9glige": [84, 110, 114, 175, 185, 187, 205], "redessin": 85, "distance_vill": 85, "distance_tour": 85, "540451130306862": 85, "dessine_tour": 85, "r\u00e9dig": [85, 196, 211], "ameliore_tour": 85, "transmis": 85, "dist_min": 85, "nb_perm": 85, "nb_it": 85, "extraordinair": [85, 179], "ameliore_tour_renvers": 85, "p0": [85, 168], "spatial": [85, 111, 112, 117], "cdist": [85, 117], "build_permut": 85, "max_dist": 85, "arg_dist": 85, "extrapol": 86, "puissance2k": 86, "sum_k": 86, "a_k": 86, "prod_k": 86, "maxj": 87, "embarrass": 87, "produit_class": 87, "dim1": 87, "dim2": 87, "enquer": 87, "produit_eleg": 87, "k1": 87, "k2": [87, 175], "bigmat": 87, "259": 87, "sonne": 87, "mill": [87, 179], "sabord": 87, "matrice_dicodico": 87, "matrice_dicodico_lc": 87, "song": 87, "produit_elegant_rapid": 87, "produit_elegant_rapide_transform": 87, "mat1": [87, 196], "t2": [87, 94, 139, 152, 161, 196], "dicodico": 87, "dico": [87, 92, 102, 194, 205, 212], "008358499999303604": 87, "10761350000029779": 87, "2080854999985604": 87, "011978200000157813": 87, "28018710000105784": 87, "28202239999882295": 87, "06322960000034072": 87, "7310262999999395": 87, "21729559999948833": 87, "04302850000021863": 87, "25215659999958007": 87, "06354410000130883": 87, "24071189999813214": 87, "08784929999819724": 87, "23844240000107675": 87, "13118289999692934": 87, "2613874999988184": 87, "21261740000045393": 87, "2777879999994184": 87, "22135960000014165": 87, "2984610000021348": 87, "27173079999920446": 87, "28927499999917927": 87, "embl\u00e9mat": 88, "20256988": 88, "27603738": 88, "77763596": 88, "50108287": 88, "07482647": 88, "60880805": 88, "56075455": 88, "9637854": 88, "79735982": 88, "32773718": 88, "65017942": 88, "96827692": 88, "dy": [88, 89, 111, 112, 159], "090536785820115": 88, "plot_point": 88, "impatient": 88, "0it": 88, "720it": 88, "89it": 88, "optimisation_retourn": 88, "random_cit": 89, "39190158": 89, "70104769": 89, "865672": 89, "22913836": 89, "65596723": 89, "32503514": 89, "distance_boucl": 89, "8284271247461903": 89, "513": 89, "slowest": [89, 153], "took": [89, 153], "fastest": [89, 153], "intermediat": 89, "being": [89, 166, 167, 214], "cached": [89, 146], "253": [89, 108], "faveur": 89, "best_cit": 89, "best_dist": 89, "p_cit": 89, "opt_cit": 89, "optimise_random": 89, "n_perm": 89, "pout": 89, "retournement1": 89, "d_av": 89, "og": 89, "siecl": 90, "tiret": 90, "330px": 90, "international_morse_cod": 90, "svg": [90, 146], "mn\u00e9motechn": 90, "d\u00e9codag": [90, 208], "r\u00e9duis": 90, "rit": [90, 212], "man": 90, "who": 90, "laugh": 90, "codingam": 90, "transcr": [90, 196], "eee": 90, "ooo": 90, "eel": 90, "oo": 90, "oooo": 90, "ooooo": 90, "word2mors": 90, "word": [90, 187], "lison": 90, "ooooooo": 90, "ambigu": [90, 129, 196, 211], "deven": [90, 104, 114, 211, 217], "rev_alph": 90, "reg_exp": 90, "hyperprob": 90, "souvien": [90, 178, 179], "dec_exp": 90, "suffir": [90, 132, 134], "decode_mors": 90, "een": 90, "eeee": 90, "eb": 90, "DEE": 90, "gn": 90, "decode_morse_longer_first": 90, "flemm": 90, "plu\u00f4t": 90, "dr\u00f4l": 90, "patron": [90, 179], "ee": 90, "decompose_mors": 90, "letter": 90, "new_opt": 90, "prefix": [90, 194, 211], "startswith": [90, 118, 194, 211], "xa": 90, "dk": [90, 104], "dnt": 90, "dta": 90, "dtet": 90, "na": [90, 110, 127, 129, 140], "naet": 90, "nek": 90, "nent": 90, "netet": 90, "nrt": 90, "tea": [90, 186], "teaet": 90, "teek": 90, "teent": 90, "teet": 90, "teetet": 90, "tert": 90, "tft": 90, "tik": 90, "tint": [90, 185], "tit": 90, "titet": 90, "TUA": 90, "tuet": 90, "xet": 90, "explos": 90, "d\u00e9duis": [90, 107, 160], "t\u00e9l\u00e9graph": 90, "initi": [91, 179], "trajet": 91, "parcourent": [91, 150], "d\u00e9marrent": 91, "posti": 91, "inspect": 91, "already": [91, 146], "downloaded": 91, "146": [91, 138, 141, 217], "carrefour": 91, "873361200000005": 91, "3236609": 91, "8730454": 91, "3235788": 91, "compren": 91, "03562501840766763": 91, "8741849": 91, "3239352": 91, "0937624742737696": 91, "p\u00f4l": 91, "cart\u00e9sien": [91, 182, 183, 210], "porti": 91, "exp\u00e9rimental": 91, "premier": [91, 212], "ais": [91, 138, 196, 210], "id\u00e9al": [91, 115], "interdit": [91, 180, 181, 199, 211], "rendent": [91, 168, 202], "verr": 91, "sept": [91, 211], "pont": 91, "konigsberg": 91, "r\u00e9pondu": [91, 110, 190], "repart": 91, "nx": 91, "add_edg": 91, "rejoign": 91, "nb_edg": 91, "parit": [91, 102, 180], "tien": [91, 179], "r\u00e9duisent": 91, "descendr": 91, "d\u00e9doubl": 91, "edges_from": 91, "total_possible_edg": 91, "fromi2": 91, "new_": 91, "new_d": 91, "535221": 91, "778": 91, "1138": 91, "21316": 91, "538415": 91, "1228": 91, "2258": 91, "545218": 91, "1717": 91, "3748": 91, "557001": 91, "2118": 91, "5500": 91, "574194": 91, "2442": [91, 141], "7470": 91, "602050": 91, "2726": 91, "9624": 91, "642132": 91, "2900": 91, "11810": 91, "3258634178614415": 91, "admissibl": 91, "dedan": [91, 139, 188], "d\u00e9fil": [91, 139], "build_possibl": 91, "i1": [91, 102, 196, 198], "i2": [91, 102, 196, 198], "009382623381497467": 91, "5290": 91, "248170388440608": 91, "initc": 91, "undesired": 91, "912505": 91, "400": [91, 110, 138, 158, 159, 175], "928070": 91, "938916": 91, "1627": [91, 113], "2244": 91, "957763": 91, "1676": 91, "3644": 91, "976823": 91, "1341": 91, "4989": 91, "020697": 91, "833": 91, "5977": 91, "042415": 91, "427": 91, "6489": 91, "062800": 91, "187": [91, 140], "6716": 91, "088837": 91, "6815": 91, "112715": 91, "6856": 91, "138552": 91, "6874": 91, "168428": 91, "197202": 91, "relient": [91, 158, 159], "refair": [91, 165], "122002169199727": 91, "661698849016764": 91, "Mon": 91, "combl": 91, "coinc": [91, 217], "risque": 91, "pourait": 91, "probl\u00e8mat": 91, "making": 91, "directed": 91, "334": [91, 160], "1511": 91, "eulerian_path": 91, "hierholz": 91, "odd": 91, "1327": 91, "10585": 91, "1383": 91, "1423": 91, "133": 91, "1470": 91, "168": [91, 161], "1523": 91, "1589": 91, "1655": 91, "219": [91, 104, 160], "1722": 91, "232": [91, 104, 143, 150], "1796": 91, "1863": 91, "207": [91, 104, 113], "1919": 91, "164": [91, 161], "2003": [91, 217], "2027": 91, "2038": 91, "2039": 91, "2040": 91, "0016168196457467584": 91, "002915457386378182": 91, "004107201738406607": 91, "138": 91, "005201454147672404": 91, "010775423696863674": 91, "street": 91, "016229655482986917": 91, "08264740074165475": 91, "026299568900906643": 91, "jump": 91, "08193964999861593": 91, "provient": [91, 204, 210, 212, 214], "d\u00e9patouill": 91, "entrant": 91, "ramen": 91, "c\u00e9sar": [92, 172, 173], "babbag": 92, "cons\u00e9cut": [92, 114, 131, 176, 219], "apparaiss": [92, 179], "cryptanalys": 92, "diviseur": [92, 210], "d\u00e9crypt": [92, 156, 157], "code_vigener": [92, 172, 173], "message_cod": [92, 172, 173], "ord": [92, 97, 98, 137, 172, 173, 210], "chr": [92, 97, 137, 172, 173, 186, 187, 210], "decodevigener": 92, "codevigener": 92, "pgcd": 92, "decodevigenerelongueurcl": 92, "DES": [92, 179], "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd": 92, "egv": 92, "resultat": [92, 102, 204], "etre": [92, 179], "decodevigenerecl": 92, "d\u00e9cod": [92, 118, 119, 173], "2l": 92, "3l": 92, "cassevigener": 92, "condamn": 92, "gutenberg": [92, 184], "hugo_dernier_jour_condamn": 92, "218451": 92, "ind\u00e9sir": [92, 211, 219], "7000": 92, "cle_cod": 92, "td_note_2006": 93, "td_note_2007": 93, "td_note_2008": 93, "td_note_2009": 93, "td_note_2010": 93, "td_note_2010_rattrap": 93, "td_note_2011": 93, "td_note_2012": 93, "td_note_2013": 93, "td_note_2013_rattrap": 93, "td_note_2014": 93, "td_note_2015": 93, "td_note_2016": 93, "td_note_2017": 93, "broken": 93, "td_note_2018": 93, "td_note_2019": 93, "td_note_2020": 93, "td_note_2021": 93, "td_note_2022": 93, "td_note_2022_rattrapag": 93, "td_note_2022_rattrapage2": 93, "td_note_2023": 93, "1a": [93, 164, 165], "novembr": 93, "rattrapag": 93, "oral": 93, "f\u00e9vri": 93, "octobr": [93, 192, 195], "2021": 93, "septembr": [93, 179], "mul2014": 94, "9899924966004454": [94, 178, 179], "ecir": 94, "ex": [94, 109, 110, 172], "kayak": [94, 95], "kakak": 94, "aill": 94, "contient_": 94, "2i": [94, 143, 210], "12093467645909634": 94, "est_tri": [94, 139], "est_trie_nocopy": 94, "1000000000": [94, 199], "pas_de_voyel": 95, "aeiouy": [95, 99, 104], "bonjour": 95, "revoir": [95, 204], "bnjr": 95, "rvr": 95, "mat_dict": 95, "9289682539682538": 95, "581": 95, "4676254832484": 95, "19981": 95, "39980": 95, "40000": 95, "59978": 95, "60000": 95, "79979": 95, "80000": 95, "119977": 95, "120000": 95, "70000": 95, "139977": 95, "140000": [95, 104], "159978": 95, "160000": [95, 104], "90000": 95, "179974": 95, "180000": [95, 104], "abcdef": 95, "1er": 95, "3em": 95, "afbecd": 95, "kkaay": 95, "strang": 95, "deviennent": [95, 178, 202], "dictionnaire_depart": 95, "dictionnaire_retourn": 95, "it\u00e9reur": 95, "dict_item": [95, 150, 211], "input": [95, 96, 98, 99, 104, 106, 114, 199, 200, 210], "68beadeaff45": 95, "0x0000000006f305e8": 95, "86215c660090": 95, "subscript": 95, "7191411125634257": 95, "ii": [95, 146, 191], "3177321667311": 95, "2036": 95, "4083": 95, "4096": 95, "8178": 95, "8192": 95, "16369": 95, "16384": [95, 211], "32752": 95, "32768": 95, "65519": 95, "65536": 95, "131054": 95, "131072": 95, "262125": 95, "262144": 95, "524268": 95, "524288": 95, "nameerror": [96, 99, 163, 196, 199, 210], "9f18cbb91429": 96, "ma_fonct": 96, "dehor": [96, 124, 152, 172, 188, 196], "expliciti": 96, "ext": [96, 219], "495000": 96, "42400f095e8c": 96, "unsupported": [96, 196], "666": 96, "655479e1d45c": 96, "assignment": [96, 99, 211], "immut": [96, 187, 188, 209], "ma_list": 96, "d3addcc3bdbd": 96, "indexerror": [96, 98, 99, 196, 199, 210], "1eb96223c6dd": 96, "due": 96, "5607f3ee5543": 96, "\u00e9toil": [96, 217], "26184474654812057": 96, "star": 96, "29749469599416334": 96, "305837286201697": 96, "make_squar": 97, "alic": 97, "bob": 97, "Ma": [97, 178], "myster": 97, "u_": [97, 196], "conjectur": [97, 166, 167], "syracus": 97, "6893f4ac9402": 98, "58b7566d9294": 98, "d\u00e9vient": 98, "2f84bd962211": 98, "elu": 98, "somme_caracter": 98, "225cea37f121": 98, "implicitly": 98, "un_sur_d": 98, "pto": 98, "plant": [99, 199], "systemt": 99, "ced82ea8013": 99, "b85136f11268": 99, "maj_voy": 99, "ambig\u00fc": [99, 131], "produis": [99, 104, 210], "6b8ba89606bb": 99, "unhash": [99, 211], "accolad": [99, 211], "pyythoon": 99, "double_voy": 99, "populating": [100, 101, 104], "interact": [100, 101, 104], "namespac": [100, 101, 104], "construit_m": [100, 101, 105], "pointij": [100, 101], "th": [100, 101, 107, 108, 138, 141, 149], "phas": [100, 101, 103, 212], "tinc": [100, 101], "dessin_m": [100, 101], "_subplot": [100, 101], "axessubplot": [100, 101], "0x10128a58": 100, "0x9491390": 100, "0x87cef28": 101, "voisins_a_valeurs_null": 101, "tous_voisins_a_valeurs_null": 101, "liste_point": 101, "fonction_coloriag": 101, "j0": [101, 144], "\u00e9tag": [101, 118], "acolori": 101, "doublon": [101, 162], "surface_colorie": 101, "fonction_coloriage_1000": 101, "0x14675b00": 101, "3258": 101, "0x1bc6a630": 101, "q1": [102, 187], "q2": [102, 187], "ajoute_point": 102, "q3": 102, "adj": 102, "q4": 102, "successeurs_dico": 102, "q5": 102, "suites_chemin": 102, "q6": 102, "chemins2": 102, "q7": 102, "q8": 102, "adjacence8": 102, "che": 102, "garde_3_el": 102, "word2dict": 102, "pyt": 102, "pyth": 102, "pytho": 102, "two_words2dict": 102, "mot1": 102, "mot2": 102, "piton": 102, "pito": 102, "pit": 102, "add_edge_hv": 102, "edge1": 102, "j1": [102, 196], "edge2": 102, "j2": [102, 196], "2pq": 102, "ajoute_diagonal": 102, "effac": [102, 210, 212, 217], "loop_on_edg": 102, "misejour": 102, "plus_court_chemin": 102, "q9": 102, "trie_parit": 102, "carreau": 103, "rx": 104, "0404": 104, "0612080000000002": 104, "mensuel": [104, 180], "capital": 104, "rembours": 104, "mensual": 104, "decompose_mensualit": 104, "029": 104, "570": [104, 108], "6769646931234": 104, "429": [104, 147], "32303530687665": 104, "emprunteur": 104, "int\u00earet": 104, "km": [104, 111, 112], "r\u00e9sulat": 104, "mensualit": 104, "666666666666668": 104, "459": 104, "63104825975415": 104, "consacr": [104, 217], "12y": 104, "somme_maximal": 104, "183000": 104, "somme_maximale_step": 104, "150000": 104, "186": [104, 161], "170000": 104, "236": 104, "190000": 104, "254": [104, 146], "139000": 104, "141000": 104, "142000": 104, "174": [104, 160], "143000": 104, "144000": 104, "145000": 104, "146000": 104, "147000": 104, "182": [104, 140, 161], "148000": 104, "183": 104, "149000": 104, "185": 104, "151000": 104, "152000": 104, "153000": 104, "154000": 104, "155000": 104, "194": 104, "156000": 104, "196": [104, 161, 163, 200], "157000": 104, "158000": 104, "159000": 104, "201": 104, "161000": 104, "162000": 104, "206": 104, "163000": 104, "164000": 104, "209": [104, 217], "165000": 104, "210": [104, 113], "166000": 104, "212": [104, 160, 161], "167000": 104, "214": [104, 160], "168000": 104, "215": 104, "169000": 104, "217": [104, 160], "171000": 104, "172000": 104, "173000": 104, "224": 104, "174000": 104, "226": 104, "175000": 104, "176000": 104, "177000": 104, "231": 104, "178000": 104, "179000": 104, "181000": 104, "238": 104, "182000": 104, "somme_maximale_mois_step": 104, "l0": [104, 196], "175312": 104, "228": 104, "312": 104, "175625": 104, "175937": 104, "176250": 104, "176562": 104, "230": [104, 196], "176875": 104, "177187": 104, "177500": 104, "177812": 104, "178125": 104, "178437": 104, "178750": 104, "179062": 104, "179375": 104, "179687": 104, "180312": 104, "237": 104, "180625": 104, "180937": 104, "181250": 104, "181562": 104, "181875": 104, "182187": 104, "parisien": 104, "sl": [104, 188], "apprtement": 104, "\u00e9conomis": 104, "econom": 104, "eco": 104, "nbm": 104, "015": [104, 145], "25862": 104, "65218705509": 104, "carri": 104, "professionnel": 104, "metr": [104, 163], "parisen": 104, "salair": [104, 179], "exam2016_valu": 104, "bascul": 104, "8000": 104, "offrir": 104, "surface_max": 104, "faill": [104, 211, 212], "a40a30": 104, "2600": 104, "inflat": [104, 180], "egg": [104, 149], "somme_maximale_dicho": 104, "k_max": 104, "182199": 104, "99817640134": 104, "carnet": 104, "importun": 104, "impromptus": 104, "conson": 104, "adel": 104, "gerard": 104, "transforme_numero": 104, "prenom": [104, 188, 205, 210, 215], "numero": [104, 204], "0664342267": 104, "0646342267": 104, "0660342467": 104, "oui": [104, 110, 169, 196, 210], "transforme_numero_enver": 104, "affront": 104, "9b3e94b6565": 104, "unorder": 104, "comparison": 104, "epsilon_": [105, 106, 109, 110], "partial": [105, 106], "generate_xy": 105, "996890181837922": 105, "8750295096923186": 105, "264526460045277": 105, "324063943726332": 105, "718648422500299": 105, "052469543647318": 105, "442689562115705": 105, "861870829036456": 105, "13558433730903707": 105, "5754835901808546": 105, "59230695209076": 105, "6209924216651825": 105, "610357428256408": 105, "3202733390571373": 105, "678403330137792": 105, "96766236219644": 105, "427259745518597": 105, "385862058140737": 105, "273956381823456": 105, "938275166261537": 105, "calcule_exyxyx2": 105, "sx": 105, "sxy": 105, "sx2": 105, "523441805914873": 105, "850511796328412": 105, "88928454527569": 105, "98854258182378": 105, "calcule_ab": 105, "5446995618974346": 105, "859128128176218": 105, "generate_caty": 105, "cat": 105, "132157444058703": 105, "088324149707968": 105, "16315983779393228": 105, "9717657424738734": 105, "843197432779423": 105, "7204386278807904": 105, "89226869979884": 105, "16605748011543708": 105, "02903894820027486": 105, "5787816483863786": 105, "num\u00e9ros": [105, 164, 212], "numero_cat": 105, "ic": 105, "extra": [105, 211], "convert_numpy": 105, "mc": 105, "15485572": 105, "37882494": 105, "37124634": 105, "77476221": 105, "03305199": 105, "92499253": 105, "14818418": 105, "09988478": 105, "yp": [105, 161], "multinomial": [105, 123], "0084452843428675": 105, "155449750270483": 105, "1132607428792447": 105, "897729973062269": 105, "7637316114791164": 105, "566787193134299": 105, "848567708215508": 105, "722503065860707": 105, "8043492141543047": 105, "675781652825997": 105, "histogram_cat": 105, "moyenne_cat": 105, "69914235934335": 105, "4591978296957873": 105, "080382539688736": 105, "induis": 105, "z_i": [105, 106], "obs2": [105, 138], "7763568394002505e": 105, "bigm": 105, "00844528": 105, "08038254": 105, "07193726": 105, "15544975": 105, "45919783": 105, "69625192": 105, "11326074": 105, "65406291": 105, "89772997": 105, "81734743": 105, "76373161": 105, "69546622": 105, "cov": [105, 154, 155], "62221004e": 105, "56972711e": 105, "24829301e": 105, "53176124e": 105, "77901369e": 105, "00966261e": 105, "92890933e": 105, "54535166e": 105, "40725030e": 105, "24510807e": 105, "66666667e": 105, "77777778e": 105, "88888889e": 105, "applymap": 105, "697": 105, "525": 105, "532": 105, "010": [105, 118, 147], "267": 105, "178": [105, 147], "089": 105, "w_i": [105, 106], "obs3": 105, "829591905722086": 105, "2193824894893863": 105, "calcule_erreur": 105, "4723463712054069": 105, "100975199731273": 105, "modal": 105, "categorical": 105, "outill": 105, "regress": [105, 124], "ensemble_aleatoir": 106, "x_m": 106, "regression_lineair": 106, "00144835": 106, "matrice_diagonal": 106, "w_1": [106, 164, 165], "w_n": [106, 164, 165], "beta_": 106, "wx": 106, "wy": 106, "regression_lineaire_pondere": 106, "xt": 106, "01427573": 106, "reciprocal": 106, "calcule_z": 106, "01538305e": 106, "88235294e": 106, "32558140e": 106, "27272727e": 106, "53846154e": 106, "13636364e": 106, "05263158e": 106, "8971776057001": 106, "09487215": 106, "8229016016727": 106, "16379991": 106, "31983967417062": 106, "73034639": 106, "39132855434099": 106, "15204012": 106, "24844521352179": 106, "10443138": 106, "10481587527799": 106, "05258271": 106, "0856692693878": 106, "04297748": 106, "08332794594425": 106, "04131809": 106, "0800296132712": 106, "03867545": 106, "07493795090468": 106, "03459599": 106, "136": 106, "1726": 106, "6000000000004": 106, "1168": 106, "2374836735025": 106, "61874184": 106, "1163": 106, "7683647305184": 106, "38418237": 106, "1161": 106, "75688683": 106, "iteratively": 106, "reweighted": 106, "reprenon": [106, 125], "e_2": 106, "retomb": 106, "ressort": 106, "minor": 106, "atteign": 106, "0465": 106, "posent": [106, 196], "matmul": 106, "mismatch": [106, 146], "gufunc": 106, "signatur": 106, "escali": [107, 108], "0x1f893f9e518": 107, "014962888038782651": 107, "020462778257442693": 107, "022310859639508962": 107, "03078728731371605": 107, "03153252863972433": 107, "somme_diff": [107, 108], "y_k": [107, 108], "476": [107, 147], "2380000000092": 107, "56022222223197": 107, "distance_list": [107, 108], "list_x": [107, 108], "list_y": [107, 108], "custom": [107, 113], "494": 107, "7982222222412": 107, "711": 107, "6476814159435": 107, "552": [107, 108], "0x1f893ea57b8": 107, "reproductibl": 107, "618": 107, "0710615624871": 107, "0x1f8943ece80": 107, "242": 107, "somme_diff_ab": 107, "difference_ab": 107, "optimise_ab": [107, 108], "recalcul": [107, 108, 175], "histogramme_y": 107, "somme_diff_histogramm": 107, "optimise_rapid": [107, 108], "4096814159292": 107, "40968141593424": 107, "contiendront": 107, "fer": [107, 172, 179, 180, 196, 204, 211], "0x1f8944d3ba8": 107, "nuage2": 107, "0x1c0e33655f8": 108, "15754": 108, "105018618644": 108, "19898": 108, "600443365925": 108, "6383487080093": 108, "553": [108, 143], "2184": 108, "8079894060775": 108, "0x1c0e4c6f208": 108, "5154656398129": 108, "789": [108, 200], "156": [108, 134, 175], "7106930739271": 108, "0x1c0e4c90940": 108, "946": 108, "grav": 108, "delta_": 108, "782": 108, "somme_diff2": 108, "difference2": 108, "optimise2": 108, "628": 108, "y_2": 108, "y2_1": 108, "y2_2": 108, "13082": 108, "574312018376": 108, "574312018447": 108, "random_mat": [109, 110], "21542897": 109, "02478399": 109, "89552004": 109, "24733264": 109, "393163": 109, "40164738": 109, "32997878": 109, "70660631": 109, "20765567": 109, "43301488": 109, "m_1": [109, 110, 114], "build_m1": [109, 110], "26184685": 109, "41751593": 109, "53354327": 109, "34849608": 109, "96298222": 109, "51815696": 109, "58374784": 109, "71569523": 109, "12326482": 109, "remis": [109, 110, 204], "v_x": [109, 110], "v_y": [109, 110], "mean_no_nan": [109, 110], "05543522": 109, "0564421": 109, "nanmean": [109, 110], "build_m2": [109, 110], "entourent": 109, "m_3": [109, 110], "fill_column": 109, "col": [109, 110, 196], "nlin": 109, "argsort": 109, "reverse_ord": 109, "bmat": 109, "build_m3": [109, 110], "18717541": 109, "d3": [109, 110, 137], "115": [109, 211], "16303767944946": 109, "990990757306854": 109, "calcul_norm": 109, "puc": [109, 110], "oreil": [109, 110], "experient": [109, 110], "repetit": [109, 110], "25531314": 109, "070392": 109, "57432808": 109, "73422968": 109, "43834865": 109, "07553875": 109, "49648148": 109, "11340377": 109, "116": [109, 210], "28344822": 109, "90363643": 109, "90465816": 109, "88595361": 109, "117": [109, 145, 146, 155, 160], "28824424": 109, "05673836": 109, "37972659": 109, "28703801": 109, "97835736": 109, "49136146": 109, "70723528": 109, "34848088": 109, "10112512": 109, "1306255": 109, "94022724": 109, "91916954": 109, "96721215": 109, "14121786": 109, "35629971": 109, "99870181": 109, "48138722": 109, "00467304": 109, "ratio2": 109, "nerreur": [109, 110], "build_m3_just1": 109, "imin": 109, "imax": 109, "pr\u00e9alabl": [109, 164, 211, 212], "corrcoef": [109, 110], "495": [109, 110], "979253": 109, "308262": 109, "616462": 109, "496": [109, 110], "980323": 109, "790158": 109, "667422": 109, "497": [109, 110], "977415": 109, "050925": 109, "430873": 109, "498": [109, 110, 200, 211], "980746": 109, "885168": 109, "995820": 109, "978955": 109, "935248": 109, "137125": 109, "56987627": 110, "87585938": 110, "21230699": 110, "85706677": 110, "32971056": 110, "31614371": 110, "99469359": 110, "63550262": 110, "90844194": 110, "84040783": 110, "48750338": 110, "92138266": 110, "59978536": 110, "22258934": 110, "72143302": 110, "02229479": 110, "52222862": 110, "1157862": 110, "97598417": 110, "01928312": 110, "09388639": 110, "plus_proch": 110, "colnan": 110, "plus_proche_rapid": 110, "amin": 110, "399": 110, "83806507": 110, "88020645836853": 110, "054794671768933": 110, "9707": 110, "2287": 110, "93113166": 110, "65407502": 110, "59161999": 110, "20763444": 110, "36123306": 110, "49474066": 110, "20767715": 110, "72341549": 110, "99591576": 110, "28602503": 110, "35006845": 110, "18103292": 110, "775306": 110, "15330721": 110, "44248685": 110, "80699951": 110, "70774305": 110, "74452936": 110, "59144759": 110, "22093401": 110, "35913762": 110, "46902292": 110, "02940671": 110, "50112628": 110, "06988804": 110, "66400287": 110, "02826212": 110, "6163169": 110, "98007237": 110, "7964768": 110, "978472": 110, "787724": 110, "693286": 110, "980944": 110, "399139": 110, "579552": 110, "979960": 110, "064428": 110, "893382": 110, "977117": 110, "492200": 110, "140280": 110, "981207": 110, "797778": 110, "785862": 110, "rond": [111, 182], "23606797749979": [111, 210], "585786437626905": 111, "04987562112089": 111, "04023026006364461": 111, "613278941761477": 111, "polair": [111, 210], "table_alea_pol": 111, "2697993898932539": 111, "07781479211233774": 111, "104239515207136": 111, "7109081402403072": 111, "46932352351540807": 111, "3259610442266929": 111, "1743368223886739": 111, "2821629999494295": 111, "skip_": [111, 112], "list_tabl": [111, 112], "7403604958859722": 111, "mur": [111, 112, 164], "151393678876878": 111, "0883943109284333": 111, "2251498896276685": 111, "9591970274173125": 111, "8759281350069976": 111, "8362221630472657": 111, "7566611650530053": 111, "0002849316792242": 111, "5208215962264875": 111, "537577072452744": 111, "650373925673775": 111, "339568894819979": 111, "31652883529303466": 111, "256221251336387": 111, "diametr": 111, "5565818929001787": 111, "05896867240161785": 111, "5288969098327476": 111, "28733719348942466": 111, "6110699282390006": 111, "32241732345580165": 111, "14909553247181195": 111, "9356539992681199": 111, "026230694145464417": 111, "2908024901550055": 111, "4975323234658624": 111, "06918255935350293": 111, "60937258121247": 111, "16579629631884596": 111, "22654870937824634": 111, "12601838486539685": 111, "651232619461013": 111, "05440550117493803": 111, "25693188063963546": 111, "044795815889184576": 111, "07316443943516515": 111, "8533292769508105": 111, "0525413549133239": 111, "add_artist": [111, 112], "position": [111, 112, 204], "hexagonal": [111, 182, 183], "spiral": [111, 112], "improve_distrib": [111, 112], "pjp": [111, 112], "best_sol": [111, 112], "351": [111, 140], "16110855450954664": 111, "13158100390586172": 111, "2384176552949989": 111, "218691822411302": 111, "19838094003303594": 111, "2162723387696761": 111, "20826241454101815": 111, "350": 111, "2094900548253301": 111, "diagramm": [111, 112], "triangul": 111, "delaunay": 111, "voronoi": [111, 112], "voronoi_plot_2d": [111, 112], "vor": [111, 112], "triplot": 111, "simplic": 111, "points2": [111, 112], "vor2": [111, 112], "dela2": 111, "triangl": [111, 112, 180, 183], "\u00e9quilat\u00e9ral": [111, 112, 183], "peux": [111, 112], "points_in_circl": 111, "n_cluster": [111, 112], "copy_x": [111, 112], "n_in": [111, 112], "n_job": [111, 112], "precompute_dist": [111, 112], "random_stat": [111, 112], "tol": [111, 112], "cluster_centers_": [111, 112], "distance_n_t": [111, 112], "22015129672480682": 111, "13834146640009876": 111, "mixtur": [111, 112], "gaussianmixtur": [111, 112], "gau": [111, 112], "means_": [111, 112], "gaussian": [111, 112], "21874003784217044": 111, "2c": 112, "908190224838399": 112, "7798369055014547": 112, "6047310701361788": 112, "538160002945912": 112, "7983390011407794": 112, "6871544213644984": 112, "4887075948495667": 112, "511831256978005": 112, "1962115931817596": 112, "6710676955082597": 112, "8642968594855169": 112, "32893230449174": 112, "500463237472049": 112, "1547646758902923": 112, "7606012466424747": 112, "019429938832147": 112, "6514056477386534": 112, "596586600954664": 112, "05123812953078399": 112, "05320587377518926": 112, "37467460315675805": 112, "4937702081221422": 112, "3485943522613466": 112, "6259118658008394": 112, "1764558984440392": 112, "6004143527243244": 112, "4008125902558497": 112, "052940751769248395": 112, "547095264138868": 112, "7525281574947777": 112, "6243952889602158": 112, "2784959002399452": 112, "16893417347025785": 112, "15965080092875694": 112, "5866949933059173": 112, "6062900542195173": 112, "43564615941411566": 112, "26135901810381923": 112, "2792244176019283": 112, "7961649730497629": 112, "28673576049151195": 112, "08784118387851514": 112, "2840288333247212": 112, "7893555701617381": 112, "6299236074366998": 112, "19575062032543844": 112, "facecolor": 112, "rectangulair": 112, "07797442236028274": 112, "17084871553555847": 112, "16055223380264586": 112, "22481137276979984": 112, "points_in_rectangl": 112, "19622641509433936": 112, "2016527778991591": 112, "14695957901204992": 112, "covid": [113, 119], "435": 113, "2322": 113, "642": 113, "3128": 113, "3580": 113, "1041": 113, "4188": 113, "1251": 113, "695": 113, "452": 113, "608": 113, "1104": 113, "1105": 113, "1106": [113, 147], "1107": 113, "1108": 113, "erron": [113, 114, 125, 199, 210], "donnees_artificiel": 113, "dayofyear": 113, "examen2021": 113, "dure": [113, 125], "nt": [113, 214], "98965342710248": 113, "lifelin": 113, "kaplanmeierfitt": 113, "kmf": 113, "portail": 113, "propagation_n": 113, "propagation_vaccin": 113, "propagation_n_vaccin": 113, "prop": 113, "immunis": 113, "mesure_temps_fonct": 114, "10280692000000005": 114, "bc": 114, "189998290": 114, "18042000": 114, "009560690999999987": 114, "009846866999999992": 114, "001004321000000008": 114, "n_op": 114, "m1_shap": 114, "m2_shap": 114, "185998326": 114, "n_ops_3": 114, "sh1": 114, "sh2": 114, "sh3": 114, "m1_m2m3": 114, "m1m2_m3": 114, "36084000": 114, "testing": [114, 117, 146, 193], "assert_almost_equal": [114, 146, 193], "produit3": 114, "0011657070000000048": 114, "0011010209999999887": 114, "n_ops_4": 114, "sh4": 114, "m1_m2m3m4": 114, "m1m2_m3m4": 114, "m1m2m3_m4": 114, "11331640": 114, "produit4": 114, "000988687999999982": 114, "010446371000000027": 114, "008082993999999956": 114, "0008713240000000155": 114, "0009054390000000013": 114, "m_n": 114, "mm_i": 114, "verront": 114, "n_ops_n": 114, "unexpected": [114, 126, 128, 146], "best_cost": 114, "best_pos": 114, "product_n": 114, "bot": 114, "0009734980000000349": 114, "0009873739999999031": 114, "m5": [114, 204], "9697854": 114, "n_ops_n_opt": 114, "product_n_opt": 114, "0010903469999999516": 114, "0009383259999999893": 114, "01018160299999991": 114, "calcu": 114, "surface_br": 115, "brique_optimal": 115, "surf": 115, "additionnel": 115, "brique_optimale_surplus": 115, "4471428571428575": 115, "4285714285714286": 115, "producteur": 115, "marchandis": 115, "surface_brique2": 115, "brique_optimale_surplus_deux_litr": 115, "surf1": 115, "surf2": 115, "6938095238095245": 115, "7857142857142858": 115, "envoi": [115, 141, 147, 168, 196, 199, 204, 210, 212, 217], "maxxy": 116, "seg": 116, "tree3": 116, "rl": 116, "tree_recurs": 116, "level": [116, 196, 210], "all_seg": 116, "iter_seg": 116, "new_seg": 116, "tree3_al": 116, "re_rnd": 116, "rl_rnd": 116, "a3": [116, 169], "tree_recursive_al": 116, "tirage_al": 117, "n_ru": 117, "n_med": 117, "07629544": 117, "9432004": 117, "52035232": 117, "47051663": 117, "89432851": 117, "07652123": 117, "01653439": 117, "99436816": 117, "1499065": 117, "10758634": 117, "29317605": 117, "76729661": 117, "97237465": 117, "25573414": 117, "60399214": 117, "72086801": 117, "76951744": 117, "75725811": 117, "6663647": 117, "92848284": 117, "07308657": 117, "11122628": 117, "92539686": 117, "48536534": 117, "43820312": 117, "26151317": 117, "74683167": 117, "40646889": 117, "92033983": 117, "88312987": 117, "emp\u00each": [117, 132, 208, 210, 211, 217], "83198031": 117, "96466894": 117, "77179962": 117, "85889438": 117, "8461793": 117, "57370393": 117, "40531662": 117, "22456834": 117, "23536145": 117, "57466486": 117, "82197491": 117, "41002286": 117, "49221173": 117, "36141496": 117, "80702793": 117, "88495069": 117, "04168846": 117, "84550633": 117, "93752849": 117, "91062519": 117, "07690611": 117, "86261363": 117, "32681556": 117, "66757055": 117, "0931767": 117, "69200264": 117, "69223434": 117, "52616512": 117, "57965512": 117, "63777092": 117, "91082466": 117, "23438729": 117, "53420279": 117, "27127587": 117, "62954985": 117, "80840816": 117, "39845012": 117, "48835731": 117, "34532585": 117, "3555345": 117, "94993319": 117, "31340719": 117, "59626523": 117, "351522": 117, "19644616": 117, "00989466": 117, "51327456": 117, "70491577": 117, "52817942": 117, "25799275": 117, "assert_allclos": 117, "test_dist": 117, "tolist": [117, 131, 146], "nm": [117, 175], "plus_proche_medecin": 117, "p_min": 117, "p_max": 117, "floor": [117, 217], "test_grill": 117, "map_grille_indic": 117, "xi": 117, "test_map": 117, "pairwise_distance_grill": 117, "gx": 117, "gy": 117, "test_distance_grill": 117, "415": 117, "470": 117, "8018622000236064": 117, "8201483000302687": 117, "8459657999919727": 117, "8035789999994449": 117, "8155568999936804": 117, "026652099972125143": 117, "01595849997829646": 117, "01231670001288876": 117, "012164799962192774": 117, "011980499955825508": 117, "imaginon": [117, 165, 168, 196], "plus_proche_medecin_grill": 117, "mg": 117, "co\u00efncident": 117, "irait": 117, "nearest": [117, 204], "closest": 117, "\u00e9tranger": [118, 217], "abcdefghuij": 118, "code_def": 118, "0010": 118, "0011": 118, "0100": 118, "0101": 118, "0110": 118, "0111": 118, "ag": 118, "00000110": 118, "correpond": 118, "first_let": 118, "chain": [118, 212], "10010001": 118, "code_def_invers": 118, "decode_rapid": 118, "coding35": 118, "11100": 118, "11101": 118, "11110": 118, "ah": 118, "00011100": 118, "which_coding": 118, "222222222222222": 118, "3333333333333335": 118, "bgbb": 118, "coding235": 118, "011100101": 118, "first_letter": 118, "\u00e9labor": [119, 212], "briqu": [119, 210], "bjkst": 119, "apart": [119, 178, 210, 214], "sird": 119, "cass": [119, 152, 164, 172, 173], "vigener": [119, 123], "mors": [119, 185], "cryptag": [119, 214], "homomorphic": 119, "craig": 119, "gentry": 119, "gin": 123, "pickl": [123, 138, 212, 214, 215], "devin": [123, 179], "magiqu": [123, 186], "clr": 124, "_logistic": 124, "474": 124, "convergencewarning": 124, "lbfg": 124, "failed": 124, "reached": 124, "lim": [124, 160], "increas": 124, "shown": 124, "preprocessing": [124, 125], "logistic": [124, 125], "n_iter_": 124, "_check_optimize_result": 124, "1211": 124, "classifieur": [124, 161], "classes_": 124, "confi": 124, "decision_funct": 124, "1389208": 124, "0757083": 124, "6765228": 124, "53844502": 124, "62378271": 124, "71080774": 124, "predict_prob": [124, 125, 160], "15300558e": 124, "58469944e": 124, "88519638e": 124, "11480362e": 124, "63369265e": 124, "99536631e": 124, "32066047e": 124, "26793395e": 124, "76234016e": 124, "32376598e": 124, "38738587e": 124, "76126141e": 124, "dfsc": 124, "138921": 124, "075708": 124, "676523": 124, "914141": 124, "994176": 124, "visibl": [124, 185, 204, 212], "voul": [124, 179], "changeon": 124, "cloch": 124, "dfpr": 124, "n\u00e9chel": 124, "roc_auc_scor": 124, "fpr0": 124, "tpr0": 124, "thresholds0": 124, "pos_label": 124, "drop_intermediat": 124, "1528": 124, "absconc": 124, "dftp": 124, "002488": 124, "999994": 124, "nen": 124, "aucf": 124, "5f": 124, "nle": 124, "ncet": 124, "under": 124, "curv": 124, "n1": 124, "yt": 124, "9922904817101114": 124, "fontion": 124, "trapz": 124, "m\u00e9triqu": 124, "recall": 124, "247385": 124, "000000e": 124, "396645": 124, "247537": 124, "998232e": 124, "396841": 124, "simplefilt": [125, 202], "yn": 125, "normaliz": [125, 140, 184, 185], "x_train_norm": 125, "x_test_norm": 125, "x_norm": 125, "apppliqu": [125, 215], "fit_transform": [125, 161], "neural_network": 125, "hasattr": [125, 160], "endswith": [125, 211], "regr": 125, "pprint": 125, "_bay": 125, "ardregress": 125, "_hub": 125, "huberregressor": 125, "_bas": [125, 160], "linearregress": 125, "_passive_aggress": 125, "passiveaggressiveregressor": 125, "_quantil": 125, "quantileregressor": 125, "_stochastic_gradient": 125, "sgdregressor": 125, "_theil_sen": 125, "theilsenregressor": 125, "_ransac": 125, "ransacregressor": 125, "_glm": 125, "glm": 125, "poissonregressor": 125, "gammaregressor": 125, "tweedieregressor": 125, "_forest": 125, "randomforestregressor": 125, "extratreesregressor": 125, "_bagging": 125, "baggingregressor": 125, "_gb": 125, "gradientboostingregressor": 125, "_weight_boosting": 125, "adaboostregressor": 125, "_voting": 125, "votingregressor": 125, "_stacking": 125, "stackingregressor": 125, "_hist_gradient_boosting": 125, "gradient_boosting": 125, "histgradientboostingregressor": 125, "_regress": 125, "kneighborsregressor": 125, "radiusneighborsregressor": 125, "_multilayer_perceptron": 125, "mlpregressor": 125, "r2_scor": 125, "score_model": 125, "xtr": 125, "xte": 125, "ytr": 125, "yte": 125, "regressor": 125, "15264869419166682": 125, "0747132999999849": 125, "17989904732301487": 125, "029094200000145065": 125, "06283962040801283": 125, "022322499999972933": 125, "008293681864454783": 125, "019755700000132492": 125, "29442406131949195": 125, "6061727999999675": 125, "09980597599411645": 125, "2597002999996221": 125, "0013198388054543875": 125, "09024569999974119": 125, "00011329963875650328": 125, "02906749999965541": 125, "00012663753861930083": 125, "06156760000021677": 125, "4779574483287953": 125, "056004900000062": 125, "4994834890638471": 125, "7028706000000966": 125, "41813406357742": 125, "2051542999997764": 125, "3223761613299607": 125, "173846099999992": 125, "20700608833439227": 125, "6709999999998217": 125, "4239913847044323": 125, "7730876000000535": 125, "18152755024686895": 125, "06760649999978341": 125, "0004093191012661812": 125, "708230199999889": 125, "19175110270945106": 125, "130972700000257": 125, "294424": 125, "606173": 125, "062840": 125, "022322": 125, "000409": 125, "708230": 125, "000127": 125, "061568": 125, "000113": 125, "029067": 125, "001320": 125, "090246": 125, "008294": 125, "019756": 125, "099806": 125, "259700": 125, "152649": 125, "074713": 125, "179899": 125, "029094": 125, "181528": 125, "067606": 125, "191751": 125, "130973": 125, "207006": 125, "671000": 125, "322376": 125, "173846": 125, "418134": 125, "205154": 125, "423991": 125, "773088": 125, "477957": 125, "056005": 125, "499483": 125, "702871": 125, "ha": [125, 185], "bottom": [125, 166, 167, 204], "pr\u00e9dit": 125, "jointplot": 125, "kde": 125, "ax_marg_y": 125, "sv": 125, "ransac": 125, "estimator_": 125, "intercept_": 125, "3658125914901369": 125, "xn": 125, "6497": 125, "cross_val_scor": 125, "score_model_cross": 125, "1799448611096674": 125, "16609433123462292": 125, "20072693380863527": 125, "mas": 125, "16445120603440527": 125, "15765403941480316": 125, "1786143072062636": 125, "435193799999979": 125, "047846299999946496": 125, "8998543024559884": 125, "5295972496836714": 125, "08733290068040933": 125, "13489810000010038": 125, "00973904451751757": 125, "004417086935930126": 125, "01816079178339436": 125, "11661329999969894": 125, "3139016667645712": 125, "41907116748283557": 125, "224530428533247": 125, "356290799999897": 125, "4384892594797405": 125, "400989908758083": 125, "1372714492625668": 125, "0156056000000717": 125, "0011212946218149167": 125, "00022109795646318986": 125, "0020054507493099116": 125, "3450553999996373": 125, "0005558618017731165": 125, "0021320248191363245": 125, "00030404381558213345": 125, "25818170000002283": 125, "0005670558820739524": 125, "002194268482211603": 125, "0003060535183355695": 125, "3232327999999143": 125, "5150920905590446": 125, "48820834539223157": 125, "5338810535848475": 125, "26701920000005": 125, "43686266293982196": 125, "401753167463089": 125, "4758920210408679": 125, "2353933999997935": 125, "18291148330046114": 125, "15479217393907074": 125, "22140473381847336": 125, "640226099999836": 125, "41442261067915653": 125, "3888441812635889": 125, "43299359267487436": 125, "9275103999998464": 125, "1653286657553436": 125, "0875423648134045": 125, "19788204011638": 125, "1673464000000422": 125, "0008592314579911386": 125, "002575734438727606": 125, "00030815848198539886": 125, "3217153999999027": 125, "438489": 125, "400990": 125, "137271": 125, "015606": 125, "899854": 125, "529597": 125, "087333": 125, "134898": 125, "313902": 125, "419071": 125, "224530": 125, "356291": 125, "000859": 125, "002576": 125, "000308": 125, "321715": 125, "000567": 125, "002194": 125, "000306": 125, "323233": 125, "000556": 125, "002132": 125, "000304": 125, "258182": 125, "001121": 125, "000221": 125, "002005": 125, "345055": 125, "009739": 125, "004417": 125, "018161": 125, "116613": 125, "164451": 125, "157654": 125, "178614": 125, "435194": 125, "165329": 125, "087542": 125, "197882": 125, "167346": 125, "179945": 125, "166094": 125, "200727": 125, "047846": 125, "182911": 125, "154792": 125, "221405": 125, "640226": 125, "414423": 125, "388844": 125, "432994": 125, "927510": 125, "436863": 125, "401753": 125, "475892": 125, "235393": 125, "515092": 125, "488208": 125, "533881": 125, "267019": 125, "nvalid": 125, "\u00e9vinc": 125, "jug": [125, 212], "annot": 126, "mypy": 126, "formatt": [126, 211, 217], "ruff": 126, "0x7fec374f5ed0": 126, "de_autr": 126, "sigma_or_n": [126, 128], "nouvel_ensembl": [126, 128], "rotation1": [126, 136], "rotation2": [126, 136], "test_rotation1": [126, 136], "de0": [126, 136], "assertionerror": [126, 152], "test_rotation2": [126, 136], "virtuel": [127, 138], "range_lik": 127, "0x7f1dc597b220": 127, "\u00e9met": 127, "random_generator": 127, "15382301030555623": 127, "8963148242847391": 127, "5960121288362235": 127, "20451752514212185": 127, "8937299506306294": 127, "leave_generator": 127, "accroch": [127, 198, 217], "textwrap": [127, 129], "add_al": 127, "profondeur_maximal": [127, 129], "pleft": [127, 129], "pright": [127, 129], "bcdefghijkl": 127, "al\u00e9aatoir": 127, "numeros": 127, "3732": 127, "04it": 127, "2136": 127, "80it": 127, "test_compos": 128, "verbeux": [128, 141, 215], "__eq__": [128, 129, 130, 196], "__matmul__": 128, "go\u00fbt": 128, "decompos": 128, "applique_decomposition_identit": 128, "test_decompose1": 128, "test_decompose2": 128, "parent": [128, 204, 214], "considered": 128, "profondeur_somme_count": 129, "sleft": 129, "cleft": 129, "sright": 129, "cright": 129, "6666666666666667": 129, "bizarr": [129, 172, 175], "adjoint": [130, 161], "__repr__": [130, 131, 196, 204], "bought": 130, "similarity": 130, "notimplementederror": 130, "similarit": 130, "addict": 131, "4x4": [131, 176], "creer_jeu": 131, "dim": 131, "position_libr": 131, "nombre_aleatoir": 131, "joue_ligne_colon": 131, "lc": 131, "non_null": 131, "non_null2": 131, "joue_coup": 131, "coup_suiv": 131, "c2048": 131, "calcule_scor": 131, "62it": 131, "84it": 131, "coll": [131, 181], "c2048_4": 131, "sharey": 131, "sharex": 131, "\u00e9leg": [132, 150, 168, 196, 217], "dictionnairr": 132, "846651": 132, "lng": 132, "285811": 132, "orthographi": [132, 199], "autocomplet": 132, "6371": 132, "dlat": 132, "radian": 132, "dlon": 132, "atan2": [132, 196, 210], "station1": 132, "station2": 132, "emil": 132, "zol": 132, "847030": 132, "295262": 132, "6928550943713419": 132, "rigid": 132, "__rshift__": [132, 196], "retir": [133, 178, 204, 217], "diff\u00e9": 133, "minis": 133, "appendleft": [133, 205], "2462739999955374e": 133, "0353370000029826e": 133, "81406999999308e": 133, "796050000029936e": 133, "953019999920797e": 133, "313129999987723e": 133, "568269999956101e": 133, "580999999987398e": 133, "447889999933977e": 133, "401670000057492e": 133, "71205999999438e": 133, "6167699999641626e": 133, "fen": 133, "977897000002485e": 133, "178353999994215e": 133, "823300000178278e": 133, "471699999769044e": 133, "712876000006872e": 133, "798504000003959e": 133, "035500000005414e": 133, "195899999918766e": 133, "84480600000461e": 133, "923587000006591e": 133, "347799999479321e": 133, "471000000601634e": 133, "162": 134, "105": [134, 200, 204], "405": 134, "simulation_multinomial": 134, "library": 134, "ale": [134, 179], "430": 134, "pc": 134, "poids_cumul": 134, "poids_cumule_tr": 134, "009419400001206668": 134, "007181299999501789": 134, "010566299999481998": 134, "0066910000023199245": 134, "007558699999208329": 134, "006804499997087987": 134, "poids_tr": 134, "00013789999866276048": 134, "00010370000018156134": 134, "0004912999975204002": 134, "00014940000255592167": 134, "950000170036219e": 134, "0002525000018067658": 134, "nomrbr": 134, "06869539999752305": 134, "00884070000029169": 134, "08114130000103614": 134, "0094169999974838": 134, "06719900000098278": 134, "01211440000042785": 134, "stockag": 134, "pch": 135, "add_patch": 135, "surface_invers": 135, "6325000000000005": 135, "surface_inverse_dicho": 135, "63232421875": 135, "x3": 135, "y3": 135, "280": 135, "252": 135, "surface_inv_t": 135, "63234375": 135, "d\u00e9fectu": 135, "surface_inv_math": 135, "6324555320336759": 135, "3675444679663242": 135, "152": [135, 142], "coloriage_diagonal": 135, "concr\u00e9tis": 135, "comprom": [135, 158], "exo_d": 136, "am\u00e8nent": 136, "nouveau_d": 136, "tourne_d": 136, "\u00e9thiqu": 137, "valjean": 137, "coset": 137, "fantin": 137, "marius": 137, "pontmercy": 137, "gavroch": 137, "th\u00e9nardi": 137, "antagon": 137, "javert": 137, "monsieur": [137, 141, 188, 198], "madam": 137, "babet": 137, "claquesous": 137, "montparn": 137, "gueulem": 137, "brujon": 137, "bamatabois": 137, "victurnien": 137, "amis": 137, "enjolr": 137, "combeferr": 137, "courfeyrac": 137, "prouvair": 137, "feuilly": 137, "bahorel": 137, "lesgl": 137, "joly": 137, "grantair": 137, "secondair": [137, 217], "favourit": 137, "dahli": 137, "z\u00e9phin": 137, "f\u00e9lix": 137, "tholomyes": 137, "listoli": 137, "fameuil": 137, "blachevel": 137, "fauchelevent": 137, "mabeuf": 137, "azelm": 137, "toussaint": 137, "luc": 137, "gillenormand": 137, "georg": [137, 205], "\u00e9v\u00eaqu": 137, "myriel": 137, "baptistin": 137, "magloir": 137, "gerv": 137, "modulo": [137, 199, 211], "congruentiel": 137, "22695477": 137, "c_n": 137, "\u00e9niem": [137, 219], "hashlib": [137, 214], "unsigned": 137, "5381": 137, "ds_legend": 137, "repartit": 137, "sha256": 137, "encod": [137, 208, 211, 212], "digest": 137, "d4": 137, "light_hash": 137, "d5": 137, "load_ir": 138, "load_dat": 138, "feature_nam": 138, "fleur": 138, "target_nam": 138, "sepal": 138, "petal": 138, "virginic": 138, "147": 138, "148": [138, 153], "n5": 138, "setos": 138, "n4": 138, "lengt": 138, "florid": 138, "georgi": 138, "alask": 138, "quebec": 138, "versicolor": 138, "ireland": 138, "plat": [138, 178], "flatbuffer": 138, "messagepack": 138, "coloriage_carr": 138, "histogramme_rapid": 138, "dummy": [138, 141], "exercice_json_xml": 138, "exercice_regex": 138, "tableau_contingent": 138, "nbheap": 138, "classes_2048": 138, "profile_gin": 138, "pivot_gauss": [138, 144, 193], "profiling_exampl": 138, "classes_metro": 138, "exercice_p": 138, "code_multinomial": 138, "code_liste_tupl": 138, "tri_nlnd": 138, "structures_donnees_convers": 138, "exercice_serialisation_json": 138, "json_text": 138, "res2": 138, "html_text": 138, "to_html": 138, "thead": 138, "styl": [138, 146, 148, 200, 211], "tbody": [138, 149], "df_html": 138, "read_html": 138, "df_locat": 138, "merged": 138, "450": [138, 147, 148, 165], "df_locations2": 138, "dfe": 138, "openpyxl": [138, 212], "myzip": 138, "kernel": [138, 146], "crashed": 138, "executing": 138, "review": 138, "identify": 138, "failur": 138, "href": [138, 149, 179], "aka": 138, "vscodejupyterkernelcrash": 138, "viewoutput": 138, "enregist": 138, "contig\u00fc": 138, "sock": 138, "sotck": 138, "reviendront": 138, "communiqu": [138, 141, 164, 215], "surface_cerl": 139, "surface_cercl": 139, "53981633974483": 139, "quart": 139, "inscrit": [139, 184, 217], "estimation_p": 139, "dedans_enti": 139, "surface_cercle_p": 139, "tri_al": 139, "dommag": 139, "tri_alea2": 139, "m\u00e8nen": 139, "tri_alea3": 139, "eval_c": 139, "cs": 139, "ec": [139, 179], "14it": 139, "alentour": 139, "regular": [140, 178, 219], "exrp": 140, "unicod": [140, 208], "unicodedat": 140, "strip_accent": 140, "nfd": [140, 161], "t\u00eatu": 140, "tetu": 140, "text_sans_accent": 140, "findall": [140, 149, 178, 179, 219], "za": [140, 219], "signifi": [140, 188, 196, 198, 199, 204, 211, 214, 217], "extract_words_lettr": 140, "nje": 140, "nqui": 140, "ngolf": 140, "nlanc": 140, "ndan": 140, "npaix": 140, "nque": 140, "nsilenc": 140, "02d": [140, 178], "296": 140, "301": 140, "346": [140, 147], "h\u00e9t\u00e9rogen": 141, "m\u00e9anism": 141, "lis": [141, 212], "141592653589793": [141, 214], "comp": 141, "314": 141, "320": [141, 150], "conteneur": [141, 211], "wikidat": 141, "magoo": 141, "creator": 141, "millard": 141, "kaufman": 141, "hubley": 141, "cartoon": 141, "aventur": 141, "c\u00e9lebr": 141, "neuf": [141, 168, 211], "simplejson": 141, "ijson": 141, "wikidatawik": 141, "entit": [141, 187, 196, 210], "latest": 141, "lexem": 141, "bz2": 141, "l4": 141, "lemm": 141, "windsurf": 141, "lexicalcategory": 141, "q24905": 141, "q1860": 141, "p5238": 141, "orjson": 141, "mainsnak": 141, "snaktyp": 141, "datavalu": 141, "entity": 141, "numeric": [141, 160, 211], "3324": 141, "l3324": 141, "wikibas": 141, "entityid": 141, "datatyp": 141, "qualifi": 141, "p1545": 141, "2a1ced1dca90648ea7e306acbadd74fc81a10722": 141, "faad30b0": 141, "421c": 141, "803a": 141, "c1fd": 141, "b9a99a0eb35d": 141, "18537": 141, "l18537": 141, "7241753c62a310cf84895620ea82250dcea65835": 141, "d15285a1": 141, "4880": 141, "7a9b": 141, "bb1f": 141, "85403e1a785": 141, "p5187": 141, "monolingualtext": 141, "d4a63d17": 141, "43e": 141, "749d": 141, "5860": 141, "21b90feb83f7": 141, "windsurfing": 141, "grammaticalfeatur": 141, "q10345583": 141, "f3": 141, "q110786": 141, "q3910936": 141, "q51929074": 141, "f4": 141, "windsurfed": 141, "q1392475": 141, "f5": 141, "q1230649": 141, "f6": 141, "gloss": 141, "planch": [141, 179], "u00e0": 141, "voil": 141, "meluncur": 141, "angin": 141, "zh": 141, "u6ed1": 141, "u6d6a": 141, "u98a8": 141, "u5e06": 141, "hant": 141, "tw": 141, "u00e1": 141, "u00edng": 141, "hong": 141, "u00e2ng": 141, "u0e40": 141, "u0e25": 141, "u0e48": 141, "u0e19": 141, "u0e27": 141, "u0e34": 141, "u0e14": 141, "u0e4c": 141, "u0e0b": 141, "u0e23": 141, "u0e1f": 141, "tg": 141, "u0441": 141, "u0451": 141, "u0440": 141, "u0444": 141, "u0438": 141, "u043d": 141, "u0433": 141, "u0431": 141, "u043e": 141, "u0437": 141, "u0448": 141, "u0430": 141, "u043c": 141, "u043b": 141, "u04e3": 141, "purjelautaill": 141, "p5137": 141, "191051": 141, "q191051": 141, "13e5f498": 141, "4deb": 141, "ea41": 141, "4d60": 141, "02c852b88b4c": 141, "p5972": 141, "l144039": 141, "7218013f": 141, "b84b": 141, "40fa": 141, "b57b": 141, "bc1ba2239bb8": 141, "pageid": 141, "54387040": 141, "lastrevid": 141, "1710596079": 141, "22t19": 141, "34z": 141, "l314": 141, "q1084": 141, "q7026": 141, "p5185": 141, "1775415": 141, "q1775415": 141, "45650151": 141, "4ed8": 141, "025d": 141, "e36ef22e6a2": 141, "q146786": 141, "54387050": 141, "684359491": 141, "24t07": 141, "21z": 141, "abandon": [141, 179], "dict2xml": 141, "lde": 141, "dill": [141, 212], "getstat": 141, "et_setstat": 141, "num": [142, 204], "count1": 142, "count2": 142, "count3": 142, "cytoolz": 142, "count4": 142, "swap": 143, "entas": 143, "dessine_t": 143, "_heapify_max_bottom": 143, "_heapify_max_up": 143, "topk_min": 143, "_heapify_max_bottom_posit": 143, "_heapify_max_up_posit": 143, "topk_min_posit": 143, "20001": 143, "div_by_numb": 143, "01it": 143, "deviat": [143, 144], "min_exec": [143, 144], "max_exec": [143, 144], "ttim": [143, 144], "context_siz": [143, 144], "warmup_tim": [143, 144], "001400": 143, "000271": 143, "001090": 143, "001892": 143, "014000": 143, "001138": 143, "002110": 143, "000517": 143, "001622": 143, "003214": 143, "021104": 143, "001633": 143, "001967": 143, "000299": 143, "001747": 143, "002545": 143, "019669": 143, "002969": 143, "002692": 143, "000611": 143, "002081": 143, "003779": 143, "026925": 143, "003983": 143, "4000": 143, "003096": 143, "000276": 143, "002660": 143, "003578": 143, "030960": 143, "003305": 143, "33it": 143, "008493": 143, "001842": 143, "006837": 143, "013038": 143, "084926": 143, "014053": 143, "009114": 143, "002111": 143, "007600": 143, "013480": 143, "091137": 143, "022466": 143, "650": 143, "011651": 143, "003198": 143, "008757": 143, "017215": 143, "116511": 143, "010779": 143, "011374": 143, "001973": 143, "009725": 143, "016044": 143, "113739": 143, "012545": 143, "950": 143, "016104": 143, "003647": 143, "011865": 143, "022728": 143, "161042": 143, "018794": 143, "1100": 143, "_heapify_max_up_position_simpl": 143, "topk_min_position_simpl": 143, "58650968": 144, "72315516": 144, "9137217": 144, "04526746": 144, "70012278": 144, "87604076": 144, "92402115": 144, "36865515": 144, "00362559": 144, "26361505": 144, "pivot_gauss2": 144, "pivot_gauss3": 144, "numpy1": 144, "numpy2": 144, "17it": 144, "000051": 144, "000028": 144, "000125": 144, "000512": 144, "000728": 144, "000045": 144, "000021": 144, "000094": 144, "000447": 144, "000046": 144, "000024": 144, "000110": 144, "000197": 144, "001367": 144, "000253": 144, "001134": 144, "000540": 144, "000623": 144, "002258": 144, "011340": 144, "003184": 144, "001312": 144, "000678": 144, "000639": 144, "002858": 144, "013121": 144, "001035": 144, "000375": 144, "000184": 144, "000233": 144, "000818": 144, "003753": 144, "001292": 144, "001557": 144, "001094": 144, "000686": 144, "003803": 144, "015571": 144, "016613": 144, "000404": 144, "000062": 144, "000331": 144, "000553": 144, "004045": 144, "000364": 144, "000471": 144, "000037": 144, "000440": 144, "000545": 144, "004713": 144, "000482": 144, "003798": 144, "001491": 144, "002594": 144, "007715": 144, "037978": 144, "018972": 144, "001324": 144, "000265": 144, "001054": 144, "002030": 144, "013239": 144, "001341": 144, "000820": 144, "000190": 144, "000602": 144, "001140": 144, "008200": 144, "000651": 144, "004260": 144, "001177": 144, "002724": 144, "006471": 144, "042603": 144, "005198": 144, "001690": 144, "000268": 144, "001100": 144, "002116": 144, "016902": 144, "001080": 144, "009320": 144, "002581": 144, "005762": 144, "013509": 144, "093197": 144, "015497": 144, "001664": 144, "000133": 144, "001458": 144, "001827": 144, "016641": 144, "001309": 144, "005314": 144, "001348": 144, "003848": 144, "008252": 144, "053141": 144, "016670": 144, "001629": 144, "000216": 144, "001459": 144, "002045": 144, "016286": 144, "001499": 144, "011036": 144, "003890": 144, "007070": 144, "018254": 144, "110356": 144, "017467": 144, "002637": 144, "000582": 144, "001846": 144, "003606": 144, "026375": 144, "002417": 144, "021563": 144, "003232": 144, "017314": 144, "029488": 144, "215629": 144, "028747": 144, "004673": 144, "001109": 144, "003391": 144, "005935": 144, "046730": 144, "005792": 144, "profilag": 145, "_gini_sort": 145, "_gini_in": 145, "spy": [145, 146], "centiem": 145, "ralent": [145, 146, 217], "profiler": 145, "disabl": [145, 146, 147, 160], "sortby": [145, 146], "print_stat": [145, 146, 147, 160], "ordered": [145, 146, 147, 160], "ncall": [145, 146, 147, 160], "tottim": [145, 146, 147, 160], "percall": [145, 146, 147, 160], "cumtim": [145, 146, 147, 160], "lineno": [145, 146, 147, 160, 200, 202], "venv": [145, 178], "interactiveshel": [145, 146, 160], "3472": [145, 146, 160], "run_cod": [145, 146, 160], "usr": [145, 160, 178, 200], "codeop": [145, 146, 160], "__call__": [145, 146, 160], "ipykernel_23329": 145, "1877708867": 145, "1359775409": 145, "contextlib": [145, 146], "279": [145, 146, 200], "traitlet": [145, 146], "692": [145, 146], "__get__": [145, 146], "compilerop": [145, 146, 178], "extra_flag": [145, 146], "getattr": [145, 146, 160], "3424": [145, 146], "654": [145, 146], "listcomp": [145, 146, 147, 160, 196], "1229": [145, 146], "user_global_n": [145, 146], "_lsprof": [145, 147], "11038": 145, "682": 145, "841": 145, "4034582288": 145, "024": 145, "436": 145, "003": [145, 147, 160], "909": 145, "002": 145, "914": 145, "058": 145, "060": 145, "007": 145, "398": 145, "392": 145, "039": 145, "026": 145, "008": [145, 146], "_gini_final_fast": 145, "gini_fast": 145, "018": 145, "017": 145, "543": 145, "1862792531": 145, "866": 145, "867": 145, "788": 145, "528": 145, "530": 145, "070": 145, "output_html": 145, "_gini_cumsum2": 145, "_gini_cumsum2b": 145, "gini2": 145, "023": 145, "580": 145, "239060152": 145, "124": [145, 146], "926": 145, "898": 145, "057": 145, "040": [145, 217], "042": 145, "649": 145, "651": 145, "_gini_cumsum3b": 145, "total0": 145, "total1": 145, "_gini_cumsum3": 145, "gini3": 145, "022": [145, 147], "302": 145, "1743022160": 145, "059": 145, "064": 145, "921": 145, "917": 145, "012": 145, "699": 145, "028": [145, 147], "077": 145, "upload": 146, "wikimedi": 146, "9f": 146, "convolutionandpooling": 146, "signal": [146, 217, 219], "convolve2d": 146, "img": [146, 149], "11111111": 146, "000002": 146, "000004": 146, "convolve_na": 146, "9999995": 146, "000001": 146, "convolve_naive2": 146, "999998": 146, "retournent": [146, 211, 219], "test_unitair": 146, "decimal": [146, 210], "devien": 146, "_get_indic": 146, "_is_out": 146, "im2col_na": 146, "kernel_shap": 146, "fill_valu": 146, "output_shap": 146, "middl": 146, "kernel_siz": 146, "data_siz": 146, "i_dat": 146, "i_kernel": 146, "t_dat": 146, "t_kernel": 146, "i_out": 146, "convolve_im2col_na": 146, "conv": 146, "999996": 146, "test_unitaire2": 146, "dirnam": [146, 160, 212], "exec_prefix": 146, "profile_cod": 146, "133426": 146, "847": 146, "424": 146, "ipykernel_8787": 146, "3679460054": 146, "3311625431": 146, "842": 146, "88200": 146, "44100": 146, "006": 146, "fromnumeric": [146, 147, 160], "2979": 146, "_wrapreduct": [146, 147, 160], "dictcomp": [146, 147], "2974": 146, "_prod_dispatch": 146, "profileur": [146, 147], "text_prof": 146, "pre": 146, "00032": 146, "79024": 146, "00211": 146, "78992": 146, "29408": 146, "78693": 146, "00018": 146, "00065": 146, "00448": 146, "00134": 146, "00383": 146, "00025": 146, "ict": 146, "00017": 146, "meth": [146, 196], "00052": 146, "unc": 146, "00155": 146, "ufunc": [146, 147, 160], "24745": 146, "40406": 146, "176400": 146, "08453": 146, "07207": 146, "08270": 146, "00021": 146, "00007": 146, "00010": 146, "00037": 146, "00049": 146, "00019": 146, "00087": 146, "176600": 146, "08463": 146, "88300": 146, "07226": 146, "proc\u00e8dent": 146, "interromp": 146, "enregistrent": [146, 202], "marqueur": 146, "interrompu": [146, 210], "interrompr": [146, 188, 204, 208, 210], "sampling": [146, 165], "d\u00e9buggag": 146, "im2col_recurs": 146, "im2col_naive_implement": 146, "fall_back_dim": 146, "func": [146, 147, 204], "torch": 146, "nn": 146, "unfold": 146, "padding": 146, "switch": 146, "k0": 146, "mini_kernel": 146, "mini_shap": 146, "cc2": 146, "new_shap": 146, "resh": 146, "convolve_im2col_recurs": 146, "test_unitaire3": 146, "r\u00e9impl\u00e9ment": 147, "9644453525543213": 147, "sigma2": 147, "001481771469116211": 147, "doprofil": 147, "normpath": [147, 160], "getcwd": [147, 204, 212], "base_prefix": 147, "dump_stat": 147, "10000000": 147, "6027283668518066": 147, "00013383": 147, "_distn_infrastructur": 147, "1958": 147, "142": 147, "_continuous_distn": 147, "361": 147, "_pdf": 147, "_norm_pdf": 147, "093": 147, "_multiarray_umath": 147, "implement_array_funct": 147, "048": 147, "__array_function__": 147, "internal": 147, "function_bas": 147, "1912": [147, 162, 163], "_insert": 147, "_support_mask": 147, "putmask": 147, "021": 147, "559": 147, "argsreduc": 147, "2406": 147, "2307": 147, "604": 147, "broadcast_array": 147, "stride_trick": 147, "480": [147, 150], "546": 147, "340": 147, "_broadcast_to": 147, "_ufunc_config": 147, "seterr": 147, "atleast_1d": 147, "shape_bas": 147, "416": 147, "_broadcast_shap": 147, "geterr": 147, "538": 147, "seterrobj": 147, "geterrobj": 147, "345": [147, 211], "genexpr": 147, "asarray": 147, "1965": 147, "542": 147, "promote_typ": 147, "425": 147, "_argcheck": 147, "_maybe_view_as_subclass": 147, "2302": 147, "_any_dispatch": 147, "multiarray": 147, "1961": 147, "_shape_dispatch": 147, "ndit": 147, "1908": 147, "_place_dispatch": 147, "_get_support": 147, "asanyarray": 147, "_parse_arg": 147, "_atleast_1d_dispatch": 147, "2401": 147, "_all_dispatch": 147, "_broadcast_arrays_dispatch": 147, "1882781982421875": 147, "ipykernel_29119": 147, "200996087": 147, "guis": 147, "fatal": 148, "dicho": [148, 187], "liste_trie": 148, "recherche_dichotomique_recurs": 148, "parametres": 148, "para\u00eetr": [148, 196], "recherche_dichotomique_recursive2": 148, "pok\u00e9mon": 149, "pokemondb": 149, "demandon": 149, "721": 149, "pok\u00e9dex": 149, "training": [149, 161], "breeding": 149, "databas": 149, "dossi": 149, "shutil": [149, 214], "bs4": 149, "utilison": 149, "mozill": 149, "req": 149, "pokedex": 149, "header": 149, "beautifulsoup": 149, "lxml": 149, "liste_pokemon": 149, "span": [149, 219], "infocard": 149, "lg": 149, "get_pag": 149, "pokemon_nam": 149, "url_pokemon": 149, "get_cara_pokemon": 149, "defaultdict": 149, "vital": 149, "table_body": 149, "findchildren": 149, "findchild": 149, "gettext": 149, "bulbasaur": 149, "ivysaur": 149, "venusaur": 149, "charmand": 149, "charmeleon": 149, "charizard": 149, "squirtl": 149, "spec": 149, "abilit": 149, "ev": [149, 179, 204], "catch": 149, "gend": 149, "hp": 149, "attack": 149, "defens": 149, "sp": [149, 161], "atk": 149, "grass": 149, "seed": 149, "kg": 149, "lb": 149, "overgrowchlorophyll": 149, "hidden": 149, "ability": 149, "0226": 149, "gold": 149, "silv": 149, "cryst": 149, "pok\u00e9ball": 149, "medium": 149, "slow": 149, "monst": 149, "femal": 149, "884": 149, "140": 149, "0002": 149, "0227": 149, "0003": 149, "0228": 149, "0004": 149, "fir": 149, "lizard": 149, "blazesolar": 149, "0229": 149, "dragon": 149, "0005": 149, "flam": 149, "0230": 149, "artwork": 149, "jpg": 149, "out_fil": 149, "copyfileobj": 149, "butterfre": 149, "spearow": 149, "skimag": 149, "imio": 149, "imread": 149, "imshow": 149, "get_xax": 149, "get_yax": 149, "amus": 150, "gh": 150, "er": [150, 191], "recontruir": 150, "36960": 150, "cpython": 150, "dv": 150, "devrion": 150, "max_j": 150, "r\u00e9present": 150, "arr": [150, 177], "\u00e9norm": 150, "9x8": 150, "amat": 150, "aarr": 150, "00984": 150, "00112": 150, "nb_lin": 150, "nb_col": 150, "asymptot": 151, "evident": 151, "chi2_contingency": 151, "chi2": 151, "pvalu": 151, "168598503892621": 151, "4045712090580829": 151, "nj": 151, "nij": 151, "52941176": 151, "88235294": 151, "58823529": 151, "47058824": 151, "61764706": 151, "16176471": 151, "impens": 152, "unit_test": 152, "valeur_attendu": 152, "tour_prend_piec": 152, "test_tour_prend_piec": 152, "tour_prend_piece_tupl": 152, "test_tour_prend_piece_tupl": 152, "_tour_prend_piec": 152, "colori": 152, "find_neighbour": 152, "echiqui": 152, "coloring": 152, "next_cas": 152, "tour_prend_piece_obstacl": 152, "test_": 152, "assurent": 152, "testent": 152, "pytest": 152, "commencenc": 152, "test_tour_prend_piece_obstacle_except": 152, "sorted_hist": 153, "recontruit": 153, "sorted_en": 153, "sort_with_hist": 153, "sort_with_nohist": 153, "immpl\u00e9ment": 153, "smoothsort": 153, "quoiqu": 153, "sort_with_nohist_nocopy": 153, "tableaux_aleatoir": 153, "enss": 153, "fonc": [153, 200], "1e10": [153, 163], "nlnn": 153, "6e": 153, "grossi": [153, 184], "403": 153, "1096": 153, "2980": 153, "8103": 153, "22026": 153, "59874": 153, "162754": 153, "442413": 153, "df100": 153, "dfm": 153, "1e9": 153, "singuli": [154, 219], "z2": [154, 155], "npm": [154, 155], "44444444": 154, "pp": 154, "mp": 154, "lambda_3": 154, "simult": [154, 155], "17179957": 155, "80900898": 155, "53083278": 155, "48698277": 155, "95015277": 155, "66842305": 155, "53400158": 155, "42468545": 155, "41318128": 155, "97269198": 155, "62935172": 155, "0672538": 155, "88952227": 155, "09758362": 155, "36428305": 155, "00968737": 155, "07225686": 155, "0111879": 155, "26264038": 155, "16277675": 155, "05453658": 155, "varvar": 155, "99040557": 155, "31065402": 155, "4426555": 155, "09744081": 155, "13884485": 155, "19784207": 155, "multiply": 155, "95440895": 155, "89026339": 155, "71682496": 155, "91433544e": 155, "55111512e": 155, "77555756e": 155, "44438859e": 155, "60670907e": 155, "88137173e": 155, "square_root_matrix": 155, "30467222": 155, "77731521": 155, "55914512": 155, "95469126": 155, "96344225": 155, "9528626": 155, "tromp": [155, 179, 199], "33226763e": 155, "06581410e": 155, "44089210e": 155, "59780655": 155, "8510365": 155, "45002008": 155, "24634204": 155, "12707857": 155, "14682284": 155, "homomorph": [156, 157], "pr\u00e9serv": [156, 157], "fully": [156, 157], "encrypt": [156, 157], "keygen": [156, 157], "secret": [156, 157], "sk": [156, 157], "pk": [156, 157], "tau": [156, 157], "r_p": [156, 157], "2r": [156, 157], "decrypt": [156, 157], "tutoriel_graph": [158, 159], "xe9cr": [158, 159], "xe0": [158, 159], "minel": [158, 159], "xe9trang": [158, 159], "extr": [158, 159], "xeam": [158, 159], "spanning": [158, 159], "satisf": 158, "laplacien": [158, 159], "construis": [158, 172], "directionnel": 158, "traduisent": 158, "eigen": [158, 159], "eric": 158, "kolaczyk": 158, "compl\u00e9mentair": [158, 212], "phi": 158, "min_": [158, 162, 164, 165], "x_v": 158, "84737386691659533": [158, 159], "95848816613228727": [158, 159], "28893525107454354": [158, 159], "66073249195336492": [158, 159], "60382037086559148": [158, 159], "13747945088383384": [158, 159], "21951613156582261": [158, 159], "040905525433785228": [158, 159], "21613062123493632": [158, 159], "096875623632852625": [158, 159], "99787588721497178": [158, 159], "79337171783327132": [158, 159], "18576957348508683": [158, 159], "78396225027633837": [158, 159], "23875443625588322": [158, 159], "35497638429086975": [158, 159], "8713637939628045": [158, 159], "22983756618811024": [158, 159], "28301724069085921": [158, 159], "99408996134013161": [158, 159], "39792684083973429": [158, 159], "77105362865540716": [158, 159], "75452041353842147": [158, 159], "330325155167562": [158, 159], "24824845436118537": [158, 159], "95998690078041737": [158, 159], "92318434139996397": [158, 159], "38115765401571988": [158, 159], "54660304309415886": [158, 159], "62093667623480242": [158, 159], "58899996464290505": [158, 159], "9017292023892568": [158, 159], "60541336358687847": [158, 159], "28929082523865812": [158, 159], "87925379747840293": [158, 159], "94834058131858756": [158, 159], "61449632813730748": [158, 159], "94264237081849722": [158, 159], "13119804743502139": [158, 159], "44158556198130949": [158, 159], "20660796942108339": [158, 159], "915599021810789": [158, 159], "3097131996826511": [158, 159], "81979953110332837": [158, 159], "89711055197298928": [158, 159], "7298496710091944": [158, 159], "22499060312661545": [158, 159], "072786594549671291": [158, 159], "012604758185058018": [158, 159], "36199484670070914": [158, 159], "92050750708863993": [158, 159], "91447248587261709": [158, 159], "26304069827339327": [158, 159], "026058147250910935": [158, 159], "59289937178711172": [158, 159], "86673111722782969": [158, 159], "70640070176443837": [158, 159], "64096733852134291": [158, 159], "049399266565914535": [158, 159], "54027723332288746": [158, 159], "26450585597978316": [158, 159], "50883097182669357": [158, 159], "91987410679455195": [158, 159], "97753050553942622": [158, 159], "5618293073273094": [158, 159], "27688371997865069": [158, 159], "91241761244784847": [158, 159], "090310675429991605": [158, 159], "90925789663628509": [158, 159], "40628594240956295": [158, 159], "3832814495252409": [158, 159], "66221025722485627": [158, 159], "74928785967005418": [158, 159], "32840192750838815": [158, 159], "25478832731446643": [158, 159], "70269825611412617": [158, 159], "54293534537395793": [158, 159], "87800254191632932": [158, 159], "89603330911109724": [158, 159], "77106655965183546": [158, 159], "29830084404349644": [158, 159], "97117954065316903": [158, 159], "075137754060910056": [158, 159], "086473140735377596": [158, 159], "120307047737505": [158, 159], "073651360408690802": [158, 159], "87835916829742444": [158, 159], "34622147871872355": [158, 159], "20567119579830373": [158, 159], "42658381934346423": [158, 159], "27715586337053655": [158, 159], "87999487046170488": [158, 159], "16364186693234739": [158, 159], "98604111274325335": [158, 159], "31830209002283116": [158, 159], "36372930495109934": [158, 159], "73434680601907532": [158, 159], "65926820980026724": [158, 159], "9830474686174655": [158, 159], "12246834322318068": [158, 159], "0293130665095358": [158, 159], "0529459366329164": [158, 159], "7755737603387041": [158, 159], "2685053357046323": [158, 159], "1926920625846602": [158, 159], "4857321786911326": [158, 159], "1445647965531025": [158, 159], "8943143876324848": [158, 159], "87403644639763023": [158, 159], "6464000746270226": [158, 159], "5545355219233219": [158, 159], "8988261206085766": [158, 159], "0785612031685732": [158, 159], "2948920530351256": [158, 159], "4682717483474708": [158, 159], "2364561845005868": [158, 159], "0695530720860349": [158, 159], "9439062757612424": [158, 159], "9563571060210054": [158, 159], "0678946581365616": [158, 159], "2485209278176157": [158, 159], "6386418932454814": [158, 159], "4800728241977779": [158, 159], "72646452125011518": [158, 159], "8341241854718167": [158, 159], "3482541467971951": [158, 159], "5558692651012178": [158, 159], "5624030818263908": [158, 159], "6768285328272157": [158, 159], "0106699901361971": [158, 159], "9175303893386597": [158, 159], "1087117017596031": [158, 159], "9111941479785823": [158, 159], "70001353796486": [158, 159], "5501953466420737": [158, 159], "8544512068951891": [158, 159], "9246058344257151": [158, 159], "123740240481137": [158, 159], "110657752575519": [158, 159], "0774760107085393": [158, 159], "6547967574269418": [158, 159], "6868873425221045": [158, 159], "9308254017076039": [158, 159], "9448006865754279": [158, 159], "0788555249744247": [158, 159], "396205767032443": [158, 159], "0516249434348621": [158, 159], "42035392996461629": [158, 159], "2989465364173602": [158, 159], "2706795830191275": [158, 159], "651698949077459": [158, 159], "1364194264447973": [158, 159], "3637257964296152": [158, 159], "5082040184760555": [158, 159], "2502121678035314": [158, 159], "5383631321594571": [158, 159], "5274668721202556": [158, 159], "473426056956777": [158, 159], "400114365788911": [158, 159], "0434200740148363": [158, 159], "513062501300436": [158, 159], "718209259961025": [158, 159], "3986743034356737": [158, 159], "0590996420222467": [158, 159], "6632346815268289": [158, 159], "8894243587379433": [158, 159], "2802341564965607": [158, 159], "4921791441653762": [158, 159], "5297912885016269": [158, 159], "5780900056883569": [158, 159], "0634598983096293": [158, 159], "2904478604819776": [158, 159], "0857595813036722": [158, 159], "6366192967000295": [158, 159], "5596385297232223": [158, 159], "3177709282351766": [158, 159], "1361714943468244": [158, 159], "9107871995830976": [158, 159], "7240531749202161": [158, 159], "8033709892679886": [158, 159], "1017624989859351": [158, 159], "54374796617700816": [158, 159], "3715344477591818": [158, 159], "2387553898801391": [158, 159], "8187172884547076": [158, 159], "1522284671097314": [158, 159], "0454193728074506": [158, 159], "1688190599740418": [158, 159], "9848808505730315": [158, 159], "5176013894081675": [158, 159], "1965918931505275": [158, 159], "0248869962483522": [158, 159], "4535361867324776": [158, 159], "4437155145638751": [158, 159], "2171776428648808": [158, 159], "0867326734388021": [158, 159], "5763512667620065": [158, 159], "785293447306691": [158, 159], "2489915323631275": [158, 159], "6589505137265448": [158, 159], "2817385669950028": [158, 159], "0553290947191964": [158, 159], "5481507299407191": [158, 159], "2080477057573553": [158, 159], "2817876881965624": [158, 159], "12512408298772948": [158, 159], "4831125975271719": [158, 159], "7834950195462245": [158, 159], "2064606598908139": [158, 159], "2421411165648886": [158, 159], "3461204499811092": [158, 159], "65966593807378215": [158, 159], "36559473517464181": [158, 159], "9248327086099932": [158, 159], "4223418217602317": [158, 159], "790875007038224": [158, 159], "9026572243192548": [158, 159], "21621909226838504": [158, 159], "16100173690141428": [158, 159], "8875278273011942": [158, 159], "2792213808538602": [158, 159], "9041297697847308": [158, 159], "4298318748123444": [158, 159], "8717874765920124": [158, 159], "2660121035644738": [158, 159], "8922848961161609": [158, 159], "4724681658043082": [158, 159], "8875314666371643": [158, 159], "1337207059785208": [158, 159], "2290596706950154": [158, 159], "0970619686963916": [158, 159], "4188864705446997": [158, 159], "824501293502089": [158, 159], "87811217547665232": [158, 159], "6141377553638456": [158, 159], "4736768016729647": [158, 159], "9646033676482686": [158, 159], "7291507868196327": [158, 159], "6494860793108481": [158, 159], "1744278681124489": [158, 159], "3291564189715617": [158, 159], "1892910878432268": [158, 159], "6260111359196396": [158, 159], "8029748349762125": [158, 159], "1110554486386404": [158, 159], "0087017311510849682": [158, 159], "812034605848817": [158, 159], "8310006567642712": [158, 159], "0643824785110239": [158, 159], "7806635726760689": [158, 159], "8724397920934015": [158, 159], "65927045141188367": [158, 159], "6202135060380289": [158, 159], "18281430910806151": [158, 159], "8134764145891591": [158, 159], "0328054369849538": [158, 159], "0315824591034124": [158, 159], "5339867923196042": [158, 159], "0906912982614791": [158, 159], "8390710019489158": [158, 159], "77019164393866146": [158, 159], "0099320163703895": [158, 159], "2239134319849398": [158, 159], "5227757084315567": [158, 159], "5342615497190861": [158, 159], "5402720724503229": [158, 159], "52313297572359074": [158, 159], "8268409663350287": [158, 159], "0896974241486603": [158, 159], "83931337455192145": [158, 159], "9824769771009292": [158, 159], "8062615072223389": [158, 159], "7151819974072808": [158, 159], "6553638508191835": [158, 159], "94296691141453703": [158, 159], "3332773280899097": [158, 159], "9080659785364102": [158, 159], "8017876981653527": [158, 159], "146797854411842": [158, 159], "4943345068020939": [158, 159], "6135304662636716": [158, 159], "5968234340599352": [158, 159], "2240732422979015": [158, 159], "40050907128273239": [158, 159], "0003615064702411": [158, 159], "3564534485947091": [158, 159], "5251603471425388": [158, 159], "3602495377614252": [158, 159], "70829180528117897": [158, 159], "8705912438690024": [158, 159], "9857439387875215": [158, 159], "3495410597763557": [158, 159], "7415118623160484": [158, 159], "8482449535792851": [158, 159], "1227029816875906": [158, 159], "943690794192229": [158, 159], "5533372938495322": [158, 159], "23654193364300019": [158, 159], "9320538122814632": [158, 159], "27398085527961841": [158, 159], "5379571426787906": [158, 159], "5479478416595258": [158, 159], "9952197756192462": [158, 159], "9519866242123729": [158, 159], "63418929807710789": [158, 159], "9714021509147459": [158, 159], "7514419719026835": [158, 159], "7952656655539831": [158, 159], "8168652955867248": [158, 159], "8059389896821614": [158, 159], "86083201462211": [158, 159], "6763339473293351": [158, 159], "2346287443442741": [158, 159], "0049022214331869": [158, 159], "0159172780756807": [158, 159], "6747832401686313": [158, 159], "9625789720275502": [158, 159], "21332969214064601": [158, 159], "4459656516053521": [158, 159], "8490131071943328": [158, 159], "4887755131556295": [158, 159], "0537691340713213": [158, 159], "1214658457920255": [158, 159], "8180419262808878": [158, 159], "0417225435808637": [158, 159], "4876076903545457": [158, 159], "2056831059665383": [158, 159], "4403227294912879": [158, 159], "29183542445509": [158, 159], "1299087065549616": [158, 159], "6894950904308068": [158, 159], "67877427899602139": [158, 159], "2334935303450196": [158, 159], "66692066781151726": [158, 159], "918359229911677": [158, 159], "43825691963852248": [158, 159], "0912552685819197": [158, 159], "9256467457380193": [158, 159], "9995400634925016": [158, 159], "2633779062253305": [158, 159], "3270510253578853": [158, 159], "8998811026998816": [158, 159], "4372749748248483": [158, 159], "800876689538256": [158, 159], "5720483206059228": [158, 159], "5479241832525954": [158, 159], "5107697954439923": [158, 159], "6063323885377114": [158, 159], "45355690226015": [158, 159], "3924594206301864": [158, 159], "8170391803389006": [158, 159], "3343907023480963": [158, 159], "1592191821861308": [158, 159], "551692003143347": [158, 159], "2147820707711716": [158, 159], "55930561729387951": [158, 159], "2364813901253862": [158, 159], "7059292544869302": [158, 159], "5980046177747229": [158, 159], "0606302788023871": [158, 159], "0235041652892747": [158, 159], "27015781708378661": [158, 159], "4303330714757383": [158, 159], "3989583334332432": [158, 159], "4649562148782955": [158, 159], "3524552397826168": [158, 159], "3322237797463616": [158, 159], "6813558717119386": [158, 159], "3359544685337736": [158, 159], "7104894884469877": [158, 159], "350410042767797": [158, 159], "8412188670946792": [158, 159], "8993273426849919": [158, 159], "5101185505218293": [158, 159], "3563537615645282": [158, 159], "0439247587050282": [158, 159], "3738404946436238": [158, 159], "43277784903448813": [158, 159], "6236691719193734": [158, 159], "8192122194763103": [158, 159], "3000303214498619": [158, 159], "7045156595962521": [158, 159], "2036876689968699": [158, 159], "22379027409222038": [158, 159], "0078193725337679": [158, 159], "33061456656172339": [158, 159], "3173753727230917": [158, 159], "3292728936983247": [158, 159], "17305051546078376": [158, 159], "3708524146324814": [158, 159], "18920570140751003": [158, 159], "7288547711089577": [158, 159], "5559793038807355": [158, 159], "4460955268542377": [158, 159], "65537111745445098": [158, 159], "3024274811626642": [158, 159], "32733974310015845": [158, 159], "6653194005399481": [158, 159], "3495524342659682": [158, 159], "50620561077402126": [158, 159], "6859406925109957": [158, 159], "0042337939426813": [158, 159], "4168309661540643": [158, 159], "3784247121303279": [158, 159], "0873449293614152": [158, 159], "8206900404120345": [158, 159], "3397623772131446": [158, 159], "2347446764630474": [158, 159], "8720948774765485": [158, 159], "6955132035521556": [158, 159], "9472576652843694": [158, 159], "3542922693748149": [158, 159], "030233796538444": [158, 159], "6199282129862145": [158, 159], "7351581782776853": [158, 159], "5709314373179808": [158, 159], "14607908112131446": [158, 159], "79251837326064": [158, 159], "37002429983216167": [158, 159], "3653059393186942": [158, 159], "8616789948811956": [158, 159], "6100436336617339": [158, 159], "8019087210485418": [158, 159], "5911421188072357": [158, 159], "6953052292111459": [158, 159], "3928959775316905": [158, 159], "049532260408768": [158, 159], "9169000088107522": [158, 159], "8042700374731648": [158, 159], "6636201843555991": [158, 159], "2856117402115821": [158, 159], "497386564362329": [158, 159], "1085015582769402": [158, 159], "1635806015318408": [158, 159], "51764720743541925": [158, 159], "3207617687324866": [158, 159], "6552485122750968": [158, 159], "9457154950840061": [158, 159], "4574030967957459": [158, 159], "13220998701481373": [158, 159], "1064026703010086": [158, 159], "6992062016898437": [158, 159], "6218017958370492": [158, 159], "4171784152426357": [158, 159], "1893570148164336": [158, 159], "53987360896641756": [158, 159], "62289304323418893": [158, 159], "6377915319211773": [158, 159], "95656595366184183": [158, 159], "5482370903224183": [158, 159], "6552715153624238": [158, 159], "42419842122106877": [158, 159], "9138981541477369": [158, 159], "5211086418661788": [158, 159], "7643908686171743": [158, 159], "3462875243179644": [158, 159], "4001664954474204": [158, 159], "8715548148469952": [158, 159], "7209034976257116": [158, 159], "3132712976844925": [158, 159], "0077653108424371": [158, 159], "8044349295045858": [158, 159], "7004396541700451": [158, 159], "6313151291578776": [158, 159], "7805282578575432": [158, 159], "3496033840422226": [158, 159], "5149407509344646": [158, 159], "4491799573779538": [158, 159], "4969549443875327": [158, 159], "59052341158001964": [158, 159], "5871839418980924": [158, 159], "8626995345211439": [158, 159], "530084220131168": [158, 159], "73947783901217035": [158, 159], "2278934560638541": [158, 159], "4480933790189707": [158, 159], "6638968948801822": [158, 159], "8603129450393652": [158, 159], "0034748779660814": [158, 159], "3783603559660618": [158, 159], "24711046251746965": [158, 159], "0245225170472958": [158, 159], "75233017871629115": [158, 159], "4003624728787472": [158, 159], "3204808270534789": [158, 159], "8530050107548528": [158, 159], "66555456366565435": [158, 159], "210607962975542": [158, 159], "4312598575388913": [158, 159], "8510534338146063": [158, 159], "0579141292803367": [158, 159], "8599892658343156": [158, 159], "1580465239922022": [158, 159], "6376354853614972": [158, 159], "6525127599513731": [158, 159], "9406618825179196": [158, 159], "3353268107001339": [158, 159], "5193520805659642": [158, 159], "9838132614191322": [158, 159], "5937246171656669": [158, 159], "_i": [158, 159], "x_j": [158, 159, 161], "nmat": 159, "29862811e": 159, "97516377e": 159, "10328629e": 159, "90790022e": 159, "11774822e": 159, "71706160e": 159, "10657750e": 159, "06987653e": 159, "47893457e": 159, "95288785e": 159, "17873789e": 159, "62159368e": 159, "00171710e": 159, "22716812e": 159, "43721861e": 159, "46689480e": 159, "50739404e": 159, "65758626e": 159, "67080933e": 159, "01271960e": 159, "06246640e": 159, "12023335e": 159, "15823780e": 159, "40007127e": 159, "42330441e": 159, "44200543e": 159, "48046940e": 159, "83472417e": 159, "88760137e": 159, "98652806e": 159, "05062459e": 159, "45716799e": 159, "55952462e": 159, "72589427e": 159, "86383519e": 159, "98776759e": 159, "24048853e": 159, "51749090e": 159, "76260241e": 159, "09890091e": 159, "16973825e": 159, "38422915e": 159, "54406301e": 159, "82908856e": 159, "06195525e": 159, "21987207e": 159, "51026374e": 159, "31385944e": 159, "36832387e": 159, "10194808e": 159, "12706645": 159, "1471807": 159, "11300729": 159, "1497489": 159, "15689742": 159, "15497599": 159, "15887778": 159, "15239956": 159, "1541509": 159, "15434079": 159, "15308929": 159, "14778115": 159, "14353765": 159, "14642567": 159, "13629278": 159, "13739056": 159, "1202737": 159, "15177162": 159, "1510202": 159, "14927889": 159, "15778361": 159, "13734517": 159, "00981551": 159, "12396176": 159, "14384261": 159, "14991691": 159, "0936683": 159, "10998677": 159, "11870976": 159, "16228832": 159, "15880678": 159, "17617328": 159, "12965455": 159, "13772134": 159, "14785981": 159, "13627598": 159, "17093183": 159, "1189228": 159, "10336518": 159, "12629383": 159, "14222274": 159, "13799138": 159, "12981884": 159, "16297189": 159, "15845984": 159, "13077619": 159, "15656133": 159, "16060489": 159, "11805402": 159, "14021942": 159, "createproximitymatrix": 159, "33607823e": 159, "69976843e": 159, "80285954e": 159, "41648335e": 159, "38278275e": 159, "51753802e": 159, "90919719e": 159, "88702158e": 159, "65910722e": 159, "18671103e": 159, "73374647e": 159, "45881912e": 159, "59966914e": 159, "63553433e": 159, "85061645e": 159, "08380506e": 159, "21989770e": 159, "05000993e": 159, "56991352e": 159, "65510715e": 159, "18345495e": 159, "rem\u00e9di": [160, 196, 210, 217], "memory_profil": 160, "datax": [160, 161], "datay": [160, 161], "n_clusters_per_class": [160, 161], "n_inform": [160, 161], "62557523": 160, "92972784": 160, "19327029": 160, "01669145": 160, "66440003": 160, "05373302": 160, "09569564": 160, "62733": 160, "05437465": 160, "43404744": 160, "88137987": 160, "1603541": 160, "97569429": 160, "28962313": 160, "06727548": 160, "81364917": 160, "15972723": 160, "99923386": 160, "25393473": 160, "67807834": 160, "74986482": 160, "68848993": 160, "83230911": 160, "15836161": 160, "71428315": 160, "53155132": 160, "49799497": 160, "53866452": 160, "55477724": 160, "79401366": 160, "kneighborsclassifi": [160, 161], "brut": [160, 161, 204], "x27": 160, "kneighborsclassifierifittedkneighborsclassifi": 160, "sklpathf": 160, "sklpath": 160, "448": 160, "ipykernel_4917": 160, "1382514021": 160, "_classif": 160, "738": 160, "kneighbor": 160, "_pairwise_distances_reduct": 160, "_dispatch": 160, "_validate_dat": 160, "660": 160, "check_array": 160, "_assert_all_finit": 160, "threadpool_limit": 160, "threadpoolctl": 160, "2177": 160, "458": 160, "412": 160, "414": [160, 162], "274": 160, "813": 160, "818": 160, "num_thread": 160, "is_usable_for": 160, "846": 160, "get_num_thread": 160, "856": 160, "set_num_thread": 160, "ctyp": 160, "_method": 160, "_sum": 160, "1417": 160, "check_is_fitted": 160, "1140": 160, "391": [160, 200], "__getitem__": [160, 196], "_wrapfunc": 160, "278": 160, "_set_threadpool_limit": 160, "joblib": [160, 216], "411": 160, "effective_n_job": 160, "1379": 160, "_is_fitted": 160, "get_active_backend": 160, "_num_sampl": 160, "restore_original_limit": 160, "1017": 160, "etudi": [160, 214], "pairwise_dist": 160, "what_to_measur": 161, "07576929999959248": 161, "nf_set": 161, "nob": 161, "ys": 161, "nf": 161, "dt2": 161, "ball_tre": 161, "0035799999996015686": 161, "08653190000040922": 161, "010255199999846809": 161, "11729259999992792": 161, "005994999999529682": 161, "11148469999989175": 161, "004818200000045181": 161, "12828609999996843": 161, "005615799999759474": 161, "0024919999996200204": 161, "04157219999979134": 161, "007431699999870034": 161, "11408440000013798": 161, "0051083999996990315": 161, "3907441999999719": 161, "random_sparse_matrix": 161, "ratio_spars": 161, "nnz": 161, "what_to_measure_spars": 161, "nb_spars": 161, "sparse_ratio": 161, "16139359999942826": 161, "16765100000066": 161, "9546476190476191": 161, "157290099999955": 161, "9173545454545454": 161, "374867700000323": 161, "37886189999972": 161, "7777733333333333": 161, "63584069999979": 161, "mesuron": 161, "what_to_measure_perf": 161, "good": [161, 173], "0014494000006379792": 161, "perf": 161, "0015942999998515006": 161, "0019345000000612345": 161, "002628500000355416": 161, "001998000000639877": 161, "0025021000001288485": 161, "concordent": 161, "revenon": 161, "hyperplan": 161, "inert": 161, "pca": 161, "what_to_measure_perf_acp": 161, "acp_dim": 161, "t1o": 161, "t2o": 161, "goodo": 161, "n_component": 161, "t0": 161, "x_train_pc": 161, "x_test_pc": 161, "002483399999618996": 161, "06338310000046476": 161, "22452249999969354": 161, "p_noacp": 161, "y_noacp": 161, "dt_noacp": 161, "perf_noacp": 161, "dt_train": 161, "dt_predict": 161, "0015590000002703164": 161, "0045598999995490885": 161, "0020978000002287445": 161, "003090600000177801": 161, "10930980000011914": 161, "009109900000112248": 161, "05428739999933896": 161, "13726130000031844": 161, "198": 161, "0553301999998439": 161, "046151300000019546": 161, "eton": 161, "transfer": [161, 208], "conseerv": 161, "absurd": [162, 163], "contred": 162, "matrix_distance_7398": [162, 163], "boulogn": [162, 163], "billancourt": [162, 163], "beauv": [162, 163], "85597": [162, 163], "courbevoi": [162, 163], "sevran": [162, 163], "26564": [162, 163], "colomb": [162, 163], "alfortvill": [162, 163], "36843": [162, 163], "bagneux": [162, 163], "marcq": [162, 163], "baroeul": [162, 163], "233455": [162, 163], "suresn": [162, 163], "gennevilli": [162, 163], "10443": [162, 163], "charlevill": [162, 163], "mezier": [162, 163], "bordeau": [162, 163], "\u00e9chapp": [162, 179, 211], "djikstr": 162, "skieur": [162, 163, 190], "rentrent": 162, "lou": 162, "convient": [162, 210, 214], "t_i": [162, 163], "arrang": 162, "t_n": [162, 163], "hlin": [162, 212], "t_3": 162, "t_4": 162, "t_": 162, "s_3": 162, "s_4": 162, "s_5": 162, "s_6": 162, "s_7": 162, "sigma_m": 162, "ski": [162, 163, 190], "4496565125341727": 162, "6181478314088333": 162, "6472124781567143": 162, "689855001829289": 162, "7069363711449275": 162, "720882923000757": 162, "7315603136077902": 162, "757295341401446": 162, "806174917827697": 162, "8273604346819485": 162, "539691655662206": 162, "5677016209991443": 162, "651632433144162": 162, "6723990573029228": 162, "6967500647083442": 162, "6991707543184964": 162, "7173171973288348": 162, "764722044308385": 162, "789682343736771": 162, "8113678294188096": 162, "8872585832253812": 162, "8910607675180564": 162, "893354126537998": 162, "9435870591562554": 162, "9577834515908243": 162, "caract\u00e8ris": 162, "v_0": 162, "sum_v": 162, "agorithm": 162, "dikjstr": 162, "fe": [162, 179], "1684": 162, "3437": 162, "348": 162, "3980": 162, "686": 162, "698": 162, "d\u00e9compress": [162, 212], "7zip": 162, "pysens": 162, "mac": [162, 212], "tar": 162, "60050": 162, "2290": 162, "2363": 162, "2346": 162, "2025": 162, "2140": 162, "2428": 162, "2201": 162, "2506": 162, "2425": 162, "2557": 162, "vil": 163, "rejoindr": 163, "7888": 163, "keyerror": [163, 199, 219], "m\u00e9zi": 163, "816197": 163, "813197": 163, "795670": 163, "skis": [163, 190], "t_j": 163, "t_k": 163, "nec\u00e9ssair": 163, "restreindr": 163, "301415513544109": 163, "graph_notebook_sk": 163, "xymatrix": 163, "stratifi": [164, 165], "tmoertel": 164, "round": [164, 165, 210], "w_": [164, 165], "brib": [164, 165], "prisoner": [164, 165], "royaum": 164, "prison": [164, 165], "vivent": [164, 179], "rel\u00e2ch": [164, 204, 217], "liber": [164, 217], "parlent": 164, "veil": 164, "relach": 164, "104": [164, 211], "x_k": 164, "k_i": 164, "k_a": 164, "k_t": 164, "sol": 165, "inter": 165, "benjamin": 165, "donnot": 165, "new_intervall": 165, "mymax": 165, "fondamental": [165, 211], "oracl": 165, "esoudr": 165, "priso": 165, "groupkfold": 165, "stratified": 165, "codeforc": [166, 167], "483a": [166, 167], "geologist": [166, 167], "sometim": [166, 167], "rainfall": [166, 167], "drainag": [166, 167], "basin": [166, 167], "elev": [166, 167], "altitud": [166, 167, 196], "rul": [166, 167], "wat": [166, 167], "neighboring": [166, 167], "sink": [166, 167], "ti": [166, 167, 219], "west": [166, 167], "south": [166, 167], "drain": [166, 167], "directly": [166, 167], "indirectly": [166, 167], "labeled": [166, 167], "concatenated": [166, 167, 204], "resulting": [166, 167], "lexicographically": [166, 167], "smallest": [166, 167], "western": [166, 167], "alway": [166, 167, 202, 210, 214], "lead": [166, 167], "evil": [166, 167], "leagu": [166, 167], "bad": [166, 167, 204], "hors": [166, 167], "recently": [166, 167], "been": [166, 167], "far": [166, 167], "backstabbing": [166, 167], "decided": [166, 167], "department": [166, 167], "separat": [166, 167], "troublesom": [166, 167], "member": [166, 167], "thoroughbred": [166, 167], "isn": [166, 167], "his": [166, 167], "valuabl": [166, 167], "figuring": [166, 167], "himself": [166, 167], "got": [166, 167], "loyal": [166, 167], "henchman": [166, 167], "uva": [166, 167], "10911": [166, 167], "job": [166, 167], "forming": [166, 167], "quiz": [166, 167], "mca": [166, 167], "cpci": [166, 167], "championship": [166, 167], "student": [166, 167], "interested": [166, 167], "participat": [166, 167], "consisting": [166, 167], "memb": [166, 167], "near": [166, 167], "sure": [166, 167], "x_3": [166, 167], "minimized": [166, 167], "adn": 167, "fulkerson": 167, "flot": 167, "enrich": 168, "physiqu": [168, 212], "atout": 168, "tarot": 168, "fastidi": [168, 169, 170, 184, 196, 211, 214, 217], "mesparametr": 168, "pas_gradient": 168, "fonction_any": 168, "pronom": 168, "0x7fb13a470c10": 168, "autre_point": 168, "appliq": 168, "carremag": [168, 169], "rattach": 168, "4031242374328485": 168, "lx": 168, "738793548317167": 168, "000000000010186": 168, "est_nul": 168, "somme_ligne_colonne_diagonal": 169, "coefficient_un": 169, "est_mag": 169, "tous_les_carre_na": 169, "tous_les_carre_naif2": 169, "stop_aft": 169, "tous_les_carres_permut": 169, "firstn": 169, "devenu": 169, "380064799999673": 169, "tous_les_carres_permutation_ligne12_meme_somm": 169, "435667799996736": 169, "5677748000016436": 169, "tous_les_carr": 169, "version1": 170, "fonction1": [170, 204], "fonction2": [170, 210], "fonction3": 170, "fonction_final": 170, "version2": 170, "tirage_aleatoir": [170, 171], "precedent": [170, 171, 204, 210, 211], "moyenne_tirag": [170, 171], "joueur": [170, 176, 217], "tricheur": 170, "piecetruque": [170, 171], "piecetruqueemix": [170, 171], "al\u00e9atoiremnt": 170, "truque": [170, 171, 196], "d\u00e9cryptag": [172, 173], "polynom": 172, "2x": 172, "log_bas": 172, "9999999999999996": 172, "965784284662087": 172, "lettre_suiv": [172, 173], "valeur_absolu": 172, "acroym": 172, "compact": [172, 182, 183], "timecomplexity": 172, "pr\u00e9dictibl": 172, "aeco": 172, "eddard": [172, 173], "catelyn": [172, 173], "robb": [172, 173], "sansa": [172, 173], "arya": [172, 173], "brandon": [172, 173], "rickon": [172, 173], "theon": [172, 173], "rorbert": [172, 173], "cersei": [172, 173], "tywin": [172, 173], "jaim": [172, 173], "tyrion": [172, 173], "sha": [172, 173], "bron": [172, 173], "lancel": [172, 173], "joffrey": [172, 173], "sandor": [172, 173], "vary": [172, 173], "renly": [172, 173], "mots_lettre_posit": [172, 173], "dictionnaire_bien_chois": [172, 173], "reformul": 172, "jenesuispascod": [172, 173], "mhqhvxlvsdvfrgh": [172, 173], "dop": [172, 173], "traduit": [172, 210, 211, 219], "dictionnaire_chois": 173, "dictionair": 173, "unordered_map": 173, "stl": 173, "accessing": 173, "code_cesar": 173, "mschgjlgedgrrrt": 173, "int_a": 174, "6145744834544478": [174, 175], "ave": [175, 179], "2320146802585272": 175, "integrale_precis": 175, "val0": 175, "5050000000000003": [175, 190], "2196877891927724": 175, "piano": 175, "int2": [175, 178], "integrale_precise_2n": 175, "5000454610560389": 175, "81920": 175, "2169740198498182": 175, "int_0": 175, "xdx": 175, "discontinu": 175, "max_fp": 175, "last_f": 175, "fx": 175, "md": [175, 212], "integrale_precise_derive": 175, "5004995004994989": 175, "integrale_bizarr": 175, "px": 175, "0625": 175, "2857142857142856": 175, "rationnel": 175, "tombent": 175, "integrale_mc": 175, "5443922662659958": 175, "integrale_mc_precis": 175, "moy0": 175, "5001005538840249": 175, "i_n": 175, "16m": 175, "16e4": 175, "500765653300686": 175, "885": 175, "create_gam": 177, "gameover1": 177, "masked_not_equal": 177, "gameov": 177, "gam": 177, "process_lin": 177, "prev": 177, "update_gam": 177, "reversed": 177, "grammair": [178, 180, 210, 219], "interag": 178, "capteur": 178, "tsv": [178, 212], "fallu": [178, 196], "literal": [178, 211], "pr\u00e9vus": [178, 199], "permanent": [178, 217], "vocat": [178, 179, 217], "condens": 178, "pyramide_bigarre": 178, "td2_1": [178, 189], "classes_heritage_correct": 178, "lemonde5": [178, 185], "voeux83": [178, 179], "classes_carre_mag": 178, "lemonde3": [178, 185], "blogny1": [178, 185], "blog3": [178, 185], "nytimes5": [178, 185], "classes_carre_magique_correct": 178, "integrale_rectangle_correct": 178, "nytimes2": [178, 185], "voeux05": [178, 179], "module_file_regex": 178, "__pycache__": [178, 212, 214], "lemonde1": [178, 185], "nytimes8": [178, 185], "voeux06": [178, 179], "dictionnaire_vigener": 178, "voeux": [178, 179], "lemonde9": [178, 185], "voeux08": [178, 179], "texte_langue_correct": 178, "nytimes1": [178, 185], "voeux01": [178, 179], "premiers_pas_correct": 178, "nytimes9": [178, 185], "voeux74": [178, 179], "j2048": 178, "voeux75": [178, 179], "elpais2": [178, 185], "lequipe1": [178, 185], "voeux94": [178, 179], "lemonde7": [178, 185], "lemonde10": [178, 185], "seance4_excel": [178, 179], "arthur_charpentier2": [178, 184, 185], "afp2": [178, 184, 185], "inconnu2": [178, 185], "pyramide_bigarree_correct": 178, "afp1": [178, 184, 185], "lemonde8": [178, 185], "elpais5": [178, 185], "hex": [178, 182, 183, 211], "module_file_regex_correct": 178, "nytimes3": [178, 185], "voeux89": [178, 179], "arthur_charpentier3": [178, 184, 185], "voeux87": [178, 179], "lemonde11": [178, 185], "elpais4": [178, 185], "nytimes7": [178, 185], "lemonde2": [178, 185], "inconnu1": [178, 185], "lequipe2": [178, 185], "premiers_p": 178, "lemonde6": [178, 185], "blog1": [178, 185], "voeux09": [178, 179], "voeux90": [178, 179], "elpais7": [178, 185], "exemple_fichi": 178, "elpais6": [178, 185], "texte_langu": 178, "integrale_rectangl": 178, "voeux07": [178, 179], "classes_heritag": 178, "arthur_charpentier1": [178, 184, 185], "lemonde4": [178, 185], "blog2": [178, 185], "dictionnaire_vigenere_correct": 178, "variable_boucle_test": 178, "nytimes6": [178, 185], "elpais3": [178, 185], "variable_boucle_tests_correct": 178, "j2048_correct": 178, "nytimes4": [178, 185], "voeux79": [178, 179], "elpais1": [178, 185], "pragmat": 178, "reconnu": 178, "exportent": 178, "grop": 178, "volum": 178, "3x3": [178, 179], "gz": 178, "wav": 178, "mp3": [178, 212, 219], "ogg": 178, "musiqu": [178, 219], "mp4": 178, "vorb": 178, "v\u00f4tr": 178, "5403023058681398": [178, 179], "\u00eate": [178, 179], "n\u00e9": [178, 183, 207], "fonction_cos_sequent": [178, 179], "dynload": 178, "4161468365471424": [178, 179], "recharg": [178, 179, 210, 214], "async_helper": 178, "autocall": 178, "builtin_trap": 178, "completerlib": 178, "pr\u00e9ambul": 178, "1903": 178, "1957": 178, "indiff\u00e9rent": 178, "securit": [178, 179], "insecurit": [178, 179], "mako": [178, 179], "templating": [178, 179], "dimanch": [178, 179], "seance4_excel_mat": 179, "6414749515069115": 179, "4096411389655439": 179, "7991926327688407": 179, "9918119068265183": 179, "07379598399157106": 179, "4290244325276996": 179, "9337274118746318": 179, "17483162769873706": 179, "6159652170653446": 179, "4835251137894401": 179, "date1": 179, "2013": 179, "date0": 179, "birth": 179, "1975": [179, 207], "weekday": 179, "lund": [179, 207], "monmodule2": 179, "monmodule3": 179, "Mes": 179, "compatriot": 179, "peupl": 179, "rassembl": [179, 196], "respir": 179, "rythm": 179, "bat": 179, "coeur": 179, "f\u00eat": 179, "no\u00ebl": 179, "participent": 179, "joi": 179, "retrouvaill": 179, "chaleur": 179, "familial": 179, "amical": 179, "toulous": 179, "\u00e9preuv": 179, "solidar": 179, "amiti": 179, "nation": 179, "vivr": 179, "ignorecas": 179, "soldat": 179, "constru": 179, "victim": 179, "salu": 179, "avancent": 179, "avan": 179, "souffranc": 179, "gouvern": 179, "tristess": 179, "foi": 179, "profon": 179, "craint": 179, "\u00e9prouvent": 179, "angoiss": 179, "\u00e9treint": 179, "peur": 179, "exasper": 179, "entreprendr": 179, "int\u00e9": 179, "fiert": 179, "brutal": 179, "efforc": 179, "agi": 179, "souc": [179, 204], "d\u00e9fendr": 179, "enver": 179, "trah": 179, "hypocris": 179, "urg": 179, "risquent": [179, 204], "leu": 179, "doulour": 179, "cett": 179, "responsab": 179, "prot": 179, "devo": 179, "persuad": 179, "fragil": 179, "r\u00e9form": 179, "p\u00e9nal": 179, "ministr": 179, "fran\u00e7ois": 179, "fillon": 179, "cepen": 179, "hommag": 179, "froid": 179, "partenair": 179, "renonc": [179, 211], "boulevers": 179, "r\u00e9publ": 179, "redon": 179, "JE": 179, "VOUS": 179, "NE": 179, "ennui": 179, "AI": 179, "dej": 179, "decrit": 179, "ET": 179, "DE": 179, "PAR": 179, "QUE": 179, "MES": 179, "SOIENT": 179, "LES": 179, "AU": 179, "LA": 179, "societ": 179, "francais": 179, "SOIT": 179, "fraternit": 179, "EST": 179, "AUX": 179, "agriculteur": 179, "artisan": 179, "devront": [179, 210], "examin": 179, "QU": 179, "EN": 179, "CE": 179, "rol": 179, "LUI": 179, "LE": 179, "OU": 179, "NOUS": 179, "appa": 179, "PAS": 179, "AVEZ": 179, "ILS": 179, "ONT": 179, "recu": 179, "AVEC": 179, "SUIS": 179, "etaient": 179, "couvert": 179, "LEUR": 179, "EUX": 179, "NOS": 179, "departem": 179, "a_l_etrang": 179, "QUI": 179, "malheur": 179, "SONT": 179, "hopital": 179, "egal": 179, "salut": 179, "travailleur": 179, "imm": 179, "chretien": 179, "TU": 179, "SOIES": 179, "UNE": 179, "accueil": 179, "POUR": 179, "president": 179, "1976": [179, 219], "grandeu": 179, "ELLE": 179, "SUR": 179, "entent": 179, "ren": 179, "aymon": 179, "SES": 179, "echangent": 179, "conduit": 179, "MON": 179, "1979": 179, "SON": 179, "revien": 179, "afriqu": 179, "ME": 179, "union": [179, 211], "soviet": 179, "urss": 179, "UN": 179, "prepar": 179, "av": 179, "UNS": 179, "promet": 179, "fa": 179, "soutiendr": 179, "lass": 179, "invit": [179, 210], "\u00e2g\u00e9": 179, "fratern": 179, "ardemment": 179, "reprennent": [179, 211], "\u00e9lect": 179, "pr\u00e9sidentiel": 179, "na\u00eetr": 179, "conf\u00e9der": 179, "dign": 179, "chanti": 179, "tribun": 179, "der": 179, "dois": 179, "redir": 179, "admir": 179, "\u00e9quipag": 179, "r\u00e9confort": 179, "accompl": 179, "qual": 179, "dissoc": 179, "naguer": 179, "gra": 179, "\u00e9cout": [179, 211, 217], "enac": 179, "ins\u00e9cur": 179, "r\u00e9forment": 179, "rvic": 179, "\u00e9nerg": 179, "immigr": 179, "banlieu": 179, "r\u00e9nov": 179, "recour": [179, 211], "isra\u00ebl": 179, "palestinien": 179, "patr": 179, "python_": 179, "doctyp": 179, "noj": 179, "enabled": 179, "disabled": [179, 204, 217], "sticky": [179, 204], "pinned": 179, "toc": 179, "page_str": 179, "creativecommon": 179, "deed": 179, "af": 179, "programmeertaal": 179, "programmiersprach": 179, "d8": 179, "a8": 179, "a7": 179, "d9": 179, "8a": 179, "86_": 179, "ba": [179, 187], "a9_": 179, "a9": 179, "e0": [179, 187], "a6": 179, "a5": 179, "ast": 179, "az": 179, "proqraml": 179, "9fd": 179, "b1rma_dil": 179, "azb": 179, "8c": 179, "ul": 179, "endfor": 179, "tpl": 179, "ch\u00f4mag": 180, "incident": [180, 196, 210, 214], "aiguillag": [180, 217], "incompr\u00e9hensibl": 180, "torchon": 180, "serviet": 180, "factoriel": [180, 181, 210], "fautiv": 181, "195": [181, 200], "premmi": 181, "4037913": 181, "miracl": [182, 183], "verg": [182, 183], "commercial": [182, 183], "acre": [182, 183], "permacultur": [182, 183], "qu\u00e9bec": [182, 183], "biodiversite_tri2": [182, 183], "boul": [182, 183], "empil": [182, 183, 204, 217], "pyramide_num2": 183, "scatter_demo": 183, "rgb": 183, "typiqu": [184, 200], "oeuvr": 184, "litt\u00e9rair": 184, "m\u00e9langent": 184, "\u00e9tiquet": 184, "conclur": [184, 211], "admetton": 184, "disposon": 184, "infaillibl": 184, "dup": 184, "d\u00e9licat": 185, "read_file_enc": 185, "enc": [185, 208], "corbeau": 185, "bec": 185, "fromag": [185, 196], "ma\u00eetr": 185, "renard": 185, "odeur": [185, 196], "allech": 185, "Lui": 185, "\u00ee": 185, "histogram2": 185, "pourrion": 185, "007751937984496124": 185, "06976744186046512": 185, "17829457364341086": 185, "03875968992248062": 185, "031007751937984496": 185, "08527131782945736": 185, "023255813953488372": 185, "10077519379844961": 185, "07751937984496124": 185, "05426356589147287": 185, "015503875968992248": 185, "0067247820672478205": 185, "007575757575757576": 185, "007012142979305627": 185, "02588801926550271": 185, "004853022739877981": 185, "010752688172043012": 185, "007556675062972292": 185, "010554089709762533": 185, "029830508474576273": 185, "01349112426035503": 185, "005625270445694505": 185, "005441436539246361": 185, "00224408769204212": 185, "009715025906735751": 185, "0051919661155895615": 185, "00016849199663016007": 185, "010804020100502512": 185, "007139797229758675": 185, "0021551724137931034": 185, "0055272108843537416": 185, "0014691478942213516": 185, "004875076173065204": 185, "0044822949350067235": 185, "007034547444114429": 185, "0020463847203274215": 185, "0034299968818210166": 185, "008162299639202697": 185, "00572041473006793": 185, "005029013539651838": 185, "030130034887408817": 185, "031933508311461065": 185, "02547634339541854": 185, "03934426229508197": 185, "035542582417582416": 185, "030610255410411385": 185, "04194094414143314": 185, "03151779230210603": 185, "03840526700804682": 185, "lemond": 185, "lem": 185, "text_other": 185, "wrap": 185, "tra\u00efll": 186, "mot_al": [186, 187], "clock": 186, "list_exercice_1": 186, "ted": 186, "inn": 186, "wiki_tr": 186, "wiki_trie2": [186, 187], "2651422999999795": 187, "208": 187, "06771000000003369": 187, "tolook": 187, "ds": 187, "340000032243552e": 187, "00010930000007647322": 187, "1003433318879937": 187, "00016539999978704145": 187, "00020910000012008823": 187, "5017166594399687": 187, "0016119000001708628": 187, "0002951000001303328": 187, "3447777295997914": 187, "025103800000124465": 187, "0005895999997846957": 187, "085832971998425": 187, "4739787999997134": 187, "0006374999998115527": 187, "68666377598748": 187, "marginal": 187, "aba": 187, "aab": 187, "bba": 187, "bab": 187, "bcc": 187, "print_tr": 187, "400000": 187, "00015950000033626566": 187, "00017660000003161258": 187, "0001847000003181165": 187, "0002316999998583924": 187, "00035339999976713443": 187, "0002839999997377163": 187, "0003455000000940345": 187, "00033450000000811997": 187, "0003973000002588378": 187, "0003483000000414904": 187, "session": 187, "children": 187, "child": 187, "child1": 187, "forest": 187, "arbredicho": 187, "after": [187, 204], "add_befor": 187, "add_aft": 187, "sorted_list": 187, "zillion": 187, "merveil": 187, "tutor": 187, "pythontutor": 187, "uilis": 187, "liste_chaine": 187, "attach": [187, 204, 210, 212, 217, 219], "atteindre_la_fin": 187, "position_cour": 187, "e1": 187, "e2": 187, "promen": 187, "cran": [187, 210], "appelon": 187, "surpren": [187, 210], "instuct": 187, "nplusieur": 188, "anything": 188, "trou": 188, "sloan": 188, "obtent": [188, 199, 211], "list1": 188, "list2": 188, "alourd": 188, "interrupt": 188, "lesqueel": 188, "experim": 188, "curieux": 189, "log2": 189, "456217": 189, "931568569324174": 189, "134146": 189, "166639": 189, "922092": 189, "728522": 189, "162931": 189, "741312": 189, "195045": 189, "642304": 189, "685730": 189, "__len__": [190, 196], "n_question": 190, "45454545454545453": 190, "glouton": 190, "baremeopt": 190, "matrice_not": 190, "els_pos": 190, "49000000000000005": 190, "4890909090909088": 190, "baremeopt2": 190, "b_j": 190, "remuner": 191, "renumer": 191, "distance_1": 191, "test_distance_1": 191, "fdist": 191, "remunner": 191, "distance_n": 191, "test_distance_n": 191, "iji": 191, "distance_levenstein": 191, "distance_levenstein_alignment": 191, "remunereer": 191, "rennnumer": 191, "munereer": 191, "rennnum": 191, "e\u00e9\u00eae": 191, "distance_levenstein_alignment_accent": 191, "r\u00e9munner": 191, "r\u00e9mu": 191, "ner": 191, "renuumer": 191, "eye": 193, "test_pivot_gauss": 193, "abn": 194, "aer": 194, "bii": 194, "bjk": 194, "cbb": 194, "position_premiere_lettr": 194, "ae": 194, "position_lettr": 194, "position_deux_lettr": 194, "pos1": [194, 204], "pos2": [194, 204], "build_dictionary": 194, "increment": 194, "premiere_lettr": 194, "position1": 194, "position_lettre_apr": 194, "position2": 194, "sous_mot": 194, "sous_mots_1": 194, "sous_dico": 194, "position_prefixe_dico": 194, "log_2": 194, "cro\u00eetr": 194, "d\u00e9tien": 196, "banqui": 196, "d\u00e9tenu": 196, "rectifi": 196, "intern": [196, 213], "forment": 196, "pr\u00e9d\u00e9fin": [196, 200, 217, 219], "transposit": 196, "instanti": 196, "classe_vid": 196, "run_python_script_140224172129280": 196, "run_python_script_140224177467584": 196, "ob\u00e9it": [196, 199, 210], "imit": 196, "methode1": 196, "397204094": 196, "2147483647": 196, "nb2": 196, "pourvu": 196, "run_python_script_140224182787456": 196, "d\u00e9couvrent": 196, "progressivent": 196, "classe2": 196, "classe1": 196, "autonom": [196, 204], "destructeur": 196, "destruct": [196, 204], "__del__": 196, "r\u00e9initialisent": 196, "__module__": 196, "__bases__": 196, "run_python_script_140224172692992": 196, "__weakref__": [196, 204, 214], "descriptor": [196, 204, 214], "weak": [196, 204, 214], "pydoc": 196, "essai_class": 196, "__delattr__": 196, "__dir__": 196, "__format__": 196, "__ge__": 196, "__gt__": 196, "__hash__": [196, 211], "__init_subclass__": 196, "__le__": 196, "__ne__": 196, "__new__": 196, "__reduce__": 196, "__reduce_ex__": 196, "__sizeof__": 196, "__subclasshook__": 196, "ensemble_el": 196, "nouvelle_cl": 196, "run_python_script_140224149459328": 196, "nombre_complex": 196, "get_modul": 196, "instar": [196, 210, 211, 219], "dor\u00e9nav": [196, 199, 210], "__iadd__": 196, "\u00e9toff": 196, "attard": 196, "__setitem__": 196, "point_espac": [196, 199], "l\u00e8vent": 196, "_z": 196, "run_python_script_140224146856256": 196, "arr\u00eatent": 196, "cmp": [196, 210], "__contains__": 196, "__abs__": 196, "lev": 196, "__delitem__": 196, "__int__": 196, "__float__": 196, "__complex__": 196, "__div__": 196, "__mul__": 196, "__sub__": 196, "__pow__": 196, "__lshift__": 196, "__idiv__": 196, "__imul__": 196, "__isub__": 196, "__ipow__": 196, "__ilshift__": 196, "__irshift__": 196, "exsit": 196, "moder": 196, "rightsid": 196, "leftsid": 196, "LS": 196, "__radd__": 196, "__rlshift__": 196, "__iter__": [196, 199], "__next__": 196, "stopiter": [196, 199, 210], "class_it": [196, 199], "_in": [196, 199], "_n": [196, 199], "affichent": 196, "ck": 196, "isntanc": 196, "incremente_rnd": 196, "classmethod": 196, "meth3": 196, "meth4": 196, "essai_cl": 196, "meth2": 196, "croir": 196, "pseudo": [196, 210], "d\u00e9truir": [196, 200, 204], "imaginair": 196, "conj": 196, "conjugu": 196, "set_modul": 196, "get_argu": 196, "set_argu": 196, "get_conjugu": 196, "866025": 196, "0471975512": 196, "09439510239": 196, "0471975511965976": 196, "0943951023931953": 196, "nom_copy": 196, "nom_inst": 196, "creationdestruct": 196, "d\u00e9truit": [196, 199, 200, 204], "classe_inclus": 196, "attr": 196, "re\u00e7oiv": [196, 204], "fonction_l": 196, "garbag": [196, 199, 200, 214, 217], "collector": [196, 199, 200, 214, 217], "__deepcopy__": 196, "memo": [196, 200], "objet1": 196, "objet2": 196, "o3": 196, "pointent": 196, "rencontrent": 196, "circulair": [196, 212], "artific": 196, "soupl": [196, 204, 211], "gag": 196, "t3": 196, "8068822999994154": 196, "5005380999991758": 196, "339184300000852": 196, "atribut": 196, "pil": [196, 199, 201, 217], "cent_tirag": 196, "truqu": 196, "reproduit": [196, 210], "piece_normal": 196, "piece_truque": 196, "devion": 196, "redevient": 196, "piece_tres_truque": 196, "resolu": [196, 199], "inherited": 196, "rubriqu": 196, "ira": 196, "run_python_script_140224134299520": 196, "h\u00e9ritent": 196, "offrait": 196, "appellent": [196, 217], "ancetr": 196, "h\u00e9riti": 196, "aver": [196, 210, 211], "dilemm": 196, "cub": 196, "repren": [196, 204], "fonction_somme_list": 196, "fonction_somme_dict": 196, "fonction_somm": 196, "undeuxtrois": 196, "incorpor": [196, 210], "indentationerror": [196, 199, 210], "unindent": [196, 210], "confond": [196, 210], "seilf": 196, "decoup": 196, "gruyer": 196, "fr2": 196, "fr3": 196, "g3": 196, "8333333333333334": 196, "61538461538461": 196, "76923076923077": 196, "7923076923076924": 196, "get_lin": 196, "get_col": 196, "get_submat": 196, "set_submat": 196, "matricelist": 196, "matricedict": 196, "produitclass": 196, "produitstrassen": 196, "architectur": [196, 208], "facilit": [196, 217], "lanag": 198, "deux_entiers_somm": 198, "deux_entiers_multipl": 198, "pr\u00e3": 198, "deux_enti": 198, "deuxenti": 198, "plu": 198, "disparit": [198, 204], "\u00e3": 198, "taient": 198, "m\u00e3\u00aame": 198, "deuxentiersmodif": 198, "anodin": 198, "run_python_script_140224145007744": 199, "baseexcept": 199, "run_python_script_140224142525888": 199, "produisent": [199, 217], "dirig": [199, 204], "intercept": [199, 200, 204, 210, 211], "48606594010979": 199, "0822096637057887j": 199, "accol": 199, "orthograph": [199, 219], "inexist": [199, 204], "importerror": [199, 204], "inappropri": 199, "oserror": 199, "unicodeerror": 199, "arithmeticerror": 199, "standarderror": 199, "was": [199, 200], "d\u00e9rivent": 199, "repr": [199, 204, 210], "racine_carre": 199, "run_python_script_140224140579008": 199, "interrompt": 199, "closed": 199, "intervenu": 199, "pr\u00e9mun": 199, "manager": 199, "premi\u00e8rel": 200, "demeur": [200, 210], "foncb": 200, "foncc": 200, "format_stack": 200, "runpy": 200, "_run_module_as_main": 200, "_run_cod": 200, "main_global": 200, "run_global": 200, "systemex": 200, "argv": 200, "build_main": 200, "298": 200, "app": 200, "force_all": 200, "355": 200, "build_updat": 200, "builder": 200, "to_build": 200, "updated_docnam": 200, "420": 200, "_read_serial": 200, "docnam": 200, "441": 200, "read_doc": 200, "reader": 200, "parser": 200, "statemachin": 200, "inputlin": 200, "rst": [200, 212], "statemachinew": 200, "input_lin": 200, "input_offset": 200, "next_stat": 200, "check_lin": 200, "445": 200, "3024": 200, "lstrip": 200, "new_subsect": 200, "newabsoffset": 200, "nested_pars": 200, "state_machin": 200, "block": [200, 210], "2785": 200, "underlin": [200, 204], "2355": 200, "explicit_markup": 200, "nodelist": 200, "blank_finish": 200, "explicit_construct": 200, "2367": 200, "expmatch": 200, "2104": 200, "run_direct": 200, "directive_inst": 200, "run_python_script": 200, "run_python_script_140224140290560": 200, "raise_except": 200, "insidef": 200, "exc_typ": 200, "exc_valu": 200, "exc_traceback": 200, "exc_info": 200, "format_tb": 200, "run_python_script_140224140617792": 200, "extract_tb": 200, "flask": [200, 216], "run_python_script_140224137052608": 200, "run_python_script_140224139666688": 200, "run_python_script_140224140312448": 200, "fautif": 200, "file_to_read": 200, "download_content": 200, "read_fromf_fil": 200, "unicodeencodeerror": 200, "\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9": 200, "\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0": 200, "run_python_script_140224140384128": 200, "codec": 200, "ascii_decod": 200, "unicodedecodeerror": 200, "0xc3": 200, "ordinal": 200, "soup\u00e7on": 202, "deprecationwarning": 202, "subsist": 202, "agac": 202, "fxn": 202, "catch_warning": 202, "monwarning": 202, "mass": [202, 212], "d\u00e9bugg": [202, 217], "attaqu": 202, "tkint": [203, 210, 214, 217], "convivial": 204, "demandent": 204, "wxpython": 204, "rich": 204, "pyqt5": 204, "pyqt4": 204, "verion": 204, "jol": 204, "licenc": 204, "graphical": 204, "forum": 204, "stackoverflow": 204, "tk": [204, 210, 217], "troubl": 204, "Du": 204, "entrem\u00eal": [204, 217], "widget": 204, "pilotent": 204, "contr\u00f4lent": 204, "zone_text": 204, "enrob": 204, "mainloop": [204, 210, 217], "doiv": 204, "gris": [204, 214], "button": [204, 210, 217], "interdir": [204, 212, 217], "gif": 204, "photoimag": 204, "chameau": 204, "entry": [204, 210], "differ": 204, "nsecond": 204, "checkbutton": 204, "intvar": 204, "radiobutton": 204, "d\u00e9coch": 204, "deselect": 204, "case1": 204, "case2": 204, "case3": 204, "agiront": 204, "listbox": 204, "select_set": 204, "select_clear": 204, "curselect": 204, "indextkk": 204, "adjoindr": [204, 217], "scrollbar": 204, "yscrollcommand": 204, "yview": 204, "sid": [204, 210], "tix": 204, "exportselect": 204, "itemconfig": 204, "ttk": 204, "print_fil": 204, "canv": 204, "create_lin": 204, "create_rectangl": 204, "create_text": 204, "b\u00e9zi": 204, "assis": 204, "smooth": 204, "gray": 204, "polic": 204, "arial": 204, "arborent": 204, "cnf": 204, "kw": 204, "unbound": 204, "specified": 204, "keyword": [204, 210], "allowed": 204, "activebackground": 204, "activeforeground": 204, "anchor": 204, "background": 204, "bitmap": 204, "borderwidth": 204, "cursor": 204, "disabledforeground": 204, "foreground": 204, "highlightbackground": 204, "highlightcolor": 204, "highlightthickness": 204, "justify": 204, "padx": 204, "pady": 204, "relief": 204, "repeatdelay": 204, "repeatinterval": 204, "takefocus": 204, "textvari": 204, "wraplength": 204, "specific": 204, "compound": 204, "overrelief": 204, "souci": 204, "attendus": 204, "both": 204, "pack_forget": 204, "r\u00e9appara\u00eetr": 204, "re\u00e7u": [204, 210, 212], "columnspan": 204, "rowspan": 204, "grid_forget": 204, "place_forget": 204, "focus_set": 204, "change_legend": 204, "augmentent": 204, "muet": 204, "ctrl": 204, "alt": 204, "suppr": 204, "keysym": 204, "x_root": 204, "y_root": 204, "occur": 204, "keypress": 204, "keyreleas": 204, "keyboard": 204, "buttonpress": 204, "buttonreleas": 204, "motion": 204, "enter": 204, "mousewheel": 204, "visibility": 204, "unmap": 204, "focusin": 204, "focusout": 204, "circulat": 204, "gravity": 204, "reparent": 204, "destroy": [204, 210], "activat": 204, "deactivat": 204, "callback": 204, "registered": 204, "bind": [204, 217], "bind_all": 204, "bind_class": 204, "tag_bind": 204, "brac": 204, "serial": 204, "pressed": 204, "exposed": 204, "keycod": 204, "occurred": 204, "send_event": 204, "keysym_num": 204, "curseur": 204, "mod2": 204, "mod3": 204, "mod4": 204, "m4": 204, "button1": 204, "mod5": 204, "button2": 204, "button3": 204, "button4": 204, "b4": 204, "button5": 204, "b5": 204, "mod1": 204, "pressing": 204, "omitted": 204, "virtual": 204, "astring": 204, "arbitrary": 204, "event_generat": [204, 217], "appear": 204, "shortly": 204, "invoked": 204, "specif": [204, 210], "additionally": 204, "unbind": 204, "leak": 204, "returned": 204, "affiche_touche_presse": 204, "evt": 204, "presse": 204, "292": 204, "9261224": 204, "exemple_bind": 204, "python26": 204, "933": 204, "_bind": 204, "_w": 204, "_tkint": 204, "tclerror": 204, "d\u00e9sact": [204, 217], "unbind_all": 204, "xsyntax": 204, "p\u00e9ripher": 204, "toplevel": 204, "add_cascad": 204, "mainmenu": 204, "msousmenu": 204, "add_command": 204, "sm1": 204, "sm2": 204, "ajoute_bouton": 204, "deiconify": 204, "iconify": 204, "ic\u00f4n": 204, "withdraw": 204, "compl\u00e8tent": 204, "progressbar": 204, "treeview": 204, "dirtre": 204, "fileselectbox": 204, "appartiennent": 204, "nouvelle_fenetr": 204, "sec": 204, "fenetr": 204, "fileselect": 204, "get_list": 204, "isdir": [204, 212], "listf": 204, "lifil": 204, "lid": 204, "wm_titl": 204, "fli": 204, "update_chemin": 204, "update_list": 204, "update_sel": 204, "cget": 204, "isol": [204, 210, 212], "gestion": [204, 214], "\u00e9v\u00e9nementiel": 204, "diss\u00e9min": 204, "espion": 204, "lap": 204, "after_cancel": 204, "personnifi": 204, "substitu": [204, 210], "malistbox": 204, "bg": 204, "itemconfigur": 204, "prolong": 204, "mafenetr": 204, "commande_bouton1": 204, "commande_bouton2": 204, "lab": 204, "pointeur": 204, "r\u00e9cept": 204, "consult": 204, "intervenus": 204, "offrent": [204, 211], "feront": 204, "mafenetreseq": 204, "perso": 204, "rooty": 204, "conservent": 205, "classeperson": 205, "_field": 205, "comptag": 205, "agil": 205, "flagr": 205, "append_time_list": 205, "append_time_dequ": 205, "06130500000108441": 205, "04719219999969937": 205, "312000": 207, "12614": 207, "712000": 207, "433382": 207, "17598": 207, "calendar": [207, 214], "itermonthdays2": 207, "timestamp": 207, "fromtimestamp": 207, "1705149883": 207, "447678": 207, "domin": 208, "japon": 208, "asiat": 208, "cp1252": [208, 211], "deviendr": 208, "e\u00e9": 208, "sb": 208, "platform": [208, 214], "getdefaultencoding": 208, "getdefaultlocal": 208, "0x7f88ee2aa9e0": 208, "en_us": 208, "ordereddict": 209, "namedtupl": 209, "\u00e9l\u00e9mentair": 210, "aisanc": 210, "acquer": 210, "ruptur": 210, "combinent": 210, "nuanc": 210, "reconna\u00eetr": 210, "inconnus": 210, "iskeyword": 210, "until": 210, "kwlist": 210, "async": 210, "await": 210, "nonlocal": 210, "ajoutent": 210, "particuili": 210, "grammar": 210, "affil": 210, "condition2": 210, "condition3": 210, "instruction5": 210, "instruction6": 210, "instruction7": 210, "instruction8": 210, "transcrivent": 210, "prioritair": 210, "juxtapos": [210, 211, 219], "press": [210, 217], "repons": 210, "rget": 210, "nopass": 210, "indented": 210, "scrupul": 210, "d\u00e9guis": 210, "pr\u00e9matur": 210, "convertibl": 210, "run_python_script_140223796697984": 210, "collag": 210, "cribl": 210, "eratosthen": 210, "d\u00e9nich": 210, "3i": 210, "ray": 210, "run_python_script_140224129837760": 210, "endroitsfootnot": 210, "coordonnees_polair": 210, "414214": 210, "118034": 210, "434949": 210, "565051": 210, "commander_carte_orang": 210, "chequ": 210, "problem_zon": 210, "retor": 210, "valeur_": 210, "param_": 210, "identit": 210, "portent": 210, "run_python_script_140224128668608": 210, "required": 210, "positional": 210, "ndigit": 210, "floating": 210, "digit": 210, "negat": 210, "pho": 210, "somme_n_premier_term": 210, "statut": 210, "ininterrompu": 210, "fact": 210, "factorielle_non_recurs": 210, "run_python_script_140224127626880": 210, "portee_vari": 210, "run_python_script_140224127605440": 210, "opposit": 210, "locale_global": 210, "affiche_pair": 210, "fonction_local": 210, "run_python_script_140224129805760": 210, "ind\u00e9termin": 210, "liste_valeur_1": 210, "liste_valeur_p": 210, "nom_1": 210, "nom_q": 210, "v_q": 210, "n\u00e9cess": 210, "nom_fonct": 210, "reprendr": 210, "fonction_yield": 210, "run_python_script_140224129352896": 210, "4142135623730951": 210, "78539816339744828": 210, "7853981633974483": 210, "agreg": 210, "perl": 210, "est_pair": 210, "0x7f887a8ae6e0": 210, "issubclass": 210, "typag": 211, "desquel": 211, "sc": 211, "suivront": [211, 212], "maint": 211, "repris": 211, "privileg": 211, "\u00e9num": 211, "impossibil": 211, "expliquent": 211, "comprennent": 211, "opertor": 211, "zz": 211, "guillemet": 211, "interchange": 211, "1morceau": 211, "commod": 211, "recoll": 211, "pourcentag": 211, "usit": 211, "lexical": 211, "567": 211, "ed": 211, "med": 211, "eniem": 211, "printf": 211, "formatting": 211, "transcrit": 211, "abra": 211, "cad": 211, "abracadabr": 211, "24n": 211, "81w": 211, "coord": 211, "aligned": 211, "centered": 211, "aleft": 211, "alignedb": 211, "oct": 211, "1234567890": 211, "2a": 211, "101010": 211, "0x2a": 211, "0o52": 211, "0b101010": 211, "indroduit": 211, "excentr": 211, "notabl": 211, "formattag": 211, "run_python_script_140224124795776": 211, "1j": 211, "2j": 211, "fromhex": 211, "2ef0": 211, "f1f2": 211, "xf0": 211, "xf1": 211, "xf2": 211, "sigl": 211, "soupless": 211, "compare_key": 211, "run_python_script_140224124416192": 211, "verron": 211, "dison": 211, "ensemb": 211, "juxtaposit": 211, "0x7f8879077600": 211, "l3": 211, "surprendr": 211, "1111": 211, "dress": 211, "dinv": 211, "parcout": 211, "dicionnair": 211, "cledict": 211, "0x0120db90": 211, "18930576": 211, "0x120db90": 211, "hexad\u00e9cimal": 211, "st\u00e9thoscop": 211, "288": 211, "5555555555555554": 211, "__wd__": 211, "__builtins__": [211, 214], "reviendr": 211, "divmod": 211, "transpara\u00eetr": 211, "traduir": 211, "influenc": 211, "concepteur": 212, "textuel": 212, "reportlab": 212, "allong": [212, 214], "perturb": 212, "separated": 212, "ppend": 212, "ead": 212, "tampon": 212, "flush": 212, "technolog": [212, 217], "diverg": 212, "d\u00e9coupag": 212, "d\u00e9cryptent": 212, "relu": 212, "acaracter": 212, "r\u00e9pandus": 212, "exemplezip": 212, "fz": 212, "infolist": 212, "date_tim": 212, "file_siz": 212, "testzip": 212, "zip_deflated": 212, "zip_stored": 212, "nom_fichier_dans_zip": 212, "joint": 212, "couron": 212, "succes": 212, "spammeur": 212, "smtplib": 212, "mim": 212, "multipart": 212, "mimemultipart": 212, "mimebas": 212, "mimetext": 212, "formatdat": 212, "envoyer_mail": 212, "aqui": 212, "localtim": 212, "set_payload": 212, "encode_base64": 212, "add_head": 212, "attachment": 212, "basenam": 212, "smtp": 212, "gmail": 212, "ehlo": 212, "starttl": 212, "login": 212, "mot_de_p": 212, "sendmail": 212, "as_string": 212, "destinatair": 212, "r\u00e9organis": 212, "musical": 212, "mutagen": [212, 219], "famili": 212, "osx": 212, "d\u00e9bouchent": 212, "abspath": 212, "commonprefix": 212, "getatim": 212, "getmtim": 212, "getctim": 212, "getsiz": 212, "isab": 212, "isfil": 212, "splitext": 212, "chdir": 212, "mkdir": 212, "makedir": 212, "repfinal": 212, "renam": 212, "rmdir": 212, "liste_fichier_repertoir": 212, "ob\u00e9iss": 212, "rep": 212, "fo": 212, "gitignor": 212, "code_of_conduct": 212, "gitattribut": 212, "appveyor": 212, "yml": 212, "_latex": 212, "ruff_cach": 212, "circlec": 212, "relir": 212, "rawiobas": 212, "affili": 212, "quinz": 212, "soul\u00e8vent": 212, "modil": 212, "1415692": 212, "fb": 212, "sauvegard": 212, "abcdedf": 212, "calcule_norm": 212, "dic": 212, "830951894845301": 212, "nom_modul": 214, "pyc": 214, "bytecod": 214, "exemple_class": 214, "__import__": 214, "nom_module_sans_extens": 214, "absolus": 214, "python36_x64": 214, "exe": 214, "__all__": 214, "inh\u00e9rent": 214, "posix": 214, "depending": 214, "unlink": 214, "eith": 214, "posixpath": 214, "ntpath": 214, "curd": 214, "representing": 214, "pard": 214, "pathnam": 214, "separator": 214, "extsep": 214, "altsep": 214, "alternat": 214, "pathsep": 214, "linesep": 214, "defpath": 214, "devnull": 214, "devic": 214, "stand": 214, "opend": 214, "module1": 214, "module2": 214, "_frozen_importlib": 214, "frozen": 214, "_imp": 214, "_thread": 214, "_warning": 214, "_weakref": 214, "python_cour": 214, "englob": 214, "mesmodul": 214, "part1": 214, "niveaud": 214, "part2": 214, "niveaudeuxb": 214, "subpackage1": 214, "modulex": 214, "subpackage2": 214, "moduley": 214, "pr\u00e9install": 214, "asyncio": [214, 216], "socket": 214, "cgi": 214, "cmath": 214, "gc": [214, 217], "getopt": 214, "htmllib": 214, "pathlib": 214, "sqlite3": 214, "gestionnair": 214, "threading": [214, 217], "dom": 214, "142152": 214, "carlo": 214, "integrale_monte_carlo": 214, "6671079325000375": 214, "simpliqu": 214, "interfa\u00e7ag": 214, "h\u00e9bergent": 214, "maintenus": 214, "ponctuel": 214, "tensorflow": 214, "setup": 214, "run_python_script_140224116358912": 215, "0x7f8878a48430": 215, "ultrajson": 215, "restaur": 215, "crucial": 215, "d\u00e9chiffr": 215, "librar": 215, "multithreading": 216, "bibliograph": 216, "gevent": 216, "uvloop": 216, "blazing": 216, "networking": 216, "sanic": 216, "cython": 216, "openmp": [216, 217], "2004": 217, "microprocesseur": 217, "transistor": 217, "multicoeur": 217, "disjoint": 217, "entam": 217, "processus": 217, "achev": 217, "asynchron": 217, "communiquent": 217, "synchronisent": 217, "monthread": 217, "proviennent": 217, "temporis": 217, "ojet": 217, "ind\u00e9fin": 217, "is_set": 217, "dixiem": 217, "verrous": 217, "indexfrr": 217, "veulent": 217, "11111111112222222222": 217, "acquir": 217, "entrem\u00ealent": 217, "sien": 217, "thread_fin": 217, "thread_resultat": 217, "lance_thread": 217, "legnd": 217, "text2": 217, "thread_fini_fonct": 217, "envoient": 217, "get_now": 217, "put_now": 217, "qsiz": 217, "chevauchent": 217, "soumettr": 217, "subm": 217, "max_work": 217, "prim": 217, "112272535095293": 217, "112582705942171": 217, "115280095190773": 217, "115797848077099": 217, "1099726899285419": 217, "sqrt_n": 217, "ind\u00e9chiffr": 217, "logg": 217, "logger": 217, "get_logg": 217, "getlogg": 217, "setlevel": 217, "asctim": 217, "threadnam": 217, "levelnam": 217, "streamhandl": 217, "stdout": 217, "setformatt": 217, "addhandl": 217, "fh": 217, "filehandl": 217, "current_thread": 217, "end1": 217, "end2": 217, "end3": 217, "thread_0": 217, "thread_1": 217, "141": 217, "902": 217, "052": 217, "053": 217, "942": 217, "as_completed": 217, "compliquent": 217, "parallel_numpy_dot": 217, "vb": 217, "54150786477814": 217, "distribute_sum": 217, "inlass": 217, "enclench": 217, "distrinct": 217, "d\u00e9velopeur": 217, "multithread": 217, "nogil": 217, "parallelism": 217, "parallelizing": 217, "interp\u00e9teur": 217, "pythonnet": 217, "py4j": 217, "pyjnius": 217, "nuir": 217, "pluriel": 219, "formulair": 219, "1913": 219, "1978": 219, "1914": 219, "1941": 219, "1980": 219, "int\u00e9resson": 219, "r\u00e9pondent": 219, "0123456789": 219, "z0": 219, "taxinom": 219, "vba": 219, "vbatd1_4": 219, "suspens": 219, "yoyo": 219, "dupont": 219, "tc": 219, "repl": 219, "valident": 219, "chanson": 219, "track03": 219, "audiotrack": 219, "pist": 219, "audiop": 219, "audio": 219, "heart": 219, "heartland": 219, "heartach": 219, "ache": 219, "easyid3": 219, "infomp3": 219, "all_fil": 219, "repertoir": 219, "heart_notitle_mot": 219, "liheart": 219, "notitl": 219, "nbmot": 219, "nbsong": 219, "album": 219, "tracknumb": 219, "moymot": 219, "nom_du_group": 219, "groupdict": 219, "trouve_toute_fonct": 219, "expm": 219, "get_function_list_definit": 219, "ndef": 219, "z_": 219, "z_0": 219, "get_function_list_call": 219, "detection_fonction_pas_appele": 219, "sfil": 219, "funcdef": 219, "funccal": 219, "fonction_inutil": 219, "189": 221}, "objects": {"teachpyx.datasets.data_helper": [[3, 0, 1, "", "get_data_folder"]], "teachpyx.datasets": [[3, 0, 1, "", "load_enedis_dataset"], [3, 0, 1, "", "load_wine_dataset"], [3, 0, 1, "", "load_wines_dataset"]], "teachpyx.examples": [[2, 1, 0, "-", "classiques"], [2, 1, 0, "-", "construction_classique"], [6, 1, 0, "-", "numpysex"]], "teachpyx.examples.classiques": [[2, 0, 1, "", "commentaire_accentues"], [2, 0, 1, "", "dictionnaire_modifie_dans_la_boucle"], [2, 0, 1, "", "dix_entiers_carre"], [2, 0, 1, "", "repetition_a_eviter"], [2, 0, 1, "", "str2date"]], "teachpyx.examples.construction_classique": [[2, 0, 1, "", "compte"], [2, 0, 1, "", "construit_matrice_carree"], [2, 0, 1, "", "enumerate_permutations"], [2, 0, 1, "", "enumerate_permutations_recursive"], [2, 0, 1, "", "integrale"], [2, 0, 1, "", "mat2text"], [2, 0, 1, "", "mat2vect"], [2, 0, 1, "", "minindex"], [2, 0, 1, "", "recherche"], [2, 0, 1, "", "recherche_dichotomique"], [2, 0, 1, "", "somme"], [2, 0, 1, "", "text2mat"], [2, 0, 1, "", "triindex"], [2, 0, 1, "", "vect2mat"]], "teachpyx.examples.numpysex": [[6, 0, 1, "", "numpy_matrix2list"], [6, 0, 1, "", "numpy_types"]], "teachpyx.faq": [[4, 1, 0, "-", "faq_exception"], [4, 1, 0, "-", "faq_geo"], [4, 1, 0, "-", "faq_numpy"], [4, 1, 0, "-", "faq_python"]], "teachpyx.faq.faq_exception": [[4, 0, 1, "", "call_stack"]], "teachpyx.faq.faq_geo": [[4, 0, 1, "", "lambert93_to_WGPS"]], "teachpyx.faq.faq_numpy": [[4, 0, 1, "", "to_float32"]], "teachpyx.faq.faq_python": [[4, 2, 1, "", "Distribution"], [4, 3, 1, "", "PQPipError"], [4, 0, 1, "", "class_getitem"], [4, 0, 1, "", "difference_div"], [4, 0, 1, "", "entier_grande_taille"], [4, 0, 1, "", "enumerate_regex_search"], [4, 0, 1, "", "get_day_name"], [4, 0, 1, "", "get_installed_distributions"], [4, 0, 1, "", "get_month_name"], [4, 0, 1, "", "get_package_info"], [4, 0, 1, "", "get_packages_list"], [4, 0, 1, "", "information_about_package"], [4, 0, 1, "", "list_of_installed_packages"], [4, 0, 1, "", "property_example"], [4, 0, 1, "", "python_path"], [4, 0, 1, "", "same_variable"], [4, 0, 1, "", "sortable_class"], [4, 0, 1, "", "stringio"]], "teachpyx.practice": [[7, 1, 0, "-", "rues_paris"], [8, 1, 0, "-", "tsp_bresenham"], [9, 1, 0, "-", "tsp_kohonen"], [10, 1, 0, "-", "tsp_kruskal"]], "teachpyx.practice.rues_paris": [[7, 0, 1, "", "bellman"], [7, 0, 1, "", "connected_components"], [7, 0, 1, "", "distance_haversine"], [7, 0, 1, "", "distance_paris"], [7, 0, 1, "", "euler_path"], [7, 0, 1, "", "eulerien_extension"], [7, 0, 1, "", "get_data"], [7, 0, 1, "", "graph_degree"], [7, 0, 1, "", "kruskal"], [7, 0, 1, "", "possible_edges"]], "teachpyx.practice.tsp_bresenham": [[8, 0, 1, "", "draw_ellipse"], [8, 0, 1, "", "draw_line"], [8, 0, 1, "", "trace_ligne_simple"]], "teachpyx.practice.tsp_kohonen": [[9, 0, 1, "", "ajoute_vecteur"], [9, 0, 1, "", "construit_liste_neurones"], [9, 0, 1, "", "construit_ville"], [9, 0, 1, "", "deplace_neurone"], [9, 0, 1, "", "distance_chemin"], [9, 0, 1, "", "distance_euclidienne_carree"], [9, 0, 1, "", "iteration"], [9, 0, 1, "", "modifie_structure"], [9, 0, 1, "", "moyenne_proximite"], [9, 0, 1, "", "multiplie_vecteur"], [9, 0, 1, "", "poids_attirance"], [9, 0, 1, "", "simulation"], [9, 0, 1, "", "soustrait_vecteur"], [9, 0, 1, "", "vecteur_norme"]], "teachpyx.practice.tsp_kruskal": [[10, 0, 1, "", "amelioration_chemin"], [10, 0, 1, "", "arbre_poids_minimal"], [10, 0, 1, "", "circuit_eulerien"], [10, 0, 1, "", "circuit_hamiltonien"], [10, 0, 1, "", "construit_ville"], [10, 0, 1, "", "dessin_arete_zone"], [10, 0, 1, "", "distance_euclidian"], [10, 0, 1, "", "echange_position"], [10, 0, 1, "", "echange_position_essai"], [10, 0, 1, "", "equation_droite"], [10, 0, 1, "", "evaluation_droite"], [10, 0, 1, "", "intersection_segment"], [10, 0, 1, "", "longueur_chemin"], [10, 0, 1, "", "oppose_vecteur"], [10, 0, 1, "", "repartition_zone"], [10, 0, 1, "", "retournement"], [10, 0, 1, "", "retournement_essai"], [10, 0, 1, "", "simulation"], [10, 0, 1, "", "supprime_croisement"], [10, 0, 1, "", "tsp_kruskal_algorithm"], [10, 0, 1, "", "vecteur_cosinus"], [10, 0, 1, "", "vecteur_norme"], [10, 0, 1, "", "vecteur_points"], [10, 0, 1, "", "vecteur_sinus"], [10, 0, 1, "", "voisinage_zone"], [10, 0, 1, "", "voisinage_zone_xy"]], "teachpyx.tools": [[11, 0, 1, "", "decompress_zip"], [11, 0, 1, "", "download_and_unzip"], [11, 0, 1, "", "draw_diagram"], [11, 1, 0, "-", "profiling"], [11, 0, 1, "", "total_size"]], "teachpyx.tools.display": [[11, 1, 0, "-", "pygame_helper"], [11, 1, 0, "-", "video_helper"]], "teachpyx.tools.display.pygame_helper": [[11, 0, 1, "", "build_diff_image"], [11, 0, 1, "", "display_line"], [11, 0, 1, "", "empty_main_loop"], [11, 0, 1, "", "get_pygame_screen_font"], [11, 0, 1, "", "wait_event"]], "teachpyx.tools.display.video_helper": [[11, 0, 1, "", "get_local_folder"], [11, 0, 1, "", "make_video"]], "teachpyx.tools.graphviz_helper": [[11, 0, 1, "", "draw_graph_graphviz"], [11, 0, 1, "", "run_graphviz"], [11, 0, 1, "", "run_subprocess"]], "teachpyx.tools.profiling": [[11, 2, 1, "", "ProfileNode"], [11, 0, 1, "", "profile"], [11, 0, 1, "", "profile2df"], [11, 0, 1, "", "profile2graph"]], "teachpyx.tools.profiling.ProfileNode": [[11, 4, 1, "", "add_called_by"], [11, 4, 1, "", "add_calls_to"], [11, 4, 1, "", "as_dict"], [11, 4, 1, "", "filter_node_"], [11, 4, 1, "", "get_root"], [11, 5, 1, "", "key"], [11, 4, 1, "", "to_json"], [11, 4, 1, "", "to_text"]], "teachpyx.video.tsp_kohonen_pygame": [[12, 0, 1, "", "pygame_simulation"]], "teachpyx.video.tsp_kruskal_pygame": [[13, 0, 1, "", "pygame_simulation"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:exception", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "function", "Python fonction"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python classe"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python m\u00e9thode"], "5": ["py", "property", "Python propri\u00e9t\u00e9"]}, "titleterms": {"chang": [0, 118, 128, 145, 152], "log": 0, "0": [0, 118, 131], "4": [0, 15, 20, 33, 48, 49, 53, 66, 83, 84, 101, 102, 103, 114, 131, 140, 145, 156, 157, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 186, 187, 188, 191], "3": [0, 15, 20, 48, 49, 66, 75, 83, 84, 96, 102, 103, 104, 114, 116, 128, 131, 139, 140, 145, 156, 157, 158, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 186, 187, 188, 189, 214], "1": [0, 15, 20, 48, 49, 66, 75, 80, 83, 84, 90, 91, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 117, 118, 131, 139, 140, 144, 145, 150, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 186, 187, 188, 196, 210, 214], "survol": 1, "algorithm": [1, 39, 56, 58, 70, 72, 73, 74, 76, 78, 84, 89, 91, 117, 119, 123, 134, 143, 162, 164, 165, 166, 167, 191, 210], "ordre": [1, 53, 66, 74, 78, 85, 210], "grandeur": 1, "comprendr": 1, "co\u00fbt": [1, 39, 107, 108, 114, 117, 133, 143, 172, 191], "mot": [1, 65, 76, 77, 83, 140, 172, 191], "cl\u00e9": [1, 65, 172, 211], "catalogu": 1, "problem": [1, 28, 53, 58, 66, 72, 75, 78, 82, 85, 90, 91, 119, 131, 164, 165, 182, 183, 217], "np": [1, 119], "complet": [1, 118, 119, 131, 169, 219], "id\u00e9": [1, 82, 83, 89, 167, 182, 183], "d\u00e9monstr": [1, 106, 190], "lien": [1, 51], "articl": [1, 21], "livr": 1, "Pour": [1, 53, 152], "entra\u00een": 1, "googl": 1, "recommand": 1, "exampl": [2, 6], "construction_class": 2, "teachpyx": [2, 4, 7, 8, 9, 10, 12, 13], "classiqu": [2, 5, 87, 196, 204, 205, 206, 210], "python": [2, 44, 58, 65, 67, 69, 70, 72, 123, 128, 144, 178, 179, 180, 181, 196, 210, 211, 217, 220], "accept": [2, 67], "accent": [2, 67, 70, 191, 212], "modifi": [2, 65, 66, 117, 206, 210, 211], "dictionnair": [2, 15, 65, 66, 83, 87, 133, 137, 142, 150, 172, 173, 196, 206, 211], "parcour": [2, 88, 91, 119, 206], "Quelle": [2, 4, 67, 145], "diff\u00e9rent": [2, 4, 65, 67, 76, 77, 117, 191], "entre": [2, 4, 49, 53, 65, 66, 67, 76, 77, 117, 141], "return": [2, 65, 67, 172], "print": [2, 65, 67, 211], "calcul": [2, 31, 39, 47, 48, 50, 60, 65, 73, 74, 75, 79, 81, 85, 86, 87, 90, 114, 115, 116, 117, 130, 139, 151, 154, 155, 174, 175, 184, 185, 206], "somm": [2, 79, 115, 137, 206], "dix": [2, 206], "premi": [2, 14, 51, 81, 82, 84, 91, 118, 129, 134, 137, 143, 165, 166, 167, 180, 181, 206, 217], "entier": [2, 156, 157, 206, 211], "carr": [2, 135, 154, 155, 168, 169, 206], "evit": [2, 206], "effectu": [2, 114, 206], "m\u00eam": [2, 51, 53, 76, 77, 78, 114, 117, 143, 178, 191, 206], "appel": [2, 66, 196, 200, 206, 210], "deux": [2, 30, 76, 77, 83, 85, 109, 114, 115, 117, 118, 145, 150, 196, 206], "fois": [2, 115, 206], "convers": [2, 29, 206, 211], "cha\u00een": [2, 38, 65, 66, 133, 206, 211], "caracter": [2, 38, 65, 66, 206, 208, 211, 219], "datetim": [2, 206, 207], "comptag": [2, 206], "fonction": [2, 5, 28, 37, 49, 50, 51, 58, 60, 65, 66, 73, 81, 83, 84, 107, 108, 114, 115, 117, 118, 131, 135, 139, 141, 145, 149, 153, 170, 171, 172, 173, 175, 196, 204, 206, 209, 210, 211, 219], "comm": [2, 107, 108, 206], "parametr": [2, 53, 65, 66, 81, 82, 107, 108, 206, 210], "matric": [2, 46, 50, 58, 74, 80, 87, 91, 109, 110, 114, 117, 131, 150, 154, 155, 206, 211], "vecteur": [2, 206], "minimum": [2, 56, 206], "posit": [2, 53, 66, 131, 206], "recherch": [2, 58, 65, 148, 172, 178, 179, 186, 187, 188, 189, 194, 206], "index": [2, 48, 49, 50, 51, 206], "dichotom": [2, 58, 79, 104, 148, 186, 187, 188, 189, 206], "tri": [2, 15, 74, 83, 84, 107, 108, 134, 139, 153, 186, 187, 206], "gard": [2, 85, 206], "initial": [2, 29, 206], "jeux": [3, 83, 135, 208], "don": [3, 14, 44, 49, 51, 60, 65, 81, 91, 107, 108, 113, 117, 123, 131, 138, 150, 154, 155, 162, 164, 165, 215], "cartograph": 3, "classif": [3, 25, 122], "outil": [3, 123], "r\u00e9gress": [3, 48, 122, 124], "faq": [4, 5, 67], "faq_python": 4, "divis": [4, 67], "Quel": [4, 67], "enti": [4, 67], "plus": [4, 14, 40, 53, 58, 67, 73, 77, 78, 79, 83, 84, 86, 87, 89, 109, 110, 114, 115, 117, 129, 141, 145, 152, 153, 158, 159, 160, 161, 162, 163, 168, 169, 174, 175, 187, 188, 189, 200, 212, 217, 219], "grand": [4, 14, 67, 73, 79, 83, 129, 160, 161], "tabul": [4, 67], "espac": [4, 58, 67, 90, 117], "comment": [4, 67], "iter": [4, 37, 67, 113, 127, 148, 196, 199, 210], "r\u00e9sultat": [4, 53, 67, 73, 81, 111, 112, 114, 117, 204], "express": [4, 15, 67, 90, 140, 178, 179, 218, 219], "r\u00e9guli": [4, 15, 67, 90, 140, 178, 179, 218, 219], "r\u00e9cuper": [4, 49, 51, 67, 81, 200], "nom": [4, 67, 212, 214], "jour": [4, 49, 51, 67], "part": [4, 36, 48, 61, 67, 158, 159, 180, 181, 188, 189], "dat": [4, 49, 67, 72, 207], "mois": [4, 67], "list": [4, 30, 31, 39, 64, 65, 66, 67, 116, 133, 150, 172, 186, 188, 196, 204, 210, 211, 212, 214], "modul": [4, 38, 58, 65, 66, 67, 70, 88, 138, 145, 178, 179, 213, 214], "install": [4, 63, 67, 70], "pourquoi": [4, 25, 67, 83, 114], "pand": [4, 15, 35, 49, 51, 58, 67, 120], "numpy": [4, 6, 15, 34, 47, 48, 50, 51, 52, 58, 67, 120, 144, 151], "march": [4, 48, 53, 67, 81, 214], "sous": [4, 16, 67, 79, 204], "window": [4, 16, 67], "pip": [4, 67], "obten": [4, 67, 149, 199], "inform": [4, 67, 211, 217], "packag": [4, 64, 67, 70], "propriet": [4, 66, 67, 196], "\u00e9vit": [4, 67], "sy": [4, 67], "path": [4, 67], "append": [4, 67], "quand": [4, 67, 175], "d\u00e9velopp": [4, 67], "Qu": [4, 67, 170], "typ": [4, 6, 50, 51, 65, 66, 67, 196, 199, 200, 211], "immuabl": [4, 65, 66, 67, 211], "immut": [4, 66, 67, 211], "class": [4, 28, 37, 51, 65, 66, 67, 118, 123, 126, 128, 129, 130, 131, 132, 168, 169, 170, 171, 190, 196, 197, 198, 199, 204], "sortabl": [4, 67], "a": [4, 29, 61, 64, 67, 114, 118, 119, 131, 135, 219], "quoi": [4, 67, 135, 178, 219], "sert": [4, 67, 135, 178, 219], "stringio": [4, 67], "faq_except": 4, "faq_geo": 4, "Les": [4, 37, 65, 67, 84, 91, 162, 183, 199, 204, 210, 219], "fichi": [4, 49, 58, 65, 67, 70, 178, 179, 184, 185, 208, 212, 214], "geofl": [4, 67], "contiennent": [4, 67], "longitud": [4, 67], "latitud": [4, 67], "faq_numpy": 4, "cod": [5, 17, 28, 65, 92, 100, 104, 106, 118, 145, 172, 173], "inclus": [5, 196], "dan": [5, 58, 65, 78, 85, 114, 117, 118, 131, 133, 172, 178, 179, 186, 187, 204, 212], "librair": 5, "construct": [5, 100, 101, 116, 170, 186, 196, 204, 205, 206, 210], "illustr": [5, 131], "solut": [5, 75, 79, 84, 86, 90, 91, 164, 165, 167, 182, 183], "anim": 5, "numpysex": 6, "oper": [6, 33, 47, 48, 49, 50, 65, 66, 114, 128, 132, 133, 168, 169, 196, 210], "matrix": [6, 47, 48], "Quels": [6, 67], "support": [6, 67], "practic": [7, 8, 9, 10], "rues_par": 7, "tsp_bresenham": 8, "tsp_kohonen": 9, "tsp_kruskal": [10, 13], "tool": 11, "decompress_zip": 11, "download_and_unzip": 11, "draw_diagram": 11, "draw_graph_graphviz": 11, "total_siz": 11, "profiling": [11, 15, 123, 145, 146, 147], "run_graphviz": 11, "run_subprocess": 11, "video": [11, 12, 13], "tsp_kohonen_pygam": 12, "assur": 14, "auto": 14, "r\u00e9flex": [14, 40], "apprentissag": 14, "test": [14, 15, 60, 65, 66, 70, 77, 85, 117, 152, 188, 189, 210], "ajout": [14, 100, 131, 152, 196, 210, 212, 214], "variabl": [14, 58, 60, 64, 65, 66, 154, 155, 172, 188, 189, 209, 210, 211], "agreg": 14, "g\u00e9ograph": 14, "nombr": [14, 48, 66, 73, 75, 80, 114, 131, 166, 167, 210, 211], "mod\u00e9lis": [14, 53], "peu": [14, 40, 50, 73, 154, 158, 159], "anonym": 14, "2022": [15, 16, 21, 116, 117], "11": [15, 20, 104], "31": [15, 20], "rappel": [15, 20, 25, 58], "feuill": [15, 20, 49, 129], "rout": [15, 20], "s\u00e9anc": [15, 20, 93, 121, 195], "7": [15, 20, 51, 131, 162, 163, 178, 179, 186, 187, 188, 189], "9": 15, "introduct": [15, 70, 73, 204], "2": [15, 20, 48, 49, 66, 75, 80, 83, 84, 90, 94, 95, 96, 98, 99, 102, 103, 104, 105, 108, 110, 112, 113, 114, 131, 139, 140, 144, 145, 148, 150, 151, 156, 157, 158, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 186, 187, 188, 196, 214], "14": [15, 96, 97], "programm": [15, 22, 27, 39, 60, 65, 66, 69, 119, 162, 163, 165, 169, 214], "dynam": [15, 49, 119, 162, 163, 165, 210], "voyageur": [15, 58, 88], "commerc": [15, 40, 58, 88], "21": [15, 106], "28": 15, "graph": [15, 45, 49, 51, 58, 74, 80, 81, 89, 113, 119, 122, 131, 158, 159], "5": [15, 20, 49, 83, 102, 131, 145, 162, 163, 178, 179, 186, 187, 188, 189], "10": [15, 95], "s\u00e9rialis": [15, 37, 38, 141, 215], "unitair": [15, 65, 77, 117, 152], "6": [15, 20, 49, 83, 99, 131, 162, 163, 178, 179, 186, 187, 188, 189], "12": [15, 16, 107, 108], "webscrapping": 15, "19": 15, "top": [15, 84], "k": [15, 84, 160, 161], "8": [15, 20, 118, 131, 162, 163, 178, 179], "26": [15, 94, 98, 117], "07": 16, "utilis": [16, 60, 65, 83, 84, 117, 130, 139, 140, 145, 170, 172, 173, 198, 199, 204], "cartopy": [16, 44], "wsl": 16, "2023": [17, 18, 19, 20, 21, 118, 192], "08": [17, 18], "03": 17, "jam": 17, "09": [18, 19], "\u00e9nigm": [18, 28, 33], "hermion": 18, "06": 19, "ensa": 19, "collect": 21, "p\u00e9riss": 21, "galler": [22, 23, 27], "exempl": [22, 23, 27, 48, 53, 66, 128, 147, 196, 199, 210, 211, 212, 214, 219], "machin": [22, 23, 57, 72, 122, 139], "learning": [22, 23, 57, 72, 122], "correl": [24, 53, 58, 154, 155], "receiv": 25, "operating": 25, "characteristic": 25, "roc": [25, 124], "binair": [25, 37, 212, 215], "trois": [25, 65, 70, 114, 116, 168, 169, 210], "courb": [25, 113, 124], "predict_prob": 25, "decision_funct": 25, "precis": 25, "m\u00e9triqu": 25, "f1": [25, 53, 66], "alor": [25, 77], "comput": [26, 41, 42, 221], "tim": [26, 41, 42, 221], "L": 28, "einstein": 28, "r\u00e9solu": 28, "permut": [28, 85, 88, 126, 128], "La": [28, 50, 51, 58, 79, 162, 175, 183, 190], "rul": 28, "explic": 28, "descript": [28, 53], "float": [29, 188], "probability": 29, "float64": 29, "x": [29, 86, 110, 117, 128], "float32": 29, "interval": 29, "length": 29, "distribu": [29, 49, 50], "an": 29, "answer": 29, "to": [29, 61], "the": [29, 61], "question": [29, 103, 187, 198], "similar": 29, "what": 29, "about": 29, "not": [29, 61, 93, 100, 101, 102, 103, 104, 105, 106, 125, 190], "strict": 29, "comparison": 29, "conclus": [29, 53, 105], "Le": [30, 53, 58, 65, 66, 199, 220], "gil": [30, 217], "parallel": 30, "Un": [30, 40, 73, 128, 131, 132, 133, 152, 154, 158, 159, 191, 211, 214, 217], "autr": [30, 31, 53, 65, 107, 131, 139, 145, 150, 152, 170, 178, 179, 196, 204, 207, 215], "sc\u00e9nario": 30, "hypercub": 31, "exercic": [31, 39, 48, 49, 50, 51, 58, 69, 83, 84, 90, 93, 102, 104, 105, 106, 113, 114, 115, 117, 118, 123, 139, 140, 145, 156, 157, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 186, 187, 188, 189], "q1": [31, 36, 50, 51, 74, 76, 78, 81, 85, 94, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 137, 138, 141, 146, 154, 155, 158, 159, 160, 161, 184, 185], "tripl": 31, "r\u00e9curs": [31, 66, 107, 108, 148, 172, 210], "q2": [31, 36, 50, 51, 74, 76, 78, 81, 85, 94, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 137, 138, 141, 146, 154, 155, 158, 159, 160, 161, 184, 185], "comparaison": [31, 79, 210], "q3": [31, 36, 50, 51, 74, 76, 81, 85, 94, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 137, 138, 141, 146, 154, 155, 158, 159, 160, 161, 184, 185], "pr\u00e9cis": [31, 39, 73, 174, 175], "q4": [31, 36, 50, 51, 74, 76, 81, 85, 95, 96, 97, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 137, 138, 146, 154, 155, 158, 159, 184, 185], "astuc": [32, 60, 65], "lambd": [32, 49, 65, 210], "function": [32, 49], "mathador": 33, "point": [34, 49, 58, 66, 88, 107, 108, 114, 117, 123, 214], "impl\u00e9ment": [34, 76, 146, 156, 157, 176, 177], "acced": 34, "\u00e9l\u00e9ment": [34, 48, 73, 84, 100, 133, 137, 172, 210], "particuli": [34, 50, 123], "groupby": 35, "valeur": [35, 50, 51, 66, 74, 109, 110, 143, 172, 199, 210], "manqu": [35, 109, 110], "dam": 36, "json": [37, 38, 138, 141, 215], "ecritur": [37, 65, 178, 210, 212], "lectur": [37, 49, 65, 69, 178, 212], "limit": 37, "rapid": [37, 79, 83, 84, 86, 114, 141, 145, 153, 168, 169, 174, 175], "pickl": [37, 141], "r\u00e9duir": [37, 118], "taill": [37, 73, 117, 118, 152], "cas": [37, 73, 114, 117, 118, 131, 191, 204, 211, 214], "g\u00e9ner": [37, 48, 80, 127, 137, 191, 202, 210], "protobuf": [38, 138], "schem": 38, "compil": [38, 196, 210], "import": [38, 66, 204, 214], "cr\u00e9": [38, 49, 50, 117, 178, 204], "plusieur": [38, 49, 204, 210, 214], "expliqu": [39, 83, 106], "cop": [39, 65, 196, 211, 212], "erreur": [39, 51, 65, 81, 190, 199, 200], "logiqu": [39, 150, 210], "h\u00e9ritag": [39, 65, 66, 130, 131, 170, 171, 196, 199], "doubl": 39, "autour": [40, 196], "voyag": 40, "tsp": [40, 56, 85], "Des": [40, 60, 65, 152], "vill": [40, 85], "tir": [40, 85, 88, 117], "hasard": [40, 151], "crois": [40, 49, 89], "noeud": [40, 89], "d\u00e9part": [40, 51], "const": [40, 66, 139, 211], "al\u00e9atoir": [40, 48, 58, 74, 80, 85, 88, 107, 108, 109, 110, 116, 117, 127, 131, 139, 154, 155, 186], "datafram": [43, 46, 49, 51, 58, 211], "trac": [44, 182, 183], "cart": [44, 51, 55, 58], "plotly": 44, "gmap": 44, "bingmap": 44, "geopand": 44, "folium": 44, "openstreetmap": 44, "matriciel": [47, 48, 50, 87], "optimis": [48, 53, 58, 66, 81, 82, 107, 108, 114, 115, 134, 190, 215], "array": [48, 58], "creation": 48, "notion": [48, 141, 172, 217], "datatyp": 48, "dimens": [48, 87, 117, 150, 160, 161], "slicing": 48, "fancy": 48, "indexing": 48, "view": 48, "contr": 48, "copy": [48, 196], "manipul": [48, 49, 51, 211, 212], "shap": 48, "echiqui": 48, "cribl": 48, "erathosthen": 48, "broadcasting": [48, 50], "r\u00e9duct": 48, "algebr": 48, "lin\u00e9air": [48, 79], "simpl": [48, 76, 123, 196, 210, 217], "statist": 48, "retrouv": [48, 114], "ser": [48, 49, 51, 53, 81], "scipy": [48, 151], "simul": [48, 81, 82, 119, 134, 154, 155], "estim": [48, 73, 81, 82, 113], "maximis": 48, "vraisembl": 48, "r\u00e9f\u00e9rent": [48, 53], "el\u00e9ment": [48, 49], "r\u00e9pons": [48, 49, 50, 51, 74, 76, 78, 81, 83, 84, 85, 137, 138, 139, 140, 145], "\u00e9critur": [49, 138, 152], "notat": [49, 211], "symbol": 49, "excel": [49, 138, 178, 179], "filtr": 49, "union": 49, "sort": [49, 213], "group": [49, 219], "by": 49, "join": 49, "pivot": [49, 144, 193], "filt": 49, "merg": 49, "fusion": [49, 51], "tableau": [49, 50, 52, 65, 131, 150, 151], "moyen": [49, 53, 107, 108, 109, 110, 129, 190], "Avec": [49, 117, 191], "san": [49, 90, 139, 212], "plot": 49, "nuag": [49, 58, 107, 108], "matplotlib": [49, 58], "mariag": 49, "annex": 49, "\u00e9cart": 49, "mari": 49, "enonc": [50, 51, 72, 74, 75, 76, 78, 79, 81, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 138, 139, 140, 145], "ma\u00eetris": [50, 51], "slic": 50, "nan": [50, 51], "chi_2": 50, "contingent": [50, 52, 151], "veut": [50, 81, 118], "ident": [50, 73, 117], "million": 50, "dev": 50, "appliqu": [50, 79, 113, 146], "stopcovid": 50, "cr\u00e9ation": [51, 131, 154, 155, 211], "lign": [51, 131, 140, 196, 204], "colon": [51, 109, 131], "ver": 51, "modif": [51, 61], "Une": [51, 91, 129, 131, 132, 134, 146, 152, 190], "warning": [51, 202], "fr\u00e9quent": [51, 65, 206], "On": [51, 81, 114, 118], "covid": [51, 81], "r\u00e9gion": [51, 81], "\u00e2ge": [51, 81], "refair": 51, "graphiqu": [51, 60, 65, 203, 217], "pr\u00e9c\u00e9dent": [51, 83, 118, 145], "votr": 51, "fair": [51, 117, 168, 169], "diff\u00e9renci": 51, "liss": 51, "tabl": [51, 53, 66, 137], "pet": [51, 84, 152, 153], "apart": [51, 80, 88, 168], "q5": [51, 81, 96, 97, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 137, 138, 146, 158, 159, 184, 185], "strateg": [53, 66, 131, 176, 177], "automat": 53, "trading": [53, 66], "financ": 53, "quelqu": [53, 58, 60, 106, 137], "vocabulair": [53, 80], "financi": 53, "liquid": 53, "figur": [53, 66], "open": [53, 66], "high": [53, 66], "low": [53, 66], "clos": [53, 66], "volum": [53, 66, 115], "f2": [53, 66], "ohlc": [53, 66], "intraday": [53, 66], "f3": [53, 66], "carnet": [53, 66], "tous": [53, 66, 72, 83, 89, 116, 117, 140, 167, 168, 169], "repr\u00e9sent": [53, 66, 129], "rend": [53, 66], "volatil": 53, "mobil": 53, "band": 53, "bolling": 53, "achat": 53, "vent": 53, "levi": 53, "hedg": [53, 66], "fund": [53, 66], "t1": [53, 66], "implant": [53, 66], "2007": [53, 66], "famill": 53, "trend": [53, 66], "following": [53, 66], "f4": [53, 66], "action": [53, 66], "bnp": [53, 66], "mean": [53, 66], "reversing": [53, 66], "revers": [53, 150], "f5": [53, 66], "pair": [53, 66], "f6": [53, 66], "styl": 53, "valu": 53, "growth": 53, "gestion": [53, 212], "portefeuill": [53, 66], "p1": [53, 66], "horizon": 53, "daily": 53, "analys": 53, "f7": [53, 66], "cour": [53, 66, 214], "d\u00e9but": [53, 66], "2003": [53, 66], "mi": [53, 66], "2008": [53, 66], "backtest": 53, "f8": [53, 66], "nav": [53, 66], "standard": [53, 204], "variat": [53, 113], "f9": [53, 66], "natur": 53, "f10": [53, 66], "fran\u00e7ais": [53, 66], "t2": [53, 66], "indiqu": [53, 66], "cred": [53, 66], "agricol": [53, 66], "danon": [53, 66], "societ": [53, 66], "g\u00e9n\u00e9ral": [53, 66], "f11": [53, 66], "d\u00e9composit": [53, 128, 131], "deal": [53, 66], "f12": [53, 66], "f13": [53, 66], "imag": [53, 66, 149], "f14": [53, 66], "n\u00e9gat": [53, 66, 206], "logn": [53, 66], "court": [53, 58, 66, 89, 93, 128, 162, 163], "aller": [53, 152, 160, 161, 188, 189], "loin": [53, 83, 152, 158, 159, 188, 189], "diversif": 53, "expos": 54, "circuit": [55, 56, 126, 136], "hamiltonien": [55, 56], "kohonen": 55, "aper\u00e7u": [55, 132], "kruskal": 56, "arbre": [56, 58, 116, 127, 129, 186, 187], "poid": [56, 134], "minimal": 56, "a1": 56, "eul\u00e9rien": [56, 91], "a2": 56, "a3": 56, "simplif": 56, "a4": 56, "math\u00e9mat": [58, 135, 154], "continu": [58, 210], "d\u00e9riv": [58, 199], "vectoriel": 58, "produit": [58, 87, 114, 164, 165], "scalair": [58, 164, 165], "norm": [58, 109, 110], "histogramm": [58, 142, 150, 184, 185], "informat": 58, "csv": [58, 138], "hash": [58, 73, 137], "chemin": [58, 85, 88, 89, 91, 129, 162, 163, 212], "incourtourn": 58, "scik": 58, "learn": 58, "statsmodel": 58, "dessin": [58, 81, 100, 101, 107, 108, 116, 143], "cheat": [59, 61, 63, 64, 65], "sheet": [59, 61, 63, 64, 65], "conseil": [60, 65], "\u00e9crir": [60, 65, 77, 78, 81, 115, 117, 141], "petit": [60, 65, 73, 81, 115, 139, 178], "Pas": 60, "global": [60, 66, 210, 217], "s\u00e9par": [60, 65, 162, 163, 166, 167], "charg": [60, 65], "interfac": [60, 65, 203, 217], "truc": [60, 65], "git": 61, "add": 61, "remot": 61, "submodul": 61, "checkout": 61, "specific": 61, "fil": [61, 64, 217], "from": 61, "creat": 61, "new": 61, "local": [61, 66, 172, 210], "branch": 61, "push": 61, "repository": 61, "remov": [61, 64], "reset": [61, 63], "updat": 61, "fix": 61, "mov": 61, "multipl": [61, 114, 156, 157, 196, 211, 219], "rebas": 61, "upsteam": 61, "and": 61, "eras": 61, "history": 61, "clon": 61, "of": 61, "all": [61, 64], "prec": 62, "jenkin": 63, "plugin": 63, "start": 63, "restart": 63, "password": 63, "linux": 64, "classic": 64, "installed": 64, "error": 64, "with": [64, 178], "clean": 64, "temporary": 64, "hard": 64, "driv": 64, "process": 64, "environment": 64, "other": 64, "langag": [65, 67, 118, 123, 196, 210, 211, 220], "numer": [65, 73, 111, 112], "boucl": [65, 66, 70, 145, 188, 189, 210, 211], "for": [65, 66, 210], "whil": [65, 66, 210], "enumerat": 65, "zip": [65, 150, 211, 212], "map": 65, "d\u00e9finit": [65, 66, 156, 157, 196, 210, 211, 214], "yield": 65, "d\u00e9clar": [65, 66, 196, 210], "attribut": [65, 66, 168, 169, 196, 214], "m\u00e9thod": [65, 66, 83, 118, 132, 168, 169, 170, 174, 175, 196, 204, 208, 211], "statiqu": [65, 66, 196], "instanc": [65, 196], "d\u00e9cor": 65, "text": [65, 90, 138, 178, 179, 184, 185, 204, 212], "except": [65, 66, 152, 199, 200, 201], "confus": 65, "guillemet": 65, "rang": [65, 211], "initialis": 65, "partag": [65, 217], "moteur": 65, "syntax": [66, 196, 199, 210, 211, 214, 219], "d1": [66, 196, 210, 211, 214], "entr\u00e9": [66, 213, 214], "d10": [66, 211], "frozenset": [66, 211], "d2": [66, 196, 210, 211], "instantiaion": [66, 196], "d3": [66, 196, 210, 211], "d4": [66, 196, 210, 211], "port": [66, 210], "d5": [66, 196, 210, 211], "tupl": [66, 133, 211], "d6": [66, 196, 210, 211], "mutabl": [66, 211], "d7": [66, 196, 211], "d8": [66, 196, 211], "surcharg": [66, 196, 210], "d9": [66, 211], "set": [66, 211], "s1": [66, 196, 199, 210, 214], "attrap": [66, 199], "s10": [66, 196], "s11": [66, 196], "s12": [66, 196], "s13": [66, 196], "__copy__": [66, 196], "s14": [66, 196], "fig": [66, 196], "s15": [66, 196], "s16": [66, 196], "h\u00e9rit": [66, 196], "s2": [66, 196, 199, 210, 214], "instanci": [66, 196], "instruct": [66, 199, 210], "pass": [66, 89, 210], "lev": [66, 199], "s3": [66, 196, 210, 214], "s4": [66, 196, 210], "s5": [66, 196, 210], "extens": [66, 70, 210, 211, 214], "s6": [66, 196, 210], "constructeur": [66, 196], "s7": [66, 196, 210], "s8": [66, 196, 210], "__str__": [66, 196], "d\u00e9faut": [66, 208, 210], "s9": [66, 196, 210], "ind\u00e9fin": [66, 210], "geo": 67, "En": [68, 139], "diagonal": [68, 135], "compl": [68, 69], "apprendr": 69, "older": 69, "version": [69, 80, 84, 101, 104, 135, 143, 148, 152], "concept": [70, 210], "s\u00e9quenc": [70, 79, 118, 204, 211], "notebook": [70, 72, 195], "licens": 71, "correct": [72, 93, 94, 95, 96, 97, 98, 99, 101, 114, 119, 123, 149, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189], "examen": 72, "streaming": 73, "bjkst": 73, "distinct": 73, "universal": 73, "hashing": 73, "collis": 73, "temp": [73, 79, 83, 87, 117, 141, 146, 175], "stream": [73, 141], "h_1": 73, "h_2": 73, "\u00e9gal": 73, "o\u00f9": [73, 117], "d\u00e9pend": 73, "epsilon": 73, "compos": [74, 80], "connex": [74, 80], "construir": [74, 83, 178, 179], "adjacent": [74, 80], "symetr": 74, "propr": [74, 178, 179, 199], "croiss": 74, "fait": [74, 118], "suiv": [74, 116, 118, 131], "retourn": [74, 88, 114, 115, 117, 118], "fa\u00e7on": [75, 118, 160, 161], "mont": [75, 175], "\u00e9chel": 75, "distanc": [76, 77, 85, 88, 89, 107, 108, 116, 117, 130, 132, 191], "\u00e9dit": [76, 77, 191], "longueur": [76, 77, 191], "alambiqu": 76, "pag": [76, 178, 179], "wikipedi": 76, "na\u00efv": [77, 79, 146, 164], "tres": [77, 123], "si": [77, 78, 85, 145], "proch": [77, 110, 117, 160, 161], "ff": 77, "f": [77, 211], "ph": 77, "person": 77, "sait": 77, "ordonnanc": 78, "d\u00e9termin": [78, 131], "peut": [78, 118, 141, 146], "ex\u00e9cut": 78, "t\u00e2ch": 78, "Et": 78, "dur": [78, 113, 195], "li": 80, "puissanc": 80, "trouv": [80, 83, 167, 168, 169, 178, 179], "model": [81, 82], "sird": [81, 82], "q0": 81, "propag": 81, "v\u00e9rifi": [81, 156, 157], "cel": [81, 83], "synthet": 81, "q6": [81, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 137, 138, 154, 155, 158, 159], "r\u00e9el": [81, 211], "cumul": 81, "\u00e9pid\u00e9miolog": 82, "visualis": [82, 88], "second": [82, 117, 146, 152, 165, 167, 204], "suffix": 83, "commun": [83, 204, 214], "partagent": 83, "constuir": 83, "assoc": 83, "chaqu": [83, 84, 117], "lettr": [83, 118, 137, 140], "termin": [83, 140], "ci": 83, "mesur": [83, 87, 117, 160, 161, 175], "pris": 83, "tel": 83, "pouss": 83, "tout": [84, 85, 88, 90, 118, 131, 141, 199, 214], "prend": [84, 138], "choix": 84, "s\u00e9lect": 84, "perf_count": 84, "compar": [84, 141, 146], "vitesss": 84, "traveling": 85, "salesman": 85, "chois": 85, "rel": 85, "invers": 85, "am\u00e9lior": [85, 145], "moiti": 85, "possibl": [85, 86, 114, 145, 210], "plais": 85, "creus": 87, "\u00e9leg": 87, "affich": [88, 129], "tqdm": 88, "d\u00e9cod": 90, "mors": [90, 118], "traduir": 90, "contient": [90, 145], "alphabet": 90, "minimis": 90, "transcript": 90, "interpret": [90, 217], "ru": [91, 117], "paris": 91, "etap": 91, "bellman": 91, "kruskall": 91, "optimal": [91, 115], "vari": 91, "sen": [91, 196], "interd": 91, "gaph": 91, "orient": 91, "windy": 91, "postman": 91, "cass": 92, "vigener": [92, 172, 173], "minut": [93, 121], "1a": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "e": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "interrog": [94, 95, 96, 97, 98, 99], "\u00e9crit": [94, 95, 96, 97, 98, 99, 103, 195], "septembr": [94, 98], "2014": [94, 95, 96, 97, 102], "octobr": [95, 109, 110, 111, 112, 117, 191], "novembr": [96, 97, 99, 100, 101, 113, 114, 115, 118], "2015": [98, 99, 103, 104], "td": [100, 101, 102, 103, 104, 105, 106], "27": [100, 101], "2012": [100, 101], "coloriag": [100, 101, 135], "spiral": [100, 101], "roug": [100, 115], "d\u00e9cembr": [102, 104, 105, 107, 108], "rattrapag": [103, 115, 116], "\u00e9nonc": 103, "oral": 103, "lou": 104, "achet": 104, "appart": 104, "q7": [104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 137, 138, 154, 155, 158, 159], "exo": 104, "q8": [104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 154, 155], "q9": [104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 154, 155], "num\u00e9ros": 104, "t\u00e9l\u00e9phon": 104, "16": 105, "2016": 105, "q10": [105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 154, 155], "f\u00e9vri": 106, "2017": [106, 107, 108], "commentair": [106, 196, 210, 211], "\u00e9chantillon": [107, 108, 109, 110], "encor": [107, 108], "seuil": 108, "23": [109, 110], "2018": [109, 110], "m1": [109, 110, 114], "m2": [109, 110, 114], "m3": [109, 110, 114], "r\u00e9p\u00e9tit": [109, 110], "22": [111, 112], "2019": [111, 112], "distance_t": [111, 112], "distance_bord": [111, 112], "table_al": [111, 112], "n_table_al": [111, 112], "table_proch": [111, 112], "distance_n_tables_al": [111, 112], "meilleur_table_al": [111, 112], "plot_tabl": [111, 112], "vorono\u00ef": [111, 112], "kmean": [111, 112], "24": 113, "2020": 113, "gu\u00e9rison": 113, "kaplan": 113, "mei": 113, "publiqu": 113, "apres": 113, "T": 113, "vaccin": 113, "heur": 113, "2021": [114, 115], "lent": 114, "ecrir": [114, 117, 118], "meilleur": 114, "option": 114, "v\u00e9rif": [114, 117], "mesure_temp": 114, "m4": 114, "pench": 114, "N": 114, "combien": [114, 145], "r\u00e9soudr": 114, "remarqu": 114, "lor": [114, 210], "15": 115, "air": 115, "surfac": [115, 135, 139], "briqu": 115, "fac": 115, "inclut": 115, "n\u00e9cessair": 115, "coll": 115, "extrem": 115, "bouteil": 115, "litr": 115, "larg": 115, "bleu": 115, "gross": 115, "mar": 116, "segment": 116, "niveau": 116, "Y": 117, "lorsqu": [117, 204], "2x2": 117, "indic": [117, 143], "m\u00e9decin": 117, "grill": 117, "10x10": 117, "quadrill": 117, "coordon": [117, 183], "dictionair": 117, "case_grill": 117, "pairwise_dist": 117, "1000x2": 117, "100x2": 117, "faux": 117, "corrig": 117, "2024": 118, "d\u00e9codag": 118, "int\u00e9ress": 118, "messag": [118, 200, 204, 217], "re\u00e7oit": 118, "correspond": 118, "form": 118, "Il": 118, "faut": 118, "Que": [118, 146], "\u00e9quiprob": 118, "coding": 118, "b": 118, "\u00eatre": 118, "D": [118, 150, 204], "conna\u00eetr": 119, "structur": [123, 138, 150], "logist": 124, "pr\u00e9dict": 125, "vin": 125, "jeu": [126, 131, 136, 152, 154, 155, 176, 177], "d\u00e9": [126, 136], "rotat": [126, 136], "De": 126, "profondeur": [127, 129], "maximal": [127, 129], "transit": 128, "composit": 128, "transposit": 128, "d\u00e9m\u00eal": 128, "jet": 129, "depuis": 129, "racin": [129, 154, 155], "jusqu": 129, "intermed": [129, 158], "is": 129, "product": 130, "bas": [130, 164, 165], "2048": [131, 176, 177], "libr": 131, "pourvu": 131, "perdu": 131, "aggreg": 131, "jou": 131, "coup": 131, "sach": 131, "direct": 131, "scor": [131, 184, 185], "fais": 131, "derni": [131, 146], "fin": [131, 210], "bref": 132, "station": 132, "m\u00e9tro": 132, "ensembl": [133, 153, 188, 211, 219], "insert": 133, "dequ": [133, 205], "loi": 134, "multinomial": 134, "bootstrap": 134, "colori": 135, "proport": 135, "couvert": 135, "retour": 135, "\u00e7a": [135, 138, 178, 219], "r\u00e9partit": [137, 162], "hashag": 137, "pseudo": 137, "light": 137, "xml": [138, 141], "format": [138, 141, 166, 167, 178, 207, 211, 212], "relir": 138, "essai": 138, "html": 138, "sql": 138, "sas": 138, "non": [138, 188, 189, 210, 211], "trop": 138, "plac": [138, 204], "zippon": 138, "inspir": 138, "cercl": 139, "pi": 139, "ni": 139, "aucun": 139, "parfait": 139, "extrair": 140, "remplac": 140, "rim": 140, "elles": 140, "ail": 140, "flux": 141, "lir": [141, 184, 185], "gros": 141, "d\u00e9s\u00e9rialis": 141, "heap": 143, "transform": 143, "tas": 143, "chos": [143, 215], "lieu": 143, "simplifi": [143, 210], "gauss": [144, 193], "vitess": 144, "gin": 145, "profil": [145, 147], "_gini_final": 145, "savoir": 145, "_gini_cumsum": 145, "convolu": 146, "ex\u00e9cu": [146, 214], "im2col": 146, "nouveau": 146, "\u00e9xecu": 146, "d\u00e9duir": 146, "profilag": 146, "\u00e9ven": [146, 204], "\u00e9chantillonnag": 146, "pouv": 146, "dir": 146, "bizarrer": 147, "web": 149, "scraping": 149, "pokemon": 149, "caract\u00e9rist": 149, "spars": [150, 160, 161], "m\u00e9moir": 150, "chi": 151, "formul": 151, "obstacl": 152, "\u00e9chiqui": 152, "pr\u00e9vu": 153, "\u00e9volu": 153, "d\u00e9correl": [154, 155], "q11": [154, 155], "q12": [154, 155], "q13": [154, 155], "cryptag": [156, 157], "homomorphic": [156, 157], "craig": [156, 157], "gentry": [156, 157], "stabl": [156, 157], "addit": [156, 157], "impl\u00e9mentent": [156, 157], "spectral": [158, 159], "clustering": [158, 159], "pratiqu": [158, 159, 214], "th\u00e9oriqu": 158, "voisin": [160, 161], "nn": [160, 161], "perform": [160, 161], "featur": [160, 161], "imagin": [160, 161], "vit": [160, 161], "observ": 161, "skis": 162, "facult": [162, 163], "prolong": [162, 163], "degr": [162, 163], "facebook": [162, 163], "puzzl": [164, 165, 166, 167], "moin": 164, "recouvr": [164, 165], "soudoi": [164, 165], "prisonni": [164, 165], "d\u00e9coupag": [164, 165], "intelligent": [164, 165], "approch": 165, "watershed": [166, 167], "bagarreur": [166, 167], "bin\u00f4m": [166, 167], "magiqu": [168, 169], "suit": [168, 169], "piec": [170, 171, 196], "normal": [170, 171, 210], "truqu": [170, 171], "mer": 170, "mixt": [170, 171], "d\u00e9tail": [172, 187], "ordon": 172, "crypt": [172, 173], "d\u00e9crypt": [172, 173], "selon": [172, 173], "int\u00e9gral": [174, 175], "rectangl": [174, 175], "r\u00e9calcitr": 175, "carlo": 175, "arr\u00eat": 175, "gagn": [176, 177], "regl": [176, 177], "rightarrow": [178, 179], "cherch": [178, 179], "motif": [178, 179], "url": [178, 179], "wikip\u00e9di": [178, 179], "subtil": 178, "pyramid": [182, 183], "bigarr": [182, 183], "couleur": 183, "devin": [184, 185], "langu": [184, 185], "normalis": [184, 185], "int": 188, "str": [188, 211], "compact": 188, "berem": 190, "elev": 190, "barem": 190, "presqu": 191, "levenshtein": 191, "align": 191, "pr\u00e9fix": 194, "pr\u00e9sent": 196, "apport": 196, "implicit": 196, "aid": 196, "inclu": 196, "deepcopy": 196, "monnai": 196, "issubclass": 196, "isinst": 196, "C": [198, 217], "oblig": 198, "princip": 199, "lanc": [199, 204], "try": 199, "imbriqu": 199, "d\u00e9fin": 199, "personnalis": [199, 202, 204], "aberr": 199, "pieg": 199, "usag": 200, "pil": 200, "call": 200, "stack": 200, "explicit": 200, "convent": 200, "logging": 202, "intercept": 202, "tkint": 204, "objet": [204, 211, 212], "zon": 204, "bouton": 204, "sais": 204, "coch": 204, "rond": 204, "radio": 204, "barr": 204, "d\u00e9fil": 204, "combobox": 204, "canev": 204, "menus": 204, "disposit": 204, "fen\u00eatr": 204, "emplac": [204, 214], "pack": 204, "grid": 204, "even": 204, "principal": 204, "focus": 204, "press": 204, "associ": 204, "menu": 204, "pr\u00e9d\u00e9fin": 204, "contr\u00f4l": 204, "bo\u00eet": 204, "dialogu": 204, "compt": 204, "rebour": 204, "communiqu": 204, "ordereddict": 205, "namedtupl": 205, "count": 205, "encoding": [208, 212], "condens": 210, "tru": 210, "b1": 210, "pilotag": 210, "break": 210, "else": 210, "suppress": [210, 212], "identif": 210, "eval": [210, 211], "exec": 210, "indent": 210, "usuel": 210, "rien": 211, "bool\u00e9en": 211, "formatag": 211, "particul": 211, "r": 211, "complex": [211, 212], "byt": 211, "bytearray": 211, "collag": 211, "concaten": 211, "dict": 211, "repr": 211, "fourn": 211, "affect": 211, "hi\u00e9rarch": 211, "intern": [211, 214], "accentu": 211, "mod": 212, "Ce": 214, "cycliqu": 214, "arborescent": 214, "paquetag": 214, "relat": 214, "extern": 214, "parall\u00e9lis": 216, "thread": 217, "synchronis": 217, "attent": 217, "multithreading": 217, "concurrent": 217, "futur": 217, "blocag": 217, "async": 217, "await": 217, "asyncio": 217, "lock": 217, "cython": 217, "m\u00e9lang": 217, "jav": 217, "bibliograph": 217, "assembl": 219, "nomm": 219}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Change Logs": [[0, "change-logs"]], "0.4.0": [[0, "id1"]], "0.3.1": [[0, "id2"]], "Survol algorithmique": [[1, "survol-algorithmique"]], "Ordres de grandeur": [[1, "ordres-de-grandeur"]], "Comprendre le co\u00fbt d\u2019un algorithme": [[1, "comprendre-le-cout-d-un-algorithme"]], "Mot-cl\u00e9": [[1, "mot-cle"]], "Catalogue d\u2019algorithmes": [[1, "catalogue-d-algorithmes"]], "Probl\u00e8mes NP-complets": [[1, "problemes-np-complets"]], "Id\u00e9e pour d\u00e9monstrer qu\u2019un probl\u00e8me est NP-complet": [[1, "idee-pour-demonstrer-qu-un-probleme-est-np-complet"]], "Liens": [[1, "liens"]], "Articles sur des algorithmes": [[1, "articles-sur-des-algorithmes"]], "Livres": [[1, "livres"]], "Pour s\u2019entra\u00eener": [[1, "pour-s-entrainer"]], "Google\u2019s recommandations": [[1, "google-s-recommandations"]], "examples.construction_classique": [[2, "examples-construction-classique"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "Python n\u2019accepte pas les accents": [[2, "indexfaqref-python0"], [67, "index-faqref-0-6"]], "Modifier un dictionnaire en le parcourant": [[2, "indexexref-Base -0"], [206, "index-exref-1-1"]], "Quelle est la diff\u00e9rence entre return et print ?": [[2, "indexfaqref-python1"], [67, "index-faqref-0-10"]], "calcul de la somme des dix premiers entiers au carr\u00e9": [[2, "indexexref-Base0"], [206, "index-exref-0-1"]], "Eviter d\u2019effectuer le m\u00eame appel deux fois": [[2, "indexexref-Base -1"], [206, "index-exref-1-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en datetime": [[2, "indexexref-Base1"], [206, "index-exref-0-4"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "comptage": [[2, "indexexref-Base2"], [206, "index-exref-0-2"]], "fonction comme param\u00e8tre": [[2, "indexexref-Base3"], [206, "index-exref-0-8"]], "conversion d\u2019une matrice en cha\u00eene de caract\u00e8res": [[2, "indexexref-Base4"], [206, "index-exref-0-6"]], "conversion d\u2019une matrice en un vecteur": [[2, "indexexref-Base5"], [206, "index-exref-0-7"]], "minimum avec position": [[2, "indexexref-Base6"], [206, "index-exref-0-9"]], "recherche avec index": [[2, "indexexref-Base7"], [206, "index-exref-0-10"]], "recherche dichotomique": [[2, "indexexref-Base8"], [206, "index-exref-0-11"]], "calcul d\u2019une somme": [[2, "indexexref-Base9"], [206, "index-exref-0-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en matrice": [[2, "indexexref-Base10"], [206, "index-exref-0-5"]], "tri, garder les positions initiales": [[2, "indexexref-Base11"], [206, "index-exref-0-12"]], "conversion d\u2019un vecteur en une matrice": [[2, "indexexref-Base12"], [206, "index-exref-0-3"]], "Jeux de donn\u00e9es": [[3, "jeux-de-donnees"]], "Cartographie": [[3, "cartographie"]], "Classification": [[3, "classification"], [122, null]], "Outils": [[3, "outils"], [123, null]], "R\u00e9gression": [[3, "regression"], [122, null]], "faq": [[4, "faq"]], "teachpyx.faq.faq_python": [[4, "module-teachpyx.faq.faq_python"]], "Quelle est la diff\u00e9rence entre / et // - division ?": [[4, "indexfaqref-python0"], [67, "index-faqref-0-9"]], "Quel est l\u2019entier le plus grand ?": [[4, "indexfaqref-python1"], [67, "index-faqref-0-8"]], "Tabulations ou espace ?": [[4, "indexfaqref-python2"], [67, "index-faqref-0-14"]], "Comment it\u00e9rer sur les r\u00e9sultats d\u2019une expression r\u00e9guli\u00e8re ?": [[4, "indexfaqref-python3"], [67, "index-faqref-0-2"]], "R\u00e9cup\u00e9rer le nom du jour \u00e0 partir d\u2019une date": [[4, "indexfaqref-python4"], [67, "index-faqref-0-12"]], "R\u00e9cup\u00e9rer le nom du mois \u00e0 partir d\u2019une date": [[4, "indexfaqref-python5"], [67, "index-faqref-0-13"]], "R\u00e9cup\u00e9rer la liste des modules install\u00e9s": [[4, "indexfaqref-python6"], [67, "index-faqref-0-11"]], "Pourquoi l\u2019installation de pandas (ou numpy)\nne marche pas sous Windows avec pip ?": [[4, "indexfaqref-python7"], [67, "index-faqref-0-5"]], "Obtenir des informations sur les packages install\u00e9s": [[4, "indexfaqref-python8"], [67, "index-faqref-0-4"]], "propri\u00e9t\u00e9": [[4, "indexfaqref-python9"], [67, "index-faqref-0-15"]], "Comment \u00e9viter sys.path.append\u2026 quand on d\u00e9veloppe un module ?": [[4, "indexfaqref-python10"], [67, "index-faqref-0-3"]], "Qu\u2019est-ce qu\u2019un type immuable ou immutable ?": [[4, "indexfaqref-python11"], [67, "index-faqref-0-7"]], "Classe sortable": [[4, "indexfaqref-python12"], [67, "index-faqref-0-1"]], "A quoi sert un ``StringIO`` ?": [[4, "indexfaqref-python13"], [67, "index-faqref-0-0"]], "teachpyx.faq.faq_exception": [[4, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_geo": [[4, "module-teachpyx.faq.faq_geo"]], "Les fichiers GEOFLA ne contiennent pas de longitude, latitude ?": [[4, "indexfaqref-geo0"], [67, "index-faqref-2-0"]], "teachpyx.faq.faq_numpy": [[4, "module-teachpyx.faq.faq_numpy"]], "Code inclus dans cette librairie": [[5, "code-inclus-dans-cette-librairie"]], "Constructions classiques": [[5, null], [196, "constructions-classiques"], [204, "constructions-classiques"], [205, "constructions-classiques"], [206, "constructions-classiques"], [210, "constructions-classiques"]], "Fonctions illustrant des solutions": [[5, null]], "Animations": [[5, null]], "FAQ": [[5, null], [67, "faq"]], "examples.numpysex": [[6, "module-teachpyx.examples.numpysex"]], "op\u00e9rations avec numpy.matrix": [[6, "indexexref-numpy0"], [47, "index-exref-0-0"]], "Quels sont les types que numpy supporte ?": [[6, "indexfaqref-numpy0"], [67, "index-faqref-1-0"]], "teachpyx.practice.rues_paris": [[7, "module-teachpyx.practice.rues_paris"]], "teachpyx.practice.tsp_bresenham": [[8, "module-teachpyx.practice.tsp_bresenham"]], "teachpyx.practice.tsp_kohonen": [[9, "module-teachpyx.practice.tsp_kohonen"]], "teachpyx.practice.tsp_kruskal": [[10, "module-teachpyx.practice.tsp_kruskal"]], "tools": [[11, "tools"]], "decompress_zip": [[11, "decompress-zip"]], "download_and_unzip": [[11, "download-and-unzip"]], "draw_diagram": [[11, "draw-diagram"]], "draw_graph_graphviz": [[11, "draw-graph-graphviz"]], "total_size": [[11, "total-size"]], "profiling": [[11, "module-teachpyx.tools.profiling"]], "run_graphviz": [[11, "run-graphviz"]], "run_subprocess": [[11, "run-subprocess"]], "video": [[11, "module-teachpyx.tools.display.pygame_helper"]], "teachpyx.video.tsp_kohonen_pygame": [[12, "teachpyx-video-tsp-kohonen-pygame"]], "teachpyx.video.tsp_kruskal": [[13, "teachpyx-video-tsp-kruskal"]], "Assurance auto": [[14, "assurance-auto"]], "Assurance": [[14, "assurance"]], "Donn\u00e9es": [[14, "donnees"]], "Premier r\u00e9flexe : apprentissage et test": [[14, "premier-reflexe-apprentissage-et-test"]], "Ajout de variables agr\u00e9g\u00e9es": [[14, "ajout-de-variables-agregees"]], "Donn\u00e9es g\u00e9ographiques": [[14, "donnees-geographiques"]], "Grand nombre de variables": [[14, "grand-nombre-de-variables"]], "Mod\u00e9lisation un peu plus anonyme": [[14, "modelisation-un-peu-plus-anonyme"]], "2022-11-31 : rappel feuille de route 2022": [[15, "rappel-feuille-de-route-2022"]], "S\u00e9ance 1 - 7-9 - introduction, dictionnaire": [[15, "seance-1-7-9-introduction-dictionnaire"]], "S\u00e9ance 2 - 14-9 - programmation dynamique, voyageur de commerce": [[15, "seance-2-14-9-programmation-dynamique-voyageur-de-commerce"]], "S\u00e9ance 3 - 21-9 - numpy, pandas": [[15, "seance-3-21-9-numpy-pandas"]], "S\u00e9ance 4 - 28-9 - graphes": [[15, "seance-4-28-9-graphes"]], "S\u00e9ance 5 - 5-10 - s\u00e9rialisation, tests unitaires, profiling": [[15, "seance-5-5-10-serialisation-tests-unitaires-profiling"]], "S\u00e9ance 6 - 12-10 - expressions r\u00e9guli\u00e8res, webscrapping": [[15, "seance-6-12-10-expressions-regulieres-webscrapping"]], "S\u00e9ance 7 - 19-10 - top k, tri": [[15, "seance-7-19-10-top-k-tri"]], "S\u00e9ance 8 - 26-10 - graphes": [[15, "seance-8-26-10-graphes"]], "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)": [[16, "utilisation-de-cartopy-sous-windows-sous-wsl"]], "2023-08-03 : Code Jam": [[17, "code-jam"]], "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne": [[18, "l-enigme-d-hermionne"]], "2023-09-06 : ENSAE": [[19, "ensae"]], "2023-11-31 : rappel feuille de route 2023": [[20, "rappel-feuille-de-route-2023"]], "S\u00e9ance 1": [[20, "seance-1"]], "S\u00e9ance 2": [[20, "seance-2"]], "S\u00e9ance 3": [[20, "seance-3"]], "S\u00e9ance 4": [[20, "seance-4"]], "S\u00e9ance 5": [[20, "seance-5"]], "S\u00e9ance 6": [[20, "seance-6"]], "S\u00e9ance 7": [[20, "seance-7"]], "S\u00e9ance 8": [[20, "seance-8"]], "Collections d\u2019articles p\u00e9rissables": [[21, "collections-d-articles-perissables"]], "2023": [[21, null], [192, "id1"]], "2022": [[21, null]], "Gallerie d\u2019exemples": [[22, "gallerie-d-exemples"]], "Gallerie d\u2019exemples sur le machine learning": [[22, "gallerie-d-exemples-sur-le-machine-learning"], [23, "gallerie-d-exemples-sur-le-machine-learning"]], "Gallerie d\u2019exemples sur la programmation": [[22, "gallerie-d-exemples-sur-la-programmation"], [27, "gallerie-d-exemples-sur-la-programmation"]], "Corr\u00e9lations": [[24, "correlations"]], "Receiver Operating Characteristic (ROC)": [[25, "receiver-operating-characteristic-roc"]], "Classification binaire": [[25, "classification-binaire"]], "Trois courbes": [[25, "trois-courbes"]], "predict_proba ou decision_function": [[25, "predict-proba-ou-decision-function"]], "Precision Rappel": [[25, "precision-rappel"]], "M\u00e9trique F1": [[25, "metrique-f1"]], "Pourquoi ROC alors ?": [[25, "pourquoi-roc-alors"]], "Computation times": [[26, "computation-times"], [41, "computation-times"], [42, "computation-times"], [221, "computation-times"]], "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution": [[28, "l-enigme-d-einstein-et-sa-resolution"]], "Fonction permutation": [[28, "fonction-permutation"]], "La classe Rule": [[28, "la-classe-rule"]], "Explicit rules": [[28, "explicit-rules"]], "Description du probl\u00e8me avec ce code": [[28, "description-du-probleme-avec-ce-code"]], "Float Conversion": [[29, "float-conversion"]], "Probability (float64)x == (float32)x": [[29, "probability-float64-x-float32-x"]], "Interval length distribution": [[29, "interval-length-distribution"]], "An answer to the initial question": [[29, "an-answer-to-the-initial-question"]], "An answer to a similar question: what about not strict comparison?": [[29, "an-answer-to-a-similar-question-what-about-not-strict-comparison"]], "Conclusion": [[29, "conclusion"], [53, "conclusion"], [105, "Conclusion"]], "Le GIL": [[30, "le-gil"]], "Deux listes en parallel": [[30, "deux-listes-en-parallel"]], "Un autre sc\u00e9nario": [[30, "un-autre-scenario"]], "Hypercube et autres exercices": [[31, "hypercube-et-autres-exercices"]], "Q1 - triple r\u00e9cursivit\u00e9": [[31, "q1-triple-recursivite"]], "Q2 - comparaison de listes": [[31, "q2-comparaison-de-listes"]], "Q3 - pr\u00e9cision des calculs": [[31, "q3-precision-des-calculs"]], "Q4 - hypercube": [[31, "q4-hypercube"]], "Astuces avec les lambda functions": [[32, "astuces-avec-les-lambda-functions"]], "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations": [[33, "mathador-enigme-a-4-operations"]], "Points d\u2019impl\u00e9mentation avec numpy": [[34, "points-d-implementation-avec-numpy"]], "acc\u00e9der \u00e0 un \u00e9l\u00e9ment en particulier": [[34, "acceder-a-un-element-en-particulier"]], "Pandas et groupby": [[35, "pandas-et-groupby"]], "groupby et valeur manquantes": [[35, "groupby-et-valeur-manquantes"]], "Parties de dames": [[36, "parties-de-dames"]], "Q1": [[36, "q1"], [78, "Q1"], [85, "Q1"], [94, "Q1"], [94, "id1"], [95, "Q1"], [95, "id1"], [96, "Q1"], [96, "id1"], [96, "id6"], [97, "Q1"], [98, "Q1"], [98, "id1"], [99, "Q1"], [99, "id1"], [101, "Q1"], [104, "Q1"], [104, "id1"], [104, "id3"], [105, "Q1"], [106, "Q1"], [113, "Q1"], [154, "Q1"], [155, "Q1"], [158, "Q1"], [158, "id1"], [159, "Q1"], [159, "id1"]], "Q2": [[36, "q2"], [78, "Q2"], [85, "Q2"], [94, "Q2"], [94, "id2"], [95, "Q2"], [95, "id2"], [96, "Q2"], [96, "id2"], [96, "id7"], [97, "Q2"], [98, "Q2"], [98, "id2"], [99, "Q2"], [99, "id2"], [101, "Q2"], [104, "Q2"], [104, "id2"], [104, "id4"], [105, "Q2"], [106, "Q2"], [154, "Q2"], [155, "Q2"], [158, "Q2"], [158, "id2"], [159, "Q2"], [159, "id2"]], "Q3": [[36, "q3"], [85, "Q3"], [94, "Q3"], [94, "id3"], [95, "Q3"], [95, "id3"], [96, "Q3"], [96, "id3"], [96, "id8"], [97, "Q3"], [98, "Q3"], [98, "id3"], [99, "Q3"], [99, "id3"], [101, "Q3"], [104, "Q3"], [105, "Q3"], [106, "Q3"], [154, "Q3"], [155, "Q3"], [158, "Q3"], [159, "Q3"]], "Q4": [[36, "q4"], [85, "Q4"], [95, "Q4"], [95, "id4"], [96, "Q4"], [96, "id4"], [96, "id9"], [97, "Q4"], [104, "Q4"], [105, "Q4"], [105, "id1"], [106, "Q4"], [154, "Q4"], [155, "Q4"], [158, "Q4"], [159, "Q4"]], "S\u00e9rialisation": [[37, "serialisation"], [215, "serialisation"]], "JSON": [[37, "json"], [215, "json"]], "Ecriture (json)": [[37, "ecriture-json"]], "Lecture (json)": [[37, "lecture-json"]], "Limite": [[37, "limite"]], "S\u00e9rialisation rapide": [[37, "serialisation-rapide"]], "Pickle": [[37, "pickle"]], "Ecriture (pickle)": [[37, "ecriture-pickle"]], "Lecture (pickle)": [[37, "lecture-pickle"]], "Les classes": [[37, "les-classes"]], "R\u00e9duire la taille": [[37, "reduire-la-taille"]], "Cas des fonctions": [[37, "cas-des-fonctions"]], "Binaire": [[37, "binaire"], [215, "binaire"]], "Fonction et JSON": [[37, "fonction-et-json"]], "Cas des it\u00e9rateurs": [[37, "cas-des-iterateurs"]], "Cas des g\u00e9n\u00e9rateurs": [[37, "cas-des-generateurs"]], "S\u00e9rialisation avec protobuf": [[38, "serialisation-avec-protobuf"]], "Sch\u00e9ma": [[38, "schema"]], "Compilation": [[38, "compilation"]], "Import du module cr\u00e9\u00e9": [[38, "import-du-module-cree"]], "S\u00e9rialisation en cha\u00eene de caract\u00e8res": [[38, "serialisation-en-chaine-de-caracteres"]], "Plusieurs cha\u00eenes de caract\u00e8res": [[38, "plusieurs-chaines-de-caracteres"]], "S\u00e9rialisation JSON": [[38, "serialisation-json"]], "Exercices expliqu\u00e9s de programmation": [[39, "exercices-expliques-de-programmation"]], "Copie de listes": [[39, "copie-de-listes"]], "Erreur de logique": [[39, "erreur-de-logique"]], "Co\u00fbt d\u2019un algorithme": [[39, "cout-d-un-algorithme"]], "H\u00e9ritage double": [[39, "heritage-double"]], "Pr\u00e9cision des calculs": [[39, "precision-des-calculs"]], "R\u00e9flexions autour du voyage de commerce (TSP)": [[40, "reflexions-autour-du-voyage-de-commerce-tsp"]], "Des villes tir\u00e9es au hasard": [[40, "des-villes-tirees-au-hasard"]], "Croisements": [[40, "croisements"], [89, "Croisements"]], "Noeud de d\u00e9part constant": [[40, "noeud-de-depart-constant"]], "Un peu d\u2019al\u00e9atoire en plus": [[40, "un-peu-d-aleatoire-en-plus"]], "Dataframes": [[43, "dataframes"]], "Tracer une carte en Python": [[44, "Tracer-une-carte-en-Python"]], "donn\u00e9es": [[44, "donn\u00e9es"]], "cartopy": [[44, "cartopy"]], "plotly, gmaps, bingmaps": [[44, "plotly,-gmaps,-bingmaps"]], "geopandas": [[44, "geopandas"]], "folium": [[44, "folium"]], "cartopy avec les donn\u00e9es d\u2019OpenStreetMap": [[44, "cartopy-avec-les-donn\u00e9es-d'OpenStreetMap"]], "Graphes": [[45, "graphes"], [119, null], [122, null]], "Matrices et DataFrames": [[46, "matrices-et-dataframes"], [211, "matrices-et-dataframes"]], "Calcul matriciel": [[47, "calcul-matriciel"]], "Calcul Matriciel, Optimisation": [[48, "Calcul-Matriciel,-Optimisation"]], "Numpy arrays": [[48, "Numpy-arrays"]], "Creation d\u2019un array: notion de datatype, et dimensions": [[48, "Creation-d'un-array:-notion-de-datatype,-et-dimensions"]], "Indexation, Slicing, Fancy indexing": [[48, "Indexation,-Slicing,-Fancy-indexing"]], "View contre Copy": [[48, "View-contre-Copy"]], "Manipulation de shape": [[48, "Manipulation-de-shape"]], "Exercice 1 : Echiquier et Crible d\u2019Erathosth\u00e8ne": [[48, "Exercice-1-:-Echiquier-et-Crible-d'Erathosth\u00e8ne"]], "Manipulation et Op\u00e9rations sur les arrays": [[48, "Manipulation-et-Op\u00e9rations-sur-les-arrays"]], "Op\u00e9rations \u00e9l\u00e9ment par \u00e9l\u00e9ment": [[48, "Op\u00e9rations-\u00e9l\u00e9ment-par-\u00e9l\u00e9ment"]], "Broadcasting": [[48, "Broadcasting"]], "R\u00e9ductions": [[48, "R\u00e9ductions"]], "Alg\u00e8bre lin\u00e9aire": [[48, "Alg\u00e8bre-lin\u00e9aire"]], "Exemples simples": [[48, "Exemples-simples"]], "Numpy Matrix": [[48, "Numpy-Matrix"]], "G\u00e9n\u00e9ration de nombres al\u00e9atoires et statistiques": [[48, "G\u00e9n\u00e9ration-de-nombres-al\u00e9atoires-et-statistiques"]], "Exercice 2 : marches al\u00e9atoires": [[48, "Exercice-2-:-marches-al\u00e9atoires"]], "Exercice 3 : retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires": [[48, "Exercice-3-:-retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires"]], "Optimisation avec scipy": [[48, "Optimisation-avec-scipy"]], "Exercice 4 : simulation, r\u00e9gression, estimation par maximisation de la vraisemblance": [[48, "Exercice-4-:-simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance"]], "R\u00e9f\u00e9rences": [[48, "R\u00e9f\u00e9rences"]], "El\u00e9ments de r\u00e9ponses pour les exercices": [[48, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"], [49, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"]], "Exercice 1 (Echiquier et Crible d\u2019Erathosthene)": [[48, "Exercice-1-(Echiquier-et-Crible-d'Erathosthene)"]], "Exercice 2 (marches al\u00e9atoires)": [[48, "Exercice-2-(marches-al\u00e9atoires)"]], "Exercice 3 (retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires)": [[48, "Exercice-3-(retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires)"]], "Exercice 4 (simulation, r\u00e9gression, estimation par maximisation de la vraisemblance)": [[48, "Exercice-4-(simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance)"]], "DataFrame et Graphes": [[49, "DataFrame-et-Graphes"]], "DataFrame": [[49, "DataFrame"], [58, "dataframe"]], "Series": [[49, "Series"]], "DataFrame (pandas)": [[49, "DataFrame-(pandas)"]], "Lecture et \u00e9criture de DataFrame": [[49, "Lecture-et-\u00e9criture-de-DataFrame"]], "DataFrame et Index": [[49, "DataFrame-et-Index"]], "Notation avec le symbole :": [[49, "Notation-avec-le-symbole-:"]], "Exercice 1 : cr\u00e9er un fichier Excel": [[49, "Exercice-1-:-cr\u00e9er-un-fichier-Excel"], [49, "id1"]], "Manipuler un DataFrame": [[49, "Manipuler-un-DataFrame"]], "6 op\u00e9rations : filtrer, union, sort, group by, join, pivot": [[49, "6-op\u00e9rations-:-filtrer,-union,-sort,-group-by,-join,-pivot"]], "filter": [[49, "filter"]], "union": [[49, "union"]], "sort": [[49, "sort"]], "group by": [[49, "group-by"]], "join (merge ou fusion)": [[49, "join-(merge-ou-fusion)"]], "pivot (tableau crois\u00e9 dynamique)": [[49, "pivot-(tableau-crois\u00e9-dynamique)"]], "Lambda fonctions": [[49, "Lambda-fonctions"]], "Exercice 2 : lambda fonction": [[49, "Exercice-2-:-lambda-fonction"]], "Exercice 3 : moyennes par groupes": [[49, "Exercice-3-:-moyennes-par-groupes"], [49, "id2"]], "Avec ou sans index": [[49, "Avec-ou-sans-index"]], "Dates": [[49, "Dates"], [207, "dates"]], "Plot(s)": [[49, "Plot(s)"]], "R\u00e9cup\u00e9ration des donn\u00e9es": [[49, "R\u00e9cup\u00e9ration-des-donn\u00e9es"]], "Exercice 4 : nuage de points": [[49, "Exercice-4-:-nuage-de-points"]], "Exercice 5 : graphe d\u2019une distribution avec pandas": [[49, "Exercice-5-:-graphe-d'une-distribution-avec-pandas"]], "matplotlib": [[49, "matplotlib"], [58, "matplotlib"]], "Exercice 6 : distribution des mariages par jour": [[49, "Exercice-6-:-distribution-des-mariages-par-jour"], [49, "id3"]], "Annexes": [[49, "Annexes"]], "Cr\u00e9er un fichier Excel avec plusieurs feuilles": [[49, "Cr\u00e9er-un-fichier-Excel-avec-plusieurs-feuilles"]], "Exercice 2 : lambda function": [[49, "Exercice-2-:-lambda-function"]], "Exercice 4 : \u00e9cart entre les mari\u00e9s": [[49, "Exercice-4-:-\u00e9cart-entre-les-mari\u00e9s"]], "Exercice 5 : graphe de la distribution avec pandas": [[49, "Exercice-5-:-graphe-de-la-distribution-avec-pandas"]], "Calcul matriciel avec numpy (exercices)": [[50, "Calcul-matriciel-avec-numpy-(exercices)"]], "Enonc\u00e9": [[50, "Enonc\u00e9"], [51, "Enonc\u00e9"], [74, "Enonc\u00e9"], [76, "Enonc\u00e9"], [78, "Enonc\u00e9"], [79, "Enonc\u00e9"], [81, "Enonc\u00e9"], [83, "Enonc\u00e9"], [84, "Enonc\u00e9"], [85, "Enonc\u00e9"], [86, "Enonc\u00e9"], [138, "Enonc\u00e9"], [139, "Enonc\u00e9"], [140, "Enonc\u00e9"], [145, "Enonc\u00e9"]], "La ma\u00eetrise du slice": [[50, "La-ma\u00eetrise-du-slice"]], "La ma\u00eetrise du nan": [[50, "La-ma\u00eetrise-du-nan"], [51, "La-ma\u00eetrise-du-nan"]], "La ma\u00eetrise des types": [[50, "La-ma\u00eetrise-des-types"], [51, "La-ma\u00eetrise-des-types"]], "La ma\u00eetrise du broadcasting": [[50, "La-ma\u00eetrise-du-broadcasting"]], "La ma\u00eetrise des index": [[50, "La-ma\u00eetrise-des-index"], [51, "La-ma\u00eetrise-des-index"]], "La ma\u00eetrise des op\u00e9rations et des fonctions": [[50, "La-ma\u00eetrise-des-op\u00e9rations-et-des-fonctions"]], "Q1 : calculer la valeur du \\chi_2 d\u2019un tableau de contingence": [[50, "Q1-:-calculer-la-valeur-du-\\chi_2-d'un-tableau-de-contingence"], [50, "id1"]], "Q2 : calculer une distribution un peu particuli\u00e8re": [[50, "Q2-:-calculer-une-distribution-un-peu-particuli\u00e8re"], [50, "id2"]], "Q3 : on veut cr\u00e9er une matrice identit\u00e9 un million par un million": [[50, "Q3-:-on-veut-cr\u00e9er-une-matrice-identit\u00e9-un-million-par-un-million"], [50, "id3"]], "Q4 : vous devez cr\u00e9er l\u2019application StopCovid": [[50, "Q4-:-vous-devez-cr\u00e9er-l'application-StopCovid"], [50, "id4"]], "R\u00e9ponses": [[50, "R\u00e9ponses"], [51, "R\u00e9ponses"], [74, "R\u00e9ponses"], [76, "R\u00e9ponses"], [78, "R\u00e9ponses"], [81, "R\u00e9ponses"], [83, "R\u00e9ponses"], [84, "R\u00e9ponses"], [85, "R\u00e9ponses"], [138, "R\u00e9ponses"], [139, "R\u00e9ponses"], [140, "R\u00e9ponses"], [145, "R\u00e9ponses"]], "Manipulation de donn\u00e9es avec pandas (exercices)": [[51, "Manipulation-de-donn\u00e9es-avec-pandas-(exercices)"]], "Cr\u00e9ation d\u2019un dataframe": [[51, "Cr\u00e9ation-d'un-dataframe"]], "La ma\u00eetrise des index des lignes": [[51, "La-ma\u00eetrise-des-index-des-lignes"]], "La ma\u00eetrise des index des colonnes": [[51, "La-ma\u00eetrise-des-index-des-colonnes"]], "Lien vers numpy": [[51, "Lien-vers-numpy"]], "Cr\u00e9ation de colonnes": [[51, "Cr\u00e9ation-de-colonnes"]], "Modifications de valeurs": [[51, "Modifications-de-valeurs"]], "Une erreur ou warning fr\u00e9quent": [[51, "Une-erreur-ou-warning-fr\u00e9quent"]], "La ma\u00eetrise des fonctions": [[51, "La-ma\u00eetrise-des-fonctions"]], "On r\u00e9cup\u00e8re les donn\u00e9es du COVID par r\u00e9gion et par \u00e2ge et premier graphe": [[51, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"], [81, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"]], "Q1 : refaire le graphique pr\u00e9c\u00e9dent pour votre classe d\u2019\u00e2ge": [[51, "Q1-:-refaire-le-graphique-pr\u00e9c\u00e9dent-pour-votre-classe-d'\u00e2ge"], [51, "id1"]], "Q2 : faire de m\u00eame avec les s\u00e9ries diff\u00e9renci\u00e9es": [[51, "Q2-:-faire-de-m\u00eame-avec-les-s\u00e9ries-diff\u00e9renci\u00e9es"], [51, "id2"]], "Q3 : faire de m\u00eame avec des s\u00e9ries liss\u00e9es sur sur 7 jours": [[51, "Q3-:-faire-de-m\u00eame-avec-des-s\u00e9ries-liss\u00e9es-sur-sur-7-jours"], [51, "id3"]], "Q4 : fusion de tables par d\u00e9partements": [[51, "Q4-:-fusion-de-tables-par-d\u00e9partements"], [51, "id4"]], "Petit apart\u00e9": [[51, "Petit-apart\u00e9"]], "Q5 : une carte ?": [[51, "Q5-:-une-carte-?"]], "Numpy et tableau de contingence": [[52, "Numpy-et-tableau-de-contingence"]], "Strat\u00e9gie automatique de trading en finance": [[53, "strategie-automatique-de-trading-en-finance"]], "Quelques r\u00e9f\u00e9rences": [[53, "quelques-references"]], "Vocabulaire financier": [[53, "vocabulaire-financier"]], "March\u00e9s liquides": [[53, "marches-liquides"]], "Description d\u2019une s\u00e9rie financi\u00e8re": [[53, "description-d-une-serie-financiere"]], "Figure F1 : Open-High-Low-Close-Volume": [[53, "indexmathe-Figure0"], [66, "index-mathdef-1-30"]], "Figure F2 : OHLC Intraday": [[53, "indexmathe-Figure1"], [66, "index-mathdef-1-36"]], "Figure F3 : Exemple de carnet d\u2019ordres, tous les ordres ne sont pas repr\u00e9sent\u00e9s.": [[53, "indexmathe-Figure2"], [66, "index-mathdef-1-37"]], "Rendements, Volatilit\u00e9, Corr\u00e9lation": [[53, "rendements-volatilite-correlation"]], "Moyenne mobile, bandes de Bollinger": [[53, "moyenne-mobile-bandes-de-bollinger"]], "Achats, ventes, levier": [[53, "achats-ventes-levier"]], "Hedge Funds": [[53, "hedge-funds"]], "Table T1 : Implantation des Hedge Funds en 2007": [[53, "indexmathe-Table0"], [66, "index-mathdef-4-75"]], "Familles de strat\u00e9gies": [[53, "familles-de-strategies"]], "Trend Following": [[53, "trend-following"]], "Figure F4 : Action BNP et Trend Following": [[53, "indexmathe-Figure3"], [66, "index-mathdef-1-38"]], "Mean Reversing ou Mean Reversion": [[53, "mean-reversing-ou-mean-reversion"]], "Figure F5 : Action BNP et Mean Reversing": [[53, "indexmathe-Figure4"], [66, "index-mathdef-1-39"]], "Pair Trading": [[53, "pair-trading"]], "Figure F6 : Action BNP et pair trading": [[53, "indexmathe-Figure5"], [66, "index-mathdef-1-40"]], "Styles, Value, Growth": [[53, "styles-value-growth"]], "Gestion de portefeuille": [[53, "gestion-de-portefeuille"]], "Probl\u00e8me P1 : optimisation d\u2019un portefeuille": [[53, "indexmathe-Probl\u00e8me0"], [66, "index-mathdef-2-44"]], "Horizon de trading, intraday, daily": [[53, "horizon-de-trading-intraday-daily"]], "Analyse d\u2019une strat\u00e9gie": [[53, "analyse-d-une-strategie"]], "Figure F7 : Le cours de la BNP entre d\u00e9but 2003 et mi 2008": [[53, "indexmathe-Figure6"], [66, "index-mathdef-1-41"]], "Backtest": [[53, "backtest"]], "Figure F8 : NAV": [[53, "indexmathe-Figure7"], [66, "index-mathdef-1-42"]], "Mod\u00e9lisation": [[53, "modelisation"]], "R\u00e9sultats standards": [[53, "resultats-standards"]], "Variation de param\u00e8tres": [[53, "variation-de-parametres"]], "Figure F9 : NAV d\u2019une strat\u00e9gie": [[53, "indexmathe-Figure8"], [66, "index-mathdef-1-43"]], "Autres s\u00e9ries financi\u00e8res de m\u00eame nature": [[53, "autres-series-financieres-de-meme-nature"]], "Figure F10 : 4 actions fran\u00e7aises": [[53, "indexmathe-Figure9"], [66, "index-mathdef-1-31"]], "Table T2 : Indicateurs BNP, Cr\u00e9dit Agricole, Danone, Soci\u00e9t\u00e9 G\u00e9n\u00e9rale": [[53, "indexmathe-Table1"], [66, "index-mathdef-4-76"]], "Figure F11 : Rendement pour 4 actions fran\u00e7aises": [[53, "indexmathe-Figure10"], [66, "index-mathdef-1-32"]], "D\u00e9composition en deals": [[53, "decomposition-en-deals"]], "Figure F12 : Deal": [[53, "indexmathe-Figure11"], [66, "index-mathdef-1-33"]], "Figure F13 : Deal en image": [[53, "indexmathe-Figure12"], [66, "index-mathdef-1-34"]], "Figure F14 : Deal positifs, n\u00e9gatifs, logns, courts": [[53, "indexmathe-Figure13"], [66, "index-mathdef-1-35"]], "Pour aller plus loin": [[53, "pour-aller-plus-loin"], [152, "Pour-aller-plus-loin"]], "Diversification": [[53, "diversification"]], "Expos\u00e9s": [[54, "exposes"]], "Circuit hamiltonien et Kohonen": [[55, "circuit-hamiltonien-et-kohonen"]], "Aper\u00e7u": [[55, "apercu"]], "Cartes de Kohonen": [[55, "cartes-de-kohonen"]], "Circuit hamiltonien et Kruskal": [[56, "circuit-hamiltonien-et-kruskal"]], "Arbre de poids minimal et circuit hamiltonien": [[56, "arbre-de-poids-minimal-et-circuit-hamiltonien"]], "Arbre de poids minimum": [[56, "arbre-de-poids-minimum"]], "Algorithme A1 : Kruskal": [[56, "indexmathe-Algorithme0"]], "Circuit eul\u00e9rien": [[56, "circuit-eulerien"]], "Algorithme A2 : Circuit Eul\u00e9rien": [[56, "indexmathe-Algorithme1"]], "Circuit hamiltonien": [[56, "circuit-hamiltonien"]], "Algorithme A3 : Circuit hamiltonien": [[56, "indexmathe-Algorithme2"]], "Simplification du circuit hamiltonien": [[56, "simplification-du-circuit-hamiltonien"]], "Algorithme A4 : TSP": [[56, "indexmathe-Algorithme3"]], "Machine Learning": [[57, "machine-learning"], [72, "machine-learning"], [122, "machine-learning"]], "Quelques rappels": [[58, "quelques-rappels"]], "Rappels math\u00e9matiques": [[58, "rappels-mathematiques"]], "Fonction": [[58, "fonction"]], "Fonction continue": [[58, "fonction-continue"]], "Fonction d\u00e9rivable": [[58, "fonction-derivable"]], "Espace vectoriel": [[58, "espace-vectoriel"]], "Produit scalaire": [[58, "produit-scalaire"]], "Norme": [[58, "norme"]], "Matrice": [[58, "matrice"]], "Probl\u00e8me d\u2019optimisation": [[58, "probleme-d-optimisation"]], "Variable al\u00e9atoire": [[58, "variable-aleatoire"]], "Histogramme": [[58, "histogramme"]], "Corr\u00e9lation": [[58, "correlation"]], "Nuage de points": [[58, "nuage-de-points"]], "Rappels informatiques": [[58, "rappels-informatiques"]], "Le fichier csv": [[58, "le-fichier-csv"]], "Array": [[58, "array"]], "Fonction de hash": [[58, "fonction-de-hash"]], "Arbre": [[58, "arbre"]], "Rappels algorithmiques": [[58, "rappels-algorithmiques"]], "Le plus court chemin dans un graphe": [[58, "le-plus-court-chemin-dans-un-graphe"]], "La recherche dichotomique": [[58, "la-recherche-dichotomique"]], "Le voyageur du commerce": [[58, "le-voyageur-du-commerce"]], "Modules incourtournables en Python": [[58, "modules-incourtournables-en-python"]], "numpy": [[58, "numpy"], [67, "numpy"], [120, null]], "pandas": [[58, "pandas"], [120, null]], "scikit-learn": [[58, "scikit-learn"]], "statsmodels": [[58, "statsmodels"]], "Dessiner des cartes": [[58, "dessiner-des-cartes"]], "Exercices": [[58, "exercices"], [69, null]], "Cheat Sheets": [[59, "cheat-sheets"]], "Quelques conseils pour \u00e9crire un programme": [[60, "quelques-conseils-pour-ecrire-un-programme"]], "Des petites fonctions": [[60, "des-petites-fonctions"], [65, "des-petites-fonctions"]], "Pas de variables globales": [[60, "pas-de-variables-globales"]], "S\u00e9parer les calculs, le chargement des donn\u00e9es, l\u2019interface graphique": [[60, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"], [65, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"]], "Utiliser des fonctions de tests": [[60, "utiliser-des-fonctions-de-tests"]], "Trucs et astuces": [[60, "trucs-et-astuces"], [65, "trucs-et-astuces"]], "Cheat Sheet on Git": [[61, "cheat-sheet-on-git"]], "Add a remote": [[61, "add-a-remote"]], "Add a submodule": [[61, "add-a-submodule"]], "Checkout a specific file from a remote": [[61, "checkout-a-specific-file-from-a-remote"]], "Create a new local branch": [[61, "create-a-new-local-branch"]], "Create a new remote branch": [[61, "create-a-new-remote-branch"]], "Push modification to remote repository": [[61, "push-modification-to-remote-repository"]], "Remove a submodule": [[61, "remove-a-submodule"]], "Reset a branch": [[61, "reset-a-branch"]], "Reset a submodule": [[61, "reset-a-submodule"]], "Update a branch": [[61, "update-a-branch"]], "Update a submodule": [[61, "update-a-submodule"]], "Update a submodule to the remote branch": [[61, "update-a-submodule-to-the-remote-branch"]], "Fix submodules": [[61, "fix-submodules"]], "Move multiple files": [[61, "move-multiple-files"]], "Rebase a branch to upsteam branch": [[61, "rebase-a-branch-to-upsteam-branch"]], "Rebase a branch to upsteam branch and erase history": [[61, "rebase-a-branch-to-upsteam-branch-and-erase-history"]], "Clone a part of a repository, not all": [[61, "clone-a-part-of-a-repository-not-all"]], "Pr\u00e9cis": [[62, "precis"]], "Cheat Sheet on Jenkins": [[63, "cheat-sheet-on-jenkins"]], "Installation": [[63, "installation"]], "Plugins": [[63, "plugins"]], "Start, Restart": [[63, "start-restart"]], "Reset passwords": [[63, "reset-passwords"]], "Cheat Sheet on Linux": [[64, "cheat-sheet-on-linux"]], "Classic": [[64, "classic"]], "List all installed packages": [[64, "list-all-installed-packages"]], "Remove packages": [[64, "remove-packages"]], "Error with a package": [[64, "error-with-a-package"]], "Clean temporary files": [[64, "clean-temporary-files"]], "Hard drive": [[64, "hard-drive"]], "Processes": [[64, "processes"]], "Environment variable": [[64, "environment-variable"]], "Others": [[64, "others"]], "Cheat sheet: Python": [[65, "cheat-sheet-python"]], "Le langage": [[65, "le-langage"]], "Les variables": [[65, "les-variables"]], "Les types immuables": [[65, "les-types-immuables"]], "Les types modifiables": [[65, "les-types-modifiables"]], "Liste": [[65, "liste"], [204, "liste"], [211, "liste"]], "Dictionnaire": [[65, "dictionnaire"], [211, "dictionnaire"]], "Tableaux num\u00e9riques": [[65, "tableaux-numeriques"]], "Tests et boucles": [[65, "tests-et-boucles"]], "Tests": [[65, "tests"], [210, "tests"]], "for ou while": [[65, "for-ou-while"]], "Fonction enumerate": [[65, "fonction-enumerate"]], "Fonction zip": [[65, "fonction-zip"]], "Fonction map": [[65, "fonction-map"]], "Autres mot-cl\u00e9s": [[65, "autres-mot-cles"]], "Fonctions": [[65, "fonctions"], [172, "Fonctions"], [210, "fonctions"], [219, "fonctions"]], "D\u00e9finition, param\u00e8tres": [[65, "definition-parametres"]], "mot-cl\u00e9 lambda": [[65, "mot-cle-lambda"]], "mot-cl\u00e9 yield": [[65, "mot-cle-yield"]], "Classes": [[65, "classes"], [123, null], [131, "Classes"], [196, "classes"], [197, "classes"]], "D\u00e9claration d\u2019une classe": [[65, "declaration-d-une-classe"]], "Attributs et m\u00e9thodes": [[65, "attributs-et-methodes"]], "M\u00e9thodes statiques": [[65, "methodes-statiques"]], "Op\u00e9rateurs": [[65, "operateurs"], [132, "Op\u00e9rateurs"], [196, "operateurs"]], "Copie d\u2019instances": [[65, "copie-d-instances"], [196, "copie-d-instances"]], "H\u00e9ritage": [[65, "heritage"], [196, "heritage"]], "D\u00e9corateur": [[65, "decorateur"]], "Fichiers": [[65, "fichiers"], [178, "Fichiers"], [208, "fichiers"], [212, "fichiers"]], "Ecriture dans un fichier texte": [[65, "ecriture-dans-un-fichier-texte"]], "Lecture dans un fichier texte": [[65, "lecture-dans-un-fichier-texte"]], "Modules": [[65, "modules"], [178, "Modules"]], "Exceptions": [[65, "exceptions"], [199, "exceptions"], [201, "exceptions"]], "Erreurs, confusions fr\u00e9quentes": [[65, "erreurs-confusions-frequentes"]], "Variables": [[65, "variables"], [211, "variables"]], "Cha\u00eene de caract\u00e8res = tableau de caract\u00e8res": [[65, "chaine-de-caracteres-tableau-de-caracteres"]], "Guillemets ou pas": [[65, "guillemets-ou-pas"]], "Boucles": [[65, "boucles"], [210, "boucles"]], "range ou pas range": [[65, "range-ou-pas-range"]], "Initialisation": [[65, "initialisation"]], "Diff\u00e9rence entre print et return": [[65, "difference-entre-print-et-return"]], "Trois conseils pour \u00e9crire un programme": [[65, "trois-conseils-pour-ecrire-un-programme"]], "Utiliser des tests unitaires": [[65, "utiliser-des-tests-unitaires"]], "Partager du code": [[65, "partager-du-code"]], "Moteurs de recherche": [[65, "moteurs-de-recherche"]], "Syntaxes et d\u00e9finitions": [[66, "syntaxes-et-definitions"]], "D\u00e9finitions": [[66, "definitions"]], "D\u00e9finition D1 : classe": [[66, "index-mathdef-0-5"], [196, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : point d\u2019entr\u00e9e du programme": [[66, "index-mathdef-0-6"], [214, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : test": [[66, "index-mathdef-0-7"], [210, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : variable": [[66, "index-mathdef-0-8"], [211, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D10 : frozenset": [[66, "index-mathdef-0-9"], [211, "indexmathe-D\u00e9finition9"]], "D\u00e9finition D2 : constante": [[66, "index-mathdef-0-10"], [211, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : fonction": [[66, "index-mathdef-0-11"], [210, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : instantiaion": [[66, "index-mathdef-0-12"], [196, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D3 : fonction r\u00e9cursive": [[66, "index-mathdef-0-13"], [210, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : m\u00e9thode": [[66, "index-mathdef-0-14"], [196, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : type immuable (ou immutable)": [[66, "index-mathdef-0-15"], [211, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D4 : attribut": [[66, "index-mathdef-0-16"], [196, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : cha\u00eene de caract\u00e8res": [[66, "index-mathdef-0-17"], [211, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : port\u00e9e d\u2019un variable": [[66, "index-mathdef-0-18"], [210, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D5 : m\u00e9thode statique": [[66, "index-mathdef-0-19"], [196, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : tuple": [[66, "index-mathdef-0-20"], [211, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : variable locale": [[66, "index-mathdef-0-21"], [210, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D6 : attribut statique": [[66, "index-mathdef-0-22"], [196, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : type modifiable (ou mutable)": [[66, "index-mathdef-0-23"], [211, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : variable globale": [[66, "index-mathdef-0-24"], [210, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D7 : h\u00e9ritage": [[66, "index-mathdef-0-25"], [196, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D7 : liste": [[66, "index-mathdef-0-26"], [211, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D8 : dictionnaire": [[66, "index-mathdef-0-27"], [211, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D8 : surcharge": [[66, "index-mathdef-0-28"], [196, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D9 : set": [[66, "index-mathdef-0-29"], [211, "indexmathe-D\u00e9finition8"]], "Figures": [[66, "figures"]], "Probl\u00e8mes": [[66, "problemes"], [72, "problemes"], [72, null]], "Syntaxe": [[66, "syntaxe"], [196, "syntaxe"], [219, "syntaxe"]], "Syntaxe S1 : Attraper une exception": [[66, "index-mathdef-3-45"], [199, "indexmathe-Syntaxe0"]], "Syntaxe S1 : D\u00e9claration d\u2019une classe": [[66, "index-mathdef-3-46"], [196, "indexmathe-Syntaxe0"]], "Syntaxe S1 : Tests": [[66, "index-mathdef-3-47"], [210, "indexmathe-Syntaxe0"]], "Syntaxe S1 : importer un module (1)": [[66, "index-mathdef-3-48"], [214, "indexmathe-Syntaxe0"]], "Syntaxe S10 : D\u00e9claration d\u2019un attribut statique": [[66, "index-mathdef-3-49"], [196, "indexmathe-Syntaxe9"]], "Syntaxe S11 : D\u00e9claration d\u2019une propri\u00e9t\u00e9": [[66, "index-mathdef-3-50"], [196, "indexmathe-Syntaxe10"]], "Syntaxe S12 : D\u00e9claration d\u2019une propri\u00e9t\u00e9 (2)": [[66, "index-mathdef-3-51"], [196, "indexmathe-Syntaxe11"]], "Syntaxe S13 : D\u00e9claration de l\u2019op\u00e9rateur __copy__": [[66, "index-mathdef-3-52"], [196, "indexmathe-Syntaxe12"]], "Syntaxe S14 : D\u00e9claration d\u2019attributs fig\u00e9s": [[66, "index-mathdef-3-53"], [196, "indexmathe-Syntaxe13"]], "Syntaxe S15 : H\u00e9ritage": [[66, "index-mathdef-3-54"], [196, "indexmathe-Syntaxe14"]], "Syntaxe S16 : Surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[66, "index-mathdef-3-55"], [196, "indexmathe-Syntaxe15"]], "Syntaxe S2 : Instanciation d\u2019une classe": [[66, "index-mathdef-3-56"], [196, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Instruction pass": [[66, "index-mathdef-3-57"], [210, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Lever une exception": [[66, "index-mathdef-3-58"], [199, "indexmathe-Syntaxe1"]], "Syntaxe S2 : importer un module (2)": [[66, "index-mathdef-3-59"], [214, "indexmathe-Syntaxe1"]], "Syntaxe S3 : Boucle while": [[66, "index-mathdef-3-60"], [210, "indexmathe-Syntaxe2"]], "Syntaxe S3 : D\u00e9claration d\u2019une m\u00e9thode": [[66, "index-mathdef-3-61"], [196, "indexmathe-Syntaxe2"]], "Syntaxe S3 : importer un module (3)": [[66, "index-mathdef-3-62"], [214, "indexmathe-Syntaxe2"]], "Syntaxe S4 : Appel d\u2019une m\u00e9thode": [[66, "index-mathdef-3-63"], [196, "indexmathe-Syntaxe3"]], "Syntaxe S4 : Boucle for": [[66, "index-mathdef-3-64"], [210, "indexmathe-Syntaxe3"]], "Syntaxe S5 : D\u00e9claration d\u2019un attribut": [[66, "index-mathdef-3-65"], [196, "indexmathe-Syntaxe4"]], "Syntaxe S5 : Liste en extension": [[66, "index-mathdef-3-66"], [210, "indexmathe-Syntaxe4"]], "Syntaxe S6 : D\u00e9claration d\u2019un constructeur": [[66, "index-mathdef-3-67"], [196, "indexmathe-Syntaxe5"]], "Syntaxe S6 : D\u00e9claration d\u2019une fonction": [[66, "index-mathdef-3-68"], [210, "indexmathe-Syntaxe5"]], "Syntaxe S7 : Appel d\u2019un constructeur": [[66, "index-mathdef-3-69"], [196, "indexmathe-Syntaxe6"]], "Syntaxe S7 : Appel d\u2019une fonction": [[66, "index-mathdef-3-70"], [210, "indexmathe-Syntaxe6"]], "Syntaxe S8 : D\u00e9claration de l\u2019op\u00e9rateur __str__": [[66, "index-mathdef-3-71"], [196, "indexmathe-Syntaxe7"]], "Syntaxe S8 : Valeurs par d\u00e9faut": [[66, "index-mathdef-3-72"], [210, "indexmathe-Syntaxe7"]], "Syntaxe S9 : D\u00e9claration d\u2019une m\u00e9thode statique": [[66, "index-mathdef-3-73"], [196, "indexmathe-Syntaxe8"]], "Syntaxe S9 : Nombre ind\u00e9fini de param\u00e8tres": [[66, "index-mathdef-3-74"], [210, "indexmathe-Syntaxe8"]], "Tables": [[66, "tables"]], "Langage Python": [[67, "langage-python"]], "geo": [[67, "geo"]], "En diagonal": [[68, "en-diagonal"]], "Compl\u00e9ments": [[68, null], [69, null]], "Apprendre la programmation avec Python": [[69, "apprendre-la-programmation-avec-python"]], "Lectures": [[69, null]], "Older versions": [[69, "older-versions"]], "Introduction": [[70, "introduction"], [73, "Introduction"], [204, "introduction"]], "Installation de Python": [[70, "installation-de-python"]], "Installation d\u2019extensions ou modules ou packages": [[70, "installation-d-extensions-ou-modules-ou-packages"]], "Accents": [[70, "accents"]], "Trois concepts, s\u00e9quence, test, boucle": [[70, "trois-concepts-sequence-test-boucle"]], "Algorithmes": [[70, "algorithmes"], [72, "algorithmes"], [72, null], [72, null], [119, "algorithmes"]], "Fichier ou notebook": [[70, "fichier-ou-notebook"]], "License": [[71, "license"]], "Tous les notebooks": [[72, "tous-les-notebooks"]], "Python": [[72, "python"], [72, null], [72, null], [144, "Python"]], "Enonc\u00e9 - Correction": [[72, "enonce-correction"]], "Data": [[72, "data"], [72, null]], "Correction d\u2019examens": [[72, "correction-d-examens"]], "Examens": [[72, null]], "machine learning": [[72, null]], "Algorithmes de streaming, BJKST": [[73, "Algorithmes-de-streaming,-BJKST"]], "Estimer le nombre d\u2019\u00e9l\u00e9ments distincts: l\u2019algorithme BJKST": [[73, "Estimer-le-nombre-d'\u00e9l\u00e9ments-distincts:-l'algorithme-BJKST"]], "Universal hashing": [[73, "Universal-hashing"]], "Collisions": [[73, "Collisions"]], "Algorithme BJKST": [[73, "Algorithme-BJKST"]], "R\u00e9sultats num\u00e9riques": [[73, "R\u00e9sultats-num\u00e9riques"]], "Temps de calcul en fonction de la taille du stream": [[73, "Temps-de-calcul-en-fonction-de-la-taille-du-stream"]], "Un peu plus sur la pr\u00e9cision de l\u2019estimateur": [[73, "Un-peu-plus-sur-la-pr\u00e9cision-de-l'estimateur"]], "h_1 et h_2 \u00e9gales \u00e0 l\u2019identit\u00e9": [[73, "h_1-et-h_2-\u00e9gales-\u00e0-l'identit\u00e9"]], "cas o\u00f9 la taille du hash est petite": [[73, "cas-o\u00f9-la-taille-du-hash-est-petite"]], "cas o\u00f9 la taille de hash est plus grande": [[73, "cas-o\u00f9-la-taille-de-hash-est-plus-grande"]], "la taille de hash d\u00e9pend de la pr\u00e9cision \\epsilon": [[73, "la-taille-de-hash-d\u00e9pend-de-la-pr\u00e9cision-\\epsilon"]], "Graphe et Composantes connexes": [[74, "Graphe-et-Composantes-connexes"]], "Q1 : construire une matrice d\u2019adjacence sym\u00e9trique al\u00e9atoire": [[74, "Q1-:-construire-une-matrice-d'adjacence-sym\u00e9trique-al\u00e9atoire"], [74, "id1"]], "Q2 : calculer les valeurs propres et les trier par ordre croissant": [[74, "Q2-:-calculer-les-valeurs-propres-et-les-trier-par-ordre-croissant"], [74, "id2"]], "Q3 : que fait l\u2019algorithme suivant": [[74, "Q3-:-que-fait-l'algorithme-suivant"], [74, "id3"]], "Q4 : construire un algorithme qui retourne les composantes connexes d\u2019un graphe": [[74, "Q4-:-construire-un-algorithme-qui-retourne-les-composantes-connexes-d'un-graphe"], [74, "id4"]], "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.": [[75, "Calculer-le-nombre-de-fa\u00e7ons-de-monter-une-\u00e9chelle."]], "Enonc\u00e9s": [[75, "Enonc\u00e9s"], [90, "Enonc\u00e9s"], [93, "enonces"], [119, null], [123, null]], "Enonc\u00e9 1": [[75, "Enonc\u00e9-1"], [94, "Enonc\u00e9-1"], [95, "Enonc\u00e9-1"], [96, "Enonc\u00e9-1"], [97, "Enonc\u00e9-1"], [98, "Enonc\u00e9-1"], [99, "Enonc\u00e9-1"]], "Enonc\u00e9 2": [[75, "Enonc\u00e9-2"], [94, "Enonc\u00e9-2"], [95, "Enonc\u00e9-2"], [96, "Enonc\u00e9-2"], [98, "Enonc\u00e9-2"], [99, "Enonc\u00e9-2"]], "Enonc\u00e9 3": [[75, "Enonc\u00e9-3"], [96, "Enonc\u00e9-3"]], "Solutions": [[75, "Solutions"], [90, "Solutions"]], "Solution au probl\u00e8me 1": [[75, "Solution-au-probl\u00e8me-1"], [90, "Solution-au-probl\u00e8me-1"]], "Solution au probl\u00e8me 2": [[75, "Solution-au-probl\u00e8me-2"]], "Solution au probl\u00e8me 3": [[75, "Solution-au-probl\u00e8me-3"]], "Distance d\u2019\u00e9dition": [[76, "Distance-d'\u00e9dition"], [77, "Distance-d'\u00e9dition"]], "Q1 : Distance simple entre deux mots de m\u00eame longueur": [[76, "Q1-:-Distance-simple-entre-deux-mots-de-m\u00eame-longueur"], [76, "id1"]], "Q2 : Distance simple entre deux mots de longueur diff\u00e9rente": [[76, "Q2-:-Distance-simple-entre-deux-mots-de-longueur-diff\u00e9rente"], [76, "id2"]], "Q3 : Distance alambiqu\u00e9e\u2026": [[76, "Q3-:-Distance-alambiqu\u00e9e..."], [76, "id3"]], "Q4 : impl\u00e9menter l\u2019algorithme de la page wikipedia": [[76, "Q4-:-impl\u00e9menter-l'algorithme-de-la-page-wikipedia"], [76, "id4"]], "Distance entre deux mots de m\u00eame longueur et tests unitaires": [[77, "Distance-entre-deux-mots-de-m\u00eame-longueur-et-tests-unitaires"]], "Distance na\u00efve": [[77, "Distance-na\u00efve"]], "Distance tr\u00e8s na\u00efve": [[77, "Distance-tr\u00e8s-na\u00efve"]], "Distance entre deux mots de longueur diff\u00e9rente mais pas si diff\u00e9rente": [[77, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente-mais-pas-si-diff\u00e9rente"]], "Distance entre deux mots de longueur diff\u00e9rente": [[77, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente"]], "Test unitaires": [[77, "Test-unitaires"]], "m et n sont tr\u00e8s proches, et alors ?": [[77, "m-et-n-sont-tr\u00e8s-proches,-et-alors-?"]], "ff, f, ph, f\u2026 plus personne ne sait \u00e9crire": [[77, "ff,-f,-ph,-f...-plus-personne-ne-sait-\u00e9crire"]], "Probl\u00e8me d\u2019ordonnancement": [[78, "Probl\u00e8me-d'ordonnancement"]], "Q1 : \u00e9crire un algorithme qui d\u00e9termine dans quel ordre on peut ex\u00e9cuter les t\u00e2ches.": [[78, "Q1-:-\u00e9crire-un-algorithme-qui-d\u00e9termine-dans-quel-ordre-on-peut-ex\u00e9cuter-les-t\u00e2ches."]], "Q2 : Et si les t\u00e2ches n\u2019ont plus la m\u00eame dur\u00e9e ?": [[78, "Q2-:-Et-si-les-t\u00e2ches-n'ont-plus-la-m\u00eame-dur\u00e9e-?"]], "La sous-s\u00e9quence de plus grande somme": [[79, "La-sous-s\u00e9quence-de-plus-grande-somme"]], "Solution na\u00efve": [[79, "Solution-na\u00efve"], [164, "Solution-na\u00efve"]], "Solution plus rapide": [[79, "Solution-plus-rapide"]], "Solution dichotomique": [[79, "Solution-dichotomique"]], "Solution lin\u00e9aire": [[79, "Solution-lin\u00e9aire"]], "Comparaison des temps de calcul": [[79, "Comparaison-des-temps-de-calcul"]], "Application": [[79, "Application"]], "Graphes al\u00e9atoires": [[80, "Graphes-al\u00e9atoires"]], "Graphe al\u00e9atoire - matrice d\u2019adjacence al\u00e9atoire": [[80, "Graphe-al\u00e9atoire---matrice-d'adjacence-al\u00e9atoire"]], "Vocabulaire li\u00e9 aux graphes": [[80, "Vocabulaire-li\u00e9-aux-graphes"]], "Apart\u00e9 : matrice d\u2019adjacence \u00e0 la puissance n": [[80, "Apart\u00e9-:-matrice-d'adjacence-\u00e0-la-puissance-n"]], "Trouver le nombre de composantes connexes": [[80, "Trouver-le-nombre-de-composantes-connexes"]], "G\u00e9n\u00e9ration d\u2019un graphe al\u00e9atoire": [[80, "G\u00e9n\u00e9ration-d'un-graphe-al\u00e9atoire"]], "Version 1": [[80, "Version-1"]], "Version 2": [[80, "Version-2"]], "Simulation COVID": [[81, "Simulation-COVID"]], "Mod\u00e8le SIRD": [[81, "Mod\u00e8le-SIRD"]], "Q0 : une petite fonction pour dessiner": [[81, "Q0-:-une-petite-fonction-pour-dessiner"]], "Q1 : \u00e9crire une fonction qui calcule la propagation": [[81, "Q1-:-\u00e9crire-une-fonction-qui-calcule-la-propagation"]], "Q2 : on veut estimer les param\u00e8tres du mod\u00e8le, une fonction d\u2019erreur ?": [[81, "Q2-:-on-veut-estimer-les-param\u00e8tres-du-mod\u00e8le,-une-fonction-d'erreur-?"]], "Q3 : optimisation": [[81, "Q3-:-optimisation"]], "Q4 : dessiner les r\u00e9sultats": [[81, "Q4-:-dessiner-les-r\u00e9sultats"]], "Q5 : v\u00e9rifier que cela marche sur des donn\u00e9es synth\u00e9tiques": [[81, "Q5-:-v\u00e9rifier-que-cela-marche-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Q6 : sur des donn\u00e9es r\u00e9elles": [[81, "Q6-:-sur-des-donn\u00e9es-r\u00e9elles"], [81, "id1"]], "Q1 : propagation": [[81, "Q1-:-propagation"]], "Q2 : s\u00e9rie cumul\u00e9es et fonction erreur": [[81, "Q2-:-s\u00e9rie-cumul\u00e9es-et-fonction-erreur"]], "Q3, Q4, Q5 : optimisation sur des donn\u00e9es synth\u00e9tiques": [[81, "Q3,-Q4,-Q5-:-optimisation-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)": [[82, "Mod\u00e8le-\u00e9pid\u00e9miologique-(SIRD)"]], "Simulation": [[82, "Simulation"], [119, null]], "Visualisation": [[82, "Visualisation"], [88, "Visualisation"]], "Estimation des param\u00e8tres": [[82, "Estimation-des-param\u00e8tres"]], "Premi\u00e8re id\u00e9e": [[82, "Premi\u00e8re-id\u00e9e"], [167, "Premi\u00e8re-id\u00e9e"]], "Seconde id\u00e9e : probl\u00e8mes d\u2019optimisation": [[82, "Seconde-id\u00e9e-:-probl\u00e8mes-d'optimisation"]], "Jeux de dictionnaires, plus grand suffixe commun": [[83, "Jeux-de-dictionnaires,-plus-grand-suffixe-commun"]], "Exercice 1 : trouver les deux mots qui partagent le plus grand suffixe en commun": [[83, "Exercice-1-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun"], [83, "id1"]], "Exercice 2 : constuire un dictionnaire qui associe \u00e0 chaque lettre tous les mots se terminant par celle-ci": [[83, "Exercice-2-:-constuire-un-dictionnaire-qui-associe-\u00e0-chaque-lettre-tous-les-mots-se-terminant-par-celle-ci"], [83, "id2"]], "Exercice 3 : trouver les deux mots qui partagent le plus grand suffixe en commun en utilisant le dictionnaire pr\u00e9c\u00e9dent": [[83, "Exercice-3-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun-en-utilisant-le-dictionnaire-pr\u00e9c\u00e9dent"], [83, "id3"]], "Exercice 4 : mesurer le temps pris par chaque fonction": [[83, "Exercice-4-:-mesurer-le-temps-pris-par-chaque-fonction"], [83, "id4"]], "Exercice 5 : expliquer pourquoi telle m\u00e9thode est plus rapide.": [[83, "Exercice-5-:-expliquer-pourquoi-telle-m\u00e9thode-est-plus-rapide."], [83, "id5"]], "Exercice 6 : pousser l\u2019id\u00e9e plus loin et construire un trie": [[83, "Exercice-6-:-pousser-l'id\u00e9e-plus-loin-et-construire-un-trie"], [83, "id6"]], "Les k premiers \u00e9l\u00e9ments (top k)": [[84, "Les-k-premiers-\u00e9l\u00e9ments-(top-k)"]], "Exercice 1 : on trie tout et on prend les k plus petit": [[84, "Exercice-1-:-on-trie-tout-et-on-prend-les-k-plus-petit"], [84, "id1"]], "Exercice 2 : version plus rapide au choix": [[84, "Exercice-2-:-version-plus-rapide-au-choix"], [84, "id2"]], "Exercice 3 : algorithme de s\u00e9lection": [[84, "Exercice-3-:-algorithme-de-s\u00e9lection"], [84, "id3"]], "Exercice 4 : utiliser la fonction perf_counter pour comparer les vitessses de chaque solution": [[84, "Exercice-4-:-utiliser-la-fonction-perf_counter-pour-comparer-les-vitessses-de-chaque-solution"], [84, "id4"]], "TSP - Traveling Salesman Problem": [[85, "TSP---Traveling-Salesman-Problem"]], "Q1 : choisir une permutation al\u00e9atoire des villes et calculer la distance du chemin qui les relie dans cet ordre": [[85, "Q1-:-choisir-une-permutation-al\u00e9atoire-des-villes-et-calculer-la-distance-du-chemin-qui-les-relie-dans-cet-ordre"]], "Q2 : tirer deux villes al\u00e9atoirement, les inverser, garder la permutation si elle am\u00e9liore la distance": [[85, "Q2-:-tirer-deux-villes-al\u00e9atoirement,-les-inverser,-garder-la-permutation-si-elle-am\u00e9liore-la-distance"]], "Q3 : choisir deux villes al\u00e9atoirement, permuter une des deux moiti\u00e9s\u2026": [[85, "Q3-:-choisir-deux-villes-al\u00e9atoirement,-permuter-une-des-deux-moiti\u00e9s..."]], "Q4 : tester toutes les permutations possibles\u2026 je plaisante\u2026": [[85, "Q4-:-tester-toutes-les-permutations-possibles...-je-plaisante..."]], "Calculer x**n le plus rapidement possible": [[86, "Calculer-x**n-le-plus-rapidement-possible"]], "Solution": [[86, "Solution"]], "Produit matriciel avec une matrice creuse": [[87, "Produit-matriciel-avec-une-matrice-creuse"]], "Matrice creuse et dictionnaire": [[87, "Matrice-creuse-et-dictionnaire"]], "Calcul de la dimension": [[87, "Calcul-de-la-dimension"]], "Produit matriciel classique": [[87, "Produit-matriciel-classique"]], "Produit matriciel plus \u00e9l\u00e9gant": [[87, "Produit-matriciel-plus-\u00e9l\u00e9gant"]], "Mesure du temps": [[87, "Mesure-du-temps"], [175, "Mesure-du-temps"]], "Dictionnaires de dictionnaires": [[87, "Dictionnaires-de-dictionnaires"]], "Apart\u00e9 sur le voyageur de commerce": [[88, "Apart\u00e9-sur-le-voyageur-de-commerce"]], "Tirer des points al\u00e9atoirement et les afficher": [[88, "Tirer-des-points-al\u00e9atoirement-et-les-afficher"]], "Distance d\u2019un chemin": [[88, "Distance-d'un-chemin"]], "Parcourir toutes les permutations": [[88, "Parcourir-toutes-les-permutations"]], "Module tqdm": [[88, "Module-tqdm"]], "Retournement": [[88, "Retournement"]], "Plus court chemin passant par tous les noeuds d\u2019un graphe": [[89, "Plus-court-chemin-passant-par-tous-les-noeuds-d'un-graphe"]], "Distance": [[89, "Distance"]], "Id\u00e9e d\u2019algorithme": [[89, "Id\u00e9e-d'algorithme"]], "D\u00e9coder du Morse sans espaces": [[90, "D\u00e9coder-du-Morse-sans-espaces"]], "Exercice 1 : Traduire un texte Morse qui ne contient pas d\u2019espace": [[90, "Exercice-1-:-Traduire-un-texte-Morse-qui-ne-contient-pas-d'espace"]], "Exercice 2 : calculer l\u2019alphabet qui minimise une transcription": [[90, "Exercice-2-:-calculer-l'alphabet-qui-minimise-une-transcription"]], "Solution au probl\u00e8me 2 avec des expressions r\u00e9guli\u00e8res": [[90, "Solution-au-probl\u00e8me-2-avec-des-expressions-r\u00e9guli\u00e8res"]], "Solution au probl\u00e8me 2 : toutes les interpr\u00e9tations": [[90, "Solution-au-probl\u00e8me-2-:-toutes-les-interpr\u00e9tations"]], "Parcourir les rues de Paris": [[91, "Parcourir-les-rues-de-Paris"]], "Les donn\u00e9es": [[91, "Les-donn\u00e9es"], [162, "Les-donn\u00e9es"]], "Une premi\u00e8re solution au premier probl\u00e8me": [[91, "Une-premi\u00e8re-solution-au-premier-probl\u00e8me"]], "Etape 1 : la matrice Bellman": [[91, "Etape-1-:-la-matrice-Bellman"]], "Kruskall": [[91, "Kruskall"]], "Chemin Eul\u00e9rien": [[91, "Chemin-Eul\u00e9rien"]], "Algorithme optimal": [[91, "Algorithme-optimal"]], "Variantes": [[91, "Variantes"]], "Sens interdit et gaphe orient\u00e9": [[91, "Sens-interdit-et-gaphe-orient\u00e9"]], "Windy postman problem": [[91, "Windy-postman-problem"]], "Casser le code de Vigen\u00e8re": [[92, "Casser-le-code-de-Vigen\u00e8re"]], "Exercices minut\u00e9s": [[93, "exercices-minutes"]], "S\u00e9ances not\u00e9es": [[93, "seances-notees"]], "Corrections": [[93, "corrections"]], "Exercices courts": [[93, "exercices-courts"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014": [[94, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014": [[95, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-10-octobre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014": [[96, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"], [97, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"]], "Q5": [[96, "Q5"], [96, "id5"], [96, "id10"], [97, "Q5"], [101, "Q5"], [104, "Q5"], [105, "Q5"], [105, "id2"], [106, "Q5"], [158, "Q5"], [159, "Q5"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015": [[98, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2015"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015": [[99, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-6-novembre-2015"]], "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)": [[100, "1A.e---TD-not\u00e9,-27-novembre-2012-(\u00e9l\u00e9ments-de-code-pour-le-coloriage)"]], "construction de la spirale": [[100, "construction-de-la-spirale"], [101, "construction-de-la-spirale"]], "dessin de la spirale": [[100, "dessin-de-la-spirale"], [101, "dessin-de-la-spirale"]], "ajouter du rouge": [[100, "ajouter-du-rouge"]], "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)": [[101, "1A.e---TD-not\u00e9,-27-novembre-2012-(coloriage,-correction)"]], "version 1": [[101, "version-1"], [101, "id1"]], "version 4": [[101, "version-4"], [101, "id2"]], "Q4 : spirale": [[101, "Q4-:-spirale"]], "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014": [[102, "1A.e---TD-not\u00e9,-5-d\u00e9cembre-2014"]], "Exercice 1": [[102, "Exercice-1"], [105, "Exercice-1"], [106, "Exercice-1"], [162, "Exercice-1"], [163, "Exercice-1"], [172, "Exercice-1"], [173, "Exercice-1"], [186, "Exercice-1"], [187, "Exercice-1"]], "Exercice 2": [[102, "Exercice-2"], [105, "Exercice-2"], [113, "Exercice-2"], [162, "Exercice-2"], [163, "Exercice-2"], [173, "Exercice-2"], [186, "Exercice-2"], [187, "Exercice-2"]], "Exercice 3": [[102, "Exercice-3"], [162, "Exercice-3"], [163, "Exercice-3"], [186, "Exercice-3"]], "Exercice 4": [[102, "Exercice-4"], [162, "Exercice-4"], [163, "Exercice-4"], [186, "Exercice-4"], [187, "Exercice-4"]], "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)": [[103, "1A.e---TD-not\u00e9-2015-rattrapage-(\u00e9nonc\u00e9,-\u00e9crit-et-oral)"]], "Question 1": [[103, "Question-1"]], "Question 2": [[103, "Question-2"]], "Question 3": [[103, "Question-3"]], "Question 4": [[103, "Question-4"]], "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015": [[104, "1A.e---TD-not\u00e9,-11-d\u00e9cembre-2015"]], "Exercice 1 : Louer ou acheter un appartement ?": [[104, "Exercice-1-:-Louer-ou-acheter-un-appartement-?"]], "Q6": [[104, "Q6"], [105, "Q6"], [105, "id3"], [106, "Q6"], [154, "Q6"], [155, "Q6"], [158, "Q6"], [159, "Q6"]], "Q7 exo 1": [[104, "Q7-exo-1"]], "Q7 exo 2": [[104, "Q7-exo-2"]], "Q8": [[104, "Q8"], [105, "Q8"], [105, "id5"], [106, "Q8"], [154, "Q8"], [155, "Q8"]], "Q9 version dichotomique de Q4": [[104, "Q9-version-dichotomique-de-Q4"]], "Exercice 2 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[104, "Exercice-2-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "Exercice 3 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[104, "Exercice-3-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016": [[105, "1A.e---TD-not\u00e9,-16-d\u00e9cembre-2016"]], "Q7": [[105, "Q7"], [105, "id4"], [106, "Q7"], [137, "Q7"], [154, "Q7"], [155, "Q7"], [158, "Q7"], [159, "Q7"]], "Q9": [[105, "Q9"], [105, "id6"], [106, "Q9"], [154, "Q9"], [155, "Q9"]], "Q10": [[105, "Q10"], [105, "id7"], [106, "Q10"], [110, "Q10"], [154, "Q10"], [155, "Q10"]], "Q1 - Q2 - Q3": [[105, "Q1---Q2---Q3"]], "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017": [[106, "1A.e---TD-not\u00e9,-21-f\u00e9vrier-2017"]], "Quelques explications et d\u00e9monstrations": [[106, "Quelques-explications-et-d\u00e9monstrations"]], "Quelques commentaires sur le code": [[106, "Quelques-commentaires-sur-le-code"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)": [[107, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(1)"]], "Q1 - \u00e9chantillon al\u00e9atoire": [[107, "Q1---\u00e9chantillon-al\u00e9atoire"], [108, "Q1---\u00e9chantillon-al\u00e9atoire"], [109, "Q1---\u00e9chantillon-al\u00e9atoire"], [110, "Q1---\u00e9chantillon-al\u00e9atoire"]], "Q1 - dessiner le nuage de points - donn\u00e9e": [[107, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"], [108, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"]], "Q2 - tri": [[107, "Q2---tri"], [108, "Q2---tri"]], "Q3 - moyenne": [[107, "Q3---moyenne"], [108, "Q3---moyenne"], [109, "Q3---moyenne"], [110, "Q3---moyenne"]], "Q4 - distance": [[107, "Q4---distance"], [108, "Q4---distance"]], "Q5 - fonction comme param\u00e8tre": [[107, "Q5---fonction-comme-param\u00e8tre"], [108, "Q5---fonction-comme-param\u00e8tre"]], "Q6 - optimiser": [[107, "Q6---optimiser"], [108, "Q6---optimiser"]], "Q7 - optimisation encore": [[107, "Q7---optimisation-encore"], [108, "Q7---optimisation-encore"]], "Q8 - fonction r\u00e9cursive": [[107, "Q8---fonction-r\u00e9cursive"], [108, "Q8---fonction-r\u00e9cursive"]], "Q9 - co\u00fbt": [[107, "Q9---co\u00fbt"]], "Q10 - autre nuage de points": [[107, "Q10---autre-nuage-de-points"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)": [[108, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(2)"]], "Q9 - seuil": [[108, "Q9---seuil"]], "Q10 - co\u00fbt": [[108, "Q10---co\u00fbt"]], "1A.e - Enonc\u00e9 23 octobre 2018 (1)": [[109, "1A.e---Enonc\u00e9-23-octobre-2018-(1)"]], "Q2 - matrice m1": [[109, "Q2---matrice-m1"], [110, "Q2---matrice-m1"]], "Q4 - matrice m2": [[109, "Q4---matrice-m2"], [110, "Q4---matrice-m2"]], "Q5 - matrice m3": [[109, "Q5---matrice-m3"]], "Q6 - norme": [[109, "Q6---norme"]], "Q7 - r\u00e9p\u00e9tition": [[109, "Q7---r\u00e9p\u00e9tition"]], "Q8 - plus de valeurs manquantes": [[109, "Q8---plus-de-valeurs-manquantes"]], "Q9 - 1 valeur manquante ?": [[109, "Q9---1-valeur-manquante-?"]], "Q10 - plus de deux colonnes ?": [[109, "Q10---plus-de-deux-colonnes-?"]], "1A.e - Enonc\u00e9 23 octobre 2018 (2)": [[110, "1A.e---Enonc\u00e9-23-octobre-2018-(2)"]], "Q5 - x le plus proche": [[110, "Q5---x-le-plus-proche"]], "Q6 - matrice m3": [[110, "Q6---matrice-m3"]], "Q7 - norme": [[110, "Q7---norme"]], "Q8 - r\u00e9p\u00e9tition": [[110, "Q8---r\u00e9p\u00e9tition"]], "Q9 - plus de valeurs manquantes": [[110, "Q9---plus-de-valeurs-manquantes"]], "1A.e - Enonc\u00e9 22 octobre 2019 (1)": [[111, "1A.e---Enonc\u00e9-22-octobre-2019-(1)"]], "Q1 - distance_table": [[111, "Q1---distance_table"], [112, "Q1---distance_table"]], "Q2 - distance_bord": [[111, "Q2---distance_bord"], [112, "Q2---distance_bord"]], "Q3 - table_alea": [[111, "Q3---table_alea"], [112, "Q3---table_alea"]], "Q4 - n_table_alea": [[111, "Q4---n_table_alea"], [112, "Q4---n_table_alea"]], "Q5 - table_proches": [[111, "Q5---table_proches"], [112, "Q5---table_proches"]], "Q6 - distance_n_tables_alea": [[111, "Q6---distance_n_tables_alea"], [112, "Q6---distance_n_tables_alea"]], "Q7 - meilleur_table_alea": [[111, "Q7---meilleur_table_alea"], [112, "Q7---meilleur_table_alea"]], "Q8 - r\u00e9sultat num\u00e9rique": [[111, "Q8---r\u00e9sultat-num\u00e9rique"], [112, "Q8---r\u00e9sultat-num\u00e9rique"]], "Q9 - plot_tables": [[111, "Q9---plot_tables"], [112, "Q9---plot_tables"]], "Q10 \u2026": [[111, "Q10-..."], [112, "Q10-..."]], "Q10 - Vorono\u00ef": [[111, "Q10---Vorono\u00ef"], [112, "Q10---Vorono\u00ef"]], "Q10 - KMeans": [[111, "Q10---KMeans"], [112, "Q10---KMeans"]], "1A.e - Enonc\u00e9 22 octobre 2019 (2)": [[112, "1A.e---Enonc\u00e9-22-octobre-2019-(2)"]], "1A - Enonc\u00e9 24 novembre 2020": [[113, "1A---Enonc\u00e9-24-novembre-2020"]], "Exercice 1 : gu\u00e9rison": [[113, "Exercice-1-:-gu\u00e9rison"]], "Q2 : dur\u00e9e de gu\u00e9rison": [[113, "Q2-:-dur\u00e9e-de-gu\u00e9rison"]], "Q3 : estimateur Kaplan-Meier (1)": [[113, "Q3-:-estimateur-Kaplan-Meier-(1)"]], "Q4 : courbe de Kaplan-Meier": [[113, "Q4-:-courbe-de-Kaplan-Meier"]], "Q5 : graphe": [[113, "Q5-:-graphe"]], "Q6 : application aux donn\u00e9es publiques": [[113, "Q6-:-application-aux-donn\u00e9es-publiques"]], "Q1 : t + 1": [[113, "Q1-:-t-+-1"]], "Q2 : apr\u00e8s T it\u00e9ration": [[113, "Q2-:-apr\u00e8s-T-it\u00e9ration"]], "Q3 : vaccin": [[113, "Q3-:-vaccin"]], "Q4 : apr\u00e8s T heures": [[113, "Q4-:-apr\u00e8s-T-heures"]], "Q5 : variation": [[113, "Q5-:-variation"]], "1A - Enonc\u00e9 3 novembre 2021": [[114, "1A---Enonc\u00e9-3-novembre-2021"]], "Exercice 1 : multiplication de matrices": [[114, "Exercice-1-:-multiplication-de-matrices"]], "Q1 : Pourquoi (m1 @ m2) @ m3 est-il plus lent que m1 @ (m2 @ m3) ? (2 points)": [[114, "Q1-:-Pourquoi-(m1-@-m2)-@-m3-est-il-plus-lent-que-m1-@-(m2-@-m3)-?-(2-points)"]], "Q2 : Ecrire une fonction qui calcule le nombre d\u2019operations dans une multiplication de deux matrices (2 points)": [[114, "Q2-:-Ecrire-une-fonction-qui-calcule-le-nombre-d'operations-dans-une-multiplication-de-deux-matrices-(2-points)"]], "Q3 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de deux matrices et la meilleure option (2 points)": [[114, "Q3-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-deux-matrices-et-la-meilleure-option-(2-points)"]], "Q4 : Ecrire une fonction qui effectue le produit de trois matrices le plus rapidement possible (2 points)": [[114, "Q4-:-Ecrire-une-fonction-qui-effectue-le-produit-de-trois-matrices-le-plus-rapidement-possible-(2-points)"]], "Q5 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps (2 points)": [[114, "Q5-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-(2-points)"]], "Q6 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de 4 matrices et la meilleure option (3 points)": [[114, "Q6-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-4-matrices-et-la-meilleure-option-(3-points)"]], "Q7 : Ecrire une fonction qui effectue le produit de 4 matrices le plus rapidement possible (3 points)": [[114, "Q7-:-Ecrire-une-fonction-qui-effectue-le-produit-de-4-matrices-le-plus-rapidement-possible-(3-points)"]], "Q8 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps et la matrice m4. (2 points)": [[114, "Q8-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-et-la-matrice-m4.-(2-points)"]], "Q9 : On se penche sur le cas \u00e0 une multiplication de N matrices, combien y a-t-il de multiplications de 2 matrices ? (2 points)": [[114, "Q9-:-On-se-penche-sur-le-cas-\u00e0-une-multiplication-de-N-matrices,-combien-y-a-t-il-de-multiplications-de-2-matrices-?-(2-points)"]], "Q10 : R\u00e9soudre l\u2019optimisation de multiplication de N matrices.": [[114, "Q10-:-R\u00e9soudre-l'optimisation-de-multiplication-de-N-matrices."]], "Remarques lors de la correction": [[114, "Remarques-lors-de-la-correction"]], "1A - Enonc\u00e9 15 novembre 2021 - rattrapage": [[115, "1A---Enonc\u00e9-15-novembre-2021---rattrapage"]], "Exercice 1 : optimisation de volume": [[115, "Exercice-1-:-optimisation-de-volume"]], "Q1 : \u00e9crire une fonction qui calcule l\u2019aire d\u2019une surface": [[115, "Q1-:-\u00e9crire-une-fonction-qui-calcule-l'aire-d'une-surface"]], "Q2 : \u00e9crire une fonction qui calcule le volume d\u2019une brique": [[115, "Q2-:-\u00e9crire-une-fonction-qui-calcule-le-volume-d'une-brique"]], "Q3 : \u00e9crire une fonction qui retourne la somme des surfaces des faces d\u2019une brique": [[115, "Q3-:-\u00e9crire-une-fonction-qui-retourne-la-somme-des-surfaces-des-faces-d'une-brique"]], "Q4 : la brique optimale": [[115, "Q4-:-la-brique-optimale"]], "Q5 : on inclut la surface n\u00e9cessaire pour coller les extremit\u00e9s": [[115, "Q5-:-on-inclut-la-surface-n\u00e9cessaire-pour-coller-les-extremit\u00e9s"]], "Q6 : une bouteille de deux litres deux fois plus large": [[115, "Q6-:-une-bouteille-de-deux-litres-deux-fois-plus-large"]], "Q7 : petite brique en bleue, grosse brique en rouge": [[115, "Q7-:-petite-brique-en-bleue,-grosse-brique-en-rouge"]], "1A - Enonc\u00e9 3 mars 2022- rattrapage": [[116, "1A---Enonc\u00e9-3-mars-2022--rattrapage"]], "Dessin d\u2019une liste de segments": [[116, "Dessin-d'une-liste-de-segments"]], "Distance d\u2019un segment": [[116, "Distance-d'un-segment"]], "Calcul du segment suivant": [[116, "Calcul-du-segment-suivant"]], "Calcul des trois segments suivants": [[116, "Calcul-des-trois-segments-suivants"]], "Construction de tous les niveaux de l\u2019arbre": [[116, "Construction-de-tous-les-niveaux-de-l'arbre"]], "Construction de trois segments al\u00e9atoires": [[116, "Construction-de-trois-segments-al\u00e9atoires"]], "Construction d\u2019un arbre al\u00e9atoire": [[116, "Construction-d'un-arbre-al\u00e9atoire"]], "1A - Enonc\u00e9 26 octobre 2022": [[117, "1A---Enonc\u00e9-26-octobre-2022"]], "Exercice 1 : calcul de distances": [[117, "Exercice-1-:-calcul-de-distances"]], "Q1 : tirer deux matrices al\u00e9atoires pour X et Y, de tailles diff\u00e9rentes": [[117, "Q1-:-tirer-deux-matrices-al\u00e9atoires-pour-X-et-Y,-de-tailles-diff\u00e9rentes"]], "Q2 : calculer tous les distances entre X et Y": [[117, "Q2-:-calculer-tous-les-distances-entre-X-et-Y"]], "Q3 : \u00e9crire un test unitaire qui v\u00e9rifie le r\u00e9sultat lorsque X est la matrice identit\u00e9 2x2": [[117, "Q3-:-\u00e9crire-un-test-unitaire-qui-v\u00e9rifie-le-r\u00e9sultat-lorsque-X-est-la-matrice-identit\u00e9-2x2"]], "Q4 : quel est le co\u00fbt de l\u2019algorithme en fonction des dimensions de X et Y ?": [[117, "Q4-:-quel-est-le-co\u00fbt-de-l'algorithme-en-fonction-des-dimensions-de-X-et-Y-?"]], "Q5 : Ecrire une fonction qui retourne l\u2019indice du m\u00e9decin le plus proche pour chaque rue": [[117, "Q5-:-Ecrire-une-fonction-qui-retourne-l'indice-du-m\u00e9decin-le-plus-proche-pour-chaque-rue"]], "Q6 : on cr\u00e9e une grille 10x10 pour quadriller l\u2019espace. Ecrire une fonction qui calcule les coordonn\u00e9es de la grille pour un point donn\u00e9.": [[117, "Q6-:-on-cr\u00e9e-une-grille-10x10-pour-quadriller-l'espace.-Ecrire-une-fonction-qui-calcule-les-coordonn\u00e9es-de-la-grille-pour-un-point-donn\u00e9."]], "Q7 : \u00e9crire une fonction qui cr\u00e9\u00e9 un dictionaire { case_grille : indices }.": [[117, "Q7-:-\u00e9crire-une-fonction-qui-cr\u00e9\u00e9-un-dictionaire-{-case_grille-:-indices-}."]], "Q8 : modifier la fonction pairwise_distance pour ne calculer que les distances des points dans la m\u00eame case": [[117, "Q8-:-modifier-la-fonction-pairwise_distance-pour-ne-calculer-que-les-distances-des-points-dans-la-m\u00eame-case"]], "Q9 : Mesurer le temps pour deux matrices 1000x2, 100x2 ?": [[117, "Q9-:-Mesurer-le-temps-pour-deux-matrices-1000x2,-100x2-?"]], "Q10 : le r\u00e9sultat est utilis\u00e9 pour retourner le m\u00e9decin le plus proche ? Avec la seconde fonction, o\u00f9 les r\u00e9sultats sont-ils faux et que faire pour corriger ?": [[117, "Q10-:-le-r\u00e9sultat-est-utilis\u00e9-pour-retourner-le-m\u00e9decin-le-plus-proche-?-Avec-la-seconde-fonction,-o\u00f9-les-r\u00e9sultats-sont-ils-faux-et-que-faire-pour-corriger-?"]], "1A - Enonc\u00e9 8 novembre 2023-2024": [[118, "1A---Enonc\u00e9-8-novembre-2023-2024"]], "Exercice 1 : d\u00e9codage fa\u00e7on Morse": [[118, "Exercice-1-:-d\u00e9codage-fa\u00e7on-Morse"]], "Q1 : Ecrire une fonction qui code une s\u00e9quence de lettres en une s\u00e9quence de 0 et 1.": [[118, "Q1-:-Ecrire-une-fonction-qui-code-une-s\u00e9quence-de-lettres-en-une-s\u00e9quence-de-0-et-1."]], "Q2 : On s\u2019int\u00e9resse au d\u00e9codage d\u2019un message.": [[118, "Q2-:-On-s'int\u00e9resse-au-d\u00e9codage-d'un-message."]], "Q3 : Ecrire une fonction qui re\u00e7oit une s\u00e9quence de 0 et de 1 et retourne la s\u00e9quence de lettres correspondante.": [[118, "Q3-:-Ecrire-une-fonction-qui-re\u00e7oit-une-s\u00e9quence-de-0-et-de-1-et-retourne-la-s\u00e9quence-de-lettres-correspondante."]], "Q4 : On forme une classe avec les deux fonctions pr\u00e9c\u00e9dentes. Il faut compl\u00e9ter le code suivant.": [[118, "Q4-:-On-forme-une-classe-avec-les-deux-fonctions-pr\u00e9c\u00e9dentes.-Il-faut-compl\u00e9ter-le-code-suivant."]], "Q5 : On veut r\u00e9duire la taille du message cod\u00e9.": [[118, "Q5-:-On-veut-r\u00e9duire-la-taille-du-message-cod\u00e9."]], "Q6 : Que fait la fonction suivante ?": [[118, "Q6-:-Que-fait-la-fonction-suivante-?"]], "Q7 : Dans ce langage, les lettres sont toutes \u00e9quiprobables": [[118, "Q7-:-Dans-ce-langage,-les-lettres-sont-toutes-\u00e9quiprobables"]], "Q8 : On change le Coding des lettres A et B": [[118, "Q8-:-On-change-le-Coding-des-lettres-A-et-B"]], "Q9 : Dans le cas pr\u00e9c\u00e9dent, la premi\u00e8re lettre peut \u00eatre soit B soit D.": [[118, "Q9-:-Dans-le-cas-pr\u00e9c\u00e9dent,-la-premi\u00e8re-lettre-peut-\u00eatre-soit-B-soit-D."]], "Q10 : Ecrire une m\u00e9thode\u2026": [[118, "Q10-:-Ecrire-une-m\u00e9thode..."]], "A conna\u00eetre": [[119, null]], "Programmation dynamique": [[119, null]], "Probl\u00e8me NP-complets": [[119, null]], "A parcourir": [[119, null]], "Correction": [[119, null], [123, null], [149, "Correction"]], "Numpy / Pandas": [[120, "numpy-pandas"]], "S\u00e9ances minut\u00e9es": [[121, "seances-minutees"]], "Exercices sur le langage python": [[123, "exercices-sur-le-langage-python"]], "Structure de donn\u00e9es": [[123, null]], "algorithmes tr\u00e8s simples": [[123, null]], "Profiling": [[123, null], [146, "Profiling"]], "Points particulier du langages": [[123, null]], "R\u00e9gression logistique et courbe ROC": [[124, "R\u00e9gression-logistique-et-courbe-ROC"]], "Pr\u00e9diction de la note des vins": [[125, "Pr\u00e9diction-de-la-note-des-vins"]], "Jeu de d\u00e9, rotation sur un circuit (classes)": [[126, "Jeu-de-d\u00e9,-rotation-sur-un-circuit-(classes)"]], "De": [[126, "De"]], "Permutation": [[126, "Permutation"]], "It\u00e9rateur": [[127, "It\u00e9rateur"]], "G\u00e9n\u00e9ration d\u2019un arbre al\u00e9atoire": [[127, "G\u00e9n\u00e9ration-d'un-arbre-al\u00e9atoire"]], "Profondeur maximale": [[127, "Profondeur-maximale"]], "Classe Permutation et d\u00e9composition en transitions": [[128, "Classe-Permutation-et-d\u00e9composition-en-transitions"]], "Composition": [[128, "Composition"]], "Op\u00e9rateur == et @": [[128, "Op\u00e9rateur-==-et-@"]], "D\u00e9composition": [[128, "D\u00e9composition"]], "Transposition": [[128, "Transposition"]], "Un exemple court pour d\u00e9m\u00ealer ce qui est chang\u00e9": [[128, "Un-exemple-court-pour-d\u00e9m\u00ealer-ce-qui-est-chang\u00e9"]], "Python 3.x": [[128, "Python-3.x"]], "Une classe pour repr\u00e9senter un arbre": [[129, "Une-classe-pour-repr\u00e9senter-un-arbre"]], "Premier jet": [[129, "Premier-jet"]], "Afficher l\u2019arbre": [[129, "Afficher-l'arbre"]], "Profondeur maximale : le plus grand chemin depuis la racine jusqu\u2019aux feuilles": [[129, "Profondeur-maximale-:-le-plus-grand-chemin-depuis-la-racine-jusqu'aux-feuilles"]], "Profondeur moyenne ?": [[129, "Profondeur-moyenne-?"]], "Interm\u00e8de : is ou == ?": [[129, "Interm\u00e8de-:-is-ou-==-?"]], "Classe, H\u00e9ritage, calcule d\u2019une distance": [[130, "Classe,-H\u00e9ritage,-calcule-d'une-distance"]], "Classe Product": [[130, "Classe-Product"]], "Classe utilisateur": [[130, "Classe-utilisateur"]], "Classe Base": [[130, "Classe-Base"]], "2048 et les classes": [[131, "2048-et-les-classes"]], "D\u00e9composition du probl\u00e8me": [[131, "D\u00e9composition-du-probl\u00e8me"]], "0 - Cr\u00e9ation de la matrice de jeu": [[131, "0---Cr\u00e9ation-de-la-matrice-de-jeu"]], "2 - D\u00e9termination de toutes les cases libres": [[131, "2---D\u00e9termination-de-toutes-les-cases-libres"]], "1 - Ajout d\u2019un nombre al\u00e9atoire dans {2,4} \u00e0 une position al\u00e9atoire pourvu qu\u2019elle soit libre": [[131, "1---Ajout-d'un-nombre-al\u00e9atoire-dans-{2,4}-\u00e0-une-position-al\u00e9atoire-pourvu-qu'elle-soit-libre"]], "3 - A-t-on perdu ?": [[131, "3---A-t-on-perdu-?"]], "5 - Aggr\u00e8ge les nombres dans un tableau que ce soit une ligne ou une colonne": [[131, "5---Aggr\u00e8ge-les-nombres-dans-un-tableau-que-ce-soit-une-ligne-ou-une-colonne"]], "4 - Joue un coup sachant une direction donn\u00e9e": [[131, "4---Joue-un-coup-sachant-une-direction-donn\u00e9e"]], "6 - score": [[131, "6---score"]], "7 - coup suivant": [[131, "7---coup-suivant"]], "8 - la fonction faisant tout": [[131, "8---la-fonction-faisant-tout"]], "Classe compl\u00e8te": [[131, "Classe-compl\u00e8te"]], "Un dernier graphe pour finir": [[131, "Un-dernier-graphe-pour-finir"]], "Une autre strat\u00e9gie pour illustrer l\u2019h\u00e9ritage": [[131, "Une-autre-strat\u00e9gie-pour-illustrer-l'h\u00e9ritage"]], "Un bref aper\u00e7u des classes": [[132, "Un-bref-aper\u00e7u-des-classes"]], "Une station de m\u00e9tro": [[132, "Une-station-de-m\u00e9tro"]], "Une distance": [[132, "Une-distance"]], "M\u00e9thode": [[132, "M\u00e9thode"]], "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations": [[133, "Liste,-tuple,-ensemble,-dictionnaire,-liste-cha\u00een\u00e9e,-co\u00fbt-des-op\u00e9rations"]], "Insertion avec list et deque": [[133, "Insertion-avec-list-et-deque"]], "Un \u00e9l\u00e9ment dans un ensemble": [[133, "Un-\u00e9l\u00e9ment-dans-un-ensemble"]], "Simuler une loi multinomiale": [[134, "Simuler-une-loi-multinomiale"]], "Algorithme de simulation": [[134, "Algorithme-de-simulation"]], "Une premi\u00e8re optimisation : tri des poids": [[134, "Une-premi\u00e8re-optimisation-:-tri-des-poids"]], "Optimisation bootstrap": [[134, "Optimisation-bootstrap"]], "Jeux de coloriage": [[135, "Jeux-de-coloriage"]], "Colorier un carr\u00e9 \u00e0 proportion": [[135, "Colorier-un-carr\u00e9-\u00e0-proportion"]], "Colorier en diagonale": [[135, "Colorier-en-diagonale"]], "Fonction de la surface couverte": [[135, "Fonction-de-la-surface-couverte"]], "Version math\u00e9matique": [[135, "Version-math\u00e9matique"]], "Retour au coloriage": [[135, "Retour-au-coloriage"]], "A quoi \u00e7a sert ?": [[135, "A-quoi-\u00e7a-sert-?"], [219, "a-quoi-ca-sert"]], "Jeu de d\u00e9, rotation sur un circuit": [[136, "Jeu-de-d\u00e9,-rotation-sur-un-circuit"]], "R\u00e9partition, table de hashage": [[137, "R\u00e9partition,-table-de-hashage"]], "Q1 - premi\u00e8re lettre": [[137, "Q1---premi\u00e8re-lettre"]], "Q2 - somme": [[137, "Q2---somme"]], "Q3 - pseudo g\u00e9n\u00e9rateur": [[137, "Q3---pseudo-g\u00e9n\u00e9rateur"]], "Q4 - hash": [[137, "Q4---hash"]], "Q5 - light hash": [[137, "Q5---light-hash"]], "Q6 - r\u00e9partition": [[137, "Q6---r\u00e9partition"]], "Q7 - dictionnaire": [[137, "Q7---dictionnaire"]], "Quelques \u00e9l\u00e9ments de r\u00e9ponses": [[137, "Quelques-\u00e9l\u00e9ments-de-r\u00e9ponses"]], "Premi\u00e8re lettre": [[137, "Premi\u00e8re-lettre"]], "Somme": [[137, "Somme"]], "Pseudo": [[137, "Pseudo"]], "Hash": [[137, "Hash"]], "Light hash": [[137, "Light-hash"]], "JSON - XML": [[138, "JSON---XML"]], "Q1 : \u00e9criture des donn\u00e9es au format CSV": [[138, "Q1-:-\u00e9criture-des-donn\u00e9es-au-format-CSV"], [138, "id1"]], "Q2 : \u00e9criture des donn\u00e9es au format JSON": [[138, "Q2-:-\u00e9criture-des-donn\u00e9es-au-format-JSON"], [138, "id2"]], "Q3 : relire les donn\u00e9es avec le module json": [[138, "Q3-:-relire-les-donn\u00e9es-avec-le-module-json"], [138, "id3"]], "Q4 : essayez avec les format XML (ou HTML), SQL, SAS, Excel\u2026": [[138, "Q4-:-essayez-avec-les-format-XML-(ou-HTML),-SQL,-SAS,-Excel..."], [138, "id4"]], "Q5 : donn\u00e9es non structur\u00e9es": [[138, "Q5-:-donn\u00e9es-non-structur\u00e9es"], [138, "id5"]], "Q6 : le texte, \u00e7a prend trop de place, zippons": [[138, "Q6-:-le-texte,-\u00e7a-prend-trop-de-place,-zippons"], [138, "id6"]], "Q7 : que vous inspire protobuf ?": [[138, "Q7-:-que-vous-inspire-protobuf-?"], [138, "id7"]], "Calculs de surface et autres calculs": [[139, "Calculs-de-surface-et-autres-calculs"]], "Exercice 1 : calcul de la surface d\u2019un cercle": [[139, "Exercice-1-:-calcul-de-la-surface-d'un-cercle"]], "1.1 En utilisant la constante pi": [[139, "1.1-En-utilisant-la-constante-pi"]], "1.2 Sans utiliser pi ni aucune autre fonction": [[139, "1.2-Sans-utiliser-pi-ni-aucune-autre-fonction"]], "Exercice 2 : tri al\u00e9atoire": [[139, "Exercice-2-:-tri-al\u00e9atoire"]], "Exercice 3 : petits calculs parfaits pour une machine": [[139, "Exercice-3-:-petits-calculs-parfaits-pour-une-machine"]], "1.1. calcul de la surface d\u2019un cercle avec pi": [[139, "1.1.-calcul-de-la-surface-d'un-cercle-avec-pi"]], "1.2. calcul de la surface d\u2019un cercle sans pi ou autre fonction": [[139, "1.2.-calcul-de-la-surface-d'un-cercle-sans-pi-ou-autre-fonction"]], "2. tri al\u00e9atoire": [[139, "2.-tri-al\u00e9atoire"]], "3. petits calculs parfaits pour une machine": [[139, "3.-petits-calculs-parfaits-pour-une-machine"]], "Expressions r\u00e9guli\u00e8res": [[140, "Expressions-r\u00e9guli\u00e8res"], [178, "Expressions-r\u00e9guli\u00e8res"], [218, "expressions-regulieres"], [219, "expressions-regulieres"]], "Exercice 1 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots": [[140, "Exercice-1-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots"], [140, "id1"]], "Exercice 2 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots se terminant par la lettre s": [[140, "Exercice-2-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots-se-terminant-par-la-lettre-s"], [140, "id2"]], "Exercice 3 : utiliser les expression r\u00e9guli\u00e8res pour remplacer tous les \u00ab\u00a0de\u00a0\u00bb en 2": [[140, "Exercice-3-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-remplacer-tous-les-%22de%22-en-2"], [140, "id3"]], "Exercice 4 : utiliser les expression r\u00e9guli\u00e8res pour extraire les lignes des rimes en elle ou elles ou aile ou ailes": [[140, "Exercice-4-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-les-lignes-des-rimes-en-elle-ou-elles-ou-aile-ou-ailes"], [140, "id4"]], "S\u00e9rialisation avec JSON, XML, pickle": [[141, "S\u00e9rialisation-avec-JSON,-XML,-pickle"]], "Notion de stream ou flux": [[141, "Notion-de-stream-ou-flux"]], "Q1: quelle est la fonction la plus rapide ?": [[141, "Q1:-quelle-est-la-fonction-la-plus-rapide-?"]], "Format JSON": [[141, "Format-JSON"]], "Q1. lire du json": [[141, "Q1.-lire-du-json"]], "Q2: \u00e9crire du json": [[141, "Q2:-\u00e9crire-du-json"]], "Q3: gros json": [[141, "Q3:-gros-json"]], "XML": [[141, "XML"]], "pickle": [[141, "pickle"]], "Q1: comparer le temps de s\u00e9rialisation entre pickle et json": [[141, "Q1:-comparer-le-temps-de-s\u00e9rialisation-entre-pickle-et-json"]], "Q2: comparer le temps de d\u00e9s\u00e9rialisation entre pickle et json": [[141, "Q2:-comparer-le-temps-de-d\u00e9s\u00e9rialisation-entre-pickle-et-json"]], "Peut-on tout s\u00e9rialiser ?": [[141, "Peut-on-tout-s\u00e9rialiser-?"]], "Histogramme et dictionnaire": [[142, "Histogramme-et-dictionnaire"]], "Heap": [[143, "Heap"]], "Transformer en tas": [[143, "Transformer-en-tas"]], "Dessiner un tas": [[143, "Dessiner-un-tas"]], "Premi\u00e8re version": [[143, "Premi\u00e8re-version"]], "M\u00eame chose avec les indices au lieu des valeurs": [[143, "M\u00eame-chose-avec-les-indices-au-lieu-des-valeurs"]], "Co\u00fbt de l\u2019algorithme": [[143, "Co\u00fbt-de-l'algorithme"]], "Version simplifi\u00e9e": [[143, "Version-simplifi\u00e9e"]], "Pivot de gauss avec numpy": [[144, "Pivot-de-gauss-avec-numpy"]], "Numpy 1": [[144, "Numpy-1"]], "Numpy 2": [[144, "Numpy-2"]], "Vitesse": [[144, "Vitesse"]], "Profiling la fonction Gini": [[145, "Profiling-la-fonction-Gini"]], "Exercice 1 : profiler le code pr\u00e9c\u00e9dent": [[145, "Exercice-1-:-profiler-le-code-pr\u00e9c\u00e9dent"], [145, "id1"]], "Exercice 2 : changer la fonction _gini_final si possible en plus rapide": [[145, "Exercice-2-:-changer-la-fonction-_gini_final-si-possible-en-plus-rapide"], [145, "id2"]], "Exercice 3 : vous am\u00e9liorez la fonction _gini_final, profilez pour savoir de combien ?": [[145, "Exercice-3-:-vous-am\u00e9liorez-la-fonction-_gini_final,-profilez-pour-savoir-de-combien-?"], [145, "id3"]], "Exercice 4 : utiliser d\u2019autres modules de profiling": [[145, "Exercice-4-:-utiliser-d'autres-modules-de-profiling"], [145, "id4"]], "Exercice 5 : la fonction _gini_cumsum contient deux boucles. Quelle est la plus rapide ?": [[145, "Exercice-5-:-la-fonction-_gini_cumsum-contient-deux-boucles.-Quelle-est-la-plus-rapide-?"], [145, "id5"]], "Profiling, application \u00e0 la convolution": [[146, "Profiling,-application-\u00e0-la-convolution"]], "Impl\u00e9mentation na\u00efve": [[146, "Impl\u00e9mentation-na\u00efve"]], "Q1: comparer les temps d\u2019ex\u00e9cution": [[146, "Q1:-comparer-les-temps-d'ex\u00e9cution"]], "Q2: comparer avec une seconde impl\u00e9mentation": [[146, "Q2:-comparer-avec-une-seconde-impl\u00e9mentation"]], "im2col": [[146, "im2col"]], "Q3: comparer \u00e0 nouveau les temps d\u2019\u00e9xecution": [[146, "Q3:-comparer-\u00e0-nouveau-les-temps-d'\u00e9xecution"]], "Q4: que peut-on en d\u00e9duire ?": [[146, "Q4:-que-peut-on-en-d\u00e9duire-?"]], "Profilage : \u00e9v\u00e9nements ou \u00e9chantillonnage": [[146, "Profilage-:-\u00e9v\u00e9nements-ou-\u00e9chantillonnage"]], "Une derni\u00e8re impl\u00e9mentation": [[146, "Une-derni\u00e8re-impl\u00e9mentation"]], "Q5: Que pouvez-vous dire de cette derni\u00e8re impl\u00e9mentation ?": [[146, "Q5:-Que-pouvez-vous-dire-de-cette-derni\u00e8re-impl\u00e9mentation-?"]], "Exemple de profiling": [[147, "Exemple-de-profiling"]], "Bizarrerie": [[147, "Bizarrerie"]], "Profiler": [[147, "Profiler"]], "Recherche dichotomique": [[148, "Recherche-dichotomique"], [186, "Recherche-dichotomique"]], "Version it\u00e9rative": [[148, "Version-it\u00e9rative"]], "Version r\u00e9cursive": [[148, "Version-r\u00e9cursive"]], "Version r\u00e9cursive 2": [[148, "Version-r\u00e9cursive-2"]], "Web-Scraping - pokemon": [[149, "Web-Scraping---pokemon"]], "Fonction pour obtenir les caract\u00e9ristiques de pokemons": [[149, "Fonction-pour-obtenir-les-caract\u00e9ristiques-de-pokemons"]], "les images de pokemon": [[149, "les-images-de-pokemon"]], "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre": [[150, "D'une-structure-de-donn\u00e9es-\u00e0-l'autre"]], "histogramme et dictionnaire": [[150, "histogramme-et-dictionnaire"]], "liste \u00e0 dictionnaire": [[150, "liste-\u00e0-dictionnaire"]], "dictionnaire \u00e0 liste": [[150, "dictionnaire-\u00e0-liste"]], "dictionnaire et deux listes": [[150, "dictionnaire-et-deux-listes"]], "deux listes et dictionnaires": [[150, "deux-listes-et-dictionnaires"]], "zip reverse": [[150, "zip-reverse"]], "matrices et dictionnaires": [[150, "matrices-et-dictionnaires"]], "liste de listes et dictionnaires": [[150, "liste-de-listes-et-dictionnaires"]], "dictionnaires et liste de listes": [[150, "dictionnaires-et-liste-de-listes"]], "matrice sparse": [[150, "matrice-sparse"]], "matrices et tableaux": [[150, "matrices-et-tableaux"]], "2 dimensions logiques, 1 dimension en m\u00e9moire": [[150, "2-dimensions-logiques,-1-dimension-en-m\u00e9moire"]], "du tableau \u00e0 la liste de listes": [[150, "du-tableau-\u00e0-la-liste-de-listes"]], "Calculer un chi 2 sur un tableau de contingence": [[151, "Calculer-un-chi-2-sur-un-tableau-de-contingence"]], "formule": [[151, "formule"]], "tableau au hasard": [[151, "tableau-au-hasard"]], "calcul avec scipy": [[151, "calcul-avec-scipy"]], "calcul avec numpy": [[151, "calcul-avec-numpy"]], "Tests unitaires": [[152, "Tests-unitaires"]], "Un petit jeu": [[152, "Un-petit-jeu"]], "Une autre \u00e9criture": [[152, "Une-autre-\u00e9criture"]], "Des obstacles\u2026": [[152, "Des-obstacles..."]], "Ajouter d\u2019autres tests unitaires pour cette seconde version": [[152, "Ajouter-d'autres-tests-unitaires-pour-cette-seconde-version"]], "Changer la taille de l\u2019\u00e9chiquier": [[152, "Changer-la-taille-de-l'\u00e9chiquier"]], "Tester une exception": [[152, "Tester-une-exception"]], "Tri plus rapide que pr\u00e9vu": [[153, "Tri-plus-rapide-que-pr\u00e9vu"]], "trier un plus petit ensemble": [[153, "trier-un-plus-petit-ensemble"]], "\u00e9volution en fonction de n": [[153, "\u00e9volution-en-fonction-de-n"]], "D\u00e9corr\u00e9lation de variables al\u00e9atoires": [[154, "D\u00e9corr\u00e9lation-de-variables-al\u00e9atoires"]], "Cr\u00e9ation d\u2019un jeu de donn\u00e9es": [[154, "Cr\u00e9ation-d'un-jeu-de-donn\u00e9es"], [155, "Cr\u00e9ation-d'un-jeu-de-donn\u00e9es"]], "Corr\u00e9lation de matrices": [[154, "Corr\u00e9lation-de-matrices"], [155, "Corr\u00e9lation-de-matrices"]], "Un peu de math\u00e9matiques": [[154, "Un-peu-de-math\u00e9matiques"]], "Calcul de la racine carr\u00e9e": [[154, "Calcul-de-la-racine-carr\u00e9e"], [155, "Calcul-de-la-racine-carr\u00e9e"]], "D\u00e9corr\u00e9lation": [[154, "D\u00e9corr\u00e9lation"], [155, "D\u00e9corr\u00e9lation"]], "Simulation de variables corr\u00e9l\u00e9es": [[154, "Simulation-de-variables-corr\u00e9l\u00e9es"], [155, "Simulation-de-variables-corr\u00e9l\u00e9es"]], "Q11": [[154, "Q11"], [155, "Q11"]], "Q12": [[154, "Q12"], [155, "Q12"]], "Q13": [[154, "Q13"], [155, "Q13"]], "D\u00e9corr\u00e9lation de variables al\u00e9atoires - correction": [[155, "D\u00e9corr\u00e9lation-de-variables-al\u00e9atoires---correction"]], "Cryptage homomorphic de Craig Gentry": [[156, "Cryptage-homomorphic-de-Craig-Gentry"]], "D\u00e9finition du cryptage": [[156, "D\u00e9finition-du-cryptage"], [157, "D\u00e9finition-du-cryptage"]], "Exercice 1 : impl\u00e9menter le cryptage": [[156, "Exercice-1-:-impl\u00e9menter-le-cryptage"], [157, "Exercice-1-:-impl\u00e9menter-le-cryptage"]], "Exercice 2 : v\u00e9rifier que le cryptage est stable par addition et multiplication": [[156, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"], [157, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"]], "Exercice 3 : impl\u00e9mententer l\u2019addition enti\u00e8re": [[156, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"], [157, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"]], "Exercice 4 : impl\u00e9menter la multiplication enti\u00e8re": [[156, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"], [157, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"]], "Cryptage homomorphic de Craig Gentry - correction": [[157, "Cryptage-homomorphic-de-Craig-Gentry---correction"]], "Spectral Clustering": [[158, "Spectral-Clustering"]], "Un graphe": [[158, "Un-graphe"], [159, "Un-graphe"]], "Partie 1 : clustering en pratique": [[158, "Partie-1-:-clustering-en-pratique"], [159, "Partie-1-:-clustering-en-pratique"]], "Partie 2 : interm\u00e8de th\u00e9orique": [[158, "Partie-2-:-interm\u00e8de-th\u00e9orique"]], "Partie 3 : un peu plus loin": [[158, "Partie-3-:-un-peu-plus-loin"], [159, "Partie-3-:-un-peu-plus-loin"]], "Spectral Clustering - correction": [[159, "Spectral-Clustering---correction"]], "Plus proches voisins en grande dimension": [[160, "Plus-proches-voisins-en-grande-dimension"]], "Q1 : k-nn : mesurer la performance": [[160, "Q1-:-k-nn-:-mesurer-la-performance"], [161, "Q1-:-k-nn-:-mesurer-la-performance"]], "Q2 : k-nn avec sparse features": [[160, "Q2-:-k-nn-avec-sparse-features"], [161, "Q2-:-k-nn-avec-sparse-features"]], "Q3 : Imaginez une fa\u00e7on d\u2019aller plus vite ?": [[160, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"], [161, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"]], "Plus proches voisins en grande dimension - correction": [[161, "Plus-proches-voisins-en-grande-dimension---correction"]], "dimension": [[161, "dimension"]], "observations": [[161, "observations"]], "Programmation dynamique et plus court chemin": [[162, "Programmation-dynamique-et-plus-court-chemin"]], "Algorithme du plus court chemin": [[162, "Algorithme-du-plus-court-chemin"]], "La r\u00e9partition des skis": [[162, "La-r\u00e9partition-des-skis"]], "Exercice facultatif": [[162, "Exercice-facultatif"], [163, "Exercice-facultatif"]], "Exercice 5": [[162, "Exercice-5"], [163, "Exercice-5"], [186, "Exercice-5"]], "Exercice 6": [[162, "Exercice-6"], [163, "Exercice-6"], [186, "Exercice-6"]], "Exercice 7": [[162, "Exercice-7"], [163, "Exercice-7"], [186, "Exercice-7"], [187, "Exercice-7"]], "Exercice 8": [[162, "Exercice-8"], [163, "Exercice-8"]], "Prolongements : degr\u00e9 de s\u00e9paration sur Facebook": [[162, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"], [163, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"]], "Programmation dynamique et plus court chemin (correction)": [[163, "Programmation-dynamique-et-plus-court-chemin-(correction)"]], "Puzzles algorithmiques (1)": [[164, "Puzzles-algorithmiques-(1)"]], "Produits scalaires": [[164, "Produits-scalaires"], [165, "Produits-scalaires"]], "Solution moins na\u00efve": [[164, "Solution-moins-na\u00efve"]], "Probl\u00e8me de recouvrement": [[164, "Probl\u00e8me-de-recouvrement"], [165, "Probl\u00e8me-de-recouvrement"]], "Soudoyer les prisonniers": [[164, "Soudoyer-les-prisonniers"], [165, "Soudoyer-les-prisonniers"]], "D\u00e9coupage intelligent d\u2019une base de donn\u00e9es": [[164, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"], [165, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"]], "Puzzles algorithmes (1) - correction": [[165, "Puzzles-algorithmes-(1)---correction"]], "Premi\u00e8re solution": [[165, "Premi\u00e8re-solution"]], "Seconde solution": [[165, "Seconde-solution"]], "Approche par programmation dynamique": [[165, "Approche-par-programmation-dynamique"]], "Puzzles algorithmiques (2)": [[166, "Puzzles-algorithmiques-(2)"]], "Exercice 1 : nombres premiers": [[166, "Exercice-1-:-nombres-premiers"], [167, "Exercice-1-:-nombres-premiers"]], "Exercice 2 : watersheds": [[166, "Exercice-2-:-watersheds"], [167, "Exercice-2-:-watersheds"]], "Exercice 3 : s\u00e9paration des bagarreurs": [[166, "Exercice-3-:-s\u00e9paration-des-bagarreurs"], [167, "Exercice-3-:-s\u00e9paration-des-bagarreurs"]], "Exercice 4 : formation de bin\u00f4mes": [[166, "Exercice-4-:-formation-de-bin\u00f4mes"], [167, "Exercice-4-:-formation-de-bin\u00f4mes"]], "Puzzles algorithmes (2) - correction": [[167, "Puzzles-algorithmes-(2)---correction"]], "Seconde id\u00e9e : les trouver tous ?": [[167, "Seconde-id\u00e9e-:-les-trouver-tous-?"]], "solution": [[167, "solution"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique": [[168, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique"]], "Apart\u00e9 sur les classes": [[168, "Apart\u00e9-sur-les-classes"]], "Classes, attributs, op\u00e9rateurs": [[168, "Classes,-attributs,-op\u00e9rateurs"]], "Exercice 1 : carr\u00e9 magique": [[168, "Exercice-1-:-carr\u00e9-magique"], [169, "Exercice-1-:-carr\u00e9-magique"]], "M\u00e9thodes": [[168, "M\u00e9thodes"], [196, "methodes"], [208, "methodes"]], "Exercice 2 : \u00e0 faire \u00e0 trois, carr\u00e9 magique (suite)": [[168, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"], [169, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"]], "Exercice 3 : trouver tous les carr\u00e9s magiques": [[168, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"], [169, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"]], "Exercice 4 : faire plus rapide": [[168, "Exercice-4-:-faire-plus-rapide"], [169, "Exercice-4-:-faire-plus-rapide"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)": [[169, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique-(correction)"]], "Programme complet": [[169, "Programme-complet"]], "Classes, h\u00e9ritage": [[170, "Classes,-h\u00e9ritage"]], "Qu\u2019est-ce que l\u2019h\u00e9ritage ?": [[170, "Qu'est-ce-que-l'h\u00e9ritage-?"]], "Exercice 1 : pi\u00e8ce normale": [[170, "Exercice-1-:-pi\u00e8ce-normale"], [171, "Exercice-1-:-pi\u00e8ce-normale"]], "Exercice 2 : pi\u00e8ce truqu\u00e9e": [[170, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"], [171, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"]], "Utiliser des m\u00e9thodes de la classe m\u00e8re": [[170, "Utiliser-des-m\u00e9thodes-de-la-classe-m\u00e8re"]], "Exercice 3 : Pi\u00e8ce mixte": [[170, "Exercice-3-:-Pi\u00e8ce-mixte"], [171, "Exercice-3-:-Pi\u00e8ce-mixte"]], "Autre construction avec des fonctions": [[170, "Autre-construction-avec-des-fonctions"]], "Exercice 4 : pi\u00e8ce mixte avec des fonctions": [[170, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"], [171, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"]], "Classes, h\u00e9ritage (correction)": [[171, "Classes,-h\u00e9ritage-(correction)"]], "Dictionnaires, fonctions, code de Vigen\u00e8re": [[172, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re"]], "Fonctions dans le d\u00e9tail": [[172, "Fonctions-dans-le-d\u00e9tail"]], "Variable locale": [[172, "Variable-locale"]], "Mot-cl\u00e9 return": [[172, "Mot-cl\u00e9-return"]], "Fonction r\u00e9cursive": [[172, "Fonction-r\u00e9cursive"], [210, "fonction-recursive"]], "Dictionnaires": [[172, "Dictionnaires"]], "cl\u00e9 - valeur": [[172, "cl\u00e9---valeur"]], "notions de co\u00fbt": [[172, "notions-de-co\u00fbt"]], "ordonner les \u00e9l\u00e9ments d\u2019un dictionnaire": [[172, "ordonner-les-\u00e9l\u00e9ments-d'un-dictionnaire"]], "Exercice 2 : recherche dans une liste": [[172, "Exercice-2-:-recherche-dans-une-liste"]], "Exercice 3 : utilisation d\u2019un dictionnaire": [[172, "Exercice-3-:-utilisation-d'un-dictionnaire"], [173, "Exercice-3-:-utilisation-d'un-dictionnaire"]], "Exercice 4 : crypter de d\u00e9crypter selon Vigen\u00e8re": [[172, "Exercice-4-:-crypter-de-d\u00e9crypter-selon-Vigen\u00e8re"]], "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)": [[173, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re-(correction)"]], "Exercice 4 : crypter et d\u00e9crypter selon Vigen\u00e8re": [[173, "Exercice-4-:-crypter-et-d\u00e9crypter-selon-Vigen\u00e8re"]], "Int\u00e9grale et la m\u00e9thode des rectangles": [[174, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles"]], "Calcul de l\u2019int\u00e9grale": [[174, "Calcul-de-l'int\u00e9grale"], [175, "Calcul-de-l'int\u00e9grale"]], "Calcul de pr\u00e9cision": [[174, "Calcul-de-pr\u00e9cision"], [175, "Calcul-de-pr\u00e9cision"]], "Calcul plus rapide": [[174, "Calcul-plus-rapide"], [175, "Calcul-plus-rapide"]], "Int\u00e9grale et la m\u00e9thode des rectangles - correction": [[175, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles---correction"]], "La fonction r\u00e9calcitrante": [[175, "La-fonction-r\u00e9calcitrante"]], "Calcul de Monte Carlo": [[175, "Calcul-de-Monte-Carlo"]], "Quand s\u2019arr\u00eater ?": [[175, "Quand-s'arr\u00eater-?"]], "2048 - strat\u00e9gie gagnante": [[176, "2048---strat\u00e9gie-gagnante"]], "Exercice 1 : impl\u00e9menter les r\u00e8gles du jeu": [[176, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"], [177, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"]], "Exercice 2 : impl\u00e9menter une strat\u00e9gie": [[176, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"], [177, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"]], "2048 - strat\u00e9gie gagnante - correction": [[177, "2048---strat\u00e9gie-gagnante---correction"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res": [[178, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res"]], "Ecriture": [[178, "Ecriture"], [212, "ecriture"]], "Lecture": [[178, "Lecture"], [212, "lecture"]], "with": [[178, "with"]], "\u00e0 quoi \u00e7a sert ?": [[178, "\u00e0-quoi-\u00e7a-sert-?"]], "Exercice 1 : Excel \\rightarrow Python \\rightarrow Excel": [[178, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"], [179, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"]], "Autres formats de fichiers": [[178, "Autres-formats-de-fichiers"]], "Exercice 2 : trouver un module (1)": [[178, "Exercice-2-:-trouver-un-module-(1)"]], "Exercice 3 : trouver un module (2)": [[178, "Exercice-3-:-trouver-un-module-(2)"], [179, "Exercice-3-:-trouver-un-module-(2)"]], "Module qu\u2019on cr\u00e9e soi-m\u00eame": [[178, "Module-qu'on-cr\u00e9e-soi-m\u00eame"]], "Exercice 4 : son propre module": [[178, "Exercice-4-:-son-propre-module"], [179, "Exercice-4-:-son-propre-module"]], "Exercice 5 : chercher un motif dans un texte": [[178, "Exercice-5-:-chercher-un-motif-dans-un-texte"], [179, "Exercice-5-:-chercher-un-motif-dans-un-texte"]], "Exercice 6 : chercher un autre motif dans un texte": [[178, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"], [179, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"]], "Exercice 7 : recherche les urls dans une page wikip\u00e9dia": [[178, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"], [179, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"]], "Exercice 8 : construire un texte \u00e0 motif": [[178, "Exercice-8-:-construire-un-texte-\u00e0-motif"], [179, "Exercice-8-:-construire-un-texte-\u00e0-motif"]], "Petites subtilit\u00e9s avec les expressions r\u00e9guli\u00e8res en Python": [[178, "Petites-subtilit\u00e9s-avec-les-expressions-r\u00e9guli\u00e8res-en-Python"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)": [[179, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res-(correction)"]], "Premiers pas en Python": [[180, "Premiers-pas-en-Python"]], "Partie 1": [[180, "Partie-1"]], "Partie 2": [[180, "Partie-2"], [181, "Partie-2"]], "Partie 3": [[180, "Partie-3"], [181, "Partie-3"]], "Premiers pas en Python (correction)": [[181, "Premiers-pas-en-Python-(correction)"]], "Tracer une pyramide bigarr\u00e9e": [[182, "Tracer-une-pyramide-bigarr\u00e9e"]], "Probl\u00e8me": [[182, "Probl\u00e8me"], [183, "Probl\u00e8me"]], "Id\u00e9e de la solution": [[182, "Id\u00e9e-de-la-solution"], [183, "Id\u00e9e-de-la-solution"]], "Tracer une pyramide bigarr\u00e9e - correction": [[183, "Tracer-une-pyramide-bigarr\u00e9e---correction"]], "Les coordonn\u00e9es": [[183, "Les-coordonn\u00e9es"]], "La couleur": [[183, "La-couleur"]], "Deviner la langue d\u2019un texte": [[184, "Deviner-la-langue-d'un-texte"]], "Q1 : lire un fichier": [[184, "Q1-:-lire-un-fichier"], [185, "Q1-:-lire-un-fichier"]], "Q2 : histogramme": [[184, "Q2-:-histogramme"], [185, "Q2-:-histogramme"]], "Q3 : normalisation": [[184, "Q3-:-normalisation"], [185, "Q3-:-normalisation"]], "Q4 : calcul": [[184, "Q4-:-calcul"], [185, "Q4-:-calcul"]], "Q5 : score": [[184, "Q5-:-score"], [185, "Q5-:-score"]], "Deviner la langue d\u2019un texte (correction)": [[185, "Deviner-la-langue-d'un-texte-(correction)"]], "Arbre et Trie": [[186, "Arbre-et-Trie"]], "Construction d\u2019une liste al\u00e9atoire": [[186, "Construction-d'une-liste-al\u00e9atoire"]], "Trie": [[186, "Trie"]], "Recherche dans un trie": [[186, "Recherche-dans-un-trie"]], "Arbre et Trie (correction)": [[187, "Arbre-et-Trie-(correction)"]], "Exercice 3 : recherche dichotomique": [[187, "Exercice-3-:-recherche-dichotomique"]], "Exercice 5 : trie": [[187, "Exercice-5-:-trie"]], "Exercice 6 : recherche dans un trie": [[187, "Exercice-6-:-recherche-dans-un-trie"]], "Plus en d\u00e9tails": [[187, "Plus-en-d\u00e9tails"]], "Questions": [[187, "Questions"], [198, "questions"]], "Variables, boucles, tests": [[188, "Variables,-boucles,-tests"]], "Partie 1 : variables, int, float, str, list": [[188, "Partie-1-:-variables,-int,-float,-str,-list"]], "Partie 2 : Tests": [[188, "Partie-2-:-Tests"]], "Partie 3 : boucles": [[188, "Partie-3-:-boucles"]], "Partie 4 : les listes compactes, les ensembles": [[188, "Partie-4-:-les-listes-compactes,-les-ensembles"]], "Partie 5 : recherche non dichotomique (exercice)": [[188, "Partie-5-:-recherche-non-dichotomique-(exercice)"], [189, "Partie-5-:-recherche-non-dichotomique-(exercice)"]], "Partie 6 : Recherche dichotomique": [[188, "Partie-6-:-Recherche-dichotomique"]], "Partie 7 : pour aller plus loin": [[188, "Partie-7-:-pour-aller-plus-loin"]], "Variables, boucles, tests (correction)": [[189, "Variables,-boucles,-tests-(correction)"]], "Partie 3 : boucles (exercice)": [[189, "Partie-3-:-boucles-(exercice)"]], "Partie 6 : recherche dichotomique (exercice)": [[189, "Partie-6-:-recherche-dichotomique-(exercice)"]], "Partie 7 : pour aller plus loin (exercice)": [[189, "Partie-7-:-pour-aller-plus-loin-(exercice)"]], "Optimiser la note moyenne": [[190, "Optimiser-la-note-moyenne"]], "La classe Bereme": [[190, "La-classe-Bereme"]], "La classe Eleve": [[190, "La-classe-Eleve"]], "Une classe": [[190, "Une-classe"]], "Une bar\u00e8me optimis\u00e9": [[190, "Une-bar\u00e8me-optimis\u00e9"]], "Une erreur": [[190, "Une-erreur"]], "D\u00e9monstration": [[190, "D\u00e9monstration"]], "Distance d\u2019\u00e9dition (4 octobre)": [[191, "Distance-d'\u00e9dition-(4-octobre)"]], "distance avec des mots de m\u00eame longueur": [[191, "distance-avec-des-mots-de-m\u00eame-longueur"]], "Distance avec des mots presque de m\u00eame longueur": [[191, "Distance-avec-des-mots-presque-de-m\u00eame-longueur"]], "Cas g\u00e9n\u00e9rique": [[191, "Cas-g\u00e9n\u00e9rique"]], "Co\u00fbt algorithmique": [[191, "Co\u00fbt-algorithmique"]], "Distance de Levenshtein": [[191, "Distance-de-Levenshtein"]], "Avec alignement": [[191, "Avec-alignement"]], "Un co\u00fbt diff\u00e9rent pour les accents": [[191, "Un-co\u00fbt-diff\u00e9rent-pour-les-accents"]], "Pivot de Gauss": [[193, "Pivot-de-Gauss"]], "Recherche de pr\u00e9fixes": [[194, "Recherche-de-pr\u00e9fixes"]], "Notebooks \u00e9crits durant les s\u00e9ances": [[195, "notebooks-ecrits-durant-les-seances"]], "Pr\u00e9sentation des classes : m\u00e9thodes et attributs": [[196, "presentation-des-classes-methodes-et-attributs"]], "D\u00e9finition, d\u00e9claration": [[196, "definition-declaration"]], "Attributs": [[196, "attributs"]], "Constructeur": [[196, "constructeur"]], "Apport du langage python": [[196, "apport-du-langage-python"]], "Liste des attributs": [[196, "liste-des-attributs"]], "Attributs implicites": [[196, "attributs-implicites"]], "Commentaires, aide": [[196, "commentaires-aide"]], "Classe incluse": [[196, "classe-incluse"]], "It\u00e9rateurs": [[196, "iterateurs"], [210, "iterateurs"]], "M\u00e9thodes, attributs statiques et ajout de m\u00e9thodes": [[196, "methodes-attributs-statiques-et-ajout-de-methodes"]], "M\u00e9thode statique": [[196, "methode-statique"]], "Attributs statiques": [[196, "attributs-statiques"]], "Ajout de m\u00e9thodes": [[196, "ajout-de-methodes"]], "Propri\u00e9t\u00e9s": [[196, "proprietes"]], "Copie d\u2019instance de classe simple": [[196, "copie-d-instance-de-classe-simple"]], "Copie d\u2019instance de classes incluant d\u2019autres classes": [[196, "copie-d-instance-de-classes-incluant-d-autres-classes"]], "Listes et dictionnaires": [[196, "listes-et-dictionnaires"]], "copy et deepcopy": [[196, "copy-et-deepcopy"]], "Attributs fig\u00e9s": [[196, "attributs-figes"]], "Exemple autour de pi\u00e8ces de monnaie": [[196, "exemple-autour-de-pieces-de-monnaie"]], "Sens de l\u2019h\u00e9ritage (2)": [[196, "sens-de-l-heritage-2"]], "H\u00e9ritage multiple": [[196, "heritage-multiple"]], "Fonctions issubclass et isinstance": [[196, "fonctions-issubclass-et-isinstance"]], "Compilation de classes": [[196, "compilation-de-classes"]], "Surcharge d\u2019op\u00e9rateur sur des types": [[196, "surcharge-d-operateur-sur-des-types"]], "Sens de l\u2019h\u00e9ritage (1)": [[196, "sens-de-l-heritage-1"]], "Deux lign\u00e9es d\u2019h\u00e9ritages": [[196, "deux-lignees-d-heritages"]], "C\u2019est oblig\u00e9 d\u2019utiliser les classes ?": [[198, "c-est-oblige-d-utiliser-les-classes"]], "Principe des exceptions": [[199, "principe-des-exceptions"]], "Attraper toutes les erreurs": [[199, "attraper-toutes-les-erreurs"]], "Obtenir le type d\u2019erreur, attraper un type d\u2019exception": [[199, "obtenir-le-type-d-erreur-attraper-un-type-d-exception"]], "Lancer une exception": [[199, "lancer-une-exception"]], "H\u00e9ritage et exception": [[199, "heritage-et-exception"]], "Instructions try, except imbriqu\u00e9es": [[199, "instructions-try-except-imbriquees"]], "D\u00e9finir ses propres exceptions": [[199, "definir-ses-propres-exceptions"]], "D\u00e9river une classe d\u2019exception": [[199, "deriver-une-classe-d-exception"]], "Personnalisation d\u2019une classe d\u2019exception": [[199, "personnalisation-d-une-classe-d-exception"]], "Exemples d\u2019utilisation des exceptions": [[199, "exemples-d-utilisation-des-exceptions"]], "Les it\u00e9rateurs": [[199, "les-iterateurs"]], "Exception ou valeur aberrante": [[199, "exception-ou-valeur-aberrante"]], "Le pi\u00e8ge des exceptions": [[199, "le-piege-des-exceptions"]], "Usage": [[200, "usage"]], "Pile d\u2019appel ou call stack": [[200, "pile-d-appel-ou-call-stack"]], "R\u00e9cup\u00e9ration de la pile d\u2019appel": [[200, "recuperation-de-la-pile-d-appel"]], "Message d\u2019erreur plus explicite": [[200, "message-d-erreur-plus-explicite"]], "Type d\u2019exception": [[200, "type-d-exception"]], "Conventions": [[200, "conventions"]], "Warning et logging": [[202, "warning-et-logging"]], "Warnings": [[202, "warnings"]], "G\u00e9n\u00e9rer un warning": [[202, "generer-un-warning"]], "Intercepter un warning": [[202, "intercepter-un-warning"]], "Warning personnalis\u00e9": [[202, "warning-personnalise"]], "Logging": [[202, "logging"]], "Interfaces graphiques": [[203, "interfaces-graphiques"]], "tkinter": [[204, "tkinter"]], "Les objets": [[204, "les-objets"]], "Zone de texte": [[204, "zone-de-texte"]], "Bouton": [[204, "bouton"]], "Zone de saisie": [[204, "zone-de-saisie"]], "Zone de saisie \u00e0 plusieurs lignes": [[204, "zone-de-saisie-a-plusieurs-lignes"]], "Case \u00e0 cocher": [[204, "case-a-cocher"]], "Case ronde ou bouton radio": [[204, "case-ronde-ou-bouton-radio"]], "Liste avec barre de d\u00e9filement, Combobox": [[204, "liste-avec-barre-de-defilement-combobox"]], "Canevas": [[204, "canevas"]], "Menus": [[204, "menus"]], "M\u00e9thodes communes": [[204, "methodes-communes"]], "Disposition des objets dans une fen\u00eatre": [[204, "disposition-des-objets-dans-une-fenetre"]], "Emplacements": [[204, "emplacements"]], "M\u00e9thode pack": [[204, "methode-pack"]], "M\u00e9thode grid": [[204, "methode-grid"]], "M\u00e9thode place": [[204, "methode-place"]], "Sous-fen\u00eatre": [[204, "sous-fenetre"]], "Ev\u00e9nements": [[204, "evenements"]], "Fen\u00eatre principale": [[204, "fenetre-principale"]], "Focus": [[204, "focus"]], "Lancer une fonction lorsqu\u2019un bouton est press\u00e9": [[204, "lancer-une-fonction-lorsqu-un-bouton-est-presse"]], "Associer n\u2019importe quel \u00e9v\u00e9nement \u00e0 un objet": [[204, "associer-n-importe-quel-evenement-a-un-objet"]], "Menu": [[204, "menu"]], "Fonctions pr\u00e9d\u00e9finies": [[204, "fonctions-predefinies"]], "D\u2019autres fen\u00eatres et contr\u00f4les": [[204, "d-autres-fenetres-et-controles"]], "Cr\u00e9er une seconde bo\u00eete de dialogues": [[204, "creer-une-seconde-boite-de-dialogues"]], "Fen\u00eatres standard": [[204, "fenetres-standard"]], "Compte \u00e0 rebours": [[204, "compte-a-rebours"]], "Contr\u00f4les personnalis\u00e9s : utilisation des classes": [[204, "controles-personnalises-utilisation-des-classes"]], "Fen\u00eatres personnalis\u00e9es : utilisation des classes": [[204, "fenetres-personnalisees-utilisation-des-classes"]], "S\u00e9quence d\u2019\u00e9v\u00e9nements": [[204, "sequence-d-evenements"]], "Communiquer un r\u00e9sultat par message": [[204, "communiquer-un-resultat-par-message"]], "OrderedDict": [[205, "ordereddict"]], "namedtuple": [[205, "namedtuple"]], "Counter": [[205, "counter"]], "deque": [[205, "deque"]], "Constructions fr\u00e9quentes": [[206, "constructions-frequentes"]], "Constructions n\u00e9gatives": [[206, "constructions-negatives"]], "datetime": [[207, "datetime"]], "Autres formats de date": [[207, "autres-formats-de-date"]], "Encoding et jeux de caract\u00e8res": [[208, "encoding-et-jeux-de-caracteres"]], "Jeux de caract\u00e8res": [[208, "jeux-de-caracteres"]], "Encodings par d\u00e9faut": [[208, "encodings-par-defaut"]], "Variables et fonctions": [[209, "variables-et-fonctions"]], "Syntaxe du langage Python (boucles, tests, fonctions)": [[210, "syntaxe-du-langage-python-boucles-tests-fonctions"]], "Les trois concepts des algorithmes": [[210, "les-trois-concepts-des-algorithmes"]], "D\u00e9finition et syntaxe": [[210, "definition-et-syntaxe"]], "Comparaisons possibles": [[210, "comparaisons-possibles"]], "Op\u00e9rateurs logiques": [[210, "operateurs-logiques"]], "Ecriture condens\u00e9e (test)": [[210, "ecriture-condensee-test"]], "Exemple (test)": [[210, "exemple-test"]], "None, True et 1": [[210, "none-true-et-1"]], "Passer, instruction pass": [[210, "passer-instruction-pass"]], "Boucle B1 : test": [[210, "indexmathe-Boucle0"]], "Boucle while": [[210, "boucle-while"]], "Boucle for": [[210, "boucle-for"]], "Listes, boucle for, liste en extension": [[210, "listes-boucle-for-liste-en-extension"]], "Plusieurs variables de boucles": [[210, "plusieurs-variables-de-boucles"]], "Ecriture condens\u00e9e (for)": [[210, "ecriture-condensee-for"]], "Pilotage d\u2019une boucle : continue": [[210, "pilotage-d-une-boucle-continue"]], "Pilotage d\u2019une boucle : break": [[210, "pilotage-d-une-boucle-break"]], "Fin normale d\u2019une boucle : else": [[210, "fin-normale-d-une-boucle-else"]], "Suppression ou ajout d\u2019\u00e9l\u00e9ments lors d\u2019une boucle": [[210, "suppression-ou-ajout-d-elements-lors-d-une-boucle"]], "D\u00e9finition, syntaxe": [[210, "definition-syntaxe"]], "Exemple (for)": [[210, "exemple-for"]], "Param\u00e8tres avec des valeurs par d\u00e9faut": [[210, "parametres-avec-des-valeurs-par-defaut"]], "Ordre des param\u00e8tres": [[210, "ordre-des-parametres"]], "Surcharge de fonction": [[210, "surcharge-de-fonction"]], "Commentaires": [[210, "commentaires"]], "Param\u00e8tres modifiables": [[210, "parametres-modifiables"]], "Port\u00e9e des variables, des param\u00e8tres": [[210, "portee-des-variables-des-parametres"]], "Port\u00e9e des fonctions": [[210, "portee-des-fonctions"]], "Nombre de param\u00e8tres variable": [[210, "nombre-de-parametres-variable"]], "Ecriture simplifi\u00e9e pour des fonctions simples : lambda": [[210, "ecriture-simplifiee-pour-des-fonctions-simples-lambda"]], "Fonctions g\u00e9n\u00e9rateur": [[210, "fonctions-generateur"]], "Identificateur appelable": [[210, "identificateur-appelable"]], "Compilation dynamique (eval)": [[210, "compilation-dynamique-eval"]], "Compilation dynamique (compile, exec)": [[210, "compilation-dynamique-compile-exec"]], "Indentation": [[210, "indentation"]], "Fonctions usuelles": [[210, "fonctions-usuelles"]], "Types et variables du langage python": [[211, "types-et-variables-du-langage-python"]], "Types immuables (ou immutable)": [[211, "types-immuables-ou-immutable"]], "Type \u00ab\u00a0rien\u00a0\u00bb ou None": [[211, "type-rien-ou-none"]], "Nombres r\u00e9els et entiers": [[211, "nombres-reels-et-entiers"]], "Bool\u00e9en": [[211, "booleen"]], "Cha\u00eene de caract\u00e8res": [[211, "chaine-de-caracteres"]], "Cr\u00e9ation d\u2019une cha\u00eene de caract\u00e8res - str": [[211, "creation-d-une-chaine-de-caracteres-str"]], "Manipulation d\u2019une cha\u00eene de caract\u00e8res": [[211, "manipulation-d-une-chaine-de-caracteres"]], "Formatage d\u2019une cha\u00eene de caract\u00e8res": [[211, "formatage-d-une-chaine-de-caracteres"]], "Syntaxe %": [[211, "syntaxe"]], "M\u00e9thode format": [[211, "methode-format"]], "Notation f{}": [[211, "notation-f"]], "Un cas particuler %r ou {!r}": [[211, "un-cas-particuler-r-ou-r"]], "tuple": [[211, "tuple"]], "Nombres complexes": [[211, "nombres-complexes"]], "bytes": [[211, "bytes"]], "Types modifiables ou mutable": [[211, "types-modifiables-ou-mutable"]], "bytearray": [[211, "bytearray"]], "D\u00e9finition et m\u00e9thodes (list)": [[211, "definition-et-methodes-list"]], "Exemples (list)": [[211, "exemples-list"]], "Fonction range": [[211, "fonction-range"]], "Boucles et listes": [[211, "boucles-et-listes"]], "Collage de s\u00e9quences, fonction zip": [[211, "collage-de-sequences-fonction-zip"]], "Concat\u00e9nation de cha\u00eene de caract\u00e8res": [[211, "concatenation-de-chaine-de-caracteres"]], "Copie": [[211, "copie"]], "D\u00e9finition et m\u00e9thodes (dict)": [[211, "definition-et-methodes-dict"]], "Exemples (dict)": [[211, "exemples-dict"]], "Copie (dict)": [[211, "copie-dict"]], "Cl\u00e9s de type modifiable": [[211, "cles-de-type-modifiable"]], "Ensemble ou set": [[211, "ensemble-ou-set"]], "Extensions": [[211, "extensions"]], "Fonction print, repr et conversion en cha\u00eene de caract\u00e8res": [[211, "fonction-print-repr-et-conversion-en-chaine-de-caracteres"]], "Fonction eval": [[211, "eval-fonction-chapitre-deux"]], "Informations fournies par python": [[211, "informations-fournies-par-python"]], "Affectations multiples": [[211, "affectations-multiples"]], "Hi\u00e9rarchie des objets": [[211, "hierarchie-des-objets"]], "Objets internes": [[211, "objets-internes"]], "Commentaires accentu\u00e9s": [[211, "commentaires-accentues"]], "Format texte": [[212, "format-texte"]], "Ecriture en mode \u00ab\u00a0ajout\u00a0\u00bb": [[212, "ecriture-en-mode-ajout"]], "Encoding et les accents": [[212, "encoding-et-les-accents"]], "Fichiers zip": [[212, "fichiers-zip"]], "Lecture (zip)": [[212, "lecture-zip"]], "Ecriture (zip)": [[212, "ecriture-zip"]], "Manipulation de fichiers": [[212, "manipulation-de-fichiers"]], "Gestion des noms de chemins": [[212, "gestion-des-noms-de-chemins"]], "Copie, suppression": [[212, "copie-suppression"]], "Liste de fichiers": [[212, "liste-de-fichiers"]], "Sans format ou format binaire": [[212, "sans-format-ou-format-binaire"]], "Ecriture dans un fichier binaire": [[212, "ecriture-dans-un-fichier-binaire"]], "Lecture d\u2019un fichier binaire": [[212, "lecture-d-un-fichier-binaire"]], "Exemple fichier binaire": [[212, "exemple-fichier-binaire"]], "Objets plus complexes": [[212, "objets-plus-complexes"]], "Entr\u00e9es, Sorties, Modules": [[213, "entrees-sorties-modules"]], "Module ou extension": [[214, "module-ou-extension"]], "Un module": [[214, "un-module"]], "Exemple": [[214, "exemple"]], "Importer un module": [[214, "importer-un-module"]], "Nom d\u2019un module": [[214, "nom-d-un-module"]], "Modules et fichiers": [[214, "modules-et-fichiers"]], "Emplacement d\u2019un module": [[214, "emplacement-d-un-module"]], "Attributs communs \u00e0 tout module": [[214, "attributs-communs-a-tout-module"]], "Cas pratiques": [[214, "cas-pratiques"]], "Ce qui ne marche pas : les import cycliques": [[214, "ce-qui-ne-marche-pas-les-import-cycliques"]], "Ajouter un module en cours d\u2019ex\u00e9cution": [[214, "ajouter-un-module-en-cours-d-execution"]], "Liste des modules import\u00e9s": [[214, "liste-des-modules-importes"]], "Plusieurs modules et fichiers": [[214, "plusieurs-modules-et-fichiers"]], "Arborescence de modules, paquetage": [[214, "arborescence-de-modules-paquetage"]], "Import relatif": [[214, "import-relatif"]], "Modules internes": [[214, "modules-internes"]], "Modules externes": [[214, "modules-externes"]], "Optimisation": [[215, "optimisation"]], "S\u00e9rialiser autre chose que des donn\u00e9es": [[215, "serialiser-autre-chose-que-des-donnees"]], "Parall\u00e9lisation": [[216, "parallelisation"]], "Threads": [[217, "threads"]], "Premier thread": [[217, "premier-thread"]], "Synchronisation": [[217, "synchronisation"]], "Attente": [[217, "attente"]], "Partage d\u2019informations": [[217, "partage-d-informations"]], "Interface graphique": [[217, "interface-graphique"]], "Files de messages": [[217, "files-de-messages"]], "Multithreading plus simple": [[217, "multithreading-plus-simple"]], "concurrent.futures": [[217, "concurrent-futures"]], "Notion de futures": [[217, "notion-de-futures"]], "Un probl\u00e8me de blocage": [[217, "un-probleme-de-blocage"]], "async - await - asyncio": [[217, "async-await-asyncio"]], "GIL - Global Interpreter Lock": [[217, "gil-global-interpreter-lock"]], "cython : un m\u00e9lange de python et C": [[217, "cython-un-melange-de-python-et-c"]], "C#, Java": [[217, "c-java"]], "Bibliographie": [[217, "bibliographie"]], "Les ensembles de caract\u00e8res": [[219, "les-ensembles-de-caracteres"]], "Les multiplicateurs": [[219, "les-multiplicateurs"]], "Groupes": [[219, "groupes"]], "Assembler les caract\u00e8res": [[219, "assembler-les-caracteres"]], "Exemple plus complet": [[219, "exemple-plus-complet"]], "Groupes nomm\u00e9s": [[219, "groupes-nommes"]], "Le langage Python": [[220, "le-langage-python"]]}, "indexentries": {"algorithme": [[1, "index-0"], [56, "indexmathe-Algorithme0"], [56, "indexmathe-Algorithme1"], [56, "indexmathe-Algorithme2"], [56, "indexmathe-Algorithme3"]], "culture": [[1, "index-0"]], "culture algorithmique": [[1, "index-0"]], "commentaire_accentues() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.commentaire_accentues"]], "compte() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.compte"]], "construit_matrice_carree() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.construit_matrice_carree"]], "dictionnaire_modifie_dans_la_boucle() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dictionnaire_modifie_dans_la_boucle"]], "dix_entiers_carre() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dix_entiers_carre"]], "enumerate_permutations() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations"]], "enumerate_permutations_recursive() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations_recursive"]], "integrale() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.integrale"]], "mat2text() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2text"]], "mat2vect() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2vect"]], "minindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.minindex"]], "module": [[2, "module-teachpyx.examples.classiques"], [2, "module-teachpyx.examples.construction_classique"], [4, "module-teachpyx.faq.faq_exception"], [4, "module-teachpyx.faq.faq_geo"], [4, "module-teachpyx.faq.faq_numpy"], [4, "module-teachpyx.faq.faq_python"], [6, "module-teachpyx.examples.numpysex"], [7, "module-teachpyx.practice.rues_paris"], [8, "module-teachpyx.practice.tsp_bresenham"], [9, "module-teachpyx.practice.tsp_kohonen"], [10, "module-teachpyx.practice.tsp_kruskal"], [11, "module-teachpyx.tools.display.pygame_helper"], [11, "module-teachpyx.tools.display.video_helper"], [11, "module-teachpyx.tools.profiling"], [214, "index-0"]], "recherche() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche"]], "recherche_dichotomique() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche_dichotomique"]], "repetition_a_eviter() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.repetition_a_eviter"]], "somme() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.somme"]], "str2date() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.str2date"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "text2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.text2mat"]], "triindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.triindex"]], "vect2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.vect2mat"]], "get_data_folder() (dans le module teachpyx.datasets.data_helper)": [[3, "teachpyx.datasets.data_helper.get_data_folder"]], "load_enedis_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_enedis_dataset"]], "load_wine_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_wine_dataset"]], "load_wines_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_wines_dataset"]], "distribution (classe dans teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.Distribution"]], "pqpiperror": [[4, "teachpyx.faq.faq_python.PQPipError"]], "call_stack() (dans le module teachpyx.faq.faq_exception)": [[4, "teachpyx.faq.faq_exception.call_stack"]], "class_getitem() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.class_getitem"]], "difference_div() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.difference_div"]], "entier_grande_taille() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.entier_grande_taille"]], "enumerate_regex_search() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.enumerate_regex_search"]], "get_day_name() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_day_name"]], "get_installed_distributions() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_installed_distributions"]], "get_month_name() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_month_name"]], "get_package_info() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_package_info"]], "get_packages_list() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_packages_list"]], "information_about_package() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.information_about_package"]], "lambert93_to_wgps() (dans le module teachpyx.faq.faq_geo)": [[4, "teachpyx.faq.faq_geo.lambert93_to_WGPS"]], "list_of_installed_packages() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.list_of_installed_packages"]], "property_example() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.property_example"]], "python_path() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.python_path"]], "same_variable() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.same_variable"]], "sortable_class() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.sortable_class"]], "stringio() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.stringio"]], "teachpyx.faq.faq_exception": [[4, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_geo": [[4, "module-teachpyx.faq.faq_geo"]], "teachpyx.faq.faq_numpy": [[4, "module-teachpyx.faq.faq_numpy"]], "teachpyx.faq.faq_python": [[4, "module-teachpyx.faq.faq_python"]], "to_float32() (dans le module teachpyx.faq.faq_numpy)": [[4, "teachpyx.faq.faq_numpy.to_float32"]], "numpy_matrix2list() (dans le module teachpyx.examples.numpysex)": [[6, "teachpyx.examples.numpysex.numpy_matrix2list"]], "numpy_types() (dans le module teachpyx.examples.numpysex)": [[6, "teachpyx.examples.numpysex.numpy_types"]], "teachpyx.examples.numpysex": [[6, "module-teachpyx.examples.numpysex"]], "bellman() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.bellman"]], "connected_components() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.connected_components"]], "distance_haversine() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.distance_haversine"]], "distance_paris() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.distance_paris"]], "euler_path() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.euler_path"]], "eulerien_extension() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.eulerien_extension"]], "get_data() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.get_data"]], "graph_degree() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.graph_degree"]], "kruskal() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.kruskal"]], "possible_edges() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.possible_edges"]], "teachpyx.practice.rues_paris": [[7, "module-teachpyx.practice.rues_paris"]], "draw_ellipse() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.draw_ellipse"]], "draw_line() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.draw_line"]], "teachpyx.practice.tsp_bresenham": [[8, "module-teachpyx.practice.tsp_bresenham"]], "trace_ligne_simple() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.trace_ligne_simple"]], "ajoute_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.ajoute_vecteur"]], "construit_liste_neurones() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.construit_liste_neurones"]], "construit_ville() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.construit_ville"]], "deplace_neurone() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.deplace_neurone"]], "distance_chemin() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.distance_chemin"]], "distance_euclidienne_carree() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.distance_euclidienne_carree"]], "iteration() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.iteration"]], "modifie_structure() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.modifie_structure"]], "moyenne_proximite() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.moyenne_proximite"]], "multiplie_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.multiplie_vecteur"]], "poids_attirance() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.poids_attirance"]], "simulation() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.simulation"]], "soustrait_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.soustrait_vecteur"]], "teachpyx.practice.tsp_kohonen": [[9, "module-teachpyx.practice.tsp_kohonen"]], "vecteur_norme() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.vecteur_norme"]], "amelioration_chemin() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.amelioration_chemin"]], "arbre_poids_minimal() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.arbre_poids_minimal"]], "circuit_eulerien() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.circuit_eulerien"]], "circuit_hamiltonien() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.circuit_hamiltonien"]], "construit_ville() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.construit_ville"]], "dessin_arete_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.dessin_arete_zone"]], "distance_euclidian() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.distance_euclidian"]], "echange_position() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.echange_position"]], "echange_position_essai() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.echange_position_essai"]], "equation_droite() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.equation_droite"]], "evaluation_droite() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.evaluation_droite"]], "intersection_segment() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.intersection_segment"]], "longueur_chemin() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.longueur_chemin"]], "oppose_vecteur() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.oppose_vecteur"]], "repartition_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.repartition_zone"]], "retournement() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.retournement"]], "retournement_essai() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.retournement_essai"]], "simulation() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.simulation"]], "supprime_croisement() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.supprime_croisement"]], "teachpyx.practice.tsp_kruskal": [[10, "module-teachpyx.practice.tsp_kruskal"]], "tsp_kruskal_algorithm() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.tsp_kruskal_algorithm"]], "vecteur_cosinus() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_cosinus"]], "vecteur_norme() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_norme"]], "vecteur_points() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_points"]], "vecteur_sinus() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_sinus"]], "voisinage_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.voisinage_zone"]], "voisinage_zone_xy() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.voisinage_zone_xy"]], "profilenode (classe dans teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.ProfileNode"]], "add_called_by() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.add_called_by"]], "add_calls_to() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.add_calls_to"]], "as_dict() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.as_dict"]], "build_diff_image() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.build_diff_image"]], "decompress_zip() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.decompress_zip"]], "display_line() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.display_line"]], "download_and_unzip() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.download_and_unzip"]], "draw_diagram() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.draw_diagram"]], "draw_graph_graphviz() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.draw_graph_graphviz"]], "empty_main_loop() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.empty_main_loop"]], "filter_node_() (m\u00e9thode statique teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.filter_node_"]], "get_local_folder() (dans le module teachpyx.tools.display.video_helper)": [[11, "teachpyx.tools.display.video_helper.get_local_folder"]], "get_pygame_screen_font() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.get_pygame_screen_font"]], "get_root() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.get_root"]], "key (propri\u00e9t\u00e9 teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.key"]], "make_video() (dans le module teachpyx.tools.display.video_helper)": [[11, "teachpyx.tools.display.video_helper.make_video"]], "profile() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile"]], "profile2df() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile2df"]], "profile2graph() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile2graph"]], "run_graphviz() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.run_graphviz"]], "run_subprocess() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.run_subprocess"]], "teachpyx.tools.display.pygame_helper": [[11, "module-teachpyx.tools.display.pygame_helper"]], "teachpyx.tools.display.video_helper": [[11, "module-teachpyx.tools.display.video_helper"]], "teachpyx.tools.profiling": [[11, "module-teachpyx.tools.profiling"]], "to_json() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.to_json"]], "to_text() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.to_text"]], "total_size() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.total_size"]], "wait_event() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.wait_event"]], "pygame_simulation() (dans le module teachpyx.video.tsp_kohonen_pygame)": [[12, "teachpyx.video.tsp_kohonen_pygame.pygame_simulation"]], "pygame_simulation() (dans le module teachpyx.video.tsp_kruskal_pygame)": [[13, "teachpyx.video.tsp_kruskal_pygame.pygame_simulation"]], "ubuntu": [[16, "index-0"]], "wsl": [[16, "index-0"]], "cartopy": [[16, "index-0"]], "code jam": [[17, "index-0"]], "harry potter": [[18, "index-0"]], "hermionne": [[18, "index-0"]], "\u00e9nigme": [[18, "index-0"]], "dataframe": [[46, "index-0"], [58, "index-10"]], "matrice": [[46, "index-0"], [58, "index-6"]], "cr\u00e9dit agricole": [[53, "indexmathe-Table1"]], "danone": [[53, "indexmathe-Table1"]], "figure": [[53, "indexmathe-Figure0"], [53, "indexmathe-Figure1"], [53, "indexmathe-Figure10"], [53, "indexmathe-Figure11"], [53, "indexmathe-Figure12"], [53, "indexmathe-Figure13"], [53, "indexmathe-Figure2"], [53, "indexmathe-Figure3"], [53, "indexmathe-Figure4"], [53, "indexmathe-Figure5"], [53, "indexmathe-Figure6"], [53, "indexmathe-Figure7"], [53, "indexmathe-Figure8"], [53, "indexmathe-Figure9"]], "figure f1 : open-high-low-close-volume": [[53, "indexmathe-Figure0"]], "figure f10 : 4 actions fran\u00e7aises": [[53, "indexmathe-Figure9"]], "figure f11 : rendement pour 4 actions fran\u00e7aises": [[53, "indexmathe-Figure10"]], "figure f12 : deal": [[53, "indexmathe-Figure11"]], "figure f13 : deal en image": [[53, "indexmathe-Figure12"]], "figure f14 : deal positifs": [[53, "indexmathe-Figure13"]], "figure f2 : ohlc intraday": [[53, "indexmathe-Figure1"]], "figure f3 : exemple de carnet d'ordres": [[53, "indexmathe-Figure2"]], "figure f4 : action bnp et trend following": [[53, "indexmathe-Figure3"]], "figure f5 : action bnp et mean reversing": [[53, "indexmathe-Figure4"]], "figure f6 : action bnp et pair trading": [[53, "indexmathe-Figure5"]], "figure f7 : le cours de la bnp entre d\u00e9but 2003 et mi 2008": [[53, "indexmathe-Figure6"]], "figure f8 : nav": [[53, "indexmathe-Figure7"]], "figure f9 : nav d'une strat\u00e9gie": [[53, "indexmathe-Figure8"]], "probl\u00e8me": [[53, "indexmathe-Probl\u00e8me0"]], "probl\u00e8me p1 : optimisation d'un portefeuille": [[53, "indexmathe-Probl\u00e8me0"]], "soci\u00e9t\u00e9 g\u00e9n\u00e9rale": [[53, "indexmathe-Table1"]], "table": [[53, "indexmathe-Table0"], [53, "indexmathe-Table1"]], "table t1 : implantation des hedge funds en 2007": [[53, "indexmathe-Table0"]], "table t2 : indicateurs bnp": [[53, "indexmathe-Table1"]], "courts": [[53, "indexmathe-Figure13"]], "finance": [[53, "index-0"]], "logns": [[53, "indexmathe-Figure13"]], "n\u00e9gatifs": [[53, "indexmathe-Figure13"]], "strading": [[53, "index-0"]], "strat\u00e9gie": [[53, "index-0"]], "tous les ordres ne sont pas repr\u00e9sent\u00e9s.": [[53, "indexmathe-Figure2"]], "algorithme a1 : kruskal": [[56, "indexmathe-Algorithme0"]], "algorithme a2 : circuit eul\u00e9rien": [[56, "indexmathe-Algorithme1"]], "algorithme a3 : circuit hamiltonien": [[56, "indexmathe-Algorithme2"]], "algorithme a4 : tsp": [[56, "indexmathe-Algorithme3"]], "dijkstra": [[58, "index-14"]], "arbre": [[58, "index-13"]], "array": [[58, "index-11"]], "corr\u00e9lation": [[58, "index-9"]], "distance": [[58, "index-5"]], "espace vectoriel": [[58, "index-3"]], "fonction": [[58, "index-0"]], "fonction continue": [[58, "index-1"]], "fonction de hash": [[58, "index-12"]], "fonction d\u00e9rivable": [[58, "index-2"]], "graphe": [[58, "index-13"]], "hash": [[58, "index-12"]], "histogramme": [[58, "index-8"]], "k-d tree": [[58, "index-15"]], "matplotlib": [[58, "index-19"]], "norme": [[58, "index-5"]], "numpy": [[58, "index-17"]], "pandas": [[58, "index-18"]], "plot": [[58, "index-19"]], "plus court chemin dans un graphe": [[58, "index-14"]], "probl\u00e8me d'optimisation": [[58, "index-7"]], "produit scalaire": [[58, "index-4"]], "recherche dichotomique": [[58, "index-15"]], "scikit-learn": [[58, "index-20"]], "seaborn": [[58, "index-19"]], "statsmodels": [[58, "index-21"]], "travelling salesman problem (tsp)": [[58, "index-16"]], "voyageur du commerce": [[58, "index-16"]], "cheat sheet": [[59, "index-0"], [65, "index-0"]], "conseil": [[60, "index-0"]], "boucle": [[70, "index-0"], [210, "indexmathe-Boucle0"], [210, "index-3"]], "s\u00e9quence": [[70, "index-0"]], "test": [[70, "index-0"], [210, "index-0"]], "d\u00e9finition": [[196, "indexmathe-D\u00e9finition0"], [196, "indexmathe-D\u00e9finition1"], [196, "indexmathe-D\u00e9finition2"], [196, "indexmathe-D\u00e9finition3"], [196, "indexmathe-D\u00e9finition4"], [196, "indexmathe-D\u00e9finition5"], [196, "indexmathe-D\u00e9finition6"], [196, "indexmathe-D\u00e9finition7"], [210, "indexmathe-D\u00e9finition0"], [210, "indexmathe-D\u00e9finition1"], [210, "indexmathe-D\u00e9finition2"], [210, "indexmathe-D\u00e9finition3"], [210, "indexmathe-D\u00e9finition4"], [210, "indexmathe-D\u00e9finition5"], [211, "indexmathe-D\u00e9finition0"], [211, "indexmathe-D\u00e9finition1"], [211, "indexmathe-D\u00e9finition2"], [211, "indexmathe-D\u00e9finition3"], [211, "indexmathe-D\u00e9finition4"], [211, "indexmathe-D\u00e9finition5"], [211, "indexmathe-D\u00e9finition6"], [211, "indexmathe-D\u00e9finition7"], [211, "indexmathe-D\u00e9finition8"], [211, "indexmathe-D\u00e9finition9"], [214, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d1 : classe": [[196, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : instantiaion": [[196, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : m\u00e9thode": [[196, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : attribut": [[196, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : m\u00e9thode statique": [[196, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : attribut statique": [[196, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : h\u00e9ritage": [[196, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : surcharge": [[196, "indexmathe-D\u00e9finition7"]], "syntaxe": [[196, "indexmathe-Syntaxe0"], [196, "indexmathe-Syntaxe1"], [196, "indexmathe-Syntaxe10"], [196, "indexmathe-Syntaxe11"], [196, "indexmathe-Syntaxe12"], [196, "indexmathe-Syntaxe13"], [196, "indexmathe-Syntaxe14"], [196, "indexmathe-Syntaxe15"], [196, "indexmathe-Syntaxe2"], [196, "indexmathe-Syntaxe3"], [196, "indexmathe-Syntaxe4"], [196, "indexmathe-Syntaxe5"], [196, "indexmathe-Syntaxe6"], [196, "indexmathe-Syntaxe7"], [196, "indexmathe-Syntaxe8"], [196, "indexmathe-Syntaxe9"], [199, "indexmathe-Syntaxe0"], [199, "indexmathe-Syntaxe1"], [210, "indexmathe-Syntaxe0"], [210, "indexmathe-Syntaxe1"], [210, "indexmathe-Syntaxe2"], [210, "indexmathe-Syntaxe3"], [210, "indexmathe-Syntaxe4"], [210, "indexmathe-Syntaxe5"], [210, "indexmathe-Syntaxe6"], [210, "indexmathe-Syntaxe7"], [210, "indexmathe-Syntaxe8"], [214, "indexmathe-Syntaxe0"], [214, "indexmathe-Syntaxe1"], [214, "indexmathe-Syntaxe2"]], "syntaxe s1 : d\u00e9claration d'une classe": [[196, "indexmathe-Syntaxe0"]], "syntaxe s10 : d\u00e9claration d'un attribut statique": [[196, "indexmathe-Syntaxe9"]], "syntaxe s11 : d\u00e9claration d'une propri\u00e9t\u00e9": [[196, "indexmathe-Syntaxe10"]], "syntaxe s12 : d\u00e9claration d'une propri\u00e9t\u00e9 (2)": [[196, "indexmathe-Syntaxe11"]], "syntaxe s13 : d\u00e9claration de l'op\u00e9rateur __copy__": [[196, "indexmathe-Syntaxe12"]], "syntaxe s14 : d\u00e9claration d'attributs fig\u00e9s": [[196, "indexmathe-Syntaxe13"]], "syntaxe s15 : h\u00e9ritage": [[196, "indexmathe-Syntaxe14"]], "syntaxe s16 : surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[196, "indexmathe-Syntaxe15"]], "syntaxe s2 : instanciation d'une classe": [[196, "indexmathe-Syntaxe1"]], "syntaxe s3 : d\u00e9claration d'une m\u00e9thode": [[196, "indexmathe-Syntaxe2"]], "syntaxe s4 : appel d'une m\u00e9thode": [[196, "indexmathe-Syntaxe3"]], "syntaxe s5 : d\u00e9claration d'un attribut": [[196, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'un constructeur": [[196, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'un constructeur": [[196, "indexmathe-Syntaxe6"]], "syntaxe s8 : d\u00e9claration de l'op\u00e9rateur __str__": [[196, "indexmathe-Syntaxe7"]], "syntaxe s9 : d\u00e9claration d'une m\u00e9thode statique": [[196, "indexmathe-Syntaxe8"]], "__copy__": [[196, "index-13"]], "__dict__": [[196, "index-6"]], "class": [[196, "index-0"]], "commentaire": [[196, "index-7"], [210, "index-10"], [211, "index-3"], [211, "index-54"]], "constructeur": [[196, "index-4"]], "copy": [[196, "index-13"], [196, "index-15"], [211, "index-41"], [211, "index-45"]], "deepcopy": [[196, "index-15"], [211, "index-41"]], "def": [[196, "index-3"]], "destructeur": [[196, "index-5"]], "dir": [[196, "index-8"]], "garbage collector": [[196, "index-14"], [199, "index-13"]], "help": [[196, "index-7"]], "h\u00e9ritage": [[196, "index-17"], [199, "index-9"]], "instance": [[196, "index-2"]], "issubclass": [[196, "index-18"]], "m\u00e9thode statique": [[196, "index-11"]], "op\u00e9rateur retourn\u00e9": [[196, "index-9"]], "pass": [[196, "index-1"], [210, "index-2"]], "propri\u00e9t\u00e9": [[196, "index-12"]], "self": [[196, "index-3"]], "s\u00e9rialisation": [[196, "index-16"], [212, "index-5"], [215, "index-0"]], "yield": [[196, "index-10"], [210, "index-14"]], "attribut": [[198, "index-0"]], "attributeerror": [[199, "index-5"]], "importerror": [[199, "index-5"]], "indentationerror": [[199, "index-4"]], "indexerror": [[199, "index-6"]], "keyerror": [[199, "index-6"]], "nameerror": [[199, "index-5"]], "oserror": [[199, "index-7"]], "syntaxerror": [[199, "index-4"]], "syntaxe s1 : attraper une exception": [[199, "indexmathe-Syntaxe0"]], "syntaxe s2 : lever une exception": [[199, "indexmathe-Syntaxe1"]], "typeerror": [[199, "index-6"]], "unicodeerror": [[199, "index-7"]], "valueerror": [[199, "index-6"]], "__str__": [[199, "index-10"]], "as": [[199, "index-3"]], "context manager": [[199, "index-14"]], "division par z\u00e9ro": [[199, "index-0"]], "except": [[199, "index-2"]], "exception": [[199, "index-0"]], "it\u00e9rateur": [[199, "index-11"], [210, "index-14"], [210, "index-6"]], "pile d'appels": [[199, "index-1"]], "pile d'ex\u00e9cution": [[199, "index-1"]], "raise": [[199, "index-8"]], "try": [[199, "index-2"]], "valeur aberrante": [[199, "index-12"]], "test unitaire": [[202, "index-1"]], "warning": [[202, "index-0"]], "checkbutton": [[204, "index-5"]], "entry": [[204, "index-1"], [204, "index-3"]], "intvar": [[204, "index-6"]], "listbox": [[204, "index-7"]], "radiobutton": [[204, "index-6"]], "text": [[204, "index-4"]], "bouton": [[204, "index-2"]], "bouton radio": [[204, "index-6"]], "case \u00e0 cocher": [[204, "index-5"]], "compte \u00e0 rebours": [[204, "index-8"]], "widget": [[204, "index-0"]], "zone de saisie": [[204, "index-3"]], "zone de saisie \u00e0 plusieurs lignes": [[204, "index-4"]], "zone de texte": [[204, "index-1"]], "jeux de caract\u00e8res": [[208, "index-0"]], ":": [[210, "index-0"], [210, "index-3"]], "boucle b1 : test": [[210, "indexmathe-Boucle0"]], "d\u00e9finition d1 : test": [[210, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : fonction": [[210, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : fonction r\u00e9cursive": [[210, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : port\u00e9e d'un variable": [[210, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : variable locale": [[210, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : variable globale": [[210, "indexmathe-D\u00e9finition5"]], "stopiteration": [[210, "index-6"]], "syntaxe s1 : tests": [[210, "indexmathe-Syntaxe0"]], "syntaxe s2 : instruction pass": [[210, "indexmathe-Syntaxe1"]], "syntaxe s3 : boucle while": [[210, "indexmathe-Syntaxe2"]], "syntaxe s4 : boucle for": [[210, "indexmathe-Syntaxe3"]], "syntaxe s5 : liste en extension": [[210, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'une fonction": [[210, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'une fonction": [[210, "indexmathe-Syntaxe6"]], "syntaxe s8 : valeurs par d\u00e9faut": [[210, "indexmathe-Syntaxe7"]], "syntaxe s9 : nombre ind\u00e9fini de param\u00e8tres": [[210, "indexmathe-Syntaxe8"]], "affectations multiples": [[210, "index-7"]], "boucle infinie": [[210, "index-4"]], "break": [[210, "index-9"]], "compile": [[210, "index-16"]], "continue": [[210, "index-8"]], "elif": [[210, "index-0"]], "else": [[210, "index-0"]], "enumerate": [[210, "index-21"]], "eval": [[210, "index-15"], [211, "index-49"]], "exec": [[210, "index-16"]], "fonction r\u00e9cursive": [[210, "index-12"]], "for": [[210, "index-3"], [210, "index-5"]], "g\u00e9n\u00e9rateur": [[210, "index-14"]], "if": [[210, "index-0"]], "in": [[210, "index-3"], [211, "index-15"], [211, "index-25"], [211, "index-35"], [211, "index-44"]], "indentation": [[210, "index-17"]], "lambda": [[210, "index-13"]], "map": [[210, "index-18"]], "passage par adresse": [[210, "index-11"]], "priorit\u00e9 des op\u00e9rateurs": [[210, "index-1"], [211, "index-10"]], "r\u00e9cursivit\u00e9": [[210, "index-12"]], "sorted": [[210, "index-20"]], "while": [[210, "index-3"]], "zip": [[210, "index-19"], [211, "index-39"]], "\"": [[211, "index-17"]], "\"\"\"": [[211, "index-17"]], "#": [[211, "index-54"]], "%": [[211, "index-22"], [211, "index-8"]], "%d": [[211, "index-22"]], "%f": [[211, "index-22"]], "%s": [[211, "index-22"]], "&": [[211, "index-47"], [211, "index-8"]], "'": [[211, "index-17"]], "'''": [[211, "index-17"]], "*": [[211, "index-20"], [211, "index-25"], [211, "index-35"], [211, "index-8"]], "**": [[211, "index-8"]], "*=": [[211, "index-20"], [211, "index-25"], [211, "index-35"], [211, "index-8"]], "+": [[211, "index-20"], [211, "index-25"], [211, "index-35"], [211, "index-8"]], "+=": [[211, "index-20"], [211, "index-25"], [211, "index-35"], [211, "index-8"]], "-": [[211, "index-8"]], "-=": [[211, "index-8"]], "/": [[211, "index-8"]], "//": [[211, "index-11"]], "/=": [[211, "index-8"]], "<": [[211, "index-14"]], "<<": [[211, "index-8"]], "<=": [[211, "index-14"]], "=": [[211, "index-14"], [211, "index-52"]], "==": [[211, "index-14"]], ">": [[211, "index-14"]], ">=": [[211, "index-14"]], ">>": [[211, "index-8"]], "d\u00e9finition d1 : variable": [[211, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d10 : frozenset": [[211, "indexmathe-D\u00e9finition9"]], "d\u00e9finition d2 : constante": [[211, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : type immuable (ou immutable)": [[211, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : cha\u00eene de caract\u00e8res": [[211, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : tuple": [[211, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : type modifiable (ou mutable)": [[211, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : liste": [[211, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : dictionnaire": [[211, "indexmathe-D\u00e9finition7"]], "d\u00e9finition d9 : set": [[211, "indexmathe-D\u00e9finition8"]], "false": [[211, "index-12"]], "none": [[211, "index-6"]], "true": [[211, "index-12"]], "[:]": [[211, "index-20"], [211, "index-25"], [211, "index-35"], [211, "index-44"]], "[]": [[211, "index-20"], [211, "index-25"], [211, "index-35"], [211, "index-44"]], "\\": [[211, "index-17"], [211, "index-4"]], "\\%": [[211, "index-18"]], "\\\\": [[211, "index-18"]], "\\n": [[211, "index-18"]], "\\r": [[211, "index-18"]], "\\t": [[211, "index-18"]], "__builtins__": [[211, "index-50"]], "__doc__": [[211, "index-50"]], "__file__": [[211, "index-50"]], "__name__": [[211, "index-50"]], "affectation multiple": [[211, "index-52"]], "and": [[211, "index-13"]], "append": [[211, "index-35"]], "arrondi": [[211, "index-9"]], "b\"\"": [[211, "index-29"]], "b''": [[211, "index-29"]], "backslash": [[211, "index-4"]], "bool": [[211, "index-12"]], "bytearray": [[211, "index-33"]], "bytes": [[211, "index-27"]], "cha\u00eene de caract\u00e8res": [[211, "index-16"]], "cl\u00e9": [[211, "index-43"]], "comparaison": [[211, "index-14"]], "complex": [[211, "index-26"]], "concat\u00e9nation": [[211, "index-40"]], "constante": [[211, "index-2"]], "conversion": [[211, "index-9"]], "copie": [[211, "index-41"], [211, "index-45"]], "count": [[211, "index-21"], [211, "index-28"]], "decode": [[211, "index-30"]], "del": [[211, "index-44"]], "dict": [[211, "index-42"]], "dictionnaire": [[211, "index-42"]], "division enti\u00e8re": [[211, "index-11"]], "divmod": [[211, "index-53"]], "encode": [[211, "index-30"]], "endswith": [[211, "index-21"], [211, "index-28"]], "entier": [[211, "index-7"]], "extend": [[211, "index-35"]], "extra caract\u00e8re": [[211, "index-18"]], "find": [[211, "index-21"], [211, "index-28"]], "float": [[211, "index-7"]], "format": [[211, "index-23"]], "formattage": [[211, "index-22"]], "formmattage": [[211, "index-23"]], "fromhex": [[211, "index-29"]], "frozen set": [[211, "index-47"]], "get": [[211, "index-44"]], "getsizeof": [[211, "index-32"]], "id": [[211, "index-46"]], "identificateur": [[211, "index-1"]], "immuable": [[211, "index-5"]], "immutable": [[211, "index-5"]], "index": [[211, "index-35"]], "insert": [[211, "index-35"]], "int": [[211, "index-7"]], "is": [[211, "index-15"]], "items": [[211, "index-44"]], "join": [[211, "index-21"], [211, "index-28"]], "keys": [[211, "index-44"]], "len": [[211, "index-35"], [211, "index-44"]], "list": [[211, "index-34"]], "liste": [[211, "index-34"]], "liste en extension": [[211, "index-38"]], "lower": [[211, "index-21"]], "max": [[211, "index-35"], [211, "index-44"]], "min": [[211, "index-35"], [211, "index-44"]], "modifiable": [[211, "index-31"]], "mutable": [[211, "index-31"]], "not": [[211, "index-13"], [211, "index-35"]], "op\u00e9rateur": [[211, "index-13"], [211, "index-14"], [211, "index-15"], [211, "index-20"], [211, "index-25"], [211, "index-35"], [211, "index-8"]], "or": [[211, "index-13"]], "pop": [[211, "index-35"], [211, "index-44"]], "print": [[211, "index-48"]], "r\"\"": [[211, "index-19"]], "r''": [[211, "index-19"]], "range": [[211, "index-37"]], "replace": [[211, "index-28"]], "repr": [[211, "index-48"]], "reverse": [[211, "index-35"]], "r\u00e9el": [[211, "index-7"]], "set": [[211, "index-47"]], "sort": [[211, "index-35"], [211, "index-36"]], "split": [[211, "index-21"], [211, "index-28"]], "startswith": [[211, "index-21"], [211, "index-28"]], "str": [[211, "index-16"]], "string": [[211, "index-16"]], "tuple": [[211, "index-24"]], "type": [[211, "index-1"], [211, "index-51"]], "type modifiable": [[211, "index-31"]], "type mutable": [[211, "index-31"]], "upper": [[211, "index-21"]], "valeur": [[211, "index-43"]], "values": [[211, "index-44"]], "variable": [[211, "index-0"]], "|": [[211, "index-8"]], "encoding": [[212, "index-3"]], "fichier": [[212, "index-0"]], "format binaire": [[212, "index-4"]], "format texte": [[212, "index-1"]], "ressource": [[212, "index-2"]], "d\u00e9finition d1 : point d'entr\u00e9e du programme": [[214, "indexmathe-D\u00e9finition0"]], "syntaxe s1 : importer un module (1)": [[214, "indexmathe-Syntaxe0"]], "syntaxe s2 : importer un module (2)": [[214, "indexmathe-Syntaxe1"]], "syntaxe s3 : importer un module (3)": [[214, "indexmathe-Syntaxe2"]], "import": [[214, "index-2"]], "point d'entr\u00e9e": [[214, "index-1"]], "py": [[214, "index-3"]], "pyc": [[214, "index-3"]], "protobuf": [[215, "index-1"]], "gil": [[216, "index-0"]], "global lock interpreter": [[216, "index-0"]], "asyncio": [[216, "index-1"]], "gevent": [[216, "index-1"]], "uvloop": [[216, "index-1"]], "event": [[217, "index-2"]], "lock": [[217, "index-3"]], "futures": [[217, "index-5"]], "parall\u00e9lisation": [[217, "index-0"]], "promesses": [[217, "index-5"]], "promises": [[217, "index-5"]], "queue": [[217, "index-4"]], "sleep": [[217, "index-1"]], "synchronisation": [[217, "index-0"]], "thread": [[217, "index-0"]], "t\u00e2ches": [[217, "index-5"]], "verrou": [[217, "index-3"]]}})