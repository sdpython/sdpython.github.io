Search.setIndex({"docnames": ["CHANGELOGS", "algorithm_culture", "api/classique", "api/faqs", "api/index", "api/numpysex", "api/practice/rues_paris", "api/tools", "articles/2022-11-31-route2022", "articles/2022-12-07-cartopy", "articles/2023-08-03-code-jam", "articles/2023-08-09-hermionne", "articles/2023-09-06-ensae", "articles/2023-11-31-route2023", "articles/index", "auto_examples/index", "auto_examples/plot_einstein_riddle", "auto_examples/plot_float_and_double_rouding", "auto_examples/plot_gil_example", "auto_examples/plot_hypercube", "auto_examples/plot_lambda_function", "auto_examples/plot_matador", "auto_examples/plot_numpy_tricks", "auto_examples/plot_pandas_groupby", "auto_examples/plot_partie_dame", "auto_examples/plot_serialisation_examples", "auto_examples/plot_serialisation_protobuf", "auto_examples/plot_tarabiscote", "auto_examples/plot_tsp", "auto_examples/sg_execution_times", "c_data/dataframes", "c_data/index", "c_data/matrices", "c_data/nb_array", "c_data/nb_dataframe", "c_data/nb_numpy", "c_data/nb_pandas", "c_data/numpy_broadcast", "c_resume/conseil_programmes", "c_resume/index", "c_resume/python_sheet", "i_ex", "i_faq", "i_index", "index", "introduction", "license", "notebook_gallery", "practice/algo-base/BJKST", "practice/algo-base/exercice_compose_connexe", "practice/algo-base/exercice_echelle", "practice/algo-base/exercice_edit_distance", "practice/algo-base/exercice_editdist", "practice/algo-base/exercice_ordonnancement", "practice/algo-base/exercice_plus_grande_somme", "practice/algo-base/exercice_random_graph", "practice/algo-base/exercice_simulation_covid", "practice/algo-base/exercice_simulation_covid_simple", "practice/algo-base/exercice_suffix", "practice/algo-base/exercice_topk", "practice/algo-base/exercice_tsp", "practice/algo-base/exercice_xn", "practice/algo-base/matrix_dictionary", "practice/algo-base/tsp_aparte", "practice/algo-compose/exercice_morse", "practice/algo-compose/paris_parcours", "practice/algo-compose/vigenere", "practice/exams", "practice/exams/interro_rapide_20_minutes_2014_09", "practice/exams/interro_rapide_20_minutes_2014_10", "practice/exams/interro_rapide_20_minutes_2014_11", "practice/exams/interro_rapide_20_minutes_2014_12", "practice/exams/interro_rapide_20_minutes_2015_09", "practice/exams/interro_rapide_20_minutes_2015_11", "practice/exams/td_note_2013_bout_de_code_coloriage", "practice/exams/td_note_2013_coloriage_correction", "practice/exams/td_note_2015", "practice/exams/td_note_2015_rattrapage_enonce", "practice/exams/td_note_2016", "practice/exams/td_note_2017", "practice/exams/td_note_2017_2", "practice/exams/td_note_2018_1", "practice/exams/td_note_2018_2", "practice/exams/td_note_2019_1", "practice/exams/td_note_2019_2", "practice/exams/td_note_2020_1", "practice/exams/td_note_2020_2", "practice/exams/td_note_2021", "practice/exams/td_note_2022", "practice/exams/td_note_2022_rattrapage", "practice/exams/td_note_2022_rattrapage2", "practice/exams/td_note_2023", "practice/index_algo", "practice/index_exam", "practice/index_python", "practice/py-base/classe_de", "practice/py-base/classe_iterateur", "practice/py-base/classe_permutation", "practice/py-base/classe_tree", "practice/py-base/classes_2048", "practice/py-base/classes_metro", "practice/py-base/code_liste_tuple", "practice/py-base/code_multinomial", "practice/py-base/coloriage_carre", "practice/py-base/de_rotation", "practice/py-base/exercice_hash", "practice/py-base/exercice_json_xml", "practice/py-base/exercice_pi", "practice/py-base/exercice_regex", "practice/py-base/exercice_serialisation_json", "practice/py-base/histogramme_rapide", "practice/py-base/nbheap", "practice/py-base/pivot_gauss", "practice/py-base/profile_gini", "practice/py-base/profiling_conv", "practice/py-base/profiling_example", "practice/py-base/recherche_dichotomique", "practice/py-base/scrapping", "practice/py-base/structures_donnees_conversion", "practice/py-base/tableau_contingence", "practice/py-base/tests_unitaires", "practice/py-base/tri_nlnd", "practice/tds-algo/gentry_integer_encryption", "practice/tds-algo/gentry_integer_encryption_correction", "practice/tds-algo/knn_high_dimension", "practice/tds-algo/knn_high_dimension_correction", "practice/tds-algo/plus_court_chemin", "practice/tds-algo/plus_court_chemin_correction", "practice/tds-algo/puzzle_algo_1", "practice/tds-algo/puzzle_algo_1_correction", "practice/tds-algo/puzzle_algo_2", "practice/tds-algo/puzzle_algo_2_correction", "practice/tds-base/classes_carre_magique", "practice/tds-base/classes_carre_magique_correction", "practice/tds-base/classes_heritage", "practice/tds-base/classes_heritage_correction", "practice/tds-base/dictionnaire_vigenere", "practice/tds-base/dictionnaire_vigenere_correction", "practice/tds-base/integrale_rectangle", "practice/tds-base/integrale_rectangle_correction", "practice/tds-base/j2048", "practice/tds-base/j2048_correction", "practice/tds-base/module_file_regex", "practice/tds-base/module_file_regex_correction", "practice/tds-base/premiers_pas", "practice/tds-base/premiers_pas_correction", "practice/tds-base/pyramide_bigarree", "practice/tds-base/pyramide_bigarree_correction", "practice/tds-base/texte_langue", "practice/tds-base/texte_langue_correction", "practice/tds-base/variable_boucle_tests", "practice/tds-base/variable_boucle_tests_correction", "py/c_classes/classes", "py/c_classes/index", "py/c_classes/questions", "py/c_exception/exception", "py/c_exception/exception_ext", "py/c_exception/index", "py/c_exception/warning", "py/c_gui/index", "py/c_gui/tkinter", "py/c_lang/collections", "py/c_lang/constructions", "py/c_lang/dates", "py/c_lang/encoding", "py/c_lang/index", "py/c_lang/syntaxe", "py/c_lang/types", "py/c_module/files", "py/c_module/index", "py/c_module/module", "py/c_module/serialization", "py/c_parallelisation/index", "py/c_parallelisation/thread", "py/c_regex/index", "py/c_regex/regex", "py/index"], "filenames": ["CHANGELOGS.rst", "algorithm_culture.rst", "api/classique.rst", "api/faqs.rst", "api/index.rst", "api/numpysex.rst", "api/practice/rues_paris.rst", "api/tools.rst", "articles/2022-11-31-route2022.rst", "articles/2022-12-07-cartopy.rst", "articles/2023-08-03-code-jam.rst", "articles/2023-08-09-hermionne.rst", "articles/2023-09-06-ensae.rst", "articles/2023-11-31-route2023.rst", "articles/index.rst", "auto_examples/index.rst", "auto_examples/plot_einstein_riddle.rst", "auto_examples/plot_float_and_double_rouding.rst", "auto_examples/plot_gil_example.rst", "auto_examples/plot_hypercube.rst", "auto_examples/plot_lambda_function.rst", "auto_examples/plot_matador.rst", "auto_examples/plot_numpy_tricks.rst", "auto_examples/plot_pandas_groupby.rst", "auto_examples/plot_partie_dame.rst", "auto_examples/plot_serialisation_examples.rst", "auto_examples/plot_serialisation_protobuf.rst", "auto_examples/plot_tarabiscote.rst", "auto_examples/plot_tsp.rst", "auto_examples/sg_execution_times.rst", "c_data/dataframes.rst", "c_data/index.rst", "c_data/matrices.rst", "c_data/nb_array.ipynb", "c_data/nb_dataframe.ipynb", "c_data/nb_numpy.ipynb", "c_data/nb_pandas.ipynb", "c_data/numpy_broadcast.ipynb", "c_resume/conseil_programmes.rst", "c_resume/index.rst", "c_resume/python_sheet.rst", "i_ex.rst", "i_faq.rst", "i_index.rst", "index.rst", "introduction.rst", "license.rst", "notebook_gallery.rst", "practice/algo-base/BJKST.ipynb", "practice/algo-base/exercice_compose_connexe.ipynb", "practice/algo-base/exercice_echelle.ipynb", "practice/algo-base/exercice_edit_distance.ipynb", "practice/algo-base/exercice_editdist.ipynb", "practice/algo-base/exercice_ordonnancement.ipynb", "practice/algo-base/exercice_plus_grande_somme.ipynb", "practice/algo-base/exercice_random_graph.ipynb", "practice/algo-base/exercice_simulation_covid.ipynb", "practice/algo-base/exercice_simulation_covid_simple.ipynb", "practice/algo-base/exercice_suffix.ipynb", "practice/algo-base/exercice_topk.ipynb", "practice/algo-base/exercice_tsp.ipynb", "practice/algo-base/exercice_xn.ipynb", "practice/algo-base/matrix_dictionary.ipynb", "practice/algo-base/tsp_aparte.ipynb", "practice/algo-compose/exercice_morse.ipynb", "practice/algo-compose/paris_parcours.ipynb", "practice/algo-compose/vigenere.ipynb", "practice/exams.rst", "practice/exams/interro_rapide_20_minutes_2014_09.ipynb", "practice/exams/interro_rapide_20_minutes_2014_10.ipynb", "practice/exams/interro_rapide_20_minutes_2014_11.ipynb", "practice/exams/interro_rapide_20_minutes_2014_12.ipynb", "practice/exams/interro_rapide_20_minutes_2015_09.ipynb", "practice/exams/interro_rapide_20_minutes_2015_11.ipynb", "practice/exams/td_note_2013_bout_de_code_coloriage.ipynb", "practice/exams/td_note_2013_coloriage_correction.ipynb", "practice/exams/td_note_2015.ipynb", "practice/exams/td_note_2015_rattrapage_enonce.ipynb", "practice/exams/td_note_2016.ipynb", "practice/exams/td_note_2017.ipynb", "practice/exams/td_note_2017_2.ipynb", "practice/exams/td_note_2018_1.ipynb", "practice/exams/td_note_2018_2.ipynb", "practice/exams/td_note_2019_1.ipynb", "practice/exams/td_note_2019_2.ipynb", "practice/exams/td_note_2020_1.ipynb", "practice/exams/td_note_2020_2.ipynb", "practice/exams/td_note_2021.ipynb", "practice/exams/td_note_2022.ipynb", "practice/exams/td_note_2022_rattrapage.ipynb", "practice/exams/td_note_2022_rattrapage2.ipynb", "practice/exams/td_note_2023.ipynb", "practice/index_algo.rst", "practice/index_exam.rst", "practice/index_python.rst", "practice/py-base/classe_de.ipynb", "practice/py-base/classe_iterateur.ipynb", "practice/py-base/classe_permutation.ipynb", "practice/py-base/classe_tree.ipynb", "practice/py-base/classes_2048.ipynb", "practice/py-base/classes_metro.ipynb", "practice/py-base/code_liste_tuple.ipynb", "practice/py-base/code_multinomial.ipynb", "practice/py-base/coloriage_carre.ipynb", "practice/py-base/de_rotation.ipynb", "practice/py-base/exercice_hash.ipynb", "practice/py-base/exercice_json_xml.ipynb", "practice/py-base/exercice_pi.ipynb", "practice/py-base/exercice_regex.ipynb", "practice/py-base/exercice_serialisation_json.ipynb", "practice/py-base/histogramme_rapide.ipynb", "practice/py-base/nbheap.ipynb", "practice/py-base/pivot_gauss.ipynb", "practice/py-base/profile_gini.ipynb", "practice/py-base/profiling_conv.ipynb", "practice/py-base/profiling_example.ipynb", "practice/py-base/recherche_dichotomique.ipynb", "practice/py-base/scrapping.ipynb", "practice/py-base/structures_donnees_conversion.ipynb", "practice/py-base/tableau_contingence.ipynb", "practice/py-base/tests_unitaires.ipynb", "practice/py-base/tri_nlnd.ipynb", "practice/tds-algo/gentry_integer_encryption.ipynb", "practice/tds-algo/gentry_integer_encryption_correction.ipynb", "practice/tds-algo/knn_high_dimension.ipynb", "practice/tds-algo/knn_high_dimension_correction.ipynb", "practice/tds-algo/plus_court_chemin.ipynb", "practice/tds-algo/plus_court_chemin_correction.ipynb", "practice/tds-algo/puzzle_algo_1.ipynb", "practice/tds-algo/puzzle_algo_1_correction.ipynb", "practice/tds-algo/puzzle_algo_2.ipynb", "practice/tds-algo/puzzle_algo_2_correction.ipynb", "practice/tds-base/classes_carre_magique.ipynb", "practice/tds-base/classes_carre_magique_correction.ipynb", "practice/tds-base/classes_heritage.ipynb", "practice/tds-base/classes_heritage_correction.ipynb", "practice/tds-base/dictionnaire_vigenere.ipynb", "practice/tds-base/dictionnaire_vigenere_correction.ipynb", "practice/tds-base/integrale_rectangle.ipynb", "practice/tds-base/integrale_rectangle_correction.ipynb", "practice/tds-base/j2048.ipynb", "practice/tds-base/j2048_correction.ipynb", "practice/tds-base/module_file_regex.ipynb", "practice/tds-base/module_file_regex_correction.ipynb", "practice/tds-base/premiers_pas.ipynb", "practice/tds-base/premiers_pas_correction.ipynb", "practice/tds-base/pyramide_bigarree.ipynb", "practice/tds-base/pyramide_bigarree_correction.ipynb", "practice/tds-base/texte_langue.ipynb", "practice/tds-base/texte_langue_correction.ipynb", "practice/tds-base/variable_boucle_tests.ipynb", "practice/tds-base/variable_boucle_tests_correction.ipynb", "py/c_classes/classes.rst", "py/c_classes/index.rst", "py/c_classes/questions.rst", "py/c_exception/exception.rst", "py/c_exception/exception_ext.rst", "py/c_exception/index.rst", "py/c_exception/warning.rst", "py/c_gui/index.rst", "py/c_gui/tkinter.rst", "py/c_lang/collections.rst", "py/c_lang/constructions.rst", "py/c_lang/dates.rst", "py/c_lang/encoding.rst", "py/c_lang/index.rst", "py/c_lang/syntaxe.rst", "py/c_lang/types.rst", "py/c_module/files.rst", "py/c_module/index.rst", "py/c_module/module.rst", "py/c_module/serialization.rst", "py/c_parallelisation/index.rst", "py/c_parallelisation/thread.rst", "py/c_regex/index.rst", "py/c_regex/regex.rst", "py/index.rst"], "titles": ["Change Logs", "Survol algorithmique", "examples.construction_classique", "faq", "Code inclus dans cette librairie", "examples.numpysex", "teachpyx.practice.rues_paris", "tools", "2022-11-31 : rappel feuille de route 2022", "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)", "2023-08-03 : Code Jam", "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne", "2023-09-06 : ENSAE", "2023-11-31 : rappel feuille de route 2023", "Collections d\u2019articles p\u00e9rissables", "Gallerie d\u2019exemples", "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution", "Float Conversion", "Le GIL", "Hypercube et autres exercices", "Astuces avec les lambda functions", "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations", "Points d\u2019impl\u00e9mentation avec numpy", "Pandas et groupby", "Parties de dames", "S\u00e9rialisation", "S\u00e9rialisation avec protobuf", "Exercices expliqu\u00e9s de programmation", "R\u00e9flexions autour du voyage de commerce (TSP)", "Computation times", "Dataframes", "Matrices et DataFrames", "Calcul matriciel", "Calcul Matriciel, Optimisation", "DataFrame et Graphes", "Calcul matriciel avec numpy (version courte)", "Manipulation de donn\u00e9es avec pandas (version courte)", "Numpy et tableau de contingence", "Quelques conseils pour \u00e9crire un programme", "Pr\u00e9cis", "Cheat sheet: Python", "Syntaxes et d\u00e9finitions", "FAQ", "En diagonal", "Apprendre la programmation avec Python", "Introduction", "License", "Tous les notebooks", "Algorithmes de streaming, BJKST", "Graphe et Composantes connexes", "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.", "Distance d\u2019\u00e9dition", "Distance entre deux mots de m\u00eame longueur et tests unitaires", "Probl\u00e8me d\u2019ordonnancement", "La sous-s\u00e9quence de plus grande somme", "Graphes al\u00e9atoires", "Simulation COVID", "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)", "Jeux de dictionnaires, plus grand suffixe commun", "Les k premiers \u00e9l\u00e9ments (top k)", "TSP - Traveling Salesman Problem", "Calculer x**n le plus rapidement possible", "Produit matriciel avec une matrice creuse", "Apart\u00e9 sur le voyageur de commerce", "D\u00e9coder du Morse sans espaces", "Parcourir les rues de Paris", "Casser le code de Vigen\u00e8re", "Exercices minut\u00e9s", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015", "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015", "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)", "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)", "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014", "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)", "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015", "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016", "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)", "1A.e - Enonc\u00e9 23 octobre 2018 (1)", "1A.e - Enonc\u00e9 23 octobre 2018 (2)", "1A.e - Enonc\u00e9 22 octobre 2019 (1)", "1A.e - Enonc\u00e9 22 octobre 2019 (2)", "1A - Enonc\u00e9 24 novembre 2020", "1A - Enonc\u00e9 3 novembre 2021", "1A - Enonc\u00e9 15 novembre 2021 - rattrapage", "1A - Enonc\u00e9 3 mars 2022- rattrapage", "1A - Enonc\u00e9 26 octobre 2022", "Algorithmes", "S\u00e9ances minut\u00e9es", "Exercices sur le langage python", "Jeu de d\u00e9, rotation sur un circuit (classes)", "It\u00e9rateur", "Classe Permutation et d\u00e9composition en transitions", "Une classe pour repr\u00e9senter un arbre", "2048 et les classes", "Un bref aper\u00e7u des classes", "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations", "Simuler une loi multinomiale", "Jeux de coloriage", "Jeu de d\u00e9, rotation sur un circuit", "R\u00e9partition, table de hashage", "JSON - XML", "Calculs de surface et autres calculs", "Expressions r\u00e9guli\u00e8res", "S\u00e9rialisation avec JSON, XML, pickle", "Histogramme et dictionnaire", "Heap", "Pivot de gauss avec numpy", "Profiling la fonction Gini", "Profiling, application \u00e0 la convolution", "Exemple de profiling", "Recherche dichotomique", "Web-Scraping - pokemon", "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre", "Calculer un chi 2 sur un tableau de contingence", "Tests unitaires", "Tri plus rapide que pr\u00e9vu", "Cryptage homomorphic de Craig Gentry", "Cryptage homomorphic de Craig Gentry - correction", "Plus proches voisins en grande dimension", "2A.algo - Plus proches voisins en grande dimension - correction", "Programmation dynamique et plus court chemin", "Programmation dynamique et plus court chemin (correction)", "Puzzles algorithmiques (1)", "Puzzles algorithmes (1) - correction", "Puzzles algorithmiques (2)", "Puzzles algorithmes (2) - correction", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)", "Classes, h\u00e9ritage", "Classes, h\u00e9ritage (correction)", "Dictionnaires, fonctions, code de Vigen\u00e8re", "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)", "Int\u00e9grale et la m\u00e9thode des rectangles", "Int\u00e9grale et la m\u00e9thode des rectangles - correction", "2048 - strat\u00e9gie gagnante", "2048 - strat\u00e9gie gagnante - correction", "Modules, fichiers, expressions r\u00e9guli\u00e8res", "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)", "Premiers pas en Python", "Premiers pas en Python (correction)", "Tracer une pyramide bigarr\u00e9e", "Tracer une pyramide bigarr\u00e9e - correction", "Deviner la langue d\u2019un texte", "Deviner la langue d\u2019un texte (correction)", "Variables, boucles, tests", "Variables, boucles, tests (correction)", "Classes", "Classes", "Questions", "Exceptions", "Usage", "Exceptions", "Warning et logging", "Interfaces graphiques", "tkinter", "Constructions classiques", "Constructions classiques", "Dates", "Encoding et jeux de caract\u00e8res", "Variables et fonctions", "Syntaxe du langage Python (boucles, tests, fonctions)", "Types et variables du langage python", "Fichiers", "Entr\u00e9es, Sorties, Modules", "Module ou extension", "S\u00e9rialisation", "Parall\u00e9lisation", "Threads", "Expressions r\u00e9guli\u00e8res", "Expressions r\u00e9guli\u00e8res", "Le langage Python"], "terms": {"24": [0, 16, 22, 33, 34, 35, 36, 37, 40, 48, 54, 55, 56, 59, 66, 67, 69, 70, 76, 78, 80, 81, 85, 86, 88, 106, 114, 118, 125, 132, 136, 139, 142, 143, 150, 163], "25": [0, 7, 16, 27, 33, 34, 35, 36, 48, 49, 55, 56, 59, 65, 66, 70, 76, 78, 79, 81, 85, 86, 88, 106, 107, 114, 115, 118, 119, 125, 132, 136, 139, 142, 143, 145, 150, 152, 156, 163], "26": [0, 33, 34, 35, 36, 37, 40, 48, 55, 56, 59, 60, 64, 65, 66, 67, 69, 70, 76, 78, 84, 85, 86, 88, 96, 105, 106, 114, 118, 121, 125, 132, 136, 137, 139, 142, 149, 152, 156, 163], "27": [0, 2, 33, 34, 35, 36, 37, 48, 55, 59, 65, 67, 70, 76, 80, 83, 85, 86, 87, 88, 96, 106, 114, 118, 132, 136, 139, 152, 162, 163], "28": [0, 21, 33, 34, 35, 36, 37, 40, 48, 55, 59, 65, 70, 76, 80, 83, 85, 86, 87, 88, 96, 106, 109, 114, 117, 125, 132, 136, 139, 142, 143, 145, 163], "29": [0, 33, 34, 35, 36, 37, 48, 55, 65, 70, 76, 78, 80, 85, 87, 88, 96, 106, 114, 124, 132, 136, 142, 143, 163, 166], "30": [0, 16, 22, 28, 33, 34, 35, 36, 48, 55, 56, 65, 66, 70, 76, 78, 79, 87, 88, 96, 103, 106, 112, 114, 136, 142, 143, 149, 150, 160, 163, 167, 175], "31": [0, 12, 14, 22, 33, 34, 35, 36, 48, 65, 70, 76, 84, 87, 88, 96, 106, 113, 114, 136, 139, 143, 150, 152, 163, 166], "32": [0, 2, 17, 22, 33, 34, 35, 36, 48, 54, 55, 61, 65, 70, 76, 96, 99, 105, 106, 114, 115, 118, 124, 143, 150, 162, 167, 168], "33": [0, 22, 33, 34, 35, 36, 54, 70, 76, 84, 90, 96, 105, 106, 114, 124, 136, 139, 150], "34": [0, 22, 33, 34, 35, 36, 50, 55, 58, 65, 70, 72, 76, 78, 80, 89, 106, 108, 109, 114, 136, 143, 149, 150, 152], "35": [0, 17, 33, 34, 35, 36, 42, 48, 65, 70, 76, 96, 99, 102, 114, 121, 136, 143, 149], "36": [0, 33, 36, 37, 65, 76, 84, 114, 136, 143, 145, 163, 167], "ajout": [0, 2, 3, 6, 19, 27, 33, 34, 35, 40, 41, 42, 45, 52, 54, 56, 59, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 81, 83, 84, 85, 86, 88, 90, 95, 101, 106, 109, 114, 116, 118, 121, 132, 133, 135, 137, 141, 142, 144, 145, 149, 150, 153, 154, 155, 156, 160, 163, 167, 171, 173, 175], "exercic": [0, 1, 10, 12, 15, 24, 29, 30, 32, 37, 61, 77, 92, 93, 109, 117, 146, 147, 152, 166], "exist": [0, 1, 2, 3, 16, 24, 25, 28, 33, 34, 35, 36, 38, 40, 42, 45, 49, 54, 55, 56, 60, 61, 63, 65, 73, 91, 95, 96, 97, 109, 114, 118, 119, 121, 126, 127, 129, 130, 131, 132, 136, 142, 143, 145, 150, 152, 155, 156, 160, 162, 164, 166, 167, 168, 170, 171, 172, 173], "22": [0, 9, 16, 22, 33, 34, 35, 36, 37, 48, 55, 56, 59, 65, 67, 70, 73, 76, 78, 79, 81, 84, 87, 88, 106, 114, 117, 118, 119, 124, 125, 132, 136, 139, 142, 150, 156, 163, 167, 175], "exempl": [0, 2, 3, 16, 19, 26, 27, 28, 34, 38, 40, 42, 43, 44, 45, 48, 52, 57, 64, 66, 69, 72, 73, 76, 78, 81, 82, 85, 86, 91, 94, 96, 101, 105, 113, 117, 118, 120, 121, 126, 128, 131, 132, 134, 136, 138, 142, 143, 146, 147, 150, 156, 157, 160, 161, 162, 163, 164, 171, 173], "mathador": [0, 15, 29], "21": [0, 1, 16, 22, 33, 35, 36, 48, 50, 55, 56, 59, 67, 70, 72, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 103, 106, 112, 113, 114, 118, 125, 132, 136, 139, 142, 145, 150, 163, 166, 175], "refactoring": 0, "L": [1, 2, 3, 9, 11, 15, 19, 24, 26, 27, 29, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 64, 65, 70, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 102, 103, 105, 109, 114, 116, 120, 121, 125, 126, 127, 131, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 173, 175], "part": [1, 2, 5, 13, 15, 16, 19, 21, 27, 28, 29, 32, 34, 38, 40, 41, 45, 48, 54, 55, 56, 57, 58, 59, 60, 65, 70, 77, 78, 79, 81, 82, 84, 85, 86, 87, 91, 96, 99, 102, 109, 113, 114, 116, 118, 120, 121, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 141, 142, 143, 148, 149, 152, 155, 156, 160, 162, 163, 166, 167, 168, 170, 171, 173, 175], "math\u00e9mat": [1, 2, 12, 34, 40, 45, 56, 70, 98, 109, 152, 162, 166, 167, 170], "On": [1, 2, 3, 6, 16, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 38, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 163, 166, 167, 168, 170, 171, 173, 175], "toujour": [1, 2, 3, 5, 19, 25, 28, 33, 34, 35, 38, 40, 41, 42, 45, 48, 50, 52, 55, 56, 58, 59, 65, 68, 71, 78, 88, 89, 96, 98, 100, 103, 109, 113, 116, 118, 125, 132, 134, 136, 137, 142, 143, 148, 149, 152, 154, 155, 156, 160, 162, 166, 167, 168, 170, 173, 175], "\u00e9tat": [1, 3, 34, 42, 62, 71, 77, 78, 103, 144, 160, 166, 173], "initial": [1, 6, 28, 33, 34, 48, 59, 65, 78, 104, 109, 114, 118, 121, 128, 137, 142, 156, 168, 170], "arriv": [1, 2, 16, 20, 34, 50, 54, 56, 65, 70, 96, 143, 144, 152, 155, 156, 160, 162, 166, 167, 168, 173], "apres": [1, 2, 6, 16, 18, 24, 27, 28, 34, 38, 40, 42, 55, 59, 62, 64, 70, 71, 76, 77, 78, 83, 84, 85, 86, 88, 105, 107, 109, 126, 134, 136, 142, 143, 152, 156, 160, 166, 167, 168, 170, 173, 175], "ser": [1, 2, 3, 19, 24, 25, 32, 40, 42, 48, 52, 54, 59, 64, 65, 70, 76, 78, 79, 87, 91, 97, 105, 116, 127, 132, 137, 139, 143, 144, 148, 150, 152, 155, 156, 158, 160, 162, 166, 167, 168, 170, 173], "oper": [1, 2, 3, 12, 15, 17, 27, 29, 36, 42, 69, 72, 76, 91, 94, 114, 118, 121, 122, 123, 143, 144, 145, 150, 153, 155, 160, 162, 163, 167, 168, 171], "connu": [1, 33, 45, 48, 54, 55, 56, 65, 120, 137, 150, 152, 160, 166, 168], "final": [1, 34, 36, 40, 48, 62, 76, 79, 80, 99, 114, 117, 118, 152, 158, 166, 167, 170, 173, 175], "Cette": [1, 2, 3, 27, 34, 40, 41, 42, 45, 48, 51, 56, 62, 64, 65, 66, 69, 70, 71, 78, 95, 97, 102, 105, 107, 111, 114, 118, 134, 143, 148, 152, 155, 156, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173], "d\u00e9pend": [1, 19, 27, 34, 40, 45, 53, 56, 58, 62, 71, 78, 102, 103, 105, 107, 109, 118, 125, 132, 136, 137, 150, 152, 158, 163, 166, 167, 170, 173], "Elle": [1, 2, 3, 26, 35, 36, 38, 40, 41, 42, 45, 50, 54, 65, 68, 80, 96, 102, 109, 111, 114, 115, 118, 126, 129, 134, 136, 139, 152, 160, 166, 168, 170, 171, 173, 175], "peut": [1, 2, 3, 5, 6, 11, 16, 19, 24, 25, 26, 27, 28, 33, 34, 35, 36, 38, 40, 41, 42, 45, 48, 49, 50, 54, 55, 56, 57, 58, 59, 62, 64, 65, 69, 70, 72, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 116, 118, 119, 120, 121, 126, 127, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 150, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 173, 175], "inclur": [1, 25, 40, 54, 114, 152, 154, 160, 166, 167, 170, 175], "al\u00e9atoir": [1, 19, 32, 34, 35, 48, 54, 56, 59, 62, 77, 80, 85, 86, 92, 102, 119, 122, 123, 125, 126, 139, 141, 142, 152, 170, 173], "parl": [1, 28, 33, 64, 96, 143, 171], "lorsqu": [1, 2, 3, 19, 24, 25, 27, 28, 33, 34, 36, 38, 40, 41, 42, 45, 48, 51, 52, 53, 59, 60, 61, 64, 68, 70, 76, 78, 80, 81, 96, 97, 100, 102, 109, 114, 115, 116, 118, 127, 132, 133, 134, 136, 142, 144, 148, 150, 151, 152, 155, 156, 158, 162, 164, 166, 167, 168, 170, 171, 173, 175], "d\u00e9montr": [1, 27, 126], "s\u00e9quenc": [1, 19, 48, 49, 51, 55, 64, 92, 109, 121, 122, 123, 126, 131, 142, 149, 150, 164, 166, 171, 173, 175], "produit": [1, 2, 3, 5, 25, 28, 32, 33, 40, 42, 49, 70, 71, 73, 81, 82, 83, 84, 92, 95, 97, 114, 134, 135, 145, 150, 152, 154, 155, 156, 158, 160, 162, 166, 168, 171, 173], "men": [1, 27, 78, 81, 82, 105, 143, 152, 160, 173], "souhait": [1, 2, 3, 19, 20, 24, 33, 34, 40, 42, 50, 52, 54, 55, 59, 65, 73, 76, 78, 80, 81, 82, 89, 91, 97, 99, 103, 105, 113, 120, 126, 128, 129, 132, 134, 136, 139, 140, 142, 143, 150, 152, 156, 158, 160, 162, 166, 167, 168, 170], "Il": [1, 2, 3, 9, 10, 11, 16, 19, 21, 23, 24, 25, 26, 27, 33, 34, 35, 36, 38, 40, 41, 42, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 101, 103, 104, 105, 108, 109, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 175], "grand": [1, 6, 8, 10, 11, 19, 27, 28, 33, 34, 35, 36, 38, 40, 45, 49, 50, 56, 59, 60, 62, 65, 66, 70, 71, 76, 77, 78, 79, 81, 82, 86, 89, 91, 92, 97, 101, 102, 108, 111, 113, 114, 118, 137, 139, 142, 143, 150, 152, 154, 155, 160, 164, 166, 167, 168, 170, 173, 175], "variet": [1, 36, 142], "d\u00e9j\u00e0": [1, 28, 33, 34, 40, 41, 45, 55, 59, 64, 65, 83, 84, 88, 121, 136, 142, 143, 150, 152, 155, 166, 167, 168, 170, 171, 173, 175], "r\u00e9solus": [1, 160], "util": [1, 19, 27, 33, 34, 38, 40, 52, 56, 59, 63, 80, 91, 92, 95, 98, 108, 124, 134, 136, 142, 152, 155, 158, 160, 166, 167, 168, 173], "conna\u00eetr": [1, 2, 3, 40, 42, 50, 62, 65, 89, 152, 160, 161, 162, 167, 168, 175], "C": [1, 2, 3, 5, 7, 11, 18, 21, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 70, 73, 76, 78, 79, 81, 84, 85, 86, 89, 91, 95, 96, 97, 98, 102, 103, 105, 106, 107, 109, 113, 114, 115, 116, 118, 121, 122, 123, 124, 126, 127, 128, 129, 132, 136, 137, 139, 141, 142, 143, 148, 150, 152, 153, 155, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 175], "aut": [1, 40, 52, 55, 69, 76, 80, 81, 89, 127, 132, 134, 136, 137, 152, 160, 166, 167, 168, 173], "outil": [1, 40, 45, 49, 95, 106, 114, 124, 142, 143, 152, 155], "disponibl": [1, 9, 25, 34, 35, 36, 40, 44, 45, 65, 79, 87, 101, 143, 152, 160, 167, 170], "cr\u00e9": [1, 3, 5, 18, 22, 25, 27, 32, 33, 36, 40, 41, 42, 45, 49, 53, 55, 56, 62, 65, 68, 70, 76, 85, 86, 96, 97, 99, 118, 120, 121, 124, 125, 126, 132, 134, 136, 137, 141, 143, 149, 150, 152, 155, 158, 166, 167, 168, 173], "propr": [1, 3, 25, 27, 33, 35, 36, 40, 42, 55, 64, 152, 157, 158, 160, 166, 167, 171, 173], "Qu": [1, 28, 65, 102, 120, 124, 139, 150], "raison": [1, 5, 19, 28, 36, 38, 40, 42, 68, 70, 73, 76, 78, 91, 125, 127, 132, 143, 148, 150, 152, 160, 166], "fair": [1, 2, 3, 25, 26, 27, 31, 33, 34, 35, 38, 40, 41, 42, 45, 48, 49, 50, 52, 53, 56, 57, 59, 60, 62, 64, 65, 67, 73, 78, 79, 81, 82, 83, 84, 88, 95, 97, 100, 102, 103, 108, 109, 113, 114, 118, 119, 121, 125, 126, 129, 134, 139, 141, 142, 143, 144, 145, 149, 150, 152, 155, 156, 160, 162, 163, 164, 166, 167, 168, 170, 172, 173, 175], "suppos": [1, 2, 6, 24, 36, 40, 45, 50, 53, 54, 56, 59, 60, 64, 65, 66, 69, 76, 78, 79, 80, 81, 82, 87, 88, 89, 91, 103, 107, 116, 118, 120, 121, 126, 127, 128, 134, 137, 139, 152, 160, 162, 166, 167, 168, 173], "dispos": [1, 40, 65, 76, 78, 79, 80, 85, 86, 91, 113, 126, 128, 132, 152, 156, 160, 167, 168, 170], "seul": [1, 2, 9, 11, 16, 19, 24, 33, 34, 35, 36, 40, 45, 48, 49, 55, 56, 58, 59, 63, 64, 65, 70, 73, 80, 83, 84, 87, 91, 96, 98, 102, 106, 107, 109, 118, 125, 128, 132, 133, 134, 136, 137, 142, 143, 144, 150, 152, 155, 160, 162, 164, 166, 167, 168, 170, 171, 173, 175], "machin": [1, 5, 12, 35, 42, 44, 45, 59, 63, 103, 106, 114, 173], "La": [1, 2, 3, 9, 19, 20, 24, 25, 27, 28, 31, 33, 34, 38, 40, 41, 42, 45, 48, 50, 51, 52, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 95, 96, 97, 99, 100, 102, 104, 106, 107, 108, 109, 111, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 132, 133, 134, 136, 138, 141, 142, 143, 144, 145, 148, 150, 151, 152, 155, 156, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 175], "m\u00e9moir": [1, 3, 5, 25, 33, 35, 36, 42, 48, 50, 106, 109, 142, 152, 160, 161, 164, 166, 167, 168, 171], "plus": [1, 2, 5, 8, 9, 10, 11, 12, 16, 18, 19, 20, 21, 23, 24, 25, 27, 33, 34, 35, 36, 37, 38, 40, 44, 45, 49, 50, 51, 55, 56, 57, 60, 64, 65, 66, 68, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 85, 86, 87, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 114, 115, 118, 122, 123, 128, 134, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 157, 158, 160, 161, 162, 164, 166, 167, 170, 171, 172], "Le": [1, 2, 3, 5, 12, 15, 16, 19, 20, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 91, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 175], "temp": [1, 2, 3, 10, 18, 25, 27, 28, 33, 34, 35, 36, 42, 45, 53, 55, 56, 63, 65, 69, 70, 73, 75, 78, 80, 81, 82, 88, 101, 103, 106, 110, 113, 115, 118, 121, 124, 125, 131, 132, 133, 140, 141, 142, 143, 144, 147, 150, 152, 155, 160, 162, 166, 167, 168, 170, 171, 173, 175], "calcul": [1, 3, 5, 6, 8, 12, 18, 20, 28, 31, 34, 36, 37, 39, 42, 45, 51, 52, 53, 55, 57, 58, 59, 65, 66, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 94, 96, 98, 102, 103, 105, 109, 113, 114, 115, 118, 121, 122, 123, 125, 126, 127, 128, 129, 136, 142, 144, 145, 152, 154, 155, 160, 163, 166, 167, 168, 170, 172, 173], "leqsl": [1, 17, 50, 54, 69, 80, 107, 126, 127, 128, 129, 130, 131, 139], "10": [1, 2, 3, 5, 6, 7, 9, 16, 17, 19, 22, 23, 24, 27, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 102, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 160, 161, 162, 163, 166, 167, 168, 170, 173, 175], "o": [1, 2, 5, 7, 21, 25, 27, 28, 32, 34, 35, 52, 54, 58, 59, 60, 63, 64, 68, 69, 70, 76, 79, 81, 82, 85, 86, 88, 91, 102, 108, 111, 116, 121, 122, 123, 125, 126, 137, 139, 143, 149, 151, 152, 160, 166, 167, 171], "2": [1, 2, 3, 5, 6, 7, 11, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 38, 40, 42, 48, 49, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 65, 66, 67, 71, 74, 75, 80, 81, 83, 85, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 120, 121, 124, 125, 128, 129, 138, 139, 146, 147, 148, 149, 151, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 173, 175], "15": [1, 7, 19, 27, 28, 33, 34, 35, 36, 48, 52, 54, 55, 56, 58, 59, 62, 64, 65, 67, 69, 70, 71, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 102, 103, 106, 110, 112, 113, 114, 117, 118, 121, 125, 126, 127, 132, 136, 139, 143, 145, 147, 149, 150, 151, 152, 160, 163, 167, 173, 175], "3": [1, 2, 3, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 40, 42, 44, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 138, 139, 141, 146, 147, 148, 149, 152, 154, 155, 158, 160, 161, 162, 163, 164, 166, 167, 168, 172, 173, 175], "7": [1, 2, 3, 7, 11, 17, 20, 23, 27, 28, 33, 34, 35, 37, 38, 40, 42, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 132, 133, 134, 137, 139, 141, 145, 148, 149, 152, 156, 161, 162, 163, 166, 167, 168, 173, 175], "ln": [1, 27, 33, 34, 54, 56, 58, 59, 68, 76, 81, 82, 102, 111, 121, 152], "8": [1, 2, 17, 19, 26, 27, 28, 33, 34, 35, 36, 37, 40, 42, 45, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 125, 132, 133, 139, 141, 142, 145, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 173, 175], "nombreux": [1, 16, 33, 34, 40, 45, 48, 49, 56, 97, 114, 132, 142, 152, 160, 166, 168, 170], "non": [1, 2, 3, 6, 7, 12, 16, 17, 18, 19, 21, 22, 24, 25, 33, 34, 35, 40, 42, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 68, 69, 70, 71, 76, 81, 82, 83, 84, 85, 86, 88, 89, 95, 96, 97, 98, 99, 101, 102, 103, 105, 109, 115, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 139, 142, 143, 152, 154, 155, 156, 158, 160, 161, 162, 168, 170, 171, 173, 175], "d\u00e9compos": [1, 2, 27, 61, 78, 97, 132, 137, 162], "comm": [1, 3, 9, 10, 16, 19, 24, 25, 27, 33, 34, 35, 36, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 68, 69, 70, 71, 72, 76, 78, 79, 80, 83, 84, 85, 86, 88, 91, 95, 96, 97, 98, 100, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 119, 125, 126, 132, 134, 136, 137, 138, 139, 140, 142, 143, 144, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 163, 164, 166, 167, 168, 170, 171, 173, 175], "suit": [1, 2, 13, 19, 20, 27, 33, 34, 36, 40, 41, 45, 48, 50, 52, 53, 55, 57, 60, 64, 65, 70, 71, 72, 78, 80, 81, 82, 83, 84, 88, 100, 102, 105, 107, 114, 115, 116, 119, 126, 136, 139, 142, 151, 152, 155, 156, 158, 160, 162, 164, 166, 167, 168, 170, 171, 173, 175], "alpha": [1, 6, 33, 36, 49, 64, 79, 83, 84, 85, 86, 127, 146, 147], "bet": [1, 33, 36, 56, 57, 80, 170], "1": [1, 2, 3, 5, 6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 38, 40, 42, 44, 45, 48, 49, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 66, 67, 74, 82, 84, 86, 90, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 138, 139, 145, 146, 147, 148, 149, 151, 154, 155, 156, 158, 160, 161, 162, 163, 164, 167, 168, 171, 173, 175], "chaqu": [1, 2, 3, 6, 16, 18, 19, 20, 24, 27, 33, 34, 35, 36, 38, 40, 41, 42, 45, 48, 49, 52, 53, 54, 55, 56, 57, 60, 64, 65, 66, 69, 70, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 96, 97, 102, 105, 106, 108, 109, 113, 114, 115, 116, 122, 123, 126, 127, 128, 132, 136, 137, 139, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 164, 166, 167, 168, 170, 173, 175], "term": [1, 19, 40, 41, 54, 83, 84, 99, 121, 125, 152, 166, 167, 168, 171, 173, 175], "correspond": [1, 3, 33, 34, 40, 42, 48, 49, 54, 56, 70, 71, 76, 78, 79, 81, 82, 116, 126, 127, 142, 150, 152, 155, 156, 160, 163, 164, 166, 167, 168, 170, 175], "in": [1, 2, 3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 33, 34, 36, 37, 38, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 163, 166, 167, 168, 170, 172, 173, 175], "mathbb": [1, 17, 33, 48, 79, 80, 81, 82, 83, 84, 107, 122, 123, 128, 139], "N": [1, 27, 28, 33, 34, 35, 48, 49, 52, 55, 56, 57, 58, 64, 69, 70, 76, 83, 84, 85, 86, 87, 91, 101, 102, 103, 107, 119, 126, 127, 128, 130, 131, 137, 139, 143, 144, 160, 166], "probem": 1, "combinatoir": [1, 126], "r\u00e9sum": [1, 2, 34, 40, 41, 78, 152, 155, 162, 166, 167, 173, 175], "quadrat": [1, 80, 127], "cel": [1, 2, 3, 5, 9, 16, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 36, 38, 40, 41, 42, 45, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 75, 76, 78, 79, 81, 82, 83, 84, 88, 89, 91, 97, 98, 99, 100, 102, 103, 104, 106, 109, 110, 113, 114, 117, 118, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 141, 142, 143, 144, 147, 148, 150, 151, 152, 154, 155, 156, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 173, 175], "d\u00fb": [1, 68], "programm": [1, 2, 3, 12, 15, 16, 19, 21, 24, 26, 28, 29, 33, 34, 39, 42, 45, 52, 54, 56, 64, 68, 69, 70, 71, 72, 73, 76, 79, 81, 82, 89, 100, 101, 103, 113, 114, 115, 118, 120, 132, 136, 142, 143, 144, 145, 148, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 171, 173, 175], "dynam": [1, 12, 54, 56, 64, 152, 167], "dan": [1, 2, 3, 6, 11, 12, 16, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 38, 41, 42, 43, 44, 45, 48, 49, 52, 54, 55, 56, 58, 59, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 137, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 158, 159, 161, 162, 163, 164, 166, 167, 170, 171, 173, 175], "plupart": [1, 2, 3, 34, 42, 65, 69, 80, 106, 109, 116, 132, 134, 139, 148, 150, 152, 155, 156, 158, 160, 162, 167, 168, 170, 173], "cas": [1, 2, 3, 16, 19, 20, 24, 26, 27, 28, 33, 34, 35, 40, 41, 42, 45, 52, 54, 55, 56, 59, 62, 64, 65, 66, 70, 73, 76, 77, 78, 79, 80, 81, 83, 84, 87, 89, 97, 98, 102, 107, 114, 115, 116, 118, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 134, 136, 137, 139, 140, 141, 142, 143, 145, 150, 152, 155, 156, 162, 166, 168, 169, 171, 173, 175], "obtient": [1, 5, 32, 33, 50, 76, 80, 81, 82, 83, 84, 88, 137, 152, 163, 166], "avoir": [1, 2, 16, 24, 34, 38, 40, 41, 42, 45, 49, 53, 56, 64, 65, 70, 78, 83, 87, 102, 105, 106, 126, 134, 136, 137, 143, 144, 148, 152, 155, 156, 158, 160, 162, 166, 167, 168, 170, 171, 173], "transform": [1, 2, 3, 5, 32, 35, 42, 55, 56, 57, 58, 62, 64, 69, 78, 79, 80, 82, 105, 114, 118, 125, 141, 162, 164, 166, 168], "form": [1, 2, 16, 19, 24, 33, 34, 36, 40, 45, 53, 69, 74, 75, 85, 86, 89, 106, 109, 118, 126, 127, 128, 130, 131, 132, 142, 143, 152, 155, 158, 160, 166, 167, 168, 170, 171, 173, 175], "r\u00e9current": [1, 19, 50, 54, 55, 59, 76, 88, 106, 126, 152, 160], "\u00e9crit": [1, 3, 19, 27, 28, 33, 38, 40, 42, 45, 67, 80, 81, 82, 83, 96, 97, 100, 103, 105, 109, 113, 120, 134, 141, 142, 144, 148, 150, 152, 155, 158, 160, 161, 164, 166, 167, 168, 170, 171, 173, 175], "faut": [1, 2, 3, 16, 19, 21, 24, 25, 26, 27, 33, 34, 35, 36, 38, 40, 42, 44, 45, 48, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 69, 70, 72, 76, 78, 81, 82, 83, 84, 87, 89, 91, 97, 98, 100, 101, 104, 105, 108, 109, 113, 114, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 158, 160, 161, 162, 164, 166, 167, 168, 170, 171, 173, 175], "solut": [1, 16, 20, 21, 24, 27, 28, 33, 34, 36, 38, 40, 57, 60, 63, 73, 76, 77, 78, 80, 83, 85, 86, 88, 89, 92, 103, 104, 108, 109, 126, 127, 133, 134, 152, 155, 160, 166, 167, 168, 171, 173], "\u00e9l\u00e9ment": [1, 2, 3, 5, 8, 12, 19, 25, 27, 32, 34, 35, 38, 40, 41, 42, 49, 54, 55, 58, 67, 69, 70, 71, 73, 76, 80, 81, 82, 92, 95, 96, 97, 109, 111, 113, 116, 117, 118, 120, 121, 125, 133, 137, 141, 144, 150, 151, 152, 155, 156, 160, 161, 162, 167, 168, 170, 171, 173, 175], "sach": [1, 16, 64, 137, 152, 175], "conna\u00eet": [1, 45, 56, 59, 85, 86, 149, 152, 166, 170], "0": [1, 2, 3, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 163, 166, 167, 168, 170, 171, 173, 175], "dichotom": [1, 12, 59, 61, 65, 81, 83, 84, 94, 105, 137, 166], "coup": [1, 2, 34, 51, 54, 62, 65, 78, 81, 82, 120, 134, 141, 143, 160, 162, 167], "deux": [1, 3, 5, 6, 10, 11, 16, 19, 22, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 40, 42, 45, 48, 49, 50, 53, 54, 55, 56, 59, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 92, 97, 98, 99, 101, 102, 104, 106, 107, 111, 114, 116, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 158, 160, 163, 164, 166, 167, 168, 170, 171, 172, 173, 175], "iter": [1, 2, 6, 7, 13, 19, 28, 33, 40, 54, 55, 57, 59, 60, 61, 62, 65, 69, 72, 81, 82, 85, 86, 94, 97, 98, 115, 126, 127, 132, 139, 141, 145, 150, 151, 153, 162, 167, 171, 173], "tabl": [1, 8, 34, 43, 64, 76, 85, 86, 94, 103, 106, 117, 119, 136, 137, 142, 152, 160, 166, 167, 170], "hashag": [1, 8, 48, 94, 136, 137], "D\u00e8s": [1, 2, 42], "sort": [1, 2, 3, 7, 17, 24, 33, 35, 36, 40, 42, 45, 49, 52, 54, 56, 57, 59, 62, 64, 65, 68, 70, 76, 78, 79, 81, 82, 85, 86, 87, 92, 95, 96, 102, 107, 114, 121, 126, 127, 128, 132, 136, 139, 143, 145, 151, 152, 155, 158, 160, 162, 164, 166, 167, 168, 170, 173, 176], "puissanc": [1, 12, 40, 61, 76, 155, 166, 167, 173], "entier": [1, 3, 5, 19, 24, 33, 34, 35, 36, 38, 40, 42, 45, 48, 49, 53, 54, 58, 59, 68, 70, 76, 81, 82, 96, 102, 116, 129, 130, 131, 136, 144, 145, 152, 154, 155, 160, 161, 163, 165, 166, 168], "attendr": [1, 18, 160, 173], "trivial": [1, 50], "tel": [1, 2, 12, 25, 34, 40, 49, 54, 55, 57, 65, 78, 79, 80, 81, 82, 97, 102, 107, 108, 109, 121, 122, 123, 126, 127, 128, 130, 131, 134, 136, 139, 142, 143, 145, 148, 152, 160, 162, 166, 167, 168, 170, 172, 175], "strassen": [1, 152], "multipl": [1, 5, 6, 27, 32, 33, 38, 40, 56, 66, 68, 70, 76, 78, 79, 107, 139, 154, 166], "matric": [1, 5, 8, 25, 27, 32, 33, 34, 36, 42, 44, 53, 56, 69, 74, 75, 76, 79, 80, 87, 92, 109, 114, 115, 119, 126, 127, 141, 142, 143, 152, 165, 168], "807": [1, 152], "celui": [1, 2, 3, 16, 18, 20, 24, 25, 27, 28, 34, 40, 42, 45, 64, 65, 78, 80, 81, 82, 97, 98, 117, 118, 126, 127, 132, 142, 143, 148, 150, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 173, 175], "marco": 1, "bodrato": 1, "a": [1, 2, 5, 7, 11, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174], "lik": [1, 17], "matrix": [1, 16, 35, 62], "suited": 1, "for": [1, 2, 3, 7, 9, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 163, 167, 168, 170, 173, 175], "squaring": 1, "and": [1, 3, 7, 16, 17, 19, 24, 25, 34, 40, 42, 46, 48, 49, 50, 51, 55, 56, 58, 59, 65, 70, 73, 74, 75, 76, 78, 80, 81, 82, 95, 99, 102, 104, 107, 111, 112, 114, 120, 130, 131, 132, 133, 137, 142, 149, 152, 156, 160, 166, 167, 168, 170, 171, 173], "high": 1, "pow": [1, 117], "comput": [1, 6, 114, 124], "minimal": [1, 33, 54, 65, 76, 89, 95], "tri": [1, 7, 12, 27, 34, 35, 40, 45, 64, 65, 68, 76, 80, 83, 84, 94, 105, 111, 116, 126, 127, 136, 137, 150, 151, 158, 166, 167], "g\u00e9ner": [1, 26, 32, 34, 35, 36, 40, 48, 69, 79, 80, 81, 82, 83, 84, 87, 102, 106, 141, 142, 148, 152, 155, 156, 160, 167, 170, 171, 173], "dir": [1, 2, 3, 19, 25, 27, 40, 42, 45, 48, 54, 58, 59, 64, 65, 69, 72, 73, 78, 83, 84, 107, 108, 118, 124, 125, 127, 132, 142, 143, 144, 148, 150, 151, 152, 156, 160, 164, 166, 167, 168, 170, 173, 175], "san": [1, 2, 19, 21, 24, 27, 33, 35, 36, 37, 40, 41, 45, 48, 52, 55, 59, 60, 62, 66, 68, 69, 73, 76, 83, 84, 87, 88, 91, 92, 95, 96, 103, 118, 119, 120, 125, 126, 134, 136, 143, 144, 148, 152, 155, 156, 158, 160, 162, 166, 167, 169, 170, 171, 172, 173, 175], "hypothes": [1, 126], "don": [1, 2, 3, 6, 8, 12, 16, 20, 24, 25, 26, 27, 28, 30, 31, 33, 39, 41, 42, 45, 48, 54, 55, 57, 58, 64, 68, 72, 74, 76, 78, 79, 84, 85, 86, 88, 97, 100, 104, 109, 114, 121, 124, 125, 132, 136, 137, 142, 143, 144, 149, 150, 152, 154, 155, 156, 160, 162, 163, 166, 167, 168, 169, 170, 173, 175], "En": [1, 2, 13, 18, 27, 32, 33, 34, 40, 41, 44, 45, 48, 54, 55, 61, 64, 71, 73, 76, 78, 80, 100, 102, 106, 108, 109, 115, 126, 127, 128, 133, 139, 143, 144, 150, 152, 155, 156, 158, 160, 162, 166, 167, 168, 170, 173], "revanch": [1, 40, 55, 87, 109, 144, 152, 155, 160, 166, 168, 173], "o\u00f9": [1, 2, 3, 10, 33, 34, 36, 40, 41, 42, 45, 49, 50, 52, 53, 54, 55, 58, 59, 65, 69, 71, 72, 78, 80, 81, 82, 83, 84, 89, 95, 96, 105, 106, 116, 121, 124, 125, 126, 128, 129, 132, 137, 139, 142, 143, 144, 150, 151, 152, 155, 158, 160, 162, 164, 166, 167, 168, 170, 171, 173, 175], "issu": [1, 17, 34, 36, 51, 55, 78, 87, 109, 126, 156, 168], "ensembl": [1, 2, 6, 16, 24, 25, 33, 34, 40, 41, 45, 48, 49, 51, 54, 55, 56, 58, 59, 60, 65, 69, 71, 79, 80, 81, 82, 83, 84, 85, 86, 89, 94, 95, 96, 97, 102, 106, 111, 118, 122, 123, 126, 128, 129, 132, 133, 136, 139, 142, 145, 152, 155, 156, 160, 161, 162, 164, 166, 168, 170, 171], "fin": [1, 2, 3, 13, 19, 26, 33, 34, 40, 41, 42, 45, 48, 52, 53, 58, 59, 60, 65, 72, 76, 78, 83, 84, 97, 98, 101, 102, 103, 107, 108, 109, 115, 116, 144, 145, 150, 151, 152, 160, 162, 167, 168, 170, 173, 175], "cardinal": [1, 48], "meilleur": [1, 2, 28, 34, 48, 50, 52, 53, 54, 60, 63, 65, 76, 78, 79, 83, 84, 85, 86, 89, 99, 107, 126, 127, 143, 148, 152, 167, 168], "revient": [1, 16, 19, 20, 65, 68, 70, 81, 95, 97, 104, 109, 121, 126, 137, 152, 167, 168, 171, 173], "histogramm": [1, 34, 79, 81, 82, 94, 121], "inf\u00e9rieur": [1, 2, 18, 19, 33, 49, 55, 59, 65, 70, 78, 79, 80, 116, 139, 150, 162, 166, 167], "inf": [1, 33, 59], "blog": [1, 14], "fast": [1, 17, 34, 172], "interesect": 1, "of": [1, 3, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 42, 46, 54, 56, 62, 70, 72, 73, 78, 81, 82, 84, 88, 91, 103, 106, 109, 110, 111, 113, 114, 115, 121, 124, 125, 130, 131, 133, 137, 139, 149, 152, 156, 160, 162, 166, 170, 171], "sorted": [1, 2, 55, 64, 65, 80, 102, 113, 121, 142, 149, 150, 162, 166], "list": [1, 2, 5, 6, 7, 12, 16, 20, 24, 25, 28, 33, 34, 36, 38, 48, 49, 54, 55, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 85, 88, 94, 95, 96, 97, 102, 104, 109, 110, 111, 113, 115, 116, 117, 121, 126, 127, 128, 130, 131, 132, 133, 137, 139, 141, 142, 143, 149, 151, 155, 156, 161, 162, 163, 171, 173, 175], "using": [1, 16, 36, 160, 173], "sse": 1, "instruct": [1, 2, 3, 9, 34, 36, 40, 42, 45, 54, 68, 70, 71, 81, 82, 114, 118, 136, 142, 144, 145, 150, 152, 158, 160, 162, 164, 167, 168, 170, 173], "simpl": [1, 2, 3, 16, 20, 21, 27, 34, 35, 36, 40, 42, 45, 48, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 68, 76, 78, 79, 83, 84, 86, 97, 106, 109, 111, 115, 116, 118, 124, 125, 126, 132, 133, 136, 139, 140, 141, 142, 143, 144, 148, 155, 158, 160, 162, 167, 168, 170, 171, 172, 175], "intersect": [1, 128, 167], "montr": [1, 27, 33, 40, 50, 52, 54, 58, 64, 80, 83, 84, 100, 115, 127, 130, 131, 132, 134, 136, 143, 151, 152, 155, 160, 161, 164, 166, 167, 168, 170, 173, 175], "comment": [1, 12, 16, 24, 25, 33, 34, 36, 38, 48, 53, 55, 56, 58, 62, 64, 65, 73, 81, 82, 84, 88, 106, 107, 109, 111, 114, 119, 124, 132, 133, 134, 136, 140, 141, 148, 152, 156, 160, 164, 166, 167, 168, 170, 171, 173, 175], "optimis": [1, 26, 31, 32, 35, 48, 59, 63, 64, 80, 91, 109, 113, 114, 115, 121, 126, 132, 133, 146, 147, 161, 167, 169], "impl\u00e9ment": [1, 2, 3, 5, 6, 15, 19, 28, 29, 33, 35, 36, 42, 45, 52, 59, 62, 65, 76, 77, 81, 82, 83, 84, 97, 98, 101, 102, 105, 107, 110, 112, 115, 116, 118, 121, 134, 149, 152, 158, 162, 166, 167, 170, 172, 173], "introduis": 1, "notion": [1, 3, 12, 42, 48, 50, 54, 64, 80, 167], "partit": [1, 167], "peu": [1, 3, 25, 33, 34, 36, 40, 42, 44, 45, 49, 52, 53, 55, 57, 58, 59, 62, 65, 70, 71, 73, 76, 79, 85, 86, 87, 88, 97, 102, 103, 105, 109, 111, 113, 116, 118, 124, 125, 132, 136, 138, 143, 149, 152, 155, 158, 160, 166, 167, 168, 170, 171, 173], "parall\u00e9lis": [1, 173, 176], "object": [1, 3, 7, 16, 17, 19, 24, 25, 28, 34, 36, 40, 41, 42, 56, 64, 65, 69, 70, 72, 90, 95, 96, 97, 98, 109, 113, 114, 115, 124, 126, 127, 132, 136, 148, 152, 160, 166, 167, 170, 171, 173, 175], "tous": [1, 2, 3, 6, 16, 18, 19, 20, 24, 27, 28, 33, 34, 35, 40, 41, 42, 43, 45, 48, 49, 52, 54, 55, 57, 59, 64, 65, 69, 76, 78, 81, 82, 88, 89, 92, 96, 97, 98, 101, 113, 120, 126, 128, 129, 136, 137, 142, 143, 151, 152, 155, 160, 162, 163, 166, 167, 168, 170, 171, 173, 175], "lesquel": [1, 19, 33, 34, 52, 55, 65, 121, 130, 131, 152, 166, 168], "con\u00e7us": [1, 170], "distanc": [1, 6, 8, 12, 28, 35, 57, 65, 66, 76, 83, 84, 85, 86, 92, 125, 126, 127, 129, 130, 131], "\u00e9dit": [1, 8, 12, 92, 129], "sert": [1, 2, 20, 27, 31, 33, 36, 40, 41, 57, 65, 68, 89, 91, 97, 112, 119, 132, 134, 136, 137, 139, 143, 144, 152, 154, 155, 160, 166, 167, 168, 173, 174], "entre": [1, 5, 24, 31, 33, 36, 48, 49, 55, 57, 58, 59, 60, 64, 65, 66, 73, 76, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 92, 96, 103, 111, 118, 125, 126, 127, 130, 131, 133, 136, 139, 140, 142, 143, 144, 145, 150, 152, 155, 160, 162, 163, 166, 167, 168, 170, 171, 173, 175], "utilis": [1, 2, 3, 5, 13, 14, 16, 20, 21, 24, 25, 27, 33, 34, 35, 36, 39, 41, 42, 45, 48, 49, 52, 56, 62, 64, 65, 68, 69, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 88, 89, 92, 95, 96, 98, 102, 105, 106, 109, 111, 114, 115, 117, 118, 120, 121, 125, 126, 129, 132, 133, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 175], "trouv": [1, 2, 3, 11, 16, 21, 27, 28, 33, 35, 36, 38, 40, 42, 45, 54, 57, 59, 60, 63, 64, 65, 66, 70, 78, 79, 80, 81, 82, 83, 84, 85, 86, 102, 103, 108, 116, 125, 127, 128, 129, 130, 136, 146, 147, 150, 151, 152, 160, 162, 163, 166, 167, 168, 170, 173, 175], "proch": [1, 25, 48, 60, 78, 79, 85, 86, 92, 126, 143, 152, 160, 161, 167, 168, 171], "autr": [1, 2, 3, 8, 9, 11, 15, 16, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 41, 42, 45, 48, 49, 50, 53, 54, 55, 56, 58, 59, 60, 64, 65, 66, 68, 69, 70, 72, 76, 79, 80, 82, 83, 84, 85, 86, 88, 91, 94, 95, 97, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 115, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 144, 145, 148, 149, 150, 151, 154, 155, 156, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175], "condit": [1, 19, 33, 34, 36, 40, 41, 46, 48, 70, 71, 111, 126, 136, 139, 150, 152, 160, 166, 167, 168, 170, 173], "sim": [1, 19, 33, 54, 56, 57, 122, 123, 137, 139, 151, 152], "4": [1, 2, 3, 5, 7, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 36, 37, 40, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 138, 139, 140, 141, 144, 145, 146, 147, 149, 151, 152, 155, 158, 160, 161, 162, 163, 166, 167, 168, 170, 172, 173, 175], "Que": [1, 27, 33, 34, 58, 70, 71, 72, 73, 80, 108, 115, 124, 126, 142, 148, 150], "quand": [1, 2, 20, 33, 34, 40, 45, 52, 58, 62, 78, 79, 87, 89, 96, 106, 107, 115, 120, 124, 128, 142, 143, 149, 151, 155, 162, 167, 173], "milliard": [1, 48], "Ce": [1, 2, 3, 12, 18, 19, 27, 28, 33, 35, 36, 40, 41, 42, 44, 45, 48, 54, 56, 58, 60, 63, 64, 65, 68, 71, 76, 78, 79, 83, 84, 87, 88, 89, 91, 92, 95, 96, 97, 98, 102, 103, 107, 118, 125, 126, 127, 129, 136, 137, 139, 142, 143, 148, 149, 150, 152, 155, 156, 160, 161, 162, 163, 164, 166, 167, 168, 173, 175], "facil": [1, 16, 19, 24, 25, 28, 34, 36, 38, 40, 44, 45, 48, 55, 65, 76, 89, 103, 105, 109, 110, 111, 113, 114, 121, 126, 127, 152, 160, 164, 166, 167, 168, 170, 171, 173, 175], "si": [1, 2, 3, 5, 6, 12, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 36, 38, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 56, 58, 59, 61, 62, 65, 66, 68, 70, 71, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96, 97, 102, 107, 109, 114, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 150, 151, 152, 155, 156, 158, 160, 162, 164, 166, 167, 168, 170, 171, 173, 175], "repr\u00e9sent": [1, 2, 5, 13, 19, 24, 27, 33, 34, 35, 42, 53, 55, 56, 58, 62, 64, 65, 69, 74, 75, 85, 86, 94, 104, 109, 111, 118, 127, 137, 143, 149, 152, 154, 160, 162, 164, 166, 167, 168, 171], "vecteur": [1, 35, 40, 49, 79, 80, 83, 84, 85, 86, 102, 115, 118, 125, 152, 167], "voir": [1, 2, 3, 9, 12, 16, 19, 25, 28, 33, 34, 40, 42, 45, 48, 53, 58, 59, 60, 64, 65, 66, 79, 81, 82, 83, 84, 96, 97, 99, 102, 105, 107, 118, 129, 132, 137, 140, 142, 143, 144, 150, 152, 158, 160, 162, 166, 167, 168, 171, 173], "word2vec": 1, "auto": [1, 85, 86], "encoder": [1, 168], "veut": [1, 2, 3, 25, 33, 34, 36, 38, 40, 42, 44, 50, 52, 54, 55, 58, 65, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 97, 99, 101, 108, 118, 120, 124, 125, 126, 127, 130, 131, 132, 134, 136, 139, 141, 143, 144, 148, 149, 150, 151, 155, 162, 167, 170, 173, 175], "compar": [1, 2, 17, 18, 19, 33, 34, 35, 40, 45, 52, 56, 58, 65, 78, 83, 84, 99, 101, 104, 113, 116, 119, 121, 125, 139, 148, 150, 152, 155, 160, 162, 166, 167, 168], "model": [1, 33, 36, 55, 59, 78, 79, 92, 124, 125, 167], "ranking": 1, "pouvoir": [1, 6, 48, 52, 59, 64, 89, 98, 109, 113, 126, 132, 134, 141, 143, 144, 150, 152, 160, 166, 167, 168, 171, 173], "visuel": [1, 3, 28, 42, 58, 160], "r\u00e9sultat": [1, 2, 6, 19, 20, 22, 24, 27, 28, 33, 34, 35, 36, 38, 40, 41, 45, 50, 52, 53, 55, 58, 59, 70, 71, 74, 75, 76, 79, 81, 82, 83, 87, 95, 96, 102, 105, 107, 109, 113, 114, 116, 120, 122, 123, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 150, 151, 152, 155, 158, 162, 166, 167, 168, 170, 171, 173, 175], "Quel": [1, 27, 69, 81, 82, 142], "mieux": [1, 2, 8, 21, 27, 28, 38, 40, 56, 59, 62, 64, 79, 81, 82, 84, 91, 96, 103, 106, 109, 111, 113, 142, 144, 152, 160, 162, 170, 171, 173], "affich": [1, 2, 3, 6, 27, 33, 34, 40, 41, 42, 45, 52, 54, 55, 65, 70, 71, 79, 88, 96, 107, 132, 142, 143, 144, 150, 151, 152, 155, 158, 160, 162, 163, 164, 166, 167, 168, 170, 173, 175], "moteur": [1, 34, 38, 79, 142, 160, 168], "recherch": [1, 4, 12, 24, 34, 38, 54, 59, 60, 64, 65, 78, 79, 81, 84, 94, 97, 105, 108, 127, 137, 142, 155, 160, 166, 167, 168, 175], "oeil": [1, 33, 34, 167], "humain": [1, 144, 173], "sais": [1, 64, 143, 166, 168], "rapid": [1, 2, 3, 19, 24, 26, 27, 33, 34, 35, 40, 42, 45, 48, 55, 62, 65, 78, 81, 82, 83, 84, 91, 92, 94, 101, 102, 103, 107, 110, 114, 116, 120, 136, 137, 142, 143, 149, 152, 158, 160, 162, 167, 170, 171, 172, 173], "diff\u00e9rent": [1, 11, 16, 19, 24, 25, 28, 33, 34, 35, 36, 38, 41, 49, 50, 58, 59, 64, 76, 78, 81, 82, 84, 86, 87, 88, 100, 101, 102, 105, 108, 110, 118, 126, 127, 132, 133, 136, 139, 142, 144, 145, 150, 152, 155, 160, 161, 162, 163, 164, 166, 167, 168, 170, 172, 173, 175], "tout": [1, 2, 3, 6, 7, 11, 12, 16, 19, 21, 24, 25, 27, 28, 33, 34, 35, 36, 40, 41, 42, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 62, 65, 66, 68, 73, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 95, 96, 97, 102, 104, 105, 106, 107, 111, 115, 117, 118, 120, 121, 125, 126, 127, 128, 129, 132, 133, 136, 137, 139, 142, 143, 144, 147, 148, 152, 156, 158, 160, 162, 164, 166, 167, 168, 171, 173, 175], "fusion": [1, 12, 59, 76, 106, 121], "algo": [1, 92], "bucket": 1, "bull": 1, "complex": [1, 3, 16, 40, 42, 45, 48, 52, 65, 109, 142, 144, 152, 160, 166, 170, 171], "lempel": 1, "ziv": 1, "python": [1, 3, 5, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 39, 41, 43, 59, 68, 69, 72, 73, 76, 79, 80, 81, 82, 95, 96, 99, 100, 101, 102, 105, 108, 109, 113, 114, 116, 117, 118, 119, 120, 121, 132, 133, 134, 137, 149, 150, 153, 154, 155, 156, 158, 160, 161, 162, 164, 165, 168, 170, 171, 172, 175], "implement": [1, 114, 137], "kullback": 1, "leibl": 1, "divergent": 1, "kl": 1, "ucb": 1, "index": [1, 40, 56, 58, 59, 70, 72, 73, 87, 91, 101, 106, 109, 112, 136, 143, 152, 155, 166, 167, 170], "matriciel": [1, 5, 8, 19, 31, 88, 92, 114], "winograd": 1, "minimum": [1, 28, 33, 35, 50, 52, 54, 55, 68, 80, 85, 86, 87, 91, 128, 129], "filtering": 1, "convolu": [1, 8, 94], "im2col": 1, "r\u00e9arrang": 1, "divis": [1, 2, 27, 33, 34, 40, 48, 49, 54, 66, 70, 78, 80, 83, 84, 98, 107, 113, 116, 122, 123, 128, 136, 138, 151, 154, 155, 166, 167], "reign": 1, "branch": 1, "bound": [1, 33, 160], "the": [1, 3, 5, 6, 7, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 36, 42, 46, 48, 52, 56, 64, 74, 75, 78, 106, 108, 113, 114, 121, 122, 123, 124, 128, 129, 130, 131, 152, 156, 160, 170, 173], "ultimat": 1, "planar": 1, "convex": [1, 80], "hull": 1, "relectur": [1, 25, 45, 152, 168, 171], "kirkpatrick": 1, "seidel": 1, "prun": [1, 81, 82], "search": [1, 3, 7, 42, 170, 175], "an": [1, 3, 6, 7, 34, 35, 45, 46, 78, 79, 130, 131, 143, 156, 160, 166, 173], "finding": 1, "point": [1, 2, 15, 19, 27, 28, 29, 33, 40, 54, 57, 64, 65, 79, 80, 83, 84, 85, 86, 107, 114, 125, 132, 139, 142, 143, 144, 149, 150, 152, 156, 160, 162, 166, 167, 168, 173, 175], "set": [1, 3, 7, 16, 34, 36, 40, 42, 48, 49, 55, 58, 64, 75, 95, 101, 104, 120, 150, 152, 156, 160, 161, 166, 173], "d\u00e9termin": [1, 2, 6, 19, 24, 27, 33, 40, 65, 66, 78, 79, 80, 81, 82, 88, 113, 126, 142, 143, 144, 148, 150, 152, 158, 160, 162, 166, 167, 170, 173, 175], "envelopp": 1, "h": [1, 19, 25, 34, 48, 58, 64, 79, 83, 84, 85, 86, 87, 96, 99, 105, 109, 137, 139, 149, 152, 160, 161, 163, 167, 168, 171, 173], "nombr": [1, 2, 3, 5, 6, 10, 19, 20, 21, 27, 28, 32, 34, 35, 38, 40, 42, 45, 49, 51, 52, 54, 56, 58, 59, 60, 61, 62, 65, 66, 69, 70, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 87, 89, 91, 92, 96, 98, 101, 102, 105, 106, 108, 109, 110, 111, 115, 116, 118, 120, 121, 122, 123, 124, 125, 128, 129, 132, 133, 136, 137, 139, 141, 142, 144, 145, 148, 150, 151, 152, 155, 158, 160, 162, 163, 164, 165, 168, 170, 171, 173, 175], "segment": [1, 54, 60, 65, 128, 138, 152], "court": [1, 3, 8, 12, 19, 25, 28, 30, 31, 32, 34, 42, 49, 51, 52, 56, 60, 64, 65, 72, 73, 76, 92, 93, 103, 120, 121, 142, 148, 152, 166, 167, 168], "chemin": [1, 3, 8, 12, 28, 42, 49, 50, 55, 64, 76, 92, 96, 114, 139, 142, 156, 160, 170], "graph": [1, 6, 7, 12, 13, 28, 30, 31, 33, 48, 53, 58, 64, 65, 76, 96, 98, 114, 126, 131, 147, 152, 160], "ordonnanc": [1, 8, 92], "permut": [1, 2, 11, 13, 21, 27, 28, 52, 59, 78, 79, 89, 94, 107, 127, 128, 129, 133, 136, 142, 155], "sattolo": 1, "voyageur": [1, 12, 28, 60, 92], "commerc": [1, 12, 15, 29, 48, 60, 92], "hamiltonien": [1, 28], "lir": [1, 2, 3, 5, 34, 35, 40, 42, 44, 49, 78, 108, 113, 118, 126, 137, 142, 143, 152, 155, 156, 158, 160, 162, 164, 166, 167, 168, 170, 171], "larg": [1, 28, 48], "scal": 1, "traveling": [1, 8, 92], "salesman": [1, 8, 63, 92], "tourn": [1, 27, 59, 95, 104, 136, 173], "v\u00e9hicul": 1, "extens": [1, 6, 9, 31, 35, 51, 55, 65, 80, 109, 142, 149, 152, 160, 165, 168, 169, 175], "affect": [1, 2, 27, 33, 40, 45, 52, 60, 105, 136, 145, 150, 152, 155, 160, 162, 166, 170, 173], "m\u00e9thod": [1, 2, 3, 12, 24, 27, 33, 34, 42, 48, 57, 59, 62, 66, 69, 70, 72, 79, 83, 84, 94, 95, 97, 99, 102, 109, 114, 118, 124, 125, 131, 137, 142, 143, 153, 154, 155, 162, 165, 166, 168, 170, 173, 175], "hongrois": [1, 131], "arbre": [1, 12, 55, 58, 64, 76, 94, 105, 111, 149], "poid": [1, 6, 65, 80, 152], "miminum": [1, 50], "kruskal": [1, 4, 6, 12, 65], "bor\u016fvk": 1, "sac": 1, "dos": 1, "structur": [1, 2, 3, 7, 19, 34, 35, 36, 40, 42, 55, 58, 65, 111, 132, 136, 137, 142, 152, 162, 167, 168, 170], "cha\u00een": [1, 34, 36, 51, 68, 69, 70, 72, 78, 94, 95, 109, 126, 132, 136, 142, 144, 145, 148, 149, 150, 152, 155, 160, 161, 164, 165, 166, 168, 170, 171, 173, 175], "def": [1, 2, 3, 7, 16, 17, 18, 19, 20, 24, 25, 27, 28, 33, 34, 35, 38, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 125, 129, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 148, 149, 152, 154, 155, 156, 158, 160, 161, 162, 166, 167, 168, 170, 171, 173, 175], "hachag": [1, 34, 48], "distribu": [1, 3, 4, 9, 33, 42, 45, 48, 55, 102, 105, 107, 118, 119, 121, 126, 160, 173], "suffix": [1, 8, 92, 167], "tre": [1, 16, 137, 143, 152], "b": [1, 2, 3, 7, 16, 20, 21, 23, 25, 26, 27, 33, 34, 37, 40, 41, 42, 45, 48, 50, 51, 52, 56, 57, 58, 59, 60, 64, 65, 69, 70, 71, 72, 76, 79, 80, 85, 86, 89, 90, 95, 96, 97, 98, 101, 102, 103, 105, 108, 116, 118, 126, 127, 129, 130, 131, 136, 137, 138, 139, 143, 149, 150, 151, 152, 155, 160, 161, 162, 166, 167, 168, 170, 171, 173, 175], "x": [1, 2, 3, 7, 19, 20, 25, 27, 28, 33, 34, 35, 40, 41, 42, 48, 49, 54, 56, 58, 62, 64, 68, 69, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 92, 96, 99, 102, 103, 105, 110, 111, 114, 115, 118, 120, 121, 122, 123, 125, 128, 129, 132, 136, 138, 139, 142, 143, 144, 146, 147, 149, 150, 151, 152, 155, 160, 162, 166, 167, 168, 170, 173, 175], "tas": [1, 59, 106], "heap": [1, 59, 94], "fibonacc": [1, 50], "judy": 1, "array": [1, 17, 22, 25, 27, 32, 35, 36, 37, 40, 48, 49, 53, 54, 55, 56, 57, 59, 63, 71, 79, 80, 83, 84, 85, 86, 87, 91, 99, 102, 103, 112, 114, 115, 118, 119, 124, 126, 127, 130, 131, 139, 141, 171, 173], "sit": [1, 3, 9, 12, 26, 34, 35, 42, 44, 45, 57, 66, 87, 113, 114, 115, 117, 124, 128, 129, 130, 131, 142, 147, 148, 156, 158, 163, 167, 170, 175], "mapping": [1, 34, 79], "int": [1, 3, 6, 7, 17, 19, 24, 33, 34, 35, 40, 42, 48, 55, 58, 62, 70, 72, 74, 75, 78, 81, 82, 87, 95, 97, 99, 103, 104, 105, 121, 138, 139, 141, 142, 143, 145, 152, 155, 166, 167, 171, 173], "efficac": [1, 2, 22, 24, 33, 55, 58, 59, 62, 64, 65, 70, 76, 99, 106, 121, 152, 161, 162, 166, 171, 173], "traditionnel": [1, 44], "propriet": [1, 40, 49, 55, 125, 126, 134, 139], "cach": [1, 3, 27, 34, 38, 40, 42, 81, 82, 88, 152, 154, 166, 167], "processeur": [1, 35, 114, 166, 173], "compos": [1, 8, 12, 21, 40, 65, 92, 97, 114, 160, 166, 167, 170], "connex": [1, 6, 8, 12, 65, 92, 158], "parcour": [1, 16, 19, 28, 40, 48, 54, 58, 60, 62, 66, 68, 69, 76, 91, 98, 109, 118, 132, 133, 136, 139, 150, 152, 155, 166, 167, 173], "profondeur": [1, 76], "largeur": [1, 55, 76, 89, 118, 160], "orient": [1, 40, 49, 55, 106, 167], "acycl": [1, 76], "degr": [1, 6, 49, 55, 65, 119, 136, 166], "floyd": [1, 131], "flukerson": 1, "cut": [1, 77], "maximum": [1, 5, 32, 33, 35, 40, 53, 54, 64, 66, 78, 80, 87, 91, 99], "bi": [1, 33, 131, 143, 152, 160], "pagerank": 1, "appari": [1, 34, 65, 127, 131], "edmond": [1, 65], "blossum": 1, "hopcroft": [1, 131], "karp": [1, 131], "blossom": [1, 131], "5": [1, 2, 3, 5, 6, 7, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 32, 33, 35, 36, 37, 40, 42, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 131, 132, 133, 134, 136, 137, 139, 141, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 160, 161, 162, 163, 166, 167, 168, 170, 173, 175], "couplag": [1, 65, 131], "gal": 1, "shapley": 1, "mariag": [1, 85, 86], "stabl": [1, 33, 36], "robinson": 1, "fould": 1, "robustess": 1, "r\u00e9seau": [1, 48, 55, 126], "quantifying": 1, "robustness": 1, "metro": [1, 36], "network": [1, 64], "d\u00e9tect": [1, 27, 40, 119, 121, 143, 149, 152, 155, 156, 160, 163, 166, 175], "motif": [1, 108, 146, 147], "fr\u00e9quent": [1, 2, 25, 34, 39, 48, 59, 64, 66, 88, 109, 114, 118, 136, 142, 148, 152, 155, 160, 164, 165, 166, 167, 168, 171, 173], "fp": 1, "growth": [1, 117], "text": [1, 2, 3, 7, 16, 19, 21, 28, 34, 36, 38, 41, 42, 45, 48, 53, 58, 66, 79, 80, 94, 108, 109, 113, 114, 134, 136, 139, 144, 150, 155, 156, 162, 164, 166, 167, 169, 170, 171, 173, 175], "knuth": 1, "morr": 1, "pratt": 1, "rabin": 1, "jaccard": 1, "gramm": 1, "aho": 1, "corasick": 1, "auss": [1, 2, 3, 12, 16, 19, 20, 25, 26, 27, 28, 33, 34, 35, 36, 40, 41, 42, 45, 52, 55, 56, 59, 64, 65, 83, 84, 85, 88, 89, 97, 102, 105, 107, 113, 114, 115, 118, 120, 126, 127, 136, 139, 143, 145, 148, 150, 152, 155, 156, 158, 160, 162, 166, 167, 168, 170, 171, 173, 175], "commentz": 1, "walt": 1, "burrow": 1, "wheel": [1, 9, 160], "aprior": 1, "apprentissag": [1, 125, 128, 160], "regl": [1, 16, 35, 40, 52, 126, 139, 142, 143, 152, 156, 158, 160, 166, 167, 168], "associ": [1, 2, 16, 34, 35, 40, 41, 45, 49, 58, 62, 70, 79, 85, 86, 114, 118, 127, 136, 139, 145, 152, 155, 161, 162, 163, 166, 167, 168, 170, 173, 175], "boi": 1, "moor": 1, "string": [1, 7, 26, 33, 34, 40, 41, 108, 109, 115, 130, 131, 142, 160, 166, 167, 168, 170], "simplex": 1, "lin\u00e9air": [1, 32, 48, 59, 79, 80, 81, 82, 83, 84, 105, 111, 121, 125, 160, 170], "thes": [1, 7, 130, 131, 160], "neld": [1, 33], "mead": [1, 33], "codag": 1, "huffman": [1, 64], "lz77": 1, "lz78": 1, "bootstrap": 1, "intervall": [1, 2, 17, 19, 35, 40, 54, 56, 65, 80, 81, 82, 83, 102, 122, 123, 128, 129, 138, 139, 162, 170, 173], "confianc": [1, 139], "filtr": [1, 6, 113, 168, 175], "bloom": 1, "woodbury": 1, "identity": [1, 35, 91], "blockwis": 1, "invers": [1, 5, 16, 25, 27, 28, 32, 33, 34, 40, 48, 56, 78, 88, 97, 109, 118, 133, 142, 143, 147, 152, 155, 160, 164, 167, 168, 171, 173], "toom": 1, "cook": 1, "canopy": 1, "clustering": 1, "lru": 1, "last": [1, 2, 3, 38, 40, 42, 59, 60, 62, 69, 70, 72, 73, 78, 83, 152, 155, 156, 160, 162, 166, 167, 175], "recent": [1, 2, 3, 38, 40, 42, 69, 70, 72, 73, 78, 152, 155, 156, 160, 162, 166, 167, 175], "used": [1, 7, 16, 170], "yield": [1, 25, 69, 96, 117, 121, 152, 166], "m\u00e9mo\u00efz": 1, "fonction": [1, 3, 6, 12, 18, 19, 20, 24, 26, 27, 28, 33, 39, 42, 45, 49, 50, 51, 52, 54, 57, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 100, 102, 105, 108, 111, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 132, 133, 138, 141, 142, 148, 149, 150, 154, 155, 156, 158, 161, 163, 164, 168, 170, 171, 173, 176], "fonctionnel": [1, 24, 40, 45, 152], "r\u00e9curs": [1, 2, 16, 40, 50, 51, 52, 54, 76, 88, 109, 126, 129, 167, 168, 173], "kahan": 1, "summat": [1, 130, 131], "probabil": [1, 107], "probabilistic": 1, "dat": [1, 2, 6, 23, 25, 26, 33, 36, 43, 48, 56, 57, 87, 106, 108, 109, 112, 114, 117, 137, 142, 143, 152, 160, 165, 167, 168, 170, 171, 175], "web": [1, 2, 8, 40, 42, 45, 94, 142, 143, 158, 163, 171, 172], "analytic": 1, "mining": 1, "compress": [1, 49, 64, 109, 142, 168], "lzfse": 1, "lzma": 1, "squash": 1, "benchmark": [1, 33], "inspir": [1, 16, 19, 33, 55, 64, 65, 76, 80, 85, 86, 102, 105, 120, 126, 129, 143, 146, 147], "quantiqu": [1, 12, 45], "quantum": 1, "inspired": 1, "classical": 1, "recommend": 1, "system": [1, 3, 33, 34, 42, 49, 54, 56, 64, 79, 80, 122, 123, 163, 164, 167, 168, 170, 173, 175], "beaucoup": [1, 5, 6, 11, 16, 19, 34, 35, 40, 41, 42, 44, 45, 52, 55, 58, 62, 70, 71, 76, 78, 82, 84, 101, 102, 114, 118, 121, 126, 132, 133, 136, 137, 142, 143, 144, 149, 152, 154, 160, 164, 167, 168, 171, 173, 175], "projet": [1, 36, 132, 154, 170], "thealgorithm": 1, "modul": [1, 2, 5, 7, 18, 19, 25, 32, 33, 34, 38, 39, 65, 69, 70, 72, 73, 78, 79, 80, 81, 82, 94, 95, 101, 102, 105, 108, 109, 114, 117, 118, 120, 124, 126, 149, 152, 155, 156, 158, 160, 161, 162, 163, 166, 167, 168, 171, 172, 173, 175, 176], "classiqu": [1, 5, 32, 33, 37, 42, 59, 60, 64, 89, 142, 150, 153, 159, 165], "binair": [1, 40, 48, 55, 61, 79, 81, 89, 98, 109, 111, 125, 143, 167, 169], "mersen": 1, "heapsort": 1, "distingu": [1, 3, 34, 40, 42, 55, 65, 100, 136, 142, 148, 152, 166, 167], "trois": [1, 2, 11, 16, 24, 27, 34, 39, 54, 58, 62, 64, 66, 76, 97, 100, 104, 116, 130, 131, 134, 136, 142, 143, 144, 147, 150, 152, 155, 160, 162, 165, 167, 168, 170, 173, 175], "class": [1, 7, 8, 12, 13, 26, 27, 33, 34, 39, 45, 56, 68, 76, 96, 105, 106, 109, 117, 118, 124, 126, 127, 143, 150, 158, 161, 163, 164, 166, 167, 168, 170, 171, 173, 175, 176], "p": [1, 7, 16, 17, 19, 26, 40, 48, 55, 58, 59, 63, 64, 66, 76, 78, 83, 84, 87, 91, 95, 97, 99, 101, 102, 105, 109, 113, 114, 115, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 139, 143, 149, 150, 152, 161, 166, 168, 175], "Un": [1, 3, 6, 8, 16, 19, 21, 24, 26, 27, 33, 34, 35, 36, 37, 40, 41, 42, 49, 53, 58, 66, 69, 78, 79, 81, 82, 83, 84, 85, 86, 94, 95, 96, 108, 109, 111, 118, 122, 123, 128, 132, 136, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152, 158, 160, 164, 166, 168, 169, 171], "appartient": [1, 24, 54, 55, 80, 102, 114, 118, 152, 160, 166, 167, 175], "\u00eatre": [1, 2, 3, 16, 25, 27, 28, 33, 34, 36, 38, 40, 41, 42, 45, 48, 49, 52, 55, 56, 62, 64, 65, 66, 70, 76, 78, 80, 81, 82, 83, 84, 87, 88, 95, 96, 97, 108, 109, 111, 113, 114, 116, 118, 119, 120, 126, 127, 128, 132, 136, 137, 138, 142, 143, 148, 149, 150, 152, 155, 158, 160, 162, 164, 166, 167, 168, 170, 173, 175], "d\u00e9cid": [1, 19, 40, 52, 64, 65, 88, 143, 155], "polyn\u00f4mial": [1, 28, 63, 126, 131], "d\u00e9cis": 1, "turing": 1, "polynomial": [1, 65], "rapport": [1, 16, 45, 48, 65, 81, 82, 84, 88, 113, 121, 125, 134, 152, 154, 160, 166, 172, 173], "taill": [1, 27, 33, 34, 35, 40, 45, 58, 59, 64, 66, 76, 80, 81, 82, 85, 86, 87, 105, 107, 111, 118, 121, 126, 127, 128, 139, 150, 151, 152, 160, 166, 167, 168, 171, 173], "entr\u00e9": [1, 3, 24, 32, 33, 42, 44, 48, 87, 95, 97, 105, 120, 136, 142, 143, 150, 152, 155, 156, 160, 162, 164, 166, 176], "impliqu": [1, 18, 25, 33, 35, 40, 41, 56, 68, 84, 102, 152, 160, 166, 168], "possibl": [1, 2, 3, 5, 6, 10, 16, 19, 23, 25, 27, 28, 33, 34, 36, 40, 41, 42, 45, 49, 50, 51, 54, 55, 56, 57, 64, 65, 71, 78, 84, 85, 86, 87, 91, 92, 99, 103, 106, 107, 109, 118, 122, 123, 125, 126, 127, 130, 131, 133, 134, 136, 142, 143, 144, 148, 149, 152, 155, 156, 158, 160, 162, 164, 167, 168, 170, 171, 173, 175], "v\u00e9rifi": [1, 6, 19, 24, 27, 36, 38, 40, 45, 48, 52, 54, 55, 64, 68, 70, 80, 81, 82, 83, 84, 89, 95, 97, 98, 108, 118, 133, 141, 158, 160, 166, 167, 168, 170, 173, 175], "admet": [1, 80, 139], "capabl": [1, 19, 63, 97, 148, 152, 160, 168, 170, 173], "pr\u00e9cis": [1, 3, 26, 33, 34, 40, 41, 42, 45, 53, 78, 80, 83, 84, 88, 102, 107, 132, 143, 144, 152, 155, 156, 160, 164, 166, 167, 168, 170, 171, 173, 175], "r\u00e9duct": [1, 35, 90], "f": [1, 2, 3, 7, 17, 20, 25, 26, 33, 34, 36, 40, 42, 48, 50, 53, 54, 58, 60, 64, 65, 70, 71, 74, 75, 78, 80, 81, 82, 95, 96, 97, 102, 104, 105, 109, 114, 120, 126, 132, 136, 137, 138, 139, 142, 143, 145, 149, 150, 152, 155, 156, 160, 162, 164, 166, 168, 170, 173, 175], "bpp": 1, "objet": [1, 2, 3, 12, 16, 18, 22, 33, 34, 40, 41, 42, 97, 100, 109, 117, 118, 132, 134, 136, 137, 149, 152, 155, 159, 161, 162, 163, 166, 170, 171, 173, 175], "th\u00e9or": [1, 152], "informat": [1, 16, 27, 40, 100, 109, 132, 139, 152, 154, 164, 166, 168], "th\u00e9oriqu": [1, 48, 96], "d\u00e9fin": [1, 3, 6, 16, 19, 20, 24, 27, 33, 35, 36, 40, 41, 42, 49, 53, 55, 81, 83, 84, 95, 97, 100, 102, 109, 126, 132, 136, 142, 143, 149, 150, 152, 156, 157, 158, 160, 164, 166, 167, 168, 170, 171, 173, 175], "acronym": [1, 136], "vient": [1, 27, 54, 64, 65, 73, 101, 102, 116, 132, 135, 144, 152, 160, 166, 168], "bounded": 1, "error": [1, 56, 156], "tim": [1, 3, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 42, 48, 55, 58, 59, 61, 62, 88, 101, 102, 113, 114, 115, 119, 121, 124, 125, 130, 131, 133, 137, 149, 152, 160, 163, 170, 173], "encor": [1, 3, 20, 24, 27, 33, 34, 40, 42, 45, 48, 52, 54, 57, 58, 59, 62, 65, 66, 72, 73, 83, 84, 91, 95, 97, 104, 113, 126, 127, 128, 132, 133, 143, 147, 148, 152, 154, 158, 161, 166, 167, 168, 170, 173, 175], "irr\u00e9solu": 1, "Une": [1, 2, 3, 16, 19, 20, 24, 34, 40, 41, 42, 45, 48, 50, 51, 53, 57, 59, 60, 62, 64, 70, 76, 78, 83, 84, 85, 86, 94, 95, 103, 107, 110, 118, 125, 129, 132, 134, 136, 139, 144, 145, 152, 155, 160, 162, 163, 166, 167, 168, 170, 171, 173, 175], "preuv": 1, "cour": [1, 34, 40, 55, 56, 61, 87, 101, 119, 142, 155, 160, 166, 167, 168, 173], "logiqu": [1, 16, 34, 40, 41, 96, 142, 154, 160, 167, 171], "423": 1, "m\u00eam": [1, 3, 5, 11, 16, 18, 19, 20, 22, 24, 25, 27, 28, 33, 34, 35, 38, 40, 41, 42, 45, 50, 55, 56, 58, 59, 63, 65, 66, 68, 70, 76, 78, 79, 81, 82, 84, 85, 86, 87, 92, 96, 97, 98, 100, 101, 102, 106, 108, 109, 113, 114, 115, 116, 117, 118, 120, 121, 125, 126, 127, 132, 133, 134, 136, 137, 139, 141, 143, 144, 145, 149, 150, 152, 155, 156, 160, 163, 164, 166, 167, 168, 170, 171, 173, 175], "r\u00e9duir": [1, 20, 34, 40, 45, 147, 150, 167, 168, 171], "fa\u00e7on": [1, 2, 3, 6, 11, 16, 19, 25, 26, 28, 33, 34, 35, 42, 44, 45, 49, 52, 54, 55, 56, 59, 61, 62, 65, 69, 72, 73, 79, 80, 81, 83, 85, 86, 88, 90, 91, 92, 96, 97, 100, 101, 102, 103, 105, 106, 109, 113, 114, 118, 119, 126, 132, 136, 142, 143, 148, 149, 151, 152, 155, 156, 160, 162, 164, 166, 167, 168, 170, 172, 173], "dont": [1, 2, 3, 16, 24, 27, 34, 35, 40, 41, 42, 48, 54, 55, 69, 83, 84, 85, 86, 89, 95, 97, 105, 116, 118, 120, 126, 128, 139, 143, 148, 149, 152, 155, 156, 160, 162, 164, 166, 167, 168, 170, 173, 175], "cherch": [1, 2, 3, 19, 24, 33, 34, 36, 40, 42, 45, 54, 57, 59, 64, 65, 66, 76, 78, 79, 80, 83, 84, 85, 86, 89, 91, 97, 99, 102, 107, 113, 116, 117, 120, 122, 123, 126, 129, 130, 131, 136, 138, 145, 148, 150, 151, 152, 154, 155, 160, 162, 166, 167, 170, 175], "puiss": [1, 16, 78, 128, 142, 143, 152, 160], "r\u00e9ciproqu": [1, 2, 24, 40, 78, 103, 109, 136, 152, 160, 164, 166, 167, 168, 171], "premi": [1, 3, 5, 6, 8, 11, 12, 16, 19, 20, 24, 27, 28, 32, 33, 34, 35, 40, 41, 42, 45, 48, 50, 51, 52, 53, 54, 55, 58, 60, 62, 64, 66, 68, 69, 70, 72, 73, 76, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 92, 94, 96, 97, 100, 103, 104, 106, 109, 113, 116, 118, 121, 125, 126, 127, 133, 134, 136, 141, 142, 143, 147, 148, 150, 151, 152, 155, 156, 158, 160, 164, 166, 167, 168, 170, 171, 172, 175], "lequel": [1, 3, 6, 34, 40, 42, 45, 48, 50, 53, 65, 71, 126, 127, 131, 136, 137, 152, 161, 164, 166, 167, 168, 170, 173], "compl\u00e9tud": 1, "th\u00e9orem": [1, 97, 139], "stephen": 1, "sat": 1, "\u00e9quivalent": [1, 2, 16, 19, 20, 24, 28, 34, 40, 80, 96, 101, 104, 125, 127, 128, 129, 130, 131, 132, 142, 152, 155, 160, 162, 166, 167, 168, 172, 175], "pr\u00e9sentent": [1, 109, 142, 160, 168], "sous": [1, 2, 14, 24, 33, 34, 36, 40, 41, 45, 48, 49, 51, 58, 65, 66, 69, 74, 75, 92, 106, 109, 118, 126, 127, 128, 132, 142, 143, 150, 152, 155, 158, 166, 167, 168, 170, 171, 173, 175], "or": [1, 2, 3, 7, 16, 27, 28, 33, 36, 40, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 69, 70, 72, 76, 80, 81, 82, 83, 84, 89, 95, 96, 104, 106, 114, 120, 124, 128, 129, 130, 131, 134, 135, 139, 155, 160, 162, 166, 167, 170, 171, 175], "acc": 1, "v\u00e9rif": [1, 19, 24, 27, 33, 34, 38, 40, 45, 48, 49, 51, 52, 53, 56, 62, 64, 65, 68, 69, 70, 76, 78, 79, 81, 82, 83, 95, 97, 102, 111, 118, 126, 139, 141, 142, 151, 152, 156, 160, 166, 167, 170, 173, 175], "claus": [1, 16, 150, 155, 166], "vee_k": 1, "y_": [1, 17], "1k": 1, "wedg": 1, "n_k": 1, "k": [1, 2, 5, 6, 19, 24, 25, 32, 33, 34, 40, 48, 50, 54, 55, 56, 58, 61, 62, 64, 65, 66, 69, 70, 71, 78, 79, 81, 82, 83, 84, 85, 86, 91, 92, 96, 97, 102, 103, 111, 112, 114, 118, 121, 127, 128, 129, 136, 137, 139, 149, 151, 152, 162, 166, 167, 175], "ik": [1, 28, 55], "x_i": [1, 33, 48, 79, 80, 81, 82, 83, 84, 122, 123, 125, 139], "neg": [1, 34], "pass": [1, 2, 3, 12, 18, 19, 21, 23, 24, 25, 27, 28, 33, 34, 36, 40, 42, 49, 54, 56, 59, 60, 65, 70, 78, 81, 82, 83, 96, 97, 103, 106, 108, 113, 114, 115, 117, 118, 120, 124, 125, 126, 129, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 150, 151, 152, 155, 158, 160, 162, 164, 167, 168, 170, 171, 172, 173, 175], "\u00e9valu": [1, 27, 33, 67, 166, 167], "sup\u00e9rieur": [1, 2, 45, 55, 59, 65, 78, 79, 80, 82, 83, 84, 116, 150, 160, 162, 166, 167, 168], "certain": [1, 3, 25, 28, 34, 35, 36, 38, 40, 42, 45, 48, 54, 69, 78, 96, 98, 101, 116, 117, 126, 132, 134, 139, 142, 143, 148, 152, 154, 155, 158, 160, 163, 166, 167, 168, 170, 171, 173, 175], "seuil": [1, 6, 48, 65], "wikip\u00e9di": [1, 34, 51, 109, 146, 147], "version": [1, 2, 3, 8, 9, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 40, 42, 45, 51, 54, 62, 64, 76, 81, 82, 102, 109, 110, 113, 114, 133, 134, 139, 143, 145, 149, 150, 152, 160, 161, 162, 164, 166, 167, 168, 170, 173, 175], "fran\u00e7ais": 1, "learning": [1, 5, 12, 33, 42, 44, 59, 114], "concept": [1, 27, 40, 132, 152, 154, 160, 165, 173], "statist": [1, 32, 34, 55, 113, 114, 119, 149], "introduct": [1, 34, 44, 56, 159], "to": [1, 3, 5, 7, 9, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 42, 46, 56, 65, 72, 79, 106, 108, 114, 124, 130, 131, 137, 152, 155, 156, 160, 166, 167, 168, 170, 175], "\u00e9chantillon": [1, 33, 34, 65, 126], "markov": 1, "central": [1, 2, 139, 162], "flow": [1, 130, 131], "blossom5": 1, "matching": 1, "local": [1, 3, 20, 40, 117, 124, 152, 156, 164, 171, 173], "max": [1, 5, 17, 32, 33, 34, 35, 36, 40, 48, 52, 53, 54, 56, 58, 60, 62, 65, 80, 83, 84, 86, 91, 95, 96, 98, 99, 107, 111, 118, 129, 133, 139, 150, 152, 166, 167, 175], "smoothed": 1, "expand": [1, 160], "geometric": 1, "embedding": 1, "partitioning": 1, "partitionning": 1, "read": [1, 17, 25, 26, 34, 36, 66, 109, 117, 142, 143, 149, 156, 164, 168, 171, 173, 175], "optimized": 1, "period": 1, "order": [1, 16, 33, 83, 109, 130, 131, 152, 155], "preserving": 1, "recurs": [1, 16, 81, 82, 114, 136], "gram": 1, "hashing": 1, "is": [1, 3, 7, 16, 17, 19, 25, 33, 35, 36, 46, 51, 52, 54, 56, 57, 58, 59, 60, 64, 69, 70, 73, 81, 82, 83, 84, 88, 89, 95, 96, 103, 108, 114, 120, 124, 129, 130, 131, 139, 152, 160, 166, 167, 170, 171, 173, 175], "pairwis": [1, 91], "independent": 1, "at": [1, 3, 7, 16, 25, 28, 33, 34, 40, 48, 69, 74, 75, 81, 82, 88, 95, 96, 125, 130, 131, 132, 143, 160, 164, 166, 167, 171], "best": [1, 16, 54, 56, 58, 63, 78, 84, 85, 86, 108, 127, 129], "hash": [1, 109, 137], "featur": [1, 143], "classif": [1, 125, 148], "malwar": 1, "detect": [1, 36, 143, 149], "computing": 1, "deriv": 1, "tensor": 1, "express": [1, 27, 33, 34, 40, 41, 46, 76, 80, 94, 95, 98, 103, 118, 126, 152, 166, 167, 168, 170, 176], "prec": [1, 27, 33, 44, 50, 54, 69, 70, 76, 78, 118, 126, 136, 138, 139, 156, 158, 160, 164, 166, 167, 175], "op\u00e9rationnel": [1, 3, 42], "robert": 1, "faur": 1, "bernard": [1, 143], "lemair": 1, "christoph": 1, "picouleau": 1, "programming": [1, 10, 128], "pearl": 1, "jon": 1, "bentley": 1, "3rd": 1, "edit": [1, 3, 26, 52, 160], "thom": 1, "cormen": 1, "charl": [1, 66, 100], "e": [1, 5, 7, 19, 24, 25, 27, 32, 33, 34, 35, 36, 40, 48, 51, 58, 59, 64, 65, 66, 67, 87, 90, 95, 96, 98, 105, 108, 117, 118, 121, 126, 127, 128, 136, 137, 141, 143, 144, 145, 148, 149, 150, 152, 155, 156, 160, 161, 166, 167, 168, 170, 171, 173, 175], "leiserson": 1, "ronald": 1, "rivest": 1, "clifford": 1, "stein": 1, "128": [1, 54, 61, 76, 99, 156], "compr": [1, 2, 35, 40, 42, 133, 134, 136, 143, 152, 160, 166, 167, 175], "cod": [1, 2, 3, 5, 7, 9, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 48, 52, 60, 64, 65, 67, 69, 70, 71, 73, 79, 81, 82, 83, 84, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 109, 114, 115, 118, 122, 123, 124, 128, 129, 130, 131, 132, 134, 142, 143, 144, 150, 152, 154, 155, 156, 158, 160, 162, 164, 166, 167, 168, 170, 171, 173], "vi": [1, 2, 3, 9, 25, 33, 34, 42, 52, 78, 101, 128, 142, 143, 152, 160, 166, 168, 171, 173], "accompagn": [1, 3, 42], "r\u00e9pertoir": [1, 3, 6, 40, 42, 120, 142, 160, 168, 170, 175], "github": [1, 6, 12, 25, 33, 34, 35, 36, 37, 38, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 160, 170], "tryalgo": 1, "document": [1, 33, 34, 36, 46, 118, 142, 152, 155, 160, 164, 167, 170, 173], "r\u00e9solu": [1, 11, 15, 29, 55, 64, 92, 106, 167], "Des": [1, 12, 39, 45, 167], "appliqu": [1, 2, 6, 8, 25, 27, 34, 40, 41, 45, 48, 51, 52, 56, 60, 64, 78, 79, 88, 94, 95, 96, 97, 100, 104, 108, 109, 113, 119, 126, 132, 142, 148, 150, 151, 152, 155, 156, 160, 162, 166, 167, 168, 170, 171, 173, 175], "efficient": [1, 35, 65], "practical": 1, "preconditioning": 1, "solving": 1, "laplacian": 1, "survey": 1, "driven": 1, "dictionary": [1, 2, 3, 6, 7, 65, 152, 160, 162, 167, 170], "based": [1, 7, 56, 130, 131], "method": [1, 7, 16, 33, 36, 113, 114, 115, 124, 152, 155, 156, 160, 167, 170], "3d": [1, 33], "modeling": 1, "project": [1, 3, 33], "eul": [1, 33, 65], "archiv": 1, "jam": [1, 14, 28, 33, 36, 40, 54, 69, 70, 77, 78, 102, 109, 128, 129, 130, 131, 136, 143, 152, 155, 156, 160, 166, 167, 173, 175], "2020": [1, 36, 56, 67], "2019": [1, 67], "2018": [1, 67, 109], "2017": [1, 67, 163], "earli": 1, "leetcod": 1, "comp\u00e9tit": 1, "recensent": [1, 87], "plusieur": [1, 3, 16, 19, 28, 33, 35, 36, 38, 40, 42, 45, 48, 49, 53, 79, 80, 82, 83, 84, 85, 86, 89, 99, 110, 113, 120, 126, 127, 129, 131, 132, 134, 139, 141, 142, 143, 149, 150, 152, 155, 164, 167, 168, 169, 172, 173, 175], "ci": [1, 2, 9, 25, 28, 33, 35, 36, 40, 42, 45, 48, 51, 53, 57, 59, 64, 70, 76, 78, 80, 81, 82, 87, 89, 97, 103, 109, 117, 118, 121, 125, 126, 132, 142, 144, 148, 152, 155, 156, 158, 160, 161, 162, 163, 166, 167, 168, 170, 171, 173, 175], "southwestern": 1, "europ": [1, 143], "regional": 1, "contest": 1, "swerc": 1, "pr\u00e9c\u00e9dent": [1, 8, 12, 13, 24, 33, 34, 40, 41, 50, 51, 52, 53, 54, 55, 57, 59, 60, 65, 76, 78, 79, 80, 81, 82, 83, 84, 89, 99, 102, 104, 107, 118, 120, 125, 129, 134, 136, 137, 138, 142, 145, 147, 150, 152, 155, 156, 160, 164, 166, 167, 168, 170, 173, 175], "acm": 1, "icpc": 1, "liv": 1, "castor": 1, "jeun": [1, 143], "coding": [1, 2, 26, 42, 45, 142, 143, 160, 164, 167], "you": [1, 17, 130, 131, 152], "should": [1, 17, 114], "know": [1, 5, 16], "least": [1, 16, 80, 88], "one": [1, 3, 5, 32, 33, 34, 35, 79, 80, 114, 115, 130, 131, 160], "languag": [1, 36, 53, 58, 109, 143, 149, 167, 171], "really": 1, "wel": [1, 7], "it": [1, 7, 17, 25, 28, 33, 56, 63, 65, 85, 86, 125, 130, 131, 152, 160, 166], "preferably": 1, "be": [1, 2, 3, 7, 16, 33, 36, 46, 56, 114, 130, 131, 143, 160, 162, 166], "jav": 1, "ok": [1, 17, 152, 160, 166], "too": [1, 130, 131, 166], "sinc": [1, 130, 131], "pretty": 1, "similar": 1, "will": [1, 56, 130, 131, 160], "expected": [1, 17, 55, 56, 95, 119, 166], "writ": [1, 17, 26, 34, 36, 40, 106, 109, 142, 143, 149, 155, 156, 168], "som": [1, 16, 17], "your": 1, "interview": 1, "amount": 1, "detail": [1, 2, 42, 45, 106, 160, 167], "about": [1, 2, 3, 5, 27, 40, 52, 55, 76, 79, 97, 104, 126, 130, 131, 160, 162, 167, 171, 173], "favorit": 1, "sorting": [1, 167], "how": [1, 3, 17, 33, 34, 42, 79, 130, 131, 137, 156, 167], "do": [1, 9, 26, 33, 46, 69, 70, 130, 131, 143, 152, 156, 166, 167], "bubbl": 1, "log": [1, 33, 44, 48, 56, 69, 79, 96, 106, 121, 136, 139, 143, 151, 156, 158, 168, 170, 173], "two": [1, 16, 17, 33, 34, 56, 88, 130, 131], "say": 1, "quick": [1, 33], "merg": [1, 36, 46, 106], "can": [1, 2, 3, 7, 17, 25, 33, 42, 72, 156, 160, 161, 162], "highly": 1, "useful": 1, "situat": [1, 152, 154, 166, 173], "wher": [1, 3, 33, 34, 130, 131, 160], "impractical": 1, "so": [1, 17, 46, 56, 130, 131], "tak": [1, 35], "look": [1, 33], "hashtabl": 1, "arguably": 1, "singl": [1, 36], "most": [1, 2, 3, 38, 40, 42, 69, 70, 72, 73, 78, 130, 131, 152, 155, 156, 160, 162, 166, 167, 170, 175], "import": [1, 2, 3, 5, 7, 16, 17, 18, 21, 22, 23, 25, 27, 28, 32, 33, 34, 35, 36, 37, 40, 42, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 161, 162, 163, 164, 166, 167, 168, 171, 173, 175], "known": 1, "mankind": 1, "absolutely": 1, "they": [1, 160, 170], "work": [1, 26], "able": 1, "only": [1, 3, 7, 170], "spac": [1, 48, 114], "basic": [1, 5, 42], "construct": [1, 55, 80, 113, 126, 142, 143, 153, 159, 165, 167, 173, 175], "traversal": 1, "manipul": [1, 8, 12, 18, 19, 27, 30, 31, 32, 40, 41, 45, 109, 132, 142, 150, 152, 155, 164, 166, 169, 170], "familiariz": 1, "yourself": 1, "with": [1, 2, 3, 7, 16, 17, 18, 26, 33, 34, 36, 40, 42, 46, 48, 66, 106, 109, 114, 117, 124, 125, 126, 130, 131, 143, 149, 155, 156, 158, 160, 164, 166, 167, 168, 173], "binary": [1, 168], "ary": 1, "familiar": 1, "typ": [1, 2, 16, 24, 25, 26, 33, 34, 38, 39, 48, 55, 69, 70, 73, 78, 95, 97, 100, 101, 106, 109, 113, 114, 115, 117, 118, 127, 131, 132, 134, 136, 137, 142, 144, 145, 150, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 173, 175], "balanced": 1, "wheth": [1, 46, 160], "red": [1, 36, 48, 74, 75, 99, 117, 160], "black": [1, 95, 160], "splay": 1, "avl": [1, 137], "implemented": 1, "understand": 1, "treetraversal": 1, "bf": 1, "df": [1, 7, 17, 23, 34, 36, 49, 56, 57, 59, 62, 78, 83, 84, 87, 99, 105, 106, 111, 112, 117, 121, 126, 127, 143, 167], "different": [1, 3, 16, 17, 34, 81, 82, 130, 131, 170], "between": [1, 17, 130, 131, 170], "inord": 1, "postord": 1, "preord": 1, "are": [1, 16, 17, 33, 114, 130, 131, 160, 167, 170], "ther": [1, 16, 130, 131], "way": [1, 3, 6, 33, 34, 42, 108, 130, 131], "represent": [1, 7, 109, 124], "memory": [1, 7, 160], "pointer": 1, "adjacency": 1, "each": [1, 16, 33, 34, 35, 54, 56, 62, 81, 82, 84, 91, 103, 109, 110, 111, 121, 124, 130, 131, 133, 139, 149, 160], "pros": 1, "con": [1, 55, 143], "breadth": 1, "first": [1, 7, 33, 111, 130, 131, 160], "depth": [1, 58], "their": [1, 7, 130, 131], "computational": 1, "complexity": [1, 137], "tradeoff": 1, "them": [1, 3, 16, 35, 170], "real": 1, "if": [1, 2, 3, 7, 16, 17, 19, 21, 24, 25, 26, 27, 28, 34, 38, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 156, 160, 162, 166, 167, 168, 170, 171, 173, 175], "get": [1, 2, 3, 25, 26, 33, 34, 40, 52, 62, 64, 65, 70, 79, 110, 113, 114, 117, 118, 121, 127, 133, 136, 137, 149, 152, 160, 162, 166, 167, 171, 173], "chanc": [1, 66, 87, 109, 143, 170], "try": [1, 19, 21, 24, 25, 33, 34, 35, 36, 40, 41, 51, 69, 73, 78, 80, 87, 95, 124, 127, 141, 143, 144, 152, 156, 161, 166, 167, 171, 175], "study": [1, 17], "up": [1, 17, 34, 40], "fanci": 1, "such": [1, 3, 130, 131, 175], "dijkstr": 1, "other": [1, 7, 46, 149, 160], "many": [1, 16, 17, 33, 56, 114, 130, 131, 166], "especially": 1, "famous": 1, "knapsack": 1, "recogniz": 1, "when": [1, 6, 9, 130, 131, 160], "ask": 1, "disguis": 1, "find": [1, 7, 16, 17, 40, 66, 117, 167, 175], "out": [1, 7, 17, 26, 34, 46, 70, 72, 73, 130, 131, 152, 156, 166], "whatnp": 1, "mean": [1, 33, 34, 35, 36, 48, 54, 56, 57, 62, 80, 81, 82, 83, 84, 85, 86, 87, 91, 103, 109, 110, 111, 115, 121, 124, 133, 139, 149, 152], "mathematic": 1, "interviewer": 1, "discret": [1, 79], "math": [1, 16, 27, 33, 34, 68, 69, 74, 75, 85, 90, 100, 107, 109, 121, 126, 136, 138, 139, 142, 143, 145, 151, 152, 156, 166, 170, 173], "question": [1, 16, 27, 33, 34, 35, 40, 45, 54, 57, 59, 60, 64, 65, 68, 69, 71, 76, 78, 79, 81, 83, 84, 85, 86, 88, 106, 117, 138, 144, 150, 152, 153, 160, 166, 173], "this": [1, 3, 7, 16, 17, 46, 52, 124, 130, 131, 160, 166, 170, 173], "mor": [1, 5, 35, 106], "prevalent": 1, "than": [1, 16, 17, 33, 121, 130, 131], "compan": 1, "becaus": 1, "counting": 1, "probability": 1, "101": [1, 33, 36], "surround": 1, "us": 1, "spend": [1, 130, 131], "befor": [1, 16], "refreshing": 1, "teaching": 1, "essential": 1, "combinatoric": 1, "choos": [1, 130, 131], "ilk": 1, "operating": 1, "process": [1, 3, 7, 175], "thread": [1, 18, 38, 160, 170, 172], "concurrency": 1, "lock": [1, 18, 160, 172], "mutex": 1, "semaphor": [1, 173], "monitor": 1, "knowabout": 1, "deadlock": 1, "livelock": 1, "avoid": [1, 16, 65, 175], "what": [1, 3, 9, 33, 42, 108, 130, 131, 160, 170], "resourc": [1, 56, 160], "need": [1, 17], "context": [1, 155, 156, 166, 173], "switching": 1, "initiated": 1, "by": [1, 3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 40, 113, 114, 115, 124, 130, 131, 143, 155, 160, 170], "underlying": 1, "hardwar": 1, "littl": [1, 5], "scheduling": 1, "world": [1, 34, 40], "rapidly": 1, "moving": 1, "toward": 1, "mult": 1, "cor": [1, 34, 36, 54, 113, 114, 115, 124, 129, 142, 156], "fundamental": 1, "modern": 1, "inform": [1, 2, 6, 16, 24, 25, 26, 27, 34, 40, 41, 45, 49, 52, 66, 83, 84, 95, 106, 109, 114, 117, 118, 142, 145, 152, 155, 156, 158, 160, 162, 164, 166, 168, 170, 171, 175], "design": [1, 152, 173], "distributed": 1, "parallel": [1, 53, 83, 84, 118, 124, 160, 172, 173], "commentaire_accentu": [2, 4, 42], "sourc": [2, 3, 5, 6, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 38, 40, 42, 44, 156, 160, 166, 170], "aid": [2, 24, 28, 33, 40, 48, 53, 58, 59, 64, 80, 103, 114, 142, 143, 146, 147, 148, 155, 160, 166, 167, 168, 170, 173, 175], "contient": [2, 11, 19, 24, 27, 33, 34, 35, 36, 40, 41, 44, 49, 50, 54, 65, 68, 70, 73, 76, 78, 91, 109, 118, 121, 126, 127, 132, 133, 134, 137, 142, 144, 148, 149, 150, 152, 155, 156, 160, 162, 164, 166, 167, 168, 170, 173, 175], "assur": [2, 33, 40, 45, 50, 65, 78, 105, 114, 120, 160, 170, 171, 173], "langag": [2, 3, 5, 12, 24, 25, 27, 31, 33, 34, 35, 36, 39, 41, 43, 44, 45, 58, 59, 68, 69, 79, 81, 82, 97, 100, 102, 109, 113, 114, 118, 120, 132, 133, 134, 142, 143, 144, 149, 150, 153, 154, 155, 156, 158, 160, 161, 162, 165, 168, 170, 171, 172, 173, 175], "con\u00e7u": [2, 42, 45, 168, 170], "anglais": [2, 3, 16, 35, 41, 42, 49, 55, 63, 109, 113, 148, 149, 164, 167, 168, 171, 175], "fait": [2, 3, 10, 12, 16, 18, 20, 21, 24, 25, 27, 28, 33, 34, 35, 40, 41, 42, 44, 45, 48, 50, 51, 53, 55, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 87, 89, 91, 95, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 118, 125, 126, 127, 128, 133, 134, 135, 136, 137, 138, 142, 143, 144, 147, 150, 152, 155, 160, 162, 163, 166, 167, 168, 170, 171, 173], "alphabet": [2, 27, 42, 58, 66, 71, 136, 166], "ponctuat": [2, 42], "compris": [2, 24, 42, 96, 167, 175], "d\u00e9clench": [2, 3, 33, 40, 42, 70, 73, 78, 82, 136, 145, 151, 152, 155, 158, 160, 166, 167, 173], "erreur": [2, 3, 25, 28, 33, 34, 35, 38, 39, 41, 42, 45, 48, 52, 68, 70, 71, 72, 73, 78, 79, 80, 81, 83, 84, 88, 95, 97, 100, 119, 120, 126, 136, 139, 144, 145, 150, 151, 152, 157, 158, 160, 162, 164, 166, 167], "fil": [2, 3, 7, 29, 38, 40, 42, 45, 46, 72, 78, 96, 98, 126, 152, 155, 156, 160, 162, 166, 167, 168, 170, 172, 175], "faq_cvxopt": [2, 42], "py": [2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 38, 40, 42, 45, 55, 56, 76, 113, 114, 115, 124, 139, 142, 143, 147, 156, 160, 162, 166, 167, 168, 170], "lin": [2, 3, 7, 28, 32, 33, 34, 38, 40, 42, 45, 69, 72, 75, 81, 82, 109, 113, 141, 152, 155, 156, 158, 160, 162, 166, 167, 170, 175], "syntaxerror": [2, 40, 42, 45, 72, 155, 166, 167], "utf": [2, 26, 34, 36, 42, 45, 66, 105, 109, 142, 143, 149, 156, 160, 164, 167, 168], "starting": [2, 42, 167], "\u00e8": [2, 42, 58, 149], "but": [2, 16, 17, 27, 33, 42, 45, 46, 114, 160, 167], "no": [2, 17, 42, 45, 46, 70, 108, 125, 143, 152, 160, 167, 175], "encoding": [2, 34, 36, 40, 42, 45, 79, 109, 142, 143, 149, 156, 165, 167], "declared": [2, 42, 45, 167], "see": [2, 6, 7, 33, 42, 45, 66, 114, 160, 162, 167], "http": [2, 3, 6, 16, 33, 34, 36, 42, 45, 53, 56, 58, 65, 66, 80, 87, 102, 106, 109, 114, 117, 126, 127, 142, 143, 148, 149, 167], "org": [2, 3, 16, 33, 36, 42, 45, 53, 58, 80, 102, 114, 124, 143, 167], "dev": [2, 12, 33, 34, 42, 54, 62, 64, 80, 81, 82, 84, 91, 103, 109, 110, 111, 121, 124, 133, 139, 143, 149, 160, 167, 170], "pep": [2, 33, 42, 45, 80, 167], "0263": [2, 42, 45, 167], "Pour": [2, 3, 9, 16, 19, 24, 25, 26, 27, 28, 33, 34, 35, 38, 40, 42, 45, 48, 49, 50, 52, 54, 55, 56, 60, 62, 64, 65, 66, 68, 69, 70, 73, 76, 79, 80, 81, 82, 83, 84, 86, 87, 89, 91, 97, 99, 102, 103, 108, 109, 113, 115, 117, 118, 121, 122, 123, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 148, 150, 152, 155, 156, 160, 162, 164, 166, 167, 168, 170, 171, 173, 175], "r\u00e9soudr": [2, 11, 33, 42, 56, 59, 65, 76, 126, 131, 152, 167, 173], "interpr\u00e9teur": [2, 3, 18, 40, 41, 42, 45, 59, 95, 99, 114, 145, 152, 155, 156, 166, 167, 170], "peuvent": [2, 25, 34, 38, 40, 41, 42, 45, 48, 65, 70, 83, 84, 95, 109, 126, 128, 136, 150, 152, 155, 160, 162, 164, 166, 167, 168, 170, 173], "appara\u00eetr": [2, 26, 40, 42, 65, 111, 152, 160, 166, 167, 168], "\u00e9crir": [2, 3, 19, 20, 24, 27, 34, 35, 37, 39, 42, 45, 48, 54, 61, 62, 64, 65, 72, 77, 78, 83, 84, 85, 86, 97, 100, 101, 105, 107, 110, 118, 119, 126, 132, 133, 134, 136, 138, 139, 142, 143, 144, 145, 148, 150, 151, 152, 156, 160, 162, 164, 166, 167, 168, 170, 171, 173, 175], "lign": [2, 3, 5, 10, 24, 25, 27, 32, 33, 34, 35, 40, 42, 45, 48, 49, 53, 54, 55, 58, 62, 64, 65, 70, 72, 73, 75, 76, 78, 80, 83, 84, 88, 91, 95, 96, 106, 109, 113, 114, 118, 126, 128, 132, 133, 136, 137, 141, 142, 143, 144, 145, 150, 151, 155, 156, 161, 162, 164, 166, 167, 168, 170, 173, 175], "latin": [2, 42, 143, 149, 164, 167], "Ou": [2, 14, 20, 34, 40, 42, 56, 72, 73, 80, 97, 106, 132, 160, 166, 167, 168], "chinois": [2, 42, 65, 149], "\u00e9diteur": [2, 3, 42, 45, 164, 167, 168], "scit": [2, 3, 42], "window": [2, 14, 36, 40, 45, 160, 164, 167, 168], "conseil": [2, 33, 34, 39, 42, 65, 79, 134, 143, 152, 162, 166, 167, 170, 173, 175], "ferm": [2, 33, 40, 42, 89, 142, 155, 156, 168], "fichi": [2, 3, 26, 36, 39, 42, 56, 94, 106, 109, 120, 126, 127, 152, 155, 156, 160, 162, 163, 165, 166, 167, 169, 173, 175], "puis": [2, 3, 9, 13, 22, 28, 34, 35, 36, 40, 42, 45, 48, 52, 56, 57, 60, 65, 66, 69, 76, 81, 82, 83, 85, 86, 87, 96, 97, 99, 102, 107, 112, 121, 136, 137, 139, 142, 151, 152, 158, 160, 162, 166, 167, 168, 170, 171, 173, 175], "r\u00e9ouvr": [2, 42, 168], "trait": [2, 3, 24, 27, 34, 42, 48, 54, 64, 78, 81, 108, 121, 126, 137, 143, 155, 160, 166, 167, 168, 172, 173, 175], "encodag": [2, 42, 155, 164], "norm": [2, 40, 42, 107, 115, 132, 149, 152], "internet": [2, 3, 25, 34, 40, 42, 44, 45, 48, 64, 65, 109, 117, 142, 143, 148, 156, 160, 167, 168, 170, 171, 173], "pourquoi": [2, 5, 19, 27, 33, 36, 40, 48, 52, 54, 56, 59, 64, 65, 70, 72, 73, 83, 84, 103, 109, 118, 132, 136, 142, 144, 152, 155, 160, 166, 167, 168, 170, 173, 175], "pr\u00e9fer": [2, 3, 25, 27, 40, 42, 45, 69, 76, 78, 118, 148, 152, 155, 156, 158, 160, 162, 166, 167, 168, 170, 171], "partag": [2, 33, 34, 38, 41, 42, 45, 52, 58, 152, 160], "pag": [2, 3, 33, 34, 35, 36, 40, 42, 45, 65, 105, 109, 113, 117, 124, 136, 137, 142, 146, 147, 148, 166, 167, 170, 172, 173, 175], "dictionnaire_modifie_dans_la_boucl": [2, 4, 162], "boucl": [2, 12, 18, 19, 24, 27, 28, 34, 35, 37, 38, 39, 54, 55, 58, 59, 62, 65, 68, 69, 70, 71, 72, 73, 76, 78, 81, 82, 94, 102, 107, 119, 133, 144, 152, 155, 156, 158, 160, 162, 165, 173], "parcourt": [2, 25, 28, 40, 54, 58, 59, 65, 70, 71, 133, 160, 162, 166, 168], "\u00e9vit": [2, 24, 28, 35, 36, 38, 40, 54, 55, 60, 62, 64, 65, 68, 70, 76, 78, 80, 83, 85, 86, 99, 104, 129, 132, 136, 139, 143, 147, 152, 160, 162, 163, 164, 166, 167, 168, 170, 171, 173, 175], "contain": [2, 16, 88, 132, 137, 160, 162], "supprim": [2, 3, 34, 36, 40, 42, 55, 65, 70, 126, 142, 150, 152, 156, 158, 160, 162, 166, 167, 168, 170, 173], "ancien": [2, 134, 143, 152, 160, 162], "d\u00e9but": [2, 3, 34, 35, 36, 38, 40, 42, 53, 55, 65, 78, 101, 109, 115, 116, 152, 160, 161, 162, 166, 167, 170, 173, 175], "rang": [2, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 33, 34, 36, 37, 38, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 101, 102, 103, 104, 107, 110, 111, 112, 113, 114, 115, 118, 119, 121, 125, 126, 127, 129, 132, 133, 134, 135, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 155, 156, 160, 161, 162, 166, 168, 170, 173], "v": [2, 20, 33, 34, 41, 49, 58, 62, 64, 65, 69, 71, 79, 82, 83, 89, 96, 97, 98, 111, 116, 118, 121, 126, 127, 128, 129, 134, 135, 136, 137, 143, 149, 150, 151, 152, 155, 160, 162, 166, 175], "item": [2, 40, 58, 62, 64, 65, 69, 70, 71, 76, 79, 91, 105, 106, 109, 110, 114, 115, 117, 118, 121, 136, 149, 152, 161, 162, 167], "del": [2, 25, 40, 56, 59, 70, 73, 85, 114, 120, 142, 150, 152, 162, 166, 167, 168], "pr\u00e9viennent": [2, 162], "intervient": [2, 27, 48, 155, 162, 166, 171], "tard": [2, 34, 38, 40, 48, 148, 155, 158, 160, 162, 166, 167, 173], "valeur": [2, 6, 19, 20, 27, 33, 34, 38, 40, 45, 48, 54, 56, 57, 58, 62, 69, 70, 71, 72, 76, 78, 79, 80, 81, 82, 86, 87, 102, 112, 113, 115, 118, 121, 122, 123, 126, 134, 137, 138, 139, 142, 143, 144, 145, 148, 149, 150, 151, 152, 160, 161, 162, 163, 164, 167, 168, 170], "numer": [2, 3, 19, 27, 31, 33, 34, 41, 42, 45, 71, 78, 79, 83, 84, 102, 115, 120, 126, 132, 139, 142, 148, 150, 152, 162, 166, 167, 168, 171, 172, 175], "inattendu": [2, 142, 156, 162, 166], "traceback": [2, 3, 38, 40, 42, 69, 70, 72, 73, 78, 152, 155, 156, 160, 162, 166, 167, 175], "call": [2, 3, 7, 38, 40, 42, 69, 70, 72, 73, 78, 113, 114, 115, 124, 152, 155, 157, 160, 162, 166, 167, 175], "session1": [2, 162], "176": [2, 37, 78, 99, 162], "liste_modifie_dans_la_boucl": [2, 162], "169": [2, 56, 156, 162], "runtimeerror": [2, 65, 88, 162, 167], "changed": [2, 65, 162, 167], "siz": [2, 7, 26, 28, 33, 48, 49, 53, 57, 65, 83, 84, 111, 146, 147, 160, 162, 167, 168], "during": [2, 65, 162, 167], "stock": [2, 25, 35, 36, 41, 45, 48, 89, 96, 101, 106, 113, 118, 136, 137, 144, 154, 162, 167, 168, 171, 175], "ensuit": [2, 16, 24, 33, 34, 36, 45, 59, 60, 65, 104, 105, 106, 113, 116, 132, 136, 139, 148, 152, 154, 155, 160, 162, 166, 167, 171, 173, 175], "rem": [2, 115, 162], "append": [2, 16, 17, 18, 19, 21, 26, 33, 36, 40, 48, 49, 50, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 78, 79, 83, 84, 85, 86, 87, 91, 96, 97, 98, 99, 101, 102, 106, 107, 111, 112, 114, 115, 117, 118, 120, 121, 125, 127, 129, 133, 134, 135, 137, 141, 142, 146, 147, 150, 152, 160, 161, 162, 166, 167, 168, 170, 173, 175], "r": [2, 3, 16, 19, 25, 26, 28, 33, 34, 36, 40, 42, 48, 52, 54, 55, 56, 57, 58, 59, 61, 64, 66, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 104, 106, 107, 109, 114, 115, 122, 123, 126, 127, 129, 130, 131, 137, 142, 143, 145, 146, 147, 149, 150, 152, 156, 160, 162, 164, 166, 168, 170, 171, 173, 175], "autoris": [2, 64, 82, 97, 143, 152, 160, 162, 163, 166, 168, 170, 173], "absten": [2, 162], "ains": [2, 34, 40, 48, 68, 72, 76, 84, 96, 105, 125, 145, 151, 152, 155, 156, 160, 162, 166, 167, 168, 173], "habitud": [2, 45, 143, 162, 166], "serv": [2, 25, 33, 34, 36, 40, 41, 56, 78, 79, 81, 82, 111, 136, 143, 152, 160, 162, 166, 167, 168, 175], "dix_entiers_carr": [2, 4, 42, 162], "renvoi": [2, 3, 5, 6, 7, 33, 34, 48, 71, 152, 160], "r\u00e9el": [2, 3, 27, 35, 38, 40, 42, 48, 78, 106, 118, 132, 150, 151, 152, 163, 165, 166, 168, 171], "standard": [2, 3, 12, 24, 25, 33, 34, 40, 42, 109, 132, 137, 142, 152, 155, 161, 164, 166, 168, 170, 173], "moment": [2, 20, 33, 42, 45, 53, 78, 95, 96, 98, 103, 109, 139, 143, 144, 150, 152, 160, 164, 166, 167, 168, 173], "impact": [2, 7, 40, 41, 42, 45, 166, 167], "d\u00e9roul": [2, 34, 42, 64, 160, 166, 168], "mot": [2, 20, 34, 42, 64, 66, 69, 72, 73, 76, 92, 96, 105, 134, 137, 142, 143, 144, 148, 152, 155, 160, 162, 166, 167, 168, 170, 173, 175], "cl\u00e9": [2, 19, 20, 24, 34, 36, 41, 42, 62, 65, 66, 69, 70, 71, 79, 96, 100, 118, 120, 122, 123, 134, 137, 142, 144, 148, 152, 155, 162, 166, 168, 170, 173, 175], "rencontr": [2, 40, 42, 136, 152, 155, 166, 168, 170], "commenc": [2, 3, 16, 19, 33, 40, 41, 42, 45, 50, 52, 53, 64, 65, 68, 71, 78, 79, 87, 88, 104, 118, 129, 136, 139, 142, 143, 148, 150, 151, 160, 166, 167, 168, 173, 175], "quitt": [2, 42, 143, 148, 151, 166], "transmet": [2, 42], "modif": [2, 27, 28, 33, 34, 38, 40, 42, 45, 49, 51, 56, 60, 65, 70, 76, 83, 84, 108, 111, 134, 136, 137, 152, 160, 163, 166, 167, 168, 170, 173], "votr": [2, 3, 19, 42, 45, 73, 78, 80, 84, 101, 120, 132, 143, 148, 168, 170, 171], "algorithm": [2, 6, 10, 12, 13, 16, 19, 24, 28, 40, 42, 43, 44, 52, 54, 55, 60, 63, 64, 66, 69, 70, 76, 78, 80, 81, 82, 85, 86, 88, 90, 97, 105, 107, 114, 116, 120, 121, 124, 125, 127, 134, 139, 150, 151, 152, 155, 162, 165, 175], "sp\u00e9cif": [2, 27, 33, 34, 40, 42, 87, 132, 152, 160, 161, 164, 168, 170, 171, 172], "diff\u00e8rent": [2, 162], "mani": [2, 3, 16, 27, 33, 34, 40, 41, 42, 48, 97, 110, 126, 145, 152, 155, 156, 160, 162, 164, 166, 167, 168, 171, 173], "i": [2, 5, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 40, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 166, 167, 168, 170, 173], "11": [2, 3, 7, 12, 14, 16, 22, 27, 28, 33, 34, 36, 40, 42, 45, 48, 49, 50, 52, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 97, 99, 103, 106, 107, 111, 112, 113, 114, 118, 119, 121, 125, 127, 137, 139, 142, 143, 145, 149, 150, 152, 155, 156, 162, 163, 166, 167], "D": [2, 7, 27, 34, 48, 50, 55, 56, 57, 64, 71, 77, 94, 95, 96, 98, 101, 105, 122, 123, 129, 137, 143, 161, 162, 167, 168, 170, 171, 175], "abreg": [2, 9, 40, 145, 162, 167], "sum": [2, 5, 17, 23, 32, 33, 34, 35, 36, 37, 38, 40, 49, 53, 54, 55, 56, 57, 60, 65, 68, 69, 70, 72, 79, 80, 81, 82, 87, 91, 102, 107, 114, 119, 124, 125, 133, 134, 135, 136, 145, 149, 162, 166, 167, 175], "repetition_a_evit": [2, 4, 162], "a_evit": 2, "fals": [2, 3, 6, 7, 16, 23, 24, 33, 34, 35, 36, 40, 42, 49, 52, 53, 55, 56, 60, 62, 66, 68, 87, 88, 98, 99, 104, 106, 107, 114, 117, 120, 132, 133, 137, 152, 155, 160, 166, 167, 173], "r\u00e9p\u00e9tit": [2, 54, 64, 66, 144, 150, 166, 167, 168, 170, 173], "varianc": [2, 27, 55, 70, 79, 80, 83, 84, 139, 162], "observ": [2, 28, 34, 56, 57, 79, 80, 81, 82, 102, 119, 121, 124, 128, 129, 147, 150, 160, 162, 173], "moyen": [2, 3, 18, 25, 27, 33, 36, 40, 42, 48, 54, 56, 57, 70, 78, 79, 80, 118, 125, 128, 134, 135, 138, 139, 144, 147, 151, 152, 160, 162, 166, 168, 170, 175], "len": [2, 16, 17, 19, 24, 26, 27, 28, 33, 34, 40, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 88, 97, 99, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 125, 127, 133, 134, 135, 136, 137, 141, 142, 150, 151, 152, 158, 160, 162, 164, 166, 167, 168, 170, 175], "variance_a_evit": [2, 162], "ob": [2, 49, 57, 59, 62, 79, 99, 106, 120, 162], "passag": [2, 27, 33, 40, 70, 101, 102, 126, 150, 162, 164, 166, 167, 168], "rien": [2, 3, 11, 18, 28, 34, 40, 42, 68, 78, 83, 84, 91, 95, 100, 107, 117, 132, 142, 143, 150, 152, 154, 160, 162, 166, 168, 170, 173], "chang": [2, 3, 6, 20, 28, 33, 34, 35, 36, 40, 42, 44, 45, 48, 49, 53, 55, 57, 59, 60, 65, 79, 83, 84, 87, 91, 95, 102, 117, 126, 133, 134, 137, 143, 147, 151, 152, 158, 160, 161, 162, 164, 166, 167, 168, 173], "vaut": [2, 24, 38, 40, 56, 62, 70, 71, 72, 79, 80, 98, 106, 109, 132, 136, 150, 151, 152, 160, 162, 166, 167, 170, 171, 173], "variabl": [2, 3, 20, 24, 27, 33, 34, 35, 39, 42, 45, 48, 55, 68, 70, 71, 73, 78, 79, 83, 84, 94, 95, 96, 100, 101, 102, 106, 107, 113, 118, 119, 128, 132, 133, 137, 139, 142, 144, 145, 152, 154, 155, 156, 160, 162, 164, 168, 170, 171, 173, 176], "moy": [2, 79, 139, 166], "co\u00fbt": [2, 5, 19, 24, 28, 34, 42, 52, 54, 58, 59, 61, 62, 65, 68, 69, 70, 76, 83, 84, 94, 102, 116, 118, 121, 125, 126, 127, 137, 150, 151, 152], "alor": [2, 3, 19, 27, 33, 34, 40, 42, 45, 48, 49, 53, 54, 55, 56, 58, 59, 61, 62, 64, 65, 68, 78, 79, 80, 111, 114, 118, 121, 126, 129, 130, 131, 137, 139, 141, 143, 152, 155, 156, 160, 162, 166, 167, 168, 170, 173], "endroit": [2, 40, 45, 65, 81, 106, 152, 156, 158, 160, 164, 166, 167, 168, 170, 173], "survient": [2, 78, 152, 155, 156, 160, 166, 167, 173], "suiv": [2, 3, 6, 12, 16, 19, 20, 27, 33, 34, 35, 36, 38, 40, 42, 45, 50, 54, 56, 58, 62, 64, 65, 66, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 92, 94, 96, 97, 102, 107, 108, 109, 113, 114, 116, 118, 120, 121, 127, 128, 129, 130, 131, 134, 136, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 175], "major": [2, 35, 118, 139, 154], "argument": [2, 3, 20, 23, 33, 34, 40, 69, 81, 82, 120, 130, 131, 134, 135, 148, 152, 155, 160, 166, 167, 168, 170, 173], "retourn": [2, 3, 5, 6, 19, 22, 27, 28, 32, 33, 34, 38, 40, 41, 42, 50, 52, 54, 59, 60, 62, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 95, 96, 97, 105, 111, 116, 118, 120, 129, 131, 134, 136, 137, 147, 148, 150, 152, 155, 156, 160, 161, 162, 163, 164, 166, 167, 168, 173, 175], "quelqu": [2, 3, 5, 16, 22, 27, 28, 32, 33, 34, 35, 39, 40, 42, 45, 48, 52, 55, 56, 58, 59, 60, 62, 64, 65, 68, 69, 70, 71, 73, 76, 79, 81, 85, 86, 89, 92, 97, 103, 104, 108, 109, 114, 120, 136, 141, 142, 143, 144, 150, 152, 155, 160, 162, 163, 166, 167, 168, 170, 173], "chos": [2, 25, 27, 28, 34, 40, 45, 58, 59, 60, 64, 65, 68, 69, 71, 79, 88, 97, 100, 109, 114, 115, 118, 134, 139, 141, 143, 144, 152, 154, 155, 160, 163, 166, 167, 168, 169, 170, 173], "tru": [2, 3, 7, 16, 17, 24, 26, 33, 34, 35, 36, 40, 42, 48, 49, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 68, 78, 85, 86, 87, 88, 95, 97, 98, 99, 102, 104, 107, 111, 114, 117, 120, 129, 132, 133, 136, 137, 141, 142, 143, 149, 150, 152, 155, 158, 160, 167, 168, 173], "leaf": [2, 55], "guess": 2, "str2dat": [2, 4, 162], "fmt": [2, 7, 173], "Y": [2, 24, 33, 64, 78, 79, 80, 81, 82, 83, 84, 103, 113, 142, 143, 160, 162, 163, 167], "convert": [2, 3, 5, 7, 25, 34, 35, 36, 40, 72, 78, 79, 87, 95, 109, 114, 126, 136, 142, 143, 145, 152, 155, 162, 163, 164, 166, 167, 168, 170, 171], "format": [2, 12, 17, 25, 33, 34, 36, 40, 48, 50, 54, 56, 61, 62, 64, 78, 79, 111, 117, 125, 132, 143, 150, 152, 155, 158, 160, 162, 164, 165, 169, 170, 171, 173, 175], "genr": [2, 143, 152, 162, 166, 175], "souvent": [2, 3, 27, 33, 34, 36, 38, 40, 42, 44, 45, 48, 52, 55, 59, 70, 73, 78, 80, 83, 84, 98, 99, 100, 103, 113, 114, 116, 120, 132, 136, 142, 144, 150, 152, 155, 156, 158, 160, 161, 162, 166, 167, 168, 170, 171, 173, 175], "pein": [2, 68, 143, 151, 162], "retrouv": [2, 10, 32, 34, 36, 56, 57, 59, 66, 79, 81, 113, 118, 129, 136, 137, 142, 150, 152, 160, 162, 166, 167, 168, 173, 175], "besoin": [2, 3, 25, 27, 33, 34, 37, 40, 42, 45, 59, 62, 65, 76, 78, 88, 97, 111, 118, 132, 136, 143, 144, 152, 156, 158, 162, 164, 167, 168, 170, 171, 173], "strftim": [2, 3, 42, 162, 163], "dt": [2, 3, 42, 56, 57, 62, 87, 125, 162], "strptim": [2, 34, 162], "16": [2, 3, 16, 27, 28, 33, 34, 35, 36, 40, 42, 48, 49, 53, 54, 55, 56, 58, 59, 61, 62, 64, 65, 67, 69, 70, 71, 73, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 97, 99, 102, 103, 105, 106, 112, 113, 114, 118, 125, 132, 133, 139, 141, 142, 143, 145, 147, 150, 151, 152, 162, 163, 164, 166, 167], "01": [2, 7, 19, 27, 33, 34, 36, 48, 49, 65, 79, 80, 83, 84, 107, 162], "2014": [2, 34, 67, 130, 131, 162], "compt": [2, 3, 4, 19, 23, 27, 34, 42, 52, 53, 54, 56, 65, 66, 69, 70, 78, 79, 81, 82, 83, 84, 87, 88, 89, 98, 107, 110, 113, 118, 120, 132, 136, 143, 144, 148, 152, 158, 161, 162, 166, 167, 168, 170, 173, 175], "li": [2, 16, 19, 27, 40, 54, 56, 70, 101, 116, 118, 143, 150, 152, 154, 160, 162, 166, 167, 168, 170, 171, 175], "occurrent": [2, 19, 40, 66, 148, 162, 167], "tableau": [2, 19, 22, 24, 27, 31, 32, 41, 49, 53, 55, 59, 68, 72, 76, 81, 84, 94, 97, 101, 104, 107, 109, 111, 113, 117, 121, 126, 127, 128, 129, 132, 133, 137, 141, 150, 151, 155, 162, 167, 168, 173, 175], "Par": [2, 3, 19, 27, 28, 33, 34, 36, 40, 42, 45, 54, 55, 66, 68, 69, 70, 78, 80, 88, 121, 126, 142, 150, 151, 152, 155, 160, 162, 164, 166, 167, 168, 173, 175], "pourr": [2, 28, 33, 34, 36, 41, 53, 54, 57, 58, 59, 60, 64, 65, 70, 78, 81, 82, 88, 95, 99, 105, 108, 109, 120, 126, 137, 138, 142, 143, 148, 152, 155, 156, 158, 160, 162, 166, 167, 168, 173], "popular": [2, 162, 170], "discour": [2, 142, 143, 162], "polit": [2, 162], "\u00e9tendu": [2, 160, 162, 166], "vocabulair": [2, 132, 162], "not": [2, 3, 7, 8, 12, 13, 16, 19, 25, 26, 27, 33, 34, 39, 40, 46, 48, 49, 52, 55, 56, 58, 60, 62, 65, 69, 70, 71, 73, 88, 91, 93, 96, 98, 99, 105, 114, 119, 126, 128, 130, 131, 133, 138, 139, 142, 143, 149, 151, 152, 155, 156, 160, 162, 166, 167, 168, 171, 173, 175], "else": [2, 3, 16, 17, 19, 25, 40, 41, 42, 45, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 68, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 95, 96, 97, 98, 99, 103, 105, 107, 110, 111, 114, 116, 118, 120, 125, 127, 129, 132, 133, 134, 135, 136, 139, 141, 144, 149, 150, 151, 152, 155, 156, 160, 162, 167, 168, 170, 171], "appropri": [2, 40, 152, 162], "puisqu": [2, 22, 33, 36, 56, 59, 62, 64, 65, 68, 70, 71, 76, 83, 102, 107, 113, 114, 121, 136, 139, 151, 152, 155, 160, 162, 166, 167, 173], "faudr": [2, 3, 27, 34, 35, 40, 42, 49, 56, 57, 59, 64, 71, 78, 83, 84, 85, 86, 87, 88, 91, 96, 97, 108, 109, 126, 136, 148, 152, 160, 162, 166, 167, 170, 173, 175], "ceux": [2, 3, 16, 33, 35, 40, 42, 44, 45, 52, 56, 65, 73, 88, 113, 126, 132, 143, 144, 152, 155, 160, 162, 166, 167, 168, 170, 171, 173, 175], "immuabl": [2, 101, 136, 150, 161, 162, 165, 166, 168], "illustr": [2, 33, 34, 116, 136, 152, 160, 162, 167, 168, 170, 175], "mat": [2, 5, 22, 25, 32, 35, 40, 49, 52, 53, 55, 62, 69, 73, 74, 75, 76, 77, 83, 84, 118, 125, 133, 142, 143, 152, 162, 168, 171], "str": [2, 3, 6, 7, 16, 21, 40, 42, 63, 70, 72, 78, 95, 96, 97, 98, 105, 109, 133, 141, 142, 143, 145, 152, 155, 160, 162, 164, 166, 168, 170, 171, 173, 175], "tupl": [2, 3, 6, 7, 16, 19, 33, 34, 40, 42, 64, 65, 70, 88, 91, 94, 114, 118, 120, 136, 150, 152, 161, 162, 166, 168], "Les": [2, 3, 5, 8, 10, 11, 12, 16, 18, 20, 22, 23, 24, 27, 33, 34, 35, 36, 38, 39, 41, 42, 45, 48, 49, 55, 56, 58, 62, 63, 64, 66, 72, 78, 80, 85, 86, 87, 88, 91, 92, 94, 97, 100, 105, 108, 109, 113, 114, 117, 118, 120, 121, 127, 128, 132, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 152, 154, 158, 159, 162, 164, 165, 167, 168, 170, 171, 173], "why": [2, 162], "key": [2, 4, 7, 34, 40, 64, 65, 88, 91, 105, 118, 127, 129, 160, 162, 166, 167], "\u00e9gal": [2, 3, 5, 19, 27, 28, 32, 33, 34, 35, 36, 40, 41, 42, 49, 52, 54, 55, 56, 57, 64, 65, 72, 78, 79, 80, 81, 82, 88, 89, 91, 97, 98, 100, 107, 109, 111, 113, 114, 116, 117, 118, 122, 123, 128, 132, 137, 139, 143, 150, 152, 158, 160, 161, 162, 166, 167, 168, 170, 173, 175], "vouloir": [2, 69, 143, 160, 162], "m\u00e9moris": [2, 27, 40, 50, 70, 71, 129, 132, 152, 156, 158, 160, 162, 173, 175], "ident": [2, 11, 22, 36, 40, 45, 50, 58, 59, 60, 65, 78, 83, 88, 95, 97, 99, 105, 113, 118, 136, 140, 141, 152, 155, 160, 162, 164, 166, 167, 168, 170, 175], "doit": [2, 3, 6, 27, 34, 36, 38, 40, 41, 42, 45, 48, 52, 56, 65, 69, 78, 79, 82, 83, 84, 85, 86, 88, 95, 109, 118, 120, 122, 123, 126, 129, 132, 134, 137, 144, 150, 152, 155, 160, 162, 164, 166, 167, 168, 170, 171, 175], "enumerat": [2, 49, 54, 55, 56, 59, 65, 66, 69, 72, 76, 78, 79, 83, 85, 86, 95, 97, 106, 108, 109, 111, 117, 118, 127, 136, 137, 143, 150, 151, 156, 158, 161, 162, 166, 168], "S": [2, 19, 34, 40, 41, 48, 56, 57, 64, 65, 76, 78, 83, 89, 116, 122, 123, 126, 137, 141, 150, 152, 155, 160, 162, 163, 166, 167, 170, 175], "suff": [2, 3, 9, 24, 27, 40, 42, 45, 50, 54, 56, 59, 61, 65, 68, 70, 71, 76, 78, 79, 80, 81, 83, 84, 88, 89, 96, 102, 127, 132, 133, 137, 139, 144, 150, 152, 160, 162, 164, 166, 167, 170, 173, 175], "just": [2, 3, 16, 25, 28, 33, 42, 54, 62, 81, 83, 97, 107, 114, 134, 154, 155, 162, 166, 167], "\u00e9critur": [2, 3, 5, 19, 22, 25, 26, 31, 32, 33, 40, 42, 61, 89, 97, 100, 109, 118, 134, 142, 145, 150, 152, 154, 155, 162, 166, 167, 168, 170, 171, 175], "construit_matrice_carre": [2, 4], "construit": [2, 6, 27, 34, 40, 49, 51, 54, 58, 65, 69, 74, 75, 76, 79, 84, 95, 107, 128, 129, 143, 152, 160, 166, 167, 168, 173], "rempl": [2, 48, 73, 77, 126, 127, 136, 150, 168, 170, 175], "z\u00e9ro": [2, 27, 33, 34, 40, 48, 54, 151, 155, 160, 167], "dimens": [2, 19, 24, 27, 34, 35, 36, 40, 55, 80, 83, 89, 92, 114, 116, 119, 132, 147, 152, 160, 167, 168], "enumerate_permut": [2, 4], "enumer": 2, "enumerate_permutations_recurs": [2, 4], "integral": [2, 4, 139, 162], "int\u00e9gral": [2, 3, 40, 42, 78, 94, 170, 173, 175], "rienmann": [2, 139], "born": [2, 65, 139], "recevoir": [2, 78, 142, 152, 155, 160, 162, 166], "inclut": [2, 27, 40, 41, 54, 81, 82, 129, 132, 152, 155, 162, 166, 167, 168, 170, 173], "calcul_n_valeur": [2, 152, 162], "prend": [2, 3, 27, 34, 42, 48, 50, 52, 56, 63, 65, 69, 72, 75, 78, 83, 84, 85, 86, 97, 100, 102, 105, 110, 113, 118, 119, 120, 127, 147, 148, 152, 160, 162, 166, 167, 168], "fonction_carr": [2, 162], "fonction_cub": [2, 162], "ex\u00e9cut": [2, 3, 20, 26, 27, 38, 40, 41, 42, 45, 65, 69, 70, 81, 82, 95, 96, 99, 113, 114, 120, 143, 144, 150, 152, 155, 156, 158, 160, 162, 166, 167, 168, 170, 173], "re": [2, 16, 18, 21, 25, 26, 36, 49, 56, 58, 59, 62, 63, 64, 68, 69, 75, 76, 78, 79, 80, 83, 84, 87, 88, 90, 91, 106, 108, 111, 112, 114, 115, 121, 124, 129, 133, 137, 141, 142, 143, 149, 152, 162, 167, 168, 170, 171, 173, 175], "l1": [2, 3, 27, 42, 150, 152, 162, 166, 167], "9": [2, 16, 17, 19, 26, 27, 28, 33, 34, 35, 36, 37, 40, 42, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 99, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 127, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 156, 161, 162, 163, 166, 167, 173, 175], "l2": [2, 3, 27, 40, 42, 76, 150, 152, 162, 166, 167], "mat2text": [2, 4, 162], "sep_row": 2, "sep_col": 2, "fn": [2, 6, 7, 40, 66, 114, 162], "text2mat": [2, 4, 162], "s\u00e9par": [2, 39, 54, 64, 81, 82, 96, 118, 128, 142, 145, 146, 147, 148, 149, 160, 162, 166, 167, 168, 175], "colon": [2, 5, 32, 34, 35, 40, 62, 80, 84, 106, 118, 126, 132, 141, 142, 152, 160, 162, 168, 175], "case11": [2, 162], "case12": [2, 162], "case13": [2, 162], "case21": [2, 162], "case22": [2, 162], "case23": [2, 162], "join": [2, 16, 21, 33, 36, 40, 53, 58, 64, 66, 72, 73, 95, 96, 97, 98, 108, 111, 113, 115, 124, 133, 137, 142, 143, 156, 162, 166, 167, 168, 170, 175], "mat2vect": [2, 4, 162], "vect2mat": [2, 4, 162], "car": [2, 3, 18, 19, 20, 25, 27, 28, 33, 34, 35, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 62, 64, 65, 69, 70, 72, 75, 76, 78, 79, 81, 82, 83, 84, 86, 88, 91, 95, 97, 102, 103, 107, 109, 114, 118, 121, 125, 127, 136, 139, 142, 144, 145, 147, 150, 152, 154, 155, 156, 158, 160, 162, 164, 166, 167, 168, 170, 171, 173], "donc": [2, 18, 19, 24, 27, 28, 33, 34, 35, 36, 40, 41, 48, 49, 55, 56, 57, 58, 59, 65, 66, 70, 76, 78, 80, 81, 87, 88, 89, 97, 98, 104, 107, 117, 125, 126, 127, 128, 129, 139, 143, 149, 151, 152, 155, 161, 162, 166, 167, 168, 170, 171, 173, 175], "indic": [2, 6, 19, 24, 28, 33, 34, 36, 38, 40, 41, 54, 59, 62, 65, 68, 72, 73, 76, 85, 86, 117, 118, 147, 150, 152, 155, 156, 160, 161, 162, 166, 167, 175], "bien": [2, 3, 9, 18, 24, 27, 33, 36, 42, 45, 48, 50, 51, 52, 53, 55, 59, 60, 64, 65, 68, 78, 81, 82, 83, 85, 86, 87, 98, 100, 102, 104, 106, 107, 113, 117, 118, 120, 126, 132, 143, 144, 145, 147, 149, 152, 155, 156, 158, 160, 162, 166, 167, 168], "s\u00fbr": [2, 27, 28, 52, 56, 59, 62, 65, 73, 78, 127, 132, 151, 162, 167, 168], "const": [2, 3, 18, 20, 33, 35, 42, 56, 79, 125, 132, 139, 152, 162, 163, 173], "Vous": [2, 33, 34, 35, 59, 64, 113, 126, 137, 142, 143, 162], "pouv": [2, 33, 35, 64, 78, 81, 82, 88, 113, 126, 137, 143, 148, 162], "reduc": [2, 16, 102, 114, 115, 124, 162], "from": [2, 3, 7, 16, 18, 21, 25, 26, 33, 34, 35, 36, 40, 41, 46, 49, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 69, 74, 75, 78, 80, 83, 85, 86, 87, 88, 90, 91, 99, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 124, 125, 126, 127, 129, 130, 131, 136, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 156, 161, 162, 166, 168, 170, 171, 175], "functool": [2, 102, 162], "lambd": [2, 7, 15, 27, 29, 33, 54, 73, 79, 88, 110, 112, 113, 122, 123, 129, 134, 135, 138, 139, 162, 170], "minindex": [2, 4, 162], "min": [2, 17, 28, 33, 34, 40, 49, 51, 52, 54, 55, 59, 60, 62, 68, 74, 78, 79, 80, 83, 84, 88, 91, 95, 120, 126, 127, 129, 133, 162, 166, 167], "minium": [2, 162], "r\u00e9flex": [2, 15, 29, 92, 142, 148, 158, 162, 167], "recod": [2, 162], "conserv": [2, 3, 20, 25, 33, 34, 41, 42, 50, 62, 64, 76, 81, 98, 118, 125, 129, 150, 151, 152, 161, 162, 166, 167, 168, 171], "434": [2, 115, 162], "43": [2, 22, 33, 34, 36, 65, 78, 82, 83, 108, 114, 117, 136, 149, 152, 162, 166], "6436": [2, 162], "Mais": [2, 27, 28, 34, 35, 40, 52, 54, 57, 58, 62, 64, 65, 66, 69, 70, 72, 91, 95, 96, 97, 100, 116, 118, 121, 126, 136, 147, 148, 152, 156, 162, 167, 173, 175], "astuc": [2, 3, 15, 29, 35, 39, 42, 53, 54, 98, 143, 162, 170, 173], "obten": [2, 26, 27, 33, 34, 40, 54, 59, 62, 103, 107, 111, 126, 127, 133, 136, 139, 142, 148, 152, 160, 162, 164, 166, 167, 168, 175], "reprogramm": [2, 160, 162], "chois": [2, 6, 27, 28, 33, 34, 35, 38, 40, 45, 48, 55, 56, 59, 64, 65, 77, 79, 83, 84, 85, 86, 88, 89, 96, 98, 99, 101, 104, 107, 119, 122, 123, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 152, 156, 160, 162, 166, 167, 168, 171, 175], "coupl": [2, 24, 33, 40, 41, 48, 49, 62, 76, 83, 84, 107, 113, 118, 136, 137, 150, 152, 155, 160, 162, 166, 167, 173, 175], "d\u00e9parteg": [2, 162], "exaequo": [2, 162], "45": [2, 33, 34, 36, 37, 55, 65, 80, 91, 108, 114, 117, 145, 149, 162, 166, 167], "56": [2, 33, 36, 37, 65, 79, 80, 83, 84, 134, 149, 152, 162, 173, 175], "permet": [2, 3, 11, 19, 24, 26, 27, 28, 31, 33, 34, 35, 36, 40, 42, 45, 48, 50, 51, 52, 58, 60, 66, 70, 78, 79, 80, 81, 82, 85, 86, 95, 96, 97, 100, 102, 106, 109, 113, 114, 118, 119, 126, 132, 133, 134, 136, 137, 138, 142, 143, 144, 150, 152, 154, 155, 156, 158, 160, 162, 163, 164, 166, 167, 168, 170, 171, 173, 175], "\u00e7a": [2, 21, 35, 58, 60, 62, 63, 100, 114, 132, 136, 137, 154, 162, 164, 174], "pris": [2, 23, 24, 54, 139, 143, 144, 148, 158, 160, 162, 168], "aucun": [2, 24, 25, 35, 40, 41, 45, 48, 49, 52, 53, 55, 62, 64, 70, 78, 87, 126, 127, 142, 143, 152, 155, 156, 160, 162, 166, 167, 168, 170], "bout": [2, 40, 44, 45, 54, 58, 76, 78, 96, 118, 139, 141, 142, 155, 161, 162, 167], "pr\u00e9senc": [2, 34, 45, 148, 152, 162, 167, 170, 175], "second": [2, 3, 5, 6, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 35, 40, 42, 45, 48, 50, 51, 52, 53, 54, 55, 58, 59, 62, 64, 65, 70, 76, 78, 79, 83, 84, 86, 88, 96, 97, 99, 100, 102, 104, 113, 115, 116, 124, 125, 127, 133, 134, 136, 139, 141, 142, 143, 144, 145, 150, 152, 155, 156, 162, 163, 166, 167, 168, 170, 171, 173, 175], "probabl": [2, 33, 48, 49, 59, 66, 84, 87, 88, 102, 107, 114, 134, 152, 162], "faibl": [2, 48, 49, 59, 65, 121, 162], "recherche_dichotom": [2, 4, 106, 116, 162], "id\u00e9": [2, 19, 48, 49, 50, 52, 53, 54, 59, 61, 65, 76, 78, 85, 86, 90, 91, 102, 103, 109, 114, 120, 121, 125, 126, 148, 160, 162, 168], "\u00e9limin": [2, 11, 16, 64, 150, 162, 175], "moiti": [2, 28, 48, 52, 89, 116, 150, 151, 162], "whil": [2, 16, 17, 19, 26, 28, 48, 49, 50, 53, 55, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 75, 76, 78, 83, 84, 85, 97, 99, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 116, 120, 127, 129, 133, 139, 141, 150, 151, 152, 162, 167, 173, 175], "elif": [2, 3, 19, 40, 41, 42, 54, 55, 58, 71, 76, 79, 81, 82, 85, 86, 88, 95, 97, 99, 111, 116, 141, 150, 151, 152, 160, 162, 166], "interven": [2, 65, 88, 102, 152, 160, 162, 168, 173], "addit": [2, 27, 40, 64, 65, 70, 78, 107, 132, 144, 150, 152, 162, 166, 167], "schem": [2, 40, 69, 137, 152, 155, 160, 162, 166, 168, 171, 173], "initialis": [2, 6, 33, 35, 45, 48, 60, 95, 126, 129, 132, 152, 162, 166, 167], "6456": [2, 162], "6933": [2, 162], "integr": [2, 3, 12, 42, 120, 138, 139, 155, 162, 166, 167, 172, 173], "sen": [2, 6, 27, 28, 33, 35, 40, 54, 58, 59, 69, 72, 101, 104, 109, 143, 155, 160, 162, 163, 166, 168], "Et": [2, 3, 19, 20, 25, 26, 28, 34, 35, 40, 42, 45, 52, 55, 56, 59, 62, 70, 78, 83, 84, 85, 86, 88, 96, 99, 100, 103, 104, 107, 109, 116, 118, 119, 132, 137, 138, 140, 143, 147, 154, 155, 158, 160, 161, 162, 166, 168, 170, 171, 173], "gr\u00e2c": [2, 40, 45, 85, 86, 152, 160, 162, 167, 168, 170, 171, 175], "s1": [2, 100, 109, 162], "s2": [2, 34, 40, 100, 162, 167, 168], "s3": [2, 162], "map": [2, 18, 73, 110, 121, 130, 131, 137, 160, 162, 166, 173], "avantag": [2, 143, 152, 160, 162, 166, 167, 168], "derni": [2, 23, 24, 28, 34, 36, 40, 41, 45, 54, 56, 58, 60, 62, 64, 65, 66, 68, 69, 72, 73, 76, 78, 83, 84, 85, 86, 98, 105, 110, 126, 129, 134, 136, 137, 150, 152, 155, 156, 160, 162, 166, 167, 168, 170, 172, 173], "elles": [2, 3, 20, 24, 25, 31, 33, 36, 40, 41, 42, 45, 53, 56, 58, 65, 85, 86, 87, 88, 89, 125, 126, 136, 142, 143, 152, 154, 155, 160, 162, 166, 167, 168, 170, 173, 175], "\u00e9vitent": [2, 162], "cr\u00e9ation": [2, 33, 34, 40, 41, 55, 65, 96, 134, 136, 142, 150, 152, 160, 162, 166, 168, 170, 173], "interm\u00e9diair": [2, 22, 40, 71, 72, 136, 137, 145, 155, 158, 162, 166, 167, 168, 171, 173], "prendr": [2, 18, 24, 27, 34, 35, 45, 48, 53, 56, 59, 65, 76, 105, 113, 120, 126, 136, 138, 142, 143, 148, 152, 162, 166, 167, 170, 175], "laquel": [2, 33, 35, 41, 45, 49, 65, 70, 71, 78, 89, 99, 113, 127, 134, 139, 150, 152, 160, 162, 166, 167, 173], "volumin": [2, 162, 167], "suivent": [2, 40, 56, 142, 143, 155, 160, 162, 166, 167, 168, 170, 175], "permettent": [2, 34, 38, 40, 41, 45, 48, 78, 95, 100, 114, 132, 142, 143, 150, 152, 154, 155, 158, 160, 162, 166, 167, 168, 170, 173, 175], "proced": [2, 40, 102, 106, 109, 116, 150, 152, 160, 162, 168, 170, 173], "r\u00e9cuper": [2, 26, 33, 35, 40, 41, 65, 66, 71, 87, 109, 117, 126, 127, 142, 143, 155, 157, 160, 161, 162, 163, 164, 166, 167, 168, 175], "depuis": [2, 3, 19, 23, 26, 33, 34, 35, 36, 40, 41, 42, 66, 87, 117, 126, 127, 132, 136, 152, 155, 160, 161, 162, 163, 164, 168, 170, 171, 173], "proven": [2, 3, 42, 160, 162, 173], "tableur": [2, 162, 168], "d\u00e9composit": [2, 13, 27, 33, 48, 94, 162], "split": [2, 7, 34, 40, 58, 105, 108, 113, 124, 126, 130, 131, 142, 143, 160, 162, 167, 168, 170, 175], "tres": [2, 3, 9, 21, 24, 25, 27, 28, 33, 34, 36, 38, 40, 42, 48, 49, 58, 59, 60, 62, 63, 65, 66, 69, 76, 79, 85, 86, 88, 91, 95, 98, 99, 106, 109, 114, 116, 118, 120, 121, 125, 126, 133, 136, 142, 143, 144, 150, 152, 155, 158, 160, 161, 162, 166, 167, 168, 170, 171], "travaill": [2, 33, 45, 78, 120, 143, 155, 162], "pand": [2, 12, 15, 16, 17, 29, 30, 31, 33, 49, 56, 57, 59, 62, 79, 83, 84, 87, 99, 105, 106, 111, 112, 117, 121, 126, 127, 143, 162, 167], "robust": [2, 162], "consider": [2, 3, 19, 24, 27, 33, 34, 36, 38, 40, 42, 50, 52, 54, 65, 69, 70, 78, 80, 81, 84, 85, 86, 88, 89, 98, 111, 114, 118, 120, 127, 128, 129, 132, 136, 144, 148, 152, 154, 156, 160, 162, 166, 167, 170, 173, 175], "to_csv": [2, 34, 87, 106, 143, 162], "read_csv": [2, 16, 34, 36, 56, 87, 106, 126, 127, 143, 162], "direct": [2, 3, 24, 33, 34, 40, 45, 50, 55, 56, 65, 76, 77, 79, 114, 120, 130, 131, 132, 140, 141, 148, 150, 152, 155, 156, 162, 166, 167, 168], "enregistr": [2, 26, 34, 35, 40, 54, 106, 114, 117, 142, 143, 152, 162, 168, 170, 175], "excel": [2, 12, 40, 45, 162, 168], "read_excel": [2, 36, 106, 162], "to_excel": [2, 34, 106, 162], "triindex": [2, 4, 162], "quicksort": [2, 162], "consist": [2, 11, 20, 21, 28, 34, 40, 45, 50, 53, 54, 56, 60, 61, 64, 65, 76, 78, 79, 80, 85, 86, 97, 102, 109, 116, 126, 136, 139, 143, 148, 150, 152, 160, 162, 166, 167, 168, 170, 171, 173, 175], "pet": [2, 3, 5, 8, 19, 21, 23, 27, 33, 35, 40, 42, 48, 49, 52, 54, 56, 58, 65, 66, 68, 70, 76, 78, 83, 88, 89, 105, 108, 109, 119, 126, 134, 139, 144, 149, 155, 162, 166, 167], "\u00e9chang": [2, 18, 62, 76, 97, 109, 142, 152, 160, 162, 167, 168, 173], "plac": [2, 5, 16, 40, 42, 45, 64, 65, 76, 78, 81, 82, 97, 99, 115, 118, 120, 126, 143, 149, 150, 152, 162, 166, 167, 168, 170, 173, 175], "recomment": [2, 35, 83, 124, 125, 143, 149, 162, 173], "proc\u00e9dur": [2, 143, 162, 170], "troisiem": [2, 35, 40, 45, 52, 59, 76, 116, 133, 136, 142, 152, 155, 160, 162, 166, 167, 168, 173, 175], "jusqu": [2, 11, 16, 19, 28, 37, 40, 45, 48, 52, 56, 58, 59, 65, 69, 70, 78, 96, 97, 128, 139, 152, 155, 156, 160, 161, 162, 166, 167, 168, 173], "6": [2, 3, 6, 9, 11, 18, 20, 21, 25, 27, 28, 32, 33, 35, 36, 37, 40, 42, 45, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 128, 131, 132, 133, 134, 135, 136, 137, 139, 141, 145, 152, 154, 158, 160, 161, 162, 163, 164, 166, 167, 173, 175], "exclu": [2, 19, 28, 40, 45, 68, 81, 82, 101, 145, 150, 160, 162, 166, 167], "pos": [2, 16, 27, 45, 57, 62, 64, 70, 76, 77, 79, 80, 83, 84, 85, 86, 88, 99, 105, 106, 111, 118, 127, 133, 152, 154, 160, 162, 168, 175], "ech": [2, 76, 162], "selon": [2, 33, 34, 36, 40, 41, 45, 56, 59, 65, 69, 81, 82, 83, 85, 86, 91, 99, 111, 114, 122, 123, 125, 132, 142, 150, 152, 155, 160, 162, 164, 166, 167, 168, 175], "timsort": [2, 121, 162], "parfois": [2, 16, 20, 25, 33, 36, 40, 45, 52, 78, 87, 97, 105, 124, 126, 134, 152, 155, 156, 158, 160, 161, 162, 164, 166, 167, 168, 170, 171, 173], "amen": [2, 65, 162], "parc": [2, 3, 24, 25, 34, 38, 40, 42, 45, 56, 59, 70, 132, 133, 143, 152, 155, 162, 166, 167], "moin": [2, 3, 5, 19, 27, 34, 40, 42, 45, 48, 50, 55, 56, 58, 60, 62, 67, 69, 78, 83, 84, 88, 91, 102, 103, 106, 107, 109, 113, 114, 116, 118, 121, 129, 132, 133, 134, 136, 142, 152, 155, 156, 158, 160, 162, 163, 164, 166, 167, 168, 173, 175], "applic": [2, 19, 152, 154, 162, 168], "tab": [2, 27, 68, 72, 76, 111, 162], "zero": [2, 17, 33, 40, 48, 155, 160, 162, 167], "trop": [2, 6, 19, 24, 33, 34, 36, 40, 45, 48, 52, 56, 59, 62, 65, 75, 78, 86, 88, 113, 114, 115, 132, 142, 155, 162, 166, 167, 168, 170, 171, 173], "succinct": [2, 162], "tab_posit": [2, 162], "vect": [2, 162], "ncol": [2, 83, 162], "dist": [3, 34, 55, 60, 63, 85, 86, 91, 126, 127, 168], "common": [3, 16, 114, 167, 170], "interfac": [3, 27, 33, 39, 42, 45, 152, 160, 166, 170, 172, 176], "old": [3, 40, 167], "except": [3, 17, 19, 21, 24, 25, 33, 34, 35, 36, 38, 39, 45, 50, 51, 62, 66, 69, 70, 73, 76, 78, 79, 80, 82, 83, 84, 87, 95, 109, 118, 127, 136, 141, 143, 144, 145, 152, 158, 160, 161, 166, 167, 168, 170, 171, 173, 175, 176], "pqpiperror": [3, 4], "arg": [3, 33, 59, 60, 79, 80, 126, 152, 156], "any": [3, 33, 46, 115, 152, 166], "raised": [3, 156], "following": [3, 7, 17, 33, 46, 130, 131, 156, 160], "function": [3, 6, 7, 15, 25, 29, 40, 105, 113, 114, 115, 124, 137, 156, 160, 164, 166, 170, 173, 175], "class_getitem": [3, 4], "show": [3, 7, 33, 42, 124], "enabl": [3, 113, 114, 115, 124], "instanc": [3, 7, 34, 41, 42, 68, 97, 100, 132, 153, 155, 160, 161, 166, 167, 170, 171, 173], "through": 3, "__class_getitem__": [3, 152], "difference_div": [3, 4, 42], "quotient": [3, 42], "div1": [3, 42], "div2": [3, 42], "div3": [3, 42], "div4": [3, 42], "print": [3, 5, 7, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 41, 45, 48, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77, 78, 80, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 115, 117, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 168, 170, 171, 173, 175], "rest": [3, 16, 24, 25, 28, 35, 40, 41, 42, 51, 55, 59, 60, 62, 65, 66, 70, 71, 78, 83, 91, 95, 98, 108, 109, 118, 122, 123, 136, 139, 141, 142, 143, 152, 155, 158, 160, 166, 167, 168, 171, 173], "obtenu": [3, 28, 33, 40, 42, 54, 57, 78, 82, 104, 105, 139, 152, 168, 170], "entier_grande_taill": [3, 4, 42], "maxint": [3, 42], "new": [3, 16, 34, 40, 42, 149, 167], "De": [3, 16, 42, 49, 56, 65, 88, 102, 105, 132, 136, 142, 145, 152, 156, 160, 166, 167, 168, 170, 173], "getrandb": [3, 42], "random": [3, 17, 28, 33, 34, 35, 42, 48, 49, 54, 55, 56, 57, 59, 60, 62, 63, 65, 70, 73, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 99, 102, 107, 110, 111, 112, 121, 125, 126, 127, 134, 135, 139, 141, 143, 151, 152, 161, 170, 173], "getrandbit": [3, 42], "2048": [3, 42, 54, 69, 77, 94, 142], "Qui": [3, 16, 42, 58, 108], "2882159224557107513165483098383814837021447484558010147211921": [3, 42], "304219017212673656549681269862792029": [3, 42], "font": [3, 16, 18, 33, 40, 42, 52, 55, 83, 84, 142, 143, 152, 155, 160, 166, 167, 168, 173], "huit": [3, 42, 65, 167, 168, 175], "octet": [3, 5, 27, 42, 106, 109, 118, 143, 149, 164, 167, 168, 171], "Au": [3, 18, 20, 33, 34, 42, 54, 55, 81, 132, 152, 167, 170, 173], "del\u00e0": [3, 6, 34, 42, 48, 78, 126, 173], "librair": [3, 5, 25, 31, 33, 35, 36, 38, 42, 43, 105, 109, 115, 120, 156, 167, 172], "gmpy2": [3, 42], "recommand": [3, 34, 40, 42, 45, 49, 67, 78, 118, 143, 152, 155, 160, 170], "20": [3, 6, 7, 16, 22, 23, 25, 28, 33, 34, 35, 36, 42, 48, 55, 56, 57, 59, 60, 65, 69, 70, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 103, 106, 107, 111, 112, 114, 117, 118, 119, 125, 128, 132, 136, 138, 139, 142, 150, 151, 160, 163, 166, 167, 171, 173, 175], "40": [3, 16, 22, 24, 25, 33, 34, 36, 42, 48, 59, 65, 78, 80, 84, 87, 90, 112, 114, 118, 125, 139, 152, 160, 171, 175], "chiffr": [3, 19, 21, 40, 41, 42, 64, 66, 77, 78, 132, 133, 140, 142, 155, 167, 175], "overview": [3, 42, 160], "remplac": [3, 19, 33, 40, 42, 49, 54, 65, 70, 71, 76, 78, 83, 84, 99, 120, 132, 134, 136, 140, 142, 143, 150, 152, 154, 160, 166, 167, 168, 173, 175], "editeur": [3, 42], "bougent": [3, 42, 104], "essentiel": [3, 40, 42, 134, 166, 170, 173], "m\u00e9lang": [3, 42, 85, 86, 108, 152, 166], "aller": [3, 19, 27, 33, 42, 50, 54, 58, 68, 109, 113, 133, 137, 138, 139, 142, 166], "menu": [3, 42, 143], "option": [3, 7, 9, 33, 34, 36, 42, 45, 51, 55, 63, 64, 76, 83, 85, 86, 99, 103, 109, 117, 132, 152, 160, 167, 170, 175], "indent": [3, 40, 42, 96, 98, 145, 152, 155, 165], "setting": [3, 42], "similair": [3, 34, 36, 42, 65, 126, 152, 166, 167, 173, 175], "enumerate_regex_search": [3, 4, 42], "exp": [3, 21, 33, 42, 64, 69, 115, 121, 143, 170, 175], "occurent": [3, 40, 110, 167], "parametr": [3, 5, 6, 7, 24, 27, 33, 34, 38, 52, 55, 65, 74, 75, 78, 80, 85, 86, 87, 88, 90, 95, 97, 100, 132, 134, 136, 143, 152, 154, 155, 160, 164, 167, 168, 170, 173, 175], "pars": [3, 26, 156, 168], "findit": [3, 42, 64, 108], "found": [3, 16, 34, 42], "petit": [3, 11, 19, 34, 39, 42, 53, 57, 58, 59, 65, 76, 78, 111, 118, 134, 138, 142, 143, 146, 147, 148, 160, 166, 167, 170, 175], "subtil": [3, 42, 142], "get_day_nam": [3, 4, 42], "return": [3, 5, 7, 16, 17, 18, 19, 20, 24, 25, 27, 28, 33, 34, 35, 38, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 125, 129, 132, 133, 134, 135, 137, 139, 141, 142, 143, 148, 149, 152, 154, 155, 156, 160, 161, 162, 166, 167, 168, 170, 171, 173, 175], "day": [3, 56, 143, 163], "nam": [3, 7, 16, 26, 34, 36, 41, 42, 70, 73, 100, 112, 117, 126, 127, 152, 156, 166, 167, 170, 173], "giv": 3, "datatim": 3, "month": 3, "datetim": [3, 34, 42, 56, 65, 143, 165, 167, 170], "2016": [3, 42, 46, 67], "friday": [3, 42], "get_installed_distribu": [3, 4], "local_only": 3, "skip": [3, 65], "include_edit": 3, "editables_only": 3, "user_only": 3, "use_cmd": 3, "installed": 3, "default": [3, 7, 25, 26, 40, 160, 166, 170, 171, 175], "current": [3, 55, 83, 106, 130, 131, 170], "virtualenv": 3, "low": [3, 17, 40, 58, 105, 130, 131, 167, 175], "ignor": [3, 143, 158, 164, 166], "compat": 3, "stdlib_pkg": 3, "report": 3, "user": [3, 117, 124, 160, 167], "directory": [3, 170, 175], "use": [3, 16, 17, 33, 46, 170], "updated": 3, "get_month_nam": [3, 4, 42], "january": [3, 42], "get_package_info": [3, 4], "start": [3, 10, 40, 48, 108, 113, 167, 173], "end": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 40, 52, 54, 56, 71, 79, 80, 108, 126, 127, 139, 156, 160, 167, 173, 175], "retriev": 3, "he": [3, 130, 131], "all": [3, 7, 15, 16, 33, 46, 114, 115, 130, 131, 152, 170, 175], "get_packages_list": [3, 4], "dictionar": [3, 7], "information_about_packag": [3, 4, 42], "nouveau": [3, 36, 40, 42, 52, 56, 96, 99, 100, 105, 109, 121, 126, 136, 142, 143, 152, 154, 160, 167, 168], "main": [3, 6, 34, 36, 40, 42, 65, 66, 87, 106, 109, 142, 143, 156, 173], "lent": [3, 27, 33, 42, 62, 69, 97, 109, 113, 114, 115, 125, 161, 167, 171], "incluent": [3, 40, 42, 167, 170], "matplotlib": [3, 17, 28, 33, 35, 36, 39, 42, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 74, 75, 78, 81, 82, 83, 84, 85, 86, 87, 90, 96, 99, 102, 103, 105, 107, 111, 112, 117, 121, 125, 139, 143, 146, 147, 149], "scipy": [3, 32, 35, 39, 42, 60, 85, 86, 91, 102, 114, 115, 125, 132, 170], "scik": [3, 42, 120, 124, 158, 172], "learn": [3, 42, 120, 124, 158, 172], "linux": [3, 9, 26, 42, 45, 126, 160, 164, 167, 168], "compil": [3, 42, 64, 113, 114, 118, 124, 142, 143, 153, 155, 167, 170, 175], "met": [3, 24, 42, 73, 81, 82, 88, 95, 118, 133, 152, 160, 166], "implicit": [3, 34, 40, 42, 89, 99, 109, 142, 166, 167, 168], "contribu": [3, 42, 143, 170], "d\u00e9faut": [3, 9, 20, 33, 34, 36, 40, 42, 45, 68, 69, 80, 114, 136, 150, 151, 152, 160, 165, 167, 168, 170, 171, 173, 175], "attent": [3, 9, 18, 28, 33, 40, 42, 56, 65, 117, 143, 155, 164, 166, 170], "exact": [3, 34, 40, 42, 58, 78, 103, 114, 131, 137, 152, 160, 166], "compiling": [3, 42], "anacond": [3, 9, 12, 42, 45], "propos": [3, 5, 10, 24, 27, 34, 35, 42, 49, 56, 59, 64, 65, 67, 70, 76, 77, 78, 83, 84, 85, 86, 88, 91, 92, 101, 102, 104, 106, 109, 113, 119, 122, 123, 125, 126, 130, 131, 133, 134, 142, 143, 144, 149, 150, 152, 154, 155, 156, 160, 161, 166, 167, 168, 170, 172, 173], "pr\u00e9compil": [3, 42, 170], "cond": [3, 41, 42, 45, 143, 166], "module_compil": [3, 42], "list_of_installed_packag": [3, 4, 42], "licens": [3, 42, 44, 143], "summary": [3, 42], "powerful": [3, 42], "analys": [3, 42, 48, 56, 79, 167], "statistic": [3, 7, 42], "hom": [3, 25, 26, 42, 65, 113, 142, 156], "pydat": [3, 36, 42], "author": [3, 42, 46], "development": [3, 9, 42], "team": [3, 42, 130, 131], "email": [3, 26, 38, 40, 42, 168], "googlegroup": [3, 42], "com": [3, 6, 26, 34, 36, 42, 56, 65, 66, 87, 109, 126, 127, 142, 143, 148, 149, 168, 175], "bsd": [3, 42], "locat": [3, 6, 42, 106, 130, 131], "python35_x64": [3, 42], "lib": [3, 35, 42, 113, 114, 115, 124, 142, 156, 160], "requir": [3, 42], "dateutil": [3, 42, 56], "pytz": [3, 42], "freez": [3, 42], "r\u00e9pliqu": [3, 40, 42, 70], "environ": [3, 19, 33, 42, 45, 65, 69, 91, 167, 170], "docutil": [3, 42, 156], "jinja2": [3, 42, 142, 143], "markupsaf": [3, 42], "19": [3, 16, 27, 28, 33, 34, 35, 36, 42, 48, 53, 54, 55, 56, 59, 65, 70, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 102, 103, 106, 112, 113, 114, 115, 116, 117, 118, 121, 125, 132, 136, 139, 142, 143, 145, 150, 151, 152, 163, 166, 167, 175], "pygment": [3, 42], "sphinx": [3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 152, 156], "txt": [3, 34, 40, 42, 66, 126, 127, 142, 143, 148, 149, 155, 156, 164, 167, 168], "property_exampl": [3, 4, 42], "property": [3, 7, 16, 40, 41, 42, 109, 152, 160], "appel": [3, 18, 19, 24, 25, 27, 33, 35, 36, 40, 42, 52, 55, 59, 65, 66, 69, 82, 88, 97, 99, 100, 113, 114, 115, 126, 128, 132, 134, 136, 139, 142, 143, 150, 154, 155, 157, 158, 160, 163, 164, 167, 168, 170, 172, 173, 175], "attribut": [3, 7, 12, 16, 25, 27, 33, 42, 70, 94, 95, 100, 153, 154, 155, 160, 161, 168, 171, 173, 175], "classeavecproperty": [3, 42], "__init__": [3, 16, 25, 27, 40, 41, 42, 95, 96, 97, 98, 99, 100, 113, 114, 115, 124, 132, 133, 134, 152, 154, 155, 156, 160, 168, 170, 171, 173], "self": [3, 16, 25, 27, 35, 40, 41, 42, 95, 96, 97, 98, 99, 100, 132, 133, 134, 135, 152, 154, 155, 156, 160, 167, 168, 170, 171, 173], "_x": [3, 42, 152], "_y": [3, 42, 152], "norm2": [3, 42], "impossibl": [3, 16, 24, 25, 27, 28, 41, 42, 49, 55, 56, 62, 66, 70, 136, 152, 158, 166, 167, 168, 170, 171], "\u00e9criv": [3, 27, 42, 70, 114, 134, 136, 160, 167], "455": [3, 42, 124], "attributeerror": [3, 42, 70, 152, 155, 161], "python_path": [3, 4, 42], "pr\u00e9sent": [3, 6, 19, 20, 33, 34, 40, 42, 48, 56, 59, 79, 80, 91, 92, 97, 98, 105, 106, 117, 120, 126, 136, 142, 143, 148, 150, 153, 155, 158, 160, 166, 167, 168, 170, 173, 175], "introduit": [3, 33, 34, 40, 42, 80, 97, 126, 136, 166, 170], "avant": [3, 16, 27, 34, 35, 36, 40, 42, 54, 55, 62, 65, 69, 78, 83, 84, 108, 109, 126, 128, 136, 141, 142, 143, 144, 152, 155, 160, 166, 167, 168, 170, 173], "fais": [3, 33, 34, 42, 59, 149, 152, 166, 167, 173], "trac": [3, 27, 34, 36, 42, 56, 65, 88, 94, 99, 149, 152, 156, 158, 168], "moncod": [3, 42], "monmodul": [3, 42, 142], "src": [3, 42, 53, 58], "fois": [3, 5, 16, 19, 25, 33, 35, 38, 40, 42, 45, 48, 51, 53, 54, 55, 57, 58, 59, 64, 65, 66, 68, 69, 70, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 91, 96, 97, 101, 102, 103, 104, 113, 118, 121, 127, 129, 132, 133, 136, 137, 139, 141, 142, 143, 144, 150, 152, 154, 155, 158, 160, 161, 166, 167, 168, 170, 171, 172, 173, 175], "barb": [3, 42], "ailleur": [3, 33, 42, 45, 65, 96, 107, 158, 166], "pythonpath": [3, 42], "same_vari": [3, 4, 42], "dit": [3, 19, 24, 28, 34, 40, 41, 48, 55, 56, 65, 66, 79, 80, 118, 132, 136, 139, 143, 152, 155, 160, 166, 167, 168, 173], "contiennent": [3, 24, 34, 117, 152, 161, 166, 167, 168, 170, 171, 173, 175], "modifi": [3, 27, 33, 34, 36, 38, 39, 42, 54, 56, 60, 65, 68, 70, 73, 76, 77, 78, 80, 81, 83, 88, 89, 101, 104, 109, 118, 120, 134, 142, 144, 150, 152, 154, 155, 156, 158, 160, 163, 165, 168, 170, 171, 173], "concern": [3, 34, 40, 42, 45, 143, 152, 155, 160, 164, 166, 167, 168, 173, 175], "principal": [3, 27, 35, 36, 40, 42, 44, 45, 118, 125, 136, 142, 144, 158, 167, 168, 170, 171, 173, 175], "float": [3, 6, 7, 15, 27, 29, 33, 35, 37, 40, 42, 66, 83, 95, 114, 118, 126, 139, 142, 143, 155, 166, 167, 170, 175], "effectu": [3, 19, 24, 25, 27, 33, 34, 35, 36, 40, 42, 54, 59, 76, 78, 79, 85, 86, 118, 122, 123, 126, 128, 133, 137, 143, 152, 155, 160, 164, 166, 167, 168, 170, 171, 173, 175], "cop": [3, 33, 34, 36, 41, 42, 46, 48, 49, 60, 68, 69, 104, 150, 153, 166, 170, 171], "dictionnair": [3, 19, 24, 25, 34, 36, 42, 49, 64, 68, 69, 70, 71, 73, 76, 79, 92, 94, 100, 109, 126, 132, 148, 149, 154, 155, 161, 166, 168, 170, 171, 173, 175], "mutabl": [3, 42, 150, 165], "d\u00e9sign": [3, 24, 27, 33, 34, 35, 36, 40, 41, 42, 80, 96, 101, 106, 109, 116, 132, 144, 152, 160, 164, 166, 167, 170, 173, 175], "emplac": [3, 42, 85, 86], "accessibl": [3, 41, 42, 87, 127, 142, 152, 160, 166, 167, 168, 170], "paur": [3, 42], "identifi": [3, 35, 40, 42, 160, 166, 167], "_immutable_": [3, 42], "_mutable_": [3, 42], "effet": [3, 24, 42, 48, 60, 78, 81, 102, 152, 160, 166, 167, 168, 170], "copi": [3, 36, 40, 42, 69, 83, 84, 99, 152, 167, 168], "explicit": [3, 16, 27, 33, 37, 40, 41, 42, 68, 69, 88, 97, 109, 150, 152, 154, 155, 157, 160, 166, 167, 170, 173], "demand": [3, 38, 40, 42, 45, 68, 69, 79, 143, 150, 152, 160, 167, 175], "sequenc": [3, 42, 160, 167], "d\u00e9taill": [3, 36, 42, 65, 155], "parm": [3, 16, 24, 33, 42, 59, 69, 79, 87, 99, 104, 105, 126, 127, 136, 142, 152, 166, 167, 168, 170], "bool": [3, 6, 7, 33, 34, 40, 42, 95, 104, 161, 166], "byt": [3, 26, 42, 142, 156, 164, 168, 171], "frozenset": [3, 7, 42, 101], "dict": [3, 6, 7, 17, 25, 36, 40, 42, 48, 49, 56, 57, 58, 59, 64, 73, 79, 83, 84, 87, 90, 99, 101, 106, 112, 114, 115, 117, 118, 121, 137, 152, 161, 166, 171], "bytearray": [3, 42], "rendr": [3, 27, 42, 58, 65, 143, 160, 166], "__slots__": [3, 41, 42, 152, 167], "creat": [3, 7, 33, 42], "mak": [3, 42, 130, 131], "surcharg": [3, 33, 40, 42, 97, 134, 153, 168, 173], "__getattr__": [3, 42, 124], "__getattribute__": [3, 42, 152], "__setattr__": [3, 42, 152], "enfin": [3, 33, 42, 66, 88, 107, 143, 152, 160], "imbriquent": [3, 42], "uns": [3, 18, 42, 45, 55, 109, 143, 160, 168, 175], "deepcopy": [3, 16, 40, 42, 167], "recop": [3, 33, 42, 116, 150, 152, 167], "uniqu": [3, 6, 18, 33, 34, 35, 36, 40, 41, 42, 53, 55, 64, 69, 88, 95, 101, 106, 128, 130, 131, 132, 133, 137, 148, 150, 151, 152, 155, 160, 164, 166, 167, 168, 171, 173], "copy": [3, 16, 27, 28, 34, 36, 40, 42, 46, 48, 49, 55, 56, 59, 60, 64, 65, 68, 76, 80, 81, 83, 84, 85, 87, 97, 104, 105, 107, 112, 121, 166, 167, 168, 170, 173], "inclus": [3, 24, 28, 33, 40, 42, 43, 65, 73, 155, 160, 166, 167, 168, 175], "appliquent": [3, 40, 42, 121, 154, 160, 167, 175], "sortable_class": [3, 4, 42], "cl": [3, 7, 16, 25, 41, 121, 152, 171], "prononc": [3, 42], "o1": [3, 42, 152], "o2": [3, 42, 152], "macl": [3, 42], "__lt__": [3, 42, 152], "autre_inst": [3, 42], "jenesaisp": [3, 42], "jenesaispas2": [3, 42], "teturn": 3, "io": [3, 12, 16, 25, 26, 34, 42, 53, 58, 106, 109, 113, 114, 115, 117, 124, 156, 168, 171, 175], "disqu": [3, 42, 45, 109, 142, 143, 168, 170], "dur": [3, 33, 34, 36, 42, 56, 78, 88, 109, 142, 143, 163, 167, 168, 170, 173, 175], "ordin": [3, 11, 19, 27, 40, 41, 42, 45, 80, 109, 144, 156, 164, 167, 168, 170, 173], "automatis": [3, 42, 45, 144], "processur": [3, 42], "r\u00e9pet": [3, 24, 33, 38, 40, 42, 45, 66, 70, 78, 83, 84, 85, 86, 126, 127, 132, 141, 142, 143, 144, 150, 152, 166, 168], "processus_quotidien": [3, 42], "nom_fichi": [3, 42, 168], "nb": [3, 16, 18, 33, 34, 42, 50, 55, 60, 62, 65, 70, 74, 75, 76, 83, 84, 95, 99, 139, 152, 160, 166, 170], "open": [3, 12, 26, 33, 34, 36, 38, 40, 42, 109, 117, 126, 142, 143, 149, 155, 156, 164, 168, 173, 175], "recopi": [3, 22, 38, 40, 42, 109, 136, 152, 166, 167, 168, 170], "t\u00e9l\u00e9charg": [3, 6, 40, 42, 45, 109, 117, 142, 143, 148], "gigaoctet": [3, 42], "apercevoir": [3, 42, 166], "corrompu": [3, 42], "perdu": [3, 18, 40, 42, 118, 124, 142, 143, 145, 155, 168, 173], "heur": [3, 34, 42, 67, 143, 163, 170], "aur": [3, 24, 28, 33, 34, 40, 42, 58, 65, 81, 85, 86, 95, 131, 142, 143, 152, 155, 167, 168, 170], "voulu": [3, 42, 50, 73], "d\u00e8s": [3, 38, 40, 42, 45, 76, 78, 95, 97, 126, 134, 139, 143, 152, 155, 160, 167, 168], "invent": [3, 42], "stream": [3, 42, 113, 114, 115, 117, 124, 168], "flux": [3, 42, 48, 49], "data_stream": [3, 42], "__file__": [3, 42, 114, 115, 124, 167, 170, 175], "ligne1": [3, 42], "nligne2": [3, 42], "st": [3, 16, 40, 42, 64, 87, 109, 163, 164, 167], "call_stack": [3, 4], "to_float32": [3, 4], "exampl": [4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 42, 43, 50, 66, 89, 95, 150, 160, 162], "construction_class": [4, 43, 162], "teachpyx": [4, 5, 7, 12, 25, 32, 34, 36, 42, 43, 44, 45, 65, 66, 87, 109, 111, 112, 114, 118, 126, 127, 142, 143, 148, 149, 162], "somm": [4, 5, 17, 18, 19, 27, 32, 33, 34, 38, 40, 45, 49, 50, 51, 55, 56, 65, 69, 70, 72, 78, 81, 82, 92, 95, 98, 118, 125, 132, 133, 137, 138, 139, 140, 143, 144, 145, 154, 166, 167, 170, 173, 175], "tool": [4, 43, 111, 114, 118, 126, 127, 142, 143, 148, 149], "decompress_zip": 4, "download_and_unzip": [4, 126, 127, 142, 143, 148, 149], "draw_diagram": [4, 111], "total_siz": [4, 118], "profiling": [4, 124], "profilenod": [4, 7], "add_called_by": [4, 7], "add_calls_to": [4, 7], "as_dict": [4, 7], "filter_node_": [4, 7], "get_root": [4, 7], "to_json": [4, 7, 106], "to_text": [4, 7, 114], "profil": [4, 7, 114, 124, 170], "profile2df": [4, 7], "profile2graph": [4, 7, 114], "practic": [4, 43, 65, 128, 130, 131], "rues_par": [4, 43, 65], "bellman": [4, 6, 126], "connected_component": [4, 6], "distance_haversin": [4, 6, 65, 100], "distance_par": [4, 6], "euler_path": [4, 6, 65], "eulerien_extens": [4, 6, 65], "get_dat": [4, 6, 65], "graph_degre": [4, 6], "possible_edg": [4, 6], "numpysex": [4, 32, 42, 43], "numpy_matrix2list": [4, 5, 32], "numpy_typ": [4, 5, 42], "faq_python": [4, 42], "stringio": [4, 16, 25, 106, 109, 113, 114, 115, 124, 171], "faq_except": 4, "faq_numpy": 4, "voic": [5, 10, 24, 27, 32, 33, 34, 36, 40, 73, 78, 101, 116, 152, 160, 166, 167, 168, 170, 173], "np": [5, 12, 28, 32, 33, 37, 63, 65, 83, 84, 115], "shap": [5, 17, 22, 32, 34, 35, 36, 37, 49, 53, 55, 56, 57, 59, 60, 63, 79, 80, 83, 84, 87, 88, 91, 99, 106, 107, 112, 114, 115, 117, 119, 120, 125, 126, 141, 173], "iv": [5, 32], "10x10": [5, 32, 33], "diag": [5, 32, 33, 80], "extrait": [5, 12, 22, 32, 33, 34, 36, 40, 66, 116, 144, 152, 166, 168, 175], "diagonal": [5, 24, 27, 32, 33, 44, 45, 49, 80, 127, 132], "dd": [5, 32, 56, 57], "transpos": [5, 32, 33, 34, 35, 80, 114, 152, 160], "mx": [5, 32, 81, 82], "diagflat": [5, 32], "bool\u00e9en": [5, 24, 32, 33, 34, 40, 160, 166], "avail": [5, 7], "bit": [5, 48, 122, 123, 167, 168], "thos": 5, "programmeur": [5, 40, 42, 152, 154, 160, 164, 168], "cherchent": [5, 42], "possed": [5, 33, 40, 42, 62, 66, 78, 143, 152, 155, 160, 167, 173], "255": [5, 34, 42, 152], "uint8": [5, 42], "expliqu": [5, 15, 19, 29, 36, 42, 59, 64, 78, 81, 82, 89, 118, 121, 139, 152, 155, 166, 167, 168], "float32": [5, 27, 36, 42, 114], "plut\u00f4t": [5, 20, 33, 34, 36, 38, 40, 42, 45, 55, 56, 69, 70, 76, 78, 83, 84, 88, 91, 95, 102, 113, 118, 121, 148, 149, 150, 152, 155, 156, 160, 166, 167, 168, 171, 173], "float64": [5, 33, 34, 35, 36, 42, 56, 173], "doubl": [5, 17, 42, 65, 69, 70, 73, 76, 88, 150, 160, 167, 168, 175], "prennent": [5, 42, 45, 106, 166], "co\u00fbteux": [5, 42, 101, 113, 114, 128, 152, 167, 168], "gpu": [5, 33, 42], "explaining": [5, 42], "fp64": [5, 42], "perform": [5, 35, 42, 48, 54, 103, 137, 138, 140, 161, 168, 173], "gpus": [5, 42], "edge": [6, 49, 55, 65, 76, 126, 127], "max_it": [6, 56, 85, 86], "allow": [6, 34, 160], "callabl": [6, 7, 166], "init": [6, 65, 85, 86], "verbos": [6, 7, 52, 65, 85, 86, 88, 104], "ford": [6, 65, 126], "noeud": [6, 49, 55, 58, 64, 65, 76, 96, 98, 126], "maximal": [6, 33, 54, 71, 78, 118, 131, 137, 139, 173], "envisag": [6, 24, 65, 78, 88, 127, 131, 160, 168], "liaison": 6, "continu": [6, 12, 16, 33, 40, 45, 52, 53, 55, 56, 58, 59, 62, 64, 65, 76, 79, 83, 84, 85, 86, 89, 91, 97, 105, 120, 126, 139, 141, 143, 150, 151, 155, 156, 158, 175], "ex\u00e9cu": [6, 20, 40, 41, 45, 65, 72, 78, 88, 96, 113, 121, 136, 142, 150, 152, 155, 156, 158, 160, 166, 167, 168, 173], "progres": 6, "arc": [6, 28, 49, 55, 65, 76, 166], "connected": 6, "component": [6, 170], "vertex": [6, 55], "id": [6, 26, 48, 53, 58, 109, 160, 166, 167], "lat1": [6, 100], "lng1": [6, 100], "lat2": [6, 100], "lng2": [6, 100], "haversin": [6, 65], "formul": [6, 33, 35, 45, 50, 79, 82, 89, 116], "euclidien": 6, "approch": [6, 19, 27, 28, 56, 65, 78, 80, 107, 126, 131, 175], "paris": [6, 34, 78, 92], "added_edg": [6, 65], "eulerian": [6, 65], "path": [6, 16, 26, 64, 65, 114, 115, 124, 142, 156, 160, 168, 170], "we": [6, 16, 17, 33, 65, 170], "assum": [6, 143], "every": [6, 34, 130, 131], "has": [6, 7, 17, 70, 88, 130, 131, 152, 160], "even": [6, 159], "degre": [6, 55, 119, 166], "added": [6, 65], "typing": 6, "eul\u00e9rien": 6, "coefficient": [6, 33, 35, 49, 55, 62, 65, 69, 78, 79, 80, 118, 125, 133, 136, 152], "max_segment": [6, 65], "longu": [6, 19, 51, 52, 53, 64, 65, 78, 88, 89, 139, 142, 152, 166, 167, 170, 171], "avanc": [6, 11, 48, 55, 143, 160, 166, 167], "url": [6, 7, 36, 56, 65, 66, 109, 117, 126, 127, 142, 148, 149], "sdpython": [6, 12, 34, 36, 53, 58, 65, 66, 87, 109, 126, 127, 142, 143, 148, 149], "raw": [6, 7, 34, 36, 56, 65, 66, 87, 109, 117, 126, 127, 142, 143, 148, 149], "_dat": [6, 34, 36, 65, 66, 87, 109, 126, 127, 142, 143, 148, 149], "paris_54000": [6, 65], "zip": [6, 7, 15, 21, 34, 51, 55, 65, 73, 79, 81, 82, 87, 106, 114, 126, 127, 142, 143, 148, 149, 166, 169, 170, 173], "dest": [6, 7], "timeout": [6, 7, 173], "keep": [6, 7, 65], "ru": [6, 92], "rightarrow": [6, 34, 65, 69, 72, 73, 80, 107], "cec": [6, 25, 27, 40, 41, 45, 48, 54, 68, 70, 71, 73, 89, 91, 97, 104, 118, 142, 152, 155, 158, 160, 166, 167, 168, 175], "test": [6, 12, 16, 24, 27, 33, 34, 39, 54, 56, 62, 65, 68, 69, 72, 78, 87, 92, 94, 97, 107, 114, 119, 126, 128, 133, 137, 141, 144, 149, 152, 156, 158, 165, 167, 168, 170], "estabishing": 6, "connect": [6, 12, 40, 46, 55, 76, 160, 168], "gard": [6, 11, 34, 35, 36, 40, 50, 54, 59, 62, 65, 66, 76, 81, 82, 83, 84, 88, 89, 108, 109, 156, 170, 173], "sinon": [6, 33, 40, 45, 49, 54, 55, 59, 60, 66, 68, 71, 75, 76, 78, 79, 88, 107, 116, 126, 136, 139, 141, 151, 160, 166, 167, 170, 173, 175], "1000": [6, 16, 17, 26, 33, 34, 35, 36, 40, 48, 49, 56, 59, 69, 75, 78, 80, 81, 82, 83, 84, 91, 101, 102, 107, 110, 111, 113, 118, 125, 132, 136, 142, 143, 160, 166, 167, 168], "construir": [6, 27, 33, 34, 35, 40, 50, 54, 60, 64, 65, 69, 79, 85, 86, 90, 91, 92, 114, 125, 126, 139, 142, 148, 152, 160, 163, 166, 167, 175], "uple": [6, 24, 40, 155, 163, 167, 175], "conten": [6, 33, 34, 40, 41, 45, 89, 109, 129, 132, 144, 152, 155, 160, 166, 167, 168, 175], "v1": [6, 60, 62, 65, 76, 126, 127, 150, 167], "v2": [6, 60, 62, 65, 76, 126, 127, 150, 167], "p1": [6, 16, 40, 97, 127, 132, 168], "coordon": [6, 24, 35, 36, 62, 65, 69, 84, 85, 86, 125, 132, 152, 155, 160, 166], "p2": [6, 16, 40, 97, 127, 132, 152, 168], "ressembl": [6, 34, 48, 52, 71, 76, 147, 150, 152, 168, 171], "threshold": [6, 114], "vol": [6, 65], "oiseau": [6, 16, 65], "duquel": 6, "symetr": [6, 34, 40, 53, 55, 65, 68, 136], "inclu": [6, 40, 41, 54, 62, 136, 163, 166, 167, 168, 170], "filenam": [7, 34, 113, 114, 115, 124, 143, 148, 149, 156, 158, 168], "unzip": [7, 34], "destin": [7, 27, 88, 173], "verbosity": 7, "decompressed": 7, "download": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34], "fold": [7, 168], "display": [7, 16, 34, 53, 54, 58, 64, 65, 78, 104, 113, 114, 116, 127, 129, 138, 139, 140, 141, 146, 147, 151], "progress": [7, 55, 56, 143], "unzipped": 7, "blockdiag": [7, 111], "pillow": 7, "draw": [7, 17, 55, 65, 90, 102, 105], "definit": 7, "valu": [7, 17, 33, 34, 36, 40, 48, 56, 59, 64, 65, 83, 87, 109, 112, 114, 118, 120, 126, 127, 143, 149, 160, 166, 167, 168], "additional": [7, 160], "g": [7, 33, 40, 55, 58, 64, 65, 91, 96, 105, 113, 125, 129, 143, 149, 152, 160, 167, 170, 175], "handler": 7, "approximat": [7, 17], "footprint": 7, "content": [7, 26, 36, 40, 78, 143, 156, 168], "measur": 7, "recursivity": 7, "purpos": [7, 46], "total": [7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 48, 54, 56, 99, 113, 167], "automatically": 7, "builtin": [7, 113, 114, 115, 124, 152, 160, 166, 170], "container": [7, 101, 137, 167], "subcl": 7, "dequ": [7, 165], "add": [7, 26, 34, 48, 64, 79, 160], "iterat": 7, "over": [7, 33, 122, 123, 141], "somecontainerclass": 7, "othercontainerclass": 7, "get_el": 7, "activestat": 7, "referenced": 7, "getsizeof": [7, 118, 167], "func_nam": 7, "nc1": 7, "nc2": 7, "tin": [7, 114], "tall": 7, "numb": [7, 16, 17, 18, 22, 25, 26, 33, 91, 111, 112, 125, 160, 161, 166, 173], "spent": 7, "sub": [7, 34, 40, 59, 108, 167, 175], "pnod": 7, "called": [7, 130, 131, 160], "time_el": 7, "nod": [7, 55, 96], "filter_nod": 7, "sort_key": 7, "sortkey": [7, 113, 114], "render": 7, "result": [7, 16, 17, 97, 114, 156, 173], "interpreted": 7, "then": [7, 16, 130, 131, 170], "loaded": 7, "datafram": [7, 8, 17, 23, 44, 49, 56, 57, 59, 62, 79, 83, 84, 87, 99, 105, 106, 109, 111, 112, 117, 121, 126, 165], "which": [7, 16, 17, 160], "remov": [7, 40, 48, 55, 108, 167, 168], "built": [7, 113, 114, 115, 124, 156, 166, 170], "small": 7, "row": [7, 16, 17, 24, 33, 34, 36, 53, 58, 83, 84, 96, 98, 111, 117, 118, 126, 127, 130, 131, 133, 142, 143, 160], "static": 7, "info": [7, 52, 53, 58, 106, 124, 168, 173, 175], "filter": 7, "displayed": 7, "overwrit": 7, "held": 7, "boolean": [7, 33, 34, 160], "forget": 7, "root": [7, 33, 58, 96, 111, 160, 166, 173], "as_str": 7, "kwarg": 7, "json": [7, 8, 12, 94, 142, 169], "into": [7, 130, 131], "dump": [7, 25, 109, 168, 171], "fct_width": [7, 114], "60": [7, 16, 33, 36, 37, 48, 56, 78, 99, 112, 117, 125, 143, 149, 152, 160, 175], "fct": [7, 17, 20, 59, 81, 82, 88, 105], "cumul": [7, 33, 34, 54, 87, 102, 113, 114, 115, 124], "rootrem": 7, "as_df": 7, "return_result": 7, "execu": [7, 29], "pstat": [7, 113, 114, 115, 124], "stat": [7, 25, 33, 56, 97, 109, 113, 114, 115, 117, 119, 124, 156, 160, 170, 171, 173], "sort_stat": [7, 113, 114, 115, 124], "posit": [7, 16, 19, 28, 33, 34, 35, 36, 40, 45, 52, 54, 55, 56, 59, 66, 76, 77, 83, 84, 87, 88, 95, 97, 100, 104, 111, 116, 136, 137, 146, 147, 150, 151, 152, 155, 156, 160, 166, 167, 175], "parameter": 7, "cprofil": [7, 113, 114, 115, 124], "png": [7, 34, 54, 64, 65, 78, 104, 116, 127, 129, 138, 139, 140, 141, 142, 146, 147, 151, 175], "hir": 7, "pdf": [7, 115, 168], "clean_text": 7, "logf": [7, 16], "clean": [7, 114], "logging": [7, 157, 173], "onnx_array_ap": 7, "bench_ortmodule_nn_gpu6": 7, "prof": [7, 115], "pd": [7, 117], "pyinstru": [7, 113], "nic": [7, 34], "stack": [7, 33, 34, 64, 157], "sam": [7, 16, 17, 33, 34, 130, 131], "replicat": 7, "that": [7, 17, 33, 114, 130, 131, 170], "produced": 7, "her": [7, 16, 106, 152, 160, 170], "fct0": 7, "sleep": [7, 18, 88, 173], "fct1": 7, "fct2": 7, "fct3": 7, "fct4": 7, "00004": [], "61207": [], "61203": [], "00001": 7, "81291": [], "11089": [], "00002": 7, "11088": [], "00003": 7, "70201": [], "20079": [], "20078": [], "50119": 17, "81281": [], "bas": [12, 16, 19, 25, 33, 35, 45, 48, 54, 59, 77, 83, 84, 92, 99, 106, 109, 114, 117, 124, 125, 136, 152, 155, 160, 161, 166, 167, 168, 170, 173], "exercice_suffix": [], "exercice_edit_dist": [], "exercice_hash": [], "classes_metro": 106, "aper\u00e7u": [8, 27, 94], "appr\u00e9hend": 8, "c_dat": [], "nb_numpy": [], "nb_pand": [], "exercice_compose_connex": [], "exercice_ordonnanc": [], "problem": [8, 12, 19, 21, 27, 28, 33, 40, 43, 45, 52, 54, 55, 56, 58, 62, 63, 71, 72, 76, 77, 78, 80, 83, 84, 87, 89, 91, 103, 105, 106, 109, 116, 125, 126, 130, 131, 132, 136, 142, 144, 148, 149, 151, 152, 155, 156, 158, 160, 163, 164, 167, 168, 171, 175], "autour": [8, 15, 19, 23, 27, 29, 40, 52, 57, 58, 65, 77, 92, 108, 150, 166, 173], "exercice_tsp": [], "td": [8, 12, 13, 57, 67, 106, 117, 126, 143, 148, 149], "plus_court_chemin": 76, "plus_court_chemin_correct": [], "exercice_serialisation_json": 106, "tests_unitair": [], "profiling_conv": [], "exercice_regex": 106, "scrapping": [], "exercice_topk": [], "r\u00e9vis": 8, "pr\u00e9vis": [8, 170], "\u00e9nonc": [8, 12, 27, 34, 49, 50, 65, 67, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 88, 92, 94, 109, 130, 131, 135, 137, 143], "ann\u00e9": [8, 12, 13, 34, 45, 78, 87, 142, 143, 154, 173, 175], "minut": [8, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 36, 44, 52, 65, 175], "install": [9, 26, 34, 36, 40, 113, 142, 143, 155, 158, 160, 170], "vrai": [9, 27, 33, 40, 48, 52, 54, 56, 57, 62, 64, 65, 68, 78, 96, 97, 107, 111, 125, 136, 139, 143, 152, 160, 166, 167, 168, 171], "gageur": 9, "J": [9, 21, 28, 52, 64, 65, 68, 96, 99, 105, 119, 143], "archived": 9, "unofficial": 9, "binar": 9, "packag": [9, 12, 26, 35, 113, 114, 115, 124, 142, 156, 160, 170, 172, 173], "maintenu": [9, 12, 45, 170], "veux": [9, 143], "comprendr": [9, 34, 40, 52, 56, 78, 96, 114, 118, 133, 142, 144, 152, 155, 158, 160, 166, 167, 168], "travail": [9, 38, 40, 45, 53, 160], "ingrat": 9, "requiert": [9, 34, 38, 48, 83, 84, 160], "permen": 9, "gohlk": 9, "servic": [9, 143, 152, 171], "shut": 9, "down": [9, 130, 131], "viabl": 9, "ubuntu": [9, 26], "subsystem": 9, "ca": [9, 28, 35, 51, 52, 56, 62, 64, 65, 100, 103, 106, 109, 118, 147, 149, 160, 170], "march": [9, 24, 27, 28, 32, 34, 52, 55, 64, 66, 80, 81, 85, 86, 103, 106, 149, 152, 166, 167, 173], "d\u00e9marr": [9, 53, 173], "serveur": [9, 45, 168, 172], "notebook": [9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 171, 173], "jupyt": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 45, 106, 124], "notebookapp": 9, "token": 9, "password": 9, "acced": [9, 24, 40, 45, 48, 57, 69, 109, 136, 152, 155, 160, 161, 167, 168, 171], "navig": [9, 45, 170], "visual": [9, 12, 45], "studio": [9, 12, 45], "remot": 9, "noyau": 9, "04": [9, 33, 34, 48, 56, 65, 117, 121, 125, 146, 147, 175], "googl": [10, 26, 38, 40, 65, 77, 128, 129, 130, 131], "organis": [10, 40, 100, 111, 143, 152, 154, 160, 168, 170], "concour": 10, "passion": [10, 143], "d\u00e9veloppeur": [10, 28, 156, 158], "assez": [10, 20, 33, 34, 40, 48, 50, 59, 62, 65, 71, 79, 89, 99, 109, 110, 111, 116, 124, 125, 138, 140, 141, 142, 152, 160, 163, 168, 170, 171], "complet": [10, 12, 19, 28, 33, 40, 45, 56, 63, 64, 65, 79, 83, 84, 97, 136, 142, 150, 152, 155, 160, 166, 167, 168], "sujet": [10, 12, 44, 52, 64, 65, 71, 78, 103, 166, 167, 168], "kick": 10, "logic": [10, 128], "personnag": [11, 105], "r\u00e9soud": [11, 16, 79, 80], "tom": [11, 16], "harry": [11, 16], "pott": [11, 16], "fiol": 11, "poison": [11, 117], "vin": 11, "orti": 11, "recul": 11, "imm\u00e9diat": [11, 40, 81, 155, 158, 168], "gauch": [11, 16, 24, 34, 54, 59, 96, 98, 99, 160, 167, 168, 170], "chacun": [11, 16, 24, 27, 33, 34, 51, 89, 102, 117, 128, 143, 148, 152, 160, 166, 167, 170, 173, 175], "contenus": [11, 148, 167], "ni": [11, 40, 41, 95, 97, 108, 119, 143, 152, 160, 164, 166, 167, 175], "enjeu": [11, 45, 171], "insurmont": 11, "einstein": [11, 15, 29, 92], "ma\u00eetris": [12, 45, 160, 166], "h\u00e9ritag": [12, 94, 97, 153, 154], "numpy": [12, 13, 15, 17, 25, 27, 29, 31, 34, 39, 40, 43, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 63, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 91, 94, 99, 102, 103, 107, 109, 111, 114, 115, 118, 120, 124, 125, 141, 142, 167, 171, 173], "broadcasting": 12, "xml": [8, 12, 40, 94, 142, 168, 170, 171], "html": [12, 33, 36, 40, 53, 58, 102, 113, 114, 117, 124, 142, 143, 152, 168, 170, 171], "csv": [12, 36, 56, 87, 142, 143, 168, 170], "unitair": [12, 92, 94, 114, 158, 170], "unittest": [12, 120, 170], "git": [12, 168], "pull": 12, "request": [12, 34, 66, 109, 117, 143], "abord": [12, 19, 26, 27, 34, 35, 36, 40, 45, 48, 49, 50, 53, 54, 55, 56, 62, 63, 64, 65, 68, 76, 81, 82, 102, 108, 115, 121, 126, 132, 136, 137, 143, 148, 149, 152, 166, 167, 168, 170, 172, 173, 175], "Elles": [12, 33, 36, 40, 41, 45, 95, 113, 132, 142, 152, 160, 167, 170], "evalu": 12, "s\u00e9anc": [12, 33, 44, 126, 134, 142], "ressourc": [12, 45, 156, 168, 173], "doc": [12, 33, 36, 41, 53, 58, 102, 152], "algortihm": 12, "examen": [12, 43, 67, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "www": [12, 34, 36, 56, 80, 87], "xavierdupr": [12, 34, 124], "fr": [12, 16, 34, 36, 56, 57, 64, 87, 109, 143, 152], "plan": [12, 34, 132], "2022": [12, 36, 56, 67, 109], "aspect": [12, 59, 101, 132, 160, 173], "r\u00e9uss": [12, 34, 38, 40, 52, 83, 84, 121], "getting": 12, "started": 12, "cheat": [12, 39], "sheet": [12, 34, 39], "minicond": [12, 45], "mamb": 12, "\u00e9conom": [12, 78], "logiciel": [12, 34, 40, 106, 142], "ing\u00e9nier": 12, "produir": [12, 72, 152, 155], "fiabl": [12, 48, 56, 120, 170], "collabor": 12, "demain": [12, 143, 144], "intelligent": [12, 44], "artificiel": [12, 36, 44, 85, 86, 87], "nvidi": 12, "hi": 12, "rappel": [12, 14, 33, 38, 40, 56, 65, 71, 89, 143, 160, 166, 167], "feuill": [12, 14, 16, 40, 55, 96, 168], "rout": [12, 14, 36, 60, 65, 126], "_l": 13, "de_rot": [], "classe_d": [], "1h30": 13, "enonc": [13, 30, 32, 43], "09": [14, 16, 17, 27, 33, 34, 48, 56, 65, 111, 163, 167, 173, 175], "06": [14, 27, 33, 34, 48, 56, 78, 101, 167, 168], "ensa": [14, 65], "08": [14, 16, 17, 27, 33, 34, 36, 48, 56, 65, 101, 109, 111, 142, 173, 175], "\u00e9nigm": [14, 15, 29, 92], "hermion": [14, 16], "03": [14, 29, 34, 36, 48, 49, 56, 63, 80, 87, 99, 103, 107, 117, 125, 139, 175], "14": [16, 19, 22, 27, 28, 33, 34, 35, 36, 48, 49, 50, 52, 55, 56, 58, 59, 62, 64, 65, 67, 69, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 102, 103, 106, 110, 111, 112, 114, 118, 119, 121, 125, 127, 128, 133, 136, 139, 143, 144, 145, 147, 150, 163, 166, 170, 175], "s\u00e9rialis": [15, 29, 94, 106, 152, 167, 168, 169, 170], "12": [14, 16, 17, 21, 22, 27, 28, 33, 34, 35, 36, 40, 48, 50, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 91, 99, 102, 103, 106, 107, 110, 111, 112, 113, 114, 117, 118, 119, 121, 125, 127, 133, 142, 143, 145, 147, 150, 152, 163, 166, 167, 173], "r\u00e9guli": [68, 92, 94, 126, 137, 155, 160, 168, 170, 176], "webscrapping": [], "top": [34, 92, 130, 131, 160], "07": [14, 17, 27, 34, 35, 36, 48, 56, 65, 99, 101, 112, 117, 125, 146, 147], "cartopy": 14, "wsl": 14, "groupby": [15, 29, 34, 36, 87, 110], "gil": [15, 29, 172], "protobuf": [15, 29, 171], "convers": [15, 19, 25, 29, 35, 40, 87, 95, 109, 142, 143, 152, 155, 163, 166, 168, 171], "dam": [15, 29, 152], "hypercub": [15, 29, 166], "voyag": [15, 29, 92, 126], "tsp": [8, 15, 29, 92], "auto_examples_python": 15, "auto_examples_jupyt": 15, "gallery": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "generated": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 102, 160], "go": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 109], "full": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 114, 117, 124, 166, 173], "impl\u00e9mentatin": 16, "Je": [16, 33, 36, 52, 58, 64, 65, 71, 103, 106, 108, 142, 143, 147, 173], "reproduis": [16, 173], "cinq": [16, 27, 45, 64, 102, 107, 136, 160, 167, 170], "maison": 16, "couleur": [16, 24, 79, 132, 146, 152, 160], "vit": [16, 21, 27, 45, 54, 58, 59, 60, 76, 91, 116, 120, 133, 137, 138, 143, 160, 170], "person": [16, 26, 38, 40, 45, 46, 49, 56, 78, 87, 143, 161, 163, 167, 170, 171], "national": [16, 34, 117], "boit": 16, "boisson": 16, "fum": 16, "cigar": 16, "animal": [16, 58, 108], "domest": 16, "roug": [16, 36, 48, 58, 79, 108, 139, 160], "su\u00e9dois": 16, "chien": 16, "danois": 16, "th\u00e9": 16, "vert": [16, 36, 58, 79, 80, 107, 108, 125, 139], "blanch": [16, 139], "propri\u00e9tair": 16, "caf": 16, "pall": 16, "mall": 16, "jaun": [16, 160], "dunhill": 16, "centr": [16, 85, 86, 160, 166], "lait": [16, 89], "norv\u00e9gien": 16, "habit": 16, "homm": [16, 64, 143], "blend": 16, "c\u00f4t": [16, 27, 45, 59, 65, 81, 82, 86, 89, 91, 107, 118, 147, 150, 152], "chat": 16, "cheval": 16, "voisin": [16, 24, 76, 85, 86, 91, 92, 128, 160], "blu": [16, 36, 48, 74, 75, 86, 103, 117, 160], "mast": [16, 56, 160], "bier": 16, "allemand": 16, "princ": 16, "bleu": [16, 58, 79, 108, 160], "eau": [16, 130, 131], "poisson": 16, "essais": [16, 28, 85, 86, 173], "bon": [16, 27, 35, 36, 48, 62, 65, 66, 76, 81, 83, 84, 85, 86, 134, 142, 143, 146, 147, 148, 168], "papi": [16, 44], "reconstitu": 16, "d\u00e9duct": 16, "jeu": [13, 16, 24, 34, 45, 57, 77, 94, 125, 132, 160, 164], "puzzl": [16, 92], "configur": [16, 63, 87, 152, 160, 171], "piec": [16, 120, 128, 129, 168], "bord": [16, 24, 81, 85, 86, 106, 160], "embo\u00eet": 16, "ecrir": [16, 34, 68, 69, 72, 73, 76, 78, 79, 80, 81, 82, 85, 86, 105, 120, 126, 134, 138, 142, 144, 145, 148, 168, 173], "int\u00e9ress": [16, 19, 33, 40, 48, 57, 59, 76, 77, 102, 103, 139, 160, 166, 167, 168, 170, 175], "combinaison": [16, 34, 64, 166], "exprim": [16, 27, 125, 126, 143, 160], "notr": [16, 28, 79, 83, 87, 99, 124, 129, 132, 143], "d\u00e9crit": [16, 59, 65, 126, 136, 152, 155, 160, 166, 167, 170, 175], "num\u00e9ro": [16, 49, 55, 78, 79, 132, 152, 160, 167, 175], "compatibil": 16, "regroup": [16, 33, 35, 40, 60, 132, 152, 154, 155, 160, 166, 167, 168, 170, 171], "cat\u00e9gor": [16, 55, 56, 79, 167, 168], "ordon": [16, 34, 45, 83, 84, 99, 126, 152, 166], "exclus": [16, 152, 167], "compatibl": [16, 26, 173], "incompatibl": 16, "r\u00e9sult": [16, 34, 40, 160, 167], "possibil": [16, 24, 33, 40, 64, 89, 100, 132, 152, 160, 166, 167, 170], "oppos": [16, 33, 49, 95, 104, 166], "Avec": [16, 19, 24, 33, 36, 40, 45, 65, 83, 106, 114, 119, 122, 123, 128, 132, 142, 143, 150, 160, 164, 166, 167, 175], "2023": [16, 36, 40, 46, 56, 65, 87, 163, 167, 173], "\u00e9numer": [16, 33, 96, 126, 145], "per": [16, 26, 33, 34, 35, 54, 62, 78, 81, 82, 84, 91, 103, 109, 110, 111, 121, 124, 133, 139, 143, 149], "cont": [16, 60, 87, 143], "break": [16, 26, 40, 55, 64, 65, 74, 75, 78, 83, 103, 106, 109, 111, 117, 120, 129, 141, 150, 151, 152, 160, 168, 170], "defin": [16, 17, 48], "constraint": 16, "described": 16, "enigm": 16, "gener": 16, "generat": 16, "triplet": [16, 19], "category": [16, 108, 158], "__str__": [16, 40, 95, 96, 97, 98, 132, 133, 155, 168, 170], "__dict__": [16, 25, 40, 152, 160, 168, 170, 171], "al": [16, 66, 143], "260": [16, 34], "combin": [16, 34, 60, 141, 148], "cl1": [16, 166], "cl2": [16, 166], "nothing": 16, "everything": 16, "concaten": [16, 27, 33, 34, 36, 40, 160], "null": [16, 49, 69, 78, 83, 84, 112, 125, 126, 139, 155, 167, 168, 170], "param": [16, 41, 56, 66, 114, 152, 160], "incompatibility": 16, "propert": [16, 40, 160], "compatibility": 16, "combine_cross_set": 16, "set1": 16, "set2": 16, "ruleposit": 16, "overrid": 16, "ruleequivalent": 16, "equivalent": [16, 33, 114], "rulevoisin": 16, "neighbor": [16, 91, 124, 125, 130, 131], "ruleav": 16, "ruleensembl": 16, "element": [16, 34, 56, 88, 96, 116, 152, 156], "categor": [16, 143], "tl": 16, "ttcouleur": 16, "blanc": [16, 24, 40, 41, 58, 108, 152, 167], "ttnationalit": 16, "norvegien": 16, "suedois": 16, "ttboisson": 16, "ttcigar": 16, "bluemast": 16, "ttanimal": 16, "gar": 16, "constituent": [16, 168], "pr\u00e9dicat": 16, "wikipedi": [16, 33, 36, 65, 109, 114, 119, 143], "wik": [16, 143], "calcul_des_pr": 16, "c3": [16, 34, 52, 133, 152], "a9dicat": 16, "_": [16, 26, 28, 33, 48, 52, 55, 65, 79, 80, 81, 82, 83, 84, 107, 122, 123, 125, 142, 149, 154, 175], "solv": [16, 33, 129], "Soit": [16, 28, 34, 65, 81, 82, 104, 126], "appara\u00eet": [16, 19, 36, 40, 55, 101, 134, 140, 142, 143, 144, 152, 158, 160, 166, 167, 168, 170, 171], "incompatibil": 16, "apparaissent": [16, 40, 149, 160, 166, 167, 168, 170], "describ": [16, 34], "defined": [16, 20, 70, 73, 152, 160, 166, 170], "abov": [16, 46, 156], "count": [16, 34, 40, 48, 55, 98, 102, 110, 118, 141, 149, 165, 167, 175], "hous": [16, 130, 131], "color": [16, 28, 48, 74, 75, 79, 99, 103, 146, 147], "to_datafram": 16, "sr": 16, "head": [16, 17, 34, 36, 57, 59, 87, 99, 106, 111, 117, 126, 127, 143], "eploring": 16, "deepness": 16, "empty": [16, 35, 56, 79, 80, 85, 86, 91, 114, 173], "beginning": 16, "recursively": 16, "must": [16, 33, 88, 160, 170], "solved": 16, "unless": 16, "looking": 16, "possibilit": [16, 89], "much": [16, 130, 131], "research": 16, "could": [16, 33, 56], "represented": 16, "creating": 16, "check": [16, 17], "bringing": 16, "back": [16, 34, 56, 114], "50": [16, 17, 33, 34, 35, 36, 48, 54, 59, 70, 79, 82, 83, 85, 86, 91, 103, 104, 107, 108, 112, 114, 117, 124, 125, 130, 131, 143, 149, 152, 160, 166], "70": [16, 33, 36, 48, 54, 87, 112, 115], "80": [16, 36, 48, 55, 65, 87, 103, 107, 112, 117, 118, 121, 125, 156, 160, 166, 167], "90": [16, 17, 36, 48, 56, 65, 80, 87, 91, 107, 110, 143], "100": [16, 17, 18, 19, 22, 25, 26, 33, 34, 35, 36, 39, 48, 49, 54, 55, 56, 57, 58, 59, 62, 65, 69, 70, 73, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 96, 99, 101, 102, 103, 107, 109, 111, 112, 114, 116, 117, 121, 125, 132, 134, 135, 139, 149, 152, 160, 161, 166, 167, 173], "110": [16, 19, 36, 110], "120": [16, 56, 103, 118, 160], "130": [16, 113, 114], "running": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "script": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 53, 58, 170], "757": [16, 33], "plot_einstein_riddl": [16, 29], "ipynb": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 106, 142], "cam": 17, "longrightarrow": 17, "hold": 17, "let": [17, 33, 64, 130, 131], "evaluat": [17, 122, 123], "equal": 17, "pyplot": [17, 28, 33, 34, 35, 36, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 74, 75, 81, 82, 83, 84, 85, 86, 87, 90, 96, 99, 102, 103, 105, 107, 111, 117, 125, 139, 146, 147, 149], "plt": [17, 28, 33, 34, 35, 36, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 74, 75, 81, 82, 83, 84, 85, 86, 87, 90, 96, 99, 102, 103, 105, 107, 111, 117, 125, 139, 146, 147, 149], "rnd": [17, 35, 49, 56, 83, 84, 87, 90, 102, 107, 111, 125, 152, 161], "100000000": 17, "dtyp": [17, 33, 34, 35, 36, 37, 48, 55, 56, 87, 91, 99, 114, 126, 127, 141], "rnd32": 17, "astyp": [17, 33, 35, 36, 55, 87, 107, 114, 173], "very": 17, "revers": [17, 28, 40, 64, 97, 102, 127, 129, 166, 167], "rnd32b": 17, "delt": [17, 27, 34, 48, 52, 56, 78, 80, 160], "980232227667301e": 17, "9802322387695312e": 17, "1707908198488326e": 17, "999999997344628": 17, "hist": [17, 34, 35, 55, 110, 118, 121, 148, 149], "bin": [17, 34, 48, 167, 168], "49963": 17, "50274": 17, "49885": 17, "50054": 17, "49733": 17, "50129": 17, "49661": 17, "50152": 17, "49916": 17, "49935": 17, "49647": 17, "50099": 17, "50316": 17, "50319": 17, "49975": 17, "49752": 17, "49886": 17, "50382": 17, "50160": 17, "50238": 17, "50184": 17, "50064": 17, "49792": 17, "49787": 17, "49753": 17, "49994": 17, "49931": 17, "49798": 17, "49841": 17, "50086": 17, "50181": 17, "49978": 17, "50457": 17, "50287": 17, "49766": 17, "50253": 17, "50568": 17, "49901": 17, "49840": 17, "49741": 17, "49857": 17, "49760": 17, "50226": 17, "50138": 17, "50004": 17, "49938": 17, "50228": 17, "50084": 17, "49850": 17, "50082": 17, "49734": 17, "50173": 17, "49887": 17, "49621": 17, "49718": 17, "49805": 17, "50141": 17, "49961": 17, "50501": 17, "49761": 17, "50147": 17, "50197": 17, "49898": 17, "50178": 17, "50288": 17, "50483": 17, "49879": 17, "49811": 17, "49906": 17, "50340": 17, "49742": 17, "50052": 17, "49591": 17, "49824": 17, "49983": 17, "49990": 17, "50020": 17, "50390": 17, "49613": 17, "50192": 17, "50216": 17, "49993": 17, "50059": 17, "49688": 17, "50088": 17, "49866": 17, "49953": 17, "49624": 17, "50292": 17, "50012": 17, "49604": 17, "49483": 17, "50285": 17, "49823": 17, "50489": 17, "49709": 17, "49928": 17, "49746": 17, "50093": 17, "49853": 17, "49730": 17, "49813": 17, "50102": 17, "50302": 17, "49748": 17, "50388": 17, "50393": 17, "49655": 17, "49947": 17, "49643": 17, "49817": 17, "49908": 17, "49918": 17, "49683": 17, "49782": 17, "50497": 17, "49820": 17, "49987": 17, "50076": 17, "49816": 17, "49657": 17, "49921": 17, "49881": 17, "49648": 17, "49986": 17, "49888": 17, "49905": 17, "50332": 17, "50105": 17, "50166": 17, "50245": 17, "49731": 17, "50165": 17, "49809": 17, "50033": 17, "49802": 17, "50022": 17, "49839": 17, "49826": 17, "50247": 17, "50104": 17, "49592": 17, "50273": 17, "50137": 17, "50227": 17, "49907": 17, "50202": 17, "49952": 17, "49914": 17, "50235": 17, "50083": 17, "50450": 17, "49899": 17, "50036": 17, "49758": 17, "49950": 17, "49996": 17, "49790": 17, "50414": 17, "50297": 17, "49751": 17, "49480": 17, "49489": 17, "49785": 17, "49874": 17, "49945": 17, "50043": 17, "50145": 17, "49877": 17, "50278": 17, "49836": 17, "50107": 17, "49948": 17, "49279": 17, "49904": 17, "50017": 17, "50133": 17, "49863": 17, "50190": 17, "50115": 17, "49939": 17, "50015": 17, "49774": 17, "50035": 17, "50379": 17, "50003": 17, "50016": 17, "49788": 17, "50087": 17, "49708": 17, "50130": 17, "50260": 17, "49681": 17, "49662": 17, "50208": 17, "49763": 17, "50024": 17, "49744": 17, "50044": 17, "49674": 17, "49949": 17, "50261": 17, "50042": 17, "50134": 17, "49911": 17, "50275": 17, "49408": 17, "50177": 17, "49783": 17, "49968": 17, "50222": 17, "49849": 17, "50005": 17, "50396": 17, "50019": 17, "49992": 17, "49871": 17, "50161": 17, "99841": 17, "99472": 17, "99613": 17, "99570": 17, "100289": 17, "100046": 17, "100464": 17, "100077": 17, "99902": 17, "100140": 17, "99892": 17, "99336": 17, "100654": 17, "100032": 17, "99882": 17, "100233": 17, "99706": 17, "99981": 17, "100122": 17, "100066": 17, "100084": 17, "100226": 17, "99957": 17, "100230": 17, "99782": 17, "99795": 17, "99914": 17, "100052": 17, "99722": 17, "99873": 17, "99665": 17, "100297": 17, "100168": 17, "100247": 17, "100509": 17, "99821": 17, "100015": 17, "99970": 17, "100271": 17, "100113": 17, "99704": 17, "99924": 17, "99497": 17, "99879": 17, "100078": 17, "100590": 17, "100155": 17, "100030": 17, "100112": 17, "99917": 17, "99124": 17, "99846": 17, "100344": 17, "100118": 17, "99798": 17, "100236": 17, "100274": 17, "100051": 17, "100196": 17, "100043": 17, "100137": 17, "99984": 17, "99826": 17, "99716": 17, "99660": 17, "99822": 17, "100393": 17, "99941": 17, "99862": 17, "100641": 17, "100095": 17, "100088": 17, "99847": 17, "99198": 17, "99916": 17, "99414": 17, "100164": 17, "99949": 17, "100409": 17, "99758": 17, "99420": 17, "99787": 17, "99788": 17, "100121": 17, "99967": 17, "100436": 17, "99526": 17, "99854": 17, "99776": 17, "100049": 17, "100552": 17, "100275": 17, "100355": 17, "100448": 17, "99767": 17, "99811": 17, "100036": 17, "99458": 17, "100199": 17, "99557": 17, "100008": 17, "99978": [17, 69], "100061": 17, "99920": 17, "100161": 17, "100173": 17, "99995": 17, "99802": 17, "100134": 17, "99884": 17, "100519": 17, "100114": 17, "100338": 17, "100384": 17, "100487": 17, "100295": 17, "100353": 17, "149916": 17, "149310": 17, "150333": 17, "150416": 17, "149839": 17, "149529": 17, "149478": 17, "149822": 17, "150292": 17, "149622": 17, "150233": 17, "149203": 17, "149940": 17, "150204": 17, "149900": 17, "149963": 17, "150287": 17, "150257": 17, "150414": 17, "150056": 17, "149964": 17, "151025": 17, "149675": 17, "149890": 17, "151035": 17, "150350": 17, "149381": 17, "149941": 17, "150470": 17, "150331": 17, "149950": 17, "149953": 17, "150112": 17, "149990": 17, "150477": 17, "150156": 17, "150109": 17, "149977": 17, "150421": 17, "149519": 17, "151008": 17, "149814": 17, "149479": 17, "149595": 17, "150369": 17, "149581": 17, "150004": 17, "149167": 17, "150247": 17, "150415": 17, "150249": 17, "149402": 17, "149923": 17, "149681": 17, "150040": 17, "149639": 17, "149461": 17, "149496": 17, "150013": 17, "149688": 17, "150318": 17, "150323": 17, "174958": 17, "200380": 17, "200487": 17, "199979": 17, "199974": 17, "200539": 17, "199565": 17, "199848": 17, "199602": 17, "199515": 17, "200357": 17, "199935": 17, "200333": 17, "199853": 17, "200144": 17, "200925": 17, "199464": 17, "199975": 17, "200546": 17, "200259": 17, "200033": 17, "199956": 17, "200055": 17, "199891": 17, "199670": 17, "200423": 17, "199857": 17, "200214": 17, "199431": 17, "199938": 17, "199933": 17, "212276": 17, "250392": 17, "249715": 17, "249747": 17, "249827": 17, "250570": 17, "250006": 17, "249926": 17, "250680": 17, "250132": 17, "250351": 17, "250300": 17, "250327": 17, "250551": 17, "249389": 17, "250261": 17, "280722": 17, "300724": 17, "301269": 17, "300319": 17, "299673": 17, "300174": 17, "300393": 17, "300941": 17, "340075": 17, "349606": 17, "350175": 17, "351367": 17, "394785": 17, "399463": 17, "446456": 17, "547868": 17, "547248": 17, "447345": 17, "400413": 17, "394336": 17, "350453": 17, "350374": 17, "349853": 17, "340744": 17, "299696": 17, "299264": 17, "299623": 17, "299284": 17, "300180": 17, "299422": 17, "299690": 17, "281928": 17, "249661": 17, "250987": 17, "249624": 17, "249525": 17, "248930": 17, "251016": 17, "250459": 17, "250537": 17, "249421": 17, "249530": 17, "249440": 17, "249875": 17, "249011": 17, "249793": 17, "250569": 17, "212539": 17, "200256": 17, "200108": 17, "199669": 17, "199862": 17, "200887": 17, "199813": 17, "200385": 17, "200691": 17, "200857": 17, "200403": 17, "200283": 17, "199814": 17, "200289": 17, "200272": 17, "200454": 17, "200592": 17, "199948": 17, "199647": 17, "199503": 17, "200097": 17, "200132": 17, "199746": 17, "199954": 17, "199949": 17, "199618": 17, "200507": 17, "200126": 17, "199233": 17, "200287": 17, "175179": 17, "150726": 17, "149757": 17, "150029": 17, "150176": 17, "149998": 17, "150113": 17, "149526": 17, "149565": 17, "149543": 17, "149889": 17, "149088": 17, "149663": 17, "149666": 17, "150393": 17, "149490": 17, "150285": 17, "150222": 17, "150432": 17, "149297": 17, "150460": 17, "149597": 17, "150348": 17, "149642": 17, "150655": 17, "149625": 17, "150082": 17, "149435": 17, "149608": 17, "149885": 17, "149973": 17, "150121": 17, "150509": 17, "149865": 17, "150074": 17, "150354": 17, "148577": 17, "149716": 17, "149784": 17, "149172": 17, "150505": 17, "149303": 17, "150089": 17, "150644": 17, "150181": 17, "149798": 17, "149730": 17, "150859": 17, "149222": 17, "150063": 17, "151217": 17, "150147": 17, "149463": 17, "150120": 17, "150357": 17, "149538": 17, "150067": 17, "100091": 17, "99883": 17, "99982": 17, "100185": 17, "100085": 17, "99848": 17, "100011": 17, "99997": 17, "99872": 17, "99794": 17, "100504": 17, "100183": 17, "100429": 17, "99615": 17, "99806": 17, "100723": 17, "99747": 17, "99803": 17, "99654": 17, "99971": 17, "99572": 17, "100242": 17, "99756": 17, "99531": 17, "100722": 17, "99663": 17, "100108": 17, "99875": 17, "100462": 17, "99437": 17, "99581": 17, "100076": 17, "100186": 17, "100307": 17, "100105": 17, "100386": 17, "99829": 17, "99786": 17, "99972": 17, "99824": 17, "99928": 17, "99880": 17, "99724": 17, "99721": 17, "99739": 17, "100647": 17, "99951": 17, "99792": 17, "99698": 17, "99975": 17, "99938": 17, "99968": 17, "99515": 17, "100209": 17, "99309": 17, "100301": 17, "100103": 17, "100322": 17, "99192": 17, "100235": 17, "100017": 17, "99752": 17, "99516": 17, "99919": 17, "100142": 17, "99732": 17, "100298": 17, "99714": 17, "100146": 17, "100457": 17, "100696": 17, "100055": 17, "100280": 17, "100281": 17, "99773": 17, "99778": 17, "99540": 17, "100063": 17, "99904": 17, "100059": 17, "100266": 17, "100221": 17, "99878": 17, "99400": 17, "100034": 17, "100087": 17, "100174": 17, "100219": 17, "99889": 17, "99893": 17, "99386": 17, "99690": 17, "100326": 17, "100277": 17, "100292": 17, "99751": 17, "99994": 17, "100166": 17, "99851": 17, "99774": 17, "50030": 17, "49828": 17, "50470": 17, "49443": 17, "49982": 17, "50072": 17, "50144": 17, "50031": 17, "49959": 17, "50323": 17, "49980": 17, "50461": 17, "49985": 17, "49872": 17, "49933": 17, "50142": 17, "49749": 17, "49580": 17, "50557": 17, "50000": [17, 69], "50610": 17, "50520": 17, "50295": 17, "49884": 17, "49977": 17, "50317": 17, "50221": 17, "49889": 17, "49543": 17, "49727": 17, "50151": 17, "50334": 17, "50175": 17, "50195": 17, "50283": 17, "50174": 17, "50026": 17, "50154": 17, "49909": 17, "50127": 17, "49689": 17, "49846": 17, "50121": 17, "49808": 17, "50220": 17, "49868": 17, "49654": 17, "50366": 17, "50075": 17, "50249": 17, "49649": 17, "49867": 17, "49737": 17, "50365": 17, "50071": 17, "49927": 17, "50320": 17, "49960": 17, "49936": 17, "50112": 17, "49780": 17, "50464": 17, "49912": 17, "50179": 17, "49786": 17, "50417": 17, "50055": 17, "49747": 17, "49728": 17, "50298": 17, "50309": 17, "50013": 17, "49142": 17, "49869": 17, "49954": 17, "50056": 17, "49913": 17, "50358": 17, "49984": 17, "49997": 17, "50187": 17, "49762": 17, "50078": 17, "50196": 17, "50156": 17, "49832": 17, "50362": 17, "49653": 17, "50215": 17, "50100": 17, "50243": 17, "49859": 17, "50531": 17, "49923": 17, "50029": 17, "50236": 17, "49796": 17, "50574": 17, "49842": 17, "50040": 17, "50188": 17, "49951": 17, "49969": 17, "49509": 17, "50011": 17, "50354": 17, "50109": 17, "50242": 17, "50096": 17, "50014": 17, "49932": 17, "50350": 17, "49979": 17, "50255": 17, "49838": 17, "49891": 17, "50185": 17, "50209": 17, "50342": 17, "49903": 17, "49981": 17, "49970": 17, "50200": 17, "50456": 17, "50094": 17, "49865": 17, "50356": 17, "49937": 17, "50169": 17, "50444": 17, "50308": 17, "50257": 17, "49781": 17, "50079": 17, "50047": 17, "49641": 17, "49827": 17, "49515": 17, "50180": 17, "49897": 17, "49626": 17, "49704": 17, "49685": 17, "49989": 17, "50158": 17, "49797": 17, "50131": 17, "50117": 17, "50066": 17, "50296": 17, "50448": 17, "50279": 17, "98023223e": 17, "97427176e": 17, "96831130e": 17, "96831131e": 17, "97427177e": 17, "98023224e": 17, "barcontain": 17, "artist": [17, 175], "finally": [17, 166], "numper": 17, "remain": 17, "100000": [17, 18, 33, 34, 56, 59, 69, 74, 75, 101, 102, 113, 118, 168, 170, 173], "randint": [17, 28, 33, 34, 35, 48, 54, 55, 60, 62, 65, 70, 73, 76, 79, 80, 83, 84, 85, 86, 96, 99, 102, 107, 110, 121, 134, 135, 141, 151, 152, 161, 173], "d32": 17, "d64": 17, "rais": [17, 38, 40, 41, 51, 62, 66, 78, 87, 88, 95, 97, 114, 120, 141, 152, 155, 156, 166, 175], "imagin": [17, 57, 81, 82, 99, 105, 127, 128, 139, 140, 141], "now": [17, 65, 163, 167], "want": [17, 33, 130, 131], "converted": 17, "find_interval": 17, "dx": [17, 63, 85, 86, 113, 118, 138], "ab": [17, 19, 33, 48, 49, 52, 74, 80, 81, 82, 84, 86, 88, 103, 112, 127, 132, 139, 143, 152, 154, 166, 167], "usually": 17, "x1": [17, 28, 33, 70, 85, 86, 90, 120], "x2": [17, 33, 70, 81, 82, 85, 86, 90, 103, 120, 136], "zeros": [17, 22, 33, 35, 37, 48, 52, 55, 56, 57, 79, 83, 84, 87, 99, 114, 115, 120, 141], "2000": [17, 49, 56, 111, 113, 125, 173, 175], "6340828485576307e": 17, "9604587931971764e": 17, "37": [17, 33, 34, 36, 48, 64, 65, 78, 84, 96, 99, 114, 133, 136, 143, 149, 166, 167], "57": [17, 33, 34, 36, 37, 65, 83, 91, 110, 135, 149, 173], "103": [17, 33], "239": [17, 33, 34, 78, 160], "490": 17, "1039": 17, "63408285e": 17, "19565316e": 17, "38767224e": 17, "57969131e": 17, "77171039e": 17, "96372947e": 17, "15574854e": 17, "34776762e": 17, "53978670e": 17, "07318058e": 17, "19238249e": 17, "31158439e": 17, "43078630e": 17, "54998821e": 17, "66919012e": 17, "78839202e": 17, "90759393e": 17, "02679584e": 17, "14599775e": 17, "26519965e": 17, "38440156e": 17, "50360347e": 17, "62280538e": 17, "74200729e": 17, "86120919e": 17, "98041110e": 17, "09961301e": 17, "21881492e": 17, "33801682e": 17, "45721873e": 17, "57642064e": 17, "69562255e": 17, "81482445e": 17, "93402636e": 17, "05322827e": 17, "17243018e": 17, "29163209e": 17, "41083399e": 17, "53003590e": 17, "64923781e": 17, "76843972e": 17, "88764162e": 17, "00684353e": 17, "12604544e": 17, "24524735e": 17, "36444925e": 17, "48365116e": 17, "60285307e": 17, "72205498e": 17, "84125689e": 17, "96045879e": 17, "something": [17, 142, 148, 175], "ql": 17, "952199622072385e": 17, "estimat": [17, 48], "left": [17, 27, 33, 34, 35, 54, 59, 71, 78, 80, 88, 96, 98, 111, 122, 123, 125, 126, 127, 128, 129, 138, 139, 160, 166, 167], "x_": [17, 56, 105, 122, 123, 139], "64": [17, 33, 34, 36, 48, 54, 61, 65, 76, 78, 87, 99, 112, 117, 168], "right": [17, 27, 33, 34, 35, 46, 48, 54, 59, 71, 78, 80, 88, 96, 98, 106, 111, 122, 123, 125, 126, 127, 128, 129, 138, 139, 149, 160, 167], "inf_strict": 17, "f1": [17, 109, 168, 173], "f2": [17, 109, 168, 173, 175], "count_event": 17, "di": [17, 40, 55, 56, 57, 152], "1001": [17, 33, 69, 139], "ratio": [17, 48, 56, 62, 83, 84, 107, 125], "3569796598651465e": 17, "661": [17, 33], "1026": 17, "190": [17, 78], "1309179281937531e": 17, "837": 17, "993": 17, "290": [17, 34, 156], "7261378904009916e": 17, "889": 17, "1007": [17, 35], "390": 17, "32135785260823e": 17, "923": 17, "1016": 17, "9165778148154686e": 17, "942": 17, "991": [17, 33], "590": 17, "511797777022707e": 17, "938": 17, "987": 17, "690": 17, "1070177392299456e": 17, "929": [17, 33], "980": 17, "790": 17, "702237701437184e": 17, "957": 17, "999": [17, 27, 116, 166], "890": [17, 87, 167], "297457663644423e": 17, "979": 17, "1013": [17, 69], "990": 17, "892677625851661e": 17, "1025": 17, "952200e": 17, "028600": 17, "1014": 17, "190440e": 17, "033597": 17, "1012": 17, "785660e": 17, "047666": 17, "380880e": 17, "059761": 17, "1004": 17, "976100e": 17, "070157": 17, "955": 17, "plot": [17, 28, 30, 33, 35, 36, 48, 49, 54, 56, 57, 59, 60, 62, 63, 65, 74, 75, 81, 82, 83, 84, 85, 86, 87, 90, 96, 99, 103, 105, 107, 111, 112, 121, 125, 139, 149], "axe": [17, 34, 56, 74, 75, 138, 160], "xlabel": [17, 48, 149], "logx": [17, 59], "inf_equal": 17, "df2": [17, 36, 87, 99, 106], "988": 17, "1006": [17, 35], "954": 17, "1011": [17, 167], "995": [17, 35], "1042": 17, "1020": 17, "994": 17, "1002": [17, 36, 75], "983": [17, 33], "ax": [17, 33, 34, 36, 48, 49, 55, 56, 57, 59, 60, 62, 63, 65, 74, 75, 83, 84, 85, 86, 87, 90, 99, 103, 105, 117, 125, 139, 146, 147, 149], "label": [17, 36, 48, 54, 58, 62, 65, 85, 87, 99, 103, 125, 130, 131, 149, 160, 166, 173], "sup_strict": 17, "df3": [17, 106], "660": 17, "998": [17, 82], "789": [17, 82, 156], "870": 17, "925": 17, "895": 17, "977": [17, 33], "1036": 17, "952": 17, "963": 17, "1034": 17, "030542": 17, "1015": 17, "045862": 17, "1003": [17, 87, 88], "061825": 17, "1019": 17, "072614": 17, "964": 17, "089910": 17, "sup_equal": 17, "df4": 17, "1052": 17, "1029": 17, "971": [17, 33], "1031": 17, "976": [17, 36], "984": [17, 48], "1023": 17, "981": 17, "inf_strict_neg": 17, "dfn": 17, "982": 17, "970": 17, "953": [17, 33, 115], "989": 17, "1021": 17, "1018": 17, "As": [17, 130, 131], "soon": 17, "rounded": 17, "inequality": 17, "long": [17, 18, 20, 34, 35, 40, 54, 58, 60, 64, 65, 70, 96, 103, 105, 109, 114, 118, 121, 127, 133, 142, 148, 160, 167, 168, 173], "howev": 17, "handl": 17, "templat": [17, 143], "inequalit": 17, "easi": 17, "articl": [17, 33, 44, 56, 64, 65, 122, 123, 142, 146, 147, 148, 149, 152, 173], "according": 17, "processing": [17, 172], "cost": [17, 88], "versus": [17, 36], "44": [17, 22, 33, 34, 36, 65, 84, 108, 114, 149, 152, 163], "502": 17, "plot_float_and_double_rouding": [17, 26, 29], "global": [18, 19, 22, 24, 25, 26, 39, 40, 70, 91, 114, 152, 160, 172], "interpret": [18, 34, 52, 113, 114, 144, 150, 152, 155, 166, 167, 172], "verrou": [18, 173], "auquel": [18, 40, 101, 102, 114, 116, 160, 167, 170], "proteg": [18, 40, 41, 155, 173], "contr": [18, 57, 65, 109, 155, 173], "acces": [18, 19, 25, 26, 36, 40, 41, 105, 137, 152, 156, 160, 166, 168, 170, 173], "concurrentiel": [18, 173], "mesur": [18, 24, 25, 48, 54, 59, 78, 88, 105, 110, 113, 114, 115, 118, 121, 128, 133, 140, 143, 160, 170, 173, 175], "n\u00e9cessair": [18, 24, 27, 33, 34, 40, 41, 45, 54, 58, 59, 60, 65, 68, 70, 78, 80, 83, 84, 111, 113, 115, 120, 127, 139, 143, 150, 152, 155, 156, 158, 160, 166, 167, 168, 170, 171, 173], "timeit": [18, 22, 25, 26, 33, 34, 35, 54, 62, 78, 81, 82, 84, 91, 103, 105, 109, 110, 111, 114, 121, 124, 133, 139, 149, 161], "concurrent": 18, "futur": [18, 170], "threadpoolexecutor": [18, 173], "create_list": 18, "2903062000000318": 18, "run2": 18, "max_worker": [18, 173], "executor": [18, 173], "186134000000038": 18, "lanc": [18, 40, 41, 58, 65, 108, 156, 158, 168, 173], "synchronis": [18, 163, 172], "termin": [18, 40, 54, 76, 118, 136, 141, 142, 156, 160, 166, 167, 168, 173], "mettr": [18, 33, 40, 81, 83, 84, 102, 105, 127, 160, 166, 175], "jour": [18, 45, 49, 56, 57, 58, 66, 76, 81, 82, 87, 88, 108, 126, 127, 128, 141, 142, 143, 152, 160, 163, 167, 168, 170, 175], "impos": [18, 26, 28, 34, 109, 152, 160, 167, 171], "mis": [18, 27, 40, 45, 49, 54, 76, 81, 126, 141, 145, 152, 160, 167, 168, 170], "lieu": [18, 19, 27, 34, 50, 55, 91, 97, 132, 152, 160, 166, 170, 173, 175], "va": [18, 28, 33, 40, 45, 60, 65, 66, 68, 78, 80, 81, 83, 104, 126, 129, 133, 143, 151, 152, 158, 160, 166, 167, 168, 170, 173], "009": [18, 24, 113], "9424862000000758": 18, "run3": 18, "001": [18, 19, 27, 56, 90, 113, 114, 124, 132, 173], "3570157000001473": 18, "signific": 18, "788": [18, 113], "plot_gil_exampl": [18, 26, 29], "r\u00e9\u00e9crir": [19, 34, 38, 45, 88, 95, 134, 136, 152, 156], "u": [19, 25, 48, 58, 64, 66, 108, 116, 143, 149, 171], "compteur": [19, 107], "u_st": 19, "u_non_recurs": 19, "u0": 19, "u1": 19, "u2": 19, "tand": [19, 40, 152, 160, 166, 167, 168, 170], "\u00e8me": [19, 167], "cons\u00e9quent": [19, 27, 28, 33, 40, 54, 66, 78, 132, 151, 152, 155, 160, 166, 167, 170, 173, 175], "longueur": [19, 27, 28, 33, 34, 40, 54, 55, 58, 64, 65, 66, 70, 72, 78, 89, 90, 92, 109, 118, 126, 133, 137, 150, 164, 166, 167, 168, 173], "arr\u00eat": [19, 40, 82, 88, 102, 107, 113, 136, 142, 151, 155, 158, 166, 173], "compare_l": 19, "q": [19, 55, 58, 64, 76, 87, 122, 123, 128, 129, 143], "g\u00e9ometr": [19, 69, 70, 103], "frac": [19, 27, 33, 35, 48, 54, 56, 57, 59, 68, 69, 70, 71, 78, 79, 80, 82, 83, 84, 107, 119, 122, 123, 125, 128, 138, 139, 147, 151, 152], "sum_": [19, 33, 34, 35, 48, 54, 68, 69, 70, 79, 80, 81, 82, 83, 84, 107, 119, 122, 123, 125, 126, 127, 128, 129, 138, 139, 144, 145], "infty": [19, 69, 98, 126], "convergent": [19, 33, 60, 71], "infin": [19, 44, 55, 59, 78, 126, 150, 156, 166, 175], "outr": [19, 40, 143, 160], "perm": [19, 34, 45, 46, 54, 59, 60, 63, 66, 97, 114, 154], "estim": [19, 32, 66, 78, 107, 139, 148, 152, 170], "suite_geometrique_1": 19, "1075": 19, "informaticien": [19, 154], "exp\u00e9riment": 19, "suite_geometrique_2": 19, "yold": 19, "55": [19, 33, 36, 50, 65, 79, 80, 89, 99, 139, 145, 149, 167], "reper": [19, 66, 88, 146, 147, 167], "17": [19, 21, 27, 28, 33, 34, 35, 48, 53, 55, 56, 59, 62, 64, 65, 69, 70, 71, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 102, 103, 106, 112, 114, 115, 118, 119, 125, 126, 132, 139, 142, 145, 147, 150, 152, 156, 160, 163, 166, 167], "mainten": [19, 25, 27, 28, 31, 34, 45, 52, 56, 58, 62, 65, 80, 95, 104, 111, 114, 128, 132, 134, 136, 139, 143, 144, 150, 152, 160, 167, 173], "agit": [19, 33, 34, 40, 56, 60, 65, 76, 109, 114, 144, 145, 146, 147, 148, 152, 160, 166, 167, 168, 171, 173], "savoir": [19, 24, 28, 33, 34, 36, 40, 44, 56, 61, 67, 71, 76, 78, 95, 103, 114, 120, 124, 136, 144, 148, 149, 151, 152, 155, 160, 166, 167, 168, 173], "approxim": [19, 27, 36, 40, 56, 65, 79, 80, 82, 91, 138, 139], "devient": [19, 48, 54, 70, 118, 125, 152, 160, 166, 167, 170, 171, 173, 175], "nul": [19, 35, 40, 49, 55, 62, 70, 83, 113, 118, 125, 141, 155, 167], "1055": 19, "toutefois": [19, 118, 152, 156, 160, 166, 167], "indispens": [19, 40, 120, 132, 143, 152, 158, 166], "loin": [19, 64, 65, 114, 152, 166, 167, 168], "000": [19, 29, 33, 34, 35, 54, 79, 91, 103, 109, 110, 113, 114, 115, 121, 124, 139, 149, 167], "remarqu": [19, 33, 40, 55, 64, 65, 68, 76, 78, 80, 83, 84, 104, 152, 166, 167, 171, 173], "\u00e9volu": [19, 33, 40, 41, 45, 48, 52, 56, 59, 124, 158, 160, 166, 167, 168, 173, 175], "addition": [19, 70, 78, 99, 166], "valid": [19, 40, 48, 95, 114, 120, 121, 124, 132, 152, 160, 166, 167, 168, 175], "s_n": 19, "croiss": [19, 34, 35, 40, 54, 58, 65, 78, 80, 81, 82, 102, 103, 105, 126, 127, 136, 152, 166, 167], "u_i": [19, 139], "u_n": [19, 71, 152], "d\u00e9croiss": [19, 27, 40, 48, 58, 59, 80, 136, 139, 167], "chercheur": [19, 45], "success": [19, 33, 58, 139, 152, 160, 166, 167, 170], "01100111": 19, "011": [19, 113, 115], "111": [19, 35, 36, 65, 114], "hyper_cube_l": 19, "hyper_cube_dico": 19, "ind": [19, 91, 114, 143], "cle": [19, 40, 58, 66, 118, 136, 137], "choix": [19, 64, 65, 83, 88, 98, 126, 127, 143, 148, 150, 152, 166, 167, 171], "hyper_cub": 19, "Sur": [19, 62, 68], "port": [19, 27, 34, 36, 40, 44, 136, 142, 152, 170, 173], "prior": [19, 20, 40, 59, 62, 79, 118, 139, 152, 170], "occurrence2": 19, "uplet": 19, "recevr": [19, 152], "fr\u00e9quenc": [19, 48, 66, 118, 136, 148, 149, 160, 173], "curios": 19, "occurrence3": 19, "hyper_cube_liste2": 19, "m2": [19, 27, 51, 52, 58, 62, 76, 81, 82, 87, 152, 160, 173], "occurrence4": 19, "hyper_cube_liste3": 19, "occurrence5": 19, "018": [19, 113], "plot_hypercub": [19, 26, 29], "esthet": 20, "fix": [20, 40, 48, 55, 78, 102, 118, 124, 136, 137, 154, 166, 167], "twoarg": 20, "onearg": 20, "retard": [20, 45, 170], "fcts_a": 20, "fcts_b": 20, "partagent": [20, 34, 160], "distinct": [20, 34, 49, 55, 79, 81, 82, 95, 102, 121, 161, 167], "pylint": 20, "surg": 20, "warning": [20, 55, 120, 157, 175], "w0640": 20, "loop": [20, 33, 34, 35, 38, 54, 55, 59, 62, 63, 78, 81, 82, 84, 91, 103, 109, 110, 111, 121, 124, 133, 139, 149, 173], "004": [20, 113, 114], "plot_lambda_funct": [20, 26, 29], "mont": [21, 78, 92, 170], "dout": [21, 28, 33, 40, 60, 76, 83, 84, 88, 91, 143, 148, 160, 166, 167], "itertool": [21, 63, 133], "op": [21, 167], "parenthes": [21, 40, 136, 145, 152, 155, 166, 167, 175], "pn": 21, "po": 21, "eval": 21, "zerodivisionerror": [21, 40, 155], "666": [21, 70], "plot_matador": [21, 29], "13": [22, 27, 28, 33, 34, 35, 36, 48, 50, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 69, 70, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 97, 99, 102, 103, 106, 111, 112, 113, 114, 117, 118, 121, 125, 127, 139, 143, 145, 149, 150, 152, 156, 160, 163, 166], "23": [22, 26, 33, 34, 35, 36, 48, 55, 56, 59, 65, 67, 70, 76, 78, 79, 81, 85, 86, 87, 88, 91, 106, 114, 115, 118, 125, 128, 132, 136, 139, 142, 149, 150, 163, 166, 167, 173], "41": [22, 33, 34, 36, 55, 91, 114, 117, 136, 149, 152, 166, 167], "42": [22, 33, 34, 36, 56, 65, 76, 80, 114, 136, 149, 152, 167], "0199993741698563e": 22, "05": [22, 25, 26, 27, 33, 34, 40, 48, 56, 59, 99, 102, 109, 163, 175], "599999763537198e": 22, "air": [22, 27, 28, 107, 138, 143], "n\u00e9anmoin": [22, 40, 45, 62, 65, 91, 95, 113, 134, 152, 155, 160, 161, 166, 167, 170, 171], "temporair": [22, 41, 167], "005": [22, 114, 115], "plot_numpy_trick": [22, 26, 29], "tour": [23, 60, 65, 96, 104, 120, 132, 160, 166, 170], "nan": [23, 33, 34, 56, 83, 84, 87, 109, 112, 143], "disparu": 23, "comport": [23, 40, 48, 56, 81, 126, 152, 160, 167, 168], "attendu": [23, 28, 33, 38, 40, 76, 78, 88, 91, 102, 111, 113, 166, 173], "corrig": [23, 27, 28, 38, 40, 56, 70, 73, 87, 118, 144, 145, 156, 158], "tir": [23, 33, 34, 35, 55, 56, 57, 59, 73, 79, 83, 84, 85, 86, 96, 102, 107, 118, 122, 123, 128, 129, 130, 131, 139, 141, 146, 147, 170, 173], "dropn": 23, "580": [23, 113], "plot_pandas_groupby": [23, 26, 29], "quar": 24, "pion": 24, "vingt": 24, "noir": [24, 58, 108, 139, 152, 160], "39": [24, 33, 34, 35, 36, 48, 52, 57, 58, 62, 64, 65, 66, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 86, 90, 91, 95, 100, 105, 106, 108, 109, 113, 114, 115, 117, 118, 119, 124, 125, 126, 127, 136, 137, 142, 143, 148, 149, 150], "dami": 24, "enti": [24, 33, 34, 35, 40, 45, 48, 50, 61, 70, 95, 97, 102, 116, 122, 123, 129, 132, 145, 150, 152, 155, 160, 166, 167, 168, 171, 173], "reli": [24, 28, 40, 44, 49, 55, 60, 64, 65, 87, 127, 152, 160, 166, 170, 173], "vitess": [24, 132, 171], "utilisent": [24, 33, 35, 40, 132, 137, 154, 167, 173], "sembl": [24, 36, 48, 49, 55, 84, 134], "r\u00e9pons": [24, 27, 30, 32, 40, 50, 69, 78, 79, 81, 82, 83, 84, 88, 92, 104, 129, 131, 133, 151, 160, 166, 168], "pratiqu": [24, 33, 45, 48, 64, 150, 158, 160, 161, 163, 166, 167, 169, 175], "voisinag": [24, 85, 86], "quatr": [24, 27, 34, 40, 56, 66, 70, 77, 104, 105, 114, 120, 136, 143, 144, 152, 155, 166, 167, 168, 172, 173, 175], "coin": [24, 160], "libr": [24, 87], "sait": [24, 27, 34, 45, 54, 59, 64, 65, 78, 83, 84, 85, 86, 87, 95, 97, 103, 114, 126, 139, 142, 145, 150, 155, 156, 166, 167, 173], "contenu": [24, 27, 40, 41, 44, 117, 142, 143, 151, 152, 160, 166, 167, 168, 170], "revu": [24, 54, 129, 151, 172], "occup": [24, 76, 128, 160, 164, 168, 173], "assembl": [24, 45, 121, 150, 168], "num\u00e9rot": [24, 55, 104, 128, 147], "99": [24, 27, 34, 36, 48, 62, 83, 87, 91, 99, 121, 149, 152, 166], "Quels": [24, 33, 126], "d\u00e9sir": [24, 27, 52, 134, 143, 152, 155, 160, 166, 167, 168, 170], "dix": [24, 45, 48, 88, 144, 148, 152, 166, 167], "vid": [24, 34, 40, 54, 60, 76, 77, 81, 128, 136, 140, 141, 150, 152, 160, 166, 167, 168, 170], "adversair": 24, "indiqu": [24, 25, 33, 34, 36, 40, 41, 45, 53, 54, 71, 78, 88, 95, 109, 128, 139, 142, 145, 148, 151, 152, 155, 158, 160, 166, 167, 168, 170, 171, 173], "d\u00e9plac": [24, 59, 71, 81, 116, 151, 160, 168], "pion_prendr": 24, "advers": 24, "haut": [24, 25, 35, 59, 83, 89, 99, 136, 155, 160, 166, 175], "\u00e9chou": [24, 52, 82, 152, 155, 170], "pion_prendre_dict": 24, "damier_dict": 24, "laiss": [24, 28, 40, 52, 64, 65, 78, 83, 84, 98, 143, 147, 160, 167], "manqu": [24, 34, 35, 36, 40, 56, 65, 70, 115, 144, 145, 166, 167], "restent": [24, 36, 152], "\u00e9chiqui": [24, 33], "pion_prendre_list": 24, "carr": [24, 27, 33, 40, 77, 78, 79, 81, 82, 86, 89, 94, 107, 118, 119, 125, 142, 143, 144, 145, 150, 152, 166, 167, 170], "damier_list": 24, "extend": [24, 40, 65, 72, 76, 90, 167, 168], "pres": [24, 33, 36, 78, 86, 91, 103, 105, 111, 138, 142, 149, 152, 155, 160, 166, 167], "hor": [24, 71, 85, 86, 103, 132, 152], "devr": [24, 28, 33, 45, 58, 65, 71, 103, 149, 152, 164, 166, 167, 173], "pion_prendre_bord": 24, "accept": [24, 34, 40, 80, 125, 134, 152, 160, 166, 167, 168, 175], "n\u00e9gat": [24, 27, 54, 70, 78, 87, 155, 165, 166, 167, 175], "plot_partie_dam": [24, 26, 29], "explor": [25, 28, 65, 76, 103, 152, 168], "notemm": 25, "api": [25, 158, 171, 173], "bytesio": [25, 26, 171], "ujson": [25, 109], "cloudpickl": [25, 109], "record": [25, 34, 106, 158, 171], "nom": [25, 33, 34, 36, 40, 41, 45, 54, 65, 68, 100, 105, 106, 109, 117, 120, 136, 142, 143, 149, 150, 152, 155, 160, 161, 166, 167, 171, 173, 175], "xavi": [25, 34, 44, 46, 64, 150, 166, 171, 175], "pr\u00e9nom": [25, 34, 40, 71, 105, 137, 166, 168, 171], "age": [25, 163, 171], "buff": [25, 26, 106, 168, 171], "seq": [25, 142, 143, 171], "getvalu": [25, 26, 106, 109, 113, 114, 115, 124, 171], "pr": [25, 113, 114, 115, 124, 143, 171], "u00e9nom": [25, 171], "load": [25, 34, 106, 168, 171], "ndarray": [25, 114, 115, 124, 171], "serializ": [25, 171], "att": [25, 171], "jsonencod": [25, 171], "myencod": [25, 171], "classnam": [25, 171], "__class__": [25, 40, 152, 155, 171], "__name__": [25, 38, 40, 59, 142, 143, 152, 160, 167, 170, 171], "jsondecod": [25, 171], "mydecod": [25, 171], "decod": [25, 66, 109, 137, 143, 149, 156, 164, 167, 171], "dec": [25, 65, 97, 171], "isinst": [25, 58, 95, 97, 114, 115, 124, 150, 155, 166, 171], "obj": [25, 40, 152, 155, 156, 160, 166, 167, 171], "__main__": [25, 38, 40, 95, 132, 142, 143, 152, 156, 160, 166, 167, 170], "0x7fe460284970": 25, "altern": [25, 33, 102, 160, 168, 171], "0030194999999935135": 25, "00040850000000602904": 25, "Ces": [25, 34, 35, 38, 40, 41, 45, 54, 65, 67, 114, 126, 142, 143, 148, 150, 152, 160, 161, 164, 166, 167, 170, 171, 173, 175], "0006966999999917789": 25, "0003722999999951071": 25, "enlev": [25, 34, 38, 40, 45, 48, 65, 66, 72, 75, 78, 86, 99, 134, 142, 158, 160, 167, 168, 170, 171], "creation": [25, 160], "3099999999185457e": 25, "lu": [25, 33, 40, 64, 149, 164, 168], "x80": [25, 171], "x04": [25, 26, 171], "x95f": [25, 171], "x00": [25, 26, 171], "x94": [25, 171], "x8c": [25, 171], "x07record": [25, 171], "x03nom": [25, 171], "x06xavi": [25, 171], "x07pr": [25, 171], "xc3": [25, 171], "xa9nom": [25, 171], "x94h": [25, 171], "x05": [25, 26, 171], "x08langag": [25, 171], "x03c": [25, 171], "x03ag": [25, 171], "x94k": [25, 171], "x06python": [25, 171], "x0bk": [25, 171], "x14ueu": [25, 171], "suppl\u00e9mentair": [25, 27, 33, 40, 70, 152, 155, 160, 167, 170, 173], "x95": 25, "x08__main__": 25, "x01a": 25, "x93": 25, "x81": 25, "x03att": 25, "x01r": 25, "x94sb": 25, "0x7fe463e16b30": 25, "duppliqu": 25, "surtout": [25, 44, 58, 59, 76, 102, 118, 142, 152, 166, 167], "voluminu": 25, "att1": [25, 40, 171], "att2": [25, 40, 171], "x01b": 25, "x04att1": 25, "x04att2": 25, "x06ub": 25, "eviton": 25, "__getstate__": [25, 168, 171], "__setstate__": [25, 168, 171], "setattr": [25, 171], "0x7fe460284280": 25, "00044570000000021537": 25, "0003687999999897329": 25, "habituel": 25, "niveau": [25, 35, 48, 55, 59, 114, 152, 160, 161, 166, 168, 173], "comparaison": [25, 35, 40, 62, 99, 109, 150, 152, 163, 167], "pr\u00e9visibl": 25, "acc\u00e9ler": [25, 26, 27, 34, 60, 113, 114, 124, 125, 137, 167, 172], "protocol": [25, 26, 170], "highest_protocol": 25, "00046119999998950334": 25, "tent": [25, 58, 82, 108, 173], "myfunc": 25, "x01x": 25, "x01f": 25, "x06myfunc": 25, "x94u": 25, "0x7fe46396f5b0": 25, "contourn": [25, 65, 66, 160, 171], "obstacl": [25, 66, 171], "xfb": 25, "x01": [25, 26], "x17cloudpickl": 25, "x0e_make_funct": 25, "x03": [25, 26], "r_builtin_typ": 25, "x08codetyp": 25, "x85": 25, "x94r": 25, "x01k": 25, "x00k": 25, "x02kcc": 25, "x08": [25, 26], "x00d": 25, "x17": 25, "x94nk": 25, "x86": 25, "x8cj": 25, "xadupr": [25, 65, 113, 142, 156], "_doc": 25, "plot_serialisation_exampl": [25, 26, 29], "x94m": 25, "x97": 25, "x01c": 25, "x02": [25, 26], "x0b__package__": 25, "x08__name__": 25, "x94unnnt": 25, "x1ccloudpickl": 25, "cloudpickle_fast": 25, "x12_function_setstat": 25, "x19": 25, "x16h": 25, "x0f": 25, "x0c__qualname__": 25, "x0f__annotations__": 25, "x0e__kwdefaults__": 25, "x94n": 25, "x0c__defaults__": 25, "n__module__": 25, "x07__doc__": 25, "x0b__closure__": 25, "x17_cloudpickle_submodul": 25, "x0b__globals__": 25, "x86r0u": 25, "0x7fe46396f0a0": 25, "typeerror": [25, 33, 69, 70, 72, 73, 78, 95, 97, 114, 152, 155, 166, 167], "0x7fe46396f400": 25, "fonctionnent": [25, 36, 38, 40, 45, 92, 94, 142, 155, 160], "ens": [25, 27, 80, 97, 111, 118, 121, 152, 161, 166], "x953": 25, "x02it": 25, "x08builtin": 25, "x04it": 25, "x02e": 25, "x00bu": 25, "list_iterator": 25, "0x7fe463b12740": 25, "Ils": [25, 41, 45, 92, 106, 109, 120, 143, 152, 155, 158, 161, 164, 167, 168, 173], "ensgen": 25, "cannot": [25, 35], "generator": [25, 40, 69, 96], "039": [25, 113], "lectur": [26, 33, 36, 39, 65, 108, 109, 170, 171, 173], "d\u00e9s\u00e9rialis": [26, 171], "r\u00e9alis": [26, 35, 36, 55, 78, 99, 103, 132, 152, 160], "strict": [26, 129, 145, 164, 171], "protoc": 26, "messag": [26, 33, 38, 40, 41, 45, 66, 89, 136, 137, 142, 143, 152, 155, 157, 158, 166, 167, 168, 172], "contrair": [26, 41, 45, 50, 52, 83, 84, 118, 131, 136, 152, 155, 160, 166, 167, 168, 170, 173], "gp": 26, "__version__": 26, "tutorial": [26, 39], "os": [26, 106, 114, 115, 117, 124, 142, 156, 160, 168, 170, 175], "sy": [26, 40, 65, 79, 113, 114, 115, 118, 142, 156, 161, 164, 167, 170, 173], "struct": [26, 168], "sphinx_runpython": [26, 40, 152, 156, 166, 171], "runpython": [26, 40, 152, 156, 166, 171], "run_cmd": 26, "json_format": 26, "messagetojson": 26, "parsejson": 26, "syntax": [26, 27, 33, 34, 40, 43, 72, 108, 142, 144, 145, 150, 154, 160, 165, 168, 171, 174], "proto2": 26, "optional": 26, "int32": [26, 36, 55, 87], "enum": 26, "phonetyp": 26, "mobil": 26, "phonenumb": 26, "repeated": 26, "phon": 26, "addressbook": 26, "peopl": 26, "debian": 26, "apt": [26, 160], "proto": 26, "w": [26, 36, 40, 49, 64, 79, 80, 106, 109, 126, 127, 128, 129, 137, 142, 143, 148, 149, 156, 158, 160, 168, 173, 175], "cmd": [26, 156, 160], "python_out": 26, "err": [26, 56, 156, 164], "wait": [26, 78, 173], "listd": [26, 106, 117, 142, 160, 168], "plot_tarabiscot": [26, 27, 29], "plot_serialisation_protobuf": [26, 29], "schema_pb2": 26, "internal": [26, 115], "build": [26, 120, 156], "_build": 26, "descriptor": [26, 152, 160, 170], "_descriptor": 26, "descriptor_pool": 26, "_descriptor_pool": 26, "symbol_databas": 26, "_symbol_databas": 26, "protoc_insertion_point": 26, "_sym_db": 26, "addserializedfil": 26, "x0cschem": 26, "x12": 26, "x08tutorial": 26, "xdb": 26, "x06person": 26, "x0c": 26, "x04nam": 26, "x18": 26, "x02id": 26, "x65mail": 26, "x06phon": 26, "x0b": 26, "x32": 26, "x1c": 26, "x1am": 26, "x0bphonenumb": 26, "x0e": 26, "x06numb": 26, "x04typ": 26, "x1a": 26, "x04hom": 26, "tphonetyp": 26, "x06mobil": 26, "x10": 26, "x04work": 26, "x41": 26, "x64": 26, "x64r": 26, "utlis": 26, "noq": 26, "e402": 26, "1234": 26, "john": [26, 109], "jdo": 26, "555": 26, "4321": 26, "serializetostring": 26, "x08john": 26, "xd2": 26, "x10jdo": 26, "x08555": 26, "0001368000002912595": 26, "fromstring": 26, "parsefromstring": 26, "00017549999938637484": 26, "479999971517827e": 26, "db": [26, 143], "5678": 26, "johnet": 26, "doet": 26, "jtdoet": 26, "example2": 26, "777": 26, "bytesiz": 26, "pack": [26, 166, 168, 173], "x017": 26, "x0fjohnet": 26, "xa": [26, 64], "x13jtdoet": 26, "x08777": 26, "db2": 26, "bsiz": 26, "unpack": [26, 166, 168], "015570000000479922": 26, "js": [26, 53, 58], "012188699999569508": 26, "501": [26, 59], "cens": [27, 87, 144, 155], "effect": [27, 152, 160, 161, 166], "identif": [27, 40, 41, 56, 121, 152, 160, 167, 170], "Ici": [27, 40, 88, 97, 100, 166, 167, 173], "d\u00e9signent": [27, 80, 152], "fall": [27, 73, 83, 84, 88, 114, 143], "escompt": 27, "mi": 27, "ordre": [27, 28, 33, 34, 35, 40, 58, 59, 62, 65, 71, 76, 80, 81, 82, 88, 97, 99, 105, 118, 126, 127, 128, 131, 134, 136, 150, 152, 161, 167, 173], "lor": [27, 28, 33, 34, 36, 40, 41, 45, 48, 54, 61, 65, 78, 92, 97, 109, 126, 127, 132, 136, 142, 143, 152, 154, 155, 158, 160, 167, 168, 170, 171, 173, 175], "quant": [27, 40, 95, 152, 166], "pieg": [27, 33], "entrer": [27, 160, 173], "n\u00e9cessit": [27, 40, 45, 68, 83, 127, 145, 152, 160, 168], "3n": [27, 71], "exigent": 27, "rar": [27, 38, 40, 45, 120, 142, 143, 152, 160, 164, 167, 168], "exig": [27, 48], "ver": [27, 40, 48, 55, 58, 76, 78, 80, 83, 84, 107, 139, 144, 152, 155, 160, 164, 166, 167, 168, 173], "con\u00e7oit": [27, 65, 152, 173], "debug": [27, 156, 173], "\u00e9tap": [27, 34, 40, 56, 58, 60, 65, 75, 80, 112, 116, 126, 127, 132, 160, 167, 168, 171, 175], "releas": [27, 158, 173], "\u00f4t\u00e9": [27, 58, 64, 78], "devenus": 27, "inutil": [27, 38, 40, 62, 68, 91, 133, 134, 158, 166, 173], "quantit": [27, 80, 82, 129, 148], "invisibl": [27, 160], "favoris": 27, "adapt": [27, 34, 62, 109, 121, 152, 173], "multitud": [27, 160], "rectangl": [27, 86, 94, 103, 152, 160], "h\u00e9rit": [27, 40, 99, 155, 158, 160, 166], "surfac": [27, 65, 75, 78, 94], "red\u00e9fin": [27, 40, 41, 109, 132, 152, 155], "para\u00eet": [27, 64, 99, 113, 118, 121, 148, 152, 154, 166, 168, 170, 175], "losang": 27, "Est": [27, 28, 33, 55, 78, 105, 114, 126, 133], "introduir": [27, 34, 145, 154, 160, 166, 173], "princip": [27, 33, 48, 56, 152, 157, 160, 168, 175], "angle": [27, 90, 160], "paraiss": 27, "g\u00e9n\u00e9ral": [27, 34, 40, 45, 81, 91, 121, 126, 143, 148, 150, 152, 155, 156, 160, 166, 167, 171, 173], "afin": [27, 40, 78, 81, 82, 89, 129, 143, 150, 152, 155, 160, 164, 166, 167, 168, 173, 175], "b\u00e9n\u00e9fici": 27, "contien": [27, 148, 152, 155, 170], "thet": [27, 33, 166], "cos": [27, 68, 74, 75, 85, 90, 100, 136, 138, 139, 142, 143, 152, 170], "sin": [27, 68, 74, 75, 85, 90, 100, 130, 131, 152], "183676841431136": 27, "fill": [27, 86, 114, 152, 160], "sens": [27, 109], "emploi": [27, 143, 152, 160, 166, 167], "31622776601683794": 27, "03162277660168379": 27, "9999": [27, 87], "0001": [27, 56, 80, 85, 86, 117], "99999": 27, "1e": [27, 49, 78, 103, 112, 139], "0031622776601683794": 27, "999999": [27, 114], "0000000000000002e": 27, "9999999": 27, "000316227766016838": 27, "99999999": 27, "999999999": 27, "0000000000000003e": 27, "1622776601683795e": 27, "9999999999": [27, 152], "99999999999": 27, "1622776601683796e": 27, "999999999999": 27, "9999999999999": 27, "1622776601683797e": 27, "99999999999999": 27, "0000000000000001e": 27, "999999999999999": 27, "162277660168379e": 27, "9999999999999999": [27, 152], "18": [27, 28, 33, 34, 35, 36, 42, 48, 53, 55, 56, 58, 59, 62, 65, 70, 71, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 102, 103, 106, 112, 114, 117, 118, 125, 130, 131, 132, 133, 136, 139, 142, 143, 145, 147, 150, 151, 152, 162, 163, 175], "signif": [27, 33, 34, 35, 40, 41, 53, 65, 78, 84, 91, 113, 132, 142, 143, 144, 150, 152, 154, 155, 160, 161, 163, 166, 167, 168, 173, 175], "8999999985098839": 27, "3162277683729184": 27, "9900000002235174": 27, "0999999988824129": 27, "9990000000689179": 27, "0009999999": 27, "03162277551199656": 27, "9999000000098022": 27, "999999e": 27, "009999999509891484": 27, "9999900000011621": 27, "0031622774764217087": 27, "9999990000001162": 27, "0009999999418942008": 27, "999999900000013": 27, "0003162277453952373": 27, "999999990000001": 27, "999999525523424e": 27, "9999999990000001": 27, "162277439909038e": 27, "99999937286775e": 27, "162277516708525e": 27, "999999437919884e": 27, "162277525279896e": 27, "999999488741863e": 27, "162277498494361e": 27, "999999422567411e": 27, "162277503725911e": 27, "999999712080637e": 27, "1622776099917643e": 27, "matrice_carree_2": 27, "determin": [27, 66], "m1": [27, 51, 52, 56, 58, 62, 76, 81, 82, 160], "fauss": [27, 62, 114, 130, 131, 166], "M": [27, 33, 34, 49, 64, 78, 79, 80, 82, 83, 84, 87, 91, 105, 119, 126, 128, 133, 137, 139, 143, 149, 160, 163, 167, 175], "begin": [27, 33, 54, 56, 71, 79, 80, 88, 126, 127, 139, 152, 156], "cc": [27, 52, 83, 84, 114], "det": [27, 33], "T": [27, 33, 34, 35, 36, 40, 49, 55, 56, 59, 64, 79, 80, 83, 84, 105, 107, 111, 116, 119, 141, 155], "tr": [27, 97, 106, 117], "lambda_1": 27, "lambda_2": 27, "v\u00e9rifient": [27, 83, 84, 147, 175], "lll": 27, "\u00e9quat": [27, 56, 79, 80, 167], "discrimin": [27, 148], "polyn\u00f4m": [27, 136], "sqrt": [27, 33, 81, 82, 100, 139, 147, 152, 166, 170, 173], "valeurs_propr": 27, "9999990000110609": 27, "000000999988939": 27, "m_2": [27, 83, 84], "_2": 27, "99999999900000002828": 27, "000000001": 27, "Quelles": [27, 89, 126], "diagonalis": [27, 152], "faux": [27, 33, 130, 131, 152, 155, 166], "020": 27, "circuit": [13, 28, 65, 94], "intuit": [28, 36, 52, 76, 96, 152], "forc": [28, 33, 54, 65, 81, 96, 107, 127, 143, 160, 166, 167, 168, 170], "line2d": [28, 81, 82], "0x7fa94763ab90": 28, "\u00e9loign": [28, 33, 36, 85, 86, 91], "optimal": [28, 45, 63, 80, 81, 82, 88, 92, 126, 127, 131], "0x7fa96217dde0": 28, "constat": [28, 143], "croisent": [28, 60], "d\u00e9duit": [28, 61, 83, 111, 139], "am\u00e9lior": [28, 35, 52, 64, 125, 129, 152, 156, 166, 170], "d\u00e9crois": 28, "milieu": [28, 54, 80, 116, 150, 151], "diminu": [28, 34, 48, 126], "pair": [28, 34, 35, 40, 55, 58, 60, 65, 71, 76, 80, 85, 86, 91, 92, 94, 122, 123, 126, 127, 152, 160, 167], "dessous": [28, 36, 40, 70, 97, 121, 152, 160, 163, 167, 173], "x0": [28, 33], "y0": 28, "y1": [28, 70, 85, 86, 90, 120], "292330591173462": 28, "d0": [28, 56], "ordre2": 28, "xo": 28, "yo": [28, 175], "341397079008917": 28, "9548761833186405": 28, "8631425458159007": 28, "8456272108828561": 28, "0x7fa94c0d1180": 28, "voil\u00e0": [28, 142, 143], "supposon": [28, 54, 134], "faison": 28, "oublion": [28, 143], "137631508007717": 28, "graphiqu": [28, 34, 39, 45, 56, 65, 146, 148, 149, 152, 160, 166, 170, 172, 176], "8052001053865456": 28, "9739961042920614": 28, "8147617077948388": 28, "0x7fa94bfc29b0": 28, "concord": 28, "oubl": [28, 142, 144, 145, 166], "d\u00e9liber": 28, "bouclag": 28, "tendanc": 28, "gagn": [28, 40, 94, 114, 150, 161, 167, 171, 173], "boug": [28, 81, 85, 86, 140, 160], "weight": [28, 117], "bold": 28, "740352647987561": 28, "0081199538507615": 28, "9966224243230848": 28, "8728691050558798": 28, "522924291603524": 28, "pourt": [28, 33, 118, 139, 142, 152, 155], "correct": [8, 28, 33, 40, 43, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 120, 152, 155, 166, 167, 168], "tort": [28, 46], "empress": 28, "7214335447427036": 28, "2431331046193033": 28, "118929138241379": 28, "9399537486282151": 28, "848220111125475": 28, "8297080670435762": 28, "23407436285281968": 28, "23141818184855922": 28, "Pas": [28, 39, 52, 56, 59, 60, 111, 132], "parf": [28, 82], "conform": [28, 175], "mien": [28, 143], "inchang": [28, 152, 166, 167, 173], "parfait": [28, 48, 58, 166, 167], "voit": [28, 33, 34, 40, 48, 64, 83, 84, 88, 101, 102, 132, 155, 175], "circonst": [28, 142], "aurion": 28, "al\u00e9": [28, 85, 86], "permutation_rnd": 28, "8476621280516345": 28, "3199871306554722": 28, "8810707833443141": 28, "8575701970529361": 28, "8571236004366429": 28, "3037264087729815": 28, "03717707930068548": 28, "aberr": [28, 56, 80, 91], "syst\u00e9mat": 28, "913964651299246": 28, "294046515504576": 28, "2023764900880596": 28, "1982004152982153": 28, "187839655906766": 28, "1639354407467406": 28, "5484190781132359": 28, "363880751818936": 28, "recommenc": [28, 49, 60, 81, 82, 83, 84, 96, 122, 123], "minit": 28, "n_permut": 28, "bordr": 28, "shuffl": [28, 121, 143], "8669800334772021": 28, "8449800420196413": 28, "8237571704989521": 28, "822760461350098": 28, "9551541397429326": 28, "4454818330167861": 28, "237": [28, 29, 34, 78], "plot_tsp": [28, 29], "00": [29, 33, 40, 49, 55, 56, 59, 63, 65, 79, 80, 87, 96, 99, 107, 111, 112, 117, 125, 143], "auto_exampl": 29, "mb": [29, 54], "annex": [30, 170], "el\u00e9ment": [30, 32, 129, 131], "incontourn": [31, 35, 36, 167], "tant": [31, 34, 40, 49, 55, 60, 81, 82, 100, 126, 152, 166, 167, 168, 170, 173], "simplifient": 31, "echiqui": [32, 120], "cribl": [32, 166], "erathosthen": 32, "algebr": 32, "simul": [32, 79, 87, 94, 122, 123, 141, 152, 166, 170, 173], "r\u00e9gress": [32, 79, 80, 81], "maximis": [32, 81, 82, 99], "vraisembl": [32, 56], "r\u00e9f\u00e9rent": [32, 40, 152, 155, 166, 167, 168, 170, 173], "raccourc": [32, 40, 118, 152, 167], "original": [32, 36, 41, 42, 65, 83, 84, 118, 156, 162, 175], "docstring": [32, 42, 162], "d\u00e9di": [33, 45, 120], "aven": [33, 171], "deep": [33, 44, 114], "\u00e9merg": [33, 173], "offrant": 33, "vari": [33, 40, 59, 86, 89, 109, 126, 152, 167, 168], "cpu": 33, "pytorch": 33, "\u00e9mergent": 33, "usag": [33, 34, 40, 45, 48, 62, 98, 109, 119, 142, 143, 144, 152, 157, 161, 167, 168, 172, 173], "standardis": 33, "presqu": [33, 50, 65, 81, 101, 125, 126, 136, 160, 166, 168, 173], "inlin": [33, 34, 35, 36, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 74, 75, 78, 81, 82, 83, 84, 85, 86, 102, 103, 105, 107, 111, 112, 121, 125, 139, 143, 146, 147, 149, 156], "convent": [33, 34, 35, 36, 40, 52, 98, 100, 132, 142, 143, 150, 155, 157, 167], "Cet": [33, 78, 79, 80, 121, 146, 147, 151, 152, 155, 160, 166, 168, 170], "etc": [33, 48, 128, 170], "ndim": 33, "int64": [33, 34, 35, 36, 87, 91, 107, 114], "s\u00e9lection": [33, 34, 36, 48, 160, 168], "automat": [33, 34, 40, 83, 117, 142, 143, 148, 152, 160, 167, 168], "allez": [33, 59], "jet": [33, 34, 51, 65], "bb": [33, 51], "assign": [33, 34, 79, 170], "cast": 33, "casting": 33, "aa": [33, 51, 143, 161, 175], "dimmensionnel": 33, "aplat": 33, "1d": 33, "transposed": 33, "flatten": [33, 114], "flattened": 33, "multidimensionnel": [33, 79], "2d": [33, 108], "mask": [33, 34], "extrair": [33, 34, 54, 58, 175], "\u00e9lement": [33, 34, 48, 97, 107], "ar": [33, 118, 127, 143], "arang": [33, 48, 49, 55, 59, 83, 84, 89, 91, 103, 114], "idx": 33, "idx_bool": 33, "did": [33, 152], "match": [33, 152, 156, 166, 175], "indexed": 33, "along": 33, "corresponding": 33, "essai": [33, 35, 40, 45, 56, 57, 65, 80, 91, 99, 108, 109, 114, 150, 155, 156, 160, 164, 167, 168, 173], "list_python": 33, "integer": [33, 122, 123], "slic": [33, 36], "cr\u00e9on": 33, "step": [33, 78, 117], "flott": 33, "origin": [33, 53, 163], "shallow": 33, "fourn": [33, 34, 40, 65, 163, 170], "pi": [33, 34, 40, 59, 74, 75, 76, 85, 86, 90, 109, 115, 152, 170], "14159265": 33, "indirect": [33, 152, 155], "linspac": 33, "subsidiair": 33, "quoi": [33, 34, 40, 48, 52, 70, 79, 109, 132, 136, 137, 174], "71828183": 33, "silenci": [33, 158], "vicieux": 33, "output": [33, 155], "r\u00e2l": 33, "habitu": 33, "naturel": [33, 118], "coh\u00e9rent": [33, 40], "nuit": [33, 45, 143], "reten": [33, 40, 142, 161, 167, 168, 170, 173], "notanumb": 33, "slice_of_d": 33, "nslice_of_d": 33, "nd": 33, "fancy_indexed_subarray": 33, "nfancy_indexed_subarray": 33, "reshap": [33, 35, 79, 80, 91, 112, 114, 115, 119], "fortran": [33, 35, 102], "column": [33, 34, 36, 56, 57, 79, 83, 84, 87, 105, 106, 112, 117, 121, 143, 160], "connaissent": [33, 143], "matlab": 33, "jok": 33, "infer": [33, 56, 133], "zeros_lik": 33, "ones_lik": 33, "horizontal": [33, 48, 127, 160], "vertical": [33, 160], "concatenat": [33, 34, 48], "gmat": 33, "axis": [33, 34, 35, 36, 37, 55, 56, 57, 59, 60, 80, 83, 84, 91, 119], "hstack": [33, 35, 79, 125], "vstack": [33, 35, 85, 86, 114], "8x8": [33, 120], "til": [33, 77], "extract": [33, 150], "ccccc": 33, "ccc": 33, "routin": [33, 170], "d\u00e9clar": [33, 34, 143, 167, 173], "allon": [33, 82, 143, 160], "arithmet": 33, "scalair": [33, 34], "effectuent": [33, 40, 166], "adopt": 33, "36787944": 33, "3890561": 33, "08553692": 33, "54": [33, 34, 36, 37, 65, 99, 149], "59815003": 33, "provoqu": [33, 34, 38, 40, 45, 70, 72, 73, 136, 144, 156, 158, 166, 167, 170], "tmp": [33, 36, 55, 56, 113, 114, 115], "ipykernel_1096": 33, "2601360242": 33, "runtimewarning": 33, "divid": [33, 130, 131], "encountered": 33, "33333333": 33, "valueerror": [33, 35, 51, 114, 120, 155, 156, 166, 167], "operand": [33, 40, 70, 152], "broadcast": [13, 33], "togeth": [33, 130, 131], "sep": [33, 34, 36, 40, 56, 87, 126, 127, 167, 170, 175], "commun": [8, 33, 34, 35, 52, 66, 92, 148, 152, 166, 167, 168, 171, 173], "dupliqu": [33, 106, 160], "newax": [33, 114], "38": [33, 34, 36, 72, 79, 84, 114, 136, 143], "r\u00e9duit": [33, 35, 40, 41, 52, 66, 76, 83, 84, 88, 116, 125, 133, 148, 160, 166], "existent": [33, 40, 45, 48, 55, 98, 131, 136, 143, 152, 166, 167, 168], "unes": [33, 40, 53, 56, 73, 85, 86, 152, 155, 160, 166, 167], "op\u00e8rent": 33, "\u00e9ventail": 33, "particuli": [33, 34, 40, 48, 55, 59, 64, 95, 109, 115, 121, 143, 148, 152, 155, 156, 158, 160, 161, 166, 167, 168, 173], "qr": 33, "svd": 33, "commen\u00e7on": 33, "triangulair": [33, 55], "tril": 33, "vu": [33, 36, 56, 64, 100, 118, 126, 143, 152, 160, 167], "dot": [33, 35, 53, 58, 80, 173], "nouvel": [33, 34, 36, 40, 45, 48, 52, 60, 64, 87, 128, 136, 143, 152, 160, 166, 168, 170, 173], "whatsnew": 33, "465": 33, "dedicated": 33, "infix": 33, "operator": [33, 34, 152, 166], "linalg": [33, 49, 79, 80], "inv_a": 33, "inv": [33, 79, 80], "equat": 33, "46": [33, 34, 35, 36, 37, 62, 78, 108, 114, 149, 152], "eig": [33, 49], "eigresult": 33, "eigenvalu": 33, "eigenvector": 33, "00000000e": [33, 80], "93038066e": 33, "22044605e": 33, "47": [33, 34, 36, 99, 114, 121, 124, 139, 166, 175], "eigval": 33, "sp\u00e9cialis": [33, 168], "traver": [33, 152, 160, 166, 168], "pens": [33, 36, 45, 48, 71, 116, 136, 143, 148, 152, 167, 175], "virgul": [33, 40, 167, 168], "indiquent": 33, "48": [33, 34, 36, 37, 65, 80, 83, 87, 100, 108, 113, 114, 121, 149, 152], "symbol": [33, 40, 70, 80, 136, 142, 143, 149, 152, 166, 167, 168, 170, 173, 175], "49": [33, 34, 36, 37, 83, 87, 114, 117, 166], "66": [33, 36, 48, 62, 90, 109, 136, 152], "81": [33, 36, 48, 84], "96": [33, 35, 48, 87, 107, 121, 136, 139], "102": [33, 35, 113, 114, 128, 173], "126": 33, "150": [33, 56, 59, 80, 81, 85, 86, 87, 107, 109, 111, 152], "51": [33, 34, 36, 65, 80, 103, 108, 149], "priorit": [33, 40, 166, 167], "52": [33, 34, 36, 80, 83, 84, 87, 117, 167], "l\u00e9ger": [33, 34, 50, 51, 65], "53": [33, 34, 36, 65, 75, 103, 108, 121, 124, 149, 152, 166], "rank": [33, 109], "matrix_rank": 33, "000000000000016": 33, "77475828e": 33, "10542736e": 33, "88178420e": 33, "66453526e": 33, "77635684e": [33, 79], "apport": [33, 78, 153, 173], "natif": 33, "tirag": [33, 35, 48, 55, 85, 86, 87, 102, 107, 134, 135, 152], "referent": [33, 102, 152, 160, 170], "randomnumpy": 33, "4x3": 33, "gaussien": 33, "randn": [33, 35, 57, 88, 111, 173], "normal": [33, 83, 84, 85, 86, 109, 139, 152, 154, 160, 170, 173], "94646743": 33, "00894075": 33, "06740407": 33, "12685385": 33, "29565984": 33, "15423585": 33, "28897528": 33, "91623823": 33, "161901": 33, "86416828": 33, "06260028": 33, "19651082": 33, "convaincr": [33, 48, 70, 108, 143, 173], "pur": [33, 102], "1e6": [33, 91, 152], "normalvariat": 33, "179": [33, 78], "ms": [33, 34, 48, 54, 62, 78, 81, 82, 84, 91, 106, 109, 111, 121, 124, 133, 139], "std": [33, 34, 35, 54, 62, 81, 82, 84, 91, 103, 109, 110, 111, 121, 124, 133, 139, 149, 173], "run": [33, 34, 35, 54, 62, 81, 82, 84, 91, 103, 109, 110, 111, 121, 124, 133, 139, 149, 156, 160, 173], "10000": [33, 56, 59, 69, 70, 78, 84, 90, 102, 107, 111, 121, 124, 125, 161], "\u00e9quiprob": 33, "racin": [33, 55, 96, 150, 166, 167, 170], "instant": [33, 48, 56, 65, 156, 167], "amplitud": 33, "atteint": [33, 48], "combien": [33, 34, 36, 50, 70, 78, 85, 86, 89, 120, 136, 143], "dep": [33, 34, 36, 78, 82], "argmax": [33, 35, 124], "cumsum": [33, 34, 36, 102], "temporel": 33, "optimiz": [33, 81, 82, 132], "panel": [33, 34], "ad\u00e9quat": [33, 35, 166, 168], "viv": [33, 143], "tutoriel": [33, 34], "ga\u00ebl": 33, "varoqual": 33, "r\u00e9cent": [33, 143, 160, 166, 170, 172, 173], "solver": 33, "normalis": 33, "minimis": [33, 51, 65, 79, 80, 89, 126, 129, 152], "minimiz": [33, 132], "minimize_scalar": 33, "obtiendr": 33, "optimizeresult": 33, "d\u00e9velopp": [33, 52, 95, 158, 160, 167, 170, 171, 172], "toolbox": 33, "clair": [33, 40, 65, 71], "rafraich": 33, "bowl_peak": 33, "galler": [33, 34, 43], "contour3d_demo3": 33, "58": [33, 34, 36, 37, 65, 81, 99, 108, 117, 124, 149, 173], "mpl_toolkit": 33, "mplot3d": 33, "axes3d": 33, "cm": [33, 106], "colormap": [33, 160], "min_val": 33, "max_val": 33, "figur": [33, 43, 102, 104, 116, 127, 132, 152, 160, 170, 173], "add_subplot": 33, "x_ax": 33, "y_ax": 33, "meshgrid": 33, "xy": [33, 48, 79, 80, 81, 82], "z": [33, 34, 40, 48, 58, 64, 72, 79, 105, 108, 122, 123, 136, 137, 144, 152, 166, 167, 175], "get_test_dat": 33, "plot_surfac": 33, "rstrid": 33, "cstrid": 33, "cset": 33, "contour": [33, 36], "zdir": 33, "offset": 33, "cmap": 33, "coolwarm": 33, "set_xlabel": [33, 34, 103, 125, 149], "set_xlim": [33, 74, 75, 85, 86, 90], "set_ylabel": [33, 103, 125, 149], "set_ylim": [33, 74, 75, 85, 86, 90], "set_zlabel": 33, "set_zlim": 33, "59": [33, 34, 36, 37, 65, 108, 135, 149, 166, 173], "fun": 33, "cg": 33, "bfg": 33, "powel": 33, "cobyl": 33, "optim_r": 33, "nmethod": 33, "terminated": 33, "successfully": 33, "status": 33, "4052368582391728": 33, "690e": 33, "446e": 33, "nit": 33, "nfev": 33, "final_simplex": 33, "691e": 33, "814e": 33, "011e": 33, "052e": 33, "40523687026669025": 33, "670e": 33, "jac": 33, "863e": 33, "000e": 33, "njev": 33, "40523687025688715": 33, "451e": 33, "083e": 33, "hess_inv": 33, "287e": 33, "836e": 33, "154e": 33, "direc": 33, "854e": 33, "4052368678399868": 33, "892e": 33, "maxcv": 33, "norm_of_projected_gradient_": 33, "lt": [33, 34, 48, 49, 55, 56, 59, 65, 69, 70, 72, 73, 74, 75, 78, 81, 82, 95, 96, 99, 106, 107, 109, 111, 112, 113, 114, 115, 124, 125, 127, 132, 143, 150], "_pgtol": 33, "4052368702662145": 33, "828e": 33, "360e": 33, "2x2": 33, "lbfgsinvhessproduct": 33, "gt": [33, 34, 48, 54, 58, 64, 69, 70, 72, 73, 74, 75, 76, 78, 81, 82, 95, 96, 106, 109, 113, 114, 115, 124, 125, 127, 132, 143, 150], "4052": 33, "669": 33, "gradient": 33, "var": [33, 35, 36, 53, 58, 81, 121, 166, 168], "personnel": [33, 117], "optimum": 33, "reposent": 33, "relanc": [33, 64, 66, 143], "anneal": 33, "m\u00e9taheurist": 33, "61": [33, 36, 37, 48, 65, 80, 82, 87, 91, 110, 125, 149, 152, 166], "69": [33, 34, 36, 48, 115], "197": [33, 56, 78, 103], "\u00b5": [33, 34, 35, 54, 62, 81, 82, 84, 91, 103, 109, 110, 111, 121, 139, 149], "386": 33, "346": [33, 108, 115], "118": 33, "940": 33, "147": [33, 106], "vraissembl": 33, "rescaled": 33, "62": [33, 34, 36, 80, 87, 103, 117, 134, 149], "shifted_scaled_bowlpeak": 33, "05000000677266441": 33, "500e": 33, "229e": 33, "918e": 33, "635e": 33, "407e": 33, "579e": 33, "02": [33, 34, 48, 49, 59, 78, 79, 142], "174e": 33, "72": [33, 36, 48, 99, 114], "hessien": 33, "x_1": [33, 41, 80, 130, 131, 166], "x_2": [33, 130, 131], "epsilon": [33, 79, 80, 83, 84], "mathcal": [33, 48, 122, 123], "moindr": [33, 78, 100, 160], "ordinair": [33, 40, 173], "mco": 33, "hat": [33, 79, 170], "densit": [33, 48], "mu": [33, 56, 57, 87], "sigm": [33, 95, 97, 126, 127, 128, 129], "overlin": 33, "equiv": 33, "exercis": [33, 39], "auteur": [33, 45, 73, 168, 175], "63": [33, 34, 36, 48, 81, 99, 117, 142, 166, 175], "exo1": 33, "chess": 33, "chess2": 33, "exo1b": 33, "idx_row": 33, "idx_col": 33, "wrong": 33, "also": [33, 160], "broadcasted": 33, "ix_": 33, "65": [33, 36, 48, 66, 87, 99, 117, 121, 125, 136, 137], "exo1c": 33, "is_prim": [33, 173], "67": [33, 36, 48, 70, 78, 80, 87, 124, 166], "71": [33, 36, 48, 76, 87, 91, 99, 114, 124, 152, 166], "73": [33, 36, 48, 65, 87, 109, 143, 152, 166], "79": [33, 36, 48, 84, 87, 91, 111, 121, 166], "83": [33, 36, 48, 80, 83, 84, 117, 166], "89": [33, 36, 48, 50, 65, 87, 89, 121, 124, 152, 166], "97": [33, 36, 48, 62, 65, 66, 71, 87, 88, 107, 110, 136, 166], "107": [33, 126], "109": [33, 35, 36, 65], "113": [33, 65, 113, 115], "127": 33, "131": [33, 80, 115], "137": 33, "139": [33, 102, 103, 113, 114], "149": [33, 106], "151": [33, 87], "157": 33, "163": [33, 36, 103], "167": 33, "173": [33, 78], "181": [33, 124], "191": [33, 78], "193": [33, 34, 78], "199": [33, 36, 78, 102], "211": 33, "223": [33, 34], "227": [33, 34, 63, 65, 78], "229": [33, 34, 78], "233": [33, 34, 50, 78, 144, 156], "241": [33, 34, 78], "251": [33, 34, 62, 107], "257": [33, 34, 139], "263": [33, 34], "269": [33, 34, 139], "271": [33, 34, 124], "277": [33, 34], "281": [33, 34], "283": [33, 34, 124], "293": [33, 34], "307": 33, "311": 33, "313": 33, "317": [33, 69], "331": 33, "337": 33, "347": [33, 34], "349": 33, "353": 33, "359": [33, 34], "367": 33, "373": [33, 36], "379": 33, "383": 33, "389": 33, "397": 33, "401": [33, 114], "409": 33, "419": 33, "421": 33, "431": [33, 156], "433": 33, "439": 33, "443": [33, 91], "449": 33, "457": 33, "461": [33, 113], "463": 33, "467": 33, "479": 33, "487": 33, "491": 33, "499": [33, 83, 84], "503": [33, 81], "509": [33, 62], "521": 33, "523": 33, "541": 33, "547": 33, "557": 33, "563": 33, "569": 33, "571": 33, "577": 33, "587": [33, 168], "593": 33, "599": 33, "601": 33, "607": 33, "613": 33, "617": 33, "619": 33, "631": 33, "641": 33, "643": 33, "647": [33, 124], "653": 33, "659": 33, "673": 33, "677": 33, "683": 33, "691": 33, "701": [33, 36, 113], "709": 33, "719": [33, 36], "727": 33, "733": 33, "739": [33, 36, 113], "743": 33, "751": 33, "761": [33, 36], "769": [33, 36], "773": 33, "787": [33, 82], "797": 33, "809": 33, "811": 33, "821": 33, "823": 33, "827": 33, "829": 33, "839": 33, "853": 33, "857": 33, "859": 33, "863": 33, "877": [33, 113], "881": 33, "883": [33, 56], "887": 33, "907": 33, "911": 33, "919": [33, 113], "937": 33, "941": [33, 115], "947": 33, "967": 33, "997": [33, 35, 82, 88], "barr": [33, 56, 64, 65, 72, 107], "961": 33, "n_walk": 33, "n_step": 33, "walk": [33, 58, 168, 175], "68": [33, 36, 48, 78, 81, 119], "hav": [33, 36, 130, 131, 160], "few": 33, "fig": [33, 36, 49, 56, 57, 59, 60, 63, 65, 83, 84, 85, 86, 87, 90, 99, 103, 105, 117, 125, 139, 146, 147, 149, 153, 171], "subplot": [33, 36, 48, 49, 55, 56, 57, 59, 60, 63, 65, 74, 75, 83, 84, 85, 86, 87, 90, 99, 103, 105, 117, 125, 139, 146, 147, 149], "figsiz": [33, 34, 36, 49, 55, 56, 57, 59, 60, 63, 65, 83, 84, 85, 86, 87, 90, 99, 102, 103, 105, 117, 125, 147, 149], "set_titl": [33, 34, 48, 60, 63, 65, 83, 84, 85, 86, 103], "squar": [33, 71, 80], "evolv": 33, "rms_posit": 33, "lw": [33, 87, 90], "fit": [33, 85, 86, 87, 124, 125], "highest": 33, "lowest": [33, 130, 131], "titl": [33, 36, 48, 49, 54, 56, 59, 99, 109, 111, 112, 156, 160, 166, 175], "wand": 33, "furth": [33, 106, 160], "hits_the_bound": 33, "2f": [33, 40, 48, 54, 63, 65, 167], "among": 33, "beyond": 33, "hit": 33, "first_hit": 33, "crossing": 33, "d\u00e9riv": [33, 56, 78, 79, 80, 139, 152, 173], "derive": 33, "2n": [33, 61, 69, 130, 131, 139], "n_sampl": 33, "x1_x2_ep": 33, "beta_hat": 33, "coef": [33, 112, 133, 152], "00346367": 33, "99844688": 33, "99958244": 33, "log_likelihood": 33, "sigma_squar": 33, "neg_log_likelihood_vectoriel": 33, "theta0": 33, "820124637851613": 33, "008e": 33, "402e": 33, "820e": 33, "ind\u00e9pend": [33, 38, 40, 41, 48, 55, 59, 104, 119, 166, 171, 173], "008188842074571": 33, "016697194262983": 33, "recet": 34, "cookbook": 34, "217": [34, 78], "inser": [34, 40, 52, 59, 60, 73, 89, 96, 114, 126, 150, 152, 155, 158, 160, 161, 164, 166, 167, 170, 173, 175], "fen\u00eatr": [34, 128, 159, 166, 167, 173], "extern": [34, 142, 169], "spyd": 34, "sql": [34, 36], "million": [34, 62], "decr": [34, 35, 49, 51, 65, 79, 80, 116, 152, 160, 164, 166, 167, 170, 173, 175], "gros": [34, 56, 106, 168], "mo": [34, 45, 76, 143, 166], "patient": 34, "astuci": 34, "wrangling": 34, "working": 34, "missing": [34, 166], "218": 34, "ipython": [34, 53, 54, 58, 64, 65, 69, 70, 72, 73, 78, 104, 113, 114, 116, 124, 127, 129, 138, 139, 140, 141, 142, 146, 147, 151], "imag": [34, 54, 64, 65, 74, 75, 78, 104, 106, 114, 116, 127, 129, 138, 139, 140, 141, 143, 146, 147, 151, 160, 173, 175], "td2df": 34, "pr\u00e9vu": [34, 94, 152, 155, 160, 168], "bloc": [34, 144, 145, 154, 160, 166], "uni": [34, 143], "dimensionnel": 34, "219": [34, 65, 78], "hello": [34, 40], "220": [34, 37, 78, 117], "missing1": 34, "missing2": 34, "city2cp_dict": 34, "paris14": 34, "75014": 34, "paris18": 34, "75018": 34, "malakoff": 34, "92240": 34, "6300": 34, "cit": [34, 40, 45, 56, 78, 166, 167, 173], "lien": [34, 39, 55, 56, 142, 152, 160, 168], "isnull": [34, 83], "notnull": 34, "221": [34, 35, 103, 139], "cities_list": 34, "paris12": 34, "vanv": 34, "cities2": 34, "\u00e9ventuel": [34, 88, 143], "222": [34, 78, 79], "75012": 34, "75": [34, 36, 48, 119, 124, 125, 126, 127, 175], "92": [34, 48, 65, 110, 121], "align": [34, 106, 145, 160, 166, 167], "paris13": 34, "224": [34, 78], "184480": 34, "12600": 34, "150028": 34, "150036": 34, "additionnent": 34, "nomm": [34, 36, 40, 45, 55, 144, 150, 152, 166, 167, 173], "225": 34, "postal": 34, "vill": [34, 65, 126, 127], "collect": [34, 41, 44, 55, 56, 101, 102, 110, 117, 118, 142, 149, 152, 161, 167], "apparent": [34, 121, 150, 160, 167], "226": [34, 78], "prix": [34, 78], "devis": 34, "euros": [34, 78], "228": [34, 78, 173], "230": [34, 78, 124, 152], "231": [34, 78], "aujourd": [34, 38, 40, 45, 48, 63, 142, 170], "hui": [34, 38, 40, 45, 48, 63, 142, 170], "ger": [34, 64, 77, 115, 155, 160, 164, 167, 168, 170, 173, 175], "section": [34, 152, 155, 156, 160, 166, 168, 173], "briev": 34, "reprend": [34, 51, 58, 60, 97, 113, 134, 152, 155, 160, 166, 167], "obligatoir": [34, 40, 45, 134, 150, 152, 154, 166], "accent": [34, 78, 108, 126, 155, 167], "232": [34, 65, 78, 111, 118], "regard": [34, 40, 48, 50, 55, 56, 58, 65, 78, 91, 113, 115, 118, 121, 133, 137, 142, 144, 149, 160], "xlsx": [34, 106], "special": 34, "bash": 34, "command": [34, 45, 106, 120, 126, 160, 166, 167, 168, 173], "caracter": [34, 36, 42, 45, 51, 52, 64, 66, 68, 69, 70, 72, 78, 95, 108, 109, 126, 132, 136, 142, 143, 144, 145, 148, 149, 150, 152, 155, 156, 160, 165, 166, 168, 170, 171, 173], "tail": [34, 36, 56, 83, 84, 87, 106], "df_marathon": 34, "marathon": 34, "anne": [34, 143], "2011": [34, 45], "7589": 34, "2010": [34, 143, 175], "7601": 34, "2009": [34, 45, 130, 131, 143], "7547": 34, "2008": [34, 128, 129], "7600": 34, "2007": 34, "7637": 34, "234": [34, 78, 156, 167], "000000": [34, 36, 152, 166], "1989": 34, "754875": 34, "7933": 34, "660167": 34, "028545": 34, "385": 34, "289830": 34, "1947": 34, "7382": 34, "1981": [34, 143], "7698": 34, "1991": 34, "7820": 34, "2001": [34, 111, 143], "8046": 34, "500000": [34, 152, 166, 167], "10028": 34, "235": [34, 78, 81], "iloc": [34, 36, 56, 83, 87], "236": [34, 78], "loc": [34, 36, 48, 106, 152, 155, 156, 166, 167], "238": [34, 78], "240": [34, 56, 78], "set_index": [34, 36, 56, 59, 83, 84, 105, 111], "dfi": [34, 36], "r\u00e9fer": [34, 40], "242": [34, 81], "243": 34, "dupr": [34, 44, 46, 166, 167, 171], "arrond": [34, 70, 166, 167], "cl\u00e9menc": 34, "reset_index": [34, 36, 87], "244": 34, "drop": [34, 36, 56, 59, 78, 87], "inplac": 34, "dfi2": 34, "plag": 34, "245": 34, "urllib": [34, 66, 109, 117, 143, 170], "246": 34, "2006": 34, "7683": 34, "247": 34, "2005": 34, "renomm": [34, 36, 154, 168], "248": [34, 87], "year": 34, "donnees_enquete_2003_televis": 34, "poidslog": 34, "ponder": [34, 80], "individuel": 34, "relat": [34, 36, 48, 49, 56, 79, 80, 87, 139, 160, 167, 168, 173], "poidsf": 34, "clt1freq": 34, "t\u00e9l\u00e9vis": 34, "clt2freq": 34, "unit": [34, 78, 143], "semain": [34, 36, 45, 142, 163], "mois": [34, 45, 56, 78, 163, 175], "renseign": [34, 40, 83, 84, 129, 152, 167, 173], "sauv": [34, 143, 168], "isnan": [34, 35, 83, 84], "apply": [34, 121], "filln": [34, 36], "249": 34, "jeux": [8, 34, 36, 45, 56, 65, 92, 94, 124, 125, 165, 173], "n_1": 34, "n_2": 34, "sas": 34, "250": [34, 48, 59, 85, 125], "amsterdam": 34, "london": 34, "boston": 34, "berlin": 34, "york": [34, 149], "chicago": 34, "fukuok": 34, "stockolm": 34, "1948": 34, "1949": [34, 109], "1950": 34, "1951": 34, "1952": 34, "1953": 34, "1954": 34, "1955": 34, "1956": 34, "chaining": 34, "indexing": [34, 35, 36, 69], "selecting": 34, "subset": [34, 122, 123], "1971": [34, 175], "112": 34, "7971": 34, "204": [34, 78], "8574": 34, "285": [34, 124], "8325": 34, "252": [34, 103], "query": 34, "253": [34, 82], "concat": [34, 36, 56], "254": [34, 78], "concat_lign": 34, "718": [34, 114], "concat_col": 34, "256": [34, 54, 61, 76, 143, 149, 164], "sort_valu": [34, 83, 84, 105], "ascending": 34, "7418": 34, "325": [34, 156], "202": [34, 78, 125], "7480": 34, "276": 34, "8047": 34, "caract\u00e9rist": [34, 45, 113, 160], "customis": 34, "gr": [34, 64, 87, 96, 114, 175], "generic": 34, "dataframegroupby": 34, "0x7f59b93a0d90": 34, "258": 34, "sort_index": 34, "259": [34, 62], "37916": 34, "68673": 34, "7583": 34, "200000": [34, 56], "7630": 34, "333333": 34, "7652": 34, "555556": 34, "mention": [34, 152, 155, 156, 160, 167], "aggreg": [34, 36, 56, 102], "personnalis": 34, "261": 34, "max_enti": 34, "agg": [34, 102], "8134": 34, "7968": 34, "262": 34, "nsmallest": 34, "264": 34, "171": [34, 78, 124], "170": [34, 78, 110, 152], "324": 34, "357": 34, "74": [34, 36, 48, 65, 87, 103, 133], "200": [34, 48, 59, 65, 84, 85, 86, 103, 106, 114, 116, 118, 121, 125, 140, 141, 160], "265": 34, "7544": 34, "7578": 34, "7439": 34, "7552": 34, "7541": 34, "1999": 34, "7542": 34, "7518": 34, "7570": 34, "7510": 34, "7663": 34, "7681": 34, "1983": 34, "7897": 34, "1986": [34, 175], "7953": 34, "inner": 34, "droit": [34, 40, 48, 54, 59, 65, 96, 98, 99, 107, 128, 143, 144, 160, 166, 167, 168, 170], "merging": 34, "joining": 34, "jointur": 34, "patat": 34, "fort": [34, 40, 66, 88, 91, 125, 132, 143, 168], "correspondent": [34, 132, 139, 167, 175], "266": 34, "pay": [34, 78, 143], "267": [34, 79], "usa": 34, "germany": 34, "uk": 34, "franc": [34, 35, 36, 56, 66, 78, 91, 111, 143, 148, 149, 164, 167, 168], "268": 34, "dfavecpay": 34, "left_on": [34, 36, 106], "right_on": [34, 36, 106], "192": [34, 65, 125], "joindr": 34, "c_1": [34, 122, 123], "c_2": 34, "c_3": 34, "respect": [34, 48, 83, 84, 111, 134, 143, 152, 166, 167], "a_i": [34, 102, 128], "b_i": [34, 128], "c_i": [34, 55], "contiendr": [34, 40, 126, 152, 155, 167, 168, 170], "a1": [34, 48, 90, 133, 152], "b1": [34, 48, 133, 143, 160], "c1": [34, 51, 52, 76, 133, 152, 167], "b2": [34, 48, 133, 160], "c2": [34, 51, 52, 76, 86, 133, 152, 167], "a2": [34, 48, 90, 133, 152], "c4": [34, 52, 143], "b3": [34, 133, 160], "c5": [34, 143], "pivot_t": [34, 36], "reshaping": 34, "piv": [34, 112], "1967": 34, "1968": [34, 65], "1969": 34, "1987": 34, "1988": 34, "syntactic": 34, "sugar": 34, "2em": [34, 69], "270": 34, "thre": 34, "four": 34, "272": 34, "273": 34, "riemann": 34, "3328334999999999": 34, "na\u00efv": [34, 138], "mn": [34, 60, 108], "\u00e9vident": [34, 54, 59, 65, 71, 83, 111, 113, 148, 149, 152, 160, 166, 168, 170, 175], "klib": 34, "appui": [34, 38, 40, 144, 158, 160], "magic": 34, "cellul": [34, 35, 128, 129, 142, 150], "274": [34, 124], "big_df": 34, "cle1": [34, 40, 69, 167], "cle2": [34, 40, 69, 167], "275": 34, "932": 34, "oubli": [34, 54, 83, 84, 116, 142, 150, 151, 152, 166, 168, 170, 173], "391": [34, 156], "gain": [34, 91, 99, 170], "compliqu": [34, 53, 56, 59, 155, 171, 173, 175], "aaa": [34, 51, 64, 72, 175], "mm": [34, 175], "jj": [34, 175], "hh": 34, "ss": 34, "timedelt": [34, 56, 163], "278": 34, "recr\u00e9": [34, 65, 166, 167, 170], "1900": 34, "total_second": 34, "inse": 34, "naissanc": [34, 58, 108, 109, 163, 175], "d\u00e9ces": [34, 36, 56], "2012": [34, 67], "279": [34, 113, 114, 156], "zipfil": [34, 106, 168, 170], "client": [34, 143, 152], "download_and_sav": 34, "root_url": 34, "respons": [34, 117, 143], "urlopen": [34, 66, 109, 117, 143], "timeouterror": 34, "urlerror": 34, "badstatuslin": 34, "enseign": 34, "compl": 34, "wb": [34, 117, 143, 168], "outfil": 34, "extractall": 34, "etatcivil2012_mar2012_dbas": 34, "etatcivil2012_nais2012_dbas": 34, "etatcivil2012_dec2012_dbas": 34, "2407910": 34, "dbfread": 34, "280": [34, 103], "dbf": 34, "dbase2df": 34, "dbase_filenam": 34, "cp437": 34, "df_civil": 34, "mar2012": 34, "utf8": [34, 40, 143], "246123": 34, "anaish": 34, "depnaish": 34, "indnath": 34, "etamath": 34, "anaisf": 34, "depnaisf": 34, "indnatf": 34, "etamatf": 34, "amar": 34, "mmar": 34, "jsemain": 34, "depmar": 34, "depdom": 34, "tudom": 34, "tucom": 34, "nbenfcom": 34, "sp\u00e9cial": [34, 35, 45, 97, 167, 168, 175], "accentu": [34, 45, 143, 165], "r\u00e9pandu": [34, 40, 109, 142, 152, 166], "lit": [34, 40, 45, 53, 58, 95, 109, 168, 173], "vardf": 34, "varlist_mariag": 34, "libel": 34, "char": [34, 105, 160], "\u00e9pous": 34, "\u00e9poux": 34, "d\u00e9part": [34, 35, 50, 54, 55, 57, 61, 65, 121, 126, 132, 152, 160, 173], "domicil": [34, 87], "matrimonial": 34, "ant\u00e9rieur": 34, "enfant": [34, 97, 143], "tranch": 34, "urbain": 34, "absciss": [34, 84, 99, 138, 152], "\u00e2ge": [34, 48, 163], "mar": [34, 67], "femm": [34, 142, 143], "etant": [34, 48, 152, 155, 167, 170], "risqu": [34, 155], "lisibl": [34, 56, 97, 132, 150, 158, 160, 161, 166, 167, 168, 170, 171], "heatmap": 34, "282": 34, "visualiz": 34, "titr": [34, 45, 48, 56, 106, 143, 160, 173, 175], "grill": [34, 35, 77, 140, 160], "grid": 34, "superpos": [34, 56], "courb": [34, 54, 56, 138, 160], "284": 34, "as_index": 34, "kind": [34, 46, 56, 99], "bar": [34, 102, 105, 128], "fontsiz": 34, "legend": [34, 36, 48, 54, 56, 62, 85, 87, 103, 105, 125, 149, 166], "set_visibl": [34, 117], "l\u00e9gend": [34, 160, 173], "requ\u00eat": [34, 40, 79, 168], "r\u00e9partit": [8, 34, 85, 86, 94, 102], "excelwrit": 34, "existing": 34, "workbook": 34, "docu": [34, 40, 44, 45, 53, 58, 142, 143, 148, 156, 168, 170, 173], "df1000": 34, "286": [34, 124], "ton_example100": 34, "clos": [34, 40, 142, 155, 156, 168, 175], "287": [34, 124], "poidlog": 34, "unnamed": 34, "889422": 34, "4766": 34, "865201": 34, "310209": 34, "12381": 34, "589746": 34, "740070": 34, "14685": 34, "431344": 34, "775545": 34, "9516": 34, "049939": 34, "732512": 34, "3925": 34, "907588": 34, "288": [34, 167], "289": 34, "8403": 34, "7386": 34, "8397": 34, "502091": 34, "2690": 34, "961176": 34, "8398": 34, "306852": 34, "1644": 34, "574141": 34, "8399": 34, "501181": 34, "13405": 34, "104689": 34, "8400": 34, "382758": 34, "7410": 34, "905653": 34, "8401": 34, "343340": 34, "1840": 34, "132652": 34, "obtenus": [34, 65, 149], "291": [34, 124], "292": [34, 160], "294": 34, "select": [34, 160], "echantillon": 34, "830": 34, "295": 34, "7883": 34, "371429": 34, "7922": 34, "315789": 34, "7891": 34, "061224": 34, "7815": 34, "909091": 34, "8075": 34, "187500": 34, "296": [34, 108], "secondes_x": 34, "secondes_y": 34, "7937": 34, "028571": 34, "297": 34, "7466": 34, "8053": 34, "7871": 34, "7599": 34, "7661": 34, "7744": 34, "8456": 34, "7672": 34, "7665": 34, "7585": 34, "7515": 34, "7723": 34, "8163": 34, "7568": 34, "7722": 34, "7755": 34, "7508": 34, "7704": 34, "7519": 34, "7694": 34, "l\u00e0": [34, 35, 36, 38, 40, 56, 59, 65, 80, 85, 86, 98, 152, 156], "298": 34, "pivmean": 34, "7695": 34, "161290": 34, "7928": 34, "560976": 34, "8133": 34, "393939": 34, "299": 34, "1612903225805": 34, "909090909091": 34, "371428571429": 34, "061224489796": 34, "315789473684": 34, "5609756097565": 34, "028571428571": 34, "1875": 34, "393939393939": 34, "courus": 34, "300": [34, 59, 84, 85, 86, 106, 109, 115, 143, 146, 147, 160], "0000": 34, "00000": 34, "16129": 34, "301": [34, 108], "1982": 34, "1984": 34, "1992": 34, "1985": 34, "84": [34, 36, 48, 87, 125, 143, 152], "1963": 34, "302": [34, 113], "ageh": 34, "agef": 34, "303": 34, "scatt": [34, 36, 85, 86, 99, 146, 147, 149], "304": 34, "hexbin": 34, "305": 34, "differencehf": 34, "306": 34, "dissem": 34, "repsem": 34, "secondary_y": 34, "fonctionnal": [35, 142, 152, 158, 160, 167, 168, 170, 175], "improb": [35, 83], "basiqu": 35, "blas": 35, "assembleur": 35, "peaufin": 35, "gr\u00e9": 35, "mat\u00e9riel": 35, "pren": [35, 65, 80, 143, 160], "r\u00e9ag": [35, 160, 173], "integ": 35, "matint": 35, "540": 35, "ns": [35, 36, 83, 84, 103, 109, 121, 139, 149], "matintf": 35, "549": 35, "1005": 35, "996": [35, 82], "1008": [35, 87], "1009": 35, "106": [35, 56], "95": [35, 48, 87, 90, 107, 110, 124, 139], "108": 35, "multipli": [35, 62, 65, 163, 167], "valent": 35, "rand": [35, 49, 56, 60, 80, 87, 91, 107, 112, 125], "squeez": 35, "expend_dim": 35, "argmin": [35, 60, 84, 91], "prod": [35, 114], "commm": 35, "chisquar": 35, "p_": 35, "o_": 35, "ij": [35, 49, 55, 119], "histogram": [35, 121, 148, 149], "empir": 35, "plein": [35, 56, 57, 58, 62, 64, 88, 96, 108, 121, 132, 143, 160, 168, 173], "r\u00e9flech": [35, 45, 143], "csr_matrix": [35, 125], "re\u00e7oit": [35, 41, 45, 136, 152, 166, 167, 173], "t\u00e9l\u00e9phon": [35, 168], "portabl": [35, 170], "contact": 35, "chi_squar": 35, "pis": [35, 109], "keepdim": [35, 37], "pj": 35, "pispj": 35, "chi": [35, 94], "5798254016266716": 35, "98556467": 35, "47377301": 35, "77148185": 35, "26135908": 35, "27373018": 35, "0240458": 35, "55360714": 35, "3575369": 35, "71740732": 35, "3260206": 35, "876020129318981": 35, "plusieurs_tirag": 35, "99594032": 35, "67914189": 35, "98105965": 35, "93181536": 35, "86827764": 35, "5000": [35, 48, 66, 111, 113, 125], "407": [35, 149], "785": 35, "1273": 35, "2135": 35, "437878": 35, "49408914": 35, "55030028": 35, "60651142": 35, "66272256": 35, "7189337": 35, "77514485": 35, "83135599": 35, "88756713": 35, "94377827": 35, "99998941": 35, "bref": [8, 35, 56, 94, 125], "tient": [35, 36, 56, 76, 81, 83, 84, 87, 109, 152, 160, 166], "sauf": [35, 40, 65, 128, 139, 152, 170, 173, 175], "gross": 35, "creus": [35, 36, 83, 84, 92], "spars": [35, 62], "concret": [35, 152, 155, 167, 173], "ide": 35, "1000000": [35, 101, 151, 152, 170], "setdiag": 35, "python395_x64": 35, "_index": 35, "125": [35, 139, 152], "sparseefficiencywarning": 35, "changing": 35, "sparsity": 35, "expens": 35, "lil_matrix": 35, "_set_arrayxarray": 35, "fou": 35, "rus": 35, "territoir": 35, "export": [36, 170], "col1": 36, "col2": 36, "schtroumph": 36, "schtroumphet": 36, "88": [36, 37, 48, 65, 87, 107, 110, 143, 152, 160], "offre": [36, 143, 152, 166, 167], "impress": [36, 142], "souven": [36, 64, 82, 143, 166], "particular": [36, 41, 46, 130, 131, 152, 167, 168], "potentiel": [36, 59, 81], "sup055": 36, "notat": [36, 40, 61, 88, 119, 145, 166], "df1": 36, "col3": 36, "ipykernel_32232": 36, "3074685679": 36, "settingwithcopywarning": 36, "trying": 36, "row_index": 36, "col_index": 36, "instead": 36, "See": 36, "caveat": 36, "user_guid": 36, "returning": 36, "view": [36, 106], "avert": [36, 167], "stipul": [36, 78, 160, 170], "dispara\u00eetr": [36, 118, 158, 160], "cr\u00e9ent": [36, 160], "congestion": 36, "utilitair": 36, "isna": [36, 56], "to_datetim": [36, 56, 87], "isin": [36, 56], "filt": [36, 40, 113, 168], "pivot": [36, 59, 94, 143], "quantil": [36, 80, 81, 91], "adress": [36, 44, 45, 56, 143, 160, 164, 166], "hospitali": [36, 87], "\u00e9pidem": [36, 49, 56, 57, 87], "gouv": [36, 56, 57, 87], "dataset": [36, 56, 87, 106, 124, 125], "63352e38": [36, 87], "d353": [36, 87], "4b54": [36, 87], "bfd1": [36, 87], "f1b3ee1cabd7": [36, 87], "08c18e08": 36, "6780": 36, "452d": 36, "9b8c": 36, "ae244ad529b3": 36, "reg": [36, 64, 143, 166], "cl_age90": 36, "hosp": [36, 87], "hospconv": 36, "ssr_usld": 36, "rad": [36, 87], "dc": [36, 87], "219577": 36, "94": [36, 48, 56, 87, 89, 99], "387": [36, 56], "219578": 36, "536": 36, "219579": 36, "810": [36, 87], "129": [36, 102], "219580": 36, "888": [36, 160], "219581": 36, "388": 36, "121": [36, 113], "datetime64": 36, "agg_par_jour": 36, "26110": 36, "1452": 36, "14586": 36, "9311": 36, "1717663": 36, "271176": 36, "26239": 36, "1435": 36, "14707": 36, "9336": 36, "1718630": 36, "271254": 36, "26255": 36, "1465": 36, "14704": 36, "9323": 36, "763": 36, "1719634": 36, "271322": 36, "26253": 36, "1460": 36, "14680": 36, "9344": 36, "1720370": 36, "271394": 36, "26174": 36, "1413": 36, "14658": 36, "9354": 36, "749": 36, "1721380": 36, "271456": 36, "evolu": [36, 56, 83, 84], "hospitalis": [36, 56], "\u00e9chel": [36, 56, 92], "logarithm": [36, 56, 69, 116, 121, 136, 155], "logy": [36, 56, 59], "covid49": 36, "agg_par_jour49": 36, "372": [36, 111], "180": [36, 56, 78, 113, 114], "57846": 36, "1554": 36, "377": [36, 50], "184": [36, 118, 125], "57859": 36, "374": [36, 96], "177": [36, 78, 102, 115], "57877": 36, "375": 36, "175": 36, "57889": 36, "57900": 36, "nag": 36, "diff": [36, 48, 57, 83, 84, 87, 121, 168, 173], "736": [36, 87], "1010": 36, "rolling": [36, 56], "cent": [36, 38, 40, 152], "roll": 36, "857143": 36, "142857": 36, "571429": 36, "428571": 36, "76": [36, 48, 83, 107, 156], "gen": [36, 52, 56], "h\u00f4pital": [36, 56], "gu\u00e9rison": [36, 56], "correl": [36, 83, 84], "r\u00e9anim": 36, "d\u00e9cal": [36, 40, 116, 136, 147, 166, 167], "dis": [36, 66, 143], "pic": 36, "77": [36, 48, 56, 65, 82, 87, 152], "714286": 36, "285714": 36, "78": [36, 48, 54, 107, 152], "data_last": 36, "ts": [36, 163], "dclag": 36, "shift": [36, 160], "realag": 36, "ts_cor": 36, "corr": [36, 83, 84], "delay": [36, 78, 87], "corr_dc": 36, "corr_r": 36, "m\u00e9dical": 36, "sir": [36, 56], "sex": 36, "338240": 36, "1766": 36, "338241": 36, "338242": 36, "338243": 36, "978": 36, "338244": 36, "4acad602": 36, "d8b1": 36, "4516": 36, "bc71": 36, "7d5574d5f33e": 36, "iso": [36, 143], "8859": [36, 143], "1911493942": 36, "dtypewarning": 36, "mixed": 36, "specify": [36, 56], "low_memory": 36, "extract_dat": [36, 56], "depart": 36, "region": [36, 56, 130, 131], "libelle_reg": 36, "libelle_dep": 36, "tx_incid": 36, "taux_occupation_sa": 36, "tx_pos": 36, "tx_incid_couleur": 36, "r_couleur": 36, "taux_occupation_sae_couleur": 36, "tx_pos_couleur": 36, "nb_orang": 36, "nb_roug": 36, "90390": 36, "93": [36, 48, 84, 88, 110], "provenc": 36, "alpe": 36, "c\u00e3": 36, "azur": 36, "vauclus": 36, "721489": 36, "orang": [36, 81], "90391": 36, "719256": 36, "90392": 36, "524887": 36, "90393": 36, "566028": 36, "90394": 36, "570747": 36, "chardet": [36, 143, 149], "covid19": [36, 56], "rb": [36, 143, 149, 168], "confident": [36, 143, 149], "issus": [36, 40], "openstreetmap": 36, "barycentr": [36, 152], "departement_french_2018": 36, "longitud": [36, 65, 167], "latitud": [36, 65, 167], "spher": [36, 65], "82": [36, 48, 117], "dep_pos": 36, "code_inse": 36, "nuts3": 36, "surf_km2": 36, "deplong": 36, "deplat": 36, "morbihan": 36, "fr524": 36, "6870": 36, "812320": 36, "846846": 36, "98": [36, 48, 54, 84, 87, 102, 107, 110, 121, 136], "doub": 36, "fr431": 36, "5256": 36, "362722": 36, "165964": 36, "jur": 36, "fr432": 36, "5049": 36, "697361": 36, "729368": 36, "ardech": 36, "fr712": 36, "5566": 36, "425582": 36, "752771": 36, "fr812": 36, "5875": 36, "179861": 36, "993601": 36, "last_extract_dat": 36, "indic_last": 36, "ain": 36, "348764": 36, "099799": 36, "alli": 36, "187644": 36, "393637": 36, "cantal": 36, "669045": 36, "051247": 36, "dr\u00f4m": 36, "167364": 36, "685239": 36, "018230": 36, "090620": 36, "dordogn": 36, "741203": 36, "104948": 36, "girond": 36, "575870": 36, "823614": 36, "land": [36, 130, 131, 175], "783793": 36, "965855": 36, "lot": [36, 130, 131], "garon": 36, "460747": 36, "367964": 36, "85": [36, 48, 55, 84, 87, 91, 110, 143, 152], "bigr1": 36, "bigr2": 36, "SAE": 36, "86": [36, 48, 78, 80, 84, 87, 91, 110, 143, 156, 167], "arden": 36, "640751": 36, "616226": 36, "constitu": [38, 40, 54, 62, 64, 78, 134, 166, 171], "r\u00e9utilis": [38, 40, 45, 53, 154, 160, 166], "r\u00e9part": [38, 40, 56, 65, 78, 105, 142, 170], "vglob": 38, "un_calcul": 38, "contors": 38, "bouton": [38, 40, 173], "somme_doubl": [38, 40], "test_somme_doubl": [38, 40], "quiconqu": [38, 40], "attend": [38, 40, 148, 160, 168, 173, 175], "comprend": [38, 40, 95], "bing": [38, 40], "envois": [38, 40], "confus": [39, 52, 64, 152, 166], "truc": 39, "charg": [37, 39, 46, 142, 156, 160, 167], "crash": 39, "cours": [39, 170, 173], "programmer": 39, "suffisent": [40, 152], "d\u00e9couvr": [40, 72, 79, 113, 127, 128, 168, 173], "jun": 40, "gcc": 40, "derri": [40, 48], "espac": [40, 48, 52, 66, 78, 80, 92, 116, 118, 124, 126, 145, 152, 160, 161, 166, 167, 171, 175], "commentair": [40, 121, 145, 155, 164, 165, 173], "commencent": [40, 105, 120, 167, 168, 170], "vont": [40, 152, 168, 173], "help": [40, 113, 114, 134, 152, 155, 160, 166, 170], "encadr": [40, 83, 152, 167], "\u00e9tal": 40, "d\u00e9monstr": [40, 126], "sphinx_runpython_extens": [40, 152, 156, 166, 171], "pend": [40, 56, 115, 143, 155, 158, 160, 166, 173], "h\u00e9sit": [40, 144], "douteux": 40, "incorrect": [40, 72, 152], "lettr": [40, 41, 45, 64, 66, 69, 71, 72, 78, 136, 137, 142, 148, 149, 150, 160, 167, 175], "soulign": [40, 41, 152, 167], "minuscul": [40, 41, 167, 168], "majuscul": [40, 41, 73, 167, 168], "portion": [40, 41, 46, 136, 155, 166, 170, 173], "\u00e9tend": [40, 160, 167, 168], "\u00e9cras": [40, 168], "apostroph": [40, 167], "guill": 40, "crochet": [40, 111, 167, 175], "usuel": [40, 165], "bug": [40, 155], "145": [40, 56, 106], "\u00e9quivaut": [40, 142, 167], "allant": [40, 45, 96, 166], "idem": [40, 160], "confondr": [40, 70, 72, 99, 167], "upper": [40, 66, 73, 105, 129, 167], "isalph": [40, 167], "isdig": [40, 155, 167], "replac": [40, 53, 58, 66, 69, 83, 114, 115, 117, 124, 143, 160, 167, 170, 175], "optionnel": [40, 160, 167], "maxspl": [40, 167, 175], "d\u00e9coup": [40, 54, 59, 64, 108, 113, 126, 160, 166, 167, 168, 175], "d\u00e9limiteur": [40, 166, 167], "coupur": [40, 51, 81, 82, 167], "agglutin": [40, 167], "facult": [40, 41, 152, 155, 166, 167, 175], "affichag": [40, 72, 95, 112, 114, 150, 152, 155, 160, 166, 167, 168, 173], "tronqu": [40, 155, 167], "d\u00e9cimal": [40, 163, 166, 167, 168], "123456789": [40, 167], "2e": 40, "14159": 40, "14e": 40, "suppress": [40, 152], "support": [40, 45, 69, 70, 161, 167, 173, 175], "iem": [40, 167], "2k": [40, 139, 167], "3k": [40, 167], "difficil": [40, 45, 85, 86, 125, 143, 145, 158, 166, 167, 173], "pr\u00e9voir": [40, 160, 167], "quelconqu": [40, 79, 81, 95, 127, 166, 167], "insert": [40, 59, 65, 114, 150, 160, 161, 167], "pop": [40, 59, 167], "\u00e9changent": [40, 160, 171], "assoc": [40, 55, 65, 72, 136, 155, 160, 166, 167, 173], "s\u00e9lect": [40, 65, 160, 167], "valeur1": [40, 69, 167], "valeur2": [40, 41, 69, 152, 167], "superflu": [40, 155, 167], "clear": [40, 167, 173], "updat": [40, 53, 64, 65, 105, 112, 167, 168], "d2": [40, 51, 76, 81, 83, 84, 105, 127], "d1": [40, 51, 76, 81], "setdefault": [40, 167], "popitem": 40, "net": [40, 49, 64, 117, 166, 167, 171], "contrepart": [40, 41, 152, 167], "encha\u00eenent": 40, "syumbol": 40, "xrang": 40, "li2": 40, "random_matrix": [40, 62], "__enter__": [40, 113, 114, 115], "__exit__": [40, 113, 114, 115, 124], "acceptent": [40, 152, 167], "Leur": [40, 152, 167], "exemple_fonct": [40, 41, 170], "p3": [40, 132, 152], "r1": [40, 81, 82, 91], "r2": [40, 81, 82, 85, 91], "re\u00e7oivent": [40, 160, 166], "doivent": [40, 41, 120, 132, 136, 152, 160, 166, 167, 170, 175], "follow": [40, 166], "int\u00e9rieur": [40, 41, 132, 136, 152, 155, 160, 166, 167, 168, 173, 175], "r\u00e9percu": 40, "ext\u00e9rieur": [40, 136, 152, 160, 166, 167, 172], "sein": [40, 45, 55, 152, 160, 167, 171, 173], "d\u00e9clin": 40, "iterate_double_on_list": 40, "run_python_script_139986840454144": [], "0x7f513a48c2e0": [], "rend": [40, 78, 124, 143, 152, 161, 166], "ma_cl": 40, "att3": 40, "att4": 40, "constructeur": [40, 95, 97, 132, 153, 155, 160, 168, 173], "calcule4": 40, "pr\u00e9ced": [40, 54, 152, 154, 166, 167, 168, 175], "invari": [40, 152], "mun": [40, 128, 160, 166], "recens": [40, 66, 152, 161, 164, 167, 170], "staticmethod": [40, 41, 152], "calcule_static": 40, "terminent": [40, 53, 167], "__": 40, "__add__": [40, 132, 133, 152], "soustract": [40, 132, 152, 163, 166, 167], "__cmp__": [40, 152], "int\u00e9r\u00eat": [40, 58, 78, 88, 102, 132, 143, 152, 167, 168], "majeur": [40, 81, 82, 109, 125], "ma_classe2": 40, "mer": [40, 58, 108, 143, 173], "simplif": [40, 100, 154], "makebold": 40, "wrapped": 40, "makeitalic": 40, "membr": [40, 126, 152], "_p": 40, "val": [40, 118, 139], "p_get": 40, "p_set": 40, "ouvr": [40, 168, 175], "mod": [40, 48, 81, 105, 114, 122, 123, 142, 152, 155, 166, 173], "ult\u00e9rieur": [40, 152, 167], "paragraph": [40, 108, 152, 155, 160, 166, 167, 168, 170, 172, 173, 175], "ouvertur": [40, 142, 168], "fermetur": [40, 168], "tabul": [40, 103, 160, 167, 168, 175], "sp\u00e9cifi": [40, 155, 158, 160, 164, 166, 167], "t\u00eat": [40, 98, 160], "valabl": [40, 166, 167], "readlin": [40, 126, 142, 143, 168, 175], "\u00e9cran": [40, 45, 142, 160, 167, 168], "backslash": 40, "marquent": [40, 168], "nettoyag": [40, 168], "l_net": [40, 168], "nettoi": [40, 114, 152, 168], "strip": [40, 126, 142, 143, 168], "balis": 40, "htmlpars": 40, "sax": [40, 170], "descript": [40, 65], "cadr": [40, 143, 166], "d\u00e9limit": [40, 168], "livr": [40, 44, 45, 92, 168], "hugo": [40, 168], "victor": [40, 168], "miser": [40, 168], "kessel": [40, 168], "joseph": [40, 168], "lion": [40, 168], "woolf": [40, 168], "virgini": [40, 168], "mr": [40, 105, 109, 168], "dalloway": [40, 168], "calvino": [40, 168], "italo": [40, 168], "baron": [40, 168], "perch": [40, 149, 168], "scind": [40, 160, 168], "geometr": 40, "deuxiem": [40, 65, 139], "geo": 40, "pseudonym": 40, "m\u00e9can": [40, 109, 150, 152, 155, 156, 160, 168, 173], "rattrap": [40, 155], "agir": [40, 155], "exc": [40, 155, 156], "rapportent": 40, "insoup\u00e7on": [40, 155], "imbriqu": [40, 69, 73, 74, 75, 166, 167], "aucunchiffr": [40, 155], "123a": [40, 155], "__doc__": [40, 152, 155, 167, 170], "runpythonerror": [40, 152, 155, 156, 166, 167, 175], "stdin": [40, 152, 175], "invalid": [40, 72], "abcdefghijklmnopqrstuvwxyz": [40, 105], "ef": 40, "entour": [40, 87, 160, 167], "r\u00e9sid": [40, 168], "simplifi": [40, 45, 52, 64, 73, 97, 112, 154], "pr\u00e9c\u00e8dent": 40, "calcul1": 40, "calcul2": 40, "calcul3": 40, "calculx": 40, "transm": [40, 64, 132, 166], "permettr": [40, 127, 143, 152, 167, 168, 173], "transmettr": [40, 106, 158, 166, 168, 171, 173], "cepend": [40, 59, 167, 168], "calcul4": 40, "essay": [40, 50, 66, 72, 78, 85, 86, 139, 149, 152, 155, 167, 173, 175], "ported": 40, "nonetyp": [40, 70], "dropbox": 40, "skydriv": 40, "googledr": 40, "propag": [40, 49, 87], "svn": 40, "tortoisesvn": 40, "histor": [40, 143], "caract\u00e9ris": [41, 167], "diff\u00e9renci": [41, 167], "poss\u00e8dent": [41, 152, 160, 167, 170, 173], "corp": [41, 152, 166], "privil\u00e9gi": [41, 143, 152, 167], "entra\u00een": [41, 143, 167], "comportent": [41, 152, 166], "recouvr": [41, 85, 86, 166], "duplicat": 41, "implic": 41, "target": [41, 106], "garant": [41, 48, 58, 78, 143, 167], "type_exception_1": [41, 155], "type_exception_": [41, 155], "type_exception_j": [41, 155], "type_exception_n": [41, 155], "apparu": [41, 88, 155, 167, 173], "nom_cl": [41, 152], "condition1": [41, 166], "instruction1": [41, 166], "instruction2": [41, 166], "instruction3": [41, 166], "instruction4": [41, 166], "importlib": [41, 170], "module_exempl": [41, 170], "exemple_vari": [41, 170], "reload": [41, 166, 170], "nom_class": [41, 152], "attribut_stat": [41, 152], "nom_method": [41, 152], "attribut_statique2": [41, 152], "nom_methode_st": [41, 152], "attribut_statique3": [41, 152], "valeur3": [41, 152], "nom_propriet": [41, 152], "fget": [41, 152], "fset": [41, 152], "fdel": [41, 152], "fget_vari": [41, 152], "fset_vari": [41, 152], "attribut_1": [41, 152], "attribut_n": [41, 152], "nom_ancetr": [41, 152], "nom_autre_method": [41, 152], "chez": [41, 57, 73, 143, 152], "anc\u00eatr": [41, 152], "sign": [41, 85, 86, 152, 154, 166, 168], "exception_typ": [41, 155], "ali": [41, 142, 170], "exemple_cl": [41, 152, 170], "param_1": [41, 152, 166], "param_n": [41, 152, 166], "d\u00e9commmand": [41, 170], "valeur_1": [41, 152, 166], "valeur_n": [41, 152, 166], "nom_attribut": [41, 152], "fonction_nom": [41, 166], "par_1": [41, 166], "par_n": [41, 166], "instruction_1": [41, 166], "instruction_n": [41, 166], "res_1": [41, 166], "res_n": [41, 166], "x_n": [41, 80, 105, 130, 131, 166], "valeur_2": [41, 166], "param_2": [41, 166], "faq": 43, "d\u00e9finit": [43, 57, 80, 136, 150, 160, 173, 175], "quas": [44, 45, 50, 60, 73, 81, 82, 91, 112, 142, 167], "picor": 44, "savent": [44, 144], "p\u00e9riss": 44, "survol": 44, "quotidien": 44, "langgag": 44, "transcript": [45, 152], "d\u00e9butent": [45, 73], "macos": 45, "souhaitent": [45, 167], "500": [45, 48, 65, 83, 84, 99, 106, 111, 125, 129], "alleg": 45, "officiel": [45, 142, 175], "gourmand": [45, 48, 168], "d\u00e9fault": [45, 118], "horm": [45, 152, 166, 168], "heureux": [45, 143], "pyp": [45, 170], "florileg": 45, "awesom": [45, 56], "pip": 45, "mond": [45, 58, 108, 143, 144, 149, 167, 171], "anglophon": [45, 155], "apparit": [45, 102, 152, 170], "ascii": [45, 156, 164, 167, 168], "charact": [45, 160], "xe9": [45, 167], "pourront": 45, "soulev": 45, "aiment": 45, "r\u00e9serv": [45, 142], "h\u00f4tel": 45, "train": [45, 95, 114, 156, 166, 167], "avion": [45, 143], "vieillot": 45, "obsolet": 45, "caus": [45, 106, 155, 156, 158, 167], "lisibil": [45, 160], "reproduir": 45, "autorisent": 45, "mauvais": [45, 48, 99, 155, 166], "publi": 45, "tenu": [45, 160], "enhanc": 45, "proposal": 45, "calendri": [45, 163, 170], "appuient": [45, 105], "assemblag": [45, 109, 150, 152, 160, 171, 173], "encha\u00een": [45, 141, 150, 166, 167, 173], "d\u00e9pendent": [45, 53, 166], "auxquel": [45, 58, 143], "capac": 45, "relev": [45, 143], "imper": [45, 152], "t\u00e2ch": [45, 100, 166, 167, 173, 175], "immens": [45, 48], "manquent": 45, "qualif": 45, "cultur": 45, "\u00e9col": 45, "fass": [45, 81, 82, 143], "cursus": 45, "scolair": 45, "intemporel": 45, "couvrent": 45, "mail": [45, 168], "s\u00e9cur": [45, 143], "serr": 45, "connaiss": [45, 66, 128, 166, 170], "actuel": [45, 60, 64, 81, 82, 152, 163, 173], "exit": 45, "vis": [45, 151, 168], "d\u00e9conseil": [45, 142, 166, 167, 168, 170], "copyright": 46, "permiss": [46, 156, 175], "hereby": 46, "granted": 46, "fre": 46, "obtaining": 46, "softwar": 46, "associated": 46, "deal": [46, 130, 131], "without": [46, 160], "restrict": [46, 156], "including": 46, "limit": [46, 55, 91, 133, 139, 160, 167, 173], "modify": 46, "publish": [46, 156], "distribut": 46, "sublicens": 46, "sel": [46, 160], "whom": 46, "furnished": 46, "subject": [46, 130, 131, 168], "notic": 46, "shall": 46, "included": 46, "substantial": 46, "provided": 46, "AS": 46, "warranty": 46, "implied": 46, "limited": 46, "warrant": 46, "merchantability": 46, "fitness": 46, "noninfring": 46, "event": [46, 160, 173], "holder": 46, "liabl": 46, "claim": [46, 109], "damag": 46, "liability": 46, "action": [46, 160, 173], "contract": [46, 78], "otherwis": [46, 130, 131], "arising": 46, "dealing": 46, "domain": [48, 156], "social": [48, 55, 126, 143], "connexion": 48, "pertinent": 48, "motiv": 48, "lourd": [48, 116], "facebook": 48, "formel": [48, 154], "consid\u00e9ron": 48, "univer": 48, "s_1": [48, 126], "s_2": [48, 126], "ldot": 48, "s_m": [48, 126, 127], "noton": 48, "contraint": [48, 64, 65, 109, 111, 133, 134, 152, 166, 173], "s\u00e9quentiel": [48, 109], "satisfair": 48, "d\u00e9tail": [48, 52, 81, 82, 83, 84, 106, 152, 160, 167], "actualis": 48, "toler": 48, "do\u00eet": 48, "lvert": 48, "rvert": 48, "leq": 48, "geq": 48, "m\u00e9dian": [48, 80], "Son": [48, 58, 102, 152, 160, 166, 168], "repos": [48, 58, 168], "pr\u00e9senton": 48, "correspondr": [48, 148, 175], "famill": [48, 105, 143], "universel": 48, "mapsto": 48, "uniform": [48, 79, 81, 82, 85, 86, 91, 102, 105, 139, 142], "Nous": [48, 80, 82, 117, 118, 127, 160, 167], "h_": 48, "mathrm": 48, "difficult": [48, 65, 143], "prenon": [48, 132], "arbitrair": 48, "4294967291": 48, "tiron": 48, "sampl": [48, 65, 109], "calculon": 48, "compton": 48, "p_collis": 48, "effectuon": 48, "confirm": 48, "reiter": 48, "r\u00e9it\u00e9ron": 48, "750": 48, "proportionnel": [48, 62, 102], "a_1": 48, "a_2": 48, "essayon": [48, 101, 118], "64bit": 48, "i8": 48, "univers": 48, "\u00e9chantillonag": 48, "b_": 48, "b_max": 48, "b_1": 48, "b_2": 48, "h1": [48, 175], "h2": 48, "initialison": 48, "464": 48, "z\u00e9ros": [48, 80, 99, 118], "divers": [48, 168], "consecut": 48, "trailing": 48, "modulus": 48, "lookup": 48, "mod_37bit_posit": 48, "decomposit": [48, 97, 125], "0b10": 48, "0b10000000000": 48, "0b1101": 48, "comparon": [48, 110], "rajouton": 48, "539": 48, "atteindr": [48, 120, 128, 150], "incr\u00e9ment": [48, 55, 144, 152], "parcouron": 48, "regardon": 48, "card": 48, "384": [48, 54, 82, 124], "remarquon": 48, "y_i": [48, 79, 80, 81, 82, 83, 84], "divisibl": 48, "big": [48, 62], "dernier": 48, "obtenon": 48, "regroupon": 48, "qualit": 48, "87": [48, 87, 111, 117, 121, 143], "2500": 48, "ep": 48, "median": [48, 80], "1f": 48, "axhlin": 48, "linestyl": 48, "0x7f1d715b2860": 48, "91": [48, 110], "observon": 48, "converg": [48, 78, 80, 107, 139], "augment": [48, 59, 65, 78, 83, 84, 118, 124, 125, 167, 173], "approx": [48, 138], "rappelon": 48, "pir": [48, 54, 59, 68, 111], "size_bound": 48, "satisfais": [48, 152], "effort": [48, 143, 147], "stad": 48, "removed": 48, "impair": [48, 55, 65, 76, 122, 123, 144, 145, 167], "rajout": 48, "cf": [48, 173], "estimated": 48, "nonzero": 48, "annotat": 48, "xytext": 48, "arrowprop": 48, "arrowstyl": 48, "ylabel": [48, 149], "616": 48, "rapproch": [48, 85, 86, 137, 166], "avis": [48, 73, 78], "pr\u00e9conisent": 48, "precis": [48, 103, 139, 166], "mod\u00e9lis": [49, 152], "consomm": 49, "vertic": [49, 65, 76], "extrem": [49, 55, 65, 81, 152], "apparten": [49, 55, 100, 152, 167], "m_": [49, 79, 88, 119], "v_i": 49, "v_j": 49, "ji": 49, "random_adjacency_matrix": 49, "taux": [49, 56, 78, 114, 144, 168], "remplissag": 49, "e_i": [49, 50], "e_j": 49, "random_symmetric_adjacency_matrix": 49, "rnd2": 49, "tqdm": [49, 55, 56, 59, 65, 96, 99, 107, 111, 112, 125], "total_nb1": 49, "nb1": 49, "ravel": [49, 57, 60, 80, 83, 84, 87, 91, 115, 141], "emptyness": 49, "proport": 49, "73it": 49, "0000000e": 49, "4408921e": 49, "total_null": 49, "nb_null": 49, "82it": 49, "90it": 49, "connex_component": 49, "total_cnx": 49, "cnx": 49, "ny": [49, 149], "96it": 49, "accumul": [49, 78], "connex_components_indic": 49, "grenouill": 50, "bond": 50, "barreau": 50, "treiz": 50, "saut": [50, 78, 166], "\u00e9paisseur": [50, 90, 160], "ven": [50, 133, 141], "pu": [50, 143, 155], "144": 50, "e_": 50, "geqsl": [50, 54, 111, 127], "grenouille2": 50, "g1": [50, 175], "g2": [50, 152], "grenouille3": 50, "emprunt": [50, 78], "pr\u00e9d\u00e9cesseur": [50, 55], "remont": [50, 155], "levenshtein": 51, "hasard": [51, 57, 59, 60, 76, 85, 86, 99, 141, 170, 173], "tron\u00e7on": [51, 54], "distance_meme_longueur": 51, "abcef": 51, "abcde": 51, "mind": [51, 55], "bbb": 51, "distance_alambique": 51, "verlan": 51, "abc": [51, 58, 88, 105, 167], "ac": [51, 143], "levenstein": [51, 52, 131], "distance_alambiquee_levenstein": 51, "ace": 51, "t\u00e2ton": [52, 160], "occas": [52, 143, 149], "servent": [52, 136, 150, 160, 164, 166, 168, 175], "na\u00eff": 52, "pyramid": [52, 94], "restraint": 52, "distance1": 52, "imfo": 52, "distance2": 52, "m1_e": 52, "cab": 52, "abcd": [52, 168], "bcdef": 52, "aim": [52, 117, 143, 152], "distance2_verbos": 52, "disent": 52, "pirat": 52, "distance3": 52, "pimfos": 52, "fastid": 52, "convien": 52, "test_dist_equal": 52, "assert": [52, 91, 95, 97, 99, 104, 120, 152, 166], "test_distance1": 52, "test_dist_diff1": 52, "_a": [52, 128], "a_": [52, 55], "test_distance2": 52, "magnif": 52, "test_dist_diff2": 52, "_ab": 52, "ab_": 52, "a_b": 52, "test_distance3": 52, "pench": [52, 55, 87, 154, 163], "incroi": 52, "edit_dist": 52, "agraf": 52, "agra": 52, "test_edit_dist": 52, "r\u00e9muner": 52, "r\u00e9numer": 52, "voudr": [52, 79, 106, 143, 144, 152], "edit_distance2": 52, "cmp_char": 52, "test_special": 52, "test_edit_distance2": 52, "agraff": 52, "\u00e9leph": 52, "\u00e9lef": 52, "edit_distance3": 52, "ins_char": 52, "again": 52, "test_edit_distance3": 52, "adjacent": [53, 76, 128], "uuid": [53, 58], "plot_network": 53, "dessin": [53, 58, 60, 146, 147, 160], "graphviz": [53, 58], "lang": [53, 58, 171], "digraph": [53, 58], "rankd": 53, "lr": 53, "d\u00e9comment": [53, 58], "hdot": [53, 58], "uid": [53, 58], "uuid4": [53, 58], "viz": [53, 58], "div": [53, 58], "svggraph": [53, 58], "getelementbyid": [53, 58], "innerhtml": [53, 58], "Quelle": [53, 78, 96, 105, 126, 138], "Ne": [53, 62], "f_": 53, "order_same_weight": 53, "mat2": [53, 62, 142, 152], "ten": [53, 65, 78, 82, 89, 101, 149, 152, 166, 168], "order_any_weight": 53, "durat": 53, "duract": 53, "new_end": 53, "subarray": 54, "l_1": 54, "l_2": 54, "l_n": 54, "l_k": 54, "max_": [54, 118, 139], "somme_partiel": 54, "plus_grande_sous_l": 54, "im": [54, 160], "jm": 54, "cout": [54, 76, 88], "l_j": 54, "plus_grande_sous_liste_n2": 54, "l_a": 54, "appartien": 54, "ll": [54, 71, 126, 139, 152, 167], "l_i": 54, "k_1": 54, "k_2": 54, "rcl": [54, 127], "r\u00e9union": 54, "jonction": 54, "plus_grande_sous_liste_nlnn2_r": 54, "ia": 54, "ja": 54, "ib": [54, 81, 82, 152], "jb": 54, "\u00e9tud": [54, 78, 167, 171], "plus_grande_sous_liste_nlnn2": 54, "160": [54, 124], "896": 54, "512": 54, "4608": 54, "n2": [37, 54, 101], "leftrightarrow": 54, "ln_2": [54, 69, 116, 137, 151], "4f": 54, "cumul2": 54, "quatriem": [54, 136], "reven": [54, 65, 148, 160, 166, 170], "arrier": [54, 109, 152], "l_": 54, "sommemax": 54, "red\u00e9marr": 54, "plus_grande_sous_liste_n": 54, "el": [54, 64, 111, 152, 167], "li100": 54, "565": [54, 81], "134": 54, "drawdown": 54, "trading": 54, "pert": 54, "p\u00e9riod": [54, 56, 143], "anticip": 55, "binomial": 55, "adja": 55, "visualis": [55, 166], "networkx": [55, 65], "from_numpy_array": 55, "with_label": 55, "distrib": [55, 85, 86], "jouent": [55, 167, 175], "r\u00f4l": [55, 158, 166, 167, 175], "parcouru": [55, 65, 166], "successeur": [55, 76], "rel": [55, 152], "pr\u00e9decesseur": 55, "partent": [55, 65], "arrivent": 55, "sup\u00e9rieu": 55, "profond": [55, 152], "2_": 55, "sum_j": [55, 119, 125], "jk": 55, "pq": [55, 122, 123], "3_": 55, "adjan": 55, "coloriag": [55, 67, 94, 120], "c_j": 55, "maj": 55, "loi": [55, 59, 78, 79, 81, 82, 83, 84, 87, 91, 94, 119, 122, 123, 139, 142], "queu": [55, 173], "\u00e9paiss": 55, "lois": [55, 85, 86], "admettent": 55, "esper": [55, 65, 143], "etap": [55, 112, 126], "distribution_to_degree_list": 55, "deg": 55, "nh": 55, "random_graph": 55, "distribution_degre": 55, "n_it": [55, 57], "set_descript": [55, 63], "dj": 55, "warn": [55, 158, 175], "incomplet": 55, "ndegre": 55, "ncurrent": 55, "376": 55, "28it": 55, "ipykernel_17111": 55, "4037000715": 55, "userwarning": [55, 56, 158], "382": 55, "61it": [55, 56], "r\u00e9pond": [55, 57, 79, 109, 131, 138, 154, 166, 173], "criter": [55, 151, 170], "bloqu": [55, 142, 173], "a_t": 55, "voyon": [55, 81, 82, 144], "random_graph_remov": 55, "last_added": 55, "n_removed": 55, "dh": 55, "341": 55, "30it": 55, "strateg": [55, 78, 94, 172, 175], "distribution_degree_realis": 55, "sumd": 55, "rejet": 55, "d3a98a30": 56, "893f": 56, "47f7": 56, "96c5": 56, "2f4bcaaa0d71": 56, "total_cas_confirm": 56, "total_deces_hopital": 56, "total_deces_ehpad": 56, "total_cas_confirmes_ehpad": 56, "total_cas_possibles_ehpad": 56, "patients_reanim": 56, "patients_hospitalis": 56, "total_patients_guer": 56, "nouveaux_patients_hospitalis": 56, "nouveaux_patients_reanim": 56, "802": 56, "118431": 56, "28826": 56, "1233": 56, "19272": 56, "653050": 56, "756": 56, "803": 56, "118494": 56, "28837": 56, "1213": [56, 65], "18901": 56, "653734": 56, "804": 56, "118508": 56, "28844": 56, "1214": 56, "18935": 56, "653827": 56, "805": 56, "118633": 56, "28845": 56, "1199": 56, "18742": 56, "654775": 56, "900": [56, 84], "806": [56, 87], "118723": 56, "1173": 56, "18290": 56, "655984": 56, "set_yscal": 56, "courag": [56, 109, 143], "d\u00e9cro\u00eet": 56, "rigour": [56, 125], "death": 56, "country": 56, "githubusercontent": 56, "cssegisanddat": 56, "csse_covid_19_dat": 56, "csse_covid_19_time_ser": 56, "time_series_covid19_": 56, "s_global": 56, "eur": 56, "provinc": 56, "tf": 56, "extract_whole_dat": 56, "confirmed": 56, "recovered": 56, "popul": 56, "67e6": 56, "conc": [56, 171], "infected": 56, "saf": 56, "ipykernel_20449": 56, "102400080": 56, "parsed": 56, "individually": 56, "falling": 56, "ensur": 56, "parsing": 56, "consistent": 56, "pleas": [56, 106, 124], "161407": 56, "38591184": 56, "38429777": 56, "28408816": 56, "161450": 56, "38599330": 56, "38437880": 56, "28400670": 56, "161474": 56, "38606393": 56, "38444919": 56, "28393607": 56, "161501": 56, "38612201": 56, "38450700": 56, "28387799": 56, "161512": 56, "38618509": 56, "38456997": 56, "28381491": 56, "r\u00e9par": 56, "improvis": 56, "x_t": 56, "correct_ser": 56, "covid_modified": 56, "09it": 56, "342253": 56, "liss": 56, "recoup": [56, 65, 175], "compartimental": 56, "\u00e9pid\u00e9miolog": [56, 92], "contamin": [56, 87], "malad": [56, 143], "guer": [56, 87], "d\u00e9ced": [56, 87], "changent": [56, 125, 160, 164, 167], "dS": [56, 57], "nu": [56, 57, 87, 108], "dr": [56, 57, 127], "transmiss": 56, "plot_simul": 56, "day0": 56, "true_dat": 56, "infect": 56, "coch": [56, 166], "visibil": 56, "tdf": 56, "sob": 56, "iob": 56, "rob": 56, "dob": 56, "linewidth": 56, "s_0": 56, "i_0": 56, "r_0": 56, "d_0": 56, "connus": [56, 59, 92, 126, 152], "s0": 56, "9990": 56, "i0": [56, 75], "r0": 56, "\u00e9voluent": [56, 103, 160], "masqu": [56, 155, 160, 170], "confin": 56, "reconfin": 56, "temp\u00e9ratur": 56, "lisse_mar": 56, "28305367": 56, "1697884": 56, "1640875027069664": 56, "626756310367156": 56, "9857629613918629": 56, "533445387958945": 56, "pr\u00e9dict": [56, 59, 79, 124, 125], "transitoir": 56, "simulation_cumule": 56, "minimisent": [56, 80], "i_rang": 56, "beta_rang": 56, "mu_rang": 56, "nu_rang": 56, "error_fct": 56, "err_min": 56, "di0": 56, "i_t": 56, "j_t": 56, "cum": [56, 102], "gras": 56, "sim_opt": 56, "3f": [56, 79], "3g": 56, "3772": 56, "51it": [56, 99], "mal": [56, 60, 64, 65, 76, 117, 155, 166, 173], "188": [56, 78], "39it": 56, "sup": [56, 59, 97, 134, 139], "mort": [56, 142], "error_norm": 56, "m3": [56, 160], "45it": [56, 65], "aticl": 56, "modified": [56, 109], "contagion": 56, "italy": 56, "estimating": 56, "simulating": 56, "countr": 56, "s_t": 56, "s_": [56, 126, 127], "beta_t": 56, "d\u00e9duir": [56, 126], "incub": 56, "poursuit": [56, 143, 155, 166], "d\u00e9couvert": [56, 154], "forall": [56, 119, 126, 127, 139], "r_t": 56, "d_t": 56, "d_": 56, "inconnu": [56, 148, 167], "paramet": [56, 57, 160], "epidemic": 56, "identifying": 56, "unreported": 56, "inferent": 56, "modelling": 56, "forecasting": 56, "outbreak": 56, "seird": 56, "covidtrack": 56, "pyepidemic": 56, "pandemic": 56, "control": [56, 160], "modcov19": 56, "aftercovid": 56, "etrang": [57, 104, 118], "inacessibl": 57, "pann": 57, "ovh": 57, "inaccessibl": [57, 62], "909090909090908": 57, "8909090909090909": 57, "90909091": 57, "89090909": 57, "82883546": 57, "79298272": 57, "18909091": 57, "auparav": 57, "bruit": [57, 79, 80, 125], "simulation_bruite": 57, "90629495": 57, "90818313": 57, "0769856": 57, "10853633": 57, "84322669": 57, "77113049": 57, "17022418": 57, "21541865": 57, "sim_bruit": 57, "estimation_coefficient": 57, "645167": 57, "153483": 57, "113224": 57, "prouv": [57, 126], "distance_sim": 57, "1379327480825296": 57, "b0": 57, "m0": 57, "n0": [57, 114, 139], "distance0": 57, "mu0": 57, "nu0": 57, "175492030437819": 57, "21093122422461147": 57, "11141742761811038": 57, "12240477": 57, "1995322": 57, "09668045": 57, "06764482535407212": 57, "0880922396685696": 57, "dessus": [57, 78, 80, 87, 97, 109, 126, 132, 144, 160, 166, 167, 170, 173], "perdr": [58, 124, 143, 156], "poem": [58, 108], "arthur": [58, 108], "rimbaud": [58, 108], "voyel": [58, 69, 73, 78, 108], "latent": [58, 108], "corset": [58, 108], "velu": [58, 108], "mouch": [58, 108], "\u00e9clat": [58, 108], "bombillent": [58, 108], "puanteur": [58, 108], "cruel": [58, 108, 143], "golf": [58, 108], "ombre": [58, 108], "candeur": [58, 108], "vapeur": [58, 108], "glaci": [58, 108], "fier": [58, 108], "rois": [58, 108], "frisson": [58, 108], "ombel": [58, 108], "pourpr": [58, 108], "sang": [58, 108, 143], "crach": [58, 108], "rir": [58, 108], "levr": [58, 108], "bel": [58, 108, 160], "coler": [58, 108, 128], "ivress": [58, 108], "p\u00e9nitent": [58, 108], "cycl": [58, 108, 117], "vibr": [58, 108], "divin": [58, 108], "virid": [58, 108], "paix": [58, 108, 128, 143], "p\u00e2t": [58, 108], "sem": [58, 108], "rid": [58, 108], "alchim": [58, 108], "imprim": [58, 108, 173], "front": [58, 108, 173], "studieux": [58, 108], "supr\u00eam": [58, 108, 143], "clairon": [58, 108], "strideur": [58, 108], "\u00e9trang": [58, 108, 143, 152], "silenc": [58, 108], "travers": [58, 65, 108, 120], "ange": [58, 108], "omeg": [58, 108], "rayon": [58, 85, 107, 108, 143], "violet": [58, 108], "Ses": [58, 108], "yeux": [58, 108], "extract_word": [58, 108], "spl": 58, "perf_count": [58, 62, 88, 101, 102, 121, 125, 133, 152], "guid": [58, 152], "group": [58, 64, 66, 78, 97, 105, 108, 117, 130, 131, 160, 166], "exploit": [58, 160, 163, 164, 168, 170, 173], "suggest": [58, 64], "plus_grand_suffix_commun": 58, "longueur_max": 58, "meilleure_pair": 58, "meilleur_suffix": 58, "pareil": [58, 167], "suffix_map": 58, "\u00e9": [58, 105, 149], "ingr\u00e9dient": 58, "plus_grand_suffix_commun_dictionnair": 58, "debut": [58, 115, 167, 175], "5386918000003789": 58, "17898409999997966": 58, "n_x": 58, "sum_x": 58, "pr\u00e9fix": [58, 64, 143, 155, 167, 168, 170], "build_tr": 58, "zabc": 58, "\u00ea": 58, "\u00e2": 58, "illisibl": [58, 113, 158, 166, 168, 171], "partiqu": 58, "build_dot": 58, "predecessor": 58, "root_nam": 58, "set2374575491648": 58, "n2374575489600": 58, "e2374575503808": 58, "t2374575329600": 58, "a2374575329984": 58, "l2374575327296": 58, "fin2374494191824": 58, "i2374575817216": 58, "n2374575817280": 58, "e2374575817344": 58, "p2374575817408": 58, "a2374575326656": 58, "t2374575325312": 58, "a2374575330240": 58, "l2374575340416": 58, "c2374575339968": 58, "e2374575595200": 58, "plot_dot": 58, "plus_grand_suffix_commun_dictionnaire_tr": 58, "whole_tr": 58, "parcourus": 58, "23091779999958817": 58, "05081569999947533": 58, "topk_sortall": 59, "vois": [59, 73], "topk_idee1ou2": 59, "trich": 59, "d\u00e9brouill": [59, 142], "envisage": 59, "fairr": 59, "tris": 59, "interstic": 59, "topk_tri_select": 59, "kn": [59, 139], "topk_insert": 59, "\u00e9ven": [59, 158, 163, 167, 173], "prochain": [59, 78, 143, 158, 160, 166], "r\u00e9pondr": [59, 64, 78, 88, 109], "topk_fus": 59, "topk": [59, 111], "topk_select_recurs": 59, "topk_select": 59, "pivot_index": 59, "interviennent": [59, 155, 164], "measure_tim": [59, 111, 112], "repeat": [59, 91, 111, 112, 114], "t1": [59, 62, 120, 125, 152], "0023090000031515956": 59, "06701939999766182": 59, "017117299998062663": 59, "0257670000064536": 59, "010535299996263348": 59, "05852940000477247": 59, "perm10000": 59, "006514400003652554": 59, "0134890000044834": 59, "019539000000804663": 59, "041308899999421556": 59, "014250300002458971": 59, "062273499999719206": 59, "perm1000": 59, "71it": [59, 107], "000692": 59, "194126": 59, "003134": 59, "003230": 59, "013448": 59, "015127": 59, "000383": 59, "283472": 59, "001300": 59, "003163": 59, "022354": 59, "010969": 59, "000835": 59, "377026": 59, "001189": 59, "003169": 59, "022742": 59, "024926": 59, "000522": 59, "450699": 59, "001051": 59, "002952": 59, "045683": 59, "038119": 59, "000527": 59, "539852": 59, "001091": 59, "003602": 59, "038593": 59, "026605": 59, "gomm": 59, "affin": 59, "permn": 59, "70it": 59, "000620": 59, "000124": 59, "000111": 59, "000137": [59, 112], "000411": 59, "000030": [59, 112], "002329": 59, "000275": 59, "000402": 59, "000326": 59, "001340": 59, "000328": 59, "021377": 59, "001635": 59, "005340": 59, "001277": 59, "005500": 59, "005612": 59, "178028": 59, "011507": 59, "034768": 59, "008894": 59, "022889": 59, "066547": 59, "755049": 59, "115708": 59, "361258": 59, "099447": 59, "233724": 59, "paraissent": 59, "n\u00e9glige": [59, 84, 88, 139, 149, 161], "redessin": 60, "distance_vill": 60, "distance_tour": 60, "540451130306862": 60, "dessine_tour": 60, "r\u00e9dig": [60, 152, 167], "ameliore_tour": 60, "transmis": 60, "dist_min": 60, "nb_perm": 60, "nb_it": 60, "annul": [60, 79, 80, 160], "extraordinair": [60, 143], "ameliore_tour_renvers": 60, "p0": [60, 132], "crois": [60, 143], "spatial": [60, 85, 86, 91], "cdist": [60, 91], "build_permut": 60, "max_dist": 60, "arg_dist": 60, "entretien": [61, 92], "embauch": [61, 92], "extrapol": 61, "puissance2k": 61, "sum_k": 61, "a_k": 61, "prod_k": 61, "majoritair": [62, 148, 154], "maxj": 62, "inconv\u00e9nient": [62, 100, 109, 133, 152, 160, 173], "embarrass": 62, "produit_class": 62, "dim1": 62, "dim2": 62, "enquer": 62, "produit_eleg": 62, "k1": 62, "k2": [62, 139], "bigmat": 62, "sonne": 62, "mill": [62, 143], "sabord": 62, "avon": [62, 118, 127, 143, 160], "matrice_dicodico": 62, "matrice_dicodico_lc": 62, "song": 62, "produit_elegant_rapid": 62, "produit_elegant_rapide_transform": 62, "mat1": [62, 152], "t2": [62, 68, 107, 120, 125, 152], "dicodico": 62, "dico": [62, 66, 76, 161, 168], "008358499999303604": 62, "10761350000029779": 62, "2080854999985604": 62, "011978200000157813": 62, "28018710000105784": 62, "28202239999882295": 62, "06322960000034072": 62, "7310262999999395": 62, "21729559999948833": 62, "04302850000021863": 62, "25215659999958007": 62, "06354410000130883": 62, "24071189999813214": 62, "08784929999819724": 62, "23844240000107675": 62, "13118289999692934": 62, "2613874999988184": 62, "21261740000045393": 62, "2777879999994184": 62, "22135960000014165": 62, "2984610000021348": 62, "27173079999920446": 62, "28927499999917927": 62, "travelling": 63, "embl\u00e9mat": 63, "20256988": 63, "27603738": 63, "77763596": 63, "50108287": 63, "07482647": 63, "60880805": 63, "56075455": 63, "9637854": 63, "79735982": 63, "32773718": 63, "65017942": 63, "96827692": 63, "distance_chemin": 63, "dy": [63, 85, 86], "090536785820115": 63, "plot_point": 63, "impatient": 63, "0it": 63, "720it": 63, "89it": 63, "optimisation_retourn": 63, "siecl": 64, "tiret": 64, "330px": 64, "international_morse_cod": 64, "svg": [64, 114], "mn\u00e9motechn": 64, "d\u00e9codag": [64, 164], "r\u00e9duis": 64, "rit": [64, 168], "man": 64, "who": 64, "laugh": 64, "codingam": 64, "transcr": [64, 152], "eee": 64, "ooo": 64, "eel": 64, "oo": 64, "oooo": 64, "ooooo": 64, "word2mors": 64, "word": 64, "lison": 64, "ooooooo": 64, "ambigu": [64, 98, 152, 167], "deven": [64, 78, 88, 167, 173], "rev_alph": 64, "reg_exp": 64, "hyperprob": 64, "souvien": [64, 143], "dec_exp": 64, "suffir": [64, 100, 102], "decode_mors": 64, "een": 64, "eeee": 64, "eb": 64, "DEE": 64, "gn": 64, "decode_morse_longer_first": 64, "flemm": 64, "plu\u00f4t": 64, "dr\u00f4l": 64, "patron": [64, 143], "ee": 64, "decompose_mors": 64, "letter": 64, "new_opt": 64, "prefix": [64, 167], "startswith": [64, 167], "dk": [64, 78], "dnt": 64, "dta": 64, "dtet": 64, "na": [64, 84, 96, 98, 108], "naet": 64, "nek": 64, "nent": 64, "netet": 64, "nrt": 64, "tea": 64, "teaet": 64, "teek": 64, "teent": 64, "teet": 64, "teetet": 64, "tert": 64, "tft": 64, "tik": 64, "tint": [64, 149], "tit": 64, "titet": 64, "TUA": 64, "tuet": 64, "xet": 64, "explos": 64, "d\u00e9duis": [64, 81, 124], "t\u00e9l\u00e9graph": 64, "marqu": [64, 167, 173], "paus": 64, "soir": [65, 143], "initi": [65, 143], "\u00e9lev": [65, 68, 78, 83, 84, 87, 105, 132, 133], "particip": 65, "trajet": 65, "voitur": 65, "parcourent": [65, 118], "d\u00e9marrent": 65, "reviennent": [65, 160], "posti": 65, "inspect": 65, "already": [65, 114], "downloaded": 65, "146": [65, 106, 109], "carrefour": 65, "873361200000005": 65, "3236609": 65, "8730454": 65, "3235788": 65, "compren": 65, "03562501840766763": 65, "8741849": 65, "3239352": 65, "0937624742737696": 65, "suffis": [65, 66, 78, 139, 149, 152, 156, 166], "p\u00f4l": 65, "cart\u00e9sien": [65, 146, 147, 166], "porti": 65, "exp\u00e9rimental": 65, "premier": [65, 168], "ais": [65, 106, 152, 166], "id\u00e9al": [65, 89], "interdit": [65, 144, 145, 155, 167], "rendent": [65, 132, 158], "verr": 65, "impass": 65, "dem": [65, 70, 86, 98], "sept": [65, 167], "pont": 65, "konigsberg": 65, "math\u00e9maticien": 65, "r\u00e9pondu": [65, 84], "rejoint": 65, "repart": 65, "nx": 65, "add_edg": 65, "rejoign": 65, "nb_edg": 65, "parit": [65, 76, 144], "tien": [65, 143], "r\u00e9duisent": 65, "justif": [65, 78], "descendr": 65, "d\u00e9doubl": 65, "g\u00e9ograph": 65, "edges_from": 65, "total_possible_edg": 65, "fromi2": 65, "new_": 65, "new_d": 65, "535221": 65, "778": 65, "1138": 65, "21316": 65, "538415": 65, "1228": 65, "2258": 65, "545218": 65, "1717": 65, "3748": 65, "557001": 65, "2118": 65, "5500": 65, "574194": 65, "2442": [65, 109], "7470": 65, "602050": 65, "2726": 65, "9624": 65, "642132": 65, "2900": 65, "11810": 65, "3258634178614415": 65, "admissibl": 65, "dedan": [65, 107, 150], "d\u00e9fil": [65, 107], "build_possibl": 65, "i1": [65, 76, 152, 154], "i2": [65, 76, 152, 154], "ajust": 65, "009382623381497467": 65, "5290": 65, "248170388440608": 65, "initc": 65, "undesired": 65, "912505": 65, "400": [65, 84, 106, 139], "928070": 65, "938916": 65, "1627": [65, 87], "2244": 65, "957763": 65, "1676": 65, "3644": 65, "976823": 65, "1341": 65, "4989": 65, "020697": 65, "833": 65, "5977": 65, "042415": 65, "427": 65, "6489": 65, "062800": 65, "187": [65, 108], "6716": 65, "088837": 65, "6815": 65, "112715": 65, "6856": 65, "138552": 65, "6874": 65, "168428": 65, "197202": 65, "relient": 65, "refair": [65, 129], "122002169199727": 65, "661698849016764": 65, "Mon": 65, "satisfact": 65, "combl": 65, "coinc": [65, 173], "risque": 65, "pourait": 65, "probl\u00e8mat": 65, "making": 65, "directed": 65, "vingtain": 65, "334": 65, "1511": 65, "width": [65, 106, 129, 139, 140, 141, 160, 166], "eulerian_path": 65, "hierholz": 65, "odd": 65, "1327": 65, "10585": 65, "1383": 65, "1423": 65, "133": 65, "1470": 65, "168": 65, "1523": 65, "1589": 65, "1655": 65, "1722": 65, "1796": 65, "1863": 65, "207": [65, 78, 87], "1919": 65, "164": 65, "2003": [65, 173], "2027": 65, "2038": 65, "2039": 65, "2040": 65, "0016168196457467584": 65, "002915457386378182": 65, "004107201738406607": 65, "138": 65, "005201454147672404": 65, "010775423696863674": 65, "street": 65, "016229655482986917": 65, "08264740074165475": 65, "026299568900906643": 65, "jump": 65, "08193964999861593": 65, "ar\u00eat": 65, "provient": [65, 160, 166, 168, 170], "d\u00e9patouill": 65, "entrant": 65, "ramen": 65, "c\u00e9sar": [66, 136, 137], "d\u00e9calag": [66, 136, 143, 166, 167], "babbag": 66, "\u00e9tudi": [66, 71, 79, 105, 115, 148], "cons\u00e9cut": [66, 88, 99, 140, 175], "apparaiss": [66, 143], "cryptanalys": 66, "diviseur": [66, 166], "crypt": [66, 122, 123], "d\u00e9crypt": [66, 122, 123], "code_vigener": [66, 136, 137], "message_cod": [66, 136, 137], "ord": [66, 71, 72, 105, 136, 137, 166], "chr": [66, 71, 105, 136, 137, 166], "decodevigener": 66, "codevigener": 66, "pgcd": 66, "decodevigenerelongueurcl": 66, "DES": [66, 143], "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd": 66, "egv": 66, "mem": 66, "resultat": [66, 76, 160], "etre": [66, 143], "decodevigenerecl": 66, "d\u00e9cod": [66, 92, 137], "2l": 66, "3l": 66, "cassevigener": 66, "condamn": 66, "gutenberg": [66, 148], "hugo_dernier_jour_condamn": 66, "218451": 66, "ind\u00e9sir": [66, 167, 175], "7000": 66, "cle_cod": 66, "td_node_2006": 67, "td_node_2007": 67, "td_node_2008": 67, "td_node_2009": 67, "td_node_2010": 67, "td_note_2010_rattrap": 67, "td_node_2011": 67, "td_node_2012": 67, "td_node_2013": 67, "td_note_2013_rattrap": 67, "td_note_2014": 67, "td_node_2015": 67, "td_node_2016": 67, "td_node_2017": 67, "broken": 67, "td_node_2018": 67, "td_node_2019": 67, "td_node_2020": 67, "td_node_2021": 67, "td_node_2022": 67, "td_note_2022_rattrapag": 67, "td_note_2022_rattrapage2": 67, "td_node_2023": 67, "1a": [67, 128, 129], "novembr": 67, "d\u00e9cembr": [67, 143], "2015": [67, 68, 146, 147], "rattrapag": 67, "oral": 67, "f\u00e9vri": 67, "octobr": 67, "2021": 67, "interrog": [67, 152], "septembr": [67, 143], "mul2014": 68, "cosinus": 68, "9899924966004454": [68, 142, 143], "ecir": 68, "ex": [68, 83, 84, 136], "kayak": [68, 69], "kakak": 68, "aill": 68, "contient_": 68, "2i": [68, 111, 166], "12093467645909634": 68, "est_tri": [68, 107], "est_trie_nocopy": 68, "1000000000": [68, 155], "pas_de_voyel": 69, "aeiouy": [69, 73, 78], "bonjour": 69, "revoir": [69, 160], "bnjr": 69, "rvr": 69, "mat_dict": 69, "9289682539682538": 69, "581": 69, "4676254832484": 69, "19981": 69, "20000": [69, 78], "39980": 69, "40000": 69, "30000": [69, 121], "59978": 69, "60000": 69, "79979": 69, "80000": 69, "119977": 69, "120000": 69, "70000": 69, "139977": 69, "140000": [69, 78], "159978": 69, "160000": [69, 78], "90000": 69, "179974": 69, "180000": [69, 78], "abcdef": 69, "1er": 69, "3em": 69, "afbecd": 69, "kkaay": 69, "strang": 69, "deviennent": [69, 142, 158], "dictionnaire_depart": 69, "dictionnaire_retourn": 69, "it\u00e9reur": 69, "dict_item": [69, 118, 167], "paress": 69, "aper\u00e7oit": [69, 115, 126, 167], "input": [69, 70, 72, 73, 78, 88, 155, 156, 166], "68beadeaff45": 69, "0x0000000006f305e8": 69, "86215c660090": 69, "subscript": 69, "7191411125634257": 69, "ii": [69, 114], "3177321667311": 69, "1024": [69, 96], "2036": 69, "4083": 69, "4096": 69, "8178": 69, "8192": 69, "16369": 69, "16384": [69, 167], "32752": 69, "32768": 69, "65519": 69, "65536": 69, "131054": 69, "131072": 69, "262125": 69, "262144": 69, "524268": 69, "524288": 69, "nameerror": [70, 73, 152, 155, 166], "9f18cbb91429": 70, "ma_fonct": 70, "y2": [70, 81, 82, 85, 86, 90, 103, 120], "dehor": [70, 120, 136, 150, 152], "expliciti": 70, "ext": [70, 175], "495000": 70, "42400f095e8c": 70, "unsupported": [70, 152], "655479e1d45c": 70, "assignment": [70, 73, 167], "immut": [70, 150, 165], "ma_list": 70, "d3addcc3bdbd": 70, "indexerror": [70, 72, 73, 152, 155, 166], "1eb96223c6dd": 70, "due": 70, "5607f3ee5543": 70, "\u00e9toil": [70, 173], "26184474654812057": 70, "star": 70, "29749469599416334": 70, "305837286201697": 70, "make_squar": 71, "alic": 71, "bob": 71, "jean": [71, 105], "Ma": [71, 142], "myster": 71, "impr\u00e9visibl": [71, 167, 173], "u_": [71, 152], "conjectur": [71, 130, 131], "syracus": 71, "6893f4ac9402": 72, "58b7566d9294": 72, "d\u00e9vient": 72, "2f84bd962211": 72, "elu": 72, "somme_caracter": 72, "225cea37f121": 72, "implicitly": 72, "un_sur_d": 72, "pto": 72, "plant": [73, 155], "systemt": 73, "ced82ea8013": 73, "b85136f11268": 73, "maj_voy": 73, "ambig\u00fc": [73, 99], "produis": [73, 78, 166], "6b8ba89606bb": 73, "unhash": [73, 167], "accolad": [73, 167], "pyythoon": 73, "double_voy": 73, "populating": [74, 75, 78], "interact": [74, 75, 78], "namespac": [74, 75, 78], "construit_m": [74, 75, 79], "pointij": [74, 75], "th": [74, 75, 81, 82, 106, 109, 117], "phas": [74, 75, 77, 168], "tinc": [74, 75], "dessin_m": [74, 75], "_subplot": [74, 75], "axessubplot": [74, 75], "0x10128a58": 74, "0x9491390": 74, "0x87cef28": 75, "voisins_a_valeurs_null": 75, "tous_voisins_a_valeurs_null": 75, "liste_point": 75, "fonction_coloriag": 75, "j0": [75, 112], "\u00e9tag": 75, "acolori": 75, "doublon": [75, 126], "surface_colorie": 75, "fonction_coloriage_1000": 75, "0x14675b00": 75, "3258": 75, "0x1bc6a630": 75, "q1": 76, "uen": 76, "q2": 76, "ajoute_point": 76, "q3": 76, "adj": 76, "q4": 76, "successeurs_dico": 76, "q5": 76, "suites_chemin": 76, "q6": 76, "chemins2": 76, "q7": 76, "q8": 76, "adjacence8": 76, "che": 76, "sugger": [76, 78, 79, 83, 84, 106, 118, 122, 123, 125, 126, 127, 137, 148, 160, 167], "garde_3_el": 76, "word2dict": 76, "pyt": 76, "pyth": 76, "pytho": 76, "two_words2dict": 76, "mot1": 76, "mot2": 76, "piton": 76, "pito": 76, "pit": 76, "add_edge_hv": 76, "edge1": 76, "j1": [76, 152], "edge2": 76, "j2": [76, 152], "2pq": 76, "ajoute_diagonal": 76, "effac": [76, 166, 168, 173], "loop_on_edg": 76, "misejour": 76, "q9": 76, "trie_parit": 76, "carreau": 77, "pression": [77, 160, 173], "touch": [77, 139, 160, 166, 173], "invest": 78, "argent": 78, "rx": 78, "0404": 78, "0612080000000002": 78, "banqu": [78, 152], "pr\u00eat": [78, 173], "annuel": 78, "mensuel": [78, 144], "capital": 78, "rembours": 78, "mensual": 78, "decompose_mensualit": 78, "029": 78, "570": [78, 82], "6769646931234": 78, "429": [78, 115], "32303530687665": 78, "emprunteur": 78, "int\u00earet": 78, "km": [78, 85, 86], "cap": [78, 122, 123], "r\u00e9sulat": 78, "mensualit": 78, "666666666666668": 78, "459": 78, "63104825975415": 78, "int\u00e9ret": 78, "d\u00e9cro\u00eetr": 78, "consacr": [78, 173], "12y": 78, "somme_maximal": 78, "183000": 78, "pai": [78, 166], "somme_maximale_step": 78, "150000": 78, "186": 78, "170000": 78, "190000": 78, "139000": 78, "141000": 78, "142000": 78, "174": 78, "143000": 78, "144000": 78, "145000": 78, "146000": 78, "147000": 78, "182": [78, 108, 125], "148000": 78, "183": 78, "149000": 78, "185": 78, "151000": 78, "152000": 78, "153000": 78, "154000": 78, "155000": 78, "194": 78, "156000": 78, "196": [78, 127, 156], "157000": 78, "158000": 78, "159000": 78, "201": 78, "161000": 78, "162000": 78, "206": 78, "163000": 78, "164000": 78, "209": 78, "165000": 78, "210": [78, 87], "166000": 78, "212": 78, "167000": 78, "214": 78, "168000": 78, "215": 78, "169000": 78, "171000": 78, "172000": 78, "173000": 78, "174000": 78, "175000": 78, "176000": 78, "177000": 78, "178000": 78, "179000": 78, "181000": 78, "182000": 78, "tomb": [78, 85, 86, 107, 140, 141, 147, 151, 152, 160], "somme_maximale_mois_step": 78, "l0": [78, 152], "175312": 78, "312": 78, "175625": 78, "175937": 78, "176250": 78, "176562": 78, "176875": 78, "177187": 78, "177500": 78, "177812": 78, "178125": 78, "178437": 78, "178750": 78, "179062": 78, "179375": 78, "179687": 78, "180312": 78, "180625": 78, "180937": 78, "181250": 78, "181562": 78, "181875": 78, "182187": 78, "parisien": 78, "sl": [78, 150], "d\u00e9pens": [78, 129], "financi": 78, "apprtement": 78, "\u00e9conomis": 78, "rm": 78, "econom": 78, "eco": 78, "nbm": 78, "015": [78, 113], "25862": 78, "65218705509": 78, "carri": 78, "professionnel": 78, "metr": [78, 127], "parisen": 78, "tier": 78, "salair": [78, 143], "d\u00e9pass": [78, 140, 141], "exam2016_valu": 78, "bascul": 78, "8000": 78, "offrir": 78, "surface_max": 78, "faill": [78, 167, 168], "a40a30": 78, "2600": 78, "inflat": [78, 144], "egg": [78, 117], "esprit": [78, 105, 143], "somme_maximale_dicho": 78, "k_max": 78, "182199": 78, "99817640134": 78, "michel": [78, 100], "perd": [78, 114, 115, 118, 125, 134, 161, 167], "carnet": 78, "importun": 78, "impromptus": 78, "conson": 78, "volontair": [78, 156], "adel": 78, "gerard": 78, "transforme_numero": 78, "prenom": [78, 150, 161, 166, 171], "numero": [78, 160], "0664342267": 78, "0646342267": 78, "0660342467": 78, "oui": [78, 84, 133, 152, 166], "transforme_numero_enver": 78, "affront": 78, "9b3e94b6565": 78, "unorder": 78, "comparison": 78, "cat\u00e9goriel": 79, "epsilon_": [79, 80, 83, 84], "partial": [79, 80], "nuag": [79, 83, 84, 125, 149], "generate_xy": 79, "gauss": [79, 94, 126, 127], "996890181837922": 79, "8750295096923186": 79, "264526460045277": 79, "324063943726332": 79, "718648422500299": 79, "052469543647318": 79, "442689562115705": 79, "861870829036456": 79, "13558433730903707": 79, "5754835901808546": 79, "59230695209076": 79, "6209924216651825": 79, "610357428256408": 79, "3202733390571373": 79, "678403330137792": 79, "96766236219644": 79, "427259745518597": 79, "385862058140737": 79, "273956381823456": 79, "938275166261537": 79, "calcule_exyxyx2": 79, "sx": 79, "sxy": 79, "sx2": 79, "523441805914873": 79, "850511796328412": 79, "88928454527569": 79, "98854258182378": 79, "grandeur": [79, 128, 143], "calcule_ab": 79, "5446995618974346": 79, "859128128176218": 79, "generate_caty": 79, "cat": 79, "132157444058703": 79, "088324149707968": 79, "16315983779393228": 79, "9717657424738734": 79, "843197432779423": 79, "7204386278807904": 79, "89226869979884": 79, "16605748011543708": 79, "02903894820027486": 79, "5787816483863786": 79, "num\u00e9ros": [79, 128, 168], "numero_cat": 79, "ic": 79, "extra": [79, 167], "convert_numpy": 79, "mc": 79, "15485572": 79, "37882494": 79, "37124634": 79, "77476221": 79, "03305199": 79, "92499253": 79, "14818418": 79, "09988478": 79, "alpha_": 79, "yp": [79, 125], "multinomial": [79, 94], "0084452843428675": 79, "155449750270483": 79, "1132607428792447": 79, "897729973062269": 79, "7637316114791164": 79, "566787193134299": 79, "848567708215508": 79, "722503065860707": 79, "8043492141543047": 79, "675781652825997": 79, "histogram_cat": 79, "moyenne_cat": 79, "69914235934335": 79, "4591978296957873": 79, "080382539688736": 79, "induis": 79, "z_i": [79, 80], "obs2": [79, 106], "7763568394002505e": 79, "covari": 79, "bigm": 79, "00844528": 79, "08038254": 79, "07193726": 79, "15544975": 79, "45919783": 79, "69625192": 79, "11326074": 79, "65406291": 79, "89772997": 79, "81734743": 79, "76373161": 79, "69546622": 79, "cov": 79, "62221004e": 79, "56972711e": 79, "24829301e": 79, "53176124e": 79, "77901369e": 79, "00966261e": 79, "92890933e": 79, "54535166e": 79, "40725030e": 79, "24510807e": 79, "66666667e": 79, "77777778e": 79, "88888889e": 79, "applymap": 79, "697": 79, "525": 79, "532": 79, "478": 79, "010": [79, 115], "178": [79, 115], "089": 79, "w_i": [79, 80], "obs3": 79, "829591905722086": 79, "2193824894893863": 79, "calcule_erreur": 79, "4723463712054069": 79, "100975199731273": 79, "modal": 79, "prob": [79, 121], "pred": [79, 85, 86, 129], "pr\u00e9dir": 79, "categorical": 79, "outill": 79, "regress": 79, "ensemble_aleatoir": 80, "x_m": 80, "notin": 80, "longleftrightarrow": [80, 127], "regression_lineair": 80, "00141843": 80, "matrice_diagonal": 80, "w_1": [80, 128, 129], "w_n": [80, 128, 129], "beta_": 80, "wx": 80, "wy": 80, "regression_lineaire_pondere": 80, "xt": 80, "01240451": 80, "reciprocal": 80, "calcule_z": 80, "01330469e": 80, "26315789e": 80, "54545455e": 80, "22580645e": 80, "85185185e": 80, "47058824e": 80, "14942529e": 80, "07526882e": 80, "retour": [80, 167, 175], "13052808": 80, "82243581": 80, "104": [80, 128, 156, 167], "79608014": 80, "21524459": 80, "851019446": 80, "25815451": 80, "36420567": 80, "12644545": 80, "255554539": 80, "09141327": 80, "220626093": 80, "0777948": 80, "219023635": 80, "07639404": 80, "21901041": 80, "07631459": 80, "218994922": 80, "07622156": 80, "218976948": 80, "07611358": 80, "1737": 80, "1215": 80, "2110733": 80, "05276833": 80, "1196": 80, "55478823": 80, "77739411": 80, "1190": 80, "4919578": 80, "7459789": 80, "1183": 80, "56462833": 80, "28231416": 80, "1179": 80, "7931558": 80, "iteratively": 80, "reweighted": 80, "\u00e9tendr": [80, 83, 160, 168], "vectoriel": 80, "reprenon": 80, "e_2": 80, "e_1": 80, "retomb": 80, "absolu": [80, 81, 82, 86, 160, 166, 168], "ressort": 80, "minor": 80, "atteign": 80, "0465": 80, "posent": [80, 152], "aligned": [80, 167], "dim": [80, 99], "escali": [81, 82], "0x1f893f9e518": 81, "014962888038782651": 81, "020462778257442693": 81, "022310859639508962": 81, "03078728731371605": 81, "03153252863972433": 81, "somme_diff": [81, 82], "y_k": [81, 82], "476": [81, 115], "2380000000092": 81, "56022222223197": 81, "distance_list": [81, 82], "list_x": [81, 82], "list_y": [81, 82], "custom": [81, 87], "494": [81, 156], "7982222222412": 81, "711": 81, "6476814159435": 81, "552": [81, 82], "0x1f893ea57b8": 81, "histoir": [81, 107], "reproductibl": 81, "618": 81, "0710615624871": 81, "0x1f8943ece80": 81, "d\u00e9barrass": [81, 82], "somme_diff_ab": 81, "difference_ab": 81, "optimise_ab": [81, 82], "recalcul": [81, 82, 139], "histogramme_y": 81, "somme_diff_histogramm": 81, "optimise_rapid": [81, 82], "retranch": 81, "4096814159292": 81, "40968141593424": 81, "contiendront": 81, "fer": [81, 136, 143, 144, 152, 160, 167], "0x1f8944d3ba8": 81, "nuage2": 81, "0x1c0e33655f8": 82, "15754": 82, "105018618644": 82, "19898": 82, "600443365925": 82, "6383487080093": 82, "553": [82, 111], "2184": 82, "8079894060775": 82, "0x1c0e4c6f208": 82, "5154656398129": 82, "156": [82, 102, 125, 139], "7106930739271": 82, "0x1c0e4c90940": 82, "946": 82, "grav": 82, "t\u00f4t": [82, 102, 158], "delta_": 82, "782": 82, "somme_diff2": 82, "difference2": 82, "optimise2": 82, "628": 82, "y_1": 82, "y_2": 82, "y2_1": 82, "y2_2": 82, "13082": 82, "574312018376": 82, "574312018447": 82, "soin": [83, 84, 85, 86, 160], "random_mat": [83, 84], "21542897": 83, "02478399": 83, "89552004": 83, "24733264": 83, "393163": 83, "40164738": 83, "32997878": 83, "70660631": 83, "20765567": 83, "43301488": 83, "d\u00e9correl": [83, 84], "m_1": [83, 84, 88], "build_m1": [83, 84], "26184685": 83, "41751593": 83, "53354327": 83, "34849608": 83, "96298222": 83, "51815696": 83, "58374784": 83, "71569523": 83, "12326482": 83, "conclus": [83, 84, 115], "remis": [83, 84, 160], "v_x": [83, 84], "v_y": [83, 84], "mean_no_nan": [83, 84], "05543522": 83, "0564421": 83, "nanmean": [83, 84], "build_m2": [83, 84], "entourent": 83, "m_3": [83, 84], "fill_column": 83, "col": [83, 84, 152], "nlin": 83, "argsort": 83, "reverse_ord": 83, "bmat": 83, "build_m3": [83, 84], "18717541": 83, "d3": [83, 84, 105], "115": [83, 167], "16303767944946": 83, "990990757306854": 83, "calcul_norm": 83, "puc": [83, 84], "oreil": [83, 84], "experient": [83, 84], "repetit": [83, 84], "25531314": 83, "070392": 83, "57432808": 83, "73422968": 83, "43834865": 83, "07553875": 83, "49648148": 83, "11340377": 83, "116": [83, 166], "28344822": 83, "90363643": 83, "90465816": 83, "88595361": 83, "117": [83, 113, 114, 124], "28824424": 83, "05673836": 83, "37972659": 83, "28703801": 83, "97835736": 83, "49136146": 83, "70723528": 83, "34848088": 83, "\u00e9cart": [83, 84, 85, 86, 173], "10112512": 83, "1306255": 83, "94022724": 83, "91916954": 83, "96721215": 83, "14121786": 83, "35629971": 83, "99870181": 83, "48138722": 83, "00467304": 83, "ratio2": 83, "nerreur": [83, 84], "tend": [83, 84, 139], "build_m3_just1": 83, "imin": 83, "imax": 83, "pr\u00e9alabl": [83, 128, 167, 168], "corrcoef": [83, 84], "495": [83, 84], "979253": 83, "308262": 83, "616462": 83, "496": [83, 84], "980323": 83, "790158": 83, "667422": 83, "497": [83, 84], "977415": 83, "050925": 83, "430873": 83, "498": [83, 84, 167], "980746": 83, "885168": 83, "995820": 83, "978955": 83, "935248": 83, "137125": 83, "56987627": 84, "87585938": 84, "21230699": 84, "85706677": 84, "32971056": 84, "31614371": 84, "99469359": 84, "63550262": 84, "90844194": 84, "84040783": 84, "48750338": 84, "92138266": 84, "59978536": 84, "22258934": 84, "72143302": 84, "02229479": 84, "52222862": 84, "1157862": 84, "97598417": 84, "01928312": 84, "09388639": 84, "plus_proch": 84, "colnan": 84, "plus_proche_rapid": 84, "amin": 84, "399": 84, "83806507": 84, "88020645836853": 84, "054794671768933": 84, "9707": 84, "2287": 84, "93113166": 84, "65407502": 84, "59161999": 84, "20763444": 84, "36123306": 84, "49474066": 84, "20767715": 84, "72341549": 84, "99591576": 84, "28602503": 84, "35006845": 84, "18103292": 84, "775306": 84, "15330721": 84, "44248685": 84, "80699951": 84, "70774305": 84, "74452936": 84, "59144759": 84, "22093401": 84, "600": 84, "700": 84, "800": [84, 111], "35913762": 84, "46902292": 84, "02940671": 84, "50112628": 84, "06988804": 84, "66400287": 84, "02826212": 84, "6163169": 84, "98007237": 84, "7964768": 84, "978472": 84, "787724": 84, "693286": 84, "980944": 84, "399139": 84, "579552": 84, "979960": 84, "064428": 84, "893382": 84, "977117": 84, "492200": 84, "140280": 84, "981207": 84, "797778": 84, "785862": 84, "rond": [85, 146], "sall": [85, 86], "23606797749979": [85, 166], "585786437626905": 85, "04987562112089": 85, "cercl": [85, 86, 160], "04023026006364461": 85, "613278941761477": 85, "polair": [85, 166], "table_alea_pol": 85, "2697993898932539": 85, "07781479211233774": 85, "104239515207136": 85, "7109081402403072": 85, "46932352351540807": 85, "3259610442266929": 85, "1743368223886739": 85, "2821629999494295": 85, "skip_": [85, 86], "list_tabl": [85, 86], "7403604958859722": 85, "mur": [85, 86, 128], "151393678876878": 85, "0883943109284333": 85, "2251498896276685": 85, "9591970274173125": 85, "8759281350069976": 85, "8362221630472657": 85, "7566611650530053": 85, "0002849316792242": 85, "5208215962264875": 85, "537577072452744": 85, "650373925673775": 85, "339568894819979": 85, "31652883529303466": 85, "256221251336387": 85, "diametr": 85, "5565818929001787": 85, "05896867240161785": 85, "5288969098327476": 85, "28733719348942466": 85, "6110699282390006": 85, "32241732345580165": 85, "14909553247181195": 85, "9356539992681199": 85, "026230694145464417": 85, "2908024901550055": 85, "4975323234658624": 85, "06918255935350293": 85, "60937258121247": 85, "16579629631884596": 85, "22654870937824634": 85, "12601838486539685": 85, "651232619461013": 85, "05440550117493803": 85, "25693188063963546": 85, "044795815889184576": 85, "07316443943516515": 85, "8533292769508105": 85, "0525413549133239": 85, "patch": [85, 86, 103], "circl": [85, 126], "add_artist": [85, 86], "position": [85, 86, 160], "quadrillag": [85, 86], "hexagonal": [85, 146, 147], "spiral": [85, 86], "improve_distrib": [85, 86], "pjp": [85, 86], "best_sol": [85, 86], "351": [85, 108, 156], "16110855450954664": 85, "13158100390586172": 85, "2384176552949989": 85, "218691822411302": 85, "19838094003303594": 85, "2162723387696761": 85, "20826241454101815": 85, "350": 85, "2094900548253301": 85, "diagramm": [85, 86], "triangul": 85, "delaunay": 85, "voronoi": [85, 86], "voronoi_plot_2d": [85, 86], "vor": [85, 86], "triplot": 85, "simplic": 85, "points2": [85, 86], "vor2": [85, 86], "dela2": 85, "triangl": [85, 86, 144, 147], "\u00e9quilat\u00e9ral": [85, 86, 147], "fronti": [85, 86, 91], "peux": [85, 86], "zon": [85, 86, 166, 173], "points_in_circl": 85, "sklearn": [85, 86, 106, 124, 125], "clust": [85, 86], "n_cluster": [85, 86], "copy_x": [85, 86], "n_in": [85, 86], "n_job": [85, 86], "precompute_dist": [85, 86], "random_stat": [85, 86], "tol": [85, 86], "predict": [85, 86, 124, 125], "cluster": [85, 86], "cluster_centers_": [85, 86], "distance_n_t": [85, 86], "22015129672480682": 85, "13834146640009876": 85, "mixtur": [85, 86], "gaussianmixtur": [85, 86], "gau": [85, 86], "means_": [85, 86], "gaussian": [85, 86], "21874003784217044": 85, "2c": 86, "908190224838399": 86, "7798369055014547": 86, "6047310701361788": 86, "538160002945912": 86, "7983390011407794": 86, "6871544213644984": 86, "4887075948495667": 86, "511831256978005": 86, "1962115931817596": 86, "6710676955082597": 86, "8642968594855169": 86, "32893230449174": 86, "500463237472049": 86, "1547646758902923": 86, "7606012466424747": 86, "019429938832147": 86, "6514056477386534": 86, "596586600954664": 86, "05123812953078399": 86, "05320587377518926": 86, "37467460315675805": 86, "4937702081221422": 86, "3485943522613466": 86, "6259118658008394": 86, "1764558984440392": 86, "6004143527243244": 86, "4008125902558497": 86, "052940751769248395": 86, "547095264138868": 86, "7525281574947777": 86, "6243952889602158": 86, "2784959002399452": 86, "16893417347025785": 86, "15965080092875694": 86, "5866949933059173": 86, "6062900542195173": 86, "43564615941411566": 86, "26135901810381923": 86, "2792244176019283": 86, "7961649730497629": 86, "28673576049151195": 86, "08784118387851514": 86, "2840288333247212": 86, "7893555701617381": 86, "6299236074366998": 86, "19575062032543844": 86, "facecolor": 86, "rectangulair": 86, "07797442236028274": 86, "17084871553555847": 86, "16055223380264586": 86, "22481137276979984": 86, "points_in_rectangl": 86, "19622641509433936": 86, "2016527778991591": 86, "14695957901204992": 86, "trompeur": 86, "v\u00e9rit": [87, 143], "covid": [87, 92], "435": 87, "2322": 87, "642": 87, "3128": 87, "3580": 87, "1041": 87, "4188": 87, "1251": 87, "695": 87, "452": 87, "608": 87, "1104": 87, "1105": 87, "966": 87, "1106": [87, 115], "1107": 87, "1108": 87, "erron": [87, 88, 155, 166], "exponentiel": [87, 167], "donnees_artificiel": 87, "dayofyear": 87, "exponential": 87, "examen2021": 87, "dure": 87, "nt": [87, 170], "98965342710248": 87, "lifelin": 87, "kaplanmeierfitt": 87, "kmf": 87, "portail": 87, "propagation_n": 87, "propagation_vaccin": 87, "propagation_n_vaccin": 87, "prop": 87, "immunis": 87, "3h": 87, "passent": [87, 142, 152], "p4": 87, "mesure_temps_fonct": 88, "10280692000000005": 88, "bc": 88, "189998290": 88, "18042000": 88, "009560690999999987": 88, "009846866999999992": 88, "001004321000000008": 88, "n_op": 88, "m1_shap": 88, "m2_shap": 88, "185998326": 88, "n_ops_3": 88, "sh1": 88, "sh2": 88, "sh3": 88, "m1_m2m3": 88, "m1m2_m3": 88, "36084000": 88, "testing": [88, 91, 114], "assert_almost_equal": [88, 114], "produit3": 88, "0011657070000000048": 88, "0011010209999999887": 88, "n_ops_4": 88, "sh4": 88, "m1_m2m3m4": 88, "m1m2_m3m4": 88, "m1m2m3_m4": 88, "11331640": 88, "produit4": 88, "000988687999999982": 88, "010446371000000027": 88, "008082993999999956": 88, "0008713240000000155": 88, "0009054390000000013": 88, "m_n": 88, "mm_i": 88, "verront": 88, "n_ops_n": 88, "unexpected": [88, 95, 97, 114], "best_cost": 88, "best_pos": 88, "product_n": 88, "bot": 88, "0009734980000000349": 88, "0009873739999999031": 88, "m5": [88, 160], "9697854": 88, "probl\u00e9mat": [88, 152], "n_ops_n_opt": 88, "product_n_opt": 88, "0010903469999999516": 88, "0009383259999999893": 88, "01018160299999991": 88, "calcu": 88, "suivr": [37, 88, 97, 152, 160, 166, 168], "longtemp": 88, "hauteur": [89, 139, 147, 160], "mati": 89, "surface_br": 89, "brique_optimal": 89, "surf": 89, "additionnel": 89, "brique_optimale_surplus": 89, "4471428571428575": 89, "4285714285714286": 89, "exclur": 89, "producteur": 89, "\u00e9coul": [89, 130, 131, 163, 170], "marchandis": 89, "surface_brique2": 89, "brique_optimale_surplus_deux_litr": 89, "surf1": 89, "surf2": 89, "6938095238095245": 89, "7857142857142858": 89, "envoi": [89, 109, 115, 132, 152, 155, 160, 166, 168, 173], "maxxy": 90, "seg": 90, "tree3": 90, "rl": 90, "tree_recurs": 90, "level": [90, 152, 166], "all_seg": 90, "iter_seg": 90, "new_seg": 90, "tree3_al": 90, "re_rnd": 90, "rl_rnd": 90, "a3": [90, 133], "tree_recursive_al": 90, "tirage_al": 91, "n_ru": 91, "n_med": 91, "07629544": 91, "9432004": 91, "52035232": 91, "47051663": 91, "89432851": 91, "07652123": 91, "01653439": 91, "99436816": 91, "1499065": 91, "10758634": 91, "29317605": 91, "76729661": 91, "97237465": 91, "25573414": 91, "60399214": 91, "72086801": 91, "76951744": 91, "75725811": 91, "6663647": 91, "92848284": 91, "07308657": 91, "11122628": 91, "92539686": 91, "48536534": 91, "43820312": 91, "26151317": 91, "74683167": 91, "40646889": 91, "92033983": 91, "88312987": 91, "emp\u00each": [91, 100, 164, 166, 167, 173], "83198031": 91, "96466894": 91, "77179962": 91, "85889438": 91, "8461793": 91, "57370393": 91, "40531662": 91, "22456834": 91, "23536145": 91, "57466486": 91, "82197491": 91, "41002286": 91, "49221173": 91, "36141496": 91, "80702793": 91, "88495069": 91, "04168846": 91, "84550633": 91, "93752849": 91, "91062519": 91, "07690611": 91, "86261363": 91, "32681556": 91, "66757055": 91, "0931767": 91, "69200264": 91, "69223434": 91, "52616512": 91, "57965512": 91, "63777092": 91, "91082466": 91, "23438729": 91, "53420279": 91, "27127587": 91, "62954985": 91, "80840816": 91, "39845012": 91, "48835731": 91, "34532585": 91, "3555345": 91, "94993319": 91, "31340719": 91, "59626523": 91, "351522": 91, "19644616": 91, "00989466": 91, "51327456": 91, "70491577": 91, "52817942": 91, "25799275": 91, "assert_allclos": 91, "test_dist": 91, "tolist": [91, 99, 114], "nm": [91, 139], "plus_proche_medecin": 91, "p_min": 91, "p_max": 91, "floor": [91, 173], "test_grill": 91, "map_grille_indic": 91, "xi": 91, "test_map": 91, "pairwise_distance_grill": 91, "gx": 91, "gy": 91, "test_distance_grill": 91, "415": 91, "470": 91, "8018622000236064": 91, "8201483000302687": 91, "8459657999919727": 91, "8035789999994449": 91, "8155568999936804": 91, "026652099972125143": 91, "01595849997829646": 91, "01231670001288876": 91, "012164799962192774": 91, "011980499955825508": 91, "imaginon": [91, 129, 132, 152], "situ": [91, 107, 166, 168], "extr\u00eam": 91, "plus_proche_medecin_grill": 91, "mg": 91, "co\u00efncident": 91, "irait": 91, "techniqu": [91, 102, 114, 170], "nearest": [91, 160], "closest": 91, "illustrent": 92, "\u00e9labor": [92, 168], "briqu": [92, 166], "streaming": 92, "bjkst": 92, "apart": [92, 142, 166, 170], "sird": 92, "cass": [92, 120, 128, 136, 137], "vigener": [92, 94], "mors": [92, 149], "cryptag": [92, 170], "homomorphic": 92, "craig": 92, "gentry": 92, "2a": [92, 167], "d\u00e9": [13, 94], "rotat": [13, 94, 149], "contingent": [31, 32, 94], "gin": 94, "pickl": [94, 106, 168, 170, 171], "scraping": [8, 94], "pokemon": [8, 94], "devin": [94, 143], "langu": [94, 155, 164], "bigarr": 94, "magiqu": 94, "annot": 95, "manipulent": [95, 152, 154, 164, 168], "mypy": 95, "incoh\u00e9rent": 95, "formatt": [95, 167, 173], "ruff": 95, "fac": [95, 104, 126, 143, 152], "0x7fec374f5ed0": 95, "de_autr": 95, "sigma_or_n": [95, 97], "nouvel_ensembl": [95, 97], "attrap": [95, 156, 160], "rotation1": [95, 104], "rotation2": [95, 104], "test_rotation1": [95, 104], "de0": [95, 104], "assertionerror": [95, 120], "test_rotation2": [95, 104], "addict": 99, "4x4": [99, 140], "creer_jeu": 99, "position_libr": 99, "nombre_aleatoir": 99, "joue_ligne_colon": 99, "lc": 99, "non_null": 99, "non_null2": 99, "joue_coup": 99, "coup_suiv": 99, "c2048": 99, "__repr__": [99, 152, 160], "calcule_scor": 99, "62it": 99, "84it": 99, "coll": [99, 145], "c2048_4": 99, "sharey": 99, "sharex": 99, "\u00e9leg": [100, 118, 132, 152, 173], "dictionnairr": 100, "lat": 100, "846651": 100, "lng": 100, "285811": 100, "orthographi": [100, 155], "autocomplet": 100, "radius": 100, "6371": 100, "dlat": 100, "radian": 100, "dlon": 100, "atan2": [100, 152, 166], "station1": 100, "station2": 100, "emil": 100, "zol": 100, "847030": 100, "295262": 100, "6928550943713419": 100, "oblig": [100, 143, 152, 153], "rigid": 100, "__rshift__": [100, 152], "retir": [101, 142, 160, 173], "proposent": [101, 132, 142, 152, 160, 168], "diff\u00e9": 101, "minis": 101, "appendleft": [101, 161], "2462739999955374e": 101, "0353370000029826e": 101, "81406999999308e": 101, "796050000029936e": 101, "953019999920797e": 101, "313129999987723e": 101, "568269999956101e": 101, "580999999987398e": 101, "447889999933977e": 101, "401670000057492e": 101, "71205999999438e": 101, "6167699999641626e": 101, "fen": 101, "977897000002485e": 101, "178353999994215e": 101, "823300000178278e": 101, "471699999769044e": 101, "712876000006872e": 101, "798504000003959e": 101, "035500000005414e": 101, "195899999918766e": 101, "84480600000461e": 101, "923587000006591e": 101, "347799999479321e": 101, "471000000601634e": 101, "162": 102, "105": [102, 160], "405": 102, "simulation_multinomial": 102, "library": 102, "ale": [102, 143], "430": 102, "pc": 102, "poids_cumul": 102, "poids_cumule_tr": 102, "009419400001206668": 102, "007181299999501789": 102, "010566299999481998": 102, "0066910000023199245": 102, "007558699999208329": 102, "006804499997087987": 102, "poids_tr": 102, "00013789999866276048": 102, "00010370000018156134": 102, "0004912999975204002": 102, "00014940000255592167": 102, "950000170036219e": 102, "0002525000018067658": 102, "nomrbr": 102, "06869539999752305": 102, "00884070000029169": 102, "08114130000103614": 102, "0094169999974838": 102, "06719900000098278": 102, "01211440000042785": 102, "stockag": 102, "pch": 103, "add_patch": 103, "polygon": 103, "surface_invers": 103, "6325000000000005": 103, "surface_inverse_dicho": 103, "63232421875": 103, "x3": 103, "y3": 103, "surface_inv_t": 103, "63234375": 103, "d\u00e9fectu": 103, "surface_inv_math": 103, "6324555320336759": 103, "3675444679663242": 103, "152": [103, 110], "coloriage_diagonal": 103, "concr\u00e9tis": 103, "comprom": 103, "exo_d": 104, "am\u00e8nent": 104, "nouveau_d": 104, "tourne_d": 104, "\u00e9thiqu": 105, "valjean": 105, "coset": 105, "fantin": 105, "marius": 105, "pontmercy": 105, "gavroch": 105, "th\u00e9nardi": 105, "antagon": 105, "javert": 105, "monsieur": [105, 109, 150, 154], "madam": 105, "babet": 105, "claquesous": 105, "montparn": 105, "gueulem": 105, "brujon": 105, "bamatabois": 105, "victurnien": 105, "amis": 105, "enjolr": 105, "combeferr": 105, "courfeyrac": 105, "prouvair": 105, "feuilly": 105, "bahorel": 105, "lesgl": 105, "joly": 105, "grantair": 105, "secondair": [105, 173], "ami": 105, "favourit": 105, "dahli": 105, "z\u00e9phin": 105, "f\u00e9lix": 105, "tholomyes": 105, "listoli": 105, "fameuil": 105, "blachevel": 105, "fauchelevent": 105, "mabeuf": 105, "azelm": 105, "toussaint": 105, "luc": 105, "gillenormand": 105, "georg": [105, 161], "\u00e9v\u00eaqu": 105, "myriel": 105, "baptistin": 105, "mme": 105, "magloir": 105, "gerv": 105, "modulo": [105, 155, 167], "congruentiel": 105, "22695477": 105, "c_n": 105, "\u00e9niem": [105, 175], "hashlib": [105, 170], "unsigned": 105, "5381": 105, "exp\u00e9rient": [105, 132, 152, 166, 167], "voi": [105, 138], "ds_legend": 105, "repartit": 105, "sha256": 105, "encod": [105, 164, 167, 168], "digest": 105, "d4": 105, "light_hash": 105, "d5": 105, "load_ir": 106, "load_dat": 106, "feature_nam": 106, "fleur": 106, "target_nam": 106, "sepal": 106, "length": [106, 175], "petal": 106, "virginic": 106, "148": [106, 121], "n5": 106, "setos": 106, "n4": 106, "lengt": 106, "florid": 106, "georgi": 106, "alask": 106, "quebec": 106, "versicolor": 106, "ireland": 106, "jacent": 106, "plat": [106, 142], "d\u00e9criv": [106, 167], "localis": 106, "flatbuffer": 106, "messagepack": 106, "coloriage_carr": 106, "histogramme_rapid": 106, "dummy": [106, 109], "exercice_json_xml": 106, "tableau_contingent": 106, "nbheap": 106, "classes_2048": 106, "profile_gin": 106, "pivot_gauss": [106, 112], "profiling_exampl": 106, "exercice_p": 106, "code_multinomial": 106, "code_liste_tupl": 106, "tri_nlnd": 106, "structures_donnees_convers": 106, "virtuel": [96, 106], "json_text": 106, "res2": 106, "html_text": 106, "to_html": 106, "thead": 106, "styl": [106, 114, 116, 156, 167], "tbody": [106, 117], "df_html": 106, "read_html": 106, "df_locat": 106, "merged": 106, "450": [106, 115, 116, 129], "df_locations2": 106, "dfe": 106, "engin": 106, "openpyxl": [106, 168], "myzip": 106, "kernel": [106, 114], "crashed": 106, "executing": 106, "previous": [106, 160], "review": 106, "identify": 106, "failur": 106, "click": 106, "href": [106, 117, 143], "aka": 106, "vscodejupyterkernelcrash": 106, "viewoutput": 106, "glob": [106, 152, 155, 156, 166, 167, 168, 170, 175], "enregist": 106, "contig\u00fc": 106, "sock": 106, "sotck": 106, "reviendront": 106, "communiqu": [106, 109, 128, 171], "tripl": [107, 160], "surface_cerl": 107, "surface_cercl": 107, "53981633974483": 107, "p_i": 107, "quart": 107, "inscrit": [107, 148, 173], "estimation_p": 107, "dedans_enti": 107, "216": 107, "surface_cercle_p": 107, "tri_al": 107, "dommag": 107, "tri_alea2": 107, "m\u00e8nen": 107, "tri_alea3": 107, "eval_c": 107, "cs": 107, "ec": [107, 143], "14it": 107, "alentour": 107, "regular": [108, 142, 175], "exrp": 108, "normaliz": [108, 148, 149], "unicod": [108, 164], "unicodedat": 108, "strip_accent": 108, "nfd": [108, 125], "t\u00eatu": 108, "tetu": 108, "text_sans_accent": 108, "findall": [108, 117, 142, 143, 175], "za": [108, 175], "signifi": [108, 150, 152, 154, 155, 160, 167, 170, 173], "extract_words_lettr": 108, "nje": 108, "nqui": 108, "ngolf": 108, "nlanc": 108, "ndan": 108, "npaix": 108, "nque": 108, "nsilenc": 108, "02d": 108, "h\u00e9t\u00e9rogen": 109, "m\u00e9anism": 109, "reconstruir": 109, "lis": [109, 168], "141592653589793": [109, 170], "comp": 109, "314": 109, "320": [109, 118], "conteneur": [109, 167], "wikidat": 109, "magoo": 109, "creator": 109, "millard": 109, "kaufman": 109, "hubley": 109, "cartoon": 109, "aventur": 109, "c\u00e9lebr": 109, "neuf": [109, 132, 167], "simplejson": 109, "ijson": 109, "wikidatawik": 109, "entit": [109, 152, 166], "latest": 109, "lexem": 109, "bz2": 109, "l4": 109, "lemm": 109, "windsurf": 109, "lexicalcategory": 109, "q24905": 109, "q1860": 109, "p5238": 109, "malgr": [109, 156, 166, 167], "orjson": 109, "mainsnak": 109, "snaktyp": 109, "datavalu": 109, "entity": 109, "numeric": [109, 124, 167], "3324": 109, "l3324": 109, "wikibas": 109, "entityid": 109, "datatyp": 109, "qualifi": 109, "p1545": 109, "2a1ced1dca90648ea7e306acbadd74fc81a10722": 109, "faad30b0": 109, "421c": 109, "803a": 109, "c1fd": 109, "b9a99a0eb35d": 109, "18537": 109, "l18537": 109, "7241753c62a310cf84895620ea82250dcea65835": 109, "d15285a1": 109, "4880": 109, "7a9b": 109, "bb1f": 109, "85403e1a785": 109, "p5187": 109, "monolingualtext": 109, "d4a63d17": 109, "43e": 109, "749d": 109, "5860": 109, "21b90feb83f7": 109, "windsurfing": 109, "grammaticalfeatur": 109, "q10345583": 109, "f3": 109, "q110786": 109, "q3910936": 109, "q51929074": 109, "f4": 109, "windsurfed": 109, "q1392475": 109, "f5": 109, "q1230649": 109, "f6": 109, "gloss": 109, "planch": [109, 143], "u00e0": 109, "voil": 109, "meluncur": 109, "angin": 109, "zh": 109, "u6ed1": 109, "u6d6a": 109, "u98a8": 109, "u5e06": 109, "hant": 109, "tw": 109, "u00e1": 109, "u00edng": 109, "hong": 109, "ph": 109, "u00e2ng": 109, "u0e40": 109, "u0e25": 109, "u0e48": 109, "u0e19": 109, "u0e27": 109, "u0e34": 109, "u0e14": 109, "u0e4c": 109, "u0e0b": 109, "u0e23": 109, "u0e1f": 109, "tg": 109, "u0441": 109, "u0451": 109, "u0440": 109, "u0444": 109, "u0438": 109, "u043d": 109, "u0433": 109, "u0431": 109, "u043e": 109, "u0437": 109, "u0448": 109, "u0430": 109, "u043c": 109, "u043b": 109, "u04e3": 109, "fi": [109, 160, 168], "purjelautaill": 109, "p5137": 109, "191051": 109, "q191051": 109, "13e5f498": 109, "4deb": 109, "ea41": 109, "4d60": 109, "02c852b88b4c": 109, "p5972": 109, "l144039": 109, "7218013f": 109, "b84b": 109, "40fa": 109, "b57b": 109, "bc1ba2239bb8": 109, "pageid": 109, "54387040": 109, "lastrevid": 109, "1710596079": 109, "22t19": 109, "34z": 109, "l314": 109, "q1084": 109, "q7026": 109, "p5185": 109, "1775415": 109, "q1775415": 109, "45650151": 109, "4ed8": 109, "025d": 109, "e36ef22e6a2": 109, "q146786": 109, "54387050": 109, "684359491": 109, "24t07": 109, "21z": 109, "verbeux": [97, 109, 171], "abandon": [109, 143], "dict2xml": 109, "restreint": 109, "lde": 109, "dill": [109, 168], "getstat": 109, "et_setstat": 109, "num": [110, 160], "count1": 110, "count2": 110, "count3": 110, "cytoolz": 110, "count4": 110, "swap": 111, "echang": 111, "entas": 111, "dessine_t": 111, "_heapify_max_bottom": 111, "_heapify_max_up": 111, "topk_min": 111, "_heapify_max_bottom_posit": 111, "_heapify_max_up_posit": 111, "topk_min_posit": 111, "ext_test_cas": [111, 112], "20001": 111, "div_by_numb": 111, "01it": 111, "averag": [111, 112], "deviat": [111, 112], "min_exec": [111, 112], "max_exec": [111, 112], "ttim": [111, 112], "context_siz": [111, 112], "warmup_tim": [111, 112], "001400": 111, "000271": 111, "001090": 111, "001892": 111, "014000": 111, "001138": 111, "002110": 111, "000517": 111, "001622": 111, "003214": 111, "021104": 111, "001633": 111, "001967": 111, "000299": 111, "001747": 111, "002545": 111, "019669": 111, "002969": 111, "3000": [111, 113], "002692": 111, "000611": 111, "002081": 111, "003779": 111, "026925": 111, "003983": 111, "4000": 111, "003096": 111, "000276": 111, "002660": 111, "003578": 111, "030960": 111, "003305": 111, "33it": 111, "008493": 111, "001842": 111, "006837": 111, "013038": 111, "084926": 111, "014053": 111, "009114": 111, "002111": 111, "007600": 111, "013480": 111, "091137": 111, "022466": 111, "650": 111, "011651": 111, "003198": 111, "008757": 111, "017215": 111, "116511": 111, "010779": 111, "011374": 111, "001973": 111, "009725": 111, "016044": 111, "113739": 111, "012545": 111, "950": 111, "016104": 111, "003647": 111, "011865": 111, "022728": 111, "161042": 111, "018794": 111, "1100": 111, "_heapify_max_up_position_simpl": 111, "topk_min_position_simpl": 111, "58650968": 112, "72315516": 112, "9137217": 112, "04526746": 112, "70012278": 112, "87604076": 112, "92402115": 112, "36865515": 112, "00362559": 112, "26361505": 112, "pivot_gauss2": 112, "pivot_gauss3": 112, "numpy1": 112, "numpy2": 112, "17it": 112, "000051": 112, "000028": 112, "000125": 112, "000512": 112, "000728": 112, "000045": 112, "000021": 112, "000094": 112, "000447": 112, "000046": 112, "000024": 112, "000110": 112, "000197": 112, "001367": 112, "000253": 112, "001134": 112, "000540": 112, "000623": 112, "002258": 112, "011340": 112, "003184": 112, "001312": 112, "000678": 112, "000639": 112, "002858": 112, "013121": 112, "001035": 112, "000375": 112, "000184": 112, "000233": 112, "000818": 112, "003753": 112, "001292": 112, "001557": 112, "001094": 112, "000686": 112, "003803": 112, "015571": 112, "016613": 112, "000404": 112, "000062": 112, "000331": 112, "000553": 112, "004045": 112, "000364": 112, "000471": 112, "000037": 112, "000440": 112, "000545": 112, "004713": 112, "000482": 112, "003798": 112, "001491": 112, "002594": 112, "007715": 112, "037978": 112, "018972": 112, "001324": 112, "000265": 112, "001054": 112, "002030": 112, "013239": 112, "001341": 112, "000820": 112, "000190": 112, "000602": 112, "001140": 112, "008200": 112, "000651": 112, "004260": 112, "001177": 112, "002724": 112, "006471": 112, "042603": 112, "005198": 112, "001690": 112, "000268": 112, "001100": 112, "002116": 112, "016902": 112, "001080": 112, "009320": 112, "002581": 112, "005762": 112, "013509": 112, "093197": 112, "015497": 112, "001664": 112, "000133": 112, "001458": 112, "001827": 112, "016641": 112, "001309": 112, "005314": 112, "001348": 112, "003848": 112, "008252": 112, "053141": 112, "016670": 112, "001629": 112, "000216": 112, "001459": 112, "002045": 112, "016286": 112, "001499": 112, "011036": 112, "003890": 112, "007070": 112, "018254": 112, "110356": 112, "017467": 112, "002637": 112, "000582": 112, "001846": 112, "003606": 112, "026375": 112, "002417": 112, "021563": 112, "003232": 112, "017314": 112, "029488": 112, "215629": 112, "028747": 112, "004673": 112, "001109": 112, "003391": 112, "005935": 112, "046730": 112, "005792": 112, "profilag": 113, "concentr": 113, "_gini_sort": 113, "_gini_in": 113, "spy": [113, 114], "centiem": 113, "souv": 113, "ralent": [113, 114, 173], "profiler": 113, "disabl": [113, 114, 115, 124], "sortby": [113, 114], "print_stat": [113, 114, 115, 124], "ordered": [113, 114, 115, 124], "ncall": [113, 114, 115, 124], "tottim": [113, 114, 115, 124], "percall": [113, 114, 115, 124], "cumtim": [113, 114, 115, 124], "lineno": [113, 114, 115, 124, 156, 158], "venv": [113, 142], "python3": [113, 114, 142, 156, 160], "interactiveshel": [113, 114, 124], "3472": [113, 114], "run_cod": [113, 114, 124], "exec": [113, 124, 152, 155, 156, 167, 170], "usr": [113, 114, 142, 156], "codeop": [113, 114, 124], "__call__": [113, 114, 124], "ipykernel_23329": 113, "1877708867": 113, "1359775409": 113, "contextlib": [113, 114], "next": [113, 130, 131, 152, 155, 166], "traitlet": [113, 114], "692": [113, 114], "__get__": [113, 114], "compilerop": [113, 114, 142], "extra_flag": [113, 114], "getattr": [113, 114, 124], "3424": [113, 114], "654": [113, 114], "listcomp": [113, 114, 115, 124, 152], "1229": [113, 114], "user_global_n": [113, 114], "_lsprof": [113, 115], "11038": 113, "682": 113, "841": 113, "132": [37, 113], "4034582288": 113, "024": 113, "436": 113, "003": [113, 115], "909": 113, "002": 113, "914": 113, "058": 113, "060": 113, "007": [113, 114], "398": 113, "392": 113, "013": [113, 115], "026": 113, "008": 113, "_gini_final_fast": 113, "gini_fast": 113, "017": 113, "543": 113, "1862792531": 113, "866": 113, "867": 113, "528": 113, "530": 113, "070": 113, "stop": 113, "output_html": 113, "_gini_cumsum2": 113, "_gini_cumsum2b": 113, "gini2": 113, "023": 113, "239060152": 113, "124": 113, "926": 113, "898": 113, "905": 113, "057": 113, "040": 113, "042": 113, "908": 113, "649": 113, "651": 113, "030": 113, "076": 113, "_gini_cumsum3b": 113, "total0": 113, "total1": 113, "_gini_cumsum3": 113, "gini3": 113, "022": [113, 115], "1743022160": 113, "059": 113, "064": 113, "921": 113, "917": 113, "012": 113, "699": 113, "028": [113, 115], "077": 113, "essayent": 114, "upload": 114, "wikimedi": 114, "9f": 114, "convolutionandpooling": 114, "signal": [114, 173, 175], "convolve2d": 114, "img": [114, 117], "11111111": 114, "000002": 114, "000004": 114, "convolve_na": 114, "9999995": 114, "000001": 114, "convolve_naive2": 114, "999998": 114, "retournent": [114, 167, 175], "test_unitair": 114, "decimal": [114, 166], "devien": 114, "_get_indic": 114, "_is_out": 114, "im2col_na": 114, "kernel_shap": 114, "fill_valu": 114, "mismatch": 114, "output_shap": 114, "middl": 114, "kernel_siz": 114, "data_siz": 114, "i_dat": 114, "i_kernel": 114, "t_dat": 114, "t_kernel": 114, "i_out": 114, "convolve_im2col_na": 114, "conv": 114, "999996": 114, "test_unitaire2": 114, "dirnam": [114, 168], "exec_prefix": 114, "profile_cod": 114, "133426": 114, "722": [114, 173], "361": [114, 115], "ipykernel_7262": 114, "3679460054": 114, "3311625431": 114, "88200": 114, "44100": 114, "fromnumeric": [114, 115, 124], "2979": 114, "_wrapreduct": [114, 115, 124], "dictcomp": [114, 115], "2974": 114, "_prod_dispatch": 114, "profileur": [114, 115], "rentr": [114, 143, 160], "text_prof": 114, "pre": 114, "whit": 114, "00042": 114, "92883": 114, "00273": 114, "92841": 114, "35591": 114, "92471": 114, "00016": 114, "00087": 114, "00575": 114, "00169": 114, "00488": 114, "00035": 114, "ict": 114, "meth": [114, 152], "00065": 114, "unc": 114, "00203": 114, "ufunc": [114, 115, 124], "28951": 114, "46552": 114, "176400": 114, "09528": 114, "08072": 114, "09562": 114, "00026": 114, "00009": 114, "00011": 114, "00040": 114, "00068": 114, "00022": 114, "00098": 114, "176600": 114, "09539": 114, "88300": 114, "08095": 114, "proc\u00e8dent": 114, "interromp": 114, "enregistrent": [114, 158], "marqueur": 114, "interrompu": [114, 166], "interrompr": [114, 150, 160, 164, 166], "sampling": [114, 129], "d\u00e9buggag": 114, "im2col_recurs": 114, "im2col_naive_implement": 114, "fall_back_dim": 114, "func": [114, 115, 160], "torch": 114, "nn": 114, "unfold": 114, "padding": 114, "below": 114, "switch": 114, "k0": 114, "mini_kernel": 114, "mini_shap": 114, "cached": 114, "cc2": 114, "new_shap": 114, "resh": 114, "convolve_im2col_recurs": 114, "test_unitaire3": 114, "r\u00e9impl\u00e9ment": 115, "9644453525543213": 115, "density": 115, "sigma2": 115, "001481771469116211": 115, "doprofil": 115, "normpath": [115, 124], "getcwd": [115, 160, 168], "base_prefix": 115, "dump_stat": 115, "10000000": 115, "6027283668518066": 115, "00013383": 115, "_distn_infrastructur": 115, "1958": 115, "142": 115, "_continuous_distn": 115, "_pdf": 115, "_norm_pdf": 115, "093": 115, "_multiarray_umath": 115, "implement_array_funct": 115, "048": 115, "__array_function__": 115, "function_bas": 115, "1912": [115, 126, 127], "_insert": 115, "975": 115, "_support_mask": 115, "putmask": 115, "021": 115, "559": 115, "argsreduc": 115, "2406": 115, "2307": 115, "604": 115, "broadcast_array": 115, "stride_trick": 115, "480": [115, 118], "546": 115, "340": 115, "_broadcast_to": 115, "_ufunc_config": 115, "seterr": 115, "atleast_1d": 115, "shape_bas": 115, "416": 115, "_broadcast_shap": 115, "geterr": 115, "538": 115, "seterrobj": 115, "geterrobj": 115, "345": [115, 167], "genexpr": 115, "asarray": 115, "1965": 115, "542": 115, "promote_typ": 115, "425": 115, "_argcheck": 115, "_maybe_view_as_subclass": 115, "2302": 115, "_any_dispatch": 115, "multiarray": 115, "1961": 115, "_shape_dispatch": 115, "ndit": 115, "1908": 115, "_place_dispatch": 115, "_get_support": 115, "asanyarray": 115, "_parse_arg": 115, "_atleast_1d_dispatch": 115, "2401": 115, "_all_dispatch": 115, "_broadcast_arrays_dispatch": 115, "1882781982421875": 115, "ipykernel_29119": 115, "200996087": 115, "guis": 115, "\u00e9voqu": [116, 155], "fatal": 116, "dicho": 116, "liste_trie": 116, "recherche_dichotomique_recurs": 116, "parametres": 116, "para\u00eetr": [116, 152], "recherche_dichotomique_recursive2": 116, "pok\u00e9mon": 117, "pokemondb": 117, "demandon": 117, "721": 117, "pok\u00e9dex": 117, "training": [117, 125], "breeding": 117, "databas": 117, "dossi": 117, "shutil": [117, 170], "bs4": 117, "utilison": 117, "agent": 117, "mozill": 117, "req": 117, "pokedex": 117, "header": 117, "beautifulsoup": 117, "lxml": 117, "liste_pokemon": 117, "span": [117, 175], "infocard": 117, "lg": 117, "get_pag": 117, "pokemon_nam": 117, "url_pokemon": 117, "get_cara_pokemon": 117, "defaultdict": 117, "vital": 117, "table_body": 117, "findchildren": 117, "findchild": 117, "gettext": 117, "bulbasaur": 117, "ivysaur": 117, "venusaur": 117, "charmand": 117, "charmeleon": 117, "charizard": 117, "squirtl": 117, "spec": 117, "height": [117, 160], "abilit": 117, "ev": [117, 143, 160], "catch": 117, "rat": 117, "gend": 117, "hp": 117, "attack": 117, "defens": 117, "sp": [117, 125], "atk": 117, "speed": 117, "grass": 117, "seed": 117, "kg": 117, "lb": 117, "overgrowchlorophyll": 117, "hidden": 117, "ability": 117, "yellow": 117, "0226": 117, "gold": 117, "silv": 117, "cryst": 117, "pok\u00e9ball": 117, "medium": 117, "slow": 117, "monst": 117, "femal": 117, "884": 117, "140": 117, "0002": 117, "0227": 117, "0003": 117, "0228": 117, "0004": 117, "fir": 117, "lizard": 117, "blazesolar": 117, "0229": 117, "dragon": 117, "0005": 117, "flam": 117, "0230": 117, "artwork": 117, "jpg": 117, "out_fil": 117, "copyfileobj": 117, "butterfre": 117, "spearow": 117, "skimag": 117, "imio": 117, "imread": 117, "imshow": 117, "get_xax": 117, "get_yax": 117, "amus": 118, "gh": 118, "er": 118, "recontruir": 118, "36960": 118, "cpython": 118, "dv": 118, "devrion": 118, "max_j": 118, "r\u00e9present": 118, "arr": [118, 141], "r\u00e9f\u00e9renc": [118, 152], "\u00e9norm": 118, "9x8": 118, "amat": 118, "aarr": 118, "00984": 118, "00112": 118, "nb_lin": 118, "nb_col": 118, "chi_2": [37, 119], "facteur": 119, "bullet": 119, "n_": 119, "asymptot": 119, "libert": [119, 143, 173], "pr\u00e9f\u00e9rent": [119, 152, 166, 167], "evident": 119, "chi2_contingency": 119, "chi2": 119, "pvalu": 119, "168598503892621": 119, "4045712090580829": 119, "nj": 119, "nij": 119, "52941176": 119, "88235294": 119, "58823529": 119, "47058824": 119, "61764706": 119, "16176471": 119, "impens": 120, "milli": 120, "unit_test": 120, "valeur_attendu": 120, "tour_prend_piec": 120, "test_tour_prend_piec": 120, "tour_prend_piece_tupl": 120, "test_tour_prend_piece_tupl": 120, "_tour_prend_piec": 120, "colori": 120, "find_neighbour": 120, "coloring": 120, "next_cas": 120, "tour_prend_piece_obstacl": 120, "test_": 120, "assurent": 120, "\u00e9crivent": [120, 168], "testent": 120, "pytest": 120, "commencenc": 120, "test_tour_prend_piece_obstacle_except": 120, "sorted_hist": 121, "recontruit": 121, "sorted_en": 121, "sort_with_hist": 121, "sort_with_nohist": 121, "immpl\u00e9ment": 121, "smoothsort": 121, "slowest": 121, "took": 121, "fastest": 121, "quoiqu": 121, "sort_with_nohist_nocopy": 121, "tableaux_aleatoir": 121, "enss": 121, "fonc": [121, 156], "1e10": [121, 127], "nlnn": 121, "6e": 121, "grossi": [121, 148], "403": 121, "1096": 121, "2980": 121, "8103": 121, "22026": 121, "59874": 121, "162754": 121, "442413": 121, "df100": 121, "dfm": 121, "1e9": 121, "homomorph": [122, 123], "pr\u00e9serv": [122, 123], "fully": [122, 123], "encrypt": [122, 123], "keygen": [122, 123], "secret": [122, 123], "sk": [122, 123], "eta": [122, 123], "publiqu": [122, 123, 170], "pk": [122, 123], "tau": [122, 123], "gamm": [122, 123], "rho": [122, 123, 166], "x_0": [122, 123], "r_p": [122, 123], "2r": [122, 123], "c_t": [122, 123], "decrypt": [122, 123], "rem\u00e9di": [124, 152, 166, 173], "memory_profil": 124, "make_classif": [124, 125], "datax": [124, 125], "datay": [124, 125], "n_featur": [124, 125], "n_class": [124, 125], "n_clusters_per_class": [124, 125], "n_inform": [124, 125], "85382076": 124, "22046675": 124, "24910001": 124, "94596312": 124, "66829759": 124, "20552856": 124, "72023578": 124, "84674932": 124, "26846378": 124, "20075415": 124, "59306412": 124, "88866079": 124, "76923866": 124, "32519462": 124, "94535057": 124, "47877141": 124, "2276281": 124, "02957725": 124, "85438519": 124, "55194846": 124, "58758523": 124, "80964683": 124, "32608346": 124, "12806316": 124, "3248342": 124, "06996005": 124, "31117628": 124, "99525892": 124, "47020431": 124, "13399841": 124, "kneighborsclassifi": [124, 125], "brut": [124, 125, 160], "x27": 124, "environment": 124, "rerun": 124, "trust": 124, "unabl": [124, 156, 175], "loading": 124, "nbview": 124, "kneighborsclassifierkneighborsclassifi": 124, "python3105_x64": 124, "445": [124, 156], "143": 124, "3397": 124, "xav": 124, "appdat": 124, "ipykernel_22912": 124, "2929265561": 124, "__home_": 124, "github_fork": 124, "_classif": 124, "predict_prob": 124, "_bas": 124, "730": 124, "kneighbor": 124, "metric": 124, "_pairwise_distances_reduct": 124, "_dispatch": 124, "165": 124, "508": 124, "_validate_dat": 124, "check_array": 124, "_assert_all_finit": 124, "2177": 124, "is_usable_for": 124, "448": 124, "_config": 124, "get_config": 124, "1140": 124, "_wrapfunc": 124, "threadpool_limit": 124, "threadpoolctl": 124, "lim": 124, "_method": 124, "_sum": 124, "valid_metric": 124, "412": 124, "414": [124, 126], "813": 124, "joblib": [124, 172], "411": 124, "effective_n_job": 124, "1406": 124, "check_is_fitted": 124, "ctyp": 124, "get_active_backend": 124, "818": 124, "num_thread": 124, "856": 124, "set_num_thread": 124, "333": 124, "_num_sampl": 124, "restore_original_limit": 124, "846": 124, "get_num_thread": 124, "1368": 124, "_is_fitted": 124, "etudi": [124, 170], "pairwise_dist": 124, "acp": 125, "what_to_measur": 125, "32456439999987197": 125, "nf_set": 125, "nob": 125, "ys": 125, "nf": 125, "dt2": 125, "ball_tre": 125, "003455999999459891": 125, "020609700000022713": 125, "002304800000274554": 125, "029963799999677576": 125, "002105900000060501": 125, "04159559999970952": 125, "0038469000000986853": 125, "06434530000024097": 125, "0027813999995487393": 125, "0x1c7734ed060": 125, "0033596000002944493": 125, "029927999999927124": 125, "0036015000005136244": 125, "10796130000017001": 125, "00941289999991568": 125, "3117673000006107": 125, "adjoint": 125, "random_sparse_matrix": 125, "ratio_spars": 125, "resiz": [125, 160], "nnz": 125, "what_to_measure_spars": 125, "nb_spars": 125, "sparse_ratio": 125, "09028749999924912": 125, "568506300000081": 125, "9546476190476191": 125, "6447933999997986": 125, "9173545454545454": 125, "9383225999999922": 125, "616280500000357": 125, "77778": 125, "977762700000312": 125, "mesuron": 125, "model_select": 125, "train_test_spl": 125, "what_to_measure_perf": 125, "x_train": 125, "x_test": 125, "y_train": 125, "y_test": 125, "good": [125, 137], "003669900000204507": 125, "158": 125, "perf": 125, "0022122999998828163": 125, "0009547999998176238": 125, "0017370000005030306": 125, "00210730000071635": 125, "003134900000077323": 125, "classifieur": 125, "concordent": 125, "revenon": 125, "hyperplan": 125, "inert": 125, "x_j": 125, "pca": 125, "what_to_measure_perf_acp": 125, "acp_dim": 125, "t1o": 125, "t2o": 125, "goodo": 125, "n_component": 125, "t0": 125, "x_train_pc": 125, "fit_transform": 125, "x_test_pc": 125, "0022221999997782405": 125, "0010087999999086605": 125, "029213499999968917": 125, "p_noacp": 125, "y_noacp": 125, "dt_noacp": 125, "perf_noacp": 125, "dt_train": 125, "dt_predict": 125, "0020304999998188578": 125, "0021592000002783607": 125, "0010569000005489215": 125, "0015843000001041219": 125, "0009798000000955653": 125, "002628299999742012": 125, "0023179999998319545": 125, "013047299999925599": 125, "0009872000000541448": 125, "018462199999703444": 125, "eton": 125, "transfer": [125, 164], "conseerv": 125, "p_1": 126, "p_2": 126, "absurd": [126, 127], "constuir": [126, 167], "contred": 126, "matrix_distance_7398": [126, 127], "data_help": [126, 127, 142, 143, 148, 149], "boulogn": [126, 127], "billancourt": [126, 127], "beauv": [126, 127], "85597": [126, 127], "courbevoi": [126, 127], "sevran": [126, 127], "26564": [126, 127], "colomb": [126, 127], "alfortvill": [126, 127], "36843": [126, 127], "bagneux": [126, 127], "marcq": [126, 127], "baroeul": [126, 127], "233455": [126, 127], "suresn": [126, 127], "gennevilli": [126, 127], "10443": [126, 127], "charlevill": [126, 127], "mezier": [126, 127], "bordeau": [126, 127], "neq": 126, "\u00e9chapp": [126, 143, 167], "djikstr": 126, "skieur": [126, 127], "rentrent": 126, "magasin": 126, "lou": 126, "convient": [126, 166, 170], "min_": [126, 128, 129], "t_i": [126, 127], "arrang": 126, "t_1": 126, "t_2": 126, "t_n": [126, 127], "viennent": [96, 126, 173], "hlin": [126, 168], "t_3": 126, "t_4": 126, "t_": 126, "s_3": 126, "s_4": 126, "s_5": 126, "s_6": 126, "s_7": 126, "sigma_m": 126, "ski": [126, 127], "4496565125341727": 126, "6181478314088333": 126, "6472124781567143": 126, "689855001829289": 126, "7069363711449275": 126, "720882923000757": 126, "7315603136077902": 126, "757295341401446": 126, "806174917827697": 126, "8273604346819485": 126, "539691655662206": 126, "5677016209991443": 126, "651632433144162": 126, "6723990573029228": 126, "6967500647083442": 126, "6991707543184964": 126, "7173171973288348": 126, "764722044308385": 126, "789682343736771": 126, "8113678294188096": 126, "8872585832253812": 126, "8910607675180564": 126, "893354126537998": 126, "9435870591562554": 126, "9577834515908243": 126, "caract\u00e8ris": 126, "vision": 126, "compr\u00e9hens": [126, 152, 167], "redond": [126, 152], "v_0": 126, "sum_v": 126, "agorithm": 126, "dikjstr": 126, "fe": [126, 143], "1684": 126, "3437": 126, "348": 126, "3980": 126, "686": 126, "698": 126, "d\u00e9compress": [126, 168], "7zip": 126, "pysens": 126, "mac": [126, 168], "tar": 126, "60050": 126, "2290": [126, 127], "2363": [126, 127], "2346": [126, 127], "2025": [126, 127], "2140": [126, 127], "2428": [126, 127], "2201": [126, 127], "2506": [126, 127], "2425": [126, 127], "2557": [126, 127], "vil": 127, "rejoindr": 127, "7888": 127, "keyerror": [127, 155, 175], "m\u00e9zi": 127, "816197": 127, "813197": 127, "795670": 127, "skis": 127, "t_j": 127, "t_k": 127, "nec\u00e9ssair": 127, "restreindr": 127, "301415513544109": 127, "graph_notebook_sk": 127, "xymatrix": 127, "stratifi": [128, 129], "tmoertel": 128, "round": [128, 129, 166], "v_1": [128, 129, 166], "v_n": [128, 129], "v_": [128, 129], "w_": [128, 129], "couvr": [128, 129, 170], "brib": [128, 129], "prisoner": [128, 129], "royaum": 128, "prison": [128, 129], "vivent": [128, 143], "rel\u00e2ch": [128, 160, 173], "liber": [128, 173], "parlent": 128, "veil": 128, "susceptibl": [128, 152, 155, 160, 167, 170, 175], "relach": 128, "actif": [128, 173], "x_k": 128, "k_i": 128, "_t": 128, "k_a": 128, "k_t": 128, "affirm": [129, 143], "sol": 129, "inter": 129, "benjamin": 129, "donnot": 129, "new_intervall": 129, "mymax": 129, "fondamental": [129, 167], "oracl": 129, "esoudr": 129, "priso": 129, "groupkfold": 129, "stratified": 129, "codeforc": [130, 131], "483a": [130, 131], "geologist": [130, 131], "sometim": [130, 131], "rainfall": [130, 131], "drainag": [130, 131], "basin": [130, 131], "given": [130, 131, 166], "elev": [130, 131], "dimensional": [130, 131], "altitud": [130, 131, 152], "rul": [130, 131], "wat": [130, 131], "neighboring": [130, 131], "sink": [130, 131], "ti": [130, 131, 175], "north": [130, 131], "west": [130, 131], "east": [130, 131], "south": [130, 131], "drain": [130, 131], "directly": [130, 131], "indirectly": [130, 131], "labeled": [130, 131], "concatenated": [130, 131, 160], "bottom": [130, 131, 160], "resulting": [130, 131], "lexicographically": [130, 131], "smallest": [130, 131], "western": [130, 131], "alway": [130, 131, 158, 166, 170], "lead": [130, 131], "evil": [130, 131], "leagu": [130, 131], "bad": [130, 131, 160], "hors": [130, 131], "recently": [130, 131], "been": [130, 131], "far": [130, 131], "backstabbing": [130, 131], "decided": [130, 131], "department": [130, 131], "separat": [130, 131], "troublesom": [130, 131], "member": [130, 131], "being": [130, 131, 170], "thoroughbred": [130, 131], "isn": [130, 131], "his": [130, 131], "valuabl": [130, 131], "figuring": [130, 131], "himself": [130, 131], "got": [130, 131], "loyal": [130, 131], "henchman": [130, 131], "uva": [130, 131], "10911": [130, 131], "job": [130, 131], "forming": [130, 131], "quiz": [130, 131], "mca": [130, 131], "cpci": [130, 131], "championship": [130, 131], "student": [130, 131], "interested": [130, 131], "participat": [130, 131], "consisting": [130, 131], "memb": [130, 131], "near": [130, 131], "sure": [130, 131], "x_3": [130, 131], "minimized": [130, 131], "adn": 131, "fulkerson": 131, "flot": 131, "dispens": 132, "enrich": 132, "d\u00e9crir": [132, 144], "cart": [132, 150, 166], "physiqu": [132, 168], "atout": 132, "tarot": 132, "fastidi": [132, 133, 134, 148, 152, 167, 170, 173], "mesparametr": 132, "pas_gradient": 132, "fonction_any": 132, "pronom": 132, "0x7fb13a470c10": 132, "autre_point": 132, "appliq": 132, "carremag": [132, 133], "rattach": 132, "4031242374328485": 132, "lx": 132, "738793548317167": 132, "000000000010186": 132, "est_nul": 132, "somme_ligne_colonne_diagonal": 133, "coefficient_un": 133, "est_mag": 133, "tous_les_carre_na": 133, "tous_les_carre_naif2": 133, "stop_aft": 133, "tous_les_carres_permut": 133, "firstn": 133, "devenu": 133, "380064799999673": 133, "tous_les_carres_permutation_ligne12_meme_somm": 133, "435667799996736": 133, "5677748000016436": 133, "tous_les_carr": 133, "version1": 134, "fonction1": [134, 160], "fonction2": [134, 166], "fonction3": 134, "fonction_final": 134, "version2": 134, "tirage_aleatoir": [134, 135], "precedent": [134, 135, 160, 166, 167], "moyenne_tirag": [134, 135], "joueur": [134, 140, 173], "jou": [134, 141, 142, 143, 150, 166, 173], "tricheur": 134, "piecetruque": [134, 135], "piecetruqueemix": [134, 135], "al\u00e9atoiremnt": 134, "truque": [134, 135, 152], "d\u00e9cryptag": [136, 137], "reproduisent": 136, "polynom": 136, "2x": 136, "log_bas": 136, "9999999999999996": 136, "965784284662087": 136, "lettre_suiv": [136, 137], "valeur_absolu": 136, "bizarr": [98, 136, 139], "acroym": 136, "compact": [136, 146, 147], "timecomplexity": 136, "pr\u00e9dictibl": 136, "aeco": 136, "eddard": [136, 137], "catelyn": [136, 137], "robb": [136, 137], "sansa": [136, 137], "arya": [136, 137], "brandon": [136, 137], "rickon": [136, 137], "theon": [136, 137], "rorbert": [136, 137], "cersei": [136, 137], "tywin": [136, 137], "jaim": [136, 137], "tyrion": [136, 137], "sha": [136, 137], "bron": [136, 137], "lancel": [136, 137], "joffrey": [136, 137], "sandor": [136, 137], "vary": [136, 137], "renly": [136, 137], "mots_lettre_posit": [136, 137], "dictionnaire_bien_chois": [136, 137], "construis": 136, "reformul": 136, "concevoir": [136, 152, 160, 168, 173], "jenesuispascod": [136, 137], "mhqhvxlvsdvfrgh": [136, 137], "dop": [136, 137], "traduit": [136, 166, 167, 175], "dictionnaire_chois": 137, "pr\u00e9par": [137, 143], "dictionair": 137, "unordered_map": 137, "stl": 137, "accessing": 137, "code_cesar": 137, "mschgjlgedgrrrt": 137, "d\u00e9lim": 138, "int_a": 138, "6145744834544478": [138, 139], "ave": [139, 143], "2320146802585272": 139, "integrale_precis": 139, "val0": 139, "5050000000000003": 139, "2196877891927724": 139, "piano": 139, "int2": [139, 142], "integrale_precise_2n": 139, "5000454610560389": 139, "81920": 139, "2169740198498182": 139, "int_0": 139, "xdx": 139, "discontinu": 139, "marg": [139, 142], "underset": 139, "incertitud": 139, "interval": 139, "max_fp": 139, "last_f": 139, "fx": 139, "md": 139, "integrale_precise_derive": 139, "5004995004994989": 139, "integrale_bizarr": 139, "px": 139, "0625": 139, "2857142857142856": 139, "partout": [139, 148, 166], "rationnel": 139, "tombent": 139, "integrale_mc": 139, "5443922662659958": 139, "integrale_mc_precis": 139, "moy0": 139, "5001005538840249": 139, "i_n": 139, "16m": 139, "16e4": 139, "500765653300686": 139, "885": 139, "populair": [140, 141], "create_gam": 141, "gameover1": 141, "masked_not_equal": 141, "gameov": 141, "gam": 141, "process_lin": 141, "prev": 141, "update_gam": 141, "reversed": 141, "grammair": [142, 144, 166, 175], "interag": 142, "capteur": 142, "tsv": [142, 168], "fallu": [142, 152], "literal": [142, 167], "pr\u00e9vus": [142, 155], "permanent": [142, 173], "vocat": [142, 143, 173], "condens": 142, "pyramide_bigarre": 142, "td2_1": [142, 151], "classes_heritage_correct": 142, "lemonde5": [142, 149], "voeux83": [142, 143], "classes_carre_mag": 142, "lemonde3": [142, 149], "blogny1": [142, 149], "blog3": [142, 149], "nytimes5": [142, 149], "classes_carre_magique_correct": 142, "integrale_rectangle_correct": 142, "nytimes2": [142, 149], "voeux05": [142, 143], "module_file_regex": 142, "__pycache__": [142, 168, 170], "lemonde1": [142, 149], "nytimes8": [142, 149], "voeux06": [142, 143], "dictionnaire_vigener": 142, "voeux": [142, 143], "lemonde9": [142, 149], "voeux08": [142, 143], "texte_langue_correct": 142, "nytimes1": [142, 149], "voeux01": [142, 143], "premiers_pas_correct": 142, "nytimes9": [142, 149], "voeux74": [142, 143], "j2048": 142, "voeux75": [142, 143], "elpais2": [142, 149], "lequipe1": [142, 149], "voeux94": [142, 143], "lemonde7": [142, 149], "lemonde10": [142, 149], "seance4_excel": [142, 143], "arthur_charpentier2": [142, 148, 149], "afp2": [142, 148, 149], "inconnu2": [142, 149], "pyramide_bigarree_correct": 142, "afp1": [142, 148, 149], "lemonde8": [142, 149], "elpais5": [142, 149], "hex": [142, 146, 147, 167], "module_file_regex_correct": 142, "nytimes3": [142, 149], "voeux89": [142, 143], "arthur_charpentier3": [142, 148, 149], "voeux87": [142, 143], "lemonde11": [142, 149], "elpais4": [142, 149], "nytimes7": [142, 149], "lemonde2": [142, 149], "inconnu1": [142, 149], "lequipe2": [142, 149], "premiers_p": 142, "lemonde6": [142, 149], "blog1": [142, 149], "voeux09": [142, 143], "voeux90": [142, 143], "elpais7": [142, 149], "exemple_fichi": 142, "elpais6": [142, 149], "texte_langu": 142, "integrale_rectangl": 142, "voeux07": [142, 143], "classes_heritag": 142, "arthur_charpentier1": [142, 148, 149], "lemonde4": [142, 149], "blog2": [142, 149], "dictionnaire_vigenere_correct": 142, "variable_boucle_test": 142, "nytimes6": [142, 149], "elpais3": [142, 149], "variable_boucle_tests_correct": 142, "j2048_correct": 142, "nytimes4": [142, 149], "voeux79": [142, 143], "elpais1": [142, 149], "pragmat": 142, "reconnu": 142, "exportent": 142, "grop": 142, "volum": 142, "3x3": [142, 143], "gz": 142, "wav": 142, "mp3": [142, 168, 175], "ogg": 142, "musiqu": [142, 175], "mp4": 142, "vorb": 142, "vid\u00e9o": 142, "b\u00e9n\u00e9fic": 142, "v\u00f4tr": 142, "5403023058681398": [142, 143], "\u00eate": [142, 143], "n\u00e9": [142, 147, 163], "fonction_cos_sequent": [142, 143], "dynload": 142, "4161468365471424": [142, 143], "recharg": [142, 143, 166, 170], "async_helper": 142, "autocall": 142, "builtin_trap": 142, "completerlib": 142, "pr\u00e9ambul": 142, "1903": 142, "1957": 142, "indiff\u00e9rent": 142, "securit": [142, 143], "insecurit": [142, 143], "mako": [142, 143], "templating": [142, 143], "dimanch": [142, 143], "seance4_excel_mat": 143, "6414749515069115": 143, "4096411389655439": 143, "7991926327688407": 143, "9918119068265183": 143, "07379598399157106": 143, "4290244325276996": 143, "9337274118746318": 143, "17483162769873706": 143, "6159652170653446": 143, "4835251137894401": 143, "date1": 143, "2013": 143, "date0": 143, "birth": 143, "1975": [143, 163], "weekday": 143, "lund": [143, 163], "monmodule2": 143, "monmodule3": 143, "Mes": 143, "cher": 143, "compatriot": 143, "peupl": 143, "rassembl": [143, 152], "respir": 143, "rythm": 143, "bat": 143, "coeur": 143, "f\u00eat": 143, "no\u00ebl": 143, "participent": 143, "joi": 143, "retrouvaill": 143, "chaleur": 143, "familial": 143, "amical": 143, "toulous": 143, "\u00e9preuv": 143, "solidar": 143, "amiti": 143, "nation": 143, "m\u00e9tropol": 143, "euro": 143, "vivr": 143, "ignorecas": 143, "voul": 143, "soldat": 143, "engag": 143, "constru": 143, "victim": 143, "salu": 143, "reconnaiss": 143, "avancent": 143, "avan": 143, "souffranc": 143, "gouvern": 143, "\u00e9prouv": 143, "tristess": 143, "foi": 143, "profon": 143, "craint": 143, "\u00e9prouvent": 143, "angoiss": 143, "\u00e9treint": 143, "peur": 143, "exasper": 143, "entreprendr": 143, "int\u00e9": 143, "fiert": 143, "brutal": 143, "efforc": 143, "agi": 143, "souc": [143, 160], "d\u00e9fendr": 143, "fra": 143, "enver": 143, "tromp": [143, 155], "trah": 143, "hypocris": 143, "cess": [143, 152, 166, 168, 173], "urg": 143, "fond": [143, 160], "risquent": [143, 160], "leu": 143, "doulour": 143, "cett": 143, "responsab": 143, "prot": 143, "devo": 143, "persuad": 143, "fragil": 143, "d\u00e9battr": 143, "r\u00e9form": 143, "lyc": 143, "p\u00e9nal": 143, "ministr": 143, "fran\u00e7ois": 143, "fillon": 143, "cepen": 143, "hommag": 143, "froid": 143, "partenair": 143, "renonc": [143, 167], "boulevers": 143, "conduir": 143, "r\u00e9publ": 143, "redon": 143, "JE": 143, "vais": 143, "VOUS": 143, "NE": 143, "ennui": 143, "AI": 143, "dej": 143, "decrit": 143, "ET": 143, "DE": 143, "PAR": 143, "QUE": 143, "MES": 143, "SOIENT": 143, "LES": 143, "AU": 143, "LA": 143, "societ": 143, "francais": 143, "SOIT": 143, "fraternit": 143, "EST": 143, "AUX": 143, "agriculteur": 143, "artisan": 143, "entrepris": [143, 167], "devront": [143, 166], "examin": 143, "QU": 143, "EN": 143, "CE": 143, "rol": 143, "LUI": 143, "LE": 143, "tourment": 143, "OU": 143, "NOUS": 143, "vivon": 143, "appa": 143, "PAS": 143, "AVEZ": 143, "ILS": 143, "ONT": 143, "recu": 143, "AVEC": 143, "SUIS": 143, "antill": 143, "etaient": 143, "couvert": 143, "LEUR": 143, "EUX": 143, "NOS": 143, "departem": 143, "a_l_etrang": 143, "QUI": 143, "malheur": 143, "accident": 143, "SONT": 143, "hopital": 143, "egal": 143, "salut": 143, "travailleur": 143, "imm": 143, "chretien": 143, "TU": 143, "SOIES": 143, "UNE": 143, "accueil": 143, "POUR": 143, "president": 143, "1976": [143, 175], "grandeu": 143, "ELLE": 143, "SUR": 143, "entent": 143, "ren": 143, "aymon": 143, "SES": 143, "echangent": 143, "conduit": 143, "MON": 143, "1979": 143, "SON": 143, "revien": 143, "afriqu": 143, "terr": 143, "ME": 143, "union": [143, 167], "soviet": 143, "urss": 143, "six": [143, 167, 175], "UN": 143, "prepar": 143, "av": 143, "UNS": 143, "promet": 143, "fa": 143, "soutiendr": 143, "\u00e9quilibr": 143, "lass": 143, "invit": [143, 166], "\u00e2g\u00e9": 143, "fratern": 143, "ardemment": 143, "reprennent": [143, 167], "\u00e9lect": 143, "pr\u00e9sidentiel": 143, "\u00e9tabl": 143, "candidat": 143, "na\u00eetr": 143, "conf\u00e9der": 143, "dign": 143, "chanti": 143, "tribun": 143, "der": 143, "frapp": 143, "r\u00e9alit": [143, 152, 166], "dois": 143, "redir": 143, "admir": 143, "\u00e9quipag": 143, "r\u00e9confort": 143, "accompl": 143, "qual": 143, "dissoc": 143, "naguer": 143, "pa": 143, "apprendr": 143, "gra": 143, "\u00e9cout": [143, 167, 173], "enac": 143, "ins\u00e9cur": 143, "r\u00e9forment": 143, "rvic": 143, "achat": 143, "\u00e9nerg": 143, "immigr": 143, "banlieu": 143, "r\u00e9nov": 143, "organ": 143, "recour": [143, 167], "isra\u00ebl": 143, "palestinien": 143, "patr": 143, "python_": 143, "doctyp": 143, "noj": 143, "vector": 143, "enabled": 143, "disabled": [143, 160, 173], "sticky": [143, 160], "pinned": 143, "toc": 143, "page_str": 143, "creativecommon": 143, "deed": 143, "af": 143, "programmeertaal": 143, "programmiersprach": 143, "d8": 143, "a8": 143, "a7": 143, "d9": 143, "8a": 143, "86_": 143, "ba": 143, "a9_": 143, "a9": 143, "e0": 143, "a6": 143, "a5": 143, "ast": 143, "az": 143, "proqraml": 143, "9fd": 143, "b1rma_dil": 143, "azb": 143, "8c": 143, "ul": 143, "endfor": 143, "tpl": 143, "ch\u00f4mag": 144, "incident": [144, 152, 166, 170], "aiguillag": [144, 173], "incompr\u00e9hensibl": 144, "torchon": 144, "serviet": 144, "factoriel": [144, 145, 166], "fautiv": 145, "195": [145, 156], "premmi": 145, "4037913": 145, "biodivers": [146, 147], "biodiversite_tri2": [146, 147], "boul": [146, 147], "empil": [146, 147, 160, 173], "pyramide_num2": 147, "scatter_demo": 147, "rgb": 147, "typiqu": [148, 156], "oeuvr": 148, "litt\u00e9rair": 148, "m\u00e9langent": 148, "\u00e9tiquet": 148, "read_fil": [148, 149], "conclur": [148, 167], "admetton": 148, "disposon": 148, "infaillibl": 148, "dup": 148, "d\u00e9licat": 149, "read_file_enc": 149, "enc": [149, 164], "corbeau": 149, "bec": 149, "fromag": [149, 152], "ma\u00eetr": 149, "renard": 149, "odeur": [149, 152], "allech": 149, "Lui": 149, "visibl": [149, 160, 168], "souhaiton": 149, "\u00ee": 149, "histogram2": 149, "pourrion": 149, "007751937984496124": 149, "06976744186046512": 149, "17829457364341086": 149, "03875968992248062": 149, "031007751937984496": 149, "08527131782945736": 149, "023255813953488372": 149, "10077519379844961": 149, "07751937984496124": 149, "05426356589147287": 149, "015503875968992248": 149, "0067247820672478205": 149, "007575757575757576": 149, "007012142979305627": 149, "02588801926550271": 149, "004853022739877981": 149, "010752688172043012": 149, "007556675062972292": 149, "010554089709762533": 149, "029830508474576273": 149, "01349112426035503": 149, "005625270445694505": 149, "005441436539246361": 149, "00224408769204212": 149, "009715025906735751": 149, "0051919661155895615": 149, "00016849199663016007": 149, "010804020100502512": 149, "007139797229758675": 149, "0021551724137931034": 149, "0055272108843537416": 149, "0014691478942213516": 149, "004875076173065204": 149, "0044822949350067235": 149, "007034547444114429": 149, "0020463847203274215": 149, "0034299968818210166": 149, "008162299639202697": 149, "00572041473006793": 149, "005029013539651838": 149, "030130034887408817": 149, "031933508311461065": 149, "02547634339541854": 149, "03934426229508197": 149, "035542582417582416": 149, "030610255410411385": 149, "04194094414143314": 149, "03151779230210603": 149, "03840526700804682": 149, "lemond": 149, "journal": 149, "lem": 149, "text_other": 149, "ha": 149, "wrap": 149, "nplusieur": 150, "anything": 150, "trou": 150, "sloan": 150, "obtent": [150, 155, 167], "list1": 150, "list2": 150, "alourd": 150, "interrupt": 150, "d\u00e9nou": 150, "sybillin": 150, "lesqueel": 150, "experim": 150, "curieux": 151, "log2": 151, "456217": 151, "931568569324174": 151, "134146": 151, "166639": 151, "922092": 151, "728522": 151, "162931": 151, "741312": 151, "195045": 151, "642304": 151, "685730": 151, "d\u00e9tien": 152, "banqui": 152, "d\u00e9tenu": 152, "rectifi": 152, "intern": [152, 169], "forment": 152, "pr\u00e9d\u00e9fin": [152, 156, 173, 175], "transposit": 152, "exhaust": [152, 160, 166, 167, 168], "instanti": 152, "classe_vid": 152, "run_python_script_139986789729472": [], "run_python_script_139986788060928": [], "ob\u00e9it": [152, 155, 166], "imit": 152, "methode1": 152, "397204094": 152, "2147483647": 152, "nb2": 152, "pourvu": 152, "run_python_script_139986789853120": [], "d\u00e9couvrent": 152, "progressivent": 152, "classe2": 152, "classe1": 152, "autonom": [152, 160], "destructeur": 152, "destruct": [152, 160], "__del__": 152, "r\u00e9initialisent": 152, "__module__": 152, "chapitr": [152, 155, 160, 161, 166, 167, 168, 170, 173], "__bases__": 152, "run_python_script_139986788810496": [], "__weakref__": [152, 160, 170], "weak": [152, 160, 170], "pydoc": 152, "essai_class": 152, "__delattr__": 152, "__dir__": 152, "__eq__": [97, 98, 152], "__format__": 152, "__ge__": 152, "__gt__": 152, "__hash__": [152, 167], "__init_subclass__": 152, "__le__": 152, "__ne__": 152, "__new__": 152, "__reduce__": 152, "__reduce_ex__": 152, "__sizeof__": 152, "__subclasshook__": 152, "ensemble_el": 152, "nouvelle_cl": 152, "run_python_script_139986789849280": [], "nombre_complex": 152, "get_modul": 152, "instar": [152, 166, 167, 175], "dor\u00e9nav": [152, 155, 166], "__iadd__": 152, "\u00e9toff": 152, "attard": 152, "__getitem__": 152, "__setitem__": 152, "point_espac": [152, 155], "l\u00e8vent": 152, "_z": 152, "run_python_script_139986787580928": [], "arr\u00eatent": 152, "cmp": [152, 166], "__contains__": 152, "__len__": 152, "__abs__": 152, "lev": 152, "__delitem__": 152, "__int__": 152, "__float__": 152, "__complex__": 152, "__div__": 152, "__mul__": 152, "__sub__": 152, "__pow__": 152, "__lshift__": 152, "__idiv__": 152, "__imul__": 152, "__isub__": 152, "__ipow__": 152, "__ilshift__": 152, "__irshift__": 152, "exsit": 152, "moder": 152, "rightsid": 152, "leftsid": 152, "LS": 152, "__radd__": 152, "__rlshift__": 152, "__iter__": [152, 155], "visit": [152, 166, 173], "__next__": 152, "stopiter": [152, 155, 166], "class_it": [152, 155], "_in": [152, 155], "_n": [152, 155], "affichent": 152, "ck": 152, "isntanc": 152, "incremente_rnd": 152, "classmethod": 152, "meth3": 152, "meth4": 152, "essai_cl": 152, "meth2": 152, "croir": 152, "pseudo": [152, 166], "d\u00e9truir": [152, 156, 160], "imaginair": 152, "conj": 152, "conjugu": 152, "set_modul": 152, "get_argu": 152, "set_argu": 152, "get_conjugu": 152, "866025": 152, "0471975512": 152, "09439510239": 152, "0471975511965976": 152, "0943951023931953": 152, "descend": 152, "nom_copy": 152, "nom_inst": 152, "creationdestruct": 152, "d\u00e9truit": [152, 155, 156, 160], "classe_inclus": 152, "attr": 152, "re\u00e7oiv": [152, 160], "fonction_l": 152, "attribu": [152, 166, 167], "garbag": [152, 155, 156, 170, 173], "collector": [152, 155, 156, 170, 173], "__deepcopy__": 152, "memo": [152, 156], "objet1": 152, "objet2": 152, "o3": 152, "pointent": 152, "rencontrent": 152, "circulair": [152, 168], "r\u00e9solvent": 152, "artific": 152, "soupl": [152, 160, 167], "gag": 152, "t3": 152, "785401300000558": [], "6901625999998942": [], "7032609999996566": [], "atribut": 152, "pil": [152, 155, 157, 173], "cent_tirag": 152, "truqu": 152, "reproduit": [152, 166], "piece_normal": 152, "piece_truque": 152, "devion": 152, "redevient": 152, "piece_tres_truque": 152, "alter": [152, 167, 170], "resolu": [152, 155], "inherited": 152, "rubriqu": 152, "ira": 152, "run_python_script_139986787957184": [], "h\u00e9ritent": 152, "offrait": 152, "appellent": [152, 173], "ancetr": 152, "h\u00e9riti": 152, "aver": [152, 166, 167], "dilemm": 152, "cub": 152, "repren": [152, 160], "fonction_somme_list": 152, "fonction_somme_dict": 152, "fonction_somm": 152, "undeuxtrois": 152, "incorpor": [152, 166], "indentationerror": [152, 155, 166], "unindent": [152, 166], "confond": [152, 166], "seilf": 152, "decoup": 152, "gruyer": 152, "fr2": 152, "fr3": 152, "g3": 152, "8333333333333334": 152, "61538461538461": 152, "76923076923077": 152, "7923076923076924": 152, "get_lin": 152, "get_col": 152, "get_submat": 152, "set_submat": 152, "matricelist": 152, "matricedict": 152, "produitclass": 152, "produitstrassen": 152, "architectur": [152, 164], "pattern": [152, 160, 175], "facilit": [152, 173], "statiqu": 153, "lanag": 154, "deux_entiers_somm": 154, "deux_entiers_multipl": 154, "pr\u00e3": 154, "deux_enti": 154, "deuxenti": 154, "accroch": [96, 154, 173], "plu": 154, "disparit": [154, 160], "\u00e3": 154, "taient": 154, "m\u00e3\u00aame": 154, "deuxentiersmodif": 154, "anodin": 154, "run_python_script_139986790844416": [], "baseexcept": 155, "run_python_script_139986787314496": [], "produisent": [155, 173], "pr\u00e9voit": [155, 160], "dirig": [155, 160], "intercept": [155, 156, 160, 166, 167], "48606594010979": 155, "0822096637057887j": 155, "accol": 155, "surviennent": [155, 158, 164], "orthograph": [155, 175], "inexist": [155, 160], "importerror": [155, 160], "inappropri": 155, "oserror": 155, "unicodeerror": 155, "arithmeticerror": 155, "standarderror": 155, "was": [155, 156], "d\u00e9rivent": 155, "davantag": [155, 167], "repr": [155, 160, 166], "racine_carre": 155, "run_python_script_139986790411136": [], "interrompt": 155, "momentan": 155, "ouvert": [155, 168], "closed": 155, "intervenu": 155, "pr\u00e9mun": 155, "manager": 155, "premi\u00e8rel": 156, "demeur": [156, 166], "foncb": 156, "foncc": 156, "format_stack": 156, "runpy": 156, "_run_module_as_main": 156, "_run_cod": 156, "main_global": 156, "run_global": 156, "systemex": 156, "326": 156, "build_main": 156, "argv": 156, "app": 156, "force_all": 156, "build_updat": 156, "builder": 156, "to_build": 156, "310": 156, "updated_docnam": 156, "417": 156, "_read_serial": 156, "docnam": 156, "438": 156, "read_doc": 156, "reader": 156, "parser": 156, "statemachin": 156, "inputlin": 156, "rst": [156, 168], "statemachinew": 156, "input_lin": 156, "input_offset": 156, "next_stat": 156, "check_lin": 156, "3024": 156, "lstrip": 156, "new_subsect": 156, "newabsoffset": 156, "nested_pars": 156, "state_machin": 156, "block": [156, 166], "2785": 156, "underlin": [156, 160], "2355": 156, "explicit_markup": 156, "nodelist": 156, "blank_finish": 156, "explicit_construct": 156, "2367": 156, "expmatch": 156, "2104": 156, "run_direct": 156, "2154": 156, "directive_inst": 156, "run_python_script": 156, "run_python_script_139986791981312": [], "raise_except": 156, "insidef": 156, "exc_typ": 156, "exc_valu": 156, "exc_traceback": 156, "exc_info": 156, "format_tb": 156, "run_python_script_139986791977280": [], "extract_tb": 156, "pr\u00e9cieux": 156, "flask": [156, 172], "excellent": [156, 160], "product": 156, "run_python_script_139986793117056": [], "run_python_script_139986793060800": [], "run_python_script_139986791875328": [], "fautif": 156, "file_to_read": 156, "filenotfounderror": [156, 175], "download_content": 156, "read_fromf_fil": 156, "unicodeencodeerror": 156, "\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9": 156, "\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0": 156, "run_python_script_139986791939904": [], "codec": 156, "ascii_decod": 156, "unicodedecodeerror": 156, "0xc3": 156, "ordinal": 156, "soup\u00e7on": 158, "deprecationwarning": 158, "subsist": 158, "expos": [158, 160], "agac": 158, "fxn": 158, "deprecated": 158, "catch_warning": 158, "simplefilt": 158, "monwarning": 158, "mass": [158, 168], "activ": [158, 160, 173], "d\u00e9bugg": [158, 173], "attaqu": 158, "tkint": [159, 166, 170, 173], "disposit": [159, 168, 170, 173], "convivial": 160, "demandent": 160, "clavi": [160, 166], "clic": [160, 173], "sour": [160, 173], "wxpython": 160, "rich": 160, "pyqt5": 160, "pyqt4": 160, "verion": 160, "jol": 160, "licenc": 160, "graphical": 160, "forum": 160, "discuss": 160, "stackoverflow": 160, "named": 160, "sudo": 160, "tk": [160, 166, 173], "troubl": 160, "Du": 160, "entrem\u00eal": [160, 173], "widget": 160, "pilotent": 160, "contr\u00f4lent": 160, "zone_text": 160, "enrob": 160, "mainloop": [160, 166, 173], "doiv": 160, "config": [160, 173], "gris": [160, 170], "button": [160, 166, 173], "interdir": [160, 168, 173], "gif": 160, "photoimag": 160, "chameau": 160, "entry": [160, 166], "delet": 160, "pos1": 160, "pos2": 160, "differ": 160, "nsecond": 160, "checkbutton": 160, "intvar": 160, "radiobutton": 160, "d\u00e9coch": 160, "deselect": 160, "semblabl": [160, 167, 175], "case1": 160, "case2": 160, "case3": 160, "agiront": 160, "intitul": 160, "listbox": 160, "cliqu": [160, 173], "select_set": 160, "select_clear": 160, "curselect": 160, "indextkk": 160, "adjoindr": [160, 173], "fram": 160, "parent": [97, 160, 170], "scrollbar": 160, "yscrollcommand": 160, "yview": 160, "sid": [160, 166], "tix": 160, "exportselect": 160, "itemconfig": 160, "ttk": 160, "print_fil": 160, "canv": 160, "pixel": 160, "create_lin": 160, "create_rectangl": 160, "create_text": 160, "b\u00e9zi": 160, "assis": 160, "smooth": 160, "gray": 160, "polic": 160, "arial": 160, "arborent": 160, "cnf": 160, "kw": 160, "unbound": 160, "specified": 160, "keyword": [160, 166], "allowed": 160, "activebackground": 160, "activeforeground": 160, "anchor": 160, "background": 160, "bitmap": 160, "borderwidth": 160, "cursor": 160, "disabledforeground": 160, "foreground": 160, "highlightbackground": 160, "highlightcolor": 160, "highlightthickness": 160, "justify": 160, "padx": 160, "pady": 160, "relief": 160, "repeatdelay": 160, "repeatinterval": 160, "takefocus": 160, "textvari": 160, "wraplength": 160, "specific": 160, "compound": 160, "overrelief": 160, "souci": 160, "attendus": 160, "both": 160, "pack_forget": 160, "r\u00e9appara\u00eetr": 160, "re\u00e7u": [160, 166, 168], "columnspan": 160, "rowspan": 160, "grid_forget": 160, "place_forget": 160, "d\u00e9crivent": [160, 166], "focus_set": 160, "pointill": 160, "change_legend": 160, "augmentent": 160, "attach": [160, 166, 168, 173, 175], "mouv": 160, "muet": 160, "ctrl": 160, "alt": 160, "suppr": 160, "keysym": 160, "x_root": 160, "y_root": 160, "occur": 160, "keypress": 160, "keyreleas": 160, "keyboard": 160, "buttonpress": 160, "buttonreleas": 160, "motion": 160, "enter": 160, "leav": [96, 160, 170], "mousewheel": 160, "mous": 160, "visibility": 160, "unmap": 160, "focusin": 160, "focusout": 160, "circulat": 160, "gravity": 160, "reparent": 160, "destroy": [160, 166], "activat": 160, "deactivat": 160, "callback": 160, "registered": 160, "bind": [160, 173], "bind_all": 160, "bind_class": 160, "tag_bind": 160, "brac": 160, "serial": 160, "pressed": 160, "exposed": 160, "keycod": 160, "occurred": 160, "screen": 160, "send_event": 160, "keysym_num": 160, "mov": 160, "curseur": 160, "mod2": 160, "mod3": 160, "mod4": 160, "m4": 160, "button1": 160, "mod5": 160, "button2": 160, "button3": 160, "button4": 160, "b4": 160, "button5": 160, "b5": 160, "mod1": 160, "pressing": 160, "omitted": 160, "virtual": 160, "astring": 160, "arbitrary": 160, "event_generat": [160, 173], "appear": 160, "shortly": 160, "after": 160, "invoked": 160, "specif": [160, 166], "additionally": 160, "unbind": 160, "leak": 160, "returned": 160, "affiche_touche_presse": 160, "evt": 160, "presse": 160, "9261224": 160, "exemple_bind": 160, "python26": 160, "933": 160, "_bind": 160, "_w": 160, "_tkint": 160, "tclerror": 160, "Sa": [160, 166], "d\u00e9sact": [160, 173], "unbind_all": 160, "xsyntax": 160, "p\u00e9ripher": 160, "toplevel": 160, "add_cascad": 160, "mainmenu": 160, "msousmenu": 160, "add_command": 160, "sm1": 160, "sm2": 160, "ajoute_bouton": 160, "deiconify": 160, "geometry": 160, "iconify": 160, "ic\u00f4n": 160, "withdraw": 160, "compl\u00e8tent": 160, "progressbar": 160, "treeview": 160, "dirtre": 160, "fileselectbox": 160, "in\u00e9vit": [160, 173], "win": [160, 173], "appartiennent": 160, "simultan": [160, 166, 167, 173], "nouvelle_fenetr": 160, "sec": 160, "quit": 160, "fenetr": 160, "fileselect": 160, "get_list": 160, "isdir": [160, 168], "listf": 160, "ch": [160, 173], "lifil": 160, "lid": 160, "wm_titl": 160, "fli": 160, "update_chemin": 160, "update_list": 160, "update_sel": 160, "cget": 160, "isol": [160, 166, 168], "gestion": [160, 170], "\u00e9v\u00e9nementiel": 160, "diss\u00e9min": 160, "espion": 160, "r\u00e9activ": [160, 173], "scientif": 160, "lap": 160, "millisecond": [160, 163, 173], "after_cancel": 160, "personnifi": 160, "substitu": [160, 166], "malistbox": 160, "bg": 160, "itemconfigur": 160, "prolong": 160, "mafenetr": 160, "commande_bouton1": 160, "commande_bouton2": 160, "lab": 160, "pointeur": 160, "r\u00e9cept": 160, "consult": 160, "intervenus": 160, "offrent": [160, 167], "feront": 160, "mafenetreseq": 160, "perso": 160, "rooty": 160, "conservent": 161, "classeperson": 161, "_field": 161, "comptag": 161, "agil": 161, "flagr": 161, "append_time_list": 161, "append_time_dequ": 161, "05263450000074954": [], "042822200000045996": [], "ao\u00fbt": 163, "312000": 163, "12614": 163, "712000": 163, "000081": [], "17478": 163, "calendar": [163, 170], "itermonthdays2": 163, "timestamp": 163, "expriment": 163, "compr\u00e9hensibl": 163, "fromtimestamp": 163, "1694771738": [], "0079732": [], "domin": 164, "japon": 164, "asiat": 164, "cp1252": [164, 167], "deviendr": 164, "e\u00e9": 164, "sb": 164, "platform": [164, 170], "getdefaultencoding": 164, "getdefaultlocal": 164, "0x7f518c9095a0": [], "en_us": 164, "contr\u00f4l": [164, 168], "ordereddict": 165, "namedtupl": 165, "\u00e9l\u00e9mentair": 166, "aisanc": 166, "acquer": 166, "ruptur": 166, "combinent": 166, "nuanc": 166, "reconna\u00eetr": 166, "inconnus": 166, "iskeyword": 166, "until": 166, "kwlist": 166, "async": 166, "await": 166, "nonlocal": 166, "ajoutent": 166, "particuili": 166, "grammar": 166, "absent": 166, "affil": 166, "condition2": 166, "condition3": 166, "instruction5": 166, "instruction6": 166, "instruction7": 166, "instruction8": 166, "transcrivent": 166, "prioritair": 166, "juxtapos": [166, 167, 175], "press": [166, 173], "repons": 166, "rget": 166, "nopass": 166, "indented": 166, "scrupul": 166, "d\u00e9guis": 166, "cran": 166, "pr\u00e9matur": 166, "convertibl": 166, "run_python_script_139986801541952": [], "collag": 166, "eratosthen": 166, "d\u00e9nich": 166, "3i": 166, "ray": 166, "run_python_script_139986795763840": [], "mauv": 166, "endroitsfootnot": 166, "expert": 166, "morceau": [166, 167, 175], "coordonnees_polair": 166, "tangent": 166, "414214": 166, "118034": 166, "434949": 166, "565051": 166, "commander_carte_orang": 166, "chequ": 166, "problem_zon": 166, "surpren": 166, "retor": 166, "valeur_": 166, "param_": 166, "identit": 166, "portent": 166, "run_python_script_139986797996096": [], "required": 166, "positional": 166, "ndigit": 166, "floating": 166, "digit": 166, "may": 166, "negat": 166, "pho": 166, "r\u00e9percuss": 166, "r\u00e9percut": 166, "somme_n_premier_term": 166, "statut": 166, "ininterrompu": 166, "fact": 166, "factorielle_non_recurs": 166, "run_python_script_139986794201920": [], "portee_vari": 166, "run_python_script_139986794588992": [], "opposit": 166, "locale_global": 166, "affiche_pair": 166, "fonction_local": 166, "run_python_script_139986796630016": [], "ind\u00e9termin": 166, "liste_valeur_1": 166, "liste_valeur_p": 166, "nom_1": 166, "nom_q": 166, "v_q": 166, "n\u00e9cess": 166, "nom_fonct": 166, "reprendr": 166, "fonction_yield": 166, "run_python_script_139986796177344": [], "4142135623730951": 166, "78539816339744828": 166, "7853981633974483": 166, "agreg": 166, "synonym": 166, "perl": 166, "est_pair": 166, "0x7f5137c146d0": [], "issubclass": 166, "varient": 167, "typag": 167, "desquel": 167, "sc": 167, "suivront": [167, 168], "maint": 167, "repris": 167, "privileg": 167, "\u00e9num": 167, "impossibil": 167, "expliquent": 167, "comprennent": 167, "opertor": 167, "zz": 167, "guillemet": 167, "interchange": 167, "1morceau": 167, "commod": 167, "recoll": 167, "pourcentag": 167, "usit": 167, "lexical": 167, "567": 167, "ed": 167, "med": 167, "eniem": 167, "endswith": 167, "printf": 167, "formatting": 167, "concis": 167, "transcrit": 167, "abra": 167, "cad": 167, "abracadabr": 167, "coordinat": 167, "24n": 167, "81w": 167, "coord": 167, "centered": 167, "aleft": 167, "alignedb": 167, "oct": 167, "1234567890": 167, "101010": 167, "0x2a": 167, "0o52": 167, "0b101010": 167, "indroduit": 167, "excentr": 167, "notabl": 167, "formattag": 167, "run_python_script_139986620353472": [], "1j": 167, "2j": 167, "fromhex": 167, "2ef0": 167, "f1f2": 167, "xf0": 167, "xf1": 167, "xf2": 167, "sigl": 167, "soupless": 167, "compare_key": 167, "run_python_script_139986450028032": [], "verron": 167, "dison": 167, "ensemb": 167, "litt\u00e9ral": 167, "juxtaposit": 167, "0x7f5136892480": [], "l3": 167, "surprendr": 167, "1111": 167, "dress": 167, "dinv": 167, "parcout": 167, "dicionnair": 167, "cledict": 167, "0x0120db90": 167, "18930576": 167, "0x120db90": 167, "hexad\u00e9cimal": 167, "n\u00e9cessitent": [167, 170], "donnent": 167, "st\u00e9thoscop": 167, "5555555555555554": 167, "__wd__": 167, "__builtins__": [167, 170], "reviendr": 167, "divmod": 167, "transpara\u00eetr": 167, "traduir": 167, "influenc": 167, "concepteur": 168, "puissent": 168, "textuel": 168, "reportlab": 168, "allong": [168, 170], "perturb": 168, "separated": 168, "ppend": 168, "ead": 168, "tampon": 168, "flush": 168, "technolog": [168, 173], "diverg": 168, "d\u00e9coupag": 168, "d\u00e9cryptent": 168, "relu": 168, "acaracter": 168, "r\u00e9pandus": 168, "exemplezip": 168, "fz": 168, "infolist": 168, "date_tim": 168, "file_siz": 168, "testzip": 168, "zip_deflated": 168, "zip_stored": 168, "nom_fichier_dans_zip": 168, "joint": 168, "couron": 168, "succes": 168, "spammeur": 168, "smtplib": 168, "mim": 168, "multipart": 168, "mimemultipart": 168, "mimebas": 168, "mimetext": 168, "formatdat": 168, "envoyer_mail": 168, "aqui": 168, "msg": 168, "localtim": 168, "set_payload": 168, "encode_base64": 168, "add_head": 168, "attachment": 168, "basenam": 168, "smtp": 168, "gmail": 168, "ehlo": 168, "starttl": 168, "login": 168, "mot_de_p": 168, "sendmail": 168, "as_string": 168, "destinatair": 168, "manuel": 168, "centain": 168, "journ": 168, "r\u00e9organis": 168, "musical": 168, "compl\u00e9mentair": 168, "mutagen": [168, 175], "famili": 168, "osx": 168, "d\u00e9bouchent": 168, "abspath": 168, "commonprefix": 168, "getatim": 168, "getmtim": 168, "getctim": 168, "getsiz": 168, "isab": 168, "isfil": 168, "splitext": 168, "chdir": 168, "mkdir": 168, "makedir": 168, "repfinal": 168, "renam": 168, "rmdir": 168, "liste_fichier_repertoir": 168, "ob\u00e9iss": 168, "rep": 168, "fo": 168, "gitignor": 168, "gitattribut": 168, "appveyor": 168, "yml": 168, "_latex": 168, "ruff_cach": 168, "temp_notebook": 168, "circlec": 168, "jug": 168, "relir": 168, "judici": 168, "rawiobas": 168, "affili": 168, "quinz": 168, "soul\u00e8vent": 168, "modil": 168, "1415692": 168, "fb": 168, "sauvegard": 168, "abcdedf": 168, "chain": 168, "calcule_norm": 168, "dic": 168, "830951894845301": 168, "nom_modul": 170, "diff\u00e9renc": 170, "pyc": 170, "traduct": 170, "bytecod": 170, "exemple_class": 170, "__import__": 170, "nom_module_sans_extens": 170, "absolus": 170, "python36_x64": 170, "exe": 170, "__all__": 170, "inh\u00e9rent": 170, "posix": 170, "depending": 170, "unlink": 170, "eith": 170, "posixpath": 170, "ntpath": 170, "curd": 170, "representing": 170, "pard": 170, "pathnam": 170, "separator": 170, "extsep": 170, "altsep": 170, "alternat": 170, "pathsep": 170, "linesep": 170, "defpath": 170, "execut": 170, "devnull": 170, "devic": 170, "program": 170, "stand": 170, "opend": 170, "module1": 170, "module2": 170, "_frozen_importlib": 170, "frozen": 170, "_imp": 170, "_thread": 170, "_warning": 170, "_weakref": 170, "python_cour": 170, "englob": 170, "mesmodul": 170, "part1": 170, "niveaud": 170, "part2": 170, "niveaudeuxb": 170, "subpackage1": 170, "modulex": 170, "subpackage2": 170, "moduley": 170, "pr\u00e9install": 170, "fur": [170, 175], "asyncio": [170, 172], "socket": 170, "cgi": 170, "cmath": 170, "gc": [170, 173], "getopt": 170, "htmllib": 170, "pathlib": 170, "sqlite3": 170, "gestionnair": 170, "threading": [170, 173], "dom": 170, "infegal": 170, "esp": 170, "141964": [], "carlo": 170, "integrale_monte_carlo": 170, "6664643080133164": [], "simpliqu": 170, "interfa\u00e7ag": 170, "h\u00e9bergent": 170, "maintenus": 170, "ponctuel": 170, "ambiti": 170, "tensorflow": 170, "setup": 170, "apppliqu": 171, "run_python_script_139986778962560": [], "0x7f513639add0": [], "ultrajson": 171, "restaur": 171, "crucial": 171, "d\u00e9chiffr": 171, "librar": 171, "multithreading": 172, "bibliograph": 172, "gevent": 172, "uvloop": 172, "blazing": 172, "networking": 172, "sanic": 172, "cython": 172, "openmp": [172, 173], "2004": 173, "microprocesseur": 173, "transistor": 173, "multicoeur": 173, "disjoint": 173, "entam": 173, "processus": 173, "achev": 173, "asynchron": 173, "communiquent": 173, "synchronisent": 173, "monthread": 173, "proviennent": 173, "exager": 173, "etat": 173, "temporis": 173, "ojet": 173, "diziem": 173, "ind\u00e9fin": 173, "is_set": 173, "dixiem": 173, "verrous": 173, "indexfrr": 173, "veulent": 173, "11111111112222222222": 173, "acquir": 173, "entrem\u00ealent": 173, "sien": 173, "b\u00e2t": 173, "thread_fin": 173, "thread_resultat": 173, "lance_thread": 173, "legnd": 173, "text2": 173, "thread_fini_fonct": 173, "transit": [13, 94, 173], "concernent": 173, "envoient": 173, "put": 173, "\u00e9tranger": 173, "get_now": 173, "put_now": 173, "qsiz": 173, "chevauchent": 173, "soumettr": 173, "subm": 173, "max_work": 173, "prim": 173, "112272535095293": 173, "112582705942171": 173, "115280095190773": 173, "115797848077099": 173, "1099726899285419": 173, "sqrt_n": 173, "ind\u00e9chiffr": 173, "logg": 173, "logger": 173, "get_logg": 173, "getlogg": 173, "setlevel": 173, "asctim": 173, "threadnam": 173, "levelnam": 173, "streamhandl": 173, "stdout": 173, "setformatt": 173, "addhandl": 173, "fh": 173, "filehandl": 173, "current_thread": 173, "end1": 173, "end2": 173, "end3": 173, "thread_0": 173, "thread_1": 173, "515": [], "322": [], "328": [], "promess": 173, "bient\u00f4t": 173, "as_completed": 173, "compliquent": 173, "parallel_numpy_dot": 173, "vb": 173, "06460040965832": [], "distribute_sum": 173, "inlass": 173, "enclench": 173, "distrinct": 173, "d\u00e9velopeur": 173, "multithread": 173, "nogil": 173, "parallelism": 173, "parallelizing": 173, "interp\u00e9teur": 173, "pythonnet": 173, "py4j": 173, "pyjnius": 173, "nuir": 173, "pluriel": 175, "singuli": 175, "formulair": 175, "1913": 175, "1978": 175, "1914": 175, "1941": 175, "1980": 175, "int\u00e9resson": 175, "r\u00e9pondent": 175, "0123456789": 175, "z0": 175, "taxinom": 175, "tax": 175, "quadrupl": 175, "vba": 175, "vbatd1_4": 175, "absenc": 175, "suspens": 175, "yoyo": 175, "dupont": 175, "tc": 175, "repl": 175, "valident": 175, "flag": 175, "chanson": 175, "track03": 175, "track": 175, "audiotrack": 175, "pist": 175, "audiop": 175, "audio": 175, "heart": 175, "heartland": 175, "heartach": 175, "ache": 175, "easyid3": 175, "infomp3": 175, "tag": 175, "all_fil": 175, "repertoir": 175, "heart_notitle_mot": 175, "liheart": 175, "notitl": 175, "nbmot": 175, "nbsong": 175, "album": 175, "tracknumb": 175, "moymot": 175, "nom_du_group": 175, "groupdict": 175, "trouve_toute_fonct": 175, "expm": 175, "get_function_list_definit": 175, "ndef": 175, "z_": 175, "z_0": 175, "get_function_list_call": 175, "detection_fonction_pas_appele": 175, "sfil": 175, "funcdef": 175, "funccal": 175, "fonction_inutil": 175, "errno": 175, "nbl": [], "title2": [], "61155": [], "61151": [], "81204": [], "11048": [], "11047": [], "70155": [], "20044": [], "20043": [], "50108": [], "81194": [], "run_python_script_139790434528256": 40, "0x7f2397449d20": 40, "run_python_script_139790439231360": 152, "run_python_script_139790824496064": 152, "run_python_script_139790824492096": 152, "run_python_script_139790827215360": 152, "run_python_script_139790815204096": 152, "run_python_script_139790814825088": 152, "425443400000404": 152, "882326799999646": 152, "8523537999999462": 152, "run_python_script_139790808247680": 152, "run_python_script_139790762984000": 155, "run_python_script_139790729949760": 155, "run_python_script_139790762541696": 155, "run_python_script_139790764159936": 156, "run_python_script_139790762644608": 156, "run_python_script_139790761486464": 156, "run_python_script_139790765229312": 156, "run_python_script_139790765136896": 156, "run_python_script_139790764137216": 156, "04626930000085849": 161, "046163399999386456": 161, "376500": 163, "1694773424": 163, "3852384": 163, "0x7f23af8255a0": 164, "run_python_script_139790771044928": 166, "run_python_script_139790774741248": 166, "run_python_script_139790771996544": 166, "run_python_script_139790773971072": 166, "run_python_script_139790773826368": 166, "run_python_script_139790774231296": 166, "run_python_script_139790726141376": 166, "0x7f239535fb80": 166, "run_python_script_139790821887168": 167, "run_python_script_139790826146304": 167, "0x7f2395e22500": 167, "142168": 170, "6669828348425172": 170, "run_python_script_139790780218176": 171, "0x7f239552d120": 171, "760": 173, "639": 173, "554": 173, "765": 173, "728": 173, "664": 173, "939": 173, "05499599590244": 173, "test_compos": 97, "__matmul__": 97, "affair": 97, "go\u00fbt": 97, "decompos": 97, "applique_decomposition_identit": 97, "test_decompose1": 97, "test_decompose2": 97, "considered": 97, "textwrap": [96, 98], "profondeur_maximal": [96, 98], "pleft": [96, 98], "pright": [96, 98], "61100": 7, "61097": 7, "81140": 7, "11034": 7, "11033": 7, "70105": 7, "20037": 7, "20036": 7, "50067": 7, "81132": 7, "03061224": 37, "95408163": 37, "93877551": 37, "92346939": 37, "8877551": 37, "83163265": 37, "7755102": 37, "71938776": 37, "range_lik": 96, "0x7f1dc597b220": 96, "\u00e9met": 96, "random_generator": 96, "15382301030555623": 96, "8963148242847391": 96, "5960121288362235": 96, "20451752514212185": 96, "8937299506306294": 96, "leave_generator": 96, "add_al": 96, "bcdefghijkl": 96, "al\u00e9aatoir": 96, "numeros": 96, "3732": 96, "04it": 96, "2136": 96, "80it": 96, "profondeur_somme_count": 98, "sleft": 98, "cleft": 98, "sright": 98, "cright": 98, "6666666666666667": 98}, "objects": {"teachpyx.examples": [[2, 0, 0, "-", "classiques"], [2, 0, 0, "-", "construction_classique"], [5, 0, 0, "-", "numpysex"]], "teachpyx.examples.classiques": [[2, 1, 1, "", "commentaire_accentues"], [2, 1, 1, "", "dictionnaire_modifie_dans_la_boucle"], [2, 1, 1, "", "dix_entiers_carre"], [2, 1, 1, "", "repetition_a_eviter"], [2, 1, 1, "", "str2date"]], "teachpyx.examples.construction_classique": [[2, 1, 1, "", "compte"], [2, 1, 1, "", "construit_matrice_carree"], [2, 1, 1, "", "enumerate_permutations"], [2, 1, 1, "", "enumerate_permutations_recursive"], [2, 1, 1, "", "integrale"], [2, 1, 1, "", "mat2text"], [2, 1, 1, "", "mat2vect"], [2, 1, 1, "", "minindex"], [2, 1, 1, "", "recherche"], [2, 1, 1, "", "recherche_dichotomique"], [2, 1, 1, "", "somme"], [2, 1, 1, "", "text2mat"], [2, 1, 1, "", "triindex"], [2, 1, 1, "", "vect2mat"]], "teachpyx.examples.numpysex": [[5, 1, 1, "", "numpy_matrix2list"], [5, 1, 1, "", "numpy_types"]], "teachpyx.faq": [[3, 0, 0, "-", "faq_exception"], [3, 0, 0, "-", "faq_numpy"], [3, 0, 0, "-", "faq_python"]], "teachpyx.faq.faq_exception": [[3, 1, 1, "", "call_stack"]], "teachpyx.faq.faq_numpy": [[3, 1, 1, "", "to_float32"]], "teachpyx.faq.faq_python": [[3, 2, 1, "", "Distribution"], [3, 3, 1, "", "PQPipError"], [3, 1, 1, "", "class_getitem"], [3, 1, 1, "", "difference_div"], [3, 1, 1, "", "entier_grande_taille"], [3, 1, 1, "", "enumerate_regex_search"], [3, 1, 1, "", "get_day_name"], [3, 1, 1, "", "get_installed_distributions"], [3, 1, 1, "", "get_month_name"], [3, 1, 1, "", "get_package_info"], [3, 1, 1, "", "get_packages_list"], [3, 1, 1, "", "information_about_package"], [3, 1, 1, "", "list_of_installed_packages"], [3, 1, 1, "", "property_example"], [3, 1, 1, "", "python_path"], [3, 1, 1, "", "same_variable"], [3, 1, 1, "", "sortable_class"], [3, 1, 1, "", "stringio"]], "teachpyx.practice": [[6, 0, 0, "-", "rues_paris"]], "teachpyx.practice.rues_paris": [[6, 1, 1, "", "bellman"], [6, 1, 1, "", "connected_components"], [6, 1, 1, "", "distance_haversine"], [6, 1, 1, "", "distance_paris"], [6, 1, 1, "", "euler_path"], [6, 1, 1, "", "eulerien_extension"], [6, 1, 1, "", "get_data"], [6, 1, 1, "", "graph_degree"], [6, 1, 1, "", "kruskal"], [6, 1, 1, "", "possible_edges"]], "teachpyx.tools": [[7, 1, 1, "", "decompress_zip"], [7, 1, 1, "", "download_and_unzip"], [7, 1, 1, "", "draw_diagram"], [7, 0, 0, "-", "profiling"], [7, 1, 1, "", "total_size"]], "teachpyx.tools.profiling": [[7, 2, 1, "", "ProfileNode"], [7, 1, 1, "", "profile"], [7, 1, 1, "", "profile2df"], [7, 1, 1, "", "profile2graph"]], "teachpyx.tools.profiling.ProfileNode": [[7, 4, 1, "", "add_called_by"], [7, 4, 1, "", "add_calls_to"], [7, 4, 1, "", "as_dict"], [7, 4, 1, "", "filter_node_"], [7, 4, 1, "", "get_root"], [7, 5, 1, "", "key"], [7, 4, 1, "", "to_json"], [7, 4, 1, "", "to_text"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:exception", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python fonction"], "2": ["py", "class", "Python classe"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python m\u00e9thode"], "5": ["py", "property", "Python propri\u00e9t\u00e9"]}, "titleterms": {"chang": [0, 97, 113, 120], "log": 0, "0": [0, 99], "3": [0, 8, 13, 33, 34, 41, 50, 58, 59, 70, 76, 77, 78, 88, 90, 97, 99, 107, 108, 113, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 150, 151, 170], "1": [0, 8, 13, 33, 34, 41, 50, 55, 58, 59, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 91, 99, 107, 108, 112, 113, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 150, 152, 166, 170], "survol": 1, "algorithm": [1, 27, 45, 47, 48, 49, 51, 53, 59, 65, 91, 92, 94, 102, 111, 126, 128, 129, 130, 131, 166], "ordre": [1, 49, 53, 60, 166], "grandeur": 1, "comprendr": 1, "co\u00fbt": [1, 27, 81, 82, 88, 91, 101, 111, 136], "mot": [1, 40, 51, 52, 58, 108, 136], "cl\u00e9": [1, 40, 136, 167], "catalogu": 1, "problem": [1, 16, 41, 47, 50, 53, 57, 60, 64, 65, 92, 99, 128, 129, 146, 147, 173], "np": [1, 92], "complet": [1, 92, 99, 133, 175], "id\u00e9": [1, 57, 58, 131, 146, 147], "d\u00e9monstr": [1, 80], "lien": [1, 36], "articl": [1, 14], "livr": 1, "Pour": [1, 120], "entra\u00een": 1, "googl": 1, "recommand": 1, "exampl": [2, 5], "construction_class": 2, "teachpyx": [2, 3, 6], "classiqu": [2, 4, 62, 152, 160, 161, 162, 166], "python": [2, 40, 42, 44, 45, 47, 94, 97, 112, 142, 143, 144, 145, 152, 166, 167, 173, 176], "accept": [2, 42], "accent": [2, 42, 45, 168], "modifi": [2, 40, 41, 91, 162, 166, 167], "dictionnair": [2, 8, 40, 41, 58, 62, 101, 105, 110, 118, 136, 137, 152, 162, 167], "parcour": [2, 63, 65, 92, 162], "Quelle": [2, 3, 42, 113], "diff\u00e9rent": [2, 3, 40, 42, 51, 52, 91], "entre": [2, 3, 34, 40, 42, 51, 52, 91, 109], "return": [2, 40, 42, 136], "print": [2, 40, 42, 167], "calcul": [2, 19, 27, 32, 33, 35, 38, 40, 48, 49, 50, 54, 56, 60, 61, 62, 64, 88, 89, 90, 91, 107, 119, 138, 139, 148, 149, 162], "somm": [2, 54, 89, 105, 162], "dix": [2, 162], "premi": [2, 36, 56, 57, 59, 65, 98, 102, 105, 111, 129, 130, 131, 144, 145, 162, 173], "entier": [2, 122, 123, 162, 167], "carr": [2, 103, 132, 133, 162], "evit": [2, 162], "effectu": [2, 88, 162], "m\u00eam": [2, 36, 51, 52, 53, 88, 91, 111, 142, 162], "appel": [2, 41, 152, 156, 162, 166], "deux": [2, 18, 51, 52, 58, 60, 83, 88, 89, 91, 113, 118, 152, 162], "fois": [2, 89, 162], "convers": [2, 17, 162, 167], "cha\u00een": [2, 26, 40, 41, 101, 162, 167], "caracter": [2, 26, 40, 41, 162, 164, 167, 175], "datetim": [2, 162, 163], "comptag": [2, 162], "fonction": [2, 4, 16, 25, 34, 35, 36, 38, 40, 41, 48, 56, 58, 59, 81, 82, 88, 89, 91, 99, 103, 107, 109, 113, 117, 121, 134, 135, 136, 137, 139, 152, 160, 162, 165, 166, 167, 175], "comm": [2, 81, 82, 162], "parametr": [2, 40, 41, 56, 57, 81, 82, 162, 166], "matric": [2, 31, 35, 49, 55, 62, 65, 83, 84, 88, 91, 99, 118, 162, 167], "vecteur": [2, 162], "minimum": [2, 162], "posit": [2, 99, 162], "recherch": [2, 40, 116, 136, 143, 150, 151, 162], "index": [2, 33, 34, 35, 36, 162], "dichotom": [2, 54, 78, 116, 150, 151, 162], "tri": [2, 8, 49, 58, 59, 81, 82, 102, 107, 121, 162], "gard": [2, 60, 162], "initial": [2, 17, 162], "faq": [3, 4, 42], "faq_python": 3, "divis": [3, 42], "Quel": [3, 42], "enti": [3, 42], "plus": [3, 28, 42, 48, 52, 53, 54, 58, 59, 61, 62, 83, 84, 88, 89, 91, 98, 109, 113, 120, 121, 124, 125, 126, 127, 132, 133, 138, 139, 150, 151, 156, 168, 173, 175], "grand": [3, 42, 48, 54, 58, 98, 124, 125], "tabul": [3, 42], "espac": [3, 42, 64, 91], "comment": [3, 42], "iter": [3, 25, 42, 87, 96, 116, 152, 155, 166], "r\u00e9sultat": [3, 42, 48, 56, 85, 86, 88, 91, 160], "express": [3, 8, 42, 64, 108, 142, 143, 174, 175], "r\u00e9guli": [3, 8, 42, 64, 108, 142, 143, 174, 175], "r\u00e9cuper": [3, 34, 36, 42, 56, 156], "nom": [3, 42, 168, 170], "jour": [3, 34, 36, 42], "part": [3, 24, 33, 42, 144, 145, 150, 151], "dat": [3, 34, 42, 47, 163], "mois": [3, 42], "list": [3, 18, 19, 27, 40, 41, 42, 90, 101, 118, 136, 150, 152, 160, 166, 167, 168, 170], "modul": [3, 26, 40, 41, 42, 45, 63, 106, 113, 142, 143, 169, 170], "install": [3, 42, 45], "pourquoi": [3, 42, 58, 88], "pand": [3, 8, 23, 34, 36, 42], "numpy": [3, 5, 8, 22, 32, 33, 35, 36, 37, 42, 112, 119], "march": [3, 33, 42, 56, 170], "sous": [3, 9, 42, 54, 160], "window": [3, 9, 42], "pip": [3, 42], "obten": [3, 42, 117, 155], "inform": [3, 42, 167, 173], "packag": [3, 42, 45], "propriet": [3, 41, 42, 152], "\u00e9vit": [3, 42], "sy": [3, 42], "path": [3, 42], "append": [3, 42], "quand": [3, 42, 139], "d\u00e9velopp": [3, 42], "Qu": [3, 42, 134], "typ": [3, 5, 35, 36, 40, 41, 42, 152, 155, 156, 167], "immuabl": [3, 40, 41, 42, 167], "immut": [3, 41, 42, 167], "class": [3, 16, 25, 36, 40, 41, 42, 94, 95, 97, 98, 99, 100, 132, 133, 134, 135, 152, 153, 154, 155, 160], "sortabl": [3, 42], "a": [3, 17, 42, 88, 92, 99, 103, 175], "quoi": [3, 42, 103, 142, 175], "sert": [3, 42, 103, 142, 175], "stringio": [3, 42], "faq_except": 3, "faq_numpy": 3, "cod": [4, 10, 16, 40, 66, 74, 78, 80, 113, 136, 137], "inclus": [4, 152], "dan": [4, 40, 53, 60, 88, 91, 99, 101, 136, 142, 143, 160, 168], "librair": 4, "construct": [4, 74, 75, 90, 134, 152, 160, 161, 162, 166], "impl\u00e9ment": [4, 22, 51, 114, 122, 123, 140, 141], "exercic": [4, 19, 27, 33, 34, 44, 58, 59, 64, 67, 76, 78, 79, 80, 87, 88, 89, 91, 94, 107, 108, 113, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 150, 151], "numpysex": 5, "oper": [5, 21, 32, 33, 34, 35, 40, 41, 88, 97, 100, 101, 132, 133, 152, 166], "matrix": [5, 32, 33], "Quels": [5, 42], "support": [5, 42], "practic": 6, "rues_par": 6, "tool": 7, "decompress_zip": 7, "download_and_unzip": 7, "draw_diagram": 7, "total_siz": 7, "profiling": [7, 8, 94, 113, 114, 115], "2022": [8, 9, 14, 90, 91], "11": [8, 13, 78], "31": [8, 13], "rappel": [8, 13], "feuill": [8, 13, 34, 98], "rout": [8, 13], "s\u00e9anc": [8, 13, 67, 93], "7": [8, 36, 99, 126, 127, 143, 150, 151], "9": 8, "introduct": [8, 45, 48, 160], "2": [8, 13, 33, 34, 41, 50, 55, 58, 59, 64, 68, 69, 70, 72, 73, 76, 77, 78, 79, 82, 84, 86, 87, 88, 99, 107, 108, 112, 113, 116, 118, 119, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 152, 170], "14": [8, 70, 71], "programm": [8, 27, 38, 40, 41, 44, 92, 126, 127, 129, 133, 170], "dynam": [8, 34, 92, 126, 127, 129, 166], "voyageur": [8, 63], "commerc": [8, 28, 63], "21": [8, 80], "4": [8, 13, 21, 33, 34, 58, 59, 75, 76, 77, 88, 99, 108, 113, 122, 123, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 150], "28": 8, "graph": [8, 34, 36, 49, 55, 56, 87, 92, 99], "5": [8, 34, 58, 76, 99, 113, 126, 127, 142, 143, 150, 151], "10": [8, 69], "s\u00e9rialis": [8, 25, 26, 109, 171], "test": [8, 38, 40, 41, 45, 52, 60, 91, 120, 150, 151, 166], "unitair": [8, 40, 52, 91, 120], "6": [8, 34, 58, 73, 99, 126, 127, 142, 143, 150, 151], "12": [8, 9, 81, 82], "webscrapping": 8, "19": 8, "top": [8, 59], "k": [8, 59, 124, 125], "8": [8, 13, 99, 126, 127, 143], "26": [8, 68, 72, 91], "07": 9, "utilis": [9, 38, 40, 58, 59, 91, 107, 108, 113, 134, 136, 137, 154, 155, 160], "cartopy": 9, "wsl": 9, "2023": [10, 11, 12, 13, 14], "08": [10, 11], "03": 10, "jam": 10, "09": [11, 12], "\u00e9nigm": [11, 16, 21], "hermion": 11, "06": 12, "ensa": 12, "collect": 14, "p\u00e9riss": 14, "galler": 15, "exempl": [15, 33, 97, 115, 152, 155, 166, 167, 168, 170, 175], "L": 16, "einstein": 16, "r\u00e9solu": 16, "permut": [16, 60, 63, 95, 97], "La": [16, 35, 36, 54, 126, 139, 147], "rul": 16, "explic": 16, "descript": 16, "float": [17, 150], "probability": 17, "float64": 17, "x": [17, 61, 84, 91, 97], "float32": 17, "interval": 17, "length": 17, "distribu": [17, 34, 35], "an": 17, "answer": 17, "to": 17, "the": 17, "question": [17, 77, 154], "similar": 17, "what": 17, "about": 17, "not": [17, 67, 74, 75, 76, 77, 78, 79, 80], "strict": 17, "comparison": 17, "conclus": [17, 79], "Le": [18, 40, 155, 176], "gil": [18, 173], "parallel": 18, "Un": [18, 28, 48, 97, 99, 100, 101, 120, 167, 170, 173], "autr": [18, 19, 40, 81, 99, 107, 113, 118, 120, 134, 142, 143, 152, 160, 163, 171], "sc\u00e9nario": 18, "hypercub": 19, "q1": [19, 24, 35, 36, 49, 51, 53, 56, 60, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 105, 106, 109, 114, 124, 125, 148, 149], "tripl": 19, "r\u00e9curs": [19, 41, 81, 82, 116, 136, 166], "q2": [19, 24, 35, 36, 49, 51, 53, 56, 60, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 105, 106, 109, 114, 124, 125, 148, 149], "comparaison": [19, 54, 166], "q3": [19, 24, 35, 36, 49, 51, 56, 60, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 105, 106, 109, 114, 124, 125, 148, 149], "pr\u00e9cis": [19, 27, 48, 138, 139], "q4": [19, 24, 35, 36, 49, 51, 56, 60, 69, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 105, 106, 114, 148, 149], "astuc": [20, 38, 40], "lambd": [20, 34, 40, 166], "function": [20, 34], "mathador": 21, "point": [22, 34, 41, 63, 81, 82, 88, 91, 170], "acced": 22, "\u00e9l\u00e9ment": [22, 33, 48, 59, 74, 101, 105, 136, 166], "particuli": [22, 35], "groupby": 23, "valeur": [23, 35, 36, 41, 49, 83, 84, 111, 136, 155, 166], "manqu": [23, 83, 84], "dam": 24, "json": [25, 26, 106, 109, 171], "ecritur": [25, 40, 142, 166, 168], "lectur": [25, 34, 40, 44, 142, 168], "limit": 25, "rapid": [25, 54, 58, 59, 61, 88, 109, 113, 121, 132, 133, 138, 139], "pickl": [25, 109], "Les": [25, 40, 59, 65, 126, 147, 155, 160, 166, 175], "r\u00e9duir": 25, "taill": [25, 48, 91, 120], "cas": [25, 48, 88, 91, 99, 160, 167, 170], "binair": [25, 168, 171], "g\u00e9ner": [25, 33, 55, 96, 105, 158, 166], "protobuf": [26, 106], "schem": 26, "compil": [26, 152, 166], "import": [26, 41, 160, 170], "cr\u00e9": [26, 34, 35, 91, 142, 160], "plusieur": [26, 34, 160, 166, 170], "expliqu": [27, 58, 80], "cop": [27, 40, 152, 167, 168], "erreur": [27, 36, 40, 56, 155, 156], "logiqu": [27, 118, 166], "h\u00e9ritag": [27, 40, 41, 99, 134, 135, 152, 155], "doubl": 27, "r\u00e9flex": 28, "autour": [28, 152], "voyag": 28, "tsp": [28, 60], "Des": [28, 38, 40, 120], "vill": [28, 60], "tir": [28, 60, 63, 91], "hasard": [28, 119], "crois": [28, 34], "noeud": 28, "d\u00e9part": [28, 36], "const": [28, 41, 107, 167], "peu": [28, 35, 48], "al\u00e9atoir": [28, 33, 49, 55, 60, 63, 81, 82, 83, 84, 90, 91, 96, 99, 107], "comput": 29, "tim": 29, "datafram": [30, 31, 34, 36, 167], "matriciel": [32, 33, 35, 62], "optimis": [33, 56, 57, 81, 82, 88, 89, 102, 171], "array": 33, "creation": 33, "notion": [33, 109, 136, 173], "datatyp": 33, "dimens": [33, 62, 91, 118, 124, 125], "slicing": 33, "fancy": 33, "indexing": 33, "view": 33, "contr": 33, "copy": [33, 152], "manipul": [33, 34, 36, 167, 168], "shap": 33, "echiqui": 33, "cribl": 33, "erathosthen": 33, "broadcasting": [33, 35], "r\u00e9duct": 33, "algebr": 33, "lin\u00e9air": [33, 54], "simpl": [33, 51, 94, 152, 166, 173], "nombr": [33, 41, 48, 50, 55, 88, 99, 130, 131, 166, 167], "statist": 33, "retrouv": [33, 88], "ser": [33, 34, 36, 56], "scipy": [33, 119], "simul": [33, 56, 57, 92, 102], "r\u00e9gress": 33, "estim": [33, 48, 56, 57, 87], "maximis": 33, "vraisembl": 33, "r\u00e9f\u00e9rent": 33, "el\u00e9ment": [33, 34], "r\u00e9pons": [33, 34, 35, 36, 49, 51, 53, 56, 58, 59, 60, 105, 106, 107, 108, 113], "\u00e9critur": [34, 106, 120], "notat": [34, 167], "symbol": 34, "fichi": [34, 40, 45, 142, 143, 148, 149, 164, 168, 170], "excel": [34, 106, 142, 143], "filtr": 34, "union": 34, "sort": [34, 169], "group": [34, 175], "by": 34, "join": 34, "pivot": [34, 112], "filt": 34, "merg": 34, "fusion": [34, 36], "tableau": [34, 35, 37, 40, 99, 118, 119], "moyen": [34, 81, 82, 83, 84, 98], "Avec": [34, 91], "san": [34, 64, 107, 168], "plot": 34, "don": [34, 36, 38, 40, 56, 65, 81, 82, 87, 91, 94, 99, 106, 118, 126, 128, 129, 171], "nuag": [34, 81, 82], "matplotlib": 34, "mariag": 34, "annex": 34, "\u00e9cart": 34, "mari": 34, "version": [35, 36, 44, 55, 59, 75, 78, 103, 111, 116, 120], "court": [35, 36, 67, 97, 126, 127], "enonc": [35, 36, 47, 49, 50, 51, 53, 54, 56, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 106, 107, 108, 113], "ma\u00eetris": [35, 36], "slic": 35, "nan": [35, 36], "chi_2": 35, "contingent": [35, 37, 119], "veut": [35, 56], "ident": [35, 48, 91], "million": 35, "dev": 35, "appliqu": [35, 54, 87, 114], "stopcovid": 35, "cr\u00e9ation": [36, 99, 167], "lign": [36, 99, 108, 152, 160], "colon": [36, 83, 99], "ver": 36, "modif": 36, "Une": [36, 65, 98, 99, 100, 102, 114, 120], "warning": [36, 158], "fr\u00e9quent": [36, 40, 162], "On": [36, 56, 88], "covid": [36, 56], "r\u00e9gion": [36, 56], "\u00e2ge": [36, 56], "refair": 36, "graphiqu": [36, 38, 40, 159, 173], "pr\u00e9c\u00e9dent": [36, 58, 113], "votr": 36, "fair": [36, 91, 132, 133], "diff\u00e9renci": 36, "liss": 36, "tabl": [36, 41, 105], "pet": [36, 59, 120, 121], "apart": [36, 55, 63, 132], "q5": [36, 56, 70, 71, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 105, 106, 114, 148, 149], "cart": 36, "quelqu": [38, 80, 105], "conseil": [38, 40], "\u00e9crir": [38, 40, 52, 53, 56, 89, 91, 109], "petit": [38, 40, 48, 56, 89, 107], "Pas": 38, "variabl": [38, 40, 41, 136, 150, 151, 165, 166, 167], "global": [38, 41, 166, 173], "s\u00e9par": [38, 40, 126, 127, 130, 131], "charg": [38, 40], "interfac": [38, 40, 159, 173], "truc": [38, 40], "prec": 39, "cheat": 40, "sheet": 40, "langag": [40, 42, 94, 152, 166, 167, 176], "numer": [40, 48, 85, 86], "boucl": [40, 41, 45, 113, 150, 151, 166, 167], "for": [40, 41, 166], "whil": [40, 41, 166], "enumerat": 40, "zip": [40, 118, 167, 168], "map": 40, "d\u00e9finit": [40, 41, 122, 123, 152, 166, 167, 170], "yield": 40, "d\u00e9clar": [40, 41, 152, 166], "attribut": [40, 41, 132, 133, 152, 170], "m\u00e9thod": [40, 41, 58, 100, 132, 133, 134, 138, 139, 152, 160, 164, 167], "statiqu": [40, 41, 152], "instanc": [40, 152], "d\u00e9cor": 40, "text": [40, 64, 106, 142, 143, 148, 149, 160, 168], "except": [40, 41, 120, 155, 156, 157], "confus": 40, "guillemet": 40, "rang": [40, 167], "initialis": 40, "trois": [40, 45, 88, 90, 132, 133, 166], "partag": [40, 173], "moteur": 40, "syntax": [41, 152, 155, 166, 167, 170, 175], "d1": [41, 152, 166, 167, 170], "entr\u00e9": [41, 169, 170], "d10": [41, 167], "frozenset": [41, 167], "d2": [41, 152, 166, 167], "instantiaion": [41, 152], "d3": [41, 152, 166, 167], "d4": [41, 152, 166, 167], "port": [41, 166], "d5": [41, 152, 166, 167], "tupl": [41, 101, 167], "local": [41, 136, 166], "d6": [41, 152, 166, 167], "mutabl": [41, 167], "d7": [41, 152, 167], "d8": [41, 152, 167], "surcharg": [41, 152, 166], "d9": [41, 167], "set": [41, 167], "figur": 41, "s1": [41, 152, 155, 166, 170], "attrap": [41, 155], "s10": [41, 152], "s11": [41, 152], "s12": [41, 152], "s13": [41, 152], "__copy__": [41, 152], "s14": [41, 152], "fig": [41, 152], "s15": [41, 152], "s16": [41, 152], "h\u00e9rit": [41, 152], "s2": [41, 152, 155, 166, 170], "instanci": [41, 152], "instruct": [41, 155, 166], "pass": [41, 166], "lev": [41, 155], "s3": [41, 152, 166, 170], "s4": [41, 152, 166], "s5": [41, 152, 166], "extens": [41, 45, 166, 167, 170], "s6": [41, 152, 166], "constructeur": [41, 152], "s7": [41, 152, 166], "s8": [41, 152, 166], "__str__": [41, 152], "d\u00e9faut": [41, 164, 166], "s9": [41, 152, 166], "ind\u00e9fin": [41, 166], "En": [43, 107], "diagonal": [43, 103], "compl": [43, 44], "apprendr": 44, "concept": [45, 166], "s\u00e9quenc": [45, 54, 160, 167], "notebook": [45, 47], "licens": 46, "tous": [47, 58, 90, 91, 108, 131, 132, 133], "correct": [47, 67, 68, 69, 70, 71, 72, 73, 75, 88, 92, 94, 117, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151], "examen": 47, "streaming": 48, "bjkst": 48, "distinct": 48, "universal": 48, "hashing": 48, "collis": 48, "temp": [48, 54, 58, 62, 91, 109, 114, 139], "stream": [48, 109], "h_1": 48, "h_2": 48, "\u00e9gal": 48, "o\u00f9": [48, 91], "hash": [48, 105], "d\u00e9pend": 48, "epsilon": 48, "compos": [49, 55], "connex": [49, 55], "construir": [49, 58, 143], "adjacent": [49, 55], "symetr": 49, "propr": [49, 142, 143, 155], "croiss": 49, "fait": 49, "suiv": [49, 90, 99], "retourn": [49, 63, 88, 89, 91], "fa\u00e7on": [50, 124, 125], "mont": [50, 139], "\u00e9chel": 50, "solut": [50, 54, 59, 61, 64, 65, 128, 129, 131, 146, 147], "distanc": [51, 52, 60, 63, 81, 82, 90, 91, 100], "\u00e9dit": [51, 52], "longueur": [51, 52], "alambiqu": 51, "pag": [51, 143], "wikipedi": 51, "na\u00efv": [52, 54, 114, 128], "tres": [52, 94], "si": [52, 53, 60, 113], "proch": [52, 84, 91, 124, 125], "alor": 52, "ff": 52, "f": [52, 167], "ph": 52, "person": 52, "sait": 52, "algo": 125, "ordonnanc": 53, "d\u00e9termin": [53, 99], "peut": [53, 109, 114], "ex\u00e9cut": 53, "t\u00e2ch": 53, "Et": 53, "dur": [53, 87], "vocabulair": 55, "li": 55, "puissanc": 55, "trouv": [55, 58, 131, 132, 133, 142, 143], "model": [56, 57], "sird": [56, 57], "q0": 56, "dessin": [56, 74, 75, 81, 82, 90, 111], "propag": 56, "v\u00e9rifi": [56, 122, 123], "cel": [56, 58], "synthet": 56, "q6": [56, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 105, 106], "r\u00e9el": [56, 167], "cumul": 56, "\u00e9pid\u00e9miolog": 57, "visualis": [57, 63], "second": [57, 91, 114, 120, 129, 131, 160], "jeux": [58, 103, 164], "suffix": 58, "commun": [58, 160, 170], "partagent": 58, "constuir": 58, "assoc": 58, "chaqu": [58, 59, 91], "lettr": [58, 105, 108], "termin": [58, 108], "ci": 58, "mesur": [58, 62, 91, 124, 125, 139], "pris": 58, "tel": 58, "pouss": 58, "loin": [58, 120, 150, 151], "tout": [59, 60, 63, 64, 99, 109, 155, 170], "prend": [59, 106], "choix": 59, "s\u00e9lect": 59, "perf_count": 59, "compar": [59, 109, 114], "vitesss": 59, "traveling": 60, "salesman": 60, "chois": 60, "chemin": [60, 63, 65, 98, 126, 127, 168], "rel": 60, "invers": 60, "am\u00e9lior": [60, 113], "moiti": 60, "possibl": [60, 61, 88, 113, 166], "plais": 60, "produit": [62, 88, 128, 129], "creus": 62, "\u00e9leg": 62, "affich": [63, 98], "tqdm": 63, "d\u00e9cod": 64, "mors": 64, "traduir": 64, "contient": [64, 113], "alphabet": 64, "minimis": 64, "transcript": 64, "interpret": [64, 173], "ru": [65, 91], "paris": 65, "etap": 65, "bellman": 65, "kruskall": 65, "eul\u00e9rien": 65, "optimal": [65, 89], "vari": 65, "sen": [65, 152], "interd": 65, "gaph": 65, "orient": 65, "windy": 65, "postman": 65, "cass": 66, "vigener": [66, 136, 137], "minut": [67, 93], "1a": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "e": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "interrog": [68, 69, 70, 71, 72, 73], "\u00e9crit": [68, 69, 70, 71, 72, 73, 77], "septembr": [68, 72], "2014": [68, 69, 70, 71, 76], "octobr": [69, 83, 84, 85, 86, 91], "novembr": [70, 71, 73, 74, 75, 87, 88, 89], "2015": [72, 73, 77, 78], "td": [74, 75, 76, 77, 78, 79, 80], "27": [74, 75], "2012": [74, 75], "coloriag": [74, 75, 103], "spiral": [74, 75], "ajout": [74, 99, 120, 152, 166, 168, 170], "roug": [74, 89], "d\u00e9cembr": [76, 78, 79, 81, 82], "rattrapag": [77, 89, 90], "\u00e9nonc": 77, "oral": 77, "lou": 78, "achet": 78, "appart": 78, "q7": [78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 105, 106], "exo": 78, "q8": [78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91], "q9": [78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91], "num\u00e9ros": 78, "t\u00e9l\u00e9phon": 78, "16": 79, "2016": 79, "q10": [79, 80, 81, 82, 83, 84, 85, 86, 88, 91], "f\u00e9vri": 80, "2017": [80, 81, 82], "commentair": [80, 152, 166, 167], "\u00e9chantillon": [81, 82, 83, 84], "encor": [81, 82], "seuil": 82, "23": [83, 84], "2018": [83, 84], "m1": [83, 84, 88], "m2": [83, 84, 88], "m3": [83, 84, 88], "norm": [83, 84], "r\u00e9p\u00e9tit": [83, 84], "22": [85, 86], "2019": [85, 86], "distance_t": [85, 86], "distance_bord": [85, 86], "table_al": [85, 86], "n_table_al": [85, 86], "table_proch": [85, 86], "distance_n_tables_al": [85, 86], "meilleur_table_al": [85, 86], "plot_tabl": [85, 86], "vorono\u00ef": [85, 86], "kmean": [85, 86], "24": 87, "2020": 87, "gu\u00e9rison": 87, "kaplan": 87, "mei": 87, "courb": 87, "publiqu": 87, "apres": 87, "T": 87, "vaccin": 87, "heur": 87, "variat": 87, "2021": [88, 89], "multipl": [88, 122, 123, 152, 167, 175], "lent": 88, "ecrir": [88, 91], "meilleur": 88, "option": 88, "v\u00e9rif": [88, 91], "mesure_temp": 88, "m4": 88, "pench": 88, "N": 88, "combien": [88, 113], "r\u00e9soudr": 88, "remarqu": 88, "lor": [88, 166], "15": 89, "volum": 89, "air": 89, "surfac": [89, 103, 107], "briqu": 89, "fac": 89, "inclut": 89, "n\u00e9cessair": 89, "coll": 89, "extrem": 89, "bouteil": 89, "litr": 89, "larg": 89, "bleu": 89, "gross": 89, "mar": 90, "segment": 90, "niveau": 90, "arbre": [90, 96, 98], "Y": 91, "lorsqu": [91, 160], "2x2": 91, "indic": [91, 111], "m\u00e9decin": 91, "grill": 91, "10x10": 91, "quadrill": 91, "coordon": [91, 147], "dictionair": 91, "case_grill": 91, "pairwise_dist": 91, "1000x2": 91, "100x2": 91, "faux": 91, "corrig": 91, "conna\u00eetr": 92, "structur": [94, 106, 118], "outil": 94, "jeu": [95, 99, 104, 120, 140, 141], "d\u00e9": [95, 104], "rotat": [95, 104], "circuit": [95, 104], "De": 95, "2048": [99, 140, 141], "d\u00e9composit": [97, 99], "libr": 99, "pourvu": 99, "perdu": 99, "aggreg": 99, "jou": 99, "coup": 99, "sach": 99, "direct": 99, "scor": [99, 148, 149], "fais": 99, "derni": [99, 114], "fin": [99, 166], "strateg": [99, 140, 141], "illustr": 99, "bref": 100, "aper\u00e7u": 100, "station": 100, "m\u00e9tro": 100, "ensembl": [101, 121, 150, 167, 175], "insert": 101, "dequ": [101, 161], "loi": 102, "multinomial": 102, "poid": 102, "bootstrap": 102, "colori": 103, "proport": 103, "couvert": 103, "math\u00e9mat": 103, "retour": 103, "\u00e7a": [103, 106, 142, 175], "r\u00e9partit": [105, 126], "hashag": 105, "pseudo": 105, "light": 105, "xml": [106, 109], "format": [106, 109, 130, 131, 142, 163, 167, 168], "csv": 106, "relir": 106, "essai": 106, "html": 106, "sql": 106, "sas": 106, "non": [106, 150, 151, 166, 167], "trop": 106, "plac": [106, 160], "zippon": 106, "inspir": 106, "cercl": 107, "pi": 107, "ni": 107, "aucun": 107, "parfait": 107, "machin": 107, "extrair": 108, "remplac": 108, "rim": 108, "elles": 108, "ail": 108, "flux": 109, "lir": [109, 148, 149], "gros": 109, "d\u00e9s\u00e9rialis": 109, "histogramm": [110, 118, 148, 149], "heap": 111, "transform": 111, "tas": 111, "chos": [111, 171], "lieu": 111, "simplifi": [111, 166], "gauss": 112, "vitess": 112, "gin": 113, "profil": [113, 115], "_gini_final": 113, "savoir": 113, "_gini_cumsum": 113, "convolu": 114, "ex\u00e9cu": [114, 170], "im2col": 114, "nouveau": 114, "\u00e9xecu": 114, "d\u00e9duir": 114, "profilag": 114, "\u00e9ven": [114, 160], "\u00e9chantillonnag": 114, "Que": 114, "pouv": 114, "dir": 114, "bizarrer": 115, "web": 117, "scraping": 117, "pokemon": 117, "caract\u00e9rist": 117, "imag": 117, "D": [118, 160], "revers": 118, "spars": [118, 124, 125], "m\u00e9moir": 118, "chi": 119, "formul": 119, "obstacl": 120, "\u00e9chiqui": 120, "aller": [120, 124, 125, 150, 151], "pr\u00e9vu": 121, "\u00e9volu": 121, "cryptag": [122, 123], "homomorphic": [122, 123], "craig": [122, 123], "gentry": [122, 123], "stabl": [122, 123], "addit": [122, 123], "impl\u00e9mentent": [122, 123], "voisin": [124, 125], "nn": [124, 125], "perform": [124, 125], "featur": [124, 125], "imagin": [124, 125], "vit": [124, 125], "2a": 125, "observ": 125, "skis": 126, "facult": [126, 127], "prolong": [126, 127], "degr": [126, 127], "facebook": [126, 127], "puzzl": [128, 129, 130, 131], "scalair": [128, 129], "moin": 128, "recouvr": [128, 129], "soudoi": [128, 129], "prisonni": [128, 129], "d\u00e9coupag": [128, 129], "intelligent": [128, 129], "bas": [128, 129], "approch": 129, "watershed": [130, 131], "bagarreur": [130, 131], "bin\u00f4m": [130, 131], "magiqu": [132, 133], "suit": [132, 133], "piec": [134, 135, 152], "normal": [134, 135, 166], "truqu": [134, 135], "mer": 134, "mixt": [134, 135], "d\u00e9tail": 136, "ordon": 136, "crypt": [136, 137], "d\u00e9crypt": [136, 137], "selon": [136, 137], "int\u00e9gral": [138, 139], "rectangl": [138, 139], "r\u00e9calcitr": 139, "carlo": 139, "arr\u00eat": 139, "gagn": [140, 141], "regl": [140, 141], "with": 142, "rightarrow": [142, 143], "cherch": [142, 143], "motif": [142, 143], "url": 143, "wikip\u00e9di": 143, "trac": [146, 147], "pyramid": [146, 147], "bigarr": [146, 147], "couleur": 147, "devin": [148, 149], "langu": [148, 149], "normalis": [148, 149], "int": 150, "str": [150, 167], "compact": 150, "pr\u00e9sent": 152, "apport": 152, "implicit": 152, "aid": 152, "inclu": 152, "deepcopy": 152, "monnai": 152, "issubclass": 152, "isinst": 152, "C": [154, 173], "oblig": 154, "princip": 155, "lanc": [155, 160], "try": 155, "imbriqu": 155, "d\u00e9fin": 155, "d\u00e9riv": 155, "personnalis": [155, 158, 160], "aberr": 155, "pieg": 155, "usag": 156, "pil": 156, "call": 156, "stack": 156, "messag": [156, 160, 173], "explicit": 156, "convent": 156, "logging": 158, "intercept": 158, "tkint": 160, "objet": [160, 167, 168], "zon": 160, "bouton": 160, "sais": 160, "coch": 160, "rond": 160, "radio": 160, "barr": 160, "d\u00e9fil": 160, "combobox": 160, "canev": 160, "menus": 160, "disposit": 160, "fen\u00eatr": 160, "emplac": [160, 170], "pack": 160, "grid": 160, "even": 160, "principal": 160, "focus": 160, "press": 160, "associ": 160, "menu": 160, "pr\u00e9d\u00e9fin": 160, "contr\u00f4l": 160, "bo\u00eet": 160, "dialogu": 160, "standard": 160, "compt": 160, "rebour": 160, "communiqu": 160, "ordereddict": 161, "namedtupl": 161, "count": 161, "n\u00e9gat": 162, "encoding": [164, 168], "condens": 166, "tru": 166, "b1": 166, "pilotag": 166, "continu": 166, "break": 166, "else": 166, "suppress": [166, 168], "identif": 166, "eval": [166, 167], "exec": 166, "indent": 166, "usuel": 166, "rien": 167, "bool\u00e9en": 167, "formatag": 167, "particul": 167, "r": 167, "complex": [167, 168], "byt": 167, "bytearray": 167, "collag": 167, "concaten": 167, "dict": 167, "repr": 167, "fourn": 167, "affect": 167, "hi\u00e9rarch": 167, "intern": [167, 170], "accentu": 167, "mod": 168, "gestion": 168, "pratiqu": 170, "Ce": 170, "cycliqu": 170, "cour": 170, "arborescent": 170, "paquetag": 170, "relat": 170, "extern": 170, "parall\u00e9lis": 172, "thread": 173, "synchronis": 173, "attent": 173, "fil": 173, "multithreading": 173, "concurrent": 173, "futur": 173, "blocag": 173, "async": 173, "await": 173, "asyncio": 173, "lock": 173, "cython": 173, "m\u00e9lang": 173, "jav": 173, "bibliograph": 173, "assembl": 175, "nomm": 175, "older": 44, "transit": 97, "composit": 97, "transposit": 97, "d\u00e9m\u00eal": 97, "repr\u00e9sent": 98, "jet": 98, "profondeur": [96, 98], "maximal": [96, 98], "depuis": 98, "racin": 98, "jusqu": 98, "intermed": 98, "is": 98}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Survol algorithmique": [[1, "survol-algorithmique"]], "Ordres de grandeur": [[1, "ordres-de-grandeur"]], "Comprendre le co\u00fbt d\u2019un algorithme": [[1, "comprendre-le-cout-d-un-algorithme"]], "Mot-cl\u00e9": [[1, "mot-cle"]], "Catalogue d\u2019algorithmes": [[1, "catalogue-d-algorithmes"]], "Probl\u00e8mes NP-complets": [[1, "problemes-np-complets"]], "Id\u00e9e pour d\u00e9monstrer qu\u2019un probl\u00e8me est NP-complet": [[1, "idee-pour-demonstrer-qu-un-probleme-est-np-complet"]], "Liens": [[1, "liens"]], "Articles sur des algorithmes": [[1, "articles-sur-des-algorithmes"]], "Livres": [[1, "livres"]], "Pour s\u2019entra\u00eener": [[1, "pour-s-entrainer"]], "Google\u2019s recommandations": [[1, "google-s-recommandations"]], "examples.construction_classique": [[2, "examples-construction-classique"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "Python n\u2019accepte pas les accents": [[2, "indexfaqref-python0"], [42, "index-faqref-0-6"]], "Modifier un dictionnaire en le parcourant": [[2, "indexexref-Base -0"], [162, "index-exref-1-1"]], "Quelle est la diff\u00e9rence entre return et print ?": [[2, "indexfaqref-python1"], [42, "index-faqref-0-10"]], "calcul de la somme des dix premiers entiers au carr\u00e9": [[2, "indexexref-Base0"], [162, "index-exref-0-1"]], "Eviter d\u2019effectuer le m\u00eame appel deux fois": [[2, "indexexref-Base -1"], [162, "index-exref-1-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en datetime": [[2, "indexexref-Base1"], [162, "index-exref-0-4"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "comptage": [[2, "indexexref-Base2"], [162, "index-exref-0-2"]], "fonction comme param\u00e8tre": [[2, "indexexref-Base3"], [162, "index-exref-0-8"]], "conversion d\u2019une matrice en cha\u00eene de caract\u00e8res": [[2, "indexexref-Base4"], [162, "index-exref-0-6"]], "conversion d\u2019une matrice en un vecteur": [[2, "indexexref-Base5"], [162, "index-exref-0-7"]], "minimum avec position": [[2, "indexexref-Base6"], [162, "index-exref-0-9"]], "recherche avec index": [[2, "indexexref-Base7"], [162, "index-exref-0-10"]], "recherche dichotomique": [[2, "indexexref-Base8"], [162, "index-exref-0-11"]], "calcul d\u2019une somme": [[2, "indexexref-Base9"], [162, "index-exref-0-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en matrice": [[2, "indexexref-Base10"], [162, "index-exref-0-5"]], "tri, garder les positions initiales": [[2, "indexexref-Base11"], [162, "index-exref-0-12"]], "conversion d\u2019un vecteur en une matrice": [[2, "indexexref-Base12"], [162, "index-exref-0-3"]], "faq": [[3, "faq"]], "teachpyx.faq.faq_python": [[3, "module-teachpyx.faq.faq_python"]], "Quelle est la diff\u00e9rence entre / et // - division ?": [[3, "indexfaqref-python0"], [42, "index-faqref-0-9"]], "Quel est l\u2019entier le plus grand ?": [[3, "indexfaqref-python1"], [42, "index-faqref-0-8"]], "Tabulations ou espace ?": [[3, "indexfaqref-python2"], [42, "index-faqref-0-14"]], "Comment it\u00e9rer sur les r\u00e9sultats d\u2019une expression r\u00e9guli\u00e8re ?": [[3, "indexfaqref-python3"], [42, "index-faqref-0-2"]], "R\u00e9cup\u00e9rer le nom du jour \u00e0 partir d\u2019une date": [[3, "indexfaqref-python4"], [42, "index-faqref-0-12"]], "R\u00e9cup\u00e9rer le nom du mois \u00e0 partir d\u2019une date": [[3, "indexfaqref-python5"], [42, "index-faqref-0-13"]], "R\u00e9cup\u00e9rer la liste des modules install\u00e9s": [[3, "indexfaqref-python6"], [42, "index-faqref-0-11"]], "Pourquoi l\u2019installation de pandas (ou numpy)\nne marche pas sous Windows avec pip ?": [[3, "indexfaqref-python7"], [42, "index-faqref-0-5"]], "Obtenir des informations sur les packages install\u00e9s": [[3, "indexfaqref-python8"], [42, "index-faqref-0-4"]], "propri\u00e9t\u00e9": [[3, "indexfaqref-python9"], [42, "index-faqref-0-15"]], "Comment \u00e9viter sys.path.append\u2026 quand on d\u00e9veloppe un module ?": [[3, "indexfaqref-python10"], [42, "index-faqref-0-3"]], "Qu\u2019est-ce qu\u2019un type immuable ou immutable ?": [[3, "indexfaqref-python11"], [42, "index-faqref-0-7"]], "Classe sortable": [[3, "indexfaqref-python12"], [42, "index-faqref-0-1"]], "A quoi sert un ``StringIO`` ?": [[3, "indexfaqref-python13"], [42, "index-faqref-0-0"]], "teachpyx.faq.faq_exception": [[3, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_numpy": [[3, "module-teachpyx.faq.faq_numpy"]], "Code inclus dans cette librairie": [[4, "code-inclus-dans-cette-librairie"]], "Constructions classiques": [[4, null], [152, "constructions-classiques"], [160, "constructions-classiques"], [161, "constructions-classiques"], [162, "constructions-classiques"], [166, "constructions-classiques"]], "Fonctions impl\u00e9ment\u00e9es pour les exercices": [[4, null]], "FAQ": [[4, null], [42, "faq"]], "examples.numpysex": [[5, "module-teachpyx.examples.numpysex"]], "op\u00e9rations avec numpy.matrix": [[5, "indexexref-numpy0"], [32, "index-exref-0-0"]], "Quels sont les types que numpy supporte ?": [[5, "indexfaqref-numpy0"], [42, "index-faqref-1-0"]], "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)": [[9, "utilisation-de-cartopy-sous-windows-sous-wsl"]], "2023-08-03 : Code Jam": [[10, "code-jam"]], "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne": [[11, "l-enigme-d-hermionne"]], "Gallerie d\u2019exemples": [[15, "gallerie-d-exemples"]], "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution": [[16, "l-enigme-d-einstein-et-sa-resolution"]], "Fonction permutation": [[16, "fonction-permutation"]], "La classe Rule": [[16, "la-classe-rule"]], "Explicit rules": [[16, "explicit-rules"]], "Description du probl\u00e8me avec ce code": [[16, "description-du-probleme-avec-ce-code"]], "Float Conversion": [[17, "float-conversion"]], "Probability (float64)x == (float32)x": [[17, "probability-float64-x-float32-x"]], "Interval length distribution": [[17, "interval-length-distribution"]], "An answer to the initial question": [[17, "an-answer-to-the-initial-question"]], "An answer to a similar question: what about not strict comparison?": [[17, "an-answer-to-a-similar-question-what-about-not-strict-comparison"]], "Conclusion": [[17, "conclusion"], [79, "Conclusion"]], "Le GIL": [[18, "le-gil"]], "Deux listes en parallel": [[18, "deux-listes-en-parallel"]], "Un autre sc\u00e9nario": [[18, "un-autre-scenario"]], "Hypercube et autres exercices": [[19, "hypercube-et-autres-exercices"]], "Q1 - triple r\u00e9cursivit\u00e9": [[19, "q1-triple-recursivite"]], "Q2 - comparaison de listes": [[19, "q2-comparaison-de-listes"]], "Q3 - pr\u00e9cision des calculs": [[19, "q3-precision-des-calculs"]], "Q4 - hypercube": [[19, "q4-hypercube"]], "Astuces avec les lambda functions": [[20, "astuces-avec-les-lambda-functions"]], "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations": [[21, "mathador-enigme-a-4-operations"]], "Points d\u2019impl\u00e9mentation avec numpy": [[22, "points-d-implementation-avec-numpy"]], "acc\u00e9der \u00e0 un \u00e9l\u00e9ment en particulier": [[22, "acceder-a-un-element-en-particulier"]], "Pandas et groupby": [[23, "pandas-et-groupby"]], "groupby et valeur manquantes": [[23, "groupby-et-valeur-manquantes"]], "Parties de dames": [[24, "parties-de-dames"]], "Q1": [[24, "q1"], [60, "Q1"], [68, "Q1"], [68, "id1"], [69, "Q1"], [69, "id1"], [70, "Q1"], [70, "id1"], [70, "id6"], [71, "Q1"], [72, "Q1"], [72, "id1"], [73, "Q1"], [73, "id1"], [75, "Q1"], [78, "Q1"], [78, "id1"], [78, "id3"], [79, "Q1"], [80, "Q1"], [87, "Q1"], [53, "Q1"]], "Q2": [[24, "q2"], [60, "Q2"], [68, "Q2"], [68, "id2"], [69, "Q2"], [69, "id2"], [70, "Q2"], [70, "id2"], [70, "id7"], [71, "Q2"], [72, "Q2"], [72, "id2"], [73, "Q2"], [73, "id2"], [75, "Q2"], [78, "Q2"], [78, "id2"], [78, "id4"], [79, "Q2"], [80, "Q2"], [53, "Q2"]], "Q3": [[24, "q3"], [60, "Q3"], [68, "Q3"], [68, "id3"], [69, "Q3"], [69, "id3"], [70, "Q3"], [70, "id3"], [70, "id8"], [71, "Q3"], [72, "Q3"], [72, "id3"], [73, "Q3"], [73, "id3"], [75, "Q3"], [78, "Q3"], [79, "Q3"], [80, "Q3"]], "Q4": [[24, "q4"], [60, "Q4"], [69, "Q4"], [69, "id4"], [70, "Q4"], [70, "id4"], [70, "id9"], [71, "Q4"], [78, "Q4"], [79, "Q4"], [79, "id1"], [80, "Q4"]], "S\u00e9rialisation": [[25, "serialisation"], [171, "serialisation"]], "JSON": [[25, "json"], [171, "json"]], "Ecriture (json)": [[25, "ecriture-json"]], "Lecture (json)": [[25, "lecture-json"]], "Limite": [[25, "limite"]], "S\u00e9rialisation rapide": [[25, "serialisation-rapide"]], "Pickle": [[25, "pickle"]], "Ecriture (pickle)": [[25, "ecriture-pickle"]], "Lecture (pickle)": [[25, "lecture-pickle"]], "Les classes": [[25, "les-classes"]], "R\u00e9duire la taille": [[25, "reduire-la-taille"]], "Cas des fonctions": [[25, "cas-des-fonctions"]], "Binaire": [[25, "binaire"], [171, "binaire"]], "Fonction et JSON": [[25, "fonction-et-json"]], "Cas des it\u00e9rateurs": [[25, "cas-des-iterateurs"]], "Cas des g\u00e9n\u00e9rateurs": [[25, "cas-des-generateurs"]], "S\u00e9rialisation avec protobuf": [[26, "serialisation-avec-protobuf"]], "Sch\u00e9ma": [[26, "schema"]], "Compilation": [[26, "compilation"]], "Import du module cr\u00e9\u00e9": [[26, "import-du-module-cree"]], "S\u00e9rialisation en cha\u00eene de caract\u00e8res": [[26, "serialisation-en-chaine-de-caracteres"]], "Plusieurs cha\u00eenes de caract\u00e8res": [[26, "plusieurs-chaines-de-caracteres"]], "S\u00e9rialisation JSON": [[26, "serialisation-json"]], "Exercices expliqu\u00e9s de programmation": [[27, "exercices-expliques-de-programmation"]], "Copie de listes": [[27, "copie-de-listes"]], "Erreur de logique": [[27, "erreur-de-logique"]], "Co\u00fbt d\u2019un algorithme": [[27, "cout-d-un-algorithme"]], "H\u00e9ritage double": [[27, "heritage-double"]], "Pr\u00e9cision des calculs": [[27, "precision-des-calculs"]], "R\u00e9flexions autour du voyage de commerce (TSP)": [[28, "reflexions-autour-du-voyage-de-commerce-tsp"]], "Des villes tir\u00e9es au hasard": [[28, "des-villes-tirees-au-hasard"]], "Croisements": [[28, "croisements"]], "Noeud de d\u00e9part constant": [[28, "noeud-de-depart-constant"]], "Un peu d\u2019al\u00e9atoire en plus": [[28, "un-peu-d-aleatoire-en-plus"]], "Computation times": [[29, "computation-times"]], "Dataframes": [[30, "dataframes"]], "Matrices et DataFrames": [[31, "matrices-et-dataframes"], [167, "matrices-et-dataframes"]], "DataFrame et Graphes": [[34, "DataFrame-et-Graphes"]], "DataFrame": [[34, "DataFrame"]], "Series": [[34, "Series"]], "DataFrame (pandas)": [[34, "DataFrame-(pandas)"]], "Lecture et \u00e9criture de DataFrame": [[34, "Lecture-et-\u00e9criture-de-DataFrame"]], "DataFrame et Index": [[34, "DataFrame-et-Index"]], "Notation avec le symbole :": [[34, "Notation-avec-le-symbole-:"]], "Exercice 1 : cr\u00e9er un fichier Excel": [[34, "Exercice-1-:-cr\u00e9er-un-fichier-Excel"], [34, "id1"]], "Manipuler un DataFrame": [[34, "Manipuler-un-DataFrame"]], "6 op\u00e9rations : filtrer, union, sort, group by, join, pivot": [[34, "6-op\u00e9rations-:-filtrer,-union,-sort,-group-by,-join,-pivot"]], "filter": [[34, "filter"]], "union": [[34, "union"]], "sort": [[34, "sort"]], "group by": [[34, "group-by"]], "join (merge ou fusion)": [[34, "join-(merge-ou-fusion)"]], "pivot (tableau crois\u00e9 dynamique)": [[34, "pivot-(tableau-crois\u00e9-dynamique)"]], "Lambda fonctions": [[34, "Lambda-fonctions"]], "Exercice 2 : lambda fonction": [[34, "Exercice-2-:-lambda-fonction"]], "Exercice 3 : moyennes par groupes": [[34, "Exercice-3-:-moyennes-par-groupes"], [34, "id2"]], "Avec ou sans index": [[34, "Avec-ou-sans-index"]], "Dates": [[34, "Dates"], [163, "dates"]], "Plot(s)": [[34, "Plot(s)"]], "R\u00e9cup\u00e9ration des donn\u00e9es": [[34, "R\u00e9cup\u00e9ration-des-donn\u00e9es"]], "Exercice 4 : nuage de points": [[34, "Exercice-4-:-nuage-de-points"]], "Exercice 5 : graphe d\u2019une distribution avec pandas": [[34, "Exercice-5-:-graphe-d'une-distribution-avec-pandas"]], "matplotlib": [[34, "matplotlib"]], "Exercice 6 : distribution des mariages par jour": [[34, "Exercice-6-:-distribution-des-mariages-par-jour"], [34, "id3"]], "Annexes": [[34, "Annexes"]], "Cr\u00e9er un fichier Excel avec plusieurs feuilles": [[34, "Cr\u00e9er-un-fichier-Excel-avec-plusieurs-feuilles"]], "El\u00e9ments de r\u00e9ponses pour les exercices": [[34, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"], [33, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"]], "Exercice 2 : lambda function": [[34, "Exercice-2-:-lambda-function"]], "Exercice 4 : \u00e9cart entre les mari\u00e9s": [[34, "Exercice-4-:-\u00e9cart-entre-les-mari\u00e9s"]], "Exercice 5 : graphe de la distribution avec pandas": [[34, "Exercice-5-:-graphe-de-la-distribution-avec-pandas"]], "Calcul matriciel avec numpy (version courte)": [[35, "Calcul-matriciel-avec-numpy-(version-courte)"]], "Enonc\u00e9": [[35, "Enonc\u00e9"], [36, "Enonc\u00e9"], [49, "Enonc\u00e9"], [51, "Enonc\u00e9"], [54, "Enonc\u00e9"], [56, "Enonc\u00e9"], [59, "Enonc\u00e9"], [60, "Enonc\u00e9"], [61, "Enonc\u00e9"], [106, "Enonc\u00e9"], [107, "Enonc\u00e9"], [108, "Enonc\u00e9"], [113, "Enonc\u00e9"], [53, "Enonc\u00e9"], [58, "Enonc\u00e9"]], "La ma\u00eetrise du slice": [[35, "La-ma\u00eetrise-du-slice"]], "La ma\u00eetrise du nan": [[35, "La-ma\u00eetrise-du-nan"], [36, "La-ma\u00eetrise-du-nan"]], "La ma\u00eetrise des types": [[35, "La-ma\u00eetrise-des-types"], [36, "La-ma\u00eetrise-des-types"]], "La ma\u00eetrise du broadcasting": [[35, "La-ma\u00eetrise-du-broadcasting"]], "La ma\u00eetrise des index": [[35, "La-ma\u00eetrise-des-index"], [36, "La-ma\u00eetrise-des-index"]], "La ma\u00eetrise des op\u00e9rations et des fonctions": [[35, "La-ma\u00eetrise-des-op\u00e9rations-et-des-fonctions"]], "Q1 : calculer la valeur du \\chi_2 d\u2019un tableau de contingence": [[35, "Q1-:-calculer-la-valeur-du-\\chi_2-d'un-tableau-de-contingence"], [35, "id1"]], "Q2 : calculer une distribution un peu particuli\u00e8re": [[35, "Q2-:-calculer-une-distribution-un-peu-particuli\u00e8re"], [35, "id2"]], "Q3 : on veut cr\u00e9er une matrice identit\u00e9 un million par un million": [[35, "Q3-:-on-veut-cr\u00e9er-une-matrice-identit\u00e9-un-million-par-un-million"], [35, "id3"]], "Q4 : vous devez cr\u00e9er l\u2019application StopCovid": [[35, "Q4-:-vous-devez-cr\u00e9er-l'application-StopCovid"], [35, "id4"]], "R\u00e9ponses": [[35, "R\u00e9ponses"], [36, "R\u00e9ponses"], [49, "R\u00e9ponses"], [51, "R\u00e9ponses"], [56, "R\u00e9ponses"], [59, "R\u00e9ponses"], [60, "R\u00e9ponses"], [106, "R\u00e9ponses"], [107, "R\u00e9ponses"], [108, "R\u00e9ponses"], [113, "R\u00e9ponses"], [53, "R\u00e9ponses"], [58, "R\u00e9ponses"]], "Manipulation de donn\u00e9es avec pandas (version courte)": [[36, "Manipulation-de-donn\u00e9es-avec-pandas-(version-courte)"]], "Cr\u00e9ation d\u2019un dataframe": [[36, "Cr\u00e9ation-d'un-dataframe"]], "La ma\u00eetrise des index des lignes": [[36, "La-ma\u00eetrise-des-index-des-lignes"]], "La ma\u00eetrise des index des colonnes": [[36, "La-ma\u00eetrise-des-index-des-colonnes"]], "Lien vers numpy": [[36, "Lien-vers-numpy"]], "Cr\u00e9ation de colonnes": [[36, "Cr\u00e9ation-de-colonnes"]], "Modifications de valeurs": [[36, "Modifications-de-valeurs"]], "Une erreur ou warning fr\u00e9quent": [[36, "Une-erreur-ou-warning-fr\u00e9quent"]], "La ma\u00eetrise des fonctions": [[36, "La-ma\u00eetrise-des-fonctions"]], "On r\u00e9cup\u00e8re les donn\u00e9es du COVID par r\u00e9gion et par \u00e2ge et premier graphe": [[36, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"], [56, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"]], "Q1 : refaire le graphique pr\u00e9c\u00e9dent pour votre classe d\u2019\u00e2ge": [[36, "Q1-:-refaire-le-graphique-pr\u00e9c\u00e9dent-pour-votre-classe-d'\u00e2ge"], [36, "id1"]], "Q2 : faire de m\u00eame avec les s\u00e9ries diff\u00e9renci\u00e9es": [[36, "Q2-:-faire-de-m\u00eame-avec-les-s\u00e9ries-diff\u00e9renci\u00e9es"], [36, "id2"]], "Q3 : faire de m\u00eame avec des s\u00e9ries liss\u00e9es sur sur 7 jours": [[36, "Q3-:-faire-de-m\u00eame-avec-des-s\u00e9ries-liss\u00e9es-sur-sur-7-jours"], [36, "id3"]], "Q4 : fusion de tables par d\u00e9partements": [[36, "Q4-:-fusion-de-tables-par-d\u00e9partements"], [36, "id4"]], "Petit apart\u00e9": [[36, "Petit-apart\u00e9"]], "Q5 : une carte ?": [[36, "Q5-:-une-carte-?"]], "Quelques conseils pour \u00e9crire un programme": [[38, "quelques-conseils-pour-ecrire-un-programme"]], "Des petites fonctions": [[38, "des-petites-fonctions"], [40, "des-petites-fonctions"]], "Pas de variables globales": [[38, "pas-de-variables-globales"]], "S\u00e9parer les calculs, le chargement des donn\u00e9es, l\u2019interface graphique": [[38, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"], [40, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"]], "Utiliser des fonctions de tests": [[38, "utiliser-des-fonctions-de-tests"]], "Trucs et astuces": [[38, "trucs-et-astuces"], [40, "trucs-et-astuces"]], "Pr\u00e9cis": [[39, "precis"]], "Cheat sheet: Python": [[40, "cheat-sheet-python"]], "Le langage": [[40, "le-langage"]], "Les variables": [[40, "les-variables"]], "Les types immuables": [[40, "les-types-immuables"]], "Les types modifiables": [[40, "les-types-modifiables"]], "Liste": [[40, "liste"], [160, "liste"], [167, "liste"]], "Dictionnaire": [[40, "dictionnaire"], [167, "dictionnaire"]], "Tableaux num\u00e9riques": [[40, "tableaux-numeriques"]], "Tests et boucles": [[40, "tests-et-boucles"]], "Tests": [[40, "tests"], [166, "tests"]], "for ou while": [[40, "for-ou-while"]], "Fonction enumerate": [[40, "fonction-enumerate"]], "Fonction zip": [[40, "fonction-zip"]], "Fonction map": [[40, "fonction-map"]], "Autres mot-cl\u00e9s": [[40, "autres-mot-cles"]], "Fonctions": [[40, "fonctions"], [136, "Fonctions"], [166, "fonctions"], [175, "fonctions"]], "D\u00e9finition, param\u00e8tres": [[40, "definition-parametres"]], "mot-cl\u00e9 lambda": [[40, "mot-cle-lambda"]], "mot-cl\u00e9 yield": [[40, "mot-cle-yield"]], "Classes": [[40, "classes"], [99, "Classes"], [152, "classes"], [153, "classes"], [94, null]], "D\u00e9claration d\u2019une classe": [[40, "declaration-d-une-classe"]], "Attributs et m\u00e9thodes": [[40, "attributs-et-methodes"]], "M\u00e9thodes statiques": [[40, "methodes-statiques"]], "Op\u00e9rateurs": [[40, "operateurs"], [100, "Op\u00e9rateurs"], [152, "operateurs"]], "Copie d\u2019instances": [[40, "copie-d-instances"], [152, "copie-d-instances"]], "H\u00e9ritage": [[40, "heritage"], [152, "heritage"]], "D\u00e9corateur": [[40, "decorateur"]], "Fichiers": [[40, "fichiers"], [142, "Fichiers"], [164, "fichiers"], [168, "fichiers"]], "Ecriture dans un fichier texte": [[40, "ecriture-dans-un-fichier-texte"]], "Lecture dans un fichier texte": [[40, "lecture-dans-un-fichier-texte"]], "Modules": [[40, "modules"], [142, "Modules"]], "Exceptions": [[40, "exceptions"], [155, "exceptions"], [157, "exceptions"]], "Erreurs, confusions fr\u00e9quentes": [[40, "erreurs-confusions-frequentes"]], "Variables": [[40, "variables"], [167, "variables"]], "Cha\u00eene de caract\u00e8res = tableau de caract\u00e8res": [[40, "chaine-de-caracteres-tableau-de-caracteres"]], "Guillemets ou pas": [[40, "guillemets-ou-pas"]], "Boucles": [[40, "boucles"], [166, "boucles"]], "range ou pas range": [[40, "range-ou-pas-range"]], "Initialisation": [[40, "initialisation"]], "Diff\u00e9rence entre print et return": [[40, "difference-entre-print-et-return"]], "Trois conseils pour \u00e9crire un programme": [[40, "trois-conseils-pour-ecrire-un-programme"]], "Utiliser des tests unitaires": [[40, "utiliser-des-tests-unitaires"]], "Partager du code": [[40, "partager-du-code"]], "Moteurs de recherche": [[40, "moteurs-de-recherche"]], "Syntaxes et d\u00e9finitions": [[41, "syntaxes-et-definitions"]], "D\u00e9finitions": [[41, "definitions"]], "D\u00e9finition D1 : classe": [[41, "index-mathdef-0-1"], [152, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : point d\u2019entr\u00e9e du programme": [[41, "index-mathdef-0-2"], [170, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : test": [[41, "index-mathdef-0-3"], [166, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : variable": [[41, "index-mathdef-0-4"], [167, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D10 : frozenset": [[41, "index-mathdef-0-5"], [167, "indexmathe-D\u00e9finition9"]], "D\u00e9finition D2 : constante": [[41, "index-mathdef-0-6"], [167, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : fonction": [[41, "index-mathdef-0-7"], [166, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : instantiaion": [[41, "index-mathdef-0-8"], [152, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D3 : fonction r\u00e9cursive": [[41, "index-mathdef-0-9"], [166, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : m\u00e9thode": [[41, "index-mathdef-0-10"], [152, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : type immuable (ou immutable)": [[41, "index-mathdef-0-11"], [167, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D4 : attribut": [[41, "index-mathdef-0-12"], [152, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : cha\u00eene de caract\u00e8res": [[41, "index-mathdef-0-13"], [167, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : port\u00e9e d\u2019un variable": [[41, "index-mathdef-0-14"], [166, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D5 : m\u00e9thode statique": [[41, "index-mathdef-0-15"], [152, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : tuple": [[41, "index-mathdef-0-16"], [167, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : variable locale": [[41, "index-mathdef-0-17"], [166, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D6 : attribut statique": [[41, "index-mathdef-0-18"], [152, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : type modifiable (ou mutable)": [[41, "index-mathdef-0-19"], [167, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : variable globale": [[41, "index-mathdef-0-20"], [166, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D7 : h\u00e9ritage": [[41, "index-mathdef-0-21"], [152, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D7 : liste": [[41, "index-mathdef-0-22"], [167, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D8 : dictionnaire": [[41, "index-mathdef-0-23"], [167, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D8 : surcharge": [[41, "index-mathdef-0-24"], [152, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D9 : set": [[41, "index-mathdef-0-25"], [167, "indexmathe-D\u00e9finition8"]], "Figures": [[41, "figures"]], "Probl\u00e8mes": [[41, "problemes"], [47, "problemes"], [47, null]], "Syntaxe": [[41, "syntaxe"], [152, "syntaxe"], [175, "syntaxe"]], "Syntaxe S1 : Attraper une exception": [[41, "index-mathdef-3-26"], [155, "indexmathe-Syntaxe0"]], "Syntaxe S1 : D\u00e9claration d\u2019une classe": [[41, "index-mathdef-3-27"], [152, "indexmathe-Syntaxe0"]], "Syntaxe S1 : Tests": [[41, "index-mathdef-3-28"], [166, "indexmathe-Syntaxe0"]], "Syntaxe S1 : importer un module (1)": [[41, "index-mathdef-3-29"], [170, "indexmathe-Syntaxe0"]], "Syntaxe S10 : D\u00e9claration d\u2019un attribut statique": [[41, "index-mathdef-3-30"], [152, "indexmathe-Syntaxe9"]], "Syntaxe S11 : D\u00e9claration d\u2019une propri\u00e9t\u00e9": [[41, "index-mathdef-3-31"], [152, "indexmathe-Syntaxe10"]], "Syntaxe S12 : D\u00e9claration d\u2019une propri\u00e9t\u00e9 (2)": [[41, "index-mathdef-3-32"], [152, "indexmathe-Syntaxe11"]], "Syntaxe S13 : D\u00e9claration de l\u2019op\u00e9rateur __copy__": [[41, "index-mathdef-3-33"], [152, "indexmathe-Syntaxe12"]], "Syntaxe S14 : D\u00e9claration d\u2019attributs fig\u00e9s": [[41, "index-mathdef-3-34"], [152, "indexmathe-Syntaxe13"]], "Syntaxe S15 : H\u00e9ritage": [[41, "index-mathdef-3-35"], [152, "indexmathe-Syntaxe14"]], "Syntaxe S16 : Surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[41, "index-mathdef-3-36"], [152, "indexmathe-Syntaxe15"]], "Syntaxe S2 : Instanciation d\u2019une classe": [[41, "index-mathdef-3-37"], [152, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Instruction pass": [[41, "index-mathdef-3-38"], [166, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Lever une exception": [[41, "index-mathdef-3-39"], [155, "indexmathe-Syntaxe1"]], "Syntaxe S2 : importer un module (2)": [[41, "index-mathdef-3-40"], [170, "indexmathe-Syntaxe1"]], "Syntaxe S3 : Boucle while": [[41, "index-mathdef-3-41"], [166, "indexmathe-Syntaxe2"]], "Syntaxe S3 : D\u00e9claration d\u2019une m\u00e9thode": [[41, "index-mathdef-3-42"], [152, "indexmathe-Syntaxe2"]], "Syntaxe S3 : importer un module (3)": [[41, "index-mathdef-3-43"], [170, "indexmathe-Syntaxe2"]], "Syntaxe S4 : Appel d\u2019une m\u00e9thode": [[41, "index-mathdef-3-44"], [152, "indexmathe-Syntaxe3"]], "Syntaxe S4 : Boucle for": [[41, "index-mathdef-3-45"], [166, "indexmathe-Syntaxe3"]], "Syntaxe S5 : D\u00e9claration d\u2019un attribut": [[41, "index-mathdef-3-46"], [152, "indexmathe-Syntaxe4"]], "Syntaxe S5 : Liste en extension": [[41, "index-mathdef-3-47"], [166, "indexmathe-Syntaxe4"]], "Syntaxe S6 : D\u00e9claration d\u2019un constructeur": [[41, "index-mathdef-3-48"], [152, "indexmathe-Syntaxe5"]], "Syntaxe S6 : D\u00e9claration d\u2019une fonction": [[41, "index-mathdef-3-49"], [166, "indexmathe-Syntaxe5"]], "Syntaxe S7 : Appel d\u2019un constructeur": [[41, "index-mathdef-3-50"], [152, "indexmathe-Syntaxe6"]], "Syntaxe S7 : Appel d\u2019une fonction": [[41, "index-mathdef-3-51"], [166, "indexmathe-Syntaxe6"]], "Syntaxe S8 : D\u00e9claration de l\u2019op\u00e9rateur __str__": [[41, "index-mathdef-3-52"], [152, "indexmathe-Syntaxe7"]], "Syntaxe S8 : Valeurs par d\u00e9faut": [[41, "index-mathdef-3-53"], [166, "indexmathe-Syntaxe7"]], "Syntaxe S9 : D\u00e9claration d\u2019une m\u00e9thode statique": [[41, "index-mathdef-3-54"], [152, "indexmathe-Syntaxe8"]], "Syntaxe S9 : Nombre ind\u00e9fini de param\u00e8tres": [[41, "index-mathdef-3-55"], [166, "indexmathe-Syntaxe8"]], "Tables": [[41, "tables"]], "Langage Python": [[42, "langage-python"]], "numpy": [[42, "numpy"]], "Introduction": [[45, "introduction"], [48, "Introduction"], [160, "introduction"]], "Installation de Python": [[45, "installation-de-python"]], "Installation d\u2019extensions ou modules ou packages": [[45, "installation-d-extensions-ou-modules-ou-packages"]], "Accents": [[45, "accents"]], "Trois concepts, s\u00e9quence, test, boucle": [[45, "trois-concepts-sequence-test-boucle"]], "Algorithmes": [[45, "algorithmes"], [47, "algorithmes"], [47, null], [47, null], [92, "algorithmes"]], "Fichier ou notebook": [[45, "fichier-ou-notebook"]], "Algorithmes de streaming, BJKST": [[48, "Algorithmes-de-streaming,-BJKST"]], "Estimer le nombre d\u2019\u00e9l\u00e9ments distincts: l\u2019algorithme BJKST": [[48, "Estimer-le-nombre-d'\u00e9l\u00e9ments-distincts:-l'algorithme-BJKST"]], "Universal hashing": [[48, "Universal-hashing"]], "Collisions": [[48, "Collisions"]], "Algorithme BJKST": [[48, "Algorithme-BJKST"]], "R\u00e9sultats num\u00e9riques": [[48, "R\u00e9sultats-num\u00e9riques"]], "Temps de calcul en fonction de la taille du stream": [[48, "Temps-de-calcul-en-fonction-de-la-taille-du-stream"]], "Un peu plus sur la pr\u00e9cision de l\u2019estimateur": [[48, "Un-peu-plus-sur-la-pr\u00e9cision-de-l'estimateur"]], "h_1 et h_2 \u00e9gales \u00e0 l\u2019identit\u00e9": [[48, "h_1-et-h_2-\u00e9gales-\u00e0-l'identit\u00e9"]], "cas o\u00f9 la taille du hash est petite": [[48, "cas-o\u00f9-la-taille-du-hash-est-petite"]], "cas o\u00f9 la taille de hash est plus grande": [[48, "cas-o\u00f9-la-taille-de-hash-est-plus-grande"]], "la taille de hash d\u00e9pend de la pr\u00e9cision \\epsilon": [[48, "la-taille-de-hash-d\u00e9pend-de-la-pr\u00e9cision-\\epsilon"]], "Graphe et Composantes connexes": [[49, "Graphe-et-Composantes-connexes"]], "Q1 : construire une matrice d\u2019adjacence sym\u00e9trique al\u00e9atoire": [[49, "Q1-:-construire-une-matrice-d'adjacence-sym\u00e9trique-al\u00e9atoire"], [49, "id1"]], "Q2 : calculer les valeurs propres et les trier par ordre croissant": [[49, "Q2-:-calculer-les-valeurs-propres-et-les-trier-par-ordre-croissant"], [49, "id2"]], "Q3 : que fait l\u2019algorithme suivant": [[49, "Q3-:-que-fait-l'algorithme-suivant"], [49, "id3"]], "Q4 : construire un algorithme qui retourne les composantes connexes d\u2019un graphe": [[49, "Q4-:-construire-un-algorithme-qui-retourne-les-composantes-connexes-d'un-graphe"], [49, "id4"]], "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.": [[50, "Calculer-le-nombre-de-fa\u00e7ons-de-monter-une-\u00e9chelle."]], "Enonc\u00e9s": [[50, "Enonc\u00e9s"], [64, "Enonc\u00e9s"], [67, "enonces"], [92, null], [94, null]], "Enonc\u00e9 1": [[50, "Enonc\u00e9-1"], [68, "Enonc\u00e9-1"], [69, "Enonc\u00e9-1"], [70, "Enonc\u00e9-1"], [71, "Enonc\u00e9-1"], [72, "Enonc\u00e9-1"], [73, "Enonc\u00e9-1"]], "Enonc\u00e9 2": [[50, "Enonc\u00e9-2"], [68, "Enonc\u00e9-2"], [69, "Enonc\u00e9-2"], [70, "Enonc\u00e9-2"], [72, "Enonc\u00e9-2"], [73, "Enonc\u00e9-2"]], "Enonc\u00e9 3": [[50, "Enonc\u00e9-3"], [70, "Enonc\u00e9-3"]], "Solutions": [[50, "Solutions"], [64, "Solutions"]], "Solution au probl\u00e8me 1": [[50, "Solution-au-probl\u00e8me-1"], [64, "Solution-au-probl\u00e8me-1"]], "Solution au probl\u00e8me 2": [[50, "Solution-au-probl\u00e8me-2"]], "Solution au probl\u00e8me 3": [[50, "Solution-au-probl\u00e8me-3"]], "Distance d\u2019\u00e9dition": [[51, "Distance-d'\u00e9dition"], [52, "Distance-d'\u00e9dition"]], "Q1 : Distance simple entre deux mots de m\u00eame longueur": [[51, "Q1-:-Distance-simple-entre-deux-mots-de-m\u00eame-longueur"], [51, "id1"]], "Q2 : Distance simple entre deux mots de longueur diff\u00e9rente": [[51, "Q2-:-Distance-simple-entre-deux-mots-de-longueur-diff\u00e9rente"], [51, "id2"]], "Q3 : Distance alambiqu\u00e9e\u2026": [[51, "Q3-:-Distance-alambiqu\u00e9e..."], [51, "id3"]], "Q4 : impl\u00e9menter l\u2019algorithme de la page wikipedia": [[51, "Q4-:-impl\u00e9menter-l'algorithme-de-la-page-wikipedia"], [51, "id4"]], "Distance entre deux mots de m\u00eame longueur et tests unitaires": [[52, "Distance-entre-deux-mots-de-m\u00eame-longueur-et-tests-unitaires"]], "Distance na\u00efve": [[52, "Distance-na\u00efve"]], "Distance tr\u00e8s na\u00efve": [[52, "Distance-tr\u00e8s-na\u00efve"]], "Distance entre deux mots de longueur diff\u00e9rente mais pas si diff\u00e9rente": [[52, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente-mais-pas-si-diff\u00e9rente"]], "Distance entre deux mots de longueur diff\u00e9rente": [[52, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente"]], "Test unitaires": [[52, "Test-unitaires"]], "m et n sont tr\u00e8s proches, et alors ?": [[52, "m-et-n-sont-tr\u00e8s-proches,-et-alors-?"]], "ff, f, ph, f\u2026 plus personne ne sait \u00e9crire": [[52, "ff,-f,-ph,-f...-plus-personne-ne-sait-\u00e9crire"]], "La sous-s\u00e9quence de plus grande somme": [[54, "La-sous-s\u00e9quence-de-plus-grande-somme"]], "Solution na\u00efve": [[54, "Solution-na\u00efve"], [128, "Solution-na\u00efve"]], "Solution plus rapide": [[54, "Solution-plus-rapide"]], "Solution dichotomique": [[54, "Solution-dichotomique"]], "Solution lin\u00e9aire": [[54, "Solution-lin\u00e9aire"]], "Comparaison des temps de calcul": [[54, "Comparaison-des-temps-de-calcul"]], "Application": [[54, "Application"]], "Graphes al\u00e9atoires": [[55, "Graphes-al\u00e9atoires"]], "Graphe al\u00e9atoire - matrice d\u2019adjacence al\u00e9atoire": [[55, "Graphe-al\u00e9atoire---matrice-d'adjacence-al\u00e9atoire"]], "Vocabulaire li\u00e9 aux graphes": [[55, "Vocabulaire-li\u00e9-aux-graphes"]], "Apart\u00e9 : matrice d\u2019adjacence \u00e0 la puissance n": [[55, "Apart\u00e9-:-matrice-d'adjacence-\u00e0-la-puissance-n"]], "Trouver le nombre de composantes connexes": [[55, "Trouver-le-nombre-de-composantes-connexes"]], "G\u00e9n\u00e9ration d\u2019un graphe al\u00e9atoire": [[55, "G\u00e9n\u00e9ration-d'un-graphe-al\u00e9atoire"]], "Version 1": [[55, "Version-1"]], "Version 2": [[55, "Version-2"]], "Simulation COVID": [[56, "Simulation-COVID"]], "Mod\u00e8le SIRD": [[56, "Mod\u00e8le-SIRD"]], "Q0 : une petite fonction pour dessiner": [[56, "Q0-:-une-petite-fonction-pour-dessiner"]], "Q1 : \u00e9crire une fonction qui calcule la propagation": [[56, "Q1-:-\u00e9crire-une-fonction-qui-calcule-la-propagation"]], "Q2 : on veut estimer les param\u00e8tres du mod\u00e8le, une fonction d\u2019erreur ?": [[56, "Q2-:-on-veut-estimer-les-param\u00e8tres-du-mod\u00e8le,-une-fonction-d'erreur-?"]], "Q3 : optimisation": [[56, "Q3-:-optimisation"]], "Q4 : dessiner les r\u00e9sultats": [[56, "Q4-:-dessiner-les-r\u00e9sultats"]], "Q5 : v\u00e9rifier que cela marche sur des donn\u00e9es synth\u00e9tiques": [[56, "Q5-:-v\u00e9rifier-que-cela-marche-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Q6 : sur des donn\u00e9es r\u00e9elles": [[56, "Q6-:-sur-des-donn\u00e9es-r\u00e9elles"], [56, "id1"]], "Q1 : propagation": [[56, "Q1-:-propagation"]], "Q2 : s\u00e9rie cumul\u00e9es et fonction erreur": [[56, "Q2-:-s\u00e9rie-cumul\u00e9es-et-fonction-erreur"]], "Q3, Q4, Q5 : optimisation sur des donn\u00e9es synth\u00e9tiques": [[56, "Q3,-Q4,-Q5-:-optimisation-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)": [[57, "Mod\u00e8le-\u00e9pid\u00e9miologique-(SIRD)"]], "Simulation": [[57, "Simulation"], [92, null]], "Visualisation": [[57, "Visualisation"], [63, "Visualisation"]], "Estimation des param\u00e8tres": [[57, "Estimation-des-param\u00e8tres"]], "Premi\u00e8re id\u00e9e": [[57, "Premi\u00e8re-id\u00e9e"], [131, "Premi\u00e8re-id\u00e9e"]], "Seconde id\u00e9e : probl\u00e8mes d\u2019optimisation": [[57, "Seconde-id\u00e9e-:-probl\u00e8mes-d'optimisation"]], "Les k premiers \u00e9l\u00e9ments (top k)": [[59, "Les-k-premiers-\u00e9l\u00e9ments-(top-k)"]], "Exercice 1 : on trie tout et on prend les k plus petit": [[59, "Exercice-1-:-on-trie-tout-et-on-prend-les-k-plus-petit"], [59, "id1"]], "Exercice 2 : version plus rapide au choix": [[59, "Exercice-2-:-version-plus-rapide-au-choix"], [59, "id2"]], "Exercice 3 : algorithme de s\u00e9lection": [[59, "Exercice-3-:-algorithme-de-s\u00e9lection"], [59, "id3"]], "Exercice 4 : utiliser la fonction perf_counter pour comparer les vitessses de chaque solution": [[59, "Exercice-4-:-utiliser-la-fonction-perf_counter-pour-comparer-les-vitessses-de-chaque-solution"], [59, "id4"]], "TSP - Traveling Salesman Problem": [[60, "TSP---Traveling-Salesman-Problem"]], "Q1 : choisir une permutation al\u00e9atoire des villes et calculer la distance du chemin qui les relie dans cet ordre": [[60, "Q1-:-choisir-une-permutation-al\u00e9atoire-des-villes-et-calculer-la-distance-du-chemin-qui-les-relie-dans-cet-ordre"]], "Q2 : tirer deux villes al\u00e9atoirement, les inverser, garder la permutation si elle am\u00e9liore la distance": [[60, "Q2-:-tirer-deux-villes-al\u00e9atoirement,-les-inverser,-garder-la-permutation-si-elle-am\u00e9liore-la-distance"]], "Q3 : choisir deux villes al\u00e9atoirement, permuter une des deux moiti\u00e9s\u2026": [[60, "Q3-:-choisir-deux-villes-al\u00e9atoirement,-permuter-une-des-deux-moiti\u00e9s..."]], "Q4 : tester toutes les permutations possibles\u2026 je plaisante\u2026": [[60, "Q4-:-tester-toutes-les-permutations-possibles...-je-plaisante..."]], "Calculer x**n le plus rapidement possible": [[61, "Calculer-x**n-le-plus-rapidement-possible"]], "Solution": [[61, "Solution"]], "Produit matriciel avec une matrice creuse": [[62, "Produit-matriciel-avec-une-matrice-creuse"]], "Matrice creuse et dictionnaire": [[62, "Matrice-creuse-et-dictionnaire"]], "Calcul de la dimension": [[62, "Calcul-de-la-dimension"]], "Produit matriciel classique": [[62, "Produit-matriciel-classique"]], "Produit matriciel plus \u00e9l\u00e9gant": [[62, "Produit-matriciel-plus-\u00e9l\u00e9gant"]], "Mesure du temps": [[62, "Mesure-du-temps"], [139, "Mesure-du-temps"]], "Dictionnaires de dictionnaires": [[62, "Dictionnaires-de-dictionnaires"]], "Apart\u00e9 sur le voyageur de commerce": [[63, "Apart\u00e9-sur-le-voyageur-de-commerce"]], "Tirer des points al\u00e9atoirement et les afficher": [[63, "Tirer-des-points-al\u00e9atoirement-et-les-afficher"]], "Distance d\u2019un chemin": [[63, "Distance-d'un-chemin"]], "Parcourir toutes les permutations": [[63, "Parcourir-toutes-les-permutations"]], "Module tqdm": [[63, "Module-tqdm"]], "Retournement": [[63, "Retournement"]], "D\u00e9coder du Morse sans espaces": [[64, "D\u00e9coder-du-Morse-sans-espaces"]], "Exercice 1 : Traduire un texte Morse qui ne contient pas d\u2019espace": [[64, "Exercice-1-:-Traduire-un-texte-Morse-qui-ne-contient-pas-d'espace"]], "Exercice 2 : calculer l\u2019alphabet qui minimise une transcription": [[64, "Exercice-2-:-calculer-l'alphabet-qui-minimise-une-transcription"]], "Solution au probl\u00e8me 2 avec des expressions r\u00e9guli\u00e8res": [[64, "Solution-au-probl\u00e8me-2-avec-des-expressions-r\u00e9guli\u00e8res"]], "Solution au probl\u00e8me 2 : toutes les interpr\u00e9tations": [[64, "Solution-au-probl\u00e8me-2-:-toutes-les-interpr\u00e9tations"]], "Parcourir les rues de Paris": [[65, "Parcourir-les-rues-de-Paris"]], "Les donn\u00e9es": [[65, "Les-donn\u00e9es"], [126, "Les-donn\u00e9es"]], "Une premi\u00e8re solution au premier probl\u00e8me": [[65, "Une-premi\u00e8re-solution-au-premier-probl\u00e8me"]], "Etape 1 : la matrice Bellman": [[65, "Etape-1-:-la-matrice-Bellman"]], "Kruskall": [[65, "Kruskall"]], "Chemin Eul\u00e9rien": [[65, "Chemin-Eul\u00e9rien"]], "Algorithme optimal": [[65, "Algorithme-optimal"]], "Variantes": [[65, "Variantes"]], "Sens interdit et gaphe orient\u00e9": [[65, "Sens-interdit-et-gaphe-orient\u00e9"]], "Windy postman problem": [[65, "Windy-postman-problem"]], "Casser le code de Vigen\u00e8re": [[66, "Casser-le-code-de-Vigen\u00e8re"]], "Exercices minut\u00e9s": [[67, "exercices-minutes"]], "S\u00e9ances not\u00e9es": [[67, "seances-notees"]], "Corrections": [[67, "corrections"]], "Exercices courts": [[67, "exercices-courts"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014": [[68, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014": [[69, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-10-octobre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014": [[70, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"], [71, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"]], "Q5": [[70, "Q5"], [70, "id5"], [70, "id10"], [71, "Q5"], [75, "Q5"], [78, "Q5"], [79, "Q5"], [79, "id2"], [80, "Q5"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015": [[72, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2015"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015": [[73, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-6-novembre-2015"]], "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)": [[74, "1A.e---TD-not\u00e9,-27-novembre-2012-(\u00e9l\u00e9ments-de-code-pour-le-coloriage)"]], "construction de la spirale": [[74, "construction-de-la-spirale"], [75, "construction-de-la-spirale"]], "dessin de la spirale": [[74, "dessin-de-la-spirale"], [75, "dessin-de-la-spirale"]], "ajouter du rouge": [[74, "ajouter-du-rouge"]], "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)": [[75, "1A.e---TD-not\u00e9,-27-novembre-2012-(coloriage,-correction)"]], "version 1": [[75, "version-1"], [75, "id1"]], "version 4": [[75, "version-4"], [75, "id2"]], "Q4 : spirale": [[75, "Q4-:-spirale"]], "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014": [[76, "1A.e---TD-not\u00e9,-5-d\u00e9cembre-2014"]], "Exercice 1": [[76, "Exercice-1"], [79, "Exercice-1"], [80, "Exercice-1"], [136, "Exercice-1"], [137, "Exercice-1"], [126, "Exercice-1"], [127, "Exercice-1"]], "Exercice 2": [[76, "Exercice-2"], [79, "Exercice-2"], [87, "Exercice-2"], [137, "Exercice-2"], [126, "Exercice-2"], [127, "Exercice-2"]], "Exercice 3": [[76, "Exercice-3"], [126, "Exercice-3"], [127, "Exercice-3"]], "Exercice 4": [[76, "Exercice-4"], [126, "Exercice-4"], [127, "Exercice-4"]], "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)": [[77, "1A.e---TD-not\u00e9-2015-rattrapage-(\u00e9nonc\u00e9,-\u00e9crit-et-oral)"]], "Question 1": [[77, "Question-1"]], "Question 2": [[77, "Question-2"]], "Question 3": [[77, "Question-3"]], "Question 4": [[77, "Question-4"]], "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015": [[78, "1A.e---TD-not\u00e9,-11-d\u00e9cembre-2015"]], "Exercice 1 : Louer ou acheter un appartement ?": [[78, "Exercice-1-:-Louer-ou-acheter-un-appartement-?"]], "Q6": [[78, "Q6"], [79, "Q6"], [79, "id3"], [80, "Q6"]], "Q7 exo 1": [[78, "Q7-exo-1"]], "Q7 exo 2": [[78, "Q7-exo-2"]], "Q8": [[78, "Q8"], [79, "Q8"], [79, "id5"], [80, "Q8"]], "Q9 version dichotomique de Q4": [[78, "Q9-version-dichotomique-de-Q4"]], "Exercice 2 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[78, "Exercice-2-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "Exercice 3 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[78, "Exercice-3-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016": [[79, "1A.e---TD-not\u00e9,-16-d\u00e9cembre-2016"]], "Q7": [[79, "Q7"], [79, "id4"], [80, "Q7"], [105, "Q7"]], "Q9": [[79, "Q9"], [79, "id6"], [80, "Q9"]], "Q10": [[79, "Q10"], [79, "id7"], [80, "Q10"], [84, "Q10"]], "Q1 - Q2 - Q3": [[79, "Q1---Q2---Q3"]], "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017": [[80, "1A.e---TD-not\u00e9,-21-f\u00e9vrier-2017"]], "Quelques explications et d\u00e9monstrations": [[80, "Quelques-explications-et-d\u00e9monstrations"]], "Quelques commentaires sur le code": [[80, "Quelques-commentaires-sur-le-code"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)": [[81, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(1)"]], "Q1 - \u00e9chantillon al\u00e9atoire": [[81, "Q1---\u00e9chantillon-al\u00e9atoire"], [82, "Q1---\u00e9chantillon-al\u00e9atoire"], [83, "Q1---\u00e9chantillon-al\u00e9atoire"], [84, "Q1---\u00e9chantillon-al\u00e9atoire"]], "Q1 - dessiner le nuage de points - donn\u00e9e": [[81, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"], [82, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"]], "Q2 - tri": [[81, "Q2---tri"], [82, "Q2---tri"]], "Q3 - moyenne": [[81, "Q3---moyenne"], [82, "Q3---moyenne"], [83, "Q3---moyenne"], [84, "Q3---moyenne"]], "Q4 - distance": [[81, "Q4---distance"], [82, "Q4---distance"]], "Q5 - fonction comme param\u00e8tre": [[81, "Q5---fonction-comme-param\u00e8tre"], [82, "Q5---fonction-comme-param\u00e8tre"]], "Q6 - optimiser": [[81, "Q6---optimiser"], [82, "Q6---optimiser"]], "Q7 - optimisation encore": [[81, "Q7---optimisation-encore"], [82, "Q7---optimisation-encore"]], "Q8 - fonction r\u00e9cursive": [[81, "Q8---fonction-r\u00e9cursive"], [82, "Q8---fonction-r\u00e9cursive"]], "Q9 - co\u00fbt": [[81, "Q9---co\u00fbt"]], "Q10 - autre nuage de points": [[81, "Q10---autre-nuage-de-points"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)": [[82, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(2)"]], "Q9 - seuil": [[82, "Q9---seuil"]], "Q10 - co\u00fbt": [[82, "Q10---co\u00fbt"]], "1A.e - Enonc\u00e9 23 octobre 2018 (1)": [[83, "1A.e---Enonc\u00e9-23-octobre-2018-(1)"]], "Q2 - matrice m1": [[83, "Q2---matrice-m1"], [84, "Q2---matrice-m1"]], "Q4 - matrice m2": [[83, "Q4---matrice-m2"], [84, "Q4---matrice-m2"]], "Q5 - matrice m3": [[83, "Q5---matrice-m3"]], "Q6 - norme": [[83, "Q6---norme"]], "Q7 - r\u00e9p\u00e9tition": [[83, "Q7---r\u00e9p\u00e9tition"]], "Q8 - plus de valeurs manquantes": [[83, "Q8---plus-de-valeurs-manquantes"]], "Q9 - 1 valeur manquante ?": [[83, "Q9---1-valeur-manquante-?"]], "Q10 - plus de deux colonnes ?": [[83, "Q10---plus-de-deux-colonnes-?"]], "1A.e - Enonc\u00e9 23 octobre 2018 (2)": [[84, "1A.e---Enonc\u00e9-23-octobre-2018-(2)"]], "Q5 - x le plus proche": [[84, "Q5---x-le-plus-proche"]], "Q6 - matrice m3": [[84, "Q6---matrice-m3"]], "Q7 - norme": [[84, "Q7---norme"]], "Q8 - r\u00e9p\u00e9tition": [[84, "Q8---r\u00e9p\u00e9tition"]], "Q9 - plus de valeurs manquantes": [[84, "Q9---plus-de-valeurs-manquantes"]], "1A.e - Enonc\u00e9 22 octobre 2019 (1)": [[85, "1A.e---Enonc\u00e9-22-octobre-2019-(1)"]], "Q1 - distance_table": [[85, "Q1---distance_table"], [86, "Q1---distance_table"]], "Q2 - distance_bord": [[85, "Q2---distance_bord"], [86, "Q2---distance_bord"]], "Q3 - table_alea": [[85, "Q3---table_alea"], [86, "Q3---table_alea"]], "Q4 - n_table_alea": [[85, "Q4---n_table_alea"], [86, "Q4---n_table_alea"]], "Q5 - table_proches": [[85, "Q5---table_proches"], [86, "Q5---table_proches"]], "Q6 - distance_n_tables_alea": [[85, "Q6---distance_n_tables_alea"], [86, "Q6---distance_n_tables_alea"]], "Q7 - meilleur_table_alea": [[85, "Q7---meilleur_table_alea"], [86, "Q7---meilleur_table_alea"]], "Q8 - r\u00e9sultat num\u00e9rique": [[85, "Q8---r\u00e9sultat-num\u00e9rique"], [86, "Q8---r\u00e9sultat-num\u00e9rique"]], "Q9 - plot_tables": [[85, "Q9---plot_tables"], [86, "Q9---plot_tables"]], "Q10 \u2026": [[85, "Q10-..."], [86, "Q10-..."]], "Q10 - Vorono\u00ef": [[85, "Q10---Vorono\u00ef"], [86, "Q10---Vorono\u00ef"]], "Q10 - KMeans": [[85, "Q10---KMeans"], [86, "Q10---KMeans"]], "1A.e - Enonc\u00e9 22 octobre 2019 (2)": [[86, "1A.e---Enonc\u00e9-22-octobre-2019-(2)"]], "1A - Enonc\u00e9 24 novembre 2020": [[87, "1A---Enonc\u00e9-24-novembre-2020"]], "Exercice 1 : gu\u00e9rison": [[87, "Exercice-1-:-gu\u00e9rison"]], "Q2 : dur\u00e9e de gu\u00e9rison": [[87, "Q2-:-dur\u00e9e-de-gu\u00e9rison"]], "Q3 : estimateur Kaplan-Meier (1)": [[87, "Q3-:-estimateur-Kaplan-Meier-(1)"]], "Q4 : courbe de Kaplan-Meier": [[87, "Q4-:-courbe-de-Kaplan-Meier"]], "Q5 : graphe": [[87, "Q5-:-graphe"]], "Q6 : application aux donn\u00e9es publiques": [[87, "Q6-:-application-aux-donn\u00e9es-publiques"]], "Q1 : t + 1": [[87, "Q1-:-t-+-1"]], "Q2 : apr\u00e8s T it\u00e9ration": [[87, "Q2-:-apr\u00e8s-T-it\u00e9ration"]], "Q3 : vaccin": [[87, "Q3-:-vaccin"]], "Q4 : apr\u00e8s T heures": [[87, "Q4-:-apr\u00e8s-T-heures"]], "Q5 : variation": [[87, "Q5-:-variation"]], "1A - Enonc\u00e9 3 novembre 2021": [[88, "1A---Enonc\u00e9-3-novembre-2021"]], "Exercice 1 : multiplication de matrices": [[88, "Exercice-1-:-multiplication-de-matrices"]], "Q1 : Pourquoi (m1 @ m2) @ m3 est-il plus lent que m1 @ (m2 @ m3) ? (2 points)": [[88, "Q1-:-Pourquoi-(m1-@-m2)-@-m3-est-il-plus-lent-que-m1-@-(m2-@-m3)-?-(2-points)"]], "Q2 : Ecrire une fonction qui calcule le nombre d\u2019operations dans une multiplication de deux matrices (2 points)": [[88, "Q2-:-Ecrire-une-fonction-qui-calcule-le-nombre-d'operations-dans-une-multiplication-de-deux-matrices-(2-points)"]], "Q3 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de deux matrices et la meilleure option (2 points)": [[88, "Q3-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-deux-matrices-et-la-meilleure-option-(2-points)"]], "Q4 : Ecrire une fonction qui effectue le produit de trois matrices le plus rapidement possible (2 points)": [[88, "Q4-:-Ecrire-une-fonction-qui-effectue-le-produit-de-trois-matrices-le-plus-rapidement-possible-(2-points)"]], "Q5 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps (2 points)": [[88, "Q5-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-(2-points)"]], "Q6 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de 4 matrices et la meilleure option (3 points)": [[88, "Q6-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-4-matrices-et-la-meilleure-option-(3-points)"]], "Q7 : Ecrire une fonction qui effectue le produit de 4 matrices le plus rapidement possible (3 points)": [[88, "Q7-:-Ecrire-une-fonction-qui-effectue-le-produit-de-4-matrices-le-plus-rapidement-possible-(3-points)"]], "Q8 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps et la matrice m4. (2 points)": [[88, "Q8-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-et-la-matrice-m4.-(2-points)"]], "Q9 : On se penche sur le cas \u00e0 une multiplication de N matrices, combien y a-t-il de multiplications de 2 matrices ? (2 points)": [[88, "Q9-:-On-se-penche-sur-le-cas-\u00e0-une-multiplication-de-N-matrices,-combien-y-a-t-il-de-multiplications-de-2-matrices-?-(2-points)"]], "Q10 : R\u00e9soudre l\u2019optimisation de multiplication de N matrices.": [[88, "Q10-:-R\u00e9soudre-l'optimisation-de-multiplication-de-N-matrices."]], "Remarques lors de la correction": [[88, "Remarques-lors-de-la-correction"]], "1A - Enonc\u00e9 15 novembre 2021 - rattrapage": [[89, "1A---Enonc\u00e9-15-novembre-2021---rattrapage"]], "Exercice 1 : optimisation de volume": [[89, "Exercice-1-:-optimisation-de-volume"]], "Q1 : \u00e9crire une fonction qui calcule l\u2019aire d\u2019une surface": [[89, "Q1-:-\u00e9crire-une-fonction-qui-calcule-l'aire-d'une-surface"]], "Q2 : \u00e9crire une fonction qui calcule le volume d\u2019une brique": [[89, "Q2-:-\u00e9crire-une-fonction-qui-calcule-le-volume-d'une-brique"]], "Q3 : \u00e9crire une fonction qui retourne la somme des surfaces des faces d\u2019une brique": [[89, "Q3-:-\u00e9crire-une-fonction-qui-retourne-la-somme-des-surfaces-des-faces-d'une-brique"]], "Q4 : la brique optimale": [[89, "Q4-:-la-brique-optimale"]], "Q5 : on inclut la surface n\u00e9cessaire pour coller les extremit\u00e9s": [[89, "Q5-:-on-inclut-la-surface-n\u00e9cessaire-pour-coller-les-extremit\u00e9s"]], "Q6 : une bouteille de deux litres deux fois plus large": [[89, "Q6-:-une-bouteille-de-deux-litres-deux-fois-plus-large"]], "Q7 : petite brique en bleue, grosse brique en rouge": [[89, "Q7-:-petite-brique-en-bleue,-grosse-brique-en-rouge"]], "1A - Enonc\u00e9 3 mars 2022- rattrapage": [[90, "1A---Enonc\u00e9-3-mars-2022--rattrapage"]], "Dessin d\u2019une liste de segments": [[90, "Dessin-d'une-liste-de-segments"]], "Distance d\u2019un segment": [[90, "Distance-d'un-segment"]], "Calcul du segment suivant": [[90, "Calcul-du-segment-suivant"]], "Calcul des trois segments suivants": [[90, "Calcul-des-trois-segments-suivants"]], "Construction de tous les niveaux de l\u2019arbre": [[90, "Construction-de-tous-les-niveaux-de-l'arbre"]], "Construction de trois segments al\u00e9atoires": [[90, "Construction-de-trois-segments-al\u00e9atoires"]], "Construction d\u2019un arbre al\u00e9atoire": [[90, "Construction-d'un-arbre-al\u00e9atoire"]], "1A - Enonc\u00e9 26 octobre 2022": [[91, "1A---Enonc\u00e9-26-octobre-2022"]], "Exercice 1 : calcul de distances": [[91, "Exercice-1-:-calcul-de-distances"]], "Q1 : tirer deux matrices al\u00e9atoires pour X et Y, de tailles diff\u00e9rentes": [[91, "Q1-:-tirer-deux-matrices-al\u00e9atoires-pour-X-et-Y,-de-tailles-diff\u00e9rentes"]], "Q2 : calculer tous les distances entre X et Y": [[91, "Q2-:-calculer-tous-les-distances-entre-X-et-Y"]], "Q3 : \u00e9crire un test unitaire qui v\u00e9rifie le r\u00e9sultat lorsque X est la matrice identit\u00e9 2x2": [[91, "Q3-:-\u00e9crire-un-test-unitaire-qui-v\u00e9rifie-le-r\u00e9sultat-lorsque-X-est-la-matrice-identit\u00e9-2x2"]], "Q4 : quel est le co\u00fbt de l\u2019algorithme en fonction des dimensions de X et Y ?": [[91, "Q4-:-quel-est-le-co\u00fbt-de-l'algorithme-en-fonction-des-dimensions-de-X-et-Y-?"]], "Q5 : Ecrire une fonction qui retourne l\u2019indice du m\u00e9decin le plus proche pour chaque rue": [[91, "Q5-:-Ecrire-une-fonction-qui-retourne-l'indice-du-m\u00e9decin-le-plus-proche-pour-chaque-rue"]], "Q6 : on cr\u00e9e une grille 10x10 pour quadriller l\u2019espace. Ecrire une fonction qui calcule les coordonn\u00e9es de la grille pour un point donn\u00e9.": [[91, "Q6-:-on-cr\u00e9e-une-grille-10x10-pour-quadriller-l'espace.-Ecrire-une-fonction-qui-calcule-les-coordonn\u00e9es-de-la-grille-pour-un-point-donn\u00e9."]], "Q7 : \u00e9crire une fonction qui cr\u00e9\u00e9 un dictionaire { case_grille : indices }.": [[91, "Q7-:-\u00e9crire-une-fonction-qui-cr\u00e9\u00e9-un-dictionaire-{-case_grille-:-indices-}."]], "Q8 : modifier la fonction pairwise_distance pour ne calculer que les distances des points dans la m\u00eame case": [[91, "Q8-:-modifier-la-fonction-pairwise_distance-pour-ne-calculer-que-les-distances-des-points-dans-la-m\u00eame-case"]], "Q9 : Mesurer le temps pour deux matrices 1000x2, 100x2 ?": [[91, "Q9-:-Mesurer-le-temps-pour-deux-matrices-1000x2,-100x2-?"]], "Q10 : le r\u00e9sultat est utilis\u00e9 pour retourner le m\u00e9decin le plus proche ? Avec la seconde fonction, o\u00f9 les r\u00e9sultats sont-ils faux et que faire pour corriger ?": [[91, "Q10-:-le-r\u00e9sultat-est-utilis\u00e9-pour-retourner-le-m\u00e9decin-le-plus-proche-?-Avec-la-seconde-fonction,-o\u00f9-les-r\u00e9sultats-sont-ils-faux-et-que-faire-pour-corriger-?"]], "S\u00e9ances minut\u00e9es": [[93, "seances-minutees"]], "2048 et les classes": [[99, "2048-et-les-classes"]], "D\u00e9composition du probl\u00e8me": [[99, "D\u00e9composition-du-probl\u00e8me"]], "0 - Cr\u00e9ation de la matrice de jeu": [[99, "0---Cr\u00e9ation-de-la-matrice-de-jeu"]], "2 - D\u00e9termination de toutes les cases libres": [[99, "2---D\u00e9termination-de-toutes-les-cases-libres"]], "1 - Ajout d\u2019un nombre al\u00e9atoire dans {2,4} \u00e0 une position al\u00e9atoire pourvu qu\u2019elle soit libre": [[99, "1---Ajout-d'un-nombre-al\u00e9atoire-dans-{2,4}-\u00e0-une-position-al\u00e9atoire-pourvu-qu'elle-soit-libre"]], "3 - A-t-on perdu ?": [[99, "3---A-t-on-perdu-?"]], "5 - Aggr\u00e8ge les nombres dans un tableau que ce soit une ligne ou une colonne": [[99, "5---Aggr\u00e8ge-les-nombres-dans-un-tableau-que-ce-soit-une-ligne-ou-une-colonne"]], "4 - Joue un coup sachant une direction donn\u00e9e": [[99, "4---Joue-un-coup-sachant-une-direction-donn\u00e9e"]], "6 - score": [[99, "6---score"]], "7 - coup suivant": [[99, "7---coup-suivant"]], "8 - la fonction faisant tout": [[99, "8---la-fonction-faisant-tout"]], "Classe compl\u00e8te": [[99, "Classe-compl\u00e8te"]], "Un dernier graphe pour finir": [[99, "Un-dernier-graphe-pour-finir"]], "Une autre strat\u00e9gie pour illustrer l\u2019h\u00e9ritage": [[99, "Une-autre-strat\u00e9gie-pour-illustrer-l'h\u00e9ritage"]], "Un bref aper\u00e7u des classes": [[100, "Un-bref-aper\u00e7u-des-classes"]], "Une station de m\u00e9tro": [[100, "Une-station-de-m\u00e9tro"]], "Une distance": [[100, "Une-distance"]], "M\u00e9thode": [[100, "M\u00e9thode"]], "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations": [[101, "Liste,-tuple,-ensemble,-dictionnaire,-liste-cha\u00een\u00e9e,-co\u00fbt-des-op\u00e9rations"]], "Insertion avec list et deque": [[101, "Insertion-avec-list-et-deque"]], "Un \u00e9l\u00e9ment dans un ensemble": [[101, "Un-\u00e9l\u00e9ment-dans-un-ensemble"]], "Simuler une loi multinomiale": [[102, "Simuler-une-loi-multinomiale"]], "Algorithme de simulation": [[102, "Algorithme-de-simulation"]], "Une premi\u00e8re optimisation : tri des poids": [[102, "Une-premi\u00e8re-optimisation-:-tri-des-poids"]], "Optimisation bootstrap": [[102, "Optimisation-bootstrap"]], "Jeux de coloriage": [[103, "Jeux-de-coloriage"]], "Colorier un carr\u00e9 \u00e0 proportion": [[103, "Colorier-un-carr\u00e9-\u00e0-proportion"]], "Colorier en diagonale": [[103, "Colorier-en-diagonale"]], "Fonction de la surface couverte": [[103, "Fonction-de-la-surface-couverte"]], "Version math\u00e9matique": [[103, "Version-math\u00e9matique"]], "Retour au coloriage": [[103, "Retour-au-coloriage"]], "A quoi \u00e7a sert ?": [[103, "A-quoi-\u00e7a-sert-?"], [175, "a-quoi-ca-sert"]], "Jeu de d\u00e9, rotation sur un circuit": [[104, "Jeu-de-d\u00e9,-rotation-sur-un-circuit"]], "R\u00e9partition, table de hashage": [[105, "R\u00e9partition,-table-de-hashage"]], "Q1 - premi\u00e8re lettre": [[105, "Q1---premi\u00e8re-lettre"]], "Q2 - somme": [[105, "Q2---somme"]], "Q3 - pseudo g\u00e9n\u00e9rateur": [[105, "Q3---pseudo-g\u00e9n\u00e9rateur"]], "Q4 - hash": [[105, "Q4---hash"]], "Q5 - light hash": [[105, "Q5---light-hash"]], "Q6 - r\u00e9partition": [[105, "Q6---r\u00e9partition"]], "Q7 - dictionnaire": [[105, "Q7---dictionnaire"]], "Quelques \u00e9l\u00e9ments de r\u00e9ponses": [[105, "Quelques-\u00e9l\u00e9ments-de-r\u00e9ponses"]], "Premi\u00e8re lettre": [[105, "Premi\u00e8re-lettre"]], "Somme": [[105, "Somme"]], "Pseudo": [[105, "Pseudo"]], "Hash": [[105, "Hash"]], "Light hash": [[105, "Light-hash"]], "JSON - XML": [[106, "JSON---XML"]], "Q1 : \u00e9criture des donn\u00e9es au format CSV": [[106, "Q1-:-\u00e9criture-des-donn\u00e9es-au-format-CSV"], [106, "id1"]], "Q2 : \u00e9criture des donn\u00e9es au format JSON": [[106, "Q2-:-\u00e9criture-des-donn\u00e9es-au-format-JSON"], [106, "id2"]], "Q3 : relire les donn\u00e9es avec le module json": [[106, "Q3-:-relire-les-donn\u00e9es-avec-le-module-json"], [106, "id3"]], "Q4 : essayez avec les format XML (ou HTML), SQL, SAS, Excel\u2026": [[106, "Q4-:-essayez-avec-les-format-XML-(ou-HTML),-SQL,-SAS,-Excel..."], [106, "id4"]], "Q5 : donn\u00e9es non structur\u00e9es": [[106, "Q5-:-donn\u00e9es-non-structur\u00e9es"], [106, "id5"]], "Q6 : le texte, \u00e7a prend trop de place, zippons": [[106, "Q6-:-le-texte,-\u00e7a-prend-trop-de-place,-zippons"], [106, "id6"]], "Q7 : que vous inspire protobuf ?": [[106, "Q7-:-que-vous-inspire-protobuf-?"], [106, "id7"]], "Calculs de surface et autres calculs": [[107, "Calculs-de-surface-et-autres-calculs"]], "Exercice 1 : calcul de la surface d\u2019un cercle": [[107, "Exercice-1-:-calcul-de-la-surface-d'un-cercle"]], "1.1 En utilisant la constante pi": [[107, "1.1-En-utilisant-la-constante-pi"]], "1.2 Sans utiliser pi ni aucune autre fonction": [[107, "1.2-Sans-utiliser-pi-ni-aucune-autre-fonction"]], "Exercice 2 : tri al\u00e9atoire": [[107, "Exercice-2-:-tri-al\u00e9atoire"]], "Exercice 3 : petits calculs parfaits pour une machine": [[107, "Exercice-3-:-petits-calculs-parfaits-pour-une-machine"]], "1.1. calcul de la surface d\u2019un cercle avec pi": [[107, "1.1.-calcul-de-la-surface-d'un-cercle-avec-pi"]], "1.2. calcul de la surface d\u2019un cercle sans pi ou autre fonction": [[107, "1.2.-calcul-de-la-surface-d'un-cercle-sans-pi-ou-autre-fonction"]], "2. tri al\u00e9atoire": [[107, "2.-tri-al\u00e9atoire"]], "3. petits calculs parfaits pour une machine": [[107, "3.-petits-calculs-parfaits-pour-une-machine"]], "Expressions r\u00e9guli\u00e8res": [[108, "Expressions-r\u00e9guli\u00e8res"], [142, "Expressions-r\u00e9guli\u00e8res"], [174, "expressions-regulieres"], [175, "expressions-regulieres"]], "Exercice 1 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots": [[108, "Exercice-1-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots"], [108, "id1"]], "Exercice 2 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots se terminant par la lettre s": [[108, "Exercice-2-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots-se-terminant-par-la-lettre-s"], [108, "id2"]], "Exercice 3 : utiliser les expression r\u00e9guli\u00e8res pour remplacer tous les \u00ab\u00a0de\u00a0\u00bb en 2": [[108, "Exercice-3-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-remplacer-tous-les-%22de%22-en-2"], [108, "id3"]], "Exercice 4 : utiliser les expression r\u00e9guli\u00e8res pour extraire les lignes des rimes en elle ou elles ou aile ou ailes": [[108, "Exercice-4-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-les-lignes-des-rimes-en-elle-ou-elles-ou-aile-ou-ailes"], [108, "id4"]], "S\u00e9rialisation avec JSON, XML, pickle": [[109, "S\u00e9rialisation-avec-JSON,-XML,-pickle"]], "Notion de stream ou flux": [[109, "Notion-de-stream-ou-flux"]], "Q1: quelle est la fonction la plus rapide ?": [[109, "Q1:-quelle-est-la-fonction-la-plus-rapide-?"]], "Format JSON": [[109, "Format-JSON"]], "Q1. lire du json": [[109, "Q1.-lire-du-json"]], "Q2: \u00e9crire du json": [[109, "Q2:-\u00e9crire-du-json"]], "Q3: gros json": [[109, "Q3:-gros-json"]], "XML": [[109, "XML"]], "pickle": [[109, "pickle"]], "Q1: comparer le temps de s\u00e9rialisation entre pickle et json": [[109, "Q1:-comparer-le-temps-de-s\u00e9rialisation-entre-pickle-et-json"]], "Q2: comparer le temps de d\u00e9s\u00e9rialisation entre pickle et json": [[109, "Q2:-comparer-le-temps-de-d\u00e9s\u00e9rialisation-entre-pickle-et-json"]], "Peut-on tout s\u00e9rialiser ?": [[109, "Peut-on-tout-s\u00e9rialiser-?"]], "Histogramme et dictionnaire": [[110, "Histogramme-et-dictionnaire"]], "Heap": [[111, "Heap"]], "Transformer en tas": [[111, "Transformer-en-tas"]], "Dessiner un tas": [[111, "Dessiner-un-tas"]], "Premi\u00e8re version": [[111, "Premi\u00e8re-version"]], "M\u00eame chose avec les indices au lieu des valeurs": [[111, "M\u00eame-chose-avec-les-indices-au-lieu-des-valeurs"]], "Co\u00fbt de l\u2019algorithme": [[111, "Co\u00fbt-de-l'algorithme"]], "Version simplifi\u00e9e": [[111, "Version-simplifi\u00e9e"]], "Pivot de gauss avec numpy": [[112, "Pivot-de-gauss-avec-numpy"]], "Python": [[112, "Python"], [47, "python"], [47, null], [47, null]], "Numpy 1": [[112, "Numpy-1"]], "Numpy 2": [[112, "Numpy-2"]], "Vitesse": [[112, "Vitesse"]], "Profiling la fonction Gini": [[113, "Profiling-la-fonction-Gini"]], "Exercice 1 : profiler le code pr\u00e9c\u00e9dent": [[113, "Exercice-1-:-profiler-le-code-pr\u00e9c\u00e9dent"], [113, "id1"]], "Exercice 2 : changer la fonction _gini_final si possible en plus rapide": [[113, "Exercice-2-:-changer-la-fonction-_gini_final-si-possible-en-plus-rapide"], [113, "id2"]], "Exercice 3 : vous am\u00e9liorez la fonction _gini_final, profilez pour savoir de combien ?": [[113, "Exercice-3-:-vous-am\u00e9liorez-la-fonction-_gini_final,-profilez-pour-savoir-de-combien-?"], [113, "id3"]], "Exercice 4 : utiliser d\u2019autres modules de profiling": [[113, "Exercice-4-:-utiliser-d'autres-modules-de-profiling"], [113, "id4"]], "Exercice 5 : la fonction _gini_cumsum contient deux boucles. Quelle est la plus rapide ?": [[113, "Exercice-5-:-la-fonction-_gini_cumsum-contient-deux-boucles.-Quelle-est-la-plus-rapide-?"], [113, "id5"]], "Profiling, application \u00e0 la convolution": [[114, "Profiling,-application-\u00e0-la-convolution"]], "Impl\u00e9mentation na\u00efve": [[114, "Impl\u00e9mentation-na\u00efve"]], "Q1: comparer les temps d\u2019ex\u00e9cution": [[114, "Q1:-comparer-les-temps-d'ex\u00e9cution"]], "Q2: comparer avec une seconde impl\u00e9mentation": [[114, "Q2:-comparer-avec-une-seconde-impl\u00e9mentation"]], "im2col": [[114, "im2col"]], "Q3: comparer \u00e0 nouveau les temps d\u2019\u00e9xecution": [[114, "Q3:-comparer-\u00e0-nouveau-les-temps-d'\u00e9xecution"]], "Profiling": [[114, "Profiling"], [94, null]], "Q4: que peut-on en d\u00e9duire ?": [[114, "Q4:-que-peut-on-en-d\u00e9duire-?"]], "Profilage : \u00e9v\u00e9nements ou \u00e9chantillonnage": [[114, "Profilage-:-\u00e9v\u00e9nements-ou-\u00e9chantillonnage"]], "Une derni\u00e8re impl\u00e9mentation": [[114, "Une-derni\u00e8re-impl\u00e9mentation"]], "Q5: Que pouvez-vous dire de cette derni\u00e8re impl\u00e9mentation ?": [[114, "Q5:-Que-pouvez-vous-dire-de-cette-derni\u00e8re-impl\u00e9mentation-?"]], "Exemple de profiling": [[115, "Exemple-de-profiling"]], "Bizarrerie": [[115, "Bizarrerie"]], "Profiler": [[115, "Profiler"]], "Recherche dichotomique": [[116, "Recherche-dichotomique"]], "Version it\u00e9rative": [[116, "Version-it\u00e9rative"]], "Version r\u00e9cursive": [[116, "Version-r\u00e9cursive"]], "Version r\u00e9cursive 2": [[116, "Version-r\u00e9cursive-2"]], "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre": [[118, "D'une-structure-de-donn\u00e9es-\u00e0-l'autre"]], "histogramme et dictionnaire": [[118, "histogramme-et-dictionnaire"]], "liste \u00e0 dictionnaire": [[118, "liste-\u00e0-dictionnaire"]], "dictionnaire \u00e0 liste": [[118, "dictionnaire-\u00e0-liste"]], "dictionnaire et deux listes": [[118, "dictionnaire-et-deux-listes"]], "deux listes et dictionnaires": [[118, "deux-listes-et-dictionnaires"]], "zip reverse": [[118, "zip-reverse"]], "matrices et dictionnaires": [[118, "matrices-et-dictionnaires"]], "liste de listes et dictionnaires": [[118, "liste-de-listes-et-dictionnaires"]], "dictionnaires et liste de listes": [[118, "dictionnaires-et-liste-de-listes"]], "matrice sparse": [[118, "matrice-sparse"]], "matrices et tableaux": [[118, "matrices-et-tableaux"]], "2 dimensions logiques, 1 dimension en m\u00e9moire": [[118, "2-dimensions-logiques,-1-dimension-en-m\u00e9moire"]], "du tableau \u00e0 la liste de listes": [[118, "du-tableau-\u00e0-la-liste-de-listes"]], "Calculer un chi 2 sur un tableau de contingence": [[119, "Calculer-un-chi-2-sur-un-tableau-de-contingence"]], "formule": [[119, "formule"]], "tableau au hasard": [[119, "tableau-au-hasard"]], "calcul avec scipy": [[119, "calcul-avec-scipy"]], "calcul avec numpy": [[119, "calcul-avec-numpy"]], "Tri plus rapide que pr\u00e9vu": [[121, "Tri-plus-rapide-que-pr\u00e9vu"]], "trier un plus petit ensemble": [[121, "trier-un-plus-petit-ensemble"]], "\u00e9volution en fonction de n": [[121, "\u00e9volution-en-fonction-de-n"]], "Cryptage homomorphic de Craig Gentry": [[122, "Cryptage-homomorphic-de-Craig-Gentry"]], "D\u00e9finition du cryptage": [[122, "D\u00e9finition-du-cryptage"], [123, "D\u00e9finition-du-cryptage"]], "Exercice 1 : impl\u00e9menter le cryptage": [[122, "Exercice-1-:-impl\u00e9menter-le-cryptage"], [123, "Exercice-1-:-impl\u00e9menter-le-cryptage"]], "Exercice 2 : v\u00e9rifier que le cryptage est stable par addition et multiplication": [[122, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"], [123, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"]], "Exercice 3 : impl\u00e9mententer l\u2019addition enti\u00e8re": [[122, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"], [123, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"]], "Exercice 4 : impl\u00e9menter la multiplication enti\u00e8re": [[122, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"], [123, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"]], "Cryptage homomorphic de Craig Gentry - correction": [[123, "Cryptage-homomorphic-de-Craig-Gentry---correction"]], "Plus proches voisins en grande dimension": [[124, "Plus-proches-voisins-en-grande-dimension"]], "Q1 : k-nn : mesurer la performance": [[124, "Q1-:-k-nn-:-mesurer-la-performance"], [125, "Q1-:-k-nn-:-mesurer-la-performance"]], "Q2 : k-nn avec sparse features": [[124, "Q2-:-k-nn-avec-sparse-features"], [125, "Q2-:-k-nn-avec-sparse-features"]], "Q3 : Imaginez une fa\u00e7on d\u2019aller plus vite ?": [[124, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"], [125, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"]], "2A.algo - Plus proches voisins en grande dimension - correction": [[125, "2A.algo---Plus-proches-voisins-en-grande-dimension---correction"]], "dimension": [[125, "dimension"]], "observations": [[125, "observations"]], "Puzzles algorithmiques (1)": [[128, "Puzzles-algorithmiques-(1)"]], "Produits scalaires": [[128, "Produits-scalaires"], [129, "Produits-scalaires"]], "Solution moins na\u00efve": [[128, "Solution-moins-na\u00efve"]], "Probl\u00e8me de recouvrement": [[128, "Probl\u00e8me-de-recouvrement"], [129, "Probl\u00e8me-de-recouvrement"]], "Soudoyer les prisonniers": [[128, "Soudoyer-les-prisonniers"], [129, "Soudoyer-les-prisonniers"]], "D\u00e9coupage intelligent d\u2019une base de donn\u00e9es": [[128, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"], [129, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"]], "Puzzles algorithmes (1) - correction": [[129, "Puzzles-algorithmes-(1)---correction"]], "Premi\u00e8re solution": [[129, "Premi\u00e8re-solution"]], "Seconde solution": [[129, "Seconde-solution"]], "Approche par programmation dynamique": [[129, "Approche-par-programmation-dynamique"]], "Puzzles algorithmiques (2)": [[130, "Puzzles-algorithmiques-(2)"]], "Exercice 1 : nombres premiers": [[130, "Exercice-1-:-nombres-premiers"], [131, "Exercice-1-:-nombres-premiers"]], "Exercice 2 : watersheds": [[130, "Exercice-2-:-watersheds"], [131, "Exercice-2-:-watersheds"]], "Exercice 3 : s\u00e9paration des bagarreurs": [[130, "Exercice-3-:-s\u00e9paration-des-bagarreurs"], [131, "Exercice-3-:-s\u00e9paration-des-bagarreurs"]], "Exercice 4 : formation de bin\u00f4mes": [[130, "Exercice-4-:-formation-de-bin\u00f4mes"], [131, "Exercice-4-:-formation-de-bin\u00f4mes"]], "Puzzles algorithmes (2) - correction": [[131, "Puzzles-algorithmes-(2)---correction"]], "Seconde id\u00e9e : les trouver tous ?": [[131, "Seconde-id\u00e9e-:-les-trouver-tous-?"]], "solution": [[131, "solution"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique": [[132, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique"]], "Apart\u00e9 sur les classes": [[132, "Apart\u00e9-sur-les-classes"]], "Classes, attributs, op\u00e9rateurs": [[132, "Classes,-attributs,-op\u00e9rateurs"]], "Exercice 1 : carr\u00e9 magique": [[132, "Exercice-1-:-carr\u00e9-magique"], [133, "Exercice-1-:-carr\u00e9-magique"]], "M\u00e9thodes": [[132, "M\u00e9thodes"], [152, "methodes"], [164, "methodes"]], "Exercice 2 : \u00e0 faire \u00e0 trois, carr\u00e9 magique (suite)": [[132, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"], [133, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"]], "Exercice 3 : trouver tous les carr\u00e9s magiques": [[132, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"], [133, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"]], "Exercice 4 : faire plus rapide": [[132, "Exercice-4-:-faire-plus-rapide"], [133, "Exercice-4-:-faire-plus-rapide"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)": [[133, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique-(correction)"]], "Programme complet": [[133, "Programme-complet"]], "Classes, h\u00e9ritage": [[134, "Classes,-h\u00e9ritage"]], "Qu\u2019est-ce que l\u2019h\u00e9ritage ?": [[134, "Qu'est-ce-que-l'h\u00e9ritage-?"]], "Exercice 1 : pi\u00e8ce normale": [[134, "Exercice-1-:-pi\u00e8ce-normale"], [135, "Exercice-1-:-pi\u00e8ce-normale"]], "Exercice 2 : pi\u00e8ce truqu\u00e9e": [[134, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"], [135, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"]], "Utiliser des m\u00e9thodes de la classe m\u00e8re": [[134, "Utiliser-des-m\u00e9thodes-de-la-classe-m\u00e8re"]], "Exercice 3 : Pi\u00e8ce mixte": [[134, "Exercice-3-:-Pi\u00e8ce-mixte"], [135, "Exercice-3-:-Pi\u00e8ce-mixte"]], "Autre construction avec des fonctions": [[134, "Autre-construction-avec-des-fonctions"]], "Exercice 4 : pi\u00e8ce mixte avec des fonctions": [[134, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"], [135, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"]], "Classes, h\u00e9ritage (correction)": [[135, "Classes,-h\u00e9ritage-(correction)"]], "Dictionnaires, fonctions, code de Vigen\u00e8re": [[136, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re"]], "Fonctions dans le d\u00e9tail": [[136, "Fonctions-dans-le-d\u00e9tail"]], "Variable locale": [[136, "Variable-locale"]], "Mot-cl\u00e9 return": [[136, "Mot-cl\u00e9-return"]], "Fonction r\u00e9cursive": [[136, "Fonction-r\u00e9cursive"], [166, "fonction-recursive"]], "Dictionnaires": [[136, "Dictionnaires"]], "cl\u00e9 - valeur": [[136, "cl\u00e9---valeur"]], "notions de co\u00fbt": [[136, "notions-de-co\u00fbt"]], "ordonner les \u00e9l\u00e9ments d\u2019un dictionnaire": [[136, "ordonner-les-\u00e9l\u00e9ments-d'un-dictionnaire"]], "Exercice 2 : recherche dans une liste": [[136, "Exercice-2-:-recherche-dans-une-liste"]], "Exercice 3 : utilisation d\u2019un dictionnaire": [[136, "Exercice-3-:-utilisation-d'un-dictionnaire"], [137, "Exercice-3-:-utilisation-d'un-dictionnaire"]], "Exercice 4 : crypter de d\u00e9crypter selon Vigen\u00e8re": [[136, "Exercice-4-:-crypter-de-d\u00e9crypter-selon-Vigen\u00e8re"]], "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)": [[137, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re-(correction)"]], "Exercice 4 : crypter et d\u00e9crypter selon Vigen\u00e8re": [[137, "Exercice-4-:-crypter-et-d\u00e9crypter-selon-Vigen\u00e8re"]], "Int\u00e9grale et la m\u00e9thode des rectangles": [[138, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles"]], "Calcul de l\u2019int\u00e9grale": [[138, "Calcul-de-l'int\u00e9grale"], [139, "Calcul-de-l'int\u00e9grale"]], "Calcul de pr\u00e9cision": [[138, "Calcul-de-pr\u00e9cision"], [139, "Calcul-de-pr\u00e9cision"]], "Calcul plus rapide": [[138, "Calcul-plus-rapide"], [139, "Calcul-plus-rapide"]], "Int\u00e9grale et la m\u00e9thode des rectangles - correction": [[139, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles---correction"]], "La fonction r\u00e9calcitrante": [[139, "La-fonction-r\u00e9calcitrante"]], "Calcul de Monte Carlo": [[139, "Calcul-de-Monte-Carlo"]], "Quand s\u2019arr\u00eater ?": [[139, "Quand-s'arr\u00eater-?"]], "2048 - strat\u00e9gie gagnante": [[140, "2048---strat\u00e9gie-gagnante"]], "Exercice 1 : impl\u00e9menter les r\u00e8gles du jeu": [[140, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"], [141, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"]], "Exercice 2 : impl\u00e9menter une strat\u00e9gie": [[140, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"], [141, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"]], "2048 - strat\u00e9gie gagnante - correction": [[141, "2048---strat\u00e9gie-gagnante---correction"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res": [[142, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res"]], "Ecriture": [[142, "Ecriture"], [168, "ecriture"]], "Lecture": [[142, "Lecture"], [168, "lecture"]], "with": [[142, "with"]], "\u00e0 quoi \u00e7a sert ?": [[142, "\u00e0-quoi-\u00e7a-sert-?"]], "Exercice 1 : Excel \\rightarrow Python \\rightarrow Excel": [[142, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"], [143, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"]], "Autres formats de fichiers": [[142, "Autres-formats-de-fichiers"]], "Exercice 2 : trouver un module (1)": [[142, "Exercice-2-:-trouver-un-module-(1)"]], "Exercice 3 : trouver un module (2)": [[142, "Exercice-3-:-trouver-un-module-(2)"], [143, "Exercice-3-:-trouver-un-module-(2)"]], "Module qu\u2019on cr\u00e9e soi-m\u00eame": [[142, "Module-qu'on-cr\u00e9e-soi-m\u00eame"]], "Exercice 4 : son propre module": [[142, "Exercice-4-:-son-propre-module"], [143, "Exercice-4-:-son-propre-module"]], "Exercice 5 : chercher un motif dans un texte": [[142, "Exercice-5-:-chercher-un-motif-dans-un-texte"], [143, "Exercice-5-:-chercher-un-motif-dans-un-texte"]], "Exercice 6 : chercher un autre motif dans un texte": [[142, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"], [143, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)": [[143, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res-(correction)"]], "Exercice 7 : recherche les urls dans une page wikip\u00e9dia": [[143, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"]], "Exercice 8 : construire un texte \u00e0 motif": [[143, "Exercice-8-:-construire-un-texte-\u00e0-motif"]], "Premiers pas en Python": [[144, "Premiers-pas-en-Python"]], "Partie 1": [[144, "Partie-1"]], "Partie 2": [[144, "Partie-2"], [145, "Partie-2"]], "Partie 3": [[144, "Partie-3"], [145, "Partie-3"]], "Premiers pas en Python (correction)": [[145, "Premiers-pas-en-Python-(correction)"]], "Tracer une pyramide bigarr\u00e9e": [[146, "Tracer-une-pyramide-bigarr\u00e9e"]], "Probl\u00e8me": [[146, "Probl\u00e8me"], [147, "Probl\u00e8me"]], "Id\u00e9e de la solution": [[146, "Id\u00e9e-de-la-solution"], [147, "Id\u00e9e-de-la-solution"]], "Tracer une pyramide bigarr\u00e9e - correction": [[147, "Tracer-une-pyramide-bigarr\u00e9e---correction"]], "Les coordonn\u00e9es": [[147, "Les-coordonn\u00e9es"]], "La couleur": [[147, "La-couleur"]], "Deviner la langue d\u2019un texte": [[148, "Deviner-la-langue-d'un-texte"]], "Q1 : lire un fichier": [[148, "Q1-:-lire-un-fichier"], [149, "Q1-:-lire-un-fichier"]], "Q2 : histogramme": [[148, "Q2-:-histogramme"], [149, "Q2-:-histogramme"]], "Q3 : normalisation": [[148, "Q3-:-normalisation"], [149, "Q3-:-normalisation"]], "Q4 : calcul": [[148, "Q4-:-calcul"], [149, "Q4-:-calcul"]], "Q5 : score": [[148, "Q5-:-score"], [149, "Q5-:-score"]], "Deviner la langue d\u2019un texte (correction)": [[149, "Deviner-la-langue-d'un-texte-(correction)"]], "Variables, boucles, tests": [[150, "Variables,-boucles,-tests"]], "Partie 1 : variables, int, float, str, list": [[150, "Partie-1-:-variables,-int,-float,-str,-list"]], "Partie 2 : Tests": [[150, "Partie-2-:-Tests"]], "Partie 3 : boucles": [[150, "Partie-3-:-boucles"]], "Partie 4 : les listes compactes, les ensembles": [[150, "Partie-4-:-les-listes-compactes,-les-ensembles"]], "Partie 5 : recherche non dichotomique (exercice)": [[150, "Partie-5-:-recherche-non-dichotomique-(exercice)"], [151, "Partie-5-:-recherche-non-dichotomique-(exercice)"]], "Partie 6 : Recherche dichotomique": [[150, "Partie-6-:-Recherche-dichotomique"]], "Partie 7 : pour aller plus loin": [[150, "Partie-7-:-pour-aller-plus-loin"]], "Variables, boucles, tests (correction)": [[151, "Variables,-boucles,-tests-(correction)"]], "Partie 3 : boucles (exercice)": [[151, "Partie-3-:-boucles-(exercice)"]], "Partie 6 : recherche dichotomique (exercice)": [[151, "Partie-6-:-recherche-dichotomique-(exercice)"]], "Partie 7 : pour aller plus loin (exercice)": [[151, "Partie-7-:-pour-aller-plus-loin-(exercice)"]], "Pr\u00e9sentation des classes : m\u00e9thodes et attributs": [[152, "presentation-des-classes-methodes-et-attributs"]], "D\u00e9finition, d\u00e9claration": [[152, "definition-declaration"]], "Attributs": [[152, "attributs"]], "Constructeur": [[152, "constructeur"]], "Apport du langage python": [[152, "apport-du-langage-python"]], "Liste des attributs": [[152, "liste-des-attributs"]], "Attributs implicites": [[152, "attributs-implicites"]], "Commentaires, aide": [[152, "commentaires-aide"]], "Classe incluse": [[152, "classe-incluse"]], "It\u00e9rateurs": [[152, "iterateurs"], [166, "iterateurs"]], "M\u00e9thodes, attributs statiques et ajout de m\u00e9thodes": [[152, "methodes-attributs-statiques-et-ajout-de-methodes"]], "M\u00e9thode statique": [[152, "methode-statique"]], "Attributs statiques": [[152, "attributs-statiques"]], "Ajout de m\u00e9thodes": [[152, "ajout-de-methodes"]], "Propri\u00e9t\u00e9s": [[152, "proprietes"]], "Copie d\u2019instance de classe simple": [[152, "copie-d-instance-de-classe-simple"]], "Copie d\u2019instance de classes incluant d\u2019autres classes": [[152, "copie-d-instance-de-classes-incluant-d-autres-classes"]], "Listes et dictionnaires": [[152, "listes-et-dictionnaires"]], "copy et deepcopy": [[152, "copy-et-deepcopy"]], "Attributs fig\u00e9s": [[152, "attributs-figes"]], "Exemple autour de pi\u00e8ces de monnaie": [[152, "exemple-autour-de-pieces-de-monnaie"]], "Sens de l\u2019h\u00e9ritage (2)": [[152, "sens-de-l-heritage-2"]], "H\u00e9ritage multiple": [[152, "heritage-multiple"]], "Fonctions issubclass et isinstance": [[152, "fonctions-issubclass-et-isinstance"]], "Compilation de classes": [[152, "compilation-de-classes"]], "Surcharge d\u2019op\u00e9rateur sur des types": [[152, "surcharge-d-operateur-sur-des-types"]], "Sens de l\u2019h\u00e9ritage (1)": [[152, "sens-de-l-heritage-1"]], "Deux lign\u00e9es d\u2019h\u00e9ritages": [[152, "deux-lignees-d-heritages"]], "Questions": [[154, "questions"]], "C\u2019est oblig\u00e9 d\u2019utiliser les classes ?": [[154, "c-est-oblige-d-utiliser-les-classes"]], "Principe des exceptions": [[155, "principe-des-exceptions"]], "Attraper toutes les erreurs": [[155, "attraper-toutes-les-erreurs"]], "Obtenir le type d\u2019erreur, attraper un type d\u2019exception": [[155, "obtenir-le-type-d-erreur-attraper-un-type-d-exception"]], "Lancer une exception": [[155, "lancer-une-exception"]], "H\u00e9ritage et exception": [[155, "heritage-et-exception"]], "Instructions try, except imbriqu\u00e9es": [[155, "instructions-try-except-imbriquees"]], "D\u00e9finir ses propres exceptions": [[155, "definir-ses-propres-exceptions"]], "D\u00e9river une classe d\u2019exception": [[155, "deriver-une-classe-d-exception"]], "Personnalisation d\u2019une classe d\u2019exception": [[155, "personnalisation-d-une-classe-d-exception"]], "Exemples d\u2019utilisation des exceptions": [[155, "exemples-d-utilisation-des-exceptions"]], "Les it\u00e9rateurs": [[155, "les-iterateurs"]], "Exception ou valeur aberrante": [[155, "exception-ou-valeur-aberrante"]], "Le pi\u00e8ge des exceptions": [[155, "le-piege-des-exceptions"]], "Usage": [[156, "usage"]], "Pile d\u2019appel ou call stack": [[156, "pile-d-appel-ou-call-stack"]], "R\u00e9cup\u00e9ration de la pile d\u2019appel": [[156, "recuperation-de-la-pile-d-appel"]], "Message d\u2019erreur plus explicite": [[156, "message-d-erreur-plus-explicite"]], "Type d\u2019exception": [[156, "type-d-exception"]], "Conventions": [[156, "conventions"]], "Warning et logging": [[158, "warning-et-logging"]], "Warnings": [[158, "warnings"]], "G\u00e9n\u00e9rer un warning": [[158, "generer-un-warning"]], "Intercepter un warning": [[158, "intercepter-un-warning"]], "Warning personnalis\u00e9": [[158, "warning-personnalise"]], "Logging": [[158, "logging"]], "Interfaces graphiques": [[159, "interfaces-graphiques"]], "tkinter": [[160, "tkinter"]], "Les objets": [[160, "les-objets"]], "Zone de texte": [[160, "zone-de-texte"]], "Bouton": [[160, "bouton"]], "Zone de saisie": [[160, "zone-de-saisie"]], "Zone de saisie \u00e0 plusieurs lignes": [[160, "zone-de-saisie-a-plusieurs-lignes"]], "Case \u00e0 cocher": [[160, "case-a-cocher"]], "Case ronde ou bouton radio": [[160, "case-ronde-ou-bouton-radio"]], "Liste avec barre de d\u00e9filement, Combobox": [[160, "liste-avec-barre-de-defilement-combobox"]], "Canevas": [[160, "canevas"]], "Menus": [[160, "menus"]], "M\u00e9thodes communes": [[160, "methodes-communes"]], "Disposition des objets dans une fen\u00eatre": [[160, "disposition-des-objets-dans-une-fenetre"]], "Emplacements": [[160, "emplacements"]], "M\u00e9thode pack": [[160, "methode-pack"]], "M\u00e9thode grid": [[160, "methode-grid"]], "M\u00e9thode place": [[160, "methode-place"]], "Sous-fen\u00eatre": [[160, "sous-fenetre"]], "Ev\u00e9nements": [[160, "evenements"]], "Fen\u00eatre principale": [[160, "fenetre-principale"]], "Focus": [[160, "focus"]], "Lancer une fonction lorsqu\u2019un bouton est press\u00e9": [[160, "lancer-une-fonction-lorsqu-un-bouton-est-presse"]], "Associer n\u2019importe quel \u00e9v\u00e9nement \u00e0 un objet": [[160, "associer-n-importe-quel-evenement-a-un-objet"]], "Menu": [[160, "menu"]], "Fonctions pr\u00e9d\u00e9finies": [[160, "fonctions-predefinies"]], "D\u2019autres fen\u00eatres et contr\u00f4les": [[160, "d-autres-fenetres-et-controles"]], "Cr\u00e9er une seconde bo\u00eete de dialogues": [[160, "creer-une-seconde-boite-de-dialogues"]], "Fen\u00eatres standard": [[160, "fenetres-standard"]], "Compte \u00e0 rebours": [[160, "compte-a-rebours"]], "Contr\u00f4les personnalis\u00e9s : utilisation des classes": [[160, "controles-personnalises-utilisation-des-classes"]], "Fen\u00eatres personnalis\u00e9es : utilisation des classes": [[160, "fenetres-personnalisees-utilisation-des-classes"]], "S\u00e9quence d\u2019\u00e9v\u00e9nements": [[160, "sequence-d-evenements"]], "Communiquer un r\u00e9sultat par message": [[160, "communiquer-un-resultat-par-message"]], "OrderedDict": [[161, "ordereddict"]], "namedtuple": [[161, "namedtuple"]], "Counter": [[161, "counter"]], "deque": [[161, "deque"]], "Constructions fr\u00e9quentes": [[162, "constructions-frequentes"]], "Constructions n\u00e9gatives": [[162, "constructions-negatives"]], "datetime": [[163, "datetime"]], "Autres formats de date": [[163, "autres-formats-de-date"]], "Encoding et jeux de caract\u00e8res": [[164, "encoding-et-jeux-de-caracteres"]], "Jeux de caract\u00e8res": [[164, "jeux-de-caracteres"]], "Encodings par d\u00e9faut": [[164, "encodings-par-defaut"]], "Variables et fonctions": [[165, "variables-et-fonctions"]], "Syntaxe du langage Python (boucles, tests, fonctions)": [[166, "syntaxe-du-langage-python-boucles-tests-fonctions"]], "Les trois concepts des algorithmes": [[166, "les-trois-concepts-des-algorithmes"]], "D\u00e9finition et syntaxe": [[166, "definition-et-syntaxe"]], "Comparaisons possibles": [[166, "comparaisons-possibles"]], "Op\u00e9rateurs logiques": [[166, "operateurs-logiques"]], "Ecriture condens\u00e9e (test)": [[166, "ecriture-condensee-test"]], "Exemple (test)": [[166, "exemple-test"]], "None, True et 1": [[166, "none-true-et-1"]], "Passer, instruction pass": [[166, "passer-instruction-pass"]], "Boucle B1 : test": [[166, "indexmathe-Boucle0"]], "Boucle while": [[166, "boucle-while"]], "Boucle for": [[166, "boucle-for"]], "Listes, boucle for, liste en extension": [[166, "listes-boucle-for-liste-en-extension"]], "Plusieurs variables de boucles": [[166, "plusieurs-variables-de-boucles"]], "Ecriture condens\u00e9e (for)": [[166, "ecriture-condensee-for"]], "Pilotage d\u2019une boucle : continue": [[166, "pilotage-d-une-boucle-continue"]], "Pilotage d\u2019une boucle : break": [[166, "pilotage-d-une-boucle-break"]], "Fin normale d\u2019une boucle : else": [[166, "fin-normale-d-une-boucle-else"]], "Suppression ou ajout d\u2019\u00e9l\u00e9ments lors d\u2019une boucle": [[166, "suppression-ou-ajout-d-elements-lors-d-une-boucle"]], "D\u00e9finition, syntaxe": [[166, "definition-syntaxe"]], "Exemple (for)": [[166, "exemple-for"]], "Param\u00e8tres avec des valeurs par d\u00e9faut": [[166, "parametres-avec-des-valeurs-par-defaut"]], "Ordre des param\u00e8tres": [[166, "ordre-des-parametres"]], "Surcharge de fonction": [[166, "surcharge-de-fonction"]], "Commentaires": [[166, "commentaires"]], "Param\u00e8tres modifiables": [[166, "parametres-modifiables"]], "Port\u00e9e des variables, des param\u00e8tres": [[166, "portee-des-variables-des-parametres"]], "Port\u00e9e des fonctions": [[166, "portee-des-fonctions"]], "Nombre de param\u00e8tres variable": [[166, "nombre-de-parametres-variable"]], "Ecriture simplifi\u00e9e pour des fonctions simples : lambda": [[166, "ecriture-simplifiee-pour-des-fonctions-simples-lambda"]], "Fonctions g\u00e9n\u00e9rateur": [[166, "fonctions-generateur"]], "Identificateur appelable": [[166, "identificateur-appelable"]], "Compilation dynamique (eval)": [[166, "compilation-dynamique-eval"]], "Compilation dynamique (compile, exec)": [[166, "compilation-dynamique-compile-exec"]], "Indentation": [[166, "indentation"]], "Fonctions usuelles": [[166, "fonctions-usuelles"]], "Types et variables du langage python": [[167, "types-et-variables-du-langage-python"]], "Types immuables (ou immutable)": [[167, "types-immuables-ou-immutable"]], "Type \u00ab\u00a0rien\u00a0\u00bb ou None": [[167, "type-rien-ou-none"]], "Nombres r\u00e9els et entiers": [[167, "nombres-reels-et-entiers"]], "Bool\u00e9en": [[167, "booleen"]], "Cha\u00eene de caract\u00e8res": [[167, "chaine-de-caracteres"]], "Cr\u00e9ation d\u2019une cha\u00eene de caract\u00e8res - str": [[167, "creation-d-une-chaine-de-caracteres-str"]], "Manipulation d\u2019une cha\u00eene de caract\u00e8res": [[167, "manipulation-d-une-chaine-de-caracteres"]], "Formatage d\u2019une cha\u00eene de caract\u00e8res": [[167, "formatage-d-une-chaine-de-caracteres"]], "Syntaxe %": [[167, "syntaxe"]], "M\u00e9thode format": [[167, "methode-format"]], "Notation f{}": [[167, "notation-f"]], "Un cas particuler %r ou {!r}": [[167, "un-cas-particuler-r-ou-r"]], "tuple": [[167, "tuple"]], "Nombres complexes": [[167, "nombres-complexes"]], "bytes": [[167, "bytes"]], "Types modifiables ou mutable": [[167, "types-modifiables-ou-mutable"]], "bytearray": [[167, "bytearray"]], "D\u00e9finition et m\u00e9thodes (list)": [[167, "definition-et-methodes-list"]], "Exemples (list)": [[167, "exemples-list"]], "Fonction range": [[167, "fonction-range"]], "Boucles et listes": [[167, "boucles-et-listes"]], "Collage de s\u00e9quences, fonction zip": [[167, "collage-de-sequences-fonction-zip"]], "Concat\u00e9nation de cha\u00eene de caract\u00e8res": [[167, "concatenation-de-chaine-de-caracteres"]], "Copie": [[167, "copie"]], "D\u00e9finition et m\u00e9thodes (dict)": [[167, "definition-et-methodes-dict"]], "Exemples (dict)": [[167, "exemples-dict"]], "Copie (dict)": [[167, "copie-dict"]], "Cl\u00e9s de type modifiable": [[167, "cles-de-type-modifiable"]], "Ensemble ou set": [[167, "ensemble-ou-set"]], "Extensions": [[167, "extensions"]], "Fonction print, repr et conversion en cha\u00eene de caract\u00e8res": [[167, "fonction-print-repr-et-conversion-en-chaine-de-caracteres"]], "Fonction eval": [[167, "eval-fonction-chapitre-deux"]], "Informations fournies par python": [[167, "informations-fournies-par-python"]], "Affectations multiples": [[167, "affectations-multiples"]], "Hi\u00e9rarchie des objets": [[167, "hierarchie-des-objets"]], "Objets internes": [[167, "objets-internes"]], "Commentaires accentu\u00e9s": [[167, "commentaires-accentues"]], "Format texte": [[168, "format-texte"]], "Ecriture en mode \u00ab\u00a0ajout\u00a0\u00bb": [[168, "ecriture-en-mode-ajout"]], "Encoding et les accents": [[168, "encoding-et-les-accents"]], "Fichiers zip": [[168, "fichiers-zip"]], "Lecture (zip)": [[168, "lecture-zip"]], "Ecriture (zip)": [[168, "ecriture-zip"]], "Manipulation de fichiers": [[168, "manipulation-de-fichiers"]], "Gestion des noms de chemins": [[168, "gestion-des-noms-de-chemins"]], "Copie, suppression": [[168, "copie-suppression"]], "Liste de fichiers": [[168, "liste-de-fichiers"]], "Sans format ou format binaire": [[168, "sans-format-ou-format-binaire"]], "Ecriture dans un fichier binaire": [[168, "ecriture-dans-un-fichier-binaire"]], "Lecture d\u2019un fichier binaire": [[168, "lecture-d-un-fichier-binaire"]], "Exemple fichier binaire": [[168, "exemple-fichier-binaire"]], "Objets plus complexes": [[168, "objets-plus-complexes"]], "Entr\u00e9es, Sorties, Modules": [[169, "entrees-sorties-modules"]], "Module ou extension": [[170, "module-ou-extension"]], "Un module": [[170, "un-module"]], "Exemple": [[170, "exemple"]], "Importer un module": [[170, "importer-un-module"]], "Nom d\u2019un module": [[170, "nom-d-un-module"]], "Modules et fichiers": [[170, "modules-et-fichiers"]], "Emplacement d\u2019un module": [[170, "emplacement-d-un-module"]], "Attributs communs \u00e0 tout module": [[170, "attributs-communs-a-tout-module"]], "Cas pratiques": [[170, "cas-pratiques"]], "Ce qui ne marche pas : les import cycliques": [[170, "ce-qui-ne-marche-pas-les-import-cycliques"]], "Ajouter un module en cours d\u2019ex\u00e9cution": [[170, "ajouter-un-module-en-cours-d-execution"]], "Liste des modules import\u00e9s": [[170, "liste-des-modules-importes"]], "Plusieurs modules et fichiers": [[170, "plusieurs-modules-et-fichiers"]], "Arborescence de modules, paquetage": [[170, "arborescence-de-modules-paquetage"]], "Import relatif": [[170, "import-relatif"]], "Modules internes": [[170, "modules-internes"]], "Modules externes": [[170, "modules-externes"]], "Optimisation": [[171, "optimisation"]], "S\u00e9rialiser autre chose que des donn\u00e9es": [[171, "serialiser-autre-chose-que-des-donnees"]], "Parall\u00e9lisation": [[172, "parallelisation"]], "Threads": [[173, "threads"]], "Premier thread": [[173, "premier-thread"]], "Synchronisation": [[173, "synchronisation"]], "Attente": [[173, "attente"]], "Partage d\u2019informations": [[173, "partage-d-informations"]], "Interface graphique": [[173, "interface-graphique"]], "Files de messages": [[173, "files-de-messages"]], "Multithreading plus simple": [[173, "multithreading-plus-simple"]], "concurrent.futures": [[173, "concurrent-futures"]], "Notion de futures": [[173, "notion-de-futures"]], "Un probl\u00e8me de blocage": [[173, "un-probleme-de-blocage"]], "async - await - asyncio": [[173, "async-await-asyncio"]], "GIL - Global Interpreter Lock": [[173, "gil-global-interpreter-lock"]], "cython : un m\u00e9lange de python et C": [[173, "cython-un-melange-de-python-et-c"]], "C#, Java": [[173, "c-java"]], "Bibliographie": [[173, "bibliographie"]], "Les ensembles de caract\u00e8res": [[175, "les-ensembles-de-caracteres"]], "Les multiplicateurs": [[175, "les-multiplicateurs"]], "Groupes": [[175, "groupes"]], "Assembler les caract\u00e8res": [[175, "assembler-les-caracteres"]], "Exemple plus complet": [[175, "exemple-plus-complet"]], "Groupes nomm\u00e9s": [[175, "groupes-nommes"]], "Le langage Python": [[176, "le-langage-python"]], "2022-11-31 : rappel feuille de route 2022": [[8, "rappel-feuille-de-route-2022"]], "S\u00e9ance 1 - 7-9 - introduction, dictionnaire": [[8, "seance-1-7-9-introduction-dictionnaire"]], "S\u00e9ance 2 - 14-9 - programmation dynamique, voyageur de commerce": [[8, "seance-2-14-9-programmation-dynamique-voyageur-de-commerce"]], "S\u00e9ance 3 - 21-9 - numpy, pandas": [[8, "seance-3-21-9-numpy-pandas"]], "S\u00e9ance 4 - 28-9 - graphes": [[8, "seance-4-28-9-graphes"]], "S\u00e9ance 5 - 5-10 - s\u00e9rialisation, tests unitaires, profiling": [[8, "seance-5-5-10-serialisation-tests-unitaires-profiling"]], "S\u00e9ance 6 - 12-10 - expressions r\u00e9guli\u00e8res, webscrapping": [[8, "seance-6-12-10-expressions-regulieres-webscrapping"]], "S\u00e9ance 7 - 19-10 - top k, tri": [[8, "seance-7-19-10-top-k-tri"]], "S\u00e9ance 8 - 26-10 - graphes": [[8, "seance-8-26-10-graphes"]], "2023-09-06 : ENSAE": [[12, "ensae"]], "Calcul Matriciel, Optimisation": [[33, "Calcul-Matriciel,-Optimisation"]], "Numpy arrays": [[33, "Numpy-arrays"]], "Creation d\u2019un array: notion de datatype, et dimensions": [[33, "Creation-d'un-array:-notion-de-datatype,-et-dimensions"]], "Indexation, Slicing, Fancy indexing": [[33, "Indexation,-Slicing,-Fancy-indexing"]], "View contre Copy": [[33, "View-contre-Copy"]], "Manipulation de shape": [[33, "Manipulation-de-shape"]], "Exercice 1 : Echiquier et Crible d\u2019Erathosth\u00e8ne": [[33, "Exercice-1-:-Echiquier-et-Crible-d'Erathosth\u00e8ne"]], "Manipulation et Op\u00e9rations sur les arrays": [[33, "Manipulation-et-Op\u00e9rations-sur-les-arrays"]], "Op\u00e9rations \u00e9l\u00e9ment par \u00e9l\u00e9ment": [[33, "Op\u00e9rations-\u00e9l\u00e9ment-par-\u00e9l\u00e9ment"]], "Broadcasting": [[33, "Broadcasting"]], "R\u00e9ductions": [[33, "R\u00e9ductions"]], "Alg\u00e8bre lin\u00e9aire": [[33, "Alg\u00e8bre-lin\u00e9aire"]], "Exemples simples": [[33, "Exemples-simples"]], "Numpy Matrix": [[33, "Numpy-Matrix"]], "G\u00e9n\u00e9ration de nombres al\u00e9atoires et statistiques": [[33, "G\u00e9n\u00e9ration-de-nombres-al\u00e9atoires-et-statistiques"]], "Exercice 2 : marches al\u00e9atoires": [[33, "Exercice-2-:-marches-al\u00e9atoires"]], "Exercice 3 : retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires": [[33, "Exercice-3-:-retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires"]], "Optimisation avec scipy": [[33, "Optimisation-avec-scipy"]], "Exercice 4 : simulation, r\u00e9gression, estimation par maximisation de la vraisemblance": [[33, "Exercice-4-:-simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance"]], "R\u00e9f\u00e9rences": [[33, "R\u00e9f\u00e9rences"]], "En diagonal": [[43, "en-diagonal"]], "Compl\u00e9ments": [[43, null], [44, null]], "Tous les notebooks": [[47, "tous-les-notebooks"]], "Enonc\u00e9 - Correction": [[47, "enonce-correction"]], "Data": [[47, "data"], [47, null]], "Correction d\u2019examens": [[47, "correction-d-examens"]], "Examens": [[47, null]], "Probl\u00e8me d\u2019ordonnancement": [[53, "Probl\u00e8me-d'ordonnancement"]], "Q1 : \u00e9crire un algorithme qui d\u00e9termine dans quel ordre on peut ex\u00e9cuter les t\u00e2ches.": [[53, "Q1-:-\u00e9crire-un-algorithme-qui-d\u00e9termine-dans-quel-ordre-on-peut-ex\u00e9cuter-les-t\u00e2ches."]], "Q2 : Et si les t\u00e2ches n\u2019ont plus la m\u00eame dur\u00e9e ?": [[53, "Q2-:-Et-si-les-t\u00e2ches-n'ont-plus-la-m\u00eame-dur\u00e9e-?"]], "Jeux de dictionnaires, plus grand suffixe commun": [[58, "Jeux-de-dictionnaires,-plus-grand-suffixe-commun"]], "Exercice 1 : trouver les deux mots qui partagent le plus grand suffixe en commun": [[58, "Exercice-1-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun"], [58, "id1"]], "Exercice 2 : constuire un dictionnaire qui associe \u00e0 chaque lettre tous les mots se terminant par celle-ci": [[58, "Exercice-2-:-constuire-un-dictionnaire-qui-associe-\u00e0-chaque-lettre-tous-les-mots-se-terminant-par-celle-ci"], [58, "id2"]], "Exercice 3 : trouver les deux mots qui partagent le plus grand suffixe en commun en utilisant le dictionnaire pr\u00e9c\u00e9dent": [[58, "Exercice-3-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun-en-utilisant-le-dictionnaire-pr\u00e9c\u00e9dent"], [58, "id3"]], "Exercice 4 : mesurer le temps pris par chaque fonction": [[58, "Exercice-4-:-mesurer-le-temps-pris-par-chaque-fonction"], [58, "id4"]], "Exercice 5 : expliquer pourquoi telle m\u00e9thode est plus rapide.": [[58, "Exercice-5-:-expliquer-pourquoi-telle-m\u00e9thode-est-plus-rapide."], [58, "id5"]], "Exercice 6 : pousser l\u2019id\u00e9e plus loin et construire un trie": [[58, "Exercice-6-:-pousser-l'id\u00e9e-plus-loin-et-construire-un-trie"], [58, "id6"]], "A conna\u00eetre": [[92, null]], "Programmation dynamique": [[92, null]], "Probl\u00e8me NP-complets": [[92, null]], "Graphes": [[92, null]], "A parcourir": [[92, null]], "Correction": [[92, null], [117, "Correction"], [94, null]], "Web-Scraping - pokemon": [[117, "Web-Scraping---pokemon"]], "Fonction pour obtenir les caract\u00e9ristiques de pokemons": [[117, "Fonction-pour-obtenir-les-caract\u00e9ristiques-de-pokemons"]], "les images de pokemon": [[117, "les-images-de-pokemon"]], "Tests unitaires": [[120, "Tests-unitaires"]], "Un petit jeu": [[120, "Un-petit-jeu"]], "Une autre \u00e9criture": [[120, "Une-autre-\u00e9criture"]], "Des obstacles\u2026": [[120, "Des-obstacles..."]], "Ajouter d\u2019autres tests unitaires pour cette seconde version": [[120, "Ajouter-d'autres-tests-unitaires-pour-cette-seconde-version"]], "Changer la taille de l\u2019\u00e9chiquier": [[120, "Changer-la-taille-de-l'\u00e9chiquier"]], "Pour aller plus loin": [[120, "Pour-aller-plus-loin"]], "Tester une exception": [[120, "Tester-une-exception"]], "Programmation dynamique et plus court chemin": [[126, "Programmation-dynamique-et-plus-court-chemin"]], "Algorithme du plus court chemin": [[126, "Algorithme-du-plus-court-chemin"]], "La r\u00e9partition des skis": [[126, "La-r\u00e9partition-des-skis"]], "Exercice facultatif": [[126, "Exercice-facultatif"], [127, "Exercice-facultatif"]], "Exercice 5": [[126, "Exercice-5"], [127, "Exercice-5"]], "Exercice 6": [[126, "Exercice-6"], [127, "Exercice-6"]], "Exercice 7": [[126, "Exercice-7"], [127, "Exercice-7"]], "Exercice 8": [[126, "Exercice-8"], [127, "Exercice-8"]], "Prolongements : degr\u00e9 de s\u00e9paration sur Facebook": [[126, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"], [127, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"]], "Programmation dynamique et plus court chemin (correction)": [[127, "Programmation-dynamique-et-plus-court-chemin-(correction)"]], "Collections d\u2019articles p\u00e9rissables": [[14, "collections-d-articles-perissables"]], "2023": [[14, null]], "2022": [[14, null]], "Apprendre la programmation avec Python": [[44, "apprendre-la-programmation-avec-python"]], "Lectures": [[44, null]], "Exercices": [[44, null]], "Older versions": [[44, "older-versions"]], "Jeu de d\u00e9, rotation sur un circuit (classes)": [[95, "Jeu-de-d\u00e9,-rotation-sur-un-circuit-(classes)"]], "De": [[95, "De"]], "Permutation": [[95, "Permutation"]], "Classe Permutation et d\u00e9composition en transitions": [[97, "Classe-Permutation-et-d\u00e9composition-en-transitions"]], "Composition": [[97, "Composition"]], "Op\u00e9rateur == et @": [[97, "Op\u00e9rateur-==-et-@"]], "D\u00e9composition": [[97, "D\u00e9composition"]], "Transposition": [[97, "Transposition"]], "Un exemple court pour d\u00e9m\u00ealer ce qui est chang\u00e9": [[97, "Un-exemple-court-pour-d\u00e9m\u00ealer-ce-qui-est-chang\u00e9"]], "Python 3.x": [[97, "Python-3.x"]], "teachpyx.practice.rues_paris": [[6, "module-teachpyx.practice.rues_paris"]], "tools": [[7, "tools"]], "decompress_zip": [[7, "decompress-zip"]], "download_and_unzip": [[7, "download-and-unzip"]], "draw_diagram": [[7, "draw-diagram"]], "total_size": [[7, "total-size"]], "profiling": [[7, "module-teachpyx.tools.profiling"]], "2023-11-31 : rappel feuille de route 2023": [[13, "rappel-feuille-de-route-2023"]], "S\u00e9ance 1": [[13, "seance-1"]], "S\u00e9ance 2": [[13, "seance-2"]], "S\u00e9ance 3": [[13, "seance-3"]], "S\u00e9ance 4": [[13, "seance-4"]], "S\u00e9ance 8": [[13, "seance-8"]], "Calcul matriciel": [[32, "calcul-matriciel"]], "Numpy et tableau de contingence": [[37, "Numpy-et-tableau-de-contingence"]], "Exercices sur le langage python": [[94, "exercices-sur-le-langage-python"]], "Structure de donn\u00e9es": [[94, null]], "algorithmes tr\u00e8s simples": [[94, null]], "Outils": [[94, null]], "It\u00e9rateur": [[96, "It\u00e9rateur"]], "G\u00e9n\u00e9ration d\u2019un arbre al\u00e9atoire": [[96, "G\u00e9n\u00e9ration-d'un-arbre-al\u00e9atoire"]], "Profondeur maximale": [[96, "Profondeur-maximale"]], "Une classe pour repr\u00e9senter un arbre": [[98, "Une-classe-pour-repr\u00e9senter-un-arbre"]], "Premier jet": [[98, "Premier-jet"]], "Afficher l\u2019arbre": [[98, "Afficher-l'arbre"]], "Profondeur maximale : le plus grand chemin depuis la racine jusqu\u2019aux feuilles": [[98, "Profondeur-maximale-:-le-plus-grand-chemin-depuis-la-racine-jusqu'aux-feuilles"]], "Profondeur moyenne ?": [[98, "Profondeur-moyenne-?"]], "Interm\u00e8de : is ou == ?": [[98, "Interm\u00e8de-:-is-ou-==-?"]], "Change Logs": [[0, "change-logs"]], "0.3.1": [[0, "id1"]], "License": [[46, "license"]]}, "indexentries": {"algorithme": [[1, "index-0"]], "culture": [[1, "index-0"]], "culture algorithmique": [[1, "index-0"]], "commentaire_accentues() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.commentaire_accentues"]], "compte() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.compte"]], "construit_matrice_carree() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.construit_matrice_carree"]], "dictionnaire_modifie_dans_la_boucle() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dictionnaire_modifie_dans_la_boucle"]], "dix_entiers_carre() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dix_entiers_carre"]], "enumerate_permutations() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations"]], "enumerate_permutations_recursive() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations_recursive"]], "integrale() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.integrale"]], "mat2text() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2text"]], "mat2vect() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2vect"]], "minindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.minindex"]], "module": [[2, "module-teachpyx.examples.classiques"], [2, "module-teachpyx.examples.construction_classique"], [3, "module-teachpyx.faq.faq_exception"], [3, "module-teachpyx.faq.faq_numpy"], [3, "module-teachpyx.faq.faq_python"], [5, "module-teachpyx.examples.numpysex"], [6, "module-teachpyx.practice.rues_paris"], [7, "module-teachpyx.tools.profiling"], [170, "index-0"]], "recherche() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche"]], "recherche_dichotomique() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche_dichotomique"]], "repetition_a_eviter() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.repetition_a_eviter"]], "somme() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.somme"]], "str2date() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.str2date"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "text2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.text2mat"]], "triindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.triindex"]], "vect2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.vect2mat"]], "distribution (classe dans teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.Distribution"]], "pqpiperror": [[3, "teachpyx.faq.faq_python.PQPipError"]], "call_stack() (dans le module teachpyx.faq.faq_exception)": [[3, "teachpyx.faq.faq_exception.call_stack"]], "class_getitem() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.class_getitem"]], "difference_div() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.difference_div"]], "entier_grande_taille() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.entier_grande_taille"]], "enumerate_regex_search() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.enumerate_regex_search"]], "get_day_name() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_day_name"]], "get_installed_distributions() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_installed_distributions"]], "get_month_name() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_month_name"]], "get_package_info() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_package_info"]], "get_packages_list() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_packages_list"]], "information_about_package() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.information_about_package"]], "list_of_installed_packages() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.list_of_installed_packages"]], "property_example() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.property_example"]], "python_path() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.python_path"]], "same_variable() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.same_variable"]], "sortable_class() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.sortable_class"]], "stringio() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.stringio"]], "teachpyx.faq.faq_exception": [[3, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_numpy": [[3, "module-teachpyx.faq.faq_numpy"]], "teachpyx.faq.faq_python": [[3, "module-teachpyx.faq.faq_python"]], "to_float32() (dans le module teachpyx.faq.faq_numpy)": [[3, "teachpyx.faq.faq_numpy.to_float32"]], "numpy_matrix2list() (dans le module teachpyx.examples.numpysex)": [[5, "teachpyx.examples.numpysex.numpy_matrix2list"]], "numpy_types() (dans le module teachpyx.examples.numpysex)": [[5, "teachpyx.examples.numpysex.numpy_types"]], "teachpyx.examples.numpysex": [[5, "module-teachpyx.examples.numpysex"]], "bellman() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.bellman"]], "connected_components() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.connected_components"]], "distance_haversine() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.distance_haversine"]], "distance_paris() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.distance_paris"]], "euler_path() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.euler_path"]], "eulerien_extension() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.eulerien_extension"]], "get_data() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.get_data"]], "graph_degree() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.graph_degree"]], "kruskal() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.kruskal"]], "possible_edges() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.possible_edges"]], "teachpyx.practice.rues_paris": [[6, "module-teachpyx.practice.rues_paris"]], "profilenode (classe dans teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.ProfileNode"]], "add_called_by() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.add_called_by"]], "add_calls_to() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.add_calls_to"]], "as_dict() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.as_dict"]], "decompress_zip() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.decompress_zip"]], "download_and_unzip() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.download_and_unzip"]], "draw_diagram() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.draw_diagram"]], "filter_node_() (m\u00e9thode statique teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.filter_node_"]], "get_root() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.get_root"]], "key (propri\u00e9t\u00e9 teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.key"]], "profile() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile"]], "profile2df() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile2df"]], "profile2graph() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile2graph"]], "teachpyx.tools.profiling": [[7, "module-teachpyx.tools.profiling"]], "to_json() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.to_json"]], "to_text() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.to_text"]], "total_size() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.total_size"]], "ubuntu": [[9, "index-0"]], "wsl": [[9, "index-0"]], "cartopy": [[9, "index-0"]], "code jam": [[10, "index-0"]], "harry potter": [[11, "index-0"]], "hermionne": [[11, "index-0"]], "\u00e9nigme": [[11, "index-0"]], "dataframe": [[31, "index-0"]], "matrice": [[31, "index-0"]], "conseil": [[38, "index-0"]], "cheat sheet": [[40, "index-0"]], "boucle": [[45, "index-0"], [166, "indexmathe-Boucle0"], [166, "index-3"]], "s\u00e9quence": [[45, "index-0"]], "test": [[45, "index-0"], [166, "index-0"]], "d\u00e9finition": [[152, "indexmathe-D\u00e9finition0"], [152, "indexmathe-D\u00e9finition1"], [152, "indexmathe-D\u00e9finition2"], [152, "indexmathe-D\u00e9finition3"], [152, "indexmathe-D\u00e9finition4"], [152, "indexmathe-D\u00e9finition5"], [152, "indexmathe-D\u00e9finition6"], [152, "indexmathe-D\u00e9finition7"], [166, "indexmathe-D\u00e9finition0"], [166, "indexmathe-D\u00e9finition1"], [166, "indexmathe-D\u00e9finition2"], [166, "indexmathe-D\u00e9finition3"], [166, "indexmathe-D\u00e9finition4"], [166, "indexmathe-D\u00e9finition5"], [167, "indexmathe-D\u00e9finition0"], [167, "indexmathe-D\u00e9finition1"], [167, "indexmathe-D\u00e9finition2"], [167, "indexmathe-D\u00e9finition3"], [167, "indexmathe-D\u00e9finition4"], [167, "indexmathe-D\u00e9finition5"], [167, "indexmathe-D\u00e9finition6"], [167, "indexmathe-D\u00e9finition7"], [167, "indexmathe-D\u00e9finition8"], [167, "indexmathe-D\u00e9finition9"], [170, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d1 : classe": [[152, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : instantiaion": [[152, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : m\u00e9thode": [[152, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : attribut": [[152, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : m\u00e9thode statique": [[152, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : attribut statique": [[152, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : h\u00e9ritage": [[152, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : surcharge": [[152, "indexmathe-D\u00e9finition7"]], "syntaxe": [[152, "indexmathe-Syntaxe0"], [152, "indexmathe-Syntaxe1"], [152, "indexmathe-Syntaxe10"], [152, "indexmathe-Syntaxe11"], [152, "indexmathe-Syntaxe12"], [152, "indexmathe-Syntaxe13"], [152, "indexmathe-Syntaxe14"], [152, "indexmathe-Syntaxe15"], [152, "indexmathe-Syntaxe2"], [152, "indexmathe-Syntaxe3"], [152, "indexmathe-Syntaxe4"], [152, "indexmathe-Syntaxe5"], [152, "indexmathe-Syntaxe6"], [152, "indexmathe-Syntaxe7"], [152, "indexmathe-Syntaxe8"], [152, "indexmathe-Syntaxe9"], [155, "indexmathe-Syntaxe0"], [155, "indexmathe-Syntaxe1"], [166, "indexmathe-Syntaxe0"], [166, "indexmathe-Syntaxe1"], [166, "indexmathe-Syntaxe2"], [166, "indexmathe-Syntaxe3"], [166, "indexmathe-Syntaxe4"], [166, "indexmathe-Syntaxe5"], [166, "indexmathe-Syntaxe6"], [166, "indexmathe-Syntaxe7"], [166, "indexmathe-Syntaxe8"], [170, "indexmathe-Syntaxe0"], [170, "indexmathe-Syntaxe1"], [170, "indexmathe-Syntaxe2"]], "syntaxe s1 : d\u00e9claration d'une classe": [[152, "indexmathe-Syntaxe0"]], "syntaxe s10 : d\u00e9claration d'un attribut statique": [[152, "indexmathe-Syntaxe9"]], "syntaxe s11 : d\u00e9claration d'une propri\u00e9t\u00e9": [[152, "indexmathe-Syntaxe10"]], "syntaxe s12 : d\u00e9claration d'une propri\u00e9t\u00e9 (2)": [[152, "indexmathe-Syntaxe11"]], "syntaxe s13 : d\u00e9claration de l'op\u00e9rateur __copy__": [[152, "indexmathe-Syntaxe12"]], "syntaxe s14 : d\u00e9claration d'attributs fig\u00e9s": [[152, "indexmathe-Syntaxe13"]], "syntaxe s15 : h\u00e9ritage": [[152, "indexmathe-Syntaxe14"]], "syntaxe s16 : surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[152, "indexmathe-Syntaxe15"]], "syntaxe s2 : instanciation d'une classe": [[152, "indexmathe-Syntaxe1"]], "syntaxe s3 : d\u00e9claration d'une m\u00e9thode": [[152, "indexmathe-Syntaxe2"]], "syntaxe s4 : appel d'une m\u00e9thode": [[152, "indexmathe-Syntaxe3"]], "syntaxe s5 : d\u00e9claration d'un attribut": [[152, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'un constructeur": [[152, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'un constructeur": [[152, "indexmathe-Syntaxe6"]], "syntaxe s8 : d\u00e9claration de l'op\u00e9rateur __str__": [[152, "indexmathe-Syntaxe7"]], "syntaxe s9 : d\u00e9claration d'une m\u00e9thode statique": [[152, "indexmathe-Syntaxe8"]], "__copy__": [[152, "index-13"]], "__dict__": [[152, "index-6"]], "class": [[152, "index-0"]], "commentaire": [[152, "index-7"], [166, "index-10"], [167, "index-3"], [167, "index-54"]], "constructeur": [[152, "index-4"]], "copy": [[152, "index-13"], [152, "index-15"], [167, "index-41"], [167, "index-45"]], "deepcopy": [[152, "index-15"], [167, "index-41"]], "def": [[152, "index-3"]], "destructeur": [[152, "index-5"]], "dir": [[152, "index-8"]], "garbage collector": [[152, "index-14"], [155, "index-13"]], "help": [[152, "index-7"]], "h\u00e9ritage": [[152, "index-17"], [155, "index-9"]], "instance": [[152, "index-2"]], "issubclass": [[152, "index-18"]], "m\u00e9thode statique": [[152, "index-11"]], "op\u00e9rateur retourn\u00e9": [[152, "index-9"]], "pass": [[152, "index-1"], [166, "index-2"]], "propri\u00e9t\u00e9": [[152, "index-12"]], "self": [[152, "index-3"]], "s\u00e9rialisation": [[152, "index-16"], [168, "index-5"], [171, "index-0"]], "yield": [[152, "index-10"], [166, "index-14"]], "attribut": [[154, "index-0"]], "attributeerror": [[155, "index-5"]], "importerror": [[155, "index-5"]], "indentationerror": [[155, "index-4"]], "indexerror": [[155, "index-6"]], "keyerror": [[155, "index-6"]], "nameerror": [[155, "index-5"]], "oserror": [[155, "index-7"]], "syntaxerror": [[155, "index-4"]], "syntaxe s1 : attraper une exception": [[155, "indexmathe-Syntaxe0"]], "syntaxe s2 : lever une exception": [[155, "indexmathe-Syntaxe1"]], "typeerror": [[155, "index-6"]], "unicodeerror": [[155, "index-7"]], "valueerror": [[155, "index-6"]], "__str__": [[155, "index-10"]], "as": [[155, "index-3"]], "context manager": [[155, "index-14"]], "division par z\u00e9ro": [[155, "index-0"]], "except": [[155, "index-2"]], "exception": [[155, "index-0"]], "it\u00e9rateur": [[155, "index-11"], [166, "index-14"], [166, "index-6"]], "pile d'appels": [[155, "index-1"]], "pile d'ex\u00e9cution": [[155, "index-1"]], "raise": [[155, "index-8"]], "try": [[155, "index-2"]], "valeur aberrante": [[155, "index-12"]], "test unitaire": [[158, "index-1"]], "warning": [[158, "index-0"]], "checkbutton": [[160, "index-5"]], "entry": [[160, "index-1"], [160, "index-3"]], "intvar": [[160, "index-6"]], "listbox": [[160, "index-7"]], "radiobutton": [[160, "index-6"]], "text": [[160, "index-4"]], "bouton": [[160, "index-2"]], "bouton radio": [[160, "index-6"]], "case \u00e0 cocher": [[160, "index-5"]], "compte \u00e0 rebours": [[160, "index-8"]], "widget": [[160, "index-0"]], "zone de saisie": [[160, "index-3"]], "zone de saisie \u00e0 plusieurs lignes": [[160, "index-4"]], "zone de texte": [[160, "index-1"]], "jeux de caract\u00e8res": [[164, "index-0"]], ":": [[166, "index-0"], [166, "index-3"]], "boucle b1 : test": [[166, "indexmathe-Boucle0"]], "d\u00e9finition d1 : test": [[166, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : fonction": [[166, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : fonction r\u00e9cursive": [[166, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : port\u00e9e d'un variable": [[166, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : variable locale": [[166, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : variable globale": [[166, "indexmathe-D\u00e9finition5"]], "stopiteration": [[166, "index-6"]], "syntaxe s1 : tests": [[166, "indexmathe-Syntaxe0"]], "syntaxe s2 : instruction pass": [[166, "indexmathe-Syntaxe1"]], "syntaxe s3 : boucle while": [[166, "indexmathe-Syntaxe2"]], "syntaxe s4 : boucle for": [[166, "indexmathe-Syntaxe3"]], "syntaxe s5 : liste en extension": [[166, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'une fonction": [[166, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'une fonction": [[166, "indexmathe-Syntaxe6"]], "syntaxe s8 : valeurs par d\u00e9faut": [[166, "indexmathe-Syntaxe7"]], "syntaxe s9 : nombre ind\u00e9fini de param\u00e8tres": [[166, "indexmathe-Syntaxe8"]], "affectations multiples": [[166, "index-7"]], "boucle infinie": [[166, "index-4"]], "break": [[166, "index-9"]], "compile": [[166, "index-16"]], "continue": [[166, "index-8"]], "elif": [[166, "index-0"]], "else": [[166, "index-0"]], "enumerate": [[166, "index-21"]], "eval": [[166, "index-15"], [167, "index-49"]], "exec": [[166, "index-16"]], "fonction r\u00e9cursive": [[166, "index-12"]], "for": [[166, "index-3"], [166, "index-5"]], "g\u00e9n\u00e9rateur": [[166, "index-14"]], "if": [[166, "index-0"]], "in": [[166, "index-3"], [167, "index-15"], [167, "index-25"], [167, "index-35"], [167, "index-44"]], "indentation": [[166, "index-17"]], "lambda": [[166, "index-13"]], "map": [[166, "index-18"]], "passage par adresse": [[166, "index-11"]], "priorit\u00e9 des op\u00e9rateurs": [[166, "index-1"], [167, "index-10"]], "r\u00e9cursivit\u00e9": [[166, "index-12"]], "sorted": [[166, "index-20"]], "while": [[166, "index-3"]], "zip": [[166, "index-19"], [167, "index-39"]], "\"": [[167, "index-17"]], "\"\"\"": [[167, "index-17"]], "#": [[167, "index-54"]], "%": [[167, "index-22"], [167, "index-8"]], "%d": [[167, "index-22"]], "%f": [[167, "index-22"]], "%s": [[167, "index-22"]], "&": [[167, "index-47"], [167, "index-8"]], "'": [[167, "index-17"]], "'''": [[167, "index-17"]], "*": [[167, "index-20"], [167, "index-25"], [167, "index-35"], [167, "index-8"]], "**": [[167, "index-8"]], "*=": [[167, "index-20"], [167, "index-25"], [167, "index-35"], [167, "index-8"]], "+": [[167, "index-20"], [167, "index-25"], [167, "index-35"], [167, "index-8"]], "+=": [[167, "index-20"], [167, "index-25"], [167, "index-35"], [167, "index-8"]], "-": [[167, "index-8"]], "-=": [[167, "index-8"]], "/": [[167, "index-8"]], "//": [[167, "index-11"]], "/=": [[167, "index-8"]], "<": [[167, "index-14"]], "<<": [[167, "index-8"]], "<=": [[167, "index-14"]], "=": [[167, "index-14"], [167, "index-52"]], "==": [[167, "index-14"]], ">": [[167, "index-14"]], ">=": [[167, "index-14"]], ">>": [[167, "index-8"]], "d\u00e9finition d1 : variable": [[167, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d10 : frozenset": [[167, "indexmathe-D\u00e9finition9"]], "d\u00e9finition d2 : constante": [[167, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : type immuable (ou immutable)": [[167, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : cha\u00eene de caract\u00e8res": [[167, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : tuple": [[167, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : type modifiable (ou mutable)": [[167, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : liste": [[167, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : dictionnaire": [[167, "indexmathe-D\u00e9finition7"]], "d\u00e9finition d9 : set": [[167, "indexmathe-D\u00e9finition8"]], "false": [[167, "index-12"]], "none": [[167, "index-6"]], "true": [[167, "index-12"]], "[:]": [[167, "index-20"], [167, "index-25"], [167, "index-35"], [167, "index-44"]], "[]": [[167, "index-20"], [167, "index-25"], [167, "index-35"], [167, "index-44"]], "\\": [[167, "index-17"], [167, "index-4"]], "\\%": [[167, "index-18"]], "\\\\": [[167, "index-18"]], "\\n": [[167, "index-18"]], "\\r": [[167, "index-18"]], "\\t": [[167, "index-18"]], "__builtins__": [[167, "index-50"]], "__doc__": [[167, "index-50"]], "__file__": [[167, "index-50"]], "__name__": [[167, "index-50"]], "affectation multiple": [[167, "index-52"]], "and": [[167, "index-13"]], "append": [[167, "index-35"]], "arrondi": [[167, "index-9"]], "b\"\"": [[167, "index-29"]], "b''": [[167, "index-29"]], "backslash": [[167, "index-4"]], "bool": [[167, "index-12"]], "bytearray": [[167, "index-33"]], "bytes": [[167, "index-27"]], "cha\u00eene de caract\u00e8res": [[167, "index-16"]], "cl\u00e9": [[167, "index-43"]], "comparaison": [[167, "index-14"]], "complex": [[167, "index-26"]], "concat\u00e9nation": [[167, "index-40"]], "constante": [[167, "index-2"]], "conversion": [[167, "index-9"]], "copie": [[167, "index-41"], [167, "index-45"]], "count": [[167, "index-21"], [167, "index-28"]], "decode": [[167, "index-30"]], "del": [[167, "index-44"]], "dict": [[167, "index-42"]], "dictionnaire": [[167, "index-42"]], "division enti\u00e8re": [[167, "index-11"]], "divmod": [[167, "index-53"]], "encode": [[167, "index-30"]], "endswith": [[167, "index-21"], [167, "index-28"]], "entier": [[167, "index-7"]], "extend": [[167, "index-35"]], "extra caract\u00e8re": [[167, "index-18"]], "find": [[167, "index-21"], [167, "index-28"]], "float": [[167, "index-7"]], "format": [[167, "index-23"]], "formattage": [[167, "index-22"]], "formmattage": [[167, "index-23"]], "fromhex": [[167, "index-29"]], "frozen set": [[167, "index-47"]], "get": [[167, "index-44"]], "getsizeof": [[167, "index-32"]], "id": [[167, "index-46"]], "identificateur": [[167, "index-1"]], "immuable": [[167, "index-5"]], "immutable": [[167, "index-5"]], "index": [[167, "index-35"]], "insert": [[167, "index-35"]], "int": [[167, "index-7"]], "is": [[167, "index-15"]], "items": [[167, "index-44"]], "join": [[167, "index-21"], [167, "index-28"]], "keys": [[167, "index-44"]], "len": [[167, "index-35"], [167, "index-44"]], "list": [[167, "index-34"]], "liste": [[167, "index-34"]], "liste en extension": [[167, "index-38"]], "lower": [[167, "index-21"]], "max": [[167, "index-35"], [167, "index-44"]], "min": [[167, "index-35"], [167, "index-44"]], "modifiable": [[167, "index-31"]], "mutable": [[167, "index-31"]], "not": [[167, "index-13"], [167, "index-35"]], "op\u00e9rateur": [[167, "index-13"], [167, "index-14"], [167, "index-15"], [167, "index-20"], [167, "index-25"], [167, "index-35"], [167, "index-8"]], "or": [[167, "index-13"]], "pop": [[167, "index-35"], [167, "index-44"]], "print": [[167, "index-48"]], "r\"\"": [[167, "index-19"]], "r''": [[167, "index-19"]], "range": [[167, "index-37"]], "replace": [[167, "index-28"]], "repr": [[167, "index-48"]], "reverse": [[167, "index-35"]], "r\u00e9el": [[167, "index-7"]], "set": [[167, "index-47"]], "sort": [[167, "index-35"], [167, "index-36"]], "split": [[167, "index-21"], [167, "index-28"]], "startswith": [[167, "index-21"], [167, "index-28"]], "str": [[167, "index-16"]], "string": [[167, "index-16"]], "tuple": [[167, "index-24"]], "type": [[167, "index-1"], [167, "index-51"]], "type modifiable": [[167, "index-31"]], "type mutable": [[167, "index-31"]], "upper": [[167, "index-21"]], "valeur": [[167, "index-43"]], "values": [[167, "index-44"]], "variable": [[167, "index-0"]], "|": [[167, "index-8"]], "encoding": [[168, "index-3"]], "fichier": [[168, "index-0"]], "format binaire": [[168, "index-4"]], "format texte": [[168, "index-1"]], "ressource": [[168, "index-2"]], "d\u00e9finition d1 : point d'entr\u00e9e du programme": [[170, "indexmathe-D\u00e9finition0"]], "syntaxe s1 : importer un module (1)": [[170, "indexmathe-Syntaxe0"]], "syntaxe s2 : importer un module (2)": [[170, "indexmathe-Syntaxe1"]], "syntaxe s3 : importer un module (3)": [[170, "indexmathe-Syntaxe2"]], "import": [[170, "index-2"]], "point d'entr\u00e9e": [[170, "index-1"]], "py": [[170, "index-3"]], "pyc": [[170, "index-3"]], "protobuf": [[171, "index-1"]], "gil": [[172, "index-0"]], "global lock interpreter": [[172, "index-0"]], "asyncio": [[172, "index-1"]], "gevent": [[172, "index-1"]], "uvloop": [[172, "index-1"]], "event": [[173, "index-2"]], "lock": [[173, "index-3"]], "futures": [[173, "index-5"]], "parall\u00e9lisation": [[173, "index-0"]], "promesses": [[173, "index-5"]], "promises": [[173, "index-5"]], "queue": [[173, "index-4"]], "sleep": [[173, "index-1"]], "synchronisation": [[173, "index-0"]], "thread": [[173, "index-0"]], "t\u00e2ches": [[173, "index-5"]], "verrou": [[173, "index-3"]]}})