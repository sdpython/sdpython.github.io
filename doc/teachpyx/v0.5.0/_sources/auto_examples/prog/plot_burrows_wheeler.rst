
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/prog/plot_burrows_wheeler.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_prog_plot_burrows_wheeler.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_prog_plot_burrows_wheeler.py:


.. _burrowswheelerrst:

==============================
Transformée de Burrows Wheeler
==============================

La transformée de `Burrows-Wheeler
<https://fr.wikipedia.org/wiki/Transform%C3%A9e_de_Burrows-Wheeler>`_
transforme un mot en un autre mot composée des mêmes lettres
mais aux propriétés statistiques différentes.
Les deux fonctions qui suivent implémentent les algorithmes
décrits sur la page Wikipedia.

Codage
======

.. GENERATED FROM PYTHON SOURCE LINES 20-35

.. code-block:: Python



    def code_burrows(text: str) -> str:
        # étape 1: matrice décalée
        decalages = ["".join(text[i:] + text[:i]) for i in range(len(text))]
        # étape 2: tri
        decalages.sort()
        # on cherche la position du mot initial
        pos = decalages.index(text)
        # fin
        return pos, "".join(decalages[i][-1] for i in range(len(text)))


    print(code_burrows("ENSAE"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (2, 'SAEEN')




.. GENERATED FROM PYTHON SOURCE LINES 36-38

Décodage
========

.. GENERATED FROM PYTHON SOURCE LINES 38-52

.. code-block:: Python



    def decode_burrows(pos, last_col):
        first_col = sorted(last_col)
        two_cols = list(zip(last_col, first_col))
        for _i in range(2, len(last_col)):
            two_cols.sort()
            two_cols = [(c, *t) for c, t in zip(last_col, two_cols)]
        two_cols.sort()
        return "".join(two_cols[pos])


    print(decode_burrows(2, "SAEEN"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ENSAE




.. GENERATED FROM PYTHON SOURCE LINES 53-54

On vérifie que le code vérifie des tests unitaires simples.

.. GENERATED FROM PYTHON SOURCE LINES 54-66

.. code-block:: Python



    def test_burrows():
        for mot in ["AA", "AB", "BA", "ABC", "ACB", "BCA", "BAC", "ENSAE"]:
            pos, code = code_burrows(mot)
            decode = decode_burrows(pos, code)
            assert (
                decode == mot
            ), f"problème avec {mot}, decode={decode}, pos={pos}, code={code}"


    test_burrows()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.010 seconds)


.. _sphx_glr_download_auto_examples_prog_plot_burrows_wheeler.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_burrows_wheeler.ipynb <plot_burrows_wheeler.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_burrows_wheeler.py <plot_burrows_wheeler.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_burrows_wheeler.zip <plot_burrows_wheeler.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
