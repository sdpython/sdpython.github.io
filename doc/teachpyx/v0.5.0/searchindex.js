Search.setIndex({"docnames": ["CHANGELOGS", "algorithm_culture", "api/classique", "api/datasets", "api/faqs", "api/index", "api/numpysex", "api/practice/rues_paris", "api/practice/tsp_bresenham", "api/practice/tsp_kohonen", "api/practice/tsp_kruskal", "api/tools", "api/video/tsp_kohonen", "api/video/tsp_kruskal", "articles/2022/2022-01-01-assurance", "articles/2022/2022-11-31-route2022", "articles/2022/2022-12-07-cartopy", "articles/2023/2023-08-03-code-jam", "articles/2023/2023-08-09-hermionne", "articles/2023/2023-09-06-ensae", "articles/2023/2023-11-31-route2023", "articles/2024/2024-01-18-wsl", "articles/2024/2024-03-01-route2024", "articles/index", "auto_examples/index", "auto_examples/ml/index", "auto_examples/ml/plot_correlations", "auto_examples/ml/plot_roc", "auto_examples/ml/sg_execution_times", "auto_examples/prog/index", "auto_examples/prog/plot_einstein_riddle", "auto_examples/prog/plot_float_and_double_rouding", "auto_examples/prog/plot_gil_example", "auto_examples/prog/plot_hypercube", "auto_examples/prog/plot_lambda_function", "auto_examples/prog/plot_matador", "auto_examples/prog/plot_numpy_tricks", "auto_examples/prog/plot_pandas_groupby", "auto_examples/prog/plot_partie_dame", "auto_examples/prog/plot_serialisation_examples", "auto_examples/prog/plot_serialisation_protobuf", "auto_examples/prog/plot_tarabiscote", "auto_examples/prog/plot_tsp", "auto_examples/prog/sg_execution_times", "auto_examples/sg_execution_times", "c_data/dataframes", "c_data/enedis_cartes", "c_data/graphes", "c_data/index", "c_data/matrices", "c_data/nb_array", "c_data/nb_dataframe", "c_data/nb_dataframe_matrix_speed", "c_data/nb_numpy", "c_data/nb_pandas", "c_data/numpy_broadcast", "c_expose/finance/finance_autostrat", "c_expose/index", "c_expose/tsp/tsp_kohonen", "c_expose/tsp/tsp_kruskal", "c_ml/index", "c_ml/rappel", "c_ml/regclass", "c_resume/cheat_sheet", "c_resume/conseil_programmes", "c_resume/git", "c_resume/index", "c_resume/jenkins", "c_resume/linux", "c_resume/python_sheet", "i_ex", "i_faq", "i_index", "index", "introduction", "license", "notebook_gallery", "practice/algo-base/BJKST", "practice/algo-base/exercice_compose_connexe", "practice/algo-base/exercice_echelle", "practice/algo-base/exercice_edit_distance", "practice/algo-base/exercice_editdist", "practice/algo-base/exercice_ordonnancement", "practice/algo-base/exercice_plus_grande_somme", "practice/algo-base/exercice_random_graph", "practice/algo-base/exercice_simulation_covid", "practice/algo-base/exercice_simulation_covid_simple", "practice/algo-base/exercice_suffix", "practice/algo-base/exercice_topk", "practice/algo-base/exercice_tsp", "practice/algo-base/exercice_xn", "practice/algo-base/matrix_dictionary", "practice/algo-base/tsp_aparte", "practice/algo-base/tsp_simplifie", "practice/algo-compose/exercice_morse", "practice/algo-compose/paris_parcours", "practice/algo-compose/vigenere", "practice/exams", "practice/exams/enonce_ml_2017", "practice/exams/enonce_ml_2017_correction", "practice/exams/interro_rapide_20_minutes_2014_09", "practice/exams/interro_rapide_20_minutes_2014_10", "practice/exams/interro_rapide_20_minutes_2014_11", "practice/exams/interro_rapide_20_minutes_2014_12", "practice/exams/interro_rapide_20_minutes_2015_09", "practice/exams/interro_rapide_20_minutes_2015_11", "practice/exams/td_note_2013_bout_de_code_coloriage", "practice/exams/td_note_2013_coloriage_correction", "practice/exams/td_note_2015", "practice/exams/td_note_2015_rattrapage_enonce", "practice/exams/td_note_2016", "practice/exams/td_note_2017", "practice/exams/td_note_2017_2", "practice/exams/td_note_2018_1", "practice/exams/td_note_2018_2", "practice/exams/td_note_2019_1", "practice/exams/td_note_2019_2", "practice/exams/td_note_2020_1", "practice/exams/td_note_2020_2", "practice/exams/td_note_2021", "practice/exams/td_note_2022", "practice/exams/td_note_2022_rattrapage", "practice/exams/td_note_2022_rattrapage2", "practice/exams/td_note_2023", "practice/exams/td_note_2023-2024", "practice/index_algo", "practice/index_data", "practice/index_exam", "practice/index_ml", "practice/index_python", "practice/ml/artificiel_multiclass", "practice/ml/gradient_boosting", "practice/ml/ml_a_tree_overfitting", "practice/ml/ml_features_model", "practice/ml/ridge_lasso", "practice/ml/timeseries_ssa", "practice/ml/wines_acp", "practice/ml/winesc_color", "practice/ml/winesc_color_line", "practice/ml/winesc_color_linear", "practice/ml/winesc_color_roc", "practice/ml/winesc_multi", "practice/ml/winesc_multi_stacking", "practice/ml/winesr_knn", "practice/ml/winesr_knn_cross_val", "practice/ml/winesr_knn_eval", "practice/ml/winesr_knn_hyper", "practice/ml/winesr_knn_split", "practice/ml/winesr_knn_split_strat", "practice/ml/winesr_reg", "practice/ml/winesr_reg_poly", "practice/py-base/classe_de", "practice/py-base/classe_iterateur", "practice/py-base/classe_permutation", "practice/py-base/classe_tree", "practice/py-base/classe_user_p", "practice/py-base/classes_2048", "practice/py-base/classes_metro", "practice/py-base/code_liste_tuple", "practice/py-base/code_multinomial", "practice/py-base/coloriage_carre", "practice/py-base/de_rotation", "practice/py-base/exercice_hash", "practice/py-base/exercice_json_xml", "practice/py-base/exercice_pi", "practice/py-base/exercice_regex", "practice/py-base/exercice_serialisation_json", "practice/py-base/histogramme_rapide", "practice/py-base/nbheap", "practice/py-base/pivot_gauss", "practice/py-base/profile_gini", "practice/py-base/profiling_conv", "practice/py-base/profiling_example", "practice/py-base/recherche_dichotomique", "practice/py-base/scrapping", "practice/py-base/structures_donnees_conversion", "practice/py-base/tableau_contingence", "practice/py-base/tests_unitaires", "practice/py-base/tri_nlnd", "practice/tds-algo/decorrelation", "practice/tds-algo/decorrelation_correction", "practice/tds-algo/gentry_integer_encryption", "practice/tds-algo/gentry_integer_encryption_correction", "practice/tds-algo/graph_spectral_clustering", "practice/tds-algo/graph_spectral_clustering_correction", "practice/tds-algo/knn_high_dimension", "practice/tds-algo/knn_high_dimension_correction", "practice/tds-algo/plus_court_chemin", "practice/tds-algo/plus_court_chemin_correction", "practice/tds-algo/puzzle_algo_1", "practice/tds-algo/puzzle_algo_1_correction", "practice/tds-algo/puzzle_algo_2", "practice/tds-algo/puzzle_algo_2_correction", "practice/tds-base/classes_carre_magique", "practice/tds-base/classes_carre_magique_correction", "practice/tds-base/classes_heritage", "practice/tds-base/classes_heritage_correction", "practice/tds-base/dictionnaire_vigenere", "practice/tds-base/dictionnaire_vigenere_correction", "practice/tds-base/integrale_rectangle", "practice/tds-base/integrale_rectangle_correction", "practice/tds-base/j2048", "practice/tds-base/j2048_correction", "practice/tds-base/module_file_regex", "practice/tds-base/module_file_regex_correction", "practice/tds-base/premiers_pas", "practice/tds-base/premiers_pas_correction", "practice/tds-base/pyramide_bigarree", "practice/tds-base/pyramide_bigarree_correction", "practice/tds-base/texte_langue", "practice/tds-base/texte_langue_correction", "practice/tds-base/trie", "practice/tds-base/trie_correction", "practice/tds-base/variable_boucle_tests", "practice/tds-base/variable_boucle_tests_correction", "practice/years/2023/bareme_note_optimisation", "practice/years/2023/editdist", "practice/years/2023/index", "practice/years/2023/pivot_gauss", "practice/years/2023/prefix_search", "practice/years/index", "py/c_classes/classes", "py/c_classes/index", "py/c_classes/questions", "py/c_exception/exception", "py/c_exception/exception_ext", "py/c_exception/index", "py/c_exception/warning", "py/c_gui/index", "py/c_gui/tkinter", "py/c_lang/collections", "py/c_lang/constructions", "py/c_lang/dates", "py/c_lang/encoding", "py/c_lang/index", "py/c_lang/syntaxe", "py/c_lang/types", "py/c_module/files", "py/c_module/index", "py/c_module/module", "py/c_module/serialization", "py/c_parallelisation/index", "py/c_parallelisation/thread", "py/c_regex/index", "py/c_regex/regex", "py/index", "sg_execution_times"], "filenames": ["CHANGELOGS.rst", "algorithm_culture.rst", "api/classique.rst", "api/datasets.rst", "api/faqs.rst", "api/index.rst", "api/numpysex.rst", "api/practice/rues_paris.rst", "api/practice/tsp_bresenham.rst", "api/practice/tsp_kohonen.rst", "api/practice/tsp_kruskal.rst", "api/tools.rst", "api/video/tsp_kohonen.rst", "api/video/tsp_kruskal.rst", "articles/2022/2022-01-01-assurance.rst", "articles/2022/2022-11-31-route2022.rst", "articles/2022/2022-12-07-cartopy.rst", "articles/2023/2023-08-03-code-jam.rst", "articles/2023/2023-08-09-hermionne.rst", "articles/2023/2023-09-06-ensae.rst", "articles/2023/2023-11-31-route2023.rst", "articles/2024/2024-01-18-wsl.rst", "articles/2024/2024-03-01-route2024.rst", "articles/index.rst", "auto_examples/index.rst", "auto_examples/ml/index.rst", "auto_examples/ml/plot_correlations.rst", "auto_examples/ml/plot_roc.rst", "auto_examples/ml/sg_execution_times.rst", "auto_examples/prog/index.rst", "auto_examples/prog/plot_einstein_riddle.rst", "auto_examples/prog/plot_float_and_double_rouding.rst", "auto_examples/prog/plot_gil_example.rst", "auto_examples/prog/plot_hypercube.rst", "auto_examples/prog/plot_lambda_function.rst", "auto_examples/prog/plot_matador.rst", "auto_examples/prog/plot_numpy_tricks.rst", "auto_examples/prog/plot_pandas_groupby.rst", "auto_examples/prog/plot_partie_dame.rst", "auto_examples/prog/plot_serialisation_examples.rst", "auto_examples/prog/plot_serialisation_protobuf.rst", "auto_examples/prog/plot_tarabiscote.rst", "auto_examples/prog/plot_tsp.rst", "auto_examples/prog/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "c_data/dataframes.rst", "c_data/enedis_cartes.ipynb", "c_data/graphes.rst", "c_data/index.rst", "c_data/matrices.rst", "c_data/nb_array.ipynb", "c_data/nb_dataframe.ipynb", "c_data/nb_dataframe_matrix_speed.ipynb", "c_data/nb_numpy.ipynb", "c_data/nb_pandas.ipynb", "c_data/numpy_broadcast.ipynb", "c_expose/finance/finance_autostrat.rst", "c_expose/index.rst", "c_expose/tsp/tsp_kohonen.rst", "c_expose/tsp/tsp_kruskal.rst", "c_ml/index.rst", "c_ml/rappel.rst", "c_ml/regclass.rst", "c_resume/cheat_sheet.rst", "c_resume/conseil_programmes.rst", "c_resume/git.rst", "c_resume/index.rst", "c_resume/jenkins.rst", "c_resume/linux.rst", "c_resume/python_sheet.rst", "i_ex.rst", "i_faq.rst", "i_index.rst", "index.rst", "introduction.rst", "license.rst", "notebook_gallery.rst", "practice/algo-base/BJKST.ipynb", "practice/algo-base/exercice_compose_connexe.ipynb", "practice/algo-base/exercice_echelle.ipynb", "practice/algo-base/exercice_edit_distance.ipynb", "practice/algo-base/exercice_editdist.ipynb", "practice/algo-base/exercice_ordonnancement.ipynb", "practice/algo-base/exercice_plus_grande_somme.ipynb", "practice/algo-base/exercice_random_graph.ipynb", "practice/algo-base/exercice_simulation_covid.ipynb", "practice/algo-base/exercice_simulation_covid_simple.ipynb", "practice/algo-base/exercice_suffix.ipynb", "practice/algo-base/exercice_topk.ipynb", "practice/algo-base/exercice_tsp.ipynb", "practice/algo-base/exercice_xn.ipynb", "practice/algo-base/matrix_dictionary.ipynb", "practice/algo-base/tsp_aparte.ipynb", "practice/algo-base/tsp_simplifie.ipynb", "practice/algo-compose/exercice_morse.ipynb", "practice/algo-compose/paris_parcours.ipynb", "practice/algo-compose/vigenere.ipynb", "practice/exams.rst", "practice/exams/enonce_ml_2017.ipynb", "practice/exams/enonce_ml_2017_correction.ipynb", "practice/exams/interro_rapide_20_minutes_2014_09.ipynb", "practice/exams/interro_rapide_20_minutes_2014_10.ipynb", "practice/exams/interro_rapide_20_minutes_2014_11.ipynb", "practice/exams/interro_rapide_20_minutes_2014_12.ipynb", "practice/exams/interro_rapide_20_minutes_2015_09.ipynb", "practice/exams/interro_rapide_20_minutes_2015_11.ipynb", "practice/exams/td_note_2013_bout_de_code_coloriage.ipynb", "practice/exams/td_note_2013_coloriage_correction.ipynb", "practice/exams/td_note_2015.ipynb", "practice/exams/td_note_2015_rattrapage_enonce.ipynb", "practice/exams/td_note_2016.ipynb", "practice/exams/td_note_2017.ipynb", "practice/exams/td_note_2017_2.ipynb", "practice/exams/td_note_2018_1.ipynb", "practice/exams/td_note_2018_2.ipynb", "practice/exams/td_note_2019_1.ipynb", "practice/exams/td_note_2019_2.ipynb", "practice/exams/td_note_2020_1.ipynb", "practice/exams/td_note_2020_2.ipynb", "practice/exams/td_note_2021.ipynb", "practice/exams/td_note_2022.ipynb", "practice/exams/td_note_2022_rattrapage.ipynb", "practice/exams/td_note_2022_rattrapage2.ipynb", "practice/exams/td_note_2023.ipynb", "practice/exams/td_note_2023-2024.ipynb", "practice/index_algo.rst", "practice/index_data.rst", "practice/index_exam.rst", "practice/index_ml.rst", "practice/index_python.rst", "practice/ml/artificiel_multiclass.ipynb", "practice/ml/gradient_boosting.ipynb", "practice/ml/ml_a_tree_overfitting.ipynb", "practice/ml/ml_features_model.ipynb", "practice/ml/ridge_lasso.ipynb", "practice/ml/timeseries_ssa.ipynb", "practice/ml/wines_acp.ipynb", "practice/ml/winesc_color.ipynb", "practice/ml/winesc_color_line.ipynb", "practice/ml/winesc_color_linear.ipynb", "practice/ml/winesc_color_roc.ipynb", "practice/ml/winesc_multi.ipynb", "practice/ml/winesc_multi_stacking.ipynb", "practice/ml/winesr_knn.ipynb", "practice/ml/winesr_knn_cross_val.ipynb", "practice/ml/winesr_knn_eval.ipynb", "practice/ml/winesr_knn_hyper.ipynb", "practice/ml/winesr_knn_split.ipynb", "practice/ml/winesr_knn_split_strat.ipynb", "practice/ml/winesr_reg.ipynb", "practice/ml/winesr_reg_poly.ipynb", "practice/py-base/classe_de.ipynb", "practice/py-base/classe_iterateur.ipynb", "practice/py-base/classe_permutation.ipynb", "practice/py-base/classe_tree.ipynb", "practice/py-base/classe_user_p.ipynb", "practice/py-base/classes_2048.ipynb", "practice/py-base/classes_metro.ipynb", "practice/py-base/code_liste_tuple.ipynb", "practice/py-base/code_multinomial.ipynb", "practice/py-base/coloriage_carre.ipynb", "practice/py-base/de_rotation.ipynb", "practice/py-base/exercice_hash.ipynb", "practice/py-base/exercice_json_xml.ipynb", "practice/py-base/exercice_pi.ipynb", "practice/py-base/exercice_regex.ipynb", "practice/py-base/exercice_serialisation_json.ipynb", "practice/py-base/histogramme_rapide.ipynb", "practice/py-base/nbheap.ipynb", "practice/py-base/pivot_gauss.ipynb", "practice/py-base/profile_gini.ipynb", "practice/py-base/profiling_conv.ipynb", "practice/py-base/profiling_example.ipynb", "practice/py-base/recherche_dichotomique.ipynb", "practice/py-base/scrapping.ipynb", "practice/py-base/structures_donnees_conversion.ipynb", "practice/py-base/tableau_contingence.ipynb", "practice/py-base/tests_unitaires.ipynb", "practice/py-base/tri_nlnd.ipynb", "practice/tds-algo/decorrelation.ipynb", "practice/tds-algo/decorrelation_correction.ipynb", "practice/tds-algo/gentry_integer_encryption.ipynb", "practice/tds-algo/gentry_integer_encryption_correction.ipynb", "practice/tds-algo/graph_spectral_clustering.ipynb", "practice/tds-algo/graph_spectral_clustering_correction.ipynb", "practice/tds-algo/knn_high_dimension.ipynb", "practice/tds-algo/knn_high_dimension_correction.ipynb", "practice/tds-algo/plus_court_chemin.ipynb", "practice/tds-algo/plus_court_chemin_correction.ipynb", "practice/tds-algo/puzzle_algo_1.ipynb", "practice/tds-algo/puzzle_algo_1_correction.ipynb", "practice/tds-algo/puzzle_algo_2.ipynb", "practice/tds-algo/puzzle_algo_2_correction.ipynb", "practice/tds-base/classes_carre_magique.ipynb", "practice/tds-base/classes_carre_magique_correction.ipynb", "practice/tds-base/classes_heritage.ipynb", "practice/tds-base/classes_heritage_correction.ipynb", "practice/tds-base/dictionnaire_vigenere.ipynb", "practice/tds-base/dictionnaire_vigenere_correction.ipynb", "practice/tds-base/integrale_rectangle.ipynb", "practice/tds-base/integrale_rectangle_correction.ipynb", "practice/tds-base/j2048.ipynb", "practice/tds-base/j2048_correction.ipynb", "practice/tds-base/module_file_regex.ipynb", "practice/tds-base/module_file_regex_correction.ipynb", "practice/tds-base/premiers_pas.ipynb", "practice/tds-base/premiers_pas_correction.ipynb", "practice/tds-base/pyramide_bigarree.ipynb", "practice/tds-base/pyramide_bigarree_correction.ipynb", "practice/tds-base/texte_langue.ipynb", "practice/tds-base/texte_langue_correction.ipynb", "practice/tds-base/trie.ipynb", "practice/tds-base/trie_correction.ipynb", "practice/tds-base/variable_boucle_tests.ipynb", "practice/tds-base/variable_boucle_tests_correction.ipynb", "practice/years/2023/bareme_note_optimisation.ipynb", "practice/years/2023/editdist.ipynb", "practice/years/2023/index.rst", "practice/years/2023/pivot_gauss.ipynb", "practice/years/2023/prefix_search.ipynb", "practice/years/index.rst", "py/c_classes/classes.rst", "py/c_classes/index.rst", "py/c_classes/questions.rst", "py/c_exception/exception.rst", "py/c_exception/exception_ext.rst", "py/c_exception/index.rst", "py/c_exception/warning.rst", "py/c_gui/index.rst", "py/c_gui/tkinter.rst", "py/c_lang/collections.rst", "py/c_lang/constructions.rst", "py/c_lang/dates.rst", "py/c_lang/encoding.rst", "py/c_lang/index.rst", "py/c_lang/syntaxe.rst", "py/c_lang/types.rst", "py/c_module/files.rst", "py/c_module/index.rst", "py/c_module/module.rst", "py/c_module/serialization.rst", "py/c_parallelisation/index.rst", "py/c_parallelisation/thread.rst", "py/c_regex/index.rst", "py/c_regex/regex.rst", "py/index.rst", "sg_execution_times.rst"], "titles": ["Change Logs", "Survol algorithmique", "examples.construction_classique", "Jeux de donn\u00e9es", "faq", "Code inclus dans cette librairie", "examples.numpysex", "teachpyx.practice.rues_paris", "teachpyx.practice.tsp_bresenham", "teachpyx.practice.tsp_kohonen", "teachpyx.practice.tsp_kruskal", "tools", "teachpyx.video.tsp_kohonen_pygame", "teachpyx.video.tsp_kruskal", "Assurance auto", "2022-11-31 : rappel feuille de route 2022", "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)", "2023-08-03 : Code Jam", "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne", "2023-09-06 : ENSAE", "2023-11-31 : rappel feuille de route 2023", "2024-01-18 : WSL - nettoyage", "2024-03-01 : feuille de route 2024", "Collections d\u2019articles p\u00e9rissables", "Gallerie d\u2019exemples", "Gallerie d\u2019exemples sur le machine learning", "Corr\u00e9lations", "Receiver Operating Characteristic (ROC)", "Computation times", "Gallerie d\u2019exemples sur la programmation", "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution", "Float Conversion", "Le GIL", "Hypercube et autres exercices", "Astuces avec les lambda functions", "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations", "Points d\u2019impl\u00e9mentation avec numpy", "Pandas et groupby", "Parties de dames", "S\u00e9rialisation", "S\u00e9rialisation avec protobuf", "Exercices expliqu\u00e9s de programmation", "R\u00e9flexions autour du voyage de commerce (TSP)", "Computation times", "Computation times", "Dataframes", "Tracer une carte en Python", "Graphes", "Matrices et DataFrames", "Calcul matriciel", "Calcul Matriciel, Optimisation", "DataFrame et Graphes", "Mesures de vitesse sur les dataframes", "Calcul matriciel avec numpy (exercices)", "Manipulation de donn\u00e9es avec pandas (exercices)", "Numpy et tableau de contingence", "Strat\u00e9gie automatique de trading en finance", "Expos\u00e9s", "Circuit hamiltonien et Kohonen", "Circuit hamiltonien et Kruskal", "Machine Learning", "Quelques rappels", "Classification et r\u00e9gression", "Cheat Sheets", "Quelques conseils pour \u00e9crire un programme", "Cheat Sheet on Git", "Pr\u00e9cis", "Cheat Sheet on Jenkins", "Cheat Sheet on Linux", "Cheat sheet: Python", "Syntaxes et d\u00e9finitions", "FAQ", "En diagonal", "Apprendre la programmation avec Python", "Introduction", "License", "Tous les notebooks", "Algorithmes de streaming, BJKST", "Graphe et Composantes connexes", "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.", "Distance d\u2019\u00e9dition", "Distance entre deux mots de m\u00eame longueur et tests unitaires", "Probl\u00e8me d\u2019ordonnancement", "La sous-s\u00e9quence de plus grande somme", "Graphes al\u00e9atoires", "Simulation COVID", "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)", "Jeux de dictionnaires, plus grand suffixe commun", "Les k premiers \u00e9l\u00e9ments (top k)", "TSP - Traveling Salesman Problem", "Calculer x**n le plus rapidement possible", "Produit matriciel avec une matrice creuse", "Apart\u00e9 sur le voyageur de commerce", "Plus court chemin passant par tous les noeuds d\u2019un graphe", "D\u00e9coder du Morse sans espaces", "Parcourir les rues de Paris", "Casser le code de Vigen\u00e8re", "Exercices minut\u00e9s", "Evaluation Python / Machine Learning ann\u00e9e 2017 - \u00e9nonc\u00e9", "Evaluation Python / Machine Learning ann\u00e9e 2017 - solution", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015", "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015", "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)", "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)", "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014", "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)", "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015", "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016", "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)", "1A.e - Enonc\u00e9 23 octobre 2018 (1)", "1A.e - Enonc\u00e9 23 octobre 2018 (2)", "1A.e - Enonc\u00e9 22 octobre 2019 (1)", "1A.e - Enonc\u00e9 22 octobre 2019 (2)", "1A - Enonc\u00e9 24 novembre 2020", "1A - Enonc\u00e9 3 novembre 2021", "1A - Enonc\u00e9 15 novembre 2021 - rattrapage", "1A - Enonc\u00e9 3 mars 2022- rattrapage", "1A - Enonc\u00e9 26 octobre 2022", "1A - Enonc\u00e9 8 novembre 2023-2024", "Algorithmes", "Numpy / Pandas", "S\u00e9ances minut\u00e9es", "Machine Learning", "Exercices sur le langage python", "Classification multi-classe et jeu mal balanc\u00e9", "Gradient Boosting", "Tree, hyperparam\u00e8tres, overfitting", "Features ou mod\u00e8le", "R\u00e9gression Ridge, Lasso et nouvel estimateur", "Single Spectrum Analysis (SSA)", "ACP - projection", "R\u00e9gression logistique et courbe ROC", "R\u00e9gression logistique en 2D", "Plusieurs mod\u00e8les, donn\u00e9es disjointes", "Classifications et courbes ROC", "Classification multi-classe", "Classification multi-classe et stacking", "Plus proches voisins", "Validation crois\u00e9e (cross-validation)", "Plus proches voisins - \u00e9valuation", "S\u00e9lection des hyper-param\u00e8tres", "Base d\u2019apprentissage et de test", "D\u00e9coupage stratifi\u00e9 apprentissage / test", "Pr\u00e9diction de la note des vins", "R\u00e9gression polyn\u00f4miale et pipeline", "Jeu de d\u00e9, rotation sur un circuit (classes)", "It\u00e9rateur", "Classe Permutation et d\u00e9composition en transitions", "Une classe pour repr\u00e9senter un arbre", "Classe, H\u00e9ritage, calcule d\u2019une distance", "2048 et les classes", "Un bref aper\u00e7u des classes", "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations", "Simuler une loi multinomiale", "Jeux de coloriage", "Jeu de d\u00e9, rotation sur un circuit", "R\u00e9partition, table de hashage", "JSON - XML", "Calculs de surface et autres calculs", "Expressions r\u00e9guli\u00e8res", "S\u00e9rialisation avec JSON, XML, pickle", "Histogramme et dictionnaire", "Heap", "Pivot de gauss avec numpy", "Profiling la fonction Gini", "Profiling, application \u00e0 la convolution", "Exemple de profiling", "Recherche dichotomique", "Web-Scraping - pokemon", "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre", "Calculer un chi 2 sur un tableau de contingence", "Tests unitaires", "Tri plus rapide que pr\u00e9vu", "D\u00e9corr\u00e9lation de variables al\u00e9atoires", "D\u00e9corr\u00e9lation de variables al\u00e9atoires - correction", "Cryptage homomorphic de Craig Gentry", "Cryptage homomorphic de Craig Gentry - correction", "Spectral Clustering", "Spectral Clustering - correction", "Plus proches voisins en grande dimension", "Plus proches voisins en grande dimension - correction", "Programmation dynamique et plus court chemin", "Programmation dynamique et plus court chemin (correction)", "Puzzles algorithmiques (1)", "Puzzles algorithmes (1) - correction", "Puzzles algorithmiques (2)", "Puzzles algorithmes (2) - correction", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)", "Classes, h\u00e9ritage", "Classes, h\u00e9ritage (correction)", "Dictionnaires, fonctions, code de Vigen\u00e8re", "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)", "Int\u00e9grale et la m\u00e9thode des rectangles", "Int\u00e9grale et la m\u00e9thode des rectangles - correction", "2048 - strat\u00e9gie gagnante", "2048 - strat\u00e9gie gagnante - correction", "Modules, fichiers, expressions r\u00e9guli\u00e8res", "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)", "Premiers pas en Python", "Premiers pas en Python (correction)", "Tracer une pyramide bigarr\u00e9e", "Tracer une pyramide bigarr\u00e9e - correction", "Deviner la langue d\u2019un texte", "Deviner la langue d\u2019un texte (correction)", "Arbre et Trie", "Arbre et Trie (correction)", "Variables, boucles, tests", "Variables, boucles, tests (correction)", "Optimiser la note moyenne", "Distance d\u2019\u00e9dition (4 octobre)", "2023", "Pivot de Gauss", "Recherche de pr\u00e9fixes", "Notebooks \u00e9crits durant les s\u00e9ances", "Classes", "Classes", "Questions", "Exceptions", "Usage", "Exceptions", "Warning et logging", "Interfaces graphiques", "tkinter", "Constructions classiques", "Constructions classiques", "Dates", "Encoding et jeux de caract\u00e8res", "Variables et fonctions", "Syntaxe du langage Python (boucles, tests, fonctions)", "Types et variables du langage python", "Fichiers", "Entr\u00e9es, Sorties, Modules", "Module ou extension", "S\u00e9rialisation", "Parall\u00e9lisation", "Threads", "Expressions r\u00e9guli\u00e8res", "Expressions r\u00e9guli\u00e8res", "Le langage Python", "Computation times"], "terms": {"internet": [2, 4, 39, 51, 56, 69, 71, 73, 74, 77, 94, 95, 166, 174, 203, 204, 209, 225, 229, 236, 237, 239, 240, 242], "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 56, 62, 64, 67, 69, 70, 71, 73, 225, 229, 235, 239], "quas": [14, 56, 60, 61, 73, 74, 79, 89, 105, 113, 114, 123, 136, 144, 169, 203, 236], "infin": [33, 61, 73, 84, 88, 110, 135, 187, 213, 225, 235, 244], "docu": [27, 51, 56, 58, 69, 73, 74, 82, 87, 203, 204, 209, 225, 237, 239, 242], "papi": [30, 73], "bout": [2, 56, 69, 73, 74, 83, 87, 108, 110, 152, 175, 200, 202, 203, 212, 224, 230, 231, 236], "cod": [1, 2, 4, 6, 11, 16, 19, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 51, 53, 54, 58, 60, 62, 64, 70, 71, 72, 73, 74, 77, 81, 89, 94, 95, 97, 99, 101, 102, 103, 105, 111, 113, 114, 115, 116, 120, 121, 125, 129, 130, 144, 151, 152, 153, 155, 161, 162, 163, 166, 171, 172, 175, 181, 182, 185, 189, 190, 191, 192, 193, 195, 203, 204, 205, 211, 212, 213, 221, 223, 224, 225, 227, 229, 231, 233, 235, 236, 237, 239, 240, 242], "beaucoup": [1, 6, 7, 14, 18, 30, 33, 51, 53, 56, 58, 59, 60, 61, 69, 70, 71, 73, 74, 81, 84, 87, 91, 99, 102, 103, 108, 110, 114, 116, 130, 134, 136, 149, 158, 159, 171, 175, 178, 187, 193, 194, 197, 198, 203, 204, 205, 210, 221, 223, 229, 233, 236, 237, 240, 242, 244], "sujet": [17, 19, 52, 56, 57, 61, 73, 81, 94, 95, 103, 110, 132, 155, 160, 235, 236, 237], "faut": [1, 2, 4, 9, 14, 30, 33, 35, 38, 39, 40, 41, 46, 50, 51, 53, 54, 56, 59, 60, 61, 62, 64, 69, 70, 71, 73, 74, 77, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 99, 101, 102, 104, 108, 110, 113, 114, 115, 116, 119, 121, 123, 131, 133, 134, 136, 139, 141, 149, 150, 153, 154, 155, 157, 158, 161, 162, 165, 166, 170, 171, 173, 174, 175, 177, 178, 181, 182, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 221, 224, 227, 229, 230, 231, 233, 235, 236, 237, 239, 240, 242, 244], "savoir": [33, 38, 42, 50, 51, 54, 56, 61, 62, 69, 73, 85, 90, 97, 99, 103, 108, 110, 150, 151, 160, 171, 177, 185, 197, 205, 209, 210, 212, 214, 221, 224, 229, 235, 236, 237, 242], "picor": 73, "Ce": [1, 2, 4, 14, 19, 27, 32, 33, 41, 42, 46, 50, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 73, 74, 77, 83, 85, 87, 89, 92, 93, 94, 95, 99, 100, 103, 108, 110, 111, 115, 116, 119, 120, 121, 123, 125, 131, 132, 134, 135, 137, 145, 150, 151, 152, 153, 154, 159, 160, 164, 175, 179, 186, 187, 188, 190, 197, 198, 200, 203, 204, 209, 210, 212, 213, 215, 221, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 242, 244], "sit": [1, 3, 4, 16, 19, 22, 40, 46, 51, 53, 56, 58, 62, 71, 73, 74, 86, 96, 99, 119, 133, 145, 147, 170, 172, 174, 185, 189, 190, 191, 192, 203, 208, 209, 212, 225, 227, 232, 236, 239, 244], "veut": [1, 2, 4, 14, 39, 46, 50, 51, 54, 56, 61, 64, 69, 71, 73, 79, 81, 83, 84, 87, 95, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 133, 135, 140, 153, 155, 156, 158, 165, 175, 177, 179, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 197, 200, 202, 204, 205, 209, 210, 211, 213, 214, 224, 231, 236, 239, 242, 244], "plus": [1, 2, 3, 6, 9, 10, 15, 16, 17, 18, 19, 27, 30, 32, 33, 34, 35, 37, 38, 39, 41, 46, 50, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 69, 70, 73, 74, 78, 79, 80, 84, 85, 86, 89, 94, 95, 96, 100, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 117, 118, 119, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 144, 146, 147, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 171, 172, 175, 179, 181, 182, 189, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 221, 223, 224, 226, 227, 229, 230, 231, 233, 235, 236, 239, 240, 241], "facil": [1, 30, 33, 38, 39, 42, 51, 54, 56, 58, 60, 61, 62, 64, 69, 70, 73, 74, 77, 84, 93, 95, 108, 121, 131, 149, 160, 162, 166, 167, 168, 170, 171, 178, 187, 188, 221, 229, 233, 235, 236, 237, 239, 240, 242, 244], "lir": [1, 2, 4, 6, 51, 52, 53, 56, 59, 60, 61, 62, 69, 71, 73, 78, 110, 165, 170, 175, 187, 198, 203, 204, 221, 224, 225, 227, 229, 231, 233, 235, 236, 237, 239, 240], "fa\u00e7on": [1, 2, 4, 7, 14, 18, 30, 33, 39, 40, 42, 46, 50, 51, 53, 56, 57, 58, 59, 60, 61, 62, 71, 73, 74, 78, 81, 83, 84, 85, 88, 90, 91, 95, 101, 104, 105, 111, 112, 113, 115, 117, 118, 120, 122, 123, 125, 131, 133, 134, 135, 136, 137, 140, 144, 149, 152, 153, 155, 157, 158, 159, 160, 162, 163, 166, 170, 171, 175, 176, 183, 187, 193, 197, 203, 204, 209, 210, 211, 214, 219, 221, 224, 225, 229, 231, 233, 235, 236, 237, 239, 241, 242], "traditionnel": [1, 73], "peu": [1, 4, 39, 46, 50, 51, 54, 56, 58, 59, 61, 62, 69, 70, 71, 73, 74, 78, 81, 82, 84, 86, 87, 88, 91, 95, 99, 102, 103, 105, 108, 111, 117, 118, 119, 120, 130, 133, 139, 141, 142, 144, 146, 147, 148, 149, 150, 153, 155, 159, 160, 162, 166, 168, 170, 173, 175, 185, 186, 193, 197, 199, 204, 210, 219, 221, 224, 227, 229, 235, 236, 237, 239, 240, 242], "comm": [1, 4, 14, 16, 17, 21, 30, 33, 38, 39, 41, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 69, 70, 71, 73, 74, 80, 81, 82, 83, 84, 85, 86, 90, 91, 93, 94, 95, 99, 100, 101, 102, 103, 104, 108, 110, 111, 112, 115, 116, 117, 118, 120, 123, 131, 132, 134, 135, 136, 137, 139, 142, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 165, 166, 168, 170, 171, 172, 173, 175, 176, 179, 183, 186, 187, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 212, 213, 214, 219, 221, 223, 224, 225, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 242, 244], "livr": [56, 60, 69, 73, 74, 125, 155, 183, 237], "Il": [1, 2, 4, 14, 16, 17, 18, 21, 30, 33, 35, 37, 38, 39, 40, 41, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 134, 135, 136, 137, 139, 142, 144, 145, 150, 151, 152, 154, 158, 160, 161, 162, 165, 166, 170, 171, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 187, 188, 189, 193, 194, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 223, 224, 225, 227, 229, 230, 231, 233, 235, 236, 237, 239, 240, 241, 242, 244], "adress": [14, 54, 56, 73, 74, 85, 204, 229, 233, 235], "surtout": [39, 56, 61, 62, 73, 87, 88, 99, 108, 159, 175, 221, 235, 236], "ceux": [2, 4, 27, 30, 50, 52, 53, 56, 61, 62, 69, 70, 71, 73, 74, 81, 85, 95, 105, 120, 132, 134, 137, 142, 144, 145, 146, 170, 187, 193, 204, 205, 221, 224, 229, 231, 235, 236, 237, 239, 240, 242, 244], "savent": [73, 205], "Le": [1, 2, 3, 4, 6, 14, 19, 20, 24, 27, 29, 30, 33, 34, 38, 39, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 58, 59, 60, 62, 64, 66, 71, 73, 74, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 221, 223, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 246], "contenu": [4, 38, 41, 56, 69, 70, 71, 73, 155, 174, 203, 204, 214, 221, 229, 235, 236, 237, 239], "disponibl": [1, 16, 39, 51, 53, 54, 56, 62, 69, 73, 74, 95, 111, 119, 133, 137, 158, 204, 221, 229, 236, 239], "github": [1, 7, 19, 22, 27, 39, 46, 50, 51, 52, 53, 54, 55, 64, 65, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 225, 229, 239], "teachpyx": [3, 5, 6, 11, 19, 26, 27, 39, 46, 49, 51, 54, 58, 62, 71, 72, 73, 74, 95, 96, 99, 119, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 166, 168, 169, 171, 175, 183, 184, 187, 188, 203, 204, 209, 210, 231, 237], "introduct": [1, 46, 51, 56, 73, 85, 228], "langag": [2, 4, 6, 19, 38, 39, 41, 48, 50, 51, 53, 54, 61, 66, 70, 72, 73, 74, 87, 88, 100, 101, 111, 113, 114, 153, 157, 159, 166, 170, 171, 175, 177, 193, 194, 195, 203, 204, 205, 210, 213, 222, 223, 224, 225, 227, 229, 230, 231, 234, 237, 239, 240, 241, 242, 244], "matric": [1, 6, 15, 27, 39, 41, 49, 50, 51, 54, 56, 70, 71, 73, 82, 85, 99, 101, 106, 107, 108, 111, 112, 119, 125, 134, 135, 137, 141, 142, 166, 171, 172, 176, 183, 187, 188, 202, 203, 204, 218, 221, 234, 237], "datafram": [3, 11, 15, 31, 37, 73, 78, 85, 86, 88, 91, 111, 115, 116, 119, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 156, 162, 163, 166, 168, 169, 174, 178, 183, 184, 234], "machin": [0, 1, 6, 14, 19, 22, 53, 56, 58, 61, 71, 72, 73, 74, 88, 92, 97, 132, 133, 160, 163, 171, 212, 242], "learning": [0, 1, 6, 14, 19, 22, 50, 56, 61, 71, 72, 73, 88, 127, 132, 133, 171, 212], "prec": [1, 27, 41, 46, 50, 56, 61, 73, 79, 83, 101, 102, 108, 110, 132, 175, 187, 197, 199, 200, 225, 227, 229, 233, 235, 236, 244], "collect": [51, 70, 73, 84, 85, 158, 159, 167, 174, 175, 203, 210, 221, 230, 236], "articl": [21, 31, 50, 56, 58, 70, 73, 85, 94, 95, 132, 181, 182, 203, 207, 208, 209, 210, 221, 242], "p\u00e9riss": 73, "algorithm": [2, 7, 8, 10, 17, 19, 20, 30, 33, 38, 42, 56, 58, 62, 69, 71, 72, 73, 81, 83, 84, 89, 92, 94, 96, 101, 102, 108, 110, 112, 113, 114, 117, 118, 120, 122, 133, 153, 162, 164, 171, 173, 177, 178, 183, 184, 185, 186, 188, 195, 200, 211, 213, 214, 215, 221, 224, 231, 234, 244], "s\u00e9anc": [14, 19, 50, 61, 73, 195, 203, 211], "minut": [15, 19, 20, 22, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 56, 73, 81, 95, 244], "numpy": [19, 20, 22, 24, 27, 29, 31, 39, 41, 43, 48, 51, 52, 66, 69, 72, 73, 77, 78, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 99, 106, 107, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 145, 146, 147, 149, 155, 156, 159, 160, 164, 166, 168, 171, 172, 175, 177, 179, 180, 183, 184, 185, 186, 202, 203, 215, 216, 218, 236, 240, 242, 246], "pand": [2, 3, 19, 22, 24, 29, 30, 31, 43, 45, 48, 50, 52, 73, 78, 85, 86, 88, 91, 99, 111, 115, 116, 119, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 156, 162, 163, 168, 169, 174, 178, 183, 184, 187, 188, 204, 231, 236, 246], "notebook": [3, 16, 19, 20, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 54, 55, 62, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 229, 240, 242], "\u00e9crit": [1, 4, 33, 41, 42, 46, 50, 58, 61, 62, 64, 69, 71, 73, 74, 93, 97, 112, 113, 114, 115, 124, 152, 153, 157, 160, 162, 166, 170, 177, 195, 202, 203, 205, 209, 212, 213, 221, 224, 227, 229, 230, 233, 235, 236, 237, 239, 240, 242, 244], "dur": [4, 14, 50, 51, 54, 56, 61, 70, 71, 73, 85, 110, 120, 166, 203, 204, 232, 236, 237, 239, 242, 244], "survol": 73, "expos": [61, 73, 131, 227, 229], "En": [1, 2, 20, 27, 32, 41, 46, 49, 50, 51, 52, 56, 58, 59, 61, 69, 70, 73, 74, 77, 83, 84, 90, 93, 94, 99, 103, 105, 108, 110, 112, 155, 157, 159, 163, 165, 166, 172, 183, 187, 188, 189, 194, 200, 204, 205, 212, 213, 219, 221, 224, 225, 227, 229, 231, 235, 236, 237, 239, 242], "diagonal": [6, 38, 41, 49, 50, 56, 70, 73, 74, 78, 112, 137, 179, 180, 188, 193], "licens": [4, 71, 73, 204], "chang": [2, 4, 7, 10, 11, 14, 22, 27, 34, 42, 50, 51, 53, 54, 56, 59, 61, 62, 67, 69, 71, 73, 74, 77, 78, 82, 84, 86, 88, 89, 95, 111, 115, 116, 119, 123, 139, 140, 151, 159, 174, 187, 194, 195, 198, 204, 208, 212, 214, 221, 227, 229, 230, 231, 233, 235, 236, 237, 242], "log": [1, 50, 62, 65, 67, 73, 77, 85, 99, 101, 111, 134, 137, 138, 140, 150, 152, 163, 178, 197, 200, 204, 212, 214, 225, 227, 237, 239, 242], "L": [1, 2, 4, 10, 14, 16, 18, 21, 24, 29, 33, 38, 40, 41, 43, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 64, 68, 69, 71, 73, 74, 77, 78, 79, 83, 84, 85, 86, 87, 88, 90, 94, 95, 99, 102, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 132, 135, 136, 139, 146, 149, 151, 152, 153, 154, 157, 159, 160, 162, 166, 171, 173, 177, 178, 179, 180, 184, 186, 187, 188, 192, 194, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 219, 221, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 244, 246], "intelligent": [19, 56, 73], "artificiel": [19, 27, 54, 56, 73, 117, 118, 119, 130, 139, 142], "entr\u00e9": [1, 4, 38, 49, 50, 71, 73, 77, 119, 151, 153, 162, 177, 197, 203, 204, 213, 221, 224, 225, 229, 231, 233, 235, 245], "dan": [1, 2, 4, 7, 9, 10, 14, 18, 19, 21, 22, 27, 30, 33, 34, 38, 39, 40, 41, 42, 46, 50, 51, 53, 56, 58, 59, 60, 62, 64, 70, 71, 72, 73, 74, 77, 78, 81, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 130, 131, 132, 133, 135, 137, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 195, 198, 200, 201, 202, 205, 206, 207, 208, 209, 213, 214, 215, 219, 221, 223, 224, 225, 227, 228, 230, 231, 232, 233, 235, 236, 239, 240, 242, 244], "quotidien": [56, 70, 73], "deep": [50, 73, 171], "port": [33, 41, 51, 54, 62, 69, 73, 99, 197, 203, 221, 239, 242], "fait": [2, 4, 14, 17, 21, 27, 30, 32, 35, 38, 39, 41, 42, 50, 51, 53, 56, 58, 59, 60, 61, 62, 69, 70, 71, 73, 74, 77, 79, 80, 82, 84, 87, 88, 89, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 119, 121, 123, 131, 134, 140, 144, 145, 146, 147, 149, 150, 151, 153, 154, 157, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 173, 175, 179, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 203, 204, 205, 208, 211, 212, 213, 221, 224, 229, 231, 232, 235, 236, 237, 239, 240, 242], "principal": [4, 41, 46, 53, 54, 56, 58, 61, 62, 69, 71, 73, 74, 136, 175, 186, 197, 203, 205, 227, 236, 237, 239, 240, 242, 244], "langgag": 73, "xavi": [39, 51, 73, 75, 94, 213, 235, 240, 244], "dupr": [51, 67, 73, 75, 235, 236, 240], "contient": [2, 10, 18, 33, 38, 41, 50, 51, 53, 54, 56, 59, 61, 69, 70, 73, 78, 79, 83, 95, 98, 99, 100, 102, 105, 108, 110, 123, 148, 166, 175, 178, 183, 184, 187, 188, 193, 194, 195, 198, 203, 205, 209, 210, 213, 221, 224, 225, 229, 231, 233, 235, 236, 237, 239, 242, 244], "exempl": [0, 2, 4, 27, 30, 33, 40, 41, 42, 51, 58, 59, 60, 61, 62, 64, 69, 71, 72, 73, 74, 77, 81, 86, 94, 96, 101, 104, 105, 108, 110, 113, 114, 117, 118, 123, 129, 130, 133, 134, 137, 143, 145, 148, 149, 152, 158, 162, 170, 174, 175, 177, 178, 179, 187, 189, 192, 193, 195, 197, 199, 203, 204, 207, 208, 211, 212, 213, 215, 225, 226, 229, 230, 231, 232, 233, 240, 242], "souvent": [2, 4, 14, 27, 41, 46, 50, 51, 52, 54, 56, 58, 60, 61, 62, 64, 69, 71, 73, 74, 77, 81, 84, 88, 102, 105, 110, 112, 115, 116, 125, 131, 134, 137, 154, 156, 157, 160, 170, 171, 173, 177, 193, 197, 203, 205, 212, 213, 219, 221, 224, 225, 227, 229, 230, 231, 235, 236, 237, 239, 240, 242, 244], "reli": [27, 38, 42, 56, 58, 59, 61, 62, 69, 73, 78, 84, 89, 94, 95, 99, 119, 137, 183, 184, 188, 221, 229, 235, 239, 242], "0": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 69, 70, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 224, 225, 227, 229, 230, 231, 232, 235, 236, 237, 239, 240, 242, 244, 246], "3": [1, 2, 4, 6, 11, 16, 18, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 52, 53, 54, 55, 56, 59, 62, 69, 71, 73, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 189, 190, 199, 200, 202, 207, 208, 209, 210, 215, 216, 218, 219, 221, 223, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 241, 242, 244], "1": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 65, 68, 69, 71, 73, 74, 77, 78, 80, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 96, 97, 106, 114, 116, 118, 122, 125, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 185, 186, 199, 200, 206, 207, 208, 209, 210, 214, 215, 216, 218, 219, 223, 224, 225, 227, 229, 230, 231, 232, 233, 236, 237, 240, 242, 244], "list": [1, 2, 6, 7, 8, 9, 10, 11, 14, 19, 30, 34, 38, 39, 42, 50, 51, 52, 54, 56, 59, 60, 61, 64, 67, 77, 78, 83, 84, 87, 88, 89, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 117, 120, 124, 129, 130, 133, 137, 140, 141, 146, 148, 149, 151, 152, 153, 159, 161, 166, 167, 168, 170, 172, 173, 174, 178, 184, 187, 188, 189, 191, 192, 193, 194, 198, 200, 202, 203, 204, 210, 212, 214, 215, 219, 224, 225, 230, 231, 232, 240, 242, 244], "tupl": [2, 4, 7, 8, 9, 10, 11, 13, 30, 33, 46, 50, 51, 52, 61, 69, 71, 94, 95, 102, 120, 123, 129, 171, 175, 177, 183, 197, 203, 213, 221, 230, 231, 235, 237], "ensembl": [1, 2, 7, 8, 9, 10, 14, 27, 30, 38, 39, 50, 51, 52, 56, 58, 59, 61, 62, 69, 70, 74, 77, 78, 80, 83, 84, 85, 87, 88, 89, 95, 99, 101, 103, 111, 112, 113, 114, 115, 116, 117, 118, 121, 129, 131, 132, 133, 134, 135, 139, 141, 142, 149, 151, 152, 153, 159, 163, 168, 175, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 200, 203, 206, 211, 221, 224, 225, 229, 230, 231, 233, 235, 237, 239, 240], "dictionnair": [4, 33, 38, 39, 51, 54, 61, 71, 78, 94, 100, 101, 102, 103, 105, 108, 111, 124, 125, 129, 157, 166, 183, 187, 193, 209, 210, 211, 212, 223, 224, 230, 235, 237, 239, 240, 242, 244], "cha\u00een": [1, 51, 54, 61, 80, 99, 100, 101, 102, 104, 110, 129, 151, 166, 187, 193, 197, 203, 205, 206, 209, 210, 212, 213, 215, 221, 224, 229, 230, 233, 234, 235, 237, 239, 240, 242, 244], "co\u00fbt": [2, 6, 33, 38, 42, 51, 56, 58, 59, 61, 62, 71, 81, 83, 87, 88, 90, 91, 95, 100, 101, 102, 108, 115, 116, 129, 159, 173, 175, 178, 186, 187, 188, 198, 211, 212, 213, 214, 219, 221], "oper": [1, 2, 4, 19, 24, 29, 31, 41, 43, 54, 56, 59, 61, 71, 101, 104, 108, 123, 129, 133, 155, 171, 175, 178, 181, 182, 204, 205, 206, 212, 213, 222, 224, 229, 231, 232, 236, 237, 240, 246], "heap": [1, 88, 129], "D": [2, 11, 14, 41, 52, 56, 62, 77, 79, 84, 85, 86, 94, 99, 103, 109, 129, 133, 151, 152, 154, 158, 162, 181, 182, 183, 190, 198, 204, 230, 231, 236, 237, 239, 240, 244], "autr": [1, 2, 4, 14, 15, 16, 18, 20, 24, 27, 29, 30, 38, 39, 40, 41, 42, 43, 46, 48, 50, 51, 53, 54, 58, 59, 61, 64, 66, 70, 71, 74, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 108, 111, 112, 114, 115, 116, 117, 118, 120, 123, 124, 125, 129, 133, 134, 136, 137, 139, 141, 144, 145, 147, 149, 150, 151, 153, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 172, 178, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 200, 205, 206, 209, 210, 212, 213, 214, 215, 216, 223, 224, 225, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 246], "recherch": [1, 5, 10, 19, 20, 38, 51, 56, 58, 60, 62, 63, 64, 83, 88, 89, 94, 95, 110, 111, 113, 116, 129, 134, 146, 153, 162, 165, 188, 198, 215, 217, 220, 224, 229, 235, 236, 237, 244], "dichotom": [1, 19, 88, 90, 95, 113, 115, 116, 129, 162, 198, 219, 235], "r\u00e9partit": [15, 51, 56, 61, 70, 117, 118, 129, 140, 144, 147, 148, 159], "tabl": [1, 14, 15, 51, 72, 94, 98, 99, 108, 117, 118, 129, 160, 163, 174, 176, 197, 198, 203, 212, 221, 229, 235, 236, 239], "hashag": [1, 15, 77, 129, 197, 198], "expliqu": [6, 24, 29, 33, 43, 54, 56, 58, 70, 71, 88, 94, 110, 113, 114, 121, 129, 136, 144, 147, 149, 175, 178, 200, 212, 221, 224, 235, 236, 237, 246], "programm": [1, 2, 4, 19, 22, 30, 33, 35, 38, 40, 42, 43, 50, 51, 56, 61, 66, 71, 72, 74, 81, 83, 85, 94, 100, 101, 102, 103, 104, 105, 108, 111, 113, 114, 121, 129, 157, 158, 160, 170, 171, 172, 175, 177, 179, 180, 193, 197, 203, 204, 205, 206, 209, 212, 213, 214, 215, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 240, 242, 244, 246], "Un": [1, 4, 7, 15, 22, 27, 30, 33, 35, 38, 40, 41, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 69, 70, 71, 78, 82, 87, 96, 98, 99, 101, 110, 111, 113, 114, 115, 116, 117, 118, 129, 130, 131, 132, 133, 137, 142, 147, 151, 152, 155, 165, 166, 168, 175, 181, 182, 189, 193, 197, 201, 202, 203, 205, 206, 207, 209, 210, 212, 213, 215, 219, 221, 227, 229, 233, 235, 237, 238, 240], "bref": [15, 53, 85, 129, 139, 186], "aper\u00e7u": [15, 41, 61, 129], "2048": [4, 61, 71, 83, 101, 109, 129, 203], "jeu": [3, 20, 22, 26, 30, 38, 51, 62, 74, 86, 93, 99, 109, 128, 129, 136, 150, 186, 193, 229, 233], "d\u00e9": [20, 129], "rotat": [20, 129, 149, 210], "circuit": [10, 13, 20, 42, 57, 93, 95, 129], "permut": [1, 2, 3, 18, 20, 35, 41, 42, 58, 59, 61, 62, 81, 88, 93, 110, 111, 121, 129, 149, 164, 188, 189, 190, 194, 197, 203, 215, 224], "d\u00e9composit": [2, 20, 22, 41, 50, 77, 129, 179, 231], "transit": [20, 129, 242], "Une": [1, 2, 4, 14, 30, 33, 34, 38, 51, 56, 59, 60, 61, 62, 69, 70, 71, 74, 77, 79, 80, 82, 86, 88, 89, 91, 94, 102, 108, 110, 115, 116, 117, 118, 124, 129, 131, 134, 147, 151, 160, 164, 167, 175, 186, 190, 193, 195, 197, 200, 205, 206, 211, 221, 224, 229, 231, 232, 235, 236, 237, 239, 240, 242, 244], "repr\u00e9sent": [1, 2, 6, 20, 27, 33, 38, 41, 50, 51, 53, 58, 59, 61, 62, 71, 82, 84, 85, 87, 91, 94, 95, 101, 106, 107, 117, 118, 124, 129, 132, 134, 135, 136, 141, 142, 147, 148, 161, 166, 168, 175, 179, 180, 188, 198, 204, 210, 211, 212, 221, 223, 229, 231, 233, 235, 236, 237, 240], "arbre": [1, 10, 19, 22, 84, 87, 94, 108, 129, 131, 133, 141, 162, 168, 210], "iter": [1, 2, 5, 7, 9, 10, 11, 12, 20, 33, 42, 45, 50, 58, 59, 69, 83, 84, 86, 88, 89, 90, 91, 95, 101, 104, 113, 114, 117, 118, 129, 130, 132, 137, 138, 139, 140, 153, 154, 172, 187, 188, 193, 200, 202, 206, 213, 214, 216, 222, 231, 236, 240, 242], "h\u00e9ritag": [19, 20, 129, 153, 222, 223], "calcul": [1, 4, 6, 7, 9, 10, 14, 15, 19, 27, 32, 34, 42, 48, 51, 54, 55, 56, 61, 62, 66, 70, 71, 74, 80, 81, 82, 84, 86, 87, 88, 93, 95, 96, 98, 99, 100, 101, 102, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 129, 131, 132, 133, 134, 135, 137, 142, 145, 150, 152, 154, 159, 160, 162, 166, 170, 171, 172, 175, 178, 181, 182, 183, 184, 186, 187, 188, 189, 190, 197, 203, 205, 206, 211, 221, 223, 224, 229, 232, 235, 236, 237, 239, 241, 242], "distanc": [1, 7, 9, 10, 12, 13, 15, 19, 20, 42, 53, 56, 58, 61, 62, 86, 95, 96, 108, 115, 116, 117, 118, 125, 129, 137, 145, 183, 184, 186, 187, 188, 190, 191, 192, 217, 220], "pivot": [20, 54, 88, 129, 132, 147, 148, 204, 217, 220], "gauss": [20, 111, 129, 133, 179, 180, 187, 188, 217, 220], "jeux": [5, 15, 51, 54, 62, 72, 74, 85, 95, 125, 129, 130, 142, 185, 186, 234, 242], "coloriag": [84, 97, 129, 177], "simul": [5, 9, 10, 12, 13, 56, 98, 99, 111, 119, 129, 135, 181, 182, 202, 221, 235, 239, 242], "loi": [61, 62, 84, 88, 110, 111, 113, 114, 115, 116, 119, 123, 129, 176, 179, 180, 181, 182, 200, 203], "multinomial": [111, 129], "chi": [53, 129], "2": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 18, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 69, 71, 77, 78, 80, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 95, 96, 97, 103, 106, 107, 112, 113, 115, 117, 121, 122, 123, 124, 125, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 171, 172, 174, 177, 178, 179, 180, 184, 185, 186, 189, 190, 199, 200, 207, 208, 209, 210, 214, 215, 216, 218, 219, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 242, 244], "tableau": [2, 33, 36, 38, 41, 48, 49, 52, 56, 61, 70, 78, 82, 84, 88, 100, 104, 108, 113, 116, 129, 137, 153, 158, 161, 164, 166, 168, 170, 174, 178, 187, 188, 189, 190, 193, 194, 198, 202, 212, 213, 214, 224, 231, 236, 237, 242, 244], "contingent": [48, 49, 129], "tri": [1, 11, 12, 13, 19, 41, 51, 53, 56, 59, 61, 69, 74, 94, 95, 99, 100, 108, 112, 115, 116, 129, 131, 144, 149, 162, 168, 173, 187, 188, 197, 198, 213, 214, 215, 219, 227, 235, 236], "rapid": [1, 2, 4, 33, 38, 40, 41, 50, 51, 53, 56, 58, 59, 61, 69, 71, 74, 77, 84, 91, 95, 99, 110, 113, 114, 115, 116, 123, 125, 129, 158, 159, 160, 164, 167, 171, 173, 177, 197, 198, 203, 204, 210, 211, 221, 227, 229, 231, 236, 239, 240, 241, 242], "pr\u00e9vu": [51, 60, 129, 221, 224, 229, 237], "histogramm": [1, 27, 51, 56, 70, 111, 113, 114, 129, 145, 178], "surfac": [11, 41, 46, 95, 107, 110, 129], "mathador": [0, 24, 29, 43, 129, 246], "\u00e9nigm": [23, 24, 29, 43, 61, 125, 129, 246], "4": [1, 2, 4, 6, 9, 11, 12, 24, 26, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 52, 53, 54, 55, 62, 69, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 189, 190, 199, 200, 201, 202, 205, 206, 207, 208, 210, 214, 215, 217, 218, 219, 220, 221, 224, 227, 229, 230, 231, 232, 235, 236, 237, 239, 241, 242, 244, 246], "part": [1, 2, 6, 10, 14, 20, 24, 27, 29, 30, 33, 35, 41, 42, 43, 45, 46, 49, 51, 56, 59, 61, 62, 64, 69, 70, 74, 77, 83, 84, 85, 86, 87, 88, 89, 95, 99, 102, 109, 110, 111, 113, 114, 116, 117, 118, 119, 123, 129, 132, 135, 136, 137, 138, 139, 152, 155, 156, 159, 166, 170, 171, 173, 175, 177, 178, 179, 180, 186, 187, 189, 190, 191, 192, 195, 196, 197, 200, 202, 203, 204, 209, 210, 211, 212, 215, 221, 224, 225, 229, 231, 232, 235, 236, 237, 239, 240, 242, 244, 246], "dam": [24, 29, 43, 129, 221, 246], "fonction": [1, 4, 7, 10, 14, 19, 27, 32, 33, 34, 38, 40, 41, 42, 50, 52, 56, 58, 62, 66, 71, 74, 78, 79, 80, 81, 83, 86, 89, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 129, 131, 132, 133, 134, 137, 139, 140, 142, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 159, 162, 165, 168, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 193, 194, 199, 202, 203, 209, 210, 211, 212, 213, 215, 216, 218, 219, 223, 224, 225, 227, 230, 232, 233, 237, 239, 240, 242, 245], "gin": 129, "appliqu": [1, 2, 7, 15, 27, 39, 41, 51, 56, 58, 60, 61, 62, 69, 70, 74, 77, 80, 81, 85, 89, 93, 94, 99, 110, 111, 120, 129, 131, 133, 135, 139, 141, 149, 151, 152, 153, 157, 161, 165, 166, 170, 176, 179, 183, 184, 187, 193, 203, 209, 211, 213, 214, 218, 221, 224, 225, 229, 231, 235, 236, 237, 239, 240, 242, 244], "convolu": [1, 15, 129], "express": [1, 10, 41, 50, 51, 69, 70, 75, 108, 112, 129, 131, 134, 151, 154, 160, 175, 187, 221, 235, 236, 237, 239, 245], "r\u00e9guli": [56, 100, 125, 129, 198, 224, 229, 237, 239, 245], "json": [11, 15, 19, 129, 203, 238], "xml": [15, 19, 67, 69, 129, 203, 237, 239, 240], "s\u00e9rialis": [24, 29, 43, 129, 163, 221, 236, 237, 238, 239, 246], "pickl": [129, 134, 163, 237, 239, 240], "test": [7, 11, 19, 20, 22, 27, 30, 38, 41, 50, 51, 56, 59, 61, 66, 83, 85, 91, 95, 99, 100, 101, 104, 110, 119, 125, 128, 129, 131, 139, 144, 146, 149, 150, 153, 164, 171, 176, 187, 189, 194, 198, 202, 205, 210, 215, 221, 225, 227, 234, 236, 237, 239], "unitair": [19, 20, 22, 125, 129, 171, 227, 239], "web": [1, 2, 15, 22, 69, 71, 74, 129, 203, 204, 227, 232, 240, 241], "scraping": [15, 129], "pokemon": [15, 129], "gil": [24, 29, 43, 129, 241, 246], "astuc": [2, 4, 21, 24, 29, 43, 53, 66, 71, 82, 83, 129, 154, 204, 231, 239, 242, 246], "lambd": [2, 11, 24, 29, 41, 43, 50, 83, 99, 105, 111, 120, 129, 134, 167, 169, 170, 179, 181, 182, 190, 195, 196, 199, 200, 231, 239, 246], "function": [4, 7, 10, 11, 13, 24, 29, 39, 43, 50, 62, 69, 129, 138, 139, 162, 170, 171, 172, 185, 198, 225, 229, 233, 235, 239, 242, 244, 246], "Les": [2, 6, 10, 14, 15, 17, 18, 19, 26, 30, 32, 34, 36, 37, 38, 41, 46, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 66, 70, 74, 77, 78, 84, 85, 87, 91, 92, 94, 96, 99, 104, 110, 112, 117, 118, 119, 120, 123, 124, 125, 129, 131, 132, 133, 134, 136, 137, 140, 143, 144, 145, 153, 155, 157, 162, 165, 166, 170, 171, 174, 175, 177, 178, 183, 188, 189, 193, 197, 198, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 221, 223, 227, 228, 231, 233, 234, 236, 237, 239, 240, 242], "suiv": [2, 4, 7, 14, 19, 30, 33, 41, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 69, 71, 74, 79, 83, 85, 87, 91, 94, 95, 96, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 125, 129, 133, 135, 139, 152, 153, 159, 164, 165, 166, 170, 171, 173, 175, 177, 178, 179, 180, 183, 184, 187, 188, 189, 190, 191, 192, 195, 197, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244], "fonctionnent": [39, 54, 61, 64, 69, 74, 125, 129, 203, 224, 229], "pair": [42, 51, 53, 59, 61, 62, 69, 84, 87, 89, 95, 103, 108, 112, 117, 118, 123, 125, 129, 135, 181, 182, 187, 188, 215, 221, 229, 236], "\u00e9nonc": [15, 19, 41, 51, 78, 79, 95, 97, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 120, 125, 129, 134, 166, 184, 191, 192, 196, 198, 204, 212], "premi": [1, 4, 6, 7, 15, 18, 19, 27, 30, 33, 34, 38, 41, 42, 46, 49, 50, 51, 53, 56, 58, 59, 61, 62, 69, 70, 71, 74, 77, 79, 80, 81, 82, 83, 84, 87, 89, 91, 94, 96, 98, 99, 100, 101, 102, 104, 105, 108, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 125, 129, 130, 134, 135, 136, 137, 138, 140, 142, 143, 144, 152, 153, 155, 157, 160, 161, 163, 166, 170, 173, 175, 178, 179, 180, 183, 184, 186, 187, 188, 194, 195, 197, 202, 203, 204, 208, 209, 211, 212, 213, 214, 219, 221, 224, 225, 227, 229, 233, 235, 236, 237, 239, 240, 241, 244], "variabl": [2, 4, 27, 34, 38, 41, 50, 51, 53, 56, 59, 62, 65, 66, 71, 74, 77, 84, 100, 102, 103, 105, 110, 111, 115, 116, 125, 129, 130, 133, 134, 136, 138, 143, 146, 148, 150, 151, 152, 155, 157, 158, 159, 163, 164, 170, 175, 176, 189, 193, 194, 198, 200, 203, 205, 206, 212, 221, 223, 224, 225, 229, 231, 233, 237, 239, 240, 242, 245], "boucl": [2, 19, 32, 33, 38, 41, 42, 51, 53, 55, 64, 66, 83, 84, 87, 88, 91, 93, 95, 100, 101, 102, 103, 104, 105, 108, 110, 113, 114, 129, 146, 159, 164, 176, 194, 205, 211, 216, 221, 224, 225, 227, 229, 231, 234, 242], "vigener": [125, 129], "modul": [1, 2, 6, 11, 12, 13, 14, 32, 33, 39, 46, 49, 50, 51, 59, 62, 64, 65, 66, 95, 99, 101, 102, 104, 105, 110, 111, 112, 113, 114, 129, 132, 137, 139, 140, 147, 151, 158, 159, 162, 165, 166, 171, 174, 175, 177, 179, 180, 183, 185, 187, 188, 210, 211, 221, 224, 225, 227, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 244, 245], "fichi": [2, 21, 40, 54, 66, 85, 98, 99, 129, 163, 166, 177, 187, 188, 221, 224, 225, 229, 231, 232, 234, 235, 236, 238, 242, 244], "int\u00e9gral": [2, 4, 69, 71, 110, 129, 239, 242, 244], "m\u00e9thod": [1, 2, 4, 19, 38, 41, 50, 51, 52, 56, 58, 59, 61, 62, 71, 77, 86, 88, 91, 96, 101, 102, 104, 111, 115, 116, 129, 131, 132, 134, 135, 142, 151, 153, 155, 156, 159, 166, 171, 175, 179, 180, 183, 184, 185, 186, 192, 198, 203, 204, 211, 222, 223, 224, 231, 234, 235, 237, 239, 242, 244], "rectangl": [41, 59, 118, 129, 160, 221, 229], "strateg": [57, 61, 62, 84, 110, 129, 130, 141, 241, 244], "gagn": [42, 56, 61, 69, 70, 129, 146, 171, 213, 230, 236, 240, 242], "devin": [129, 204], "langu": [60, 124, 129, 219, 224, 233], "text": [1, 2, 4, 11, 30, 33, 35, 42, 51, 54, 56, 58, 59, 61, 62, 64, 70, 71, 74, 77, 82, 87, 96, 111, 112, 124, 129, 130, 134, 135, 136, 137, 145, 149, 165, 166, 170, 171, 183, 184, 195, 197, 200, 205, 211, 213, 224, 225, 231, 233, 235, 236, 238, 239, 240, 242, 244], "trac": [3, 4, 8, 41, 47, 48, 51, 54, 60, 61, 71, 85, 95, 98, 99, 120, 129, 136, 138, 140, 142, 156, 183, 184, 210, 221, 225, 227, 237], "pyramid": [61, 81, 129], "bigarr": [61, 129], "attribut": [4, 11, 19, 30, 39, 41, 50, 71, 102, 129, 151, 155, 157, 222, 223, 224, 229, 230, 237, 240, 242, 244], "carr": [9, 10, 38, 41, 50, 59, 61, 69, 109, 110, 111, 113, 114, 118, 121, 129, 164, 175, 176, 183, 186, 203, 204, 205, 206, 213, 218, 221, 235, 236, 239], "magiqu": [129, 211], "mot": [2, 20, 34, 51, 58, 63, 71, 94, 96, 101, 104, 105, 108, 125, 152, 162, 195, 198, 203, 204, 205, 209, 211, 212, 219, 221, 224, 229, 231, 235, 236, 237, 239, 242, 244], "anglais": [2, 4, 30, 53, 56, 58, 60, 61, 62, 70, 71, 78, 84, 92, 150, 166, 170, 183, 209, 210, 211, 233, 236, 237, 240, 244], "prononc": [4, 62, 71, 211], "tra\u00efll": 211, "ser": [1, 2, 4, 14, 22, 33, 38, 39, 46, 59, 60, 61, 62, 69, 70, 71, 77, 81, 83, 88, 93, 94, 95, 99, 102, 108, 110, 111, 119, 123, 137, 139, 142, 148, 153, 162, 173, 183, 184, 188, 193, 198, 200, 204, 205, 209, 211, 212, 213, 221, 224, 225, 227, 229, 231, 235, 236, 237, 239, 242], "d\u00e9fin": [1, 4, 7, 9, 10, 30, 33, 34, 38, 41, 50, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 78, 82, 84, 99, 113, 115, 116, 131, 135, 151, 153, 155, 157, 159, 166, 179, 183, 187, 193, 197, 203, 204, 210, 211, 212, 213, 221, 225, 226, 227, 229, 233, 235, 236, 237, 239, 240, 242, 244], "bas": [3, 14, 19, 20, 27, 30, 33, 39, 50, 53, 56, 60, 61, 74, 77, 83, 88, 98, 99, 109, 115, 116, 125, 128, 133, 134, 135, 139, 143, 144, 145, 146, 148, 149, 150, 156, 163, 166, 171, 174, 185, 186, 197, 211, 215, 221, 224, 229, 230, 235, 236, 237, 239, 242], "Cette": [1, 2, 4, 21, 41, 51, 56, 58, 59, 61, 62, 69, 70, 71, 74, 77, 80, 85, 91, 94, 95, 96, 99, 101, 102, 103, 110, 133, 137, 149, 151, 153, 159, 162, 164, 168, 171, 175, 179, 195, 204, 209, 211, 212, 215, 221, 224, 225, 229, 230, 231, 233, 235, 236, 237, 239, 240, 241, 242], "structur": [1, 2, 4, 9, 11, 33, 51, 53, 54, 56, 61, 69, 71, 84, 87, 95, 168, 193, 197, 198, 203, 211, 212, 219, 221, 231, 236, 237, 239], "don": [1, 2, 4, 5, 7, 15, 19, 22, 26, 27, 30, 34, 38, 39, 40, 41, 42, 45, 47, 48, 50, 52, 56, 60, 61, 66, 68, 70, 71, 72, 74, 77, 83, 84, 86, 87, 94, 98, 99, 100, 104, 106, 108, 110, 111, 116, 117, 118, 120, 124, 128, 130, 131, 133, 135, 136, 142, 144, 147, 149, 150, 153, 157, 161, 166, 171, 178, 183, 185, 186, 193, 197, 198, 203, 204, 205, 210, 211, 212, 213, 215, 219, 221, 223, 224, 225, 229, 231, 232, 235, 236, 237, 238, 239, 242, 244], "tres": [2, 4, 14, 16, 35, 38, 39, 41, 42, 46, 50, 51, 54, 56, 59, 60, 61, 62, 63, 64, 69, 70, 71, 77, 78, 87, 88, 89, 91, 92, 93, 95, 96, 99, 101, 108, 111, 117, 118, 120, 123, 124, 133, 134, 136, 137, 139, 141, 144, 145, 147, 149, 150, 151, 154, 156, 163, 166, 171, 173, 175, 177, 178, 186, 187, 194, 197, 203, 204, 205, 211, 212, 213, 219, 221, 224, 227, 229, 230, 231, 235, 236, 237, 239, 240], "adapt": [14, 41, 46, 51, 58, 91, 166, 178, 211, 219, 221, 242], "ordon": [10, 30, 51, 74, 115, 116, 156, 187, 211, 221, 235], "C": [1, 2, 4, 6, 11, 14, 18, 21, 27, 32, 35, 39, 40, 41, 42, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 74, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 99, 102, 105, 108, 110, 111, 113, 116, 117, 118, 121, 123, 124, 132, 133, 134, 136, 137, 139, 142, 143, 144, 145, 151, 152, 153, 154, 159, 160, 162, 163, 164, 166, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 197, 198, 200, 202, 203, 204, 209, 211, 212, 213, 215, 219, 221, 222, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 244], "auss": [1, 2, 4, 10, 14, 19, 20, 27, 30, 33, 34, 39, 40, 41, 42, 46, 50, 51, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 74, 81, 84, 85, 88, 94, 95, 99, 115, 116, 117, 120, 121, 131, 132, 133, 134, 135, 137, 144, 153, 159, 162, 164, 170, 171, 172, 175, 177, 179, 180, 183, 187, 188, 197, 200, 204, 206, 209, 211, 212, 213, 219, 221, 224, 225, 227, 229, 231, 235, 236, 237, 239, 240, 242, 244], "histoir": [56, 60, 113, 164, 211], "imbriqu": [69, 101, 105, 106, 107, 211, 235, 236], "problem": [14, 15, 19, 20, 27, 33, 35, 41, 42, 46, 50, 58, 59, 69, 72, 74, 81, 83, 84, 85, 87, 91, 92, 99, 103, 104, 108, 109, 110, 112, 115, 116, 119, 121, 123, 131, 132, 133, 136, 150, 160, 162, 163, 166, 173, 183, 184, 186, 187, 191, 192, 193, 197, 203, 205, 209, 210, 211, 214, 215, 221, 224, 225, 227, 229, 232, 233, 236, 237, 240, 244], "simpl": [1, 2, 4, 10, 14, 30, 34, 35, 41, 51, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 74, 77, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 108, 110, 111, 115, 116, 118, 130, 131, 133, 134, 136, 139, 143, 150, 153, 163, 166, 168, 172, 173, 175, 183, 185, 186, 187, 193, 194, 197, 200, 201, 202, 203, 204, 205, 209, 211, 212, 215, 224, 227, 229, 231, 236, 237, 239, 240, 241, 244], "Et": [2, 4, 14, 27, 33, 34, 39, 40, 42, 46, 51, 52, 53, 60, 61, 69, 71, 74, 81, 84, 85, 88, 91, 93, 99, 102, 110, 115, 116, 117, 118, 120, 130, 131, 134, 139, 140, 141, 144, 152, 155, 156, 157, 160, 161, 164, 166, 173, 175, 176, 183, 184, 193, 198, 199, 201, 204, 208, 211, 223, 224, 227, 229, 230, 231, 235, 237, 239, 240, 242], "pourt": [42, 50, 56, 134, 175, 200, 203, 211, 215, 221, 224], "t\u00e2ch": [58, 74, 137, 157, 211, 235, 236, 242, 244], "peut": [1, 2, 4, 6, 7, 10, 14, 18, 27, 30, 33, 38, 39, 40, 41, 42, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 79, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 99, 101, 102, 104, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 144, 145, 146, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 170, 173, 175, 176, 177, 178, 179, 183, 184, 187, 188, 190, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 211, 212, 213, 219, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 244], "\u00eatre": [1, 2, 4, 14, 30, 39, 41, 42, 50, 51, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 81, 84, 85, 91, 93, 94, 95, 96, 99, 102, 108, 110, 112, 113, 114, 115, 116, 119, 120, 130, 131, 132, 133, 134, 135, 136, 137, 140, 144, 145, 147, 149, 151, 152, 153, 155, 165, 166, 168, 170, 171, 173, 175, 176, 177, 179, 187, 188, 189, 193, 197, 198, 199, 203, 204, 209, 210, 211, 212, 213, 221, 224, 227, 229, 231, 233, 235, 236, 237, 239, 242, 244], "moin": [2, 4, 6, 9, 14, 21, 27, 33, 41, 46, 51, 56, 59, 61, 62, 69, 70, 71, 74, 77, 79, 84, 85, 87, 89, 91, 97, 99, 101, 110, 115, 116, 120, 123, 131, 132, 133, 134, 139, 140, 146, 147, 148, 159, 160, 163, 164, 166, 170, 171, 173, 175, 178, 183, 190, 193, 194, 195, 197, 203, 211, 221, 224, 225, 227, 229, 231, 232, 233, 235, 236, 237, 242, 244], "selon": [2, 10, 14, 27, 50, 51, 54, 56, 59, 61, 69, 70, 74, 85, 88, 95, 101, 113, 114, 115, 117, 118, 123, 136, 138, 139, 144, 149, 156, 168, 171, 179, 180, 181, 182, 183, 184, 186, 193, 203, 211, 213, 221, 224, 229, 231, 233, 235, 236, 237, 244], "dont": [1, 2, 4, 14, 27, 30, 38, 41, 46, 51, 52, 53, 56, 59, 60, 61, 62, 69, 70, 71, 77, 83, 84, 98, 99, 101, 115, 116, 117, 118, 121, 150, 151, 153, 162, 173, 175, 177, 187, 189, 200, 204, 209, 210, 211, 212, 221, 224, 225, 229, 231, 233, 235, 236, 237, 239, 242, 244], "voir": [1, 2, 4, 13, 16, 19, 20, 27, 30, 33, 39, 42, 46, 50, 51, 56, 58, 61, 62, 69, 71, 74, 77, 82, 87, 88, 89, 94, 95, 96, 111, 113, 114, 115, 116, 133, 134, 135, 147, 149, 152, 153, 156, 159, 162, 164, 175, 179, 180, 183, 184, 190, 193, 198, 201, 203, 204, 205, 211, 212, 213, 216, 221, 227, 229, 231, 235, 236, 237, 240, 242], "compress": [1, 78, 94, 166, 203, 211, 237], "object": [1, 4, 11, 26, 27, 30, 31, 33, 38, 39, 42, 51, 54, 56, 60, 62, 69, 70, 71, 85, 94, 95, 99, 101, 102, 104, 122, 131, 151, 152, 153, 154, 166, 170, 171, 172, 185, 187, 188, 193, 197, 209, 211, 212, 221, 229, 235, 236, 239, 240, 242, 244], "d\u00e9couvr": [56, 69, 104, 111, 170, 188, 189, 211, 237, 242], "trois": [1, 2, 18, 30, 38, 41, 46, 51, 56, 58, 59, 61, 66, 70, 83, 87, 91, 94, 96, 108, 149, 150, 153, 155, 157, 161, 173, 179, 180, 191, 192, 195, 197, 203, 204, 205, 208, 211, 213, 221, 224, 229, 231, 234, 236, 237, 239, 242, 244], "construir": [7, 14, 41, 46, 50, 51, 53, 56, 58, 59, 62, 69, 70, 79, 83, 89, 94, 95, 101, 111, 117, 118, 122, 123, 125, 131, 133, 171, 179, 180, 186, 187, 200, 209, 211, 212, 219, 221, 229, 232, 235, 236, 244], "La": [1, 2, 4, 9, 10, 12, 13, 14, 16, 27, 33, 34, 38, 39, 41, 42, 46, 48, 50, 51, 52, 56, 58, 59, 62, 64, 69, 70, 71, 74, 77, 79, 80, 81, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 163, 164, 165, 166, 168, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 188, 193, 194, 195, 197, 199, 202, 203, 204, 205, 206, 209, 211, 212, 213, 214, 216, 218, 219, 221, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244], "diff\u00e9rent": [1, 14, 18, 27, 30, 33, 38, 39, 42, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 64, 70, 78, 79, 87, 88, 93, 94, 99, 108, 110, 113, 114, 116, 118, 119, 120, 125, 130, 131, 136, 139, 140, 141, 142, 144, 145, 147, 149, 150, 157, 158, 159, 162, 165, 167, 175, 187, 188, 193, 194, 197, 200, 203, 205, 206, 211, 212, 213, 215, 219, 221, 224, 229, 230, 231, 232, 233, 235, 236, 237, 239, 241, 242, 244], "chaqu": [1, 2, 4, 7, 10, 14, 27, 30, 32, 33, 34, 38, 41, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 81, 82, 83, 84, 85, 86, 89, 93, 94, 95, 96, 98, 99, 101, 102, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 130, 131, 132, 135, 136, 137, 139, 142, 150, 152, 153, 159, 162, 163, 165, 166, 170, 171, 172, 173, 179, 180, 181, 182, 183, 187, 188, 189, 193, 197, 198, 200, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 219, 221, 223, 224, 225, 227, 229, 230, 231, 233, 235, 236, 237, 239, 242, 244], "fois": [4, 6, 10, 14, 27, 30, 33, 39, 50, 53, 56, 58, 59, 60, 61, 62, 64, 69, 71, 74, 77, 80, 82, 83, 84, 86, 87, 88, 93, 94, 95, 96, 100, 101, 102, 108, 110, 111, 113, 114, 115, 116, 117, 118, 120, 123, 131, 132, 134, 135, 139, 140, 144, 145, 148, 150, 152, 153, 158, 159, 160, 161, 170, 175, 178, 188, 190, 193, 194, 197, 198, 200, 202, 203, 204, 205, 211, 212, 213, 221, 223, 224, 227, 229, 230, 235, 236, 237, 239, 240, 241, 242, 244], "On": [1, 2, 4, 7, 14, 27, 30, 32, 33, 34, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 221, 223, 224, 225, 227, 229, 230, 231, 232, 235, 236, 237, 239, 240, 242, 244], "mesur": [14, 32, 38, 39, 45, 48, 56, 61, 62, 77, 83, 88, 93, 110, 120, 137, 143, 162, 167, 170, 171, 172, 175, 178, 189, 194, 201, 204, 211, 212, 229, 239, 242, 244], "temp": [1, 2, 4, 14, 17, 32, 39, 41, 42, 46, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 70, 71, 74, 82, 84, 85, 92, 93, 95, 99, 101, 102, 105, 107, 110, 112, 113, 114, 120, 133, 135, 142, 149, 150, 158, 160, 163, 167, 170, 172, 175, 178, 183, 185, 186, 192, 193, 194, 201, 202, 204, 205, 208, 211, 212, 213, 215, 219, 221, 224, 229, 231, 235, 236, 237, 239, 240, 242, 244], "v\u00e9rifi": [1, 7, 14, 33, 38, 41, 46, 54, 56, 59, 61, 62, 64, 69, 70, 74, 77, 81, 83, 84, 93, 94, 98, 99, 100, 102, 112, 113, 114, 115, 116, 121, 132, 137, 139, 142, 151, 153, 154, 165, 175, 179, 180, 183, 194, 202, 211, 215, 227, 229, 235, 236, 237, 239, 242, 244], "appartient": [1, 38, 58, 59, 83, 84, 112, 159, 171, 175, 183, 184, 211, 221, 229, 235, 236, 244], "a": [0, 1, 2, 6, 8, 9, 10, 11, 14, 18, 20, 27, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 69, 70, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 219, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243], "quoi": [50, 51, 56, 61, 69, 77, 81, 102, 111, 155, 166, 179, 193, 197, 198, 211, 243], "\u00e7a": [2, 35, 46, 53, 61, 87, 89, 91, 92, 93, 139, 140, 157, 171, 193, 197, 198, 211, 223, 231, 233, 243], "sert": [1, 2, 14, 34, 41, 46, 48, 50, 54, 56, 69, 70, 86, 95, 100, 121, 123, 134, 153, 169, 176, 193, 195, 197, 198, 200, 204, 205, 211, 221, 223, 224, 229, 235, 236, 237, 242, 243], "complet": [17, 19, 33, 42, 50, 56, 58, 59, 61, 69, 74, 85, 92, 94, 95, 99, 111, 115, 116, 139, 149, 150, 153, 179, 180, 183, 197, 203, 211, 213, 221, 224, 229, 235, 236, 237], "plut\u00f4t": [6, 14, 34, 50, 51, 54, 56, 58, 60, 61, 62, 64, 69, 70, 71, 74, 84, 85, 99, 101, 102, 108, 110, 115, 116, 120, 123, 133, 140, 143, 149, 151, 159, 170, 175, 178, 209, 210, 211, 213, 221, 224, 225, 229, 235, 236, 237, 240, 242], "charg": [46, 55, 56, 66, 75, 203, 211, 225, 229, 236], "m\u00e9moir": [1, 4, 6, 39, 50, 53, 54, 61, 71, 77, 79, 163, 166, 203, 211, 221, 229, 230, 233, 235, 236, 237, 240], "construit": [2, 7, 10, 14, 41, 51, 56, 59, 62, 69, 70, 78, 80, 83, 87, 95, 99, 101, 106, 107, 108, 111, 116, 130, 134, 137, 139, 142, 151, 164, 179, 180, 183, 184, 189, 190, 204, 211, 212, 221, 229, 235, 236, 237, 242], "10000": [27, 50, 52, 85, 88, 93, 101, 102, 110, 116, 122, 134, 159, 164, 168, 178, 185, 186, 211, 212, 230], "longueur": [10, 20, 33, 41, 42, 50, 51, 56, 58, 59, 69, 83, 84, 87, 94, 95, 96, 102, 104, 110, 121, 122, 124, 125, 166, 175, 187, 194, 198, 211, 212, 213, 219, 233, 235, 236, 237, 242], "20": [4, 7, 10, 11, 13, 22, 27, 30, 36, 37, 39, 42, 46, 50, 51, 53, 54, 56, 61, 70, 71, 77, 84, 85, 86, 88, 89, 93, 95, 98, 99, 101, 102, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 130, 131, 132, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 159, 160, 163, 164, 168, 169, 171, 174, 175, 176, 183, 184, 186, 189, 193, 197, 199, 200, 203, 211, 212, 213, 214, 229, 232, 235, 236, 240, 242, 244], "lettr": [61, 69, 70, 74, 94, 96, 101, 103, 104, 110, 197, 198, 203, 209, 210, 211, 212, 213, 219, 229, 236, 244], "import": [1, 2, 4, 6, 11, 12, 13, 14, 26, 27, 30, 31, 32, 35, 36, 37, 39, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 65, 68, 69, 71, 74, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 224, 225, 227, 230, 231, 232, 233, 235, 236, 237, 240, 242, 244], "random": [4, 22, 31, 42, 50, 51, 52, 53, 71, 77, 78, 83, 84, 85, 86, 88, 89, 91, 92, 93, 95, 99, 102, 105, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 130, 131, 133, 134, 135, 137, 139, 142, 143, 146, 149, 152, 156, 159, 164, 167, 168, 169, 178, 179, 180, 186, 187, 188, 195, 196, 200, 202, 204, 211, 212, 214, 215, 221, 230, 239, 242], "def": [1, 2, 4, 10, 11, 30, 31, 32, 33, 34, 38, 39, 41, 42, 46, 50, 51, 52, 53, 61, 64, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 139, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 184, 186, 190, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 209, 210, 211, 212, 215, 216, 218, 219, 221, 223, 224, 225, 227, 229, 230, 231, 235, 236, 237, 239, 240, 242, 244], "mot_al": [211, 212], "chr": [96, 103, 162, 197, 198, 211, 212, 235], "97": [50, 54, 77, 91, 95, 96, 99, 103, 119, 120, 164, 167, 197, 211, 212, 235], "randint": [31, 42, 50, 51, 53, 77, 83, 84, 89, 91, 95, 102, 105, 108, 111, 112, 115, 116, 117, 118, 135, 137, 143, 152, 156, 159, 164, 167, 178, 195, 196, 202, 211, 212, 214, 215, 221, 230, 242], "25": [0, 9, 11, 12, 26, 30, 41, 50, 51, 53, 54, 62, 77, 78, 84, 85, 88, 93, 95, 96, 99, 102, 108, 110, 111, 113, 117, 118, 120, 124, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 149, 150, 163, 164, 171, 172, 175, 176, 183, 184, 193, 197, 200, 203, 204, 206, 211, 212, 213, 221, 225, 232], "for": [0, 1, 2, 4, 11, 16, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 50, 51, 52, 54, 55, 56, 58, 64, 65, 66, 67, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 224, 225, 227, 229, 230, 231, 232, 236, 237, 239, 242, 244, 246], "i": [2, 6, 10, 22, 27, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 68, 69, 70, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 143, 145, 149, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 224, 225, 227, 229, 230, 231, 235, 236, 237, 239, 242], "in": [0, 1, 2, 3, 4, 10, 11, 22, 24, 27, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 46, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 64, 65, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 224, 225, 227, 229, 230, 231, 232, 235, 236, 237, 239, 241, 242, 244], "rang": [2, 10, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 50, 51, 52, 54, 55, 56, 61, 64, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 137, 139, 140, 146, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 164, 167, 168, 169, 170, 171, 172, 175, 176, 178, 180, 184, 186, 187, 188, 190, 193, 194, 195, 196, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 218, 219, 221, 224, 225, 229, 230, 231, 235, 237, 239, 242], "return": [3, 4, 6, 10, 11, 30, 31, 32, 33, 34, 38, 39, 41, 42, 46, 50, 51, 52, 53, 64, 70, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 139, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 184, 186, 190, 193, 194, 195, 196, 198, 200, 202, 203, 204, 209, 210, 211, 212, 215, 216, 218, 219, 221, 223, 224, 225, 229, 230, 231, 235, 236, 237, 239, 240, 242, 244], "join": [2, 30, 35, 50, 54, 69, 82, 87, 94, 96, 99, 104, 105, 124, 151, 152, 153, 154, 165, 168, 170, 172, 185, 194, 198, 203, 204, 211, 212, 216, 225, 231, 235, 236, 237, 239, 244], "index": [1, 10, 52, 62, 69, 85, 87, 88, 99, 102, 104, 105, 119, 123, 132, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 158, 163, 166, 169, 197, 204, 211, 212, 221, 224, 235, 236, 239], "permet": [2, 4, 10, 14, 18, 33, 38, 40, 41, 42, 48, 50, 51, 53, 54, 56, 58, 59, 61, 62, 69, 71, 74, 77, 79, 80, 81, 87, 89, 96, 98, 99, 102, 110, 111, 112, 113, 114, 117, 118, 134, 151, 152, 153, 157, 159, 163, 166, 170, 171, 175, 176, 179, 187, 193, 194, 195, 197, 198, 199, 203, 204, 205, 211, 213, 219, 221, 223, 224, 225, 227, 229, 231, 232, 233, 235, 236, 237, 239, 240, 242, 244], "retrouv": [2, 14, 17, 51, 52, 54, 56, 58, 60, 61, 85, 86, 88, 96, 111, 113, 134, 144, 170, 175, 190, 197, 198, 203, 211, 212, 213, 221, 229, 231, 235, 236, 237, 242, 244], "posit": [11, 27, 30, 33, 42, 46, 50, 51, 53, 54, 59, 60, 61, 62, 69, 74, 81, 83, 84, 85, 88, 96, 108, 109, 115, 116, 119, 120, 131, 134, 137, 140, 150, 151, 153, 157, 161, 168, 173, 179, 183, 184, 197, 198, 203, 207, 208, 211, 212, 213, 214, 215, 216, 219, 221, 224, 225, 229, 235, 236, 244], "effectu": [4, 10, 33, 38, 39, 41, 50, 51, 53, 54, 56, 58, 69, 71, 83, 88, 99, 108, 110, 111, 117, 118, 132, 175, 181, 182, 187, 189, 194, 198, 204, 211, 212, 216, 221, 224, 229, 233, 235, 236, 237, 239, 240, 242, 244], "donc": [2, 14, 32, 33, 38, 41, 42, 50, 51, 53, 54, 56, 58, 59, 61, 69, 70, 77, 78, 84, 85, 86, 87, 88, 95, 96, 102, 108, 110, 112, 113, 119, 120, 121, 124, 131, 134, 139, 153, 154, 155, 161, 164, 174, 183, 186, 187, 188, 189, 190, 200, 203, 204, 210, 211, 212, 214, 215, 216, 221, 224, 230, 231, 235, 236, 237, 239, 240, 242, 244], "tim": [1, 4, 11, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 56, 58, 59, 71, 77, 84, 87, 88, 90, 91, 93, 99, 120, 130, 144, 146, 149, 150, 158, 159, 170, 171, 172, 176, 178, 179, 180, 183, 185, 186, 191, 192, 194, 198, 210, 211, 212, 221, 229, 232, 239, 242], "possed": [6, 50, 56, 58, 59, 69, 71, 91, 96, 99, 110, 204, 211, 221, 224, 229, 236, 242], "clock": [130, 211], "utilis": [1, 2, 4, 6, 8, 10, 14, 20, 21, 23, 27, 30, 34, 35, 38, 39, 41, 46, 50, 51, 53, 54, 56, 58, 59, 61, 62, 66, 70, 71, 74, 77, 78, 81, 85, 91, 94, 95, 99, 100, 101, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 120, 121, 124, 125, 132, 133, 134, 135, 136, 137, 144, 146, 147, 148, 150, 151, 152, 154, 159, 162, 163, 166, 168, 171, 172, 174, 175, 177, 178, 179, 180, 186, 187, 190, 193, 194, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 219, 221, 222, 225, 226, 227, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244], "prendr": [2, 14, 32, 38, 41, 51, 53, 56, 59, 62, 74, 77, 82, 85, 88, 95, 108, 147, 162, 170, 177, 187, 197, 199, 203, 204, 209, 211, 215, 221, 231, 235, 236, 239, 244], "soin": [56, 60, 115, 116, 117, 118, 211, 229], "ex\u00e9cut": [2, 4, 34, 40, 41, 56, 64, 69, 70, 71, 74, 95, 101, 102, 113, 114, 139, 151, 152, 156, 170, 171, 177, 204, 205, 211, 212, 213, 221, 224, 225, 227, 229, 231, 235, 236, 237, 239, 242], "plusieur": [1, 3, 4, 14, 30, 33, 42, 46, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 82, 93, 111, 112, 114, 115, 116, 117, 118, 121, 125, 128, 130, 132, 142, 144, 149, 150, 156, 167, 170, 177, 187, 188, 190, 192, 193, 195, 200, 202, 203, 204, 210, 211, 213, 221, 224, 233, 236, 237, 238, 241, 242, 244], "afin": [41, 56, 58, 59, 61, 62, 69, 110, 113, 114, 121, 190, 204, 211, 213, 221, 224, 229, 233, 235, 236, 237, 242, 244], "avoir": [1, 2, 14, 30, 38, 51, 56, 59, 61, 62, 64, 69, 70, 71, 74, 78, 82, 85, 94, 95, 99, 102, 110, 115, 119, 134, 159, 162, 163, 187, 195, 197, 198, 204, 205, 209, 211, 212, 221, 224, 225, 227, 229, 231, 235, 236, 237, 239, 240, 242], "fiabl": [19, 77, 85, 99, 149, 177, 211, 239], "list_exercice_1": 211, "10": [1, 2, 4, 6, 7, 10, 11, 13, 14, 16, 22, 30, 31, 33, 36, 37, 38, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 64, 68, 69, 70, 71, 74, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 180, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 224, 225, 229, 230, 231, 232, 235, 236, 237, 239, 242, 244], "k": [1, 2, 6, 7, 10, 33, 38, 39, 46, 49, 50, 51, 52, 58, 59, 61, 62, 69, 77, 79, 83, 84, 85, 87, 90, 91, 94, 95, 96, 101, 102, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 130, 131, 133, 134, 135, 137, 139, 140, 142, 144, 146, 152, 153, 159, 160, 168, 169, 171, 175, 178, 184, 188, 189, 190, 197, 198, 200, 210, 211, 212, 214, 218, 219, 221, 231, 235, 236, 244], "ipython": [51, 82, 83, 87, 94, 95, 101, 102, 104, 105, 110, 133, 142, 144, 161, 170, 171, 173, 183, 184, 185, 188, 190, 199, 200, 201, 202, 203, 207, 208, 211, 212, 214], "propos": [3, 4, 6, 17, 20, 27, 38, 41, 46, 51, 53, 56, 58, 59, 61, 62, 71, 78, 85, 88, 94, 95, 97, 99, 102, 108, 109, 110, 115, 116, 117, 118, 120, 123, 125, 147, 158, 159, 161, 163, 166, 170, 176, 179, 180, 181, 182, 186, 187, 191, 192, 194, 195, 203, 204, 205, 210, 211, 213, 221, 223, 224, 225, 229, 230, 235, 236, 237, 239, 241, 242], "command": [21, 51, 65, 68, 74, 163, 177, 187, 211, 229, 235, 236, 237, 242], "ex\u00e9cu": [7, 34, 56, 59, 69, 70, 74, 95, 104, 110, 120, 144, 152, 170, 178, 197, 203, 211, 212, 213, 215, 221, 224, 225, 227, 229, 235, 236, 237, 242], "instruct": [1, 2, 4, 16, 46, 51, 54, 65, 69, 71, 74, 83, 100, 102, 103, 113, 114, 155, 171, 175, 179, 197, 203, 205, 206, 211, 212, 213, 221, 227, 229, 231, 233, 236, 237, 239, 242], "timeit": [32, 36, 39, 40, 50, 51, 52, 53, 83, 91, 93, 110, 113, 114, 116, 123, 160, 162, 166, 167, 168, 171, 178, 185, 194, 200, 210, 211, 212, 230], "avant": [4, 12, 13, 14, 22, 30, 41, 51, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 83, 84, 91, 93, 95, 101, 110, 115, 116, 134, 165, 166, 187, 189, 197, 202, 203, 204, 205, 211, 212, 215, 221, 224, 229, 235, 236, 237, 239, 242], "retourn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 33, 36, 41, 42, 49, 50, 51, 52, 56, 58, 59, 61, 62, 64, 69, 70, 71, 79, 81, 83, 88, 89, 91, 93, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 131, 139, 144, 151, 152, 153, 162, 168, 173, 175, 177, 179, 180, 190, 192, 195, 197, 198, 208, 209, 211, 213, 215, 219, 221, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 242, 244], "r\u00e9sultat": [1, 2, 7, 14, 27, 33, 34, 36, 38, 41, 42, 50, 51, 53, 54, 59, 60, 61, 62, 64, 69, 70, 74, 79, 81, 82, 84, 87, 88, 93, 102, 103, 106, 107, 108, 111, 113, 114, 115, 119, 131, 132, 134, 140, 142, 143, 144, 147, 149, 150, 151, 152, 159, 162, 164, 166, 170, 171, 173, 177, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 211, 212, 213, 214, 219, 221, 224, 227, 231, 235, 236, 237, 239, 240, 242, 244], "lor": [41, 42, 50, 51, 54, 56, 61, 62, 69, 70, 74, 77, 83, 90, 95, 110, 125, 131, 132, 133, 134, 139, 142, 153, 166, 188, 193, 197, 203, 204, 211, 219, 221, 223, 224, 227, 229, 236, 237, 239, 240, 242, 244], "td": [15, 19, 20, 61, 86, 97, 163, 174, 179, 211], "impl\u00e9ment": [1, 2, 4, 6, 7, 10, 24, 29, 33, 42, 43, 50, 53, 54, 59, 61, 62, 71, 74, 81, 88, 91, 95, 98, 99, 108, 109, 113, 114, 115, 116, 126, 130, 131, 139, 144, 149, 153, 154, 158, 159, 162, 164, 167, 169, 172, 173, 175, 178, 183, 184, 195, 210, 211, 212, 215, 219, 221, 227, 231, 235, 236, 239, 241, 242, 246], "Vous": [2, 50, 51, 53, 61, 88, 94, 170, 183, 187, 198, 203, 204, 211, 231], "pouv": [2, 50, 53, 94, 110, 113, 114, 120, 170, 187, 198, 204, 209, 211, 231], "depuis": [2, 4, 10, 21, 33, 37, 40, 50, 51, 53, 54, 56, 61, 62, 69, 70, 71, 96, 98, 99, 119, 174, 187, 188, 193, 197, 211, 221, 224, 229, 230, 231, 232, 233, 237, 239, 240, 242], "nouveau": [4, 54, 56, 62, 69, 71, 81, 85, 134, 145, 152, 156, 157, 162, 166, 178, 187, 197, 203, 204, 211, 212, 221, 223, 229, 236, 237], "pris": [2, 37, 38, 56, 59, 61, 83, 98, 99, 183, 184, 200, 204, 205, 209, 211, 212, 227, 229, 231, 237], "m\u00eam": [1, 4, 6, 10, 14, 18, 20, 27, 30, 32, 33, 34, 36, 38, 39, 41, 42, 50, 51, 53, 58, 59, 61, 62, 64, 69, 70, 71, 74, 79, 84, 85, 87, 88, 92, 93, 95, 96, 99, 100, 102, 108, 110, 111, 113, 114, 116, 117, 118, 119, 124, 125, 131, 132, 134, 135, 136, 139, 140, 144, 145, 146, 148, 149, 152, 153, 154, 155, 157, 158, 159, 163, 165, 166, 170, 171, 172, 173, 174, 175, 177, 178, 183, 186, 187, 188, 193, 194, 195, 197, 198, 200, 202, 204, 205, 206, 210, 211, 212, 213, 215, 218, 219, 221, 224, 225, 229, 232, 233, 235, 236, 237, 239, 240, 242, 244], "cel": [1, 2, 4, 6, 10, 14, 16, 27, 30, 32, 33, 34, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 81, 82, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 101, 102, 103, 107, 108, 110, 111, 113, 114, 115, 116, 120, 121, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 159, 160, 161, 163, 166, 167, 170, 171, 174, 175, 178, 179, 180, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 202, 203, 204, 205, 208, 209, 211, 212, 213, 214, 221, 223, 224, 225, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 244], "lorsqu": [1, 2, 4, 9, 14, 27, 33, 38, 39, 41, 42, 50, 51, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 80, 81, 82, 88, 89, 90, 94, 99, 100, 102, 108, 110, 112, 113, 124, 130, 131, 132, 133, 134, 148, 152, 153, 155, 157, 159, 166, 171, 172, 173, 175, 183, 184, 188, 193, 194, 195, 197, 203, 205, 209, 211, 212, 213, 214, 219, 221, 224, 225, 227, 231, 233, 235, 236, 237, 239, 240, 242, 244], "1000": [7, 9, 10, 30, 31, 40, 46, 50, 51, 53, 54, 56, 69, 77, 78, 85, 88, 93, 99, 101, 107, 110, 112, 113, 114, 115, 116, 123, 124, 131, 132, 133, 134, 135, 137, 158, 159, 164, 167, 168, 170, 175, 186, 193, 197, 203, 204, 211, 212, 229, 235, 236, 237], "taill": [1, 9, 10, 12, 13, 41, 50, 51, 52, 53, 59, 61, 69, 74, 87, 88, 94, 96, 108, 112, 113, 114, 117, 118, 119, 162, 164, 168, 175, 178, 187, 188, 189, 200, 211, 212, 213, 214, 215, 221, 229, 235, 236, 237, 240, 242], "100": [27, 30, 31, 32, 33, 36, 39, 40, 50, 51, 53, 54, 56, 66, 77, 78, 83, 84, 85, 86, 87, 88, 91, 95, 99, 101, 102, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 144, 146, 152, 156, 158, 159, 160, 164, 166, 168, 169, 171, 173, 174, 178, 180, 186, 193, 195, 196, 200, 210, 211, 212, 215, 221, 229, 230, 235, 236, 242], "100000": [31, 32, 50, 51, 52, 85, 88, 101, 106, 107, 136, 137, 158, 159, 170, 175, 211, 212, 237, 239, 242], "cec": [7, 12, 13, 39, 41, 52, 56, 58, 59, 62, 69, 70, 74, 77, 83, 100, 102, 103, 105, 121, 123, 132, 133, 135, 153, 161, 175, 203, 211, 212, 215, 221, 224, 227, 229, 235, 236, 237, 244], "correspond": [1, 4, 14, 50, 51, 56, 62, 69, 70, 71, 77, 78, 83, 85, 99, 102, 103, 108, 110, 111, 113, 114, 131, 135, 150, 173, 179, 187, 188, 203, 211, 213, 215, 221, 224, 225, 229, 232, 233, 235, 236, 237, 239, 244], "deux": [1, 4, 6, 7, 9, 10, 14, 17, 18, 20, 27, 30, 33, 36, 38, 39, 40, 41, 42, 46, 48, 50, 51, 53, 54, 56, 58, 59, 60, 61, 69, 70, 71, 74, 77, 78, 79, 82, 83, 84, 85, 88, 91, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 125, 130, 132, 133, 134, 136, 137, 138, 140, 142, 144, 145, 147, 148, 150, 153, 154, 155, 156, 158, 159, 161, 163, 164, 168, 171, 173, 176, 177, 178, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 223, 224, 227, 229, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244], "pr\u00e9cis": [1, 4, 27, 40, 50, 51, 52, 56, 69, 70, 71, 74, 82, 110, 112, 115, 116, 120, 130, 137, 143, 159, 164, 193, 204, 205, 211, 221, 224, 225, 229, 233, 235, 236, 237, 239, 240, 242, 244], "d\u00e9pendent": [58, 59, 74, 82, 211, 235], "nombr": [1, 2, 4, 6, 7, 9, 10, 12, 17, 33, 34, 35, 41, 42, 49, 51, 52, 53, 56, 58, 59, 61, 62, 64, 69, 71, 74, 78, 80, 81, 83, 85, 87, 88, 89, 90, 91, 93, 95, 96, 98, 99, 101, 102, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 119, 121, 123, 125, 131, 132, 133, 134, 137, 143, 144, 146, 150, 152, 154, 158, 159, 162, 163, 165, 166, 167, 168, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 193, 194, 197, 198, 200, 202, 203, 205, 206, 209, 211, 212, 213, 214, 215, 219, 221, 224, 227, 229, 231, 232, 233, 234, 237, 239, 240, 242, 244], "possibl": [1, 2, 4, 6, 7, 17, 30, 33, 37, 39, 41, 42, 50, 51, 54, 56, 58, 59, 61, 62, 69, 70, 71, 74, 78, 79, 80, 83, 84, 85, 86, 94, 95, 99, 103, 110, 116, 117, 118, 119, 123, 125, 132, 134, 147, 156, 160, 163, 164, 166, 175, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 197, 203, 204, 205, 209, 210, 211, 212, 215, 221, 224, 225, 227, 229, 231, 233, 236, 237, 239, 240, 242, 244], "d\u00e9pendr": [58, 146, 211], "26": [0, 46, 50, 51, 53, 54, 55, 56, 69, 77, 84, 85, 88, 89, 94, 95, 96, 97, 99, 101, 102, 108, 110, 116, 117, 118, 120, 124, 130, 134, 135, 137, 139, 141, 143, 144, 149, 150, 152, 162, 163, 171, 175, 178, 183, 184, 193, 197, 198, 200, 203, 210, 211, 212, 219, 221, 225, 232], "maximal": [7, 50, 56, 61, 83, 103, 110, 146, 175, 183, 192, 198, 200, 211, 212, 242], "to": [0, 1, 4, 6, 10, 11, 13, 16, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 53, 54, 56, 67, 68, 71, 75, 85, 95, 99, 104, 111, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 163, 165, 171, 185, 191, 192, 198, 211, 221, 224, 225, 229, 235, 236, 237, 239, 244], "tea": [94, 211], "ted": 211, "ten": [56, 70, 82, 95, 99, 110, 114, 121, 158, 210, 211, 221, 235, 237], "inn": 211, "noeud": [7, 10, 59, 78, 84, 87, 94, 95, 108, 125, 152, 154, 183, 184, 187, 211, 212], "final": [1, 51, 52, 54, 56, 58, 69, 77, 91, 99, 108, 111, 112, 131, 139, 142, 149, 156, 171, 174, 175, 211, 221, 227, 235, 236, 239, 242, 244], "from": [2, 4, 11, 12, 13, 26, 27, 28, 30, 32, 35, 39, 40, 43, 44, 46, 50, 51, 53, 54, 56, 62, 68, 69, 70, 75, 78, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 99, 101, 106, 107, 110, 112, 115, 117, 118, 119, 120, 122, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 214, 218, 221, 225, 230, 231, 235, 237, 239, 240, 244, 246], "display": [11, 12, 13, 30, 51, 82, 83, 87, 94, 95, 110, 133, 142, 144, 161, 170, 171, 173, 183, 184, 188, 190, 199, 200, 201, 202, 207, 208, 211, 212, 214], "imag": [10, 11, 12, 13, 21, 46, 51, 59, 62, 83, 94, 95, 106, 107, 110, 133, 142, 144, 161, 163, 171, 173, 183, 184, 188, 190, 199, 200, 201, 202, 204, 207, 208, 211, 212, 214, 229, 242, 244], "wiki_tr": 211, "png": [11, 51, 62, 83, 94, 95, 110, 133, 142, 144, 161, 173, 183, 184, 188, 190, 199, 200, 201, 202, 203, 207, 208, 211, 212, 214, 244], "vrai": [14, 16, 41, 50, 56, 62, 69, 77, 81, 83, 85, 86, 91, 94, 95, 100, 110, 131, 132, 134, 137, 148, 152, 153, 164, 168, 186, 197, 200, 204, 211, 221, 229, 235, 236, 237, 240], "conserv": [2, 4, 34, 39, 50, 51, 56, 59, 70, 71, 79, 91, 94, 108, 113, 148, 154, 175, 186, 190, 203, 211, 213, 214, 221, 230, 231, 235, 236, 237, 240], "derni": [2, 14, 27, 37, 38, 42, 46, 51, 54, 56, 59, 61, 62, 69, 70, 74, 83, 85, 87, 89, 91, 94, 95, 96, 99, 100, 101, 104, 105, 108, 110, 115, 116, 117, 118, 142, 154, 162, 167, 187, 190, 195, 197, 198, 203, 211, 212, 213, 221, 224, 225, 229, 231, 235, 236, 237, 239, 241, 242], "obtenu": [4, 27, 42, 50, 56, 59, 62, 69, 70, 71, 83, 86, 93, 99, 110, 114, 132, 142, 161, 162, 200, 211, 221, 237, 239], "parcour": [1, 10, 30, 33, 42, 51, 59, 61, 69, 77, 83, 87, 89, 91, 96, 100, 101, 108, 123, 133, 154, 166, 175, 193, 194, 197, 200, 211, 212, 213, 221, 224, 235, 236, 242], "chemin": [1, 4, 9, 10, 15, 19, 42, 58, 59, 71, 78, 79, 84, 94, 108, 125, 152, 171, 183, 184, 200, 203, 211, 212, 225, 229, 239], "va": [32, 42, 46, 50, 56, 61, 62, 69, 74, 89, 95, 96, 99, 100, 110, 112, 113, 115, 145, 149, 161, 187, 190, 194, 203, 204, 211, 214, 221, 227, 229, 235, 236, 237, 239, 242], "racin": [50, 84, 152, 211, 212, 213, 235, 236, 239], "jusqu": [2, 18, 30, 33, 42, 55, 56, 58, 59, 61, 69, 70, 74, 77, 81, 85, 87, 88, 95, 101, 102, 110, 131, 135, 152, 153, 189, 200, 211, 216, 221, 224, 225, 229, 230, 231, 235, 236, 237, 242], "feuill": [19, 23, 30, 69, 84, 132, 152, 211, 237], "wiki_trie2": [211, 212], "class": [1, 3, 11, 15, 19, 20, 27, 41, 46, 50, 51, 56, 58, 66, 74, 85, 100, 108, 128, 131, 133, 134, 136, 137, 139, 140, 147, 148, 149, 152, 162, 163, 166, 174, 175, 183, 184, 185, 187, 188, 204, 211, 212, 213, 227, 230, 232, 233, 235, 236, 237, 239, 240, 242, 244, 245], "possibil": [14, 30, 38, 50, 59, 61, 62, 69, 94, 121, 132, 157, 193, 211, 221, 229, 235, 236, 239], "indispens": [33, 69, 177, 193, 204, 211, 221, 227, 235], "8": [1, 2, 26, 27, 31, 33, 40, 41, 42, 46, 50, 51, 52, 53, 54, 55, 56, 62, 69, 71, 74, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 183, 184, 185, 186, 193, 194, 200, 202, 206, 210, 211, 213, 214, 215, 216, 219, 221, 224, 225, 227, 229, 231, 232, 233, 235, 236, 237, 242, 244], "\u00e9crir": [2, 4, 33, 34, 38, 41, 51, 53, 55, 61, 62, 66, 71, 74, 77, 83, 90, 91, 94, 95, 104, 109, 110, 115, 116, 117, 118, 124, 139, 153, 157, 158, 162, 164, 167, 175, 176, 179, 187, 193, 194, 195, 197, 199, 200, 203, 204, 205, 206, 209, 211, 212, 213, 214, 215, 221, 225, 229, 231, 233, 235, 236, 237, 239, 240, 242, 244], "9": [2, 9, 12, 26, 30, 31, 33, 41, 42, 46, 50, 51, 53, 54, 55, 56, 59, 61, 62, 69, 71, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 180, 183, 184, 186, 188, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 224, 225, 230, 231, 232, 235, 236, 242, 244], "rest": [4, 14, 30, 38, 39, 42, 53, 56, 59, 62, 69, 70, 71, 80, 84, 88, 89, 91, 95, 96, 99, 102, 103, 110, 115, 123, 131, 134, 135, 142, 144, 145, 151, 154, 165, 166, 175, 181, 182, 183, 197, 200, 202, 203, 204, 211, 212, 221, 224, 227, 229, 235, 236, 237, 240, 242], "N": [1, 41, 42, 44, 50, 51, 53, 55, 56, 58, 59, 62, 70, 77, 78, 81, 84, 85, 86, 87, 94, 101, 102, 108, 115, 116, 117, 118, 119, 123, 130, 131, 135, 158, 159, 160, 164, 176, 179, 180, 187, 188, 189, 191, 192, 198, 200, 204, 205, 212, 215, 219, 229, 235], "_": [27, 30, 40, 42, 46, 50, 62, 70, 77, 81, 84, 95, 111, 112, 113, 114, 115, 116, 130, 131, 132, 137, 139, 140, 142, 164, 181, 182, 184, 186, 203, 210, 212, 223, 244], "print": [4, 6, 11, 26, 27, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 62, 65, 68, 70, 74, 77, 79, 80, 81, 82, 83, 84, 87, 89, 90, 91, 94, 95, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 116, 117, 118, 119, 120, 137, 142, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 165, 166, 168, 170, 171, 172, 174, 179, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 210, 212, 213, 214, 215, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 237, 239, 240, 242, 244], "len": [2, 10, 30, 31, 33, 38, 40, 41, 42, 46, 50, 51, 69, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 91, 92, 94, 95, 96, 100, 101, 102, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 124, 132, 133, 134, 135, 137, 139, 141, 145, 148, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 177, 178, 184, 186, 188, 194, 195, 196, 197, 198, 202, 203, 212, 213, 214, 215, 216, 218, 219, 221, 227, 229, 231, 233, 235, 236, 237, 239, 244], "debut": [87, 172, 212, 236, 244], "perf_count": [87, 91, 120, 130, 144, 149, 150, 158, 159, 178, 186, 194, 212, 221], "fin": [1, 2, 4, 10, 14, 20, 33, 40, 50, 51, 52, 56, 60, 61, 69, 70, 71, 74, 77, 81, 82, 87, 88, 89, 93, 95, 104, 108, 110, 115, 116, 135, 144, 153, 154, 158, 159, 160, 164, 165, 166, 172, 173, 205, 206, 212, 213, 214, 221, 229, 231, 236, 237, 239, 242, 244], "2651422999999795": 212, "Avec": [30, 33, 38, 50, 54, 55, 56, 69, 74, 95, 115, 124, 132, 136, 142, 163, 171, 176, 181, 182, 189, 193, 203, 204, 212, 213, 229, 233, 235, 236, 244], "17": [33, 35, 41, 42, 46, 50, 51, 53, 54, 77, 82, 84, 85, 88, 91, 93, 94, 95, 99, 101, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 130, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 149, 150, 156, 159, 160, 163, 169, 171, 172, 175, 176, 180, 183, 184, 186, 187, 193, 200, 203, 206, 208, 212, 213, 221, 225, 229, 232, 235, 236], "208": [99, 150, 212], "ms": [50, 51, 52, 77, 83, 91, 93, 110, 113, 114, 116, 123, 132, 134, 163, 166, 168, 178, 185, 194, 200, 212], "per": [11, 30, 40, 50, 51, 52, 53, 56, 83, 91, 93, 110, 113, 114, 116, 123, 160, 166, 167, 168, 178, 185, 194, 200, 204, 210, 212], "loop": [11, 50, 51, 52, 53, 64, 83, 84, 88, 91, 92, 93, 110, 113, 114, 116, 123, 160, 166, 167, 168, 178, 185, 194, 200, 210, 212, 242], "mean": [1, 50, 51, 52, 53, 54, 77, 83, 85, 86, 91, 93, 99, 112, 113, 114, 115, 116, 117, 118, 119, 123, 133, 136, 139, 140, 141, 142, 147, 149, 160, 166, 167, 168, 172, 178, 185, 194, 200, 210, 212, 215, 221], "std": [50, 51, 52, 53, 83, 91, 93, 99, 113, 114, 116, 123, 130, 136, 138, 140, 150, 160, 166, 167, 168, 178, 185, 194, 200, 210, 212, 242], "dev": [0, 2, 19, 50, 51, 52, 56, 65, 71, 83, 91, 93, 94, 112, 113, 114, 116, 123, 160, 166, 167, 168, 178, 185, 194, 200, 204, 210, 212, 229, 236, 239], "of": [1, 4, 6, 7, 10, 11, 13, 22, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 50, 51, 52, 53, 54, 56, 58, 59, 68, 71, 75, 83, 85, 91, 93, 99, 102, 104, 105, 110, 113, 114, 116, 120, 123, 131, 134, 137, 139, 140, 146, 150, 160, 163, 166, 167, 168, 170, 171, 172, 178, 183, 185, 186, 191, 192, 194, 198, 200, 210, 212, 221, 225, 229, 231, 235, 239, 240], "run": [11, 50, 51, 52, 53, 83, 91, 93, 113, 114, 116, 123, 160, 166, 167, 168, 178, 185, 194, 200, 210, 212, 225, 229, 242], "each": [1, 10, 11, 30, 50, 51, 52, 53, 83, 85, 91, 93, 113, 114, 116, 123, 134, 139, 146, 160, 166, 167, 168, 178, 185, 191, 192, 194, 200, 210, 212, 229], "dicho": [173, 212], "x": [1, 2, 4, 8, 9, 10, 11, 27, 33, 34, 39, 41, 42, 50, 51, 53, 56, 58, 59, 61, 62, 69, 70, 71, 77, 78, 83, 85, 87, 91, 94, 99, 100, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 125, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 159, 160, 162, 167, 168, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 193, 197, 199, 200, 203, 204, 205, 207, 208, 210, 212, 213, 214, 221, 224, 229, 231, 235, 236, 237, 239, 242, 244], "b": [1, 2, 4, 8, 10, 11, 27, 30, 34, 35, 37, 39, 40, 41, 50, 51, 55, 56, 59, 65, 69, 70, 71, 74, 77, 79, 80, 81, 85, 86, 87, 88, 89, 94, 95, 101, 102, 103, 104, 108, 111, 112, 117, 118, 121, 122, 131, 132, 140, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 162, 165, 173, 175, 179, 187, 188, 190, 191, 192, 197, 198, 199, 200, 204, 210, 212, 213, 214, 215, 216, 219, 221, 224, 229, 230, 231, 235, 236, 237, 239, 240, 242, 244], "whil": [2, 30, 31, 33, 40, 42, 59, 68, 77, 78, 79, 82, 84, 88, 89, 90, 91, 93, 94, 95, 100, 101, 102, 103, 107, 108, 110, 115, 116, 117, 124, 153, 156, 159, 160, 161, 162, 163, 164, 166, 168, 169, 171, 173, 177, 188, 190, 194, 200, 202, 212, 213, 214, 216, 218, 221, 231, 236, 242, 244], "if": [1, 2, 4, 11, 27, 30, 31, 33, 35, 38, 39, 40, 41, 42, 46, 51, 59, 64, 65, 68, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 149, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 210, 212, 213, 214, 215, 216, 218, 219, 221, 224, 225, 229, 231, 235, 236, 237, 239, 240, 242, 244], "elif": [2, 4, 33, 69, 70, 71, 83, 84, 87, 103, 108, 111, 113, 114, 117, 118, 120, 139, 141, 151, 153, 156, 168, 173, 202, 212, 213, 214, 216, 221, 229, 231, 235], "else": [2, 4, 27, 30, 31, 33, 39, 40, 46, 69, 70, 71, 74, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 100, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 131, 135, 137, 139, 140, 149, 151, 152, 153, 154, 155, 156, 160, 162, 164, 167, 168, 171, 173, 175, 177, 184, 186, 188, 190, 193, 194, 195, 196, 197, 200, 202, 205, 210, 212, 213, 214, 215, 216, 219, 221, 224, 225, 229, 231, 236, 237, 239, 240], "sort": [1, 2, 4, 9, 11, 14, 31, 38, 50, 53, 54, 56, 58, 59, 61, 62, 68, 69, 71, 74, 78, 81, 83, 85, 86, 88, 91, 94, 95, 100, 102, 108, 110, 111, 113, 114, 117, 118, 119, 125, 131, 132, 134, 137, 142, 146, 151, 152, 155, 159, 164, 171, 178, 184, 187, 188, 189, 193, 197, 200, 204, 206, 212, 214, 215, 219, 221, 224, 227, 229, 231, 233, 235, 236, 237, 239, 242, 245], "06771000000003369": 212, "31": [0, 19, 23, 36, 46, 50, 51, 53, 54, 56, 70, 77, 93, 95, 99, 102, 108, 116, 119, 120, 130, 131, 134, 139, 142, 146, 149, 150, 152, 163, 170, 171, 183, 184, 197, 200, 204, 212, 213, 221, 232, 235], "21": [0, 1, 30, 31, 36, 46, 50, 51, 53, 54, 77, 79, 84, 85, 88, 93, 97, 102, 104, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 130, 132, 134, 137, 140, 141, 142, 147, 148, 149, 150, 159, 160, 163, 169, 170, 171, 175, 180, 183, 184, 186, 193, 197, 200, 203, 206, 212, 213, 232, 235, 244], "math": [1, 14, 30, 41, 50, 51, 99, 100, 101, 106, 107, 117, 122, 132, 133, 134, 157, 164, 166, 178, 184, 187, 197, 199, 200, 203, 204, 206, 212, 214, 221, 225, 235, 239, 242], "tolook": 212, "ds": 212, "dd": [6, 49, 85, 86, 212], "ratio": [9, 12, 31, 56, 70, 77, 85, 91, 115, 116, 134, 147, 148, 164, 186, 212], "max": [1, 6, 10, 31, 49, 50, 51, 53, 54, 56, 62, 69, 70, 77, 81, 82, 83, 85, 87, 89, 91, 95, 112, 115, 116, 118, 123, 132, 133, 136, 140, 142, 144, 145, 149, 151, 152, 154, 156, 164, 168, 175, 183, 184, 190, 194, 200, 212, 213, 221, 235, 236, 244], "th\u00e9oriqu": [1, 14, 56, 70, 77, 152, 212], "30": [0, 30, 36, 42, 50, 51, 53, 54, 56, 77, 84, 85, 95, 96, 99, 102, 108, 110, 111, 119, 120, 130, 131, 133, 134, 135, 136, 139, 141, 149, 150, 152, 155, 160, 163, 169, 171, 183, 184, 185, 197, 203, 204, 210, 212, 213, 229, 232, 236, 244], "340000032243552e": 212, "05": [10, 27, 36, 39, 41, 50, 51, 56, 69, 77, 85, 88, 99, 131, 132, 134, 135, 150, 156, 159, 166, 212, 232, 244], "00010930000007647322": 212, "1003433318879937": 212, "00016539999978704145": 212, "00020910000012008823": 212, "5017166594399687": 212, "0016119000001708628": 212, "0002951000001303328": 212, "3447777295997914": 212, "025103800000124465": 212, "0005895999997846957": 212, "085832971998425": 212, "4739787999997134": 212, "0006374999998115527": 212, "200": [9, 12, 51, 56, 77, 88, 95, 116, 117, 118, 130, 132, 141, 150, 160, 163, 171, 173, 175, 178, 186, 201, 202, 212, 229], "68666377598748": 212, "chos": [2, 14, 21, 39, 41, 42, 51, 56, 60, 61, 62, 69, 74, 87, 88, 89, 94, 95, 99, 100, 101, 103, 111, 120, 124, 131, 153, 157, 166, 171, 172, 175, 195, 200, 202, 203, 204, 205, 212, 221, 223, 224, 229, 232, 235, 236, 237, 238, 239, 242], "long": [14, 31, 32, 34, 46, 51, 53, 56, 59, 61, 69, 70, 83, 87, 89, 93, 94, 95, 102, 133, 149, 152, 160, 162, 166, 171, 175, 178, 188, 194, 203, 209, 212, 229, 236, 237, 242], "fals": [2, 3, 4, 7, 10, 11, 12, 13, 27, 30, 37, 38, 40, 50, 51, 53, 54, 67, 69, 71, 78, 81, 82, 84, 85, 89, 91, 96, 99, 100, 119, 120, 131, 132, 134, 136, 137, 140, 142, 144, 147, 148, 150, 154, 155, 156, 161, 163, 164, 171, 174, 177, 193, 194, 198, 212, 221, 224, 229, 235, 236, 242], "Soit": [30, 42, 51, 59, 95, 113, 114, 161, 183, 184, 187, 212], "o": [1, 2, 6, 11, 35, 39, 41, 42, 46, 49, 51, 53, 59, 61, 67, 81, 83, 87, 88, 89, 92, 93, 94, 100, 101, 102, 108, 111, 113, 114, 117, 118, 120, 123, 133, 139, 150, 159, 165, 168, 173, 178, 181, 182, 186, 187, 198, 200, 204, 210, 212, 214, 216, 219, 221, 229, 235, 236, 240], "ln": [1, 41, 50, 51, 56, 61, 62, 83, 85, 87, 88, 100, 108, 113, 114, 159, 168, 178, 212, 221], "pratiqu": [38, 50, 56, 61, 74, 77, 94, 142, 212, 213, 227, 229, 230, 232, 235, 236, 238, 244], "devr": [38, 42, 50, 56, 61, 62, 74, 87, 95, 103, 130, 160, 210, 212, 215, 221, 233, 235, 236, 242], "sensibl": [14, 56, 61, 131, 132, 144, 146, 147, 212], "\u00e9gal": [2, 4, 6, 10, 14, 33, 41, 42, 46, 49, 50, 51, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 78, 81, 83, 84, 85, 86, 94, 95, 98, 99, 104, 110, 111, 112, 113, 114, 120, 121, 123, 124, 131, 132, 134, 135, 136, 137, 144, 147, 148, 153, 154, 157, 164, 166, 168, 170, 171, 173, 174, 175, 179, 180, 181, 182, 189, 193, 198, 200, 204, 212, 213, 221, 227, 229, 230, 231, 235, 236, 237, 239, 242, 244], "facteur": [14, 56, 149, 176, 212], "multipl": [1, 6, 7, 9, 14, 41, 49, 50, 56, 59, 61, 64, 69, 85, 96, 100, 102, 108, 110, 111, 164, 200, 212, 223, 235], "pres": [10, 38, 50, 54, 61, 110, 118, 123, 132, 133, 141, 147, 148, 160, 162, 168, 180, 199, 203, 210, 212, 221, 224, 229, 235, 236], "pr\u00e9ced": [69, 83, 212, 221, 223, 235, 236, 237, 244], "compt": [2, 4, 5, 9, 14, 33, 37, 41, 51, 56, 58, 59, 60, 61, 70, 71, 81, 82, 83, 85, 95, 96, 99, 101, 102, 110, 111, 113, 114, 115, 116, 119, 120, 121, 147, 148, 154, 164, 167, 170, 175, 177, 193, 197, 203, 204, 205, 209, 212, 221, 227, 230, 231, 235, 236, 237, 239, 242, 244], "devient": [33, 46, 56, 59, 60, 62, 77, 83, 102, 124, 175, 186, 212, 221, 229, 235, 236, 239, 240, 242, 244], "marginal": 212, "n\u00e9anmoin": [36, 56, 58, 60, 62, 69, 74, 91, 95, 99, 123, 134, 142, 150, 151, 170, 195, 212, 221, 224, 229, 230, 235, 236, 239, 240], "pourquoi": [2, 6, 14, 33, 41, 50, 54, 56, 59, 69, 77, 81, 83, 85, 88, 94, 95, 102, 104, 105, 115, 116, 131, 133, 134, 140, 160, 166, 175, 193, 197, 203, 205, 212, 218, 221, 224, 229, 235, 236, 237, 239, 242, 244], "toujour": [1, 2, 4, 6, 14, 27, 33, 39, 42, 50, 51, 53, 56, 58, 59, 60, 62, 64, 69, 70, 71, 74, 77, 79, 81, 84, 85, 87, 88, 95, 100, 103, 110, 120, 121, 130, 132, 133, 137, 140, 152, 154, 155, 157, 160, 166, 170, 173, 175, 183, 186, 193, 195, 197, 198, 203, 204, 209, 210, 212, 219, 221, 223, 224, 225, 229, 231, 235, 236, 237, 239, 242, 244], "build_tr": [87, 212], "r": [2, 4, 10, 22, 27, 30, 33, 39, 40, 42, 46, 50, 51, 54, 56, 58, 61, 62, 67, 68, 69, 70, 71, 77, 81, 83, 84, 85, 86, 87, 88, 90, 93, 94, 96, 99, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 134, 138, 144, 146, 149, 150, 151, 161, 163, 164, 166, 171, 172, 181, 182, 187, 188, 190, 191, 192, 198, 203, 204, 206, 207, 208, 210, 212, 213, 219, 221, 225, 229, 231, 233, 235, 237, 239, 240, 242, 244], "not": [2, 3, 4, 11, 15, 19, 20, 27, 30, 33, 39, 41, 50, 51, 56, 58, 60, 61, 62, 66, 68, 69, 75, 77, 78, 81, 84, 85, 87, 89, 91, 95, 99, 101, 102, 103, 105, 120, 123, 124, 127, 128, 131, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 156, 162, 171, 176, 179, 183, 184, 187, 188, 189, 191, 192, 194, 199, 200, 203, 204, 210, 212, 214, 217, 219, 220, 221, 224, 225, 229, 231, 235, 236, 237, 240, 242, 244], "aaa": [51, 80, 94, 104, 212, 244], "aba": 212, "aab": 212, "ba": [204, 212], "bbb": [80, 212], "bba": 212, "bab": 212, "39": [38, 46, 50, 51, 53, 54, 77, 81, 86, 87, 91, 94, 95, 96, 99, 101, 102, 103, 104, 105, 108, 110, 111, 116, 117, 118, 122, 123, 124, 130, 131, 132, 134, 144, 145, 147, 149, 151, 157, 162, 163, 165, 166, 170, 171, 172, 174, 175, 176, 183, 184, 185, 186, 187, 188, 197, 198, 203, 204, 209, 210, 212, 213, 216, 219], "11": [2, 4, 11, 19, 23, 26, 30, 31, 36, 41, 42, 46, 50, 51, 52, 54, 56, 61, 62, 67, 68, 69, 71, 74, 77, 78, 79, 81, 83, 85, 86, 87, 88, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 155, 156, 160, 163, 164, 168, 169, 170, 171, 175, 176, 178, 180, 183, 184, 186, 188, 198, 200, 203, 204, 206, 210, 212, 213, 216, 221, 224, 225, 231, 232, 235, 236], "lookup": [77, 212], "tru": [2, 4, 10, 11, 26, 27, 30, 31, 38, 40, 46, 50, 51, 53, 54, 56, 65, 67, 69, 71, 77, 78, 81, 82, 84, 85, 88, 89, 91, 94, 95, 96, 99, 100, 110, 117, 118, 119, 120, 131, 132, 134, 136, 137, 139, 140, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 159, 161, 164, 168, 171, 174, 177, 184, 190, 193, 194, 197, 198, 202, 203, 204, 210, 212, 213, 221, 224, 227, 229, 236, 237, 242], "bcc": 212, "Pour": [2, 4, 12, 13, 14, 16, 27, 30, 33, 38, 39, 40, 41, 42, 50, 51, 52, 53, 58, 59, 61, 62, 64, 69, 71, 74, 77, 78, 79, 81, 83, 84, 85, 89, 91, 94, 95, 96, 99, 100, 101, 102, 105, 108, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 130, 131, 133, 137, 144, 146, 147, 149, 150, 153, 156, 159, 160, 165, 166, 170, 172, 174, 175, 178, 179, 181, 182, 183, 188, 190, 191, 192, 193, 194, 195, 197, 198, 200, 202, 203, 204, 205, 206, 209, 212, 213, 215, 221, 224, 225, 229, 231, 233, 235, 236, 237, 239, 240, 242, 244], "illustr": [2, 50, 51, 56, 59, 61, 130, 132, 133, 135, 173, 197, 212, 221, 229, 231, 236, 237, 239, 244], "affich": [1, 2, 4, 7, 11, 41, 50, 51, 56, 69, 70, 71, 74, 81, 83, 84, 95, 102, 103, 111, 120, 141, 152, 164, 193, 203, 204, 205, 212, 213, 214, 221, 224, 227, 229, 231, 232, 233, 235, 236, 237, 239, 242, 244], "12": [23, 27, 30, 35, 36, 41, 42, 46, 50, 51, 52, 53, 54, 56, 61, 62, 69, 77, 79, 81, 83, 84, 85, 86, 88, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 149, 150, 155, 156, 159, 160, 163, 164, 167, 168, 169, 170, 171, 174, 175, 176, 178, 180, 183, 184, 186, 188, 194, 203, 204, 206, 208, 212, 213, 221, 232, 235, 236, 242], "print_tr": 212, "niveau": [39, 46, 53, 56, 77, 84, 88, 99, 133, 134, 171, 212, 221, 229, 230, 235, 237, 242], "v": [2, 9, 46, 50, 51, 56, 59, 62, 70, 78, 87, 91, 94, 95, 101, 103, 111, 114, 115, 121, 124, 130, 132, 152, 153, 154, 168, 173, 175, 178, 179, 180, 183, 184, 187, 188, 189, 190, 195, 196, 197, 198, 204, 210, 212, 213, 214, 215, 218, 221, 224, 229, 231, 235, 244], "sorted": [1, 2, 84, 94, 95, 112, 136, 139, 149, 159, 170, 178, 203, 210, 212, 213, 219, 231, 235], "item": [2, 11, 69, 87, 91, 94, 95, 101, 102, 103, 108, 111, 123, 124, 130, 149, 162, 163, 166, 167, 171, 172, 174, 175, 178, 184, 197, 210, 212, 219, 221, 230, 231, 236], "inconv\u00e9nient": [59, 62, 91, 157, 166, 194, 212, 221, 229, 242], "si": [1, 2, 4, 6, 7, 8, 9, 10, 14, 19, 27, 32, 33, 34, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 79, 80, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 98, 99, 100, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 131, 132, 134, 136, 137, 140, 142, 144, 145, 147, 148, 150, 152, 153, 155, 159, 164, 166, 171, 175, 176, 177, 179, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 200, 202, 203, 204, 205, 206, 212, 213, 214, 215, 221, 224, 225, 227, 229, 231, 233, 235, 236, 237, 239, 240, 242, 244], "aa": [50, 80, 204, 212, 216, 230, 244], "obtient": [1, 6, 49, 50, 56, 59, 79, 108, 112, 113, 114, 115, 116, 120, 134, 144, 150, 198, 212, 221, 232, 235], "13": [36, 41, 42, 43, 46, 50, 51, 52, 53, 54, 56, 61, 70, 71, 77, 79, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 99, 101, 102, 103, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 144, 146, 149, 150, 153, 155, 156, 159, 160, 163, 168, 169, 170, 171, 174, 175, 178, 180, 183, 184, 186, 188, 200, 204, 206, 210, 212, 213, 221, 225, 229, 232, 235], "14": [30, 33, 36, 41, 42, 46, 50, 51, 52, 53, 54, 56, 61, 70, 77, 78, 79, 81, 84, 85, 87, 88, 91, 94, 95, 97, 99, 101, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 147, 149, 150, 155, 156, 159, 160, 163, 167, 168, 169, 171, 175, 176, 178, 180, 183, 184, 186, 188, 189, 194, 197, 200, 204, 205, 206, 208, 212, 213, 232, 235, 239, 244], "\u00e9vit": [2, 14, 38, 42, 52, 53, 54, 56, 59, 64, 69, 83, 84, 89, 91, 94, 95, 99, 100, 102, 108, 110, 112, 115, 117, 118, 131, 134, 156, 161, 179, 183, 190, 193, 197, 200, 204, 208, 212, 221, 229, 231, 232, 233, 235, 236, 237, 239, 240, 242, 244], "caracter": [51, 54, 61, 62, 71, 74, 80, 81, 94, 96, 99, 100, 101, 102, 104, 110, 151, 165, 166, 187, 193, 197, 203, 204, 205, 206, 209, 210, 212, 213, 219, 221, 224, 225, 229, 234, 235, 237, 239, 240, 242], "entier": [1, 4, 6, 33, 38, 50, 51, 53, 54, 59, 62, 64, 69, 71, 74, 77, 78, 82, 83, 87, 88, 100, 102, 108, 113, 114, 152, 159, 173, 190, 191, 192, 197, 205, 206, 212, 221, 223, 224, 229, 230, 232, 234, 235, 237], "15": [1, 11, 27, 33, 41, 42, 50, 51, 53, 54, 56, 77, 81, 83, 84, 85, 87, 88, 91, 93, 94, 95, 97, 99, 101, 102, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 156, 159, 160, 163, 167, 169, 170, 171, 174, 175, 178, 180, 183, 184, 186, 187, 188, 193, 197, 200, 204, 206, 208, 210, 212, 213, 214, 221, 229, 232, 244, 246], "16": [2, 4, 30, 41, 42, 46, 50, 51, 52, 53, 54, 56, 69, 71, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 97, 99, 101, 102, 103, 105, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 153, 156, 159, 160, 162, 163, 169, 170, 171, 175, 180, 183, 184, 186, 193, 194, 200, 202, 203, 204, 206, 208, 212, 213, 214, 221, 231, 232, 233, 235, 236], "distinct": [11, 34, 51, 56, 62, 78, 84, 111, 113, 114, 151, 159, 178, 212, 230, 236], "major": [2, 53, 59, 99, 149, 175, 200, 212, 223], "reprend": [51, 56, 59, 80, 87, 89, 131, 133, 153, 170, 195, 212, 221, 224, 229, 235, 236], "ajout": [0, 2, 4, 7, 9, 10, 33, 41, 46, 50, 51, 53, 56, 59, 62, 69, 70, 71, 74, 81, 83, 85, 88, 95, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 113, 115, 116, 117, 118, 120, 122, 133, 139, 142, 150, 151, 158, 163, 166, 171, 173, 175, 178, 193, 194, 196, 198, 202, 203, 205, 206, 210, 212, 213, 222, 223, 224, 225, 229, 232, 236, 240, 242, 244], "associ": [1, 2, 3, 10, 14, 30, 51, 53, 56, 59, 61, 62, 69, 70, 74, 78, 87, 91, 99, 102, 111, 117, 118, 134, 139, 171, 175, 183, 184, 188, 197, 200, 206, 212, 215, 221, 224, 230, 231, 232, 235, 236, 237, 239, 242, 244], "lieu": [32, 33, 41, 51, 56, 59, 70, 79, 84, 123, 130, 153, 193, 212, 221, 229, 235, 239, 242, 244], "meilleur": [1, 2, 27, 42, 51, 56, 59, 61, 62, 70, 77, 79, 81, 82, 83, 89, 92, 93, 95, 99, 108, 110, 111, 115, 116, 117, 118, 121, 130, 131, 134, 140, 144, 150, 156, 164, 187, 188, 204, 209, 212, 221, 236, 237], "estim": [14, 22, 33, 56, 60, 62, 96, 99, 110, 128, 131, 132, 135, 136, 142, 145, 147, 149, 164, 200, 209, 212, 221, 239], "convaincr": [50, 77, 102, 165, 204, 212, 242], "suff": [2, 4, 16, 38, 41, 56, 60, 61, 62, 69, 70, 71, 74, 79, 83, 85, 88, 90, 95, 100, 102, 103, 108, 110, 111, 112, 113, 115, 116, 120, 121, 133, 152, 159, 188, 193, 194, 198, 200, 205, 212, 213, 221, 229, 231, 233, 235, 236, 239, 242, 244], "compar": [1, 2, 31, 32, 33, 50, 51, 52, 53, 56, 59, 61, 62, 69, 74, 81, 85, 87, 95, 98, 99, 110, 115, 116, 142, 143, 149, 150, 155, 156, 158, 161, 170, 173, 176, 178, 179, 186, 200, 209, 212, 213, 221, 224, 229, 231, 235, 236, 237], "obtenus": [51, 52, 56, 59, 62, 95, 132, 134, 144, 210, 212], "200000": [51, 85, 212], "400000": [130, 212], "dt": [2, 4, 71, 85, 86, 91, 99, 119, 130, 186, 212, 231], "00015950000033626566": 212, "00017660000003161258": 212, "0001847000003181165": 212, "0002316999998583924": 212, "00035339999976713443": 212, "0002839999997377163": 212, "0003455000000940345": 212, "00033450000000811997": 212, "0003973000002588378": 212, "0003483000000414904": 212, "confirm": [56, 77, 212], "robust": [2, 14, 56, 62, 70, 134, 144, 212, 231], "18": [23, 41, 42, 46, 50, 51, 52, 53, 54, 71, 77, 82, 84, 85, 87, 88, 91, 93, 95, 99, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 144, 145, 147, 149, 150, 151, 159, 160, 163, 169, 171, 174, 175, 183, 184, 186, 191, 192, 193, 194, 197, 200, 203, 204, 206, 208, 212, 213, 214, 221, 231, 232, 242, 244], "encor": [1, 4, 9, 14, 20, 34, 38, 41, 50, 51, 56, 58, 59, 62, 69, 71, 74, 77, 81, 83, 86, 87, 88, 91, 95, 96, 99, 104, 105, 115, 116, 123, 124, 142, 151, 153, 161, 170, 187, 188, 189, 193, 194, 204, 208, 209, 212, 221, 223, 227, 230, 235, 236, 237, 239, 242, 244], "construct": [1, 52, 56, 59, 61, 84, 112, 170, 184, 187, 203, 204, 212, 222, 228, 234, 236, 242, 244], "n\u00e9glige": [88, 116, 120, 200, 210, 212, 230], "cour": [1, 14, 51, 58, 59, 60, 62, 69, 84, 85, 90, 119, 158, 176, 203, 212, 224, 229, 235, 236, 237, 242], "plupart": [1, 2, 4, 14, 51, 56, 61, 71, 95, 101, 112, 145, 163, 166, 173, 193, 195, 200, 209, 212, 213, 221, 224, 225, 227, 229, 231, 236, 237, 239, 242], "languag": [1, 22, 54, 82, 87, 166, 204, 210, 212, 236, 240], "python": [1, 3, 4, 6, 16, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 53, 65, 66, 68, 70, 72, 88, 97, 100, 101, 104, 105, 108, 111, 112, 113, 114, 151, 152, 155, 156, 157, 158, 159, 162, 165, 166, 170, 171, 173, 174, 175, 176, 177, 178, 193, 194, 195, 198, 210, 212, 213, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 237, 239, 240, 241, 244], "celui": [1, 2, 4, 27, 30, 32, 34, 38, 39, 41, 42, 51, 56, 58, 59, 61, 62, 69, 71, 74, 94, 95, 99, 110, 112, 113, 114, 133, 140, 142, 143, 153, 154, 174, 175, 187, 188, 193, 203, 204, 209, 212, 213, 215, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 244], "ci": [1, 2, 16, 27, 39, 42, 50, 53, 54, 56, 58, 59, 61, 62, 69, 71, 74, 77, 80, 82, 86, 88, 94, 99, 102, 108, 110, 112, 113, 114, 119, 121, 134, 137, 142, 144, 149, 153, 155, 160, 166, 174, 175, 178, 186, 187, 193, 203, 205, 209, 212, 221, 224, 225, 227, 229, 230, 231, 232, 235, 236, 237, 239, 240, 242, 244], "hachag": [1, 51, 77, 212], "acces": [32, 33, 39, 40, 54, 69, 70, 162, 198, 212, 221, 225, 229, 235, 237, 239, 242], "\u00e9l\u00e9ment": [1, 2, 4, 6, 10, 15, 19, 33, 39, 41, 46, 49, 51, 53, 60, 61, 62, 64, 69, 70, 71, 78, 83, 84, 87, 97, 99, 101, 102, 103, 105, 108, 112, 113, 114, 125, 137, 144, 148, 151, 152, 153, 166, 168, 170, 173, 174, 175, 177, 178, 186, 194, 198, 202, 203, 205, 212, 213, 214, 221, 224, 225, 229, 230, 231, 236, 237, 239, 240, 242, 244], "complexity": [1, 198, 212], "map": [0, 2, 32, 46, 58, 99, 105, 167, 178, 191, 192, 198, 212, 229, 231, 235, 242], "binair": [1, 56, 69, 77, 84, 90, 99, 111, 113, 121, 132, 142, 154, 166, 168, 186, 204, 212, 236, 238], "logarithm": [54, 56, 61, 85, 101, 137, 140, 173, 178, 197, 212, 224], "standard": [2, 4, 19, 38, 39, 50, 51, 68, 69, 71, 99, 150, 166, 193, 198, 203, 212, 221, 224, 230, 233, 235, 237, 239, 242], "container": [11, 139, 158, 198, 212, 236], "\u00e9quivalent": [1, 2, 30, 33, 34, 38, 42, 51, 56, 69, 112, 132, 141, 142, 152, 158, 161, 186, 188, 189, 190, 191, 192, 193, 203, 212, 221, 224, 229, 231, 235, 236, 237, 241, 244], "\u00e9quilibr": [56, 61, 204, 212], "roug": [27, 30, 54, 56, 60, 61, 62, 70, 77, 87, 93, 111, 136, 137, 138, 139, 140, 144, 165, 200, 212, 229], "noir": [38, 58, 59, 87, 165, 200, 212, 221, 229], "consist": [2, 14, 18, 27, 34, 35, 42, 46, 51, 56, 58, 59, 61, 62, 69, 70, 74, 79, 82, 83, 85, 89, 90, 94, 95, 108, 110, 111, 112, 117, 118, 135, 137, 153, 159, 166, 173, 179, 180, 187, 197, 200, 204, 209, 212, 213, 221, 229, 231, 235, 236, 237, 239, 240, 242, 244], "ordre": [41, 42, 50, 51, 53, 58, 59, 61, 69, 87, 88, 91, 93, 95, 99, 103, 108, 112, 113, 114, 120, 130, 134, 144, 149, 150, 153, 156, 162, 175, 187, 188, 189, 192, 195, 197, 212, 213, 215, 221, 230, 236, 242], "alphabet": [2, 41, 71, 87, 96, 103, 197, 212, 219, 235], "non": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 19, 30, 31, 32, 33, 35, 36, 38, 39, 46, 50, 51, 53, 56, 57, 58, 59, 61, 62, 69, 71, 74, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 99, 100, 101, 102, 103, 108, 113, 114, 115, 116, 117, 118, 120, 121, 124, 131, 132, 133, 134, 137, 139, 140, 142, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 166, 172, 175, 176, 177, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 200, 203, 204, 212, 215, 216, 219, 221, 223, 224, 225, 227, 229, 230, 231, 237, 239, 240, 242, 244], "session": 212, "laiss": [38, 42, 56, 61, 69, 81, 94, 95, 110, 115, 116, 154, 204, 208, 212, 229, 236], "suppos": [1, 2, 7, 8, 10, 14, 27, 38, 54, 56, 58, 59, 61, 62, 69, 74, 79, 82, 83, 85, 88, 89, 94, 95, 96, 101, 108, 110, 111, 112, 113, 114, 119, 120, 121, 123, 124, 139, 140, 160, 164, 173, 175, 177, 178, 187, 188, 189, 195, 198, 200, 212, 221, 229, 231, 235, 236, 237, 242], "__init__": [4, 30, 39, 41, 46, 69, 70, 71, 124, 134, 139, 151, 152, 153, 154, 155, 156, 157, 170, 171, 172, 185, 193, 194, 195, 212, 215, 221, 223, 224, 225, 229, 237, 239, 240, 242], "self": [4, 30, 39, 41, 46, 53, 58, 69, 70, 71, 124, 134, 139, 151, 152, 153, 154, 155, 156, 157, 193, 194, 195, 196, 212, 215, 221, 223, 224, 225, 229, 236, 237, 239, 240, 242], "valu": [11, 31, 46, 50, 51, 54, 69, 77, 85, 88, 94, 95, 99, 115, 119, 132, 135, 137, 138, 139, 140, 145, 147, 148, 150, 166, 169, 171, 175, 177, 183, 187, 188, 204, 210, 212, 219, 229, 235, 236, 237], "children": 212, "add_child": [46, 212], "child": 212, "append": [2, 30, 31, 32, 33, 35, 40, 50, 54, 69, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 94, 95, 96, 101, 102, 103, 104, 105, 107, 108, 110, 111, 115, 116, 117, 118, 119, 123, 124, 130, 131, 132, 134, 135, 139, 140, 146, 149, 150, 152, 153, 154, 155, 156, 158, 159, 163, 164, 168, 169, 171, 172, 174, 175, 177, 178, 186, 188, 190, 194, 195, 196, 198, 202, 203, 207, 208, 212, 213, 216, 221, 229, 230, 231, 235, 236, 237, 239, 242, 244], "__str__": [30, 69, 151, 152, 153, 154, 193, 194, 212, 215, 224, 237, 239], "row": [11, 30, 31, 38, 50, 51, 54, 82, 87, 99, 115, 116, 130, 131, 132, 136, 139, 149, 150, 152, 154, 168, 174, 175, 187, 188, 191, 192, 194, 203, 204, 212, 229], "format": [2, 4, 11, 19, 31, 39, 46, 50, 51, 54, 61, 69, 77, 79, 83, 85, 90, 91, 94, 99, 110, 111, 139, 149, 168, 174, 179, 180, 186, 193, 204, 212, 213, 221, 224, 227, 229, 231, 233, 234, 238, 239, 240, 242, 244], "str": [2, 4, 7, 10, 11, 30, 35, 69, 71, 92, 102, 104, 110, 130, 136, 139, 142, 151, 152, 153, 154, 162, 166, 194, 202, 203, 204, 206, 212, 221, 224, 229, 231, 233, 235, 237, 239, 240, 242, 244], "lin": [2, 4, 11, 27, 42, 49, 50, 51, 59, 64, 69, 71, 74, 99, 101, 104, 107, 113, 114, 131, 132, 134, 166, 170, 188, 202, 212, 221, 224, 225, 227, 229, 231, 235, 236, 239, 244], "split": [2, 10, 11, 46, 51, 69, 87, 131, 148, 162, 165, 170, 185, 187, 191, 192, 203, 204, 212, 229, 231, 236, 237, 239, 244], "extend": [38, 69, 95, 104, 108, 122, 212, 236, 237], "root": [11, 50, 87, 152, 168, 180, 212, 229, 235, 242], "child1": 212, "graph": [1, 7, 10, 11, 14, 19, 20, 22, 27, 42, 45, 48, 50, 56, 58, 59, 62, 70, 77, 82, 87, 94, 95, 98, 99, 108, 131, 134, 136, 145, 149, 152, 154, 171, 187, 192, 208, 212, 221, 229], "particuli": [14, 46, 50, 51, 56, 59, 62, 69, 77, 84, 88, 94, 136, 144, 147, 150, 151, 166, 172, 178, 204, 209, 212, 221, 224, 225, 227, 229, 230, 235, 236, 237, 242], "car": [2, 4, 27, 32, 33, 34, 39, 41, 42, 50, 51, 52, 53, 56, 60, 62, 69, 70, 71, 74, 77, 79, 81, 83, 84, 86, 87, 88, 91, 93, 94, 95, 99, 101, 102, 104, 107, 108, 110, 111, 113, 114, 115, 116, 118, 120, 123, 130, 131, 134, 146, 149, 150, 151, 153, 155, 159, 160, 164, 166, 171, 175, 178, 186, 188, 197, 200, 203, 205, 206, 208, 212, 213, 219, 221, 223, 224, 225, 227, 229, 231, 233, 235, 236, 237, 239, 240, 242], "contiennent": [38, 46, 51, 56, 59, 70, 143, 174, 183, 212, 221, 230, 235, 236, 237, 239, 240, 242, 244], "cycl": [87, 165, 174, 212], "num\u00e9rot": [38, 84, 161, 189, 208, 212], "Ils": [39, 56, 62, 70, 74, 125, 163, 166, 177, 204, 212, 221, 224, 227, 230, 233, 236, 237, 242], "d\u00e9cis": [1, 27, 56, 60, 61, 62, 70, 131, 133, 140, 141, 142, 212], "forest": [22, 142, 212], "parfois": [2, 30, 34, 39, 50, 54, 56, 60, 61, 62, 69, 70, 74, 81, 99, 110, 119, 141, 153, 162, 183, 184, 185, 187, 195, 212, 221, 224, 225, 227, 229, 230, 231, 233, 235, 236, 237, 239, 240, 242], "cach": [1, 4, 41, 51, 52, 58, 64, 67, 68, 69, 71, 113, 114, 120, 212, 221, 223, 235, 236], "cas": [1, 2, 4, 30, 33, 34, 38, 40, 41, 42, 50, 51, 53, 56, 58, 59, 61, 62, 69, 70, 71, 74, 81, 83, 84, 85, 88, 91, 93, 94, 95, 96, 99, 102, 105, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 131, 132, 133, 134, 139, 142, 143, 149, 150, 153, 154, 159, 164, 171, 172, 173, 175, 177, 178, 181, 182, 183, 185, 187, 188, 191, 192, 193, 195, 197, 198, 200, 201, 202, 203, 204, 206, 212, 213, 215, 221, 224, 225, 231, 235, 237, 238, 240, 242, 244], "fil": [2, 4, 11, 28, 40, 43, 44, 64, 67, 69, 71, 74, 75, 104, 110, 152, 154, 187, 212, 215, 221, 224, 225, 229, 231, 235, 236, 237, 239, 241, 244, 246], "pourr": [2, 14, 42, 50, 51, 54, 56, 59, 60, 62, 70, 82, 83, 86, 87, 88, 89, 94, 95, 102, 110, 113, 114, 120, 130, 131, 132, 139, 145, 151, 156, 162, 165, 166, 177, 187, 198, 199, 203, 204, 209, 212, 215, 221, 224, 225, 227, 229, 231, 235, 236, 237, 242], "nul": [33, 53, 56, 62, 69, 78, 84, 91, 99, 102, 115, 134, 170, 175, 186, 202, 212, 224, 236], "22": [0, 16, 30, 36, 46, 50, 51, 52, 53, 54, 55, 77, 84, 85, 88, 95, 97, 99, 102, 105, 108, 110, 111, 112, 113, 116, 119, 120, 124, 130, 131, 134, 137, 139, 140, 141, 146, 149, 150, 163, 171, 174, 175, 176, 180, 183, 184, 186, 193, 197, 200, 203, 212, 213, 225, 232, 236, 244], "arbredicho": 212, "befor": [1, 11, 30, 56, 99, 145, 147, 212], "after": [212, 229], "add_befor": 212, "add_aft": 212, "find": [1, 10, 11, 30, 31, 68, 69, 96, 174, 212, 236, 244], "word": [94, 212], "is": [1, 4, 10, 11, 27, 30, 31, 33, 39, 46, 50, 53, 54, 65, 75, 80, 81, 83, 85, 86, 87, 88, 89, 93, 94, 99, 101, 102, 105, 112, 113, 114, 115, 116, 120, 121, 124, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 160, 165, 171, 177, 185, 188, 190, 191, 192, 200, 212, 215, 216, 219, 221, 229, 235, 236, 239, 240, 242, 244], "sorted_list": 212, "re": [2, 10, 30, 32, 35, 39, 40, 54, 78, 85, 87, 88, 91, 92, 94, 99, 100, 101, 107, 108, 110, 111, 112, 115, 116, 119, 120, 122, 123, 124, 130, 134, 135, 138, 139, 144, 146, 147, 149, 163, 165, 168, 169, 171, 172, 178, 185, 190, 194, 198, 202, 203, 204, 210, 212, 216, 221, 231, 236, 237, 239, 240, 242, 244], "cr\u00e9": [1, 4, 6, 14, 22, 32, 36, 39, 41, 49, 50, 52, 54, 56, 61, 69, 70, 71, 74, 78, 82, 84, 85, 91, 95, 98, 99, 100, 102, 108, 117, 118, 124, 134, 135, 142, 150, 152, 153, 155, 156, 175, 177, 178, 179, 180, 183, 185, 186, 187, 193, 195, 197, 198, 202, 204, 210, 212, 213, 221, 224, 227, 235, 236, 237, 242], "v\u00e9rifient": [41, 56, 58, 115, 116, 208, 212, 244], "propriet": [1, 61, 69, 78, 84, 186, 187, 195, 200, 212], "haut": [27, 38, 39, 53, 56, 88, 115, 121, 156, 197, 212, 224, 229, 235, 244], "apparaissent": [30, 58, 61, 69, 93, 136, 210, 212, 229, 235, 236, 237, 239], "bon": [27, 30, 41, 53, 54, 56, 61, 62, 77, 91, 95, 96, 99, 108, 113, 115, 116, 117, 118, 131, 132, 133, 136, 137, 140, 145, 147, 195, 203, 204, 207, 208, 209, 212, 215, 237], "milieu": [42, 61, 83, 112, 173, 212, 213, 214], "zillion": 212, "apres": [1, 2, 7, 14, 27, 30, 32, 38, 41, 42, 51, 52, 56, 58, 59, 61, 64, 69, 71, 84, 88, 91, 93, 94, 99, 102, 103, 108, 109, 110, 115, 116, 117, 118, 120, 131, 134, 146, 162, 164, 166, 183, 184, 187, 195, 197, 203, 204, 212, 215, 221, 225, 229, 235, 236, 237, 239, 242, 244], "v\u00e9rif": [1, 33, 38, 41, 50, 51, 56, 59, 61, 62, 64, 69, 74, 77, 78, 80, 81, 82, 85, 91, 94, 95, 99, 100, 101, 102, 108, 110, 111, 113, 114, 115, 134, 137, 151, 153, 155, 159, 168, 175, 179, 180, 187, 200, 202, 203, 212, 214, 218, 221, 225, 229, 235, 236, 239, 242, 244], "bien": [2, 4, 16, 27, 32, 38, 41, 50, 54, 56, 60, 61, 62, 70, 71, 74, 77, 79, 80, 81, 82, 84, 88, 89, 93, 94, 95, 99, 100, 110, 113, 114, 115, 117, 118, 119, 133, 134, 137, 140, 143, 144, 147, 154, 157, 159, 161, 163, 164, 170, 174, 175, 177, 179, 187, 193, 204, 205, 206, 208, 210, 212, 221, 224, 225, 227, 229, 231, 235, 236, 237], "all": [4, 10, 11, 24, 30, 50, 75, 171, 172, 191, 192, 212, 221, 239, 244, 246], "assert": [81, 123, 124, 139, 151, 153, 156, 161, 177, 212, 216, 221, 235], "f": [1, 2, 4, 9, 11, 12, 31, 34, 39, 40, 46, 50, 51, 54, 59, 61, 62, 65, 69, 70, 71, 77, 79, 82, 83, 87, 89, 94, 95, 99, 102, 103, 106, 107, 110, 112, 113, 114, 124, 131, 132, 134, 139, 150, 151, 152, 153, 155, 159, 161, 162, 166, 171, 177, 187, 193, 197, 198, 199, 200, 203, 204, 206, 210, 212, 213, 215, 218, 221, 224, 225, 229, 231, 233, 235, 237, 239, 242, 244], "pos": [2, 30, 41, 56, 59, 74, 86, 91, 94, 99, 102, 108, 109, 111, 112, 115, 116, 117, 118, 120, 133, 135, 156, 162, 163, 168, 175, 184, 188, 194, 212, 219, 221, 223, 229, 231, 237, 244], "\u00e9tudi": [14, 56, 60, 61, 96, 98, 99, 103, 111, 162, 172, 209, 212, 215], "q1": [108, 212], "agit": [33, 50, 51, 56, 58, 59, 61, 62, 69, 70, 85, 89, 95, 108, 132, 149, 166, 171, 205, 206, 207, 208, 209, 212, 221, 229, 235, 236, 237, 240, 242], "reproduir": [56, 74, 212], "aid": [2, 27, 38, 42, 50, 56, 59, 69, 77, 82, 87, 88, 94, 112, 133, 134, 140, 160, 171, 179, 180, 183, 203, 204, 207, 208, 209, 212, 224, 229, 235, 236, 237, 239, 242, 244], "voic": [6, 17, 38, 41, 49, 50, 51, 54, 61, 69, 105, 110, 140, 158, 173, 183, 212, 221, 229, 235, 236, 237, 239, 242], "effect": [41, 56, 59, 212, 221, 229, 230, 235], "merveil": 212, "23": [36, 40, 50, 51, 53, 54, 56, 70, 77, 84, 85, 88, 93, 95, 97, 99, 102, 108, 110, 111, 113, 117, 118, 119, 120, 123, 124, 130, 134, 135, 137, 138, 139, 140, 141, 142, 146, 149, 150, 163, 171, 172, 175, 183, 184, 189, 193, 197, 200, 203, 210, 212, 213, 232, 235, 236, 242], "cepend": [58, 69, 88, 212, 236, 237], "comprend": [60, 64, 69, 151, 212], "comment": [1, 14, 19, 22, 30, 38, 39, 46, 50, 51, 52, 54, 56, 61, 62, 64, 77, 82, 84, 85, 87, 91, 94, 95, 98, 99, 105, 113, 114, 116, 120, 137, 140, 144, 145, 146, 163, 164, 166, 168, 171, 176, 185, 193, 194, 195, 197, 201, 202, 209, 212, 221, 225, 229, 233, 235, 236, 237, 239, 240, 242, 244], "tourn": [1, 41, 56, 58, 88, 151, 161, 197, 212, 242], "moment": [2, 14, 34, 50, 52, 56, 62, 71, 74, 82, 110, 132, 134, 143, 145, 151, 152, 154, 160, 166, 200, 204, 205, 212, 213, 221, 229, 233, 235, 236, 237, 242], "modif": [2, 9, 10, 41, 42, 50, 51, 56, 58, 59, 64, 69, 71, 74, 78, 80, 85, 89, 95, 102, 108, 115, 116, 165, 168, 195, 197, 198, 212, 221, 229, 232, 235, 236, 237, 239, 242], "initial": [1, 7, 42, 50, 51, 56, 59, 62, 77, 88, 95, 110, 133, 136, 161, 166, 171, 175, 178, 189, 198, 203, 212, 219, 225, 237, 239], "cop": [3, 4, 50, 51, 54, 70, 71, 75, 77, 78, 89, 100, 101, 161, 212, 213, 222, 235, 239, 240], "nomm": [51, 54, 61, 69, 74, 84, 205, 212, 213, 221, 235, 236, 242], "dir": [1, 2, 4, 14, 27, 33, 39, 41, 56, 58, 60, 61, 62, 69, 71, 74, 77, 83, 87, 88, 94, 95, 101, 104, 105, 110, 115, 116, 130, 132, 136, 137, 140, 145, 146, 155, 164, 165, 175, 183, 184, 185, 186, 188, 193, 203, 204, 205, 209, 212, 213, 214, 215, 221, 225, 229, 233, 235, 236, 237, 239, 242, 244], "d\u00e9but": [2, 4, 51, 53, 54, 64, 69, 71, 82, 84, 95, 110, 139, 144, 158, 166, 172, 173, 212, 221, 229, 230, 231, 235, 236, 239, 242, 244], "puis": [2, 4, 10, 16, 20, 36, 42, 51, 52, 53, 54, 56, 58, 59, 69, 70, 71, 74, 77, 81, 85, 86, 89, 95, 96, 99, 101, 108, 113, 114, 115, 117, 118, 119, 135, 142, 152, 153, 156, 159, 164, 169, 178, 197, 198, 200, 203, 212, 214, 216, 221, 227, 229, 231, 235, 236, 237, 239, 240, 242, 244], "r\u00e9alis": [40, 53, 54, 56, 58, 84, 110, 156, 160, 193, 212, 221, 229], "rout": [19, 23, 54, 56, 89, 95, 99, 187, 212], "pass": [1, 2, 4, 10, 14, 19, 32, 33, 35, 37, 38, 39, 41, 42, 50, 51, 54, 56, 58, 59, 60, 61, 62, 69, 71, 78, 83, 85, 88, 89, 95, 102, 110, 113, 114, 115, 124, 125, 132, 133, 134, 139, 140, 143, 152, 153, 160, 163, 165, 170, 171, 172, 174, 175, 177, 185, 186, 187, 190, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 212, 213, 214, 219, 221, 224, 227, 229, 231, 233, 236, 237, 239, 240, 241, 242, 244], "nouvel": [14, 50, 51, 54, 56, 62, 69, 74, 77, 81, 89, 94, 119, 128, 132, 150, 155, 189, 197, 204, 212, 221, 229, 235, 237, 239, 242], "r\u00e9pons": [14, 27, 38, 41, 45, 49, 62, 69, 79, 101, 110, 111, 113, 114, 115, 116, 120, 125, 137, 142, 147, 161, 183, 190, 192, 194, 212, 214, 215, 229, 235, 237], "exist": [0, 1, 2, 4, 10, 14, 30, 38, 39, 40, 42, 50, 51, 53, 54, 56, 58, 59, 61, 62, 64, 69, 70, 71, 74, 78, 83, 84, 85, 89, 90, 92, 95, 105, 123, 131, 151, 152, 153, 155, 166, 171, 175, 176, 178, 183, 184, 187, 188, 190, 191, 192, 193, 197, 203, 204, 206, 212, 213, 219, 221, 224, 225, 229, 231, 233, 235, 236, 237, 239, 240, 241, 242], "moyen": [2, 4, 9, 14, 20, 27, 32, 39, 41, 46, 50, 54, 62, 69, 70, 71, 77, 83, 85, 86, 98, 99, 102, 110, 111, 112, 124, 131, 133, 134, 136, 137, 139, 147, 149, 175, 179, 180, 186, 189, 195, 196, 199, 200, 205, 208, 212, 214, 217, 220, 221, 229, 231, 235, 237, 239, 244], "visualis": [56, 61, 84, 137, 140, 212, 235], "tutor": 212, "http": [2, 4, 7, 30, 46, 50, 51, 54, 65, 67, 71, 74, 82, 85, 87, 95, 96, 99, 112, 119, 133, 137, 139, 140, 159, 163, 166, 171, 174, 187, 188, 203, 204, 209, 210, 212, 236], "pythontutor": 212, "com": [4, 7, 40, 46, 51, 54, 65, 71, 85, 95, 96, 99, 119, 166, 187, 188, 203, 204, 209, 210, 212, 237, 244], "recopi": [4, 36, 52, 64, 69, 71, 166, 197, 212, 221, 235, 236, 237, 239], "suivr": [55, 56, 61, 120, 153, 155, 212, 221, 229, 235, 237], "24": [0, 30, 36, 46, 50, 51, 52, 53, 54, 55, 56, 69, 77, 83, 84, 85, 88, 96, 97, 99, 101, 102, 108, 110, 112, 113, 117, 118, 120, 124, 131, 132, 134, 135, 137, 138, 139, 140, 141, 147, 149, 150, 163, 171, 175, 180, 183, 184, 193, 197, 200, 203, 204, 212, 213, 232], "vont": [56, 61, 69, 136, 155, 212, 221, 237, 242], "probabl": [2, 14, 50, 52, 56, 59, 61, 62, 77, 78, 88, 96, 99, 116, 119, 120, 124, 133, 134, 135, 137, 140, 144, 149, 159, 164, 171, 195, 212, 221, 231], "fair": [1, 2, 4, 14, 27, 39, 40, 41, 46, 48, 50, 51, 53, 56, 58, 59, 61, 62, 64, 69, 70, 71, 74, 77, 78, 79, 81, 82, 85, 86, 88, 89, 91, 94, 95, 97, 98, 99, 105, 110, 111, 113, 114, 115, 116, 120, 132, 134, 136, 139, 142, 143, 149, 151, 153, 157, 159, 160, 165, 166, 170, 171, 175, 176, 178, 186, 187, 190, 195, 200, 202, 203, 204, 205, 206, 210, 212, 213, 216, 221, 224, 225, 229, 231, 232, 233, 235, 236, 237, 239, 241, 242, 244], "d\u00e9j\u00e0": [1, 42, 50, 51, 56, 59, 62, 69, 70, 74, 84, 88, 95, 115, 116, 120, 178, 197, 203, 204, 212, 213, 221, 224, 235, 236, 237, 239, 240, 242, 244], "branch": [1, 212], "trouv": [1, 2, 4, 14, 18, 27, 30, 35, 41, 42, 50, 53, 54, 56, 60, 61, 62, 64, 69, 71, 74, 83, 86, 88, 89, 92, 94, 95, 96, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 133, 134, 138, 159, 160, 165, 173, 186, 188, 189, 190, 191, 197, 207, 208, 212, 213, 214, 221, 229, 231, 232, 235, 236, 237, 239, 242, 244], "m\u00e9can": [56, 69, 132, 166, 212, 213, 221, 224, 225, 229, 237, 242], "proch": [1, 3, 9, 10, 39, 56, 58, 59, 61, 70, 77, 89, 99, 110, 111, 117, 118, 125, 128, 133, 135, 141, 144, 146, 155, 179, 180, 187, 204, 212, 221, 229, 230, 236, 237, 240], "uilis": 212, "d\u00e9plac": [9, 10, 38, 59, 88, 103, 113, 173, 212, 214, 229, 237], "indic": [2, 7, 9, 10, 33, 38, 42, 50, 51, 54, 56, 58, 64, 69, 70, 83, 88, 91, 93, 95, 100, 104, 105, 108, 117, 118, 137, 139, 174, 175, 208, 212, 213, 218, 221, 224, 225, 229, 230, 231, 235, 236, 244], "point": [1, 2, 8, 9, 10, 12, 24, 27, 29, 33, 41, 42, 43, 46, 50, 56, 58, 59, 62, 69, 83, 86, 94, 95, 98, 99, 111, 112, 115, 116, 117, 118, 126, 130, 131, 134, 136, 137, 139, 147, 149, 164, 171, 183, 184, 186, 193, 200, 203, 204, 205, 210, 212, 213, 215, 221, 225, 229, 231, 235, 236, 237, 242, 244, 246], "liste_chaine": 212, "next": [67, 170, 191, 192, 212, 221, 224, 235], "attach": [212, 229, 235, 237, 242, 244], "element": [10, 30, 51, 85, 120, 152, 173, 212, 219, 221, 225], "atteindre_la_fin": 212, "position_cour": 212, "e0": [204, 212], "e1": 212, "e2": [144, 212], "Cet": [27, 50, 56, 59, 60, 110, 111, 112, 155, 178, 207, 208, 212, 214, 221, 224, 229, 235, 237, 239], "seul": [1, 2, 10, 14, 16, 18, 30, 33, 38, 50, 51, 52, 53, 54, 56, 59, 60, 62, 69, 74, 77, 78, 84, 85, 87, 88, 92, 94, 95, 102, 105, 112, 115, 116, 119, 123, 131, 134, 136, 142, 152, 154, 159, 163, 164, 166, 175, 179, 183, 184, 186, 189, 193, 194, 195, 197, 198, 203, 204, 205, 212, 213, 215, 221, 224, 229, 231, 233, 235, 236, 237, 239, 240, 242, 244], "direct": [2, 4, 38, 50, 51, 56, 69, 74, 79, 84, 85, 95, 108, 109, 111, 137, 171, 177, 191, 192, 193, 201, 202, 209, 212, 213, 221, 224, 225, 231, 235, 236, 237], "continu": [7, 19, 30, 50, 56, 58, 69, 74, 81, 82, 84, 85, 87, 88, 91, 94, 95, 108, 111, 115, 116, 117, 118, 121, 123, 124, 149, 153, 162, 177, 187, 200, 202, 204, 212, 213, 214, 218, 219, 224, 225, 227, 244], "toutefois": [33, 56, 58, 59, 62, 134, 175, 212, 221, 225, 229, 235, 236], "pr\u00e9c\u00e9dent": [1, 15, 19, 20, 38, 50, 51, 56, 58, 59, 62, 69, 70, 79, 80, 81, 82, 83, 84, 86, 88, 89, 95, 98, 99, 108, 110, 111, 112, 113, 114, 115, 116, 121, 131, 133, 134, 156, 159, 161, 164, 175, 177, 179, 180, 183, 186, 190, 195, 197, 198, 199, 203, 206, 208, 212, 213, 221, 224, 225, 229, 233, 235, 236, 237, 239, 242, 244], "montr": [1, 27, 41, 50, 52, 56, 59, 61, 62, 69, 70, 79, 81, 83, 87, 94, 99, 112, 115, 116, 131, 132, 134, 142, 157, 172, 179, 183, 188, 191, 192, 193, 195, 197, 204, 212, 214, 221, 224, 229, 230, 233, 235, 236, 237, 239, 242, 244], "m\u00e9moris": [2, 14, 41, 69, 79, 102, 103, 143, 190, 193, 212, 221, 225, 227, 229, 231, 242, 244], "laquel": [2, 27, 50, 53, 56, 59, 60, 70, 74, 78, 95, 102, 103, 110, 121, 156, 170, 188, 195, 200, 212, 213, 215, 221, 229, 231, 235, 236, 242], "avanc": [7, 18, 60, 61, 77, 84, 204, 212, 229, 235, 236], "d\u00e9pend": [1, 14, 33, 41, 51, 56, 58, 59, 62, 69, 74, 82, 85, 87, 91, 103, 110, 130, 131, 135, 139, 159, 160, 162, 164, 166, 175, 186, 193, 197, 198, 212, 213, 221, 227, 232, 235, 236, 239, 242], "promen": 212, "initialis": [2, 7, 50, 53, 58, 59, 74, 77, 89, 151, 187, 190, 193, 212, 221, 231, 235, 236], "cran": [212, 235], "tant": [48, 51, 58, 59, 61, 69, 78, 84, 89, 113, 114, 157, 187, 212, 221, 235, 236, 237, 239, 242], "cl\u00e9": [2, 33, 34, 38, 51, 54, 58, 63, 70, 71, 91, 95, 96, 101, 102, 103, 111, 152, 157, 175, 177, 181, 182, 195, 198, 203, 205, 209, 212, 221, 224, 231, 235, 237, 239, 242, 244], "valeur": [2, 7, 10, 22, 33, 34, 41, 50, 51, 56, 58, 61, 62, 64, 69, 74, 77, 83, 85, 86, 87, 91, 99, 101, 102, 103, 104, 108, 110, 111, 112, 113, 114, 118, 119, 131, 132, 134, 135, 136, 140, 146, 147, 149, 150, 159, 169, 170, 172, 175, 178, 179, 180, 181, 182, 183, 184, 187, 195, 198, 199, 200, 203, 204, 205, 206, 209, 210, 212, 213, 214, 221, 229, 230, 231, 232, 233, 236, 237, 239], "train": [27, 74, 131, 141, 146, 147, 148, 151, 171, 212, 225, 235, 236], "q2": [108, 212], "suit": [1, 2, 14, 20, 33, 34, 41, 50, 51, 54, 56, 59, 61, 62, 69, 70, 74, 77, 79, 81, 82, 84, 86, 89, 94, 95, 102, 103, 104, 110, 112, 113, 114, 115, 116, 120, 124, 131, 134, 135, 145, 157, 159, 162, 164, 171, 172, 173, 176, 179, 183, 187, 197, 200, 203, 212, 214, 221, 224, 225, 227, 229, 231, 233, 235, 236, 237, 239, 240, 242, 244], "appelon": 212, "appel": [4, 32, 33, 38, 39, 41, 50, 53, 54, 56, 58, 61, 62, 69, 71, 81, 84, 88, 93, 95, 96, 98, 99, 101, 114, 120, 137, 139, 143, 144, 147, 153, 155, 156, 157, 170, 171, 172, 183, 187, 189, 193, 195, 197, 200, 203, 204, 212, 213, 215, 223, 224, 226, 227, 229, 232, 233, 236, 237, 239, 241, 242, 244], "alor": [2, 4, 10, 14, 33, 41, 50, 51, 56, 58, 59, 61, 62, 69, 70, 71, 74, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 94, 95, 99, 100, 110, 111, 112, 131, 133, 134, 144, 150, 168, 171, 175, 178, 179, 183, 187, 190, 191, 192, 198, 200, 202, 204, 212, 221, 224, 225, 229, 231, 235, 236, 237, 239, 242], "modifi": [4, 41, 50, 51, 54, 56, 64, 66, 71, 83, 85, 89, 95, 100, 102, 105, 108, 109, 110, 112, 113, 115, 120, 121, 133, 158, 161, 166, 175, 177, 195, 203, 205, 212, 213, 221, 223, 224, 225, 227, 229, 232, 234, 237, 239, 240, 242], "deuxiem": [69, 95, 200, 212], "entit": [166, 212, 221, 235], "objet": [1, 2, 4, 19, 30, 32, 36, 50, 51, 56, 61, 69, 70, 71, 153, 155, 157, 166, 174, 175, 193, 195, 197, 198, 210, 212, 221, 224, 228, 230, 231, 232, 235, 239, 240, 242, 244], "crois": [3, 10, 59, 89, 128, 139, 141, 142, 146, 149, 150, 203, 204, 212], "ca": [16, 42, 46, 53, 56, 61, 70, 80, 81, 85, 91, 94, 95, 140, 144, 145, 157, 160, 163, 166, 175, 208, 210, 212, 229, 239], "compr": [1, 2, 53, 56, 69, 71, 137, 142, 194, 195, 197, 204, 212, 221, 229, 235, 236, 244], "Par": [2, 4, 22, 33, 41, 42, 50, 51, 54, 56, 58, 59, 61, 69, 71, 74, 83, 84, 96, 100, 101, 102, 110, 112, 120, 131, 155, 178, 184, 187, 203, 212, 213, 214, 221, 224, 229, 231, 233, 235, 236, 237, 242, 244], "ailleur": [4, 50, 56, 61, 71, 74, 95, 152, 164, 212, 227, 235], "surpren": [212, 235], "execut": [68, 212, 239], "27": [0, 2, 46, 50, 51, 53, 54, 55, 77, 84, 88, 95, 97, 99, 102, 108, 112, 115, 117, 118, 119, 120, 124, 134, 135, 137, 139, 141, 150, 152, 163, 171, 175, 183, 184, 193, 197, 200, 203, 212, 221, 231, 232], "quand": [1, 2, 14, 34, 50, 51, 52, 56, 60, 61, 69, 70, 74, 81, 87, 91, 110, 111, 119, 121, 131, 137, 152, 163, 164, 172, 177, 183, 184, 185, 189, 204, 210, 212, 214, 224, 231, 236, 242], "28": [0, 35, 46, 50, 51, 53, 54, 55, 62, 69, 77, 84, 88, 93, 95, 99, 102, 108, 115, 117, 118, 119, 120, 132, 134, 137, 139, 141, 143, 144, 146, 150, 152, 163, 166, 171, 174, 183, 184, 186, 193, 197, 200, 203, 204, 206, 212, 232], "mutabl": [4, 71, 212, 213, 234], "Je": [14, 27, 30, 50, 54, 56, 60, 62, 81, 87, 94, 95, 103, 131, 135, 137, 160, 163, 165, 183, 184, 203, 204, 208, 212, 242], "renvoi": [2, 3, 4, 6, 7, 9, 10, 11, 13, 50, 51, 77, 103, 212, 221, 229], "pag": [2, 4, 27, 50, 51, 53, 54, 61, 69, 71, 74, 95, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 162, 166, 170, 174, 185, 197, 198, 207, 208, 209, 212, 235, 236, 239, 241, 242, 244], "Qu": [1, 42, 95, 159, 177, 185, 200, 212, 213], "typ": [1, 2, 30, 38, 39, 40, 46, 50, 51, 52, 56, 58, 59, 61, 64, 65, 66, 68, 77, 84, 99, 101, 102, 105, 110, 132, 139, 145, 151, 153, 155, 157, 158, 163, 166, 170, 171, 172, 174, 175, 188, 192, 193, 195, 197, 198, 203, 205, 206, 212, 213, 222, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 240, 242, 244], "immuabl": [2, 52, 158, 197, 212, 213, 230, 231, 234, 235, 237], "immut": [102, 212, 213, 234], "comprendr": [16, 51, 56, 60, 61, 69, 81, 85, 110, 131, 133, 152, 171, 175, 194, 203, 205, 212, 215, 221, 224, 227, 229, 235, 236, 237], "second": [2, 4, 6, 7, 11, 19, 20, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 51, 53, 56, 58, 59, 60, 61, 62, 69, 70, 71, 74, 77, 79, 80, 81, 82, 83, 84, 87, 88, 91, 94, 95, 99, 102, 108, 110, 111, 115, 116, 118, 120, 124, 131, 133, 136, 137, 140, 144, 152, 153, 156, 157, 159, 161, 170, 172, 173, 183, 184, 185, 186, 188, 194, 195, 197, 200, 202, 203, 204, 205, 206, 212, 213, 221, 224, 225, 231, 232, 235, 236, 237, 239, 240, 242, 244], "identifi": [4, 14, 53, 56, 69, 71, 155, 212, 229, 235, 236], "acced": [16, 38, 69, 74, 77, 86, 101, 166, 197, 212, 221, 224, 229, 230, 236, 237, 240], "effet": [4, 38, 56, 59, 62, 71, 77, 89, 110, 113, 131, 134, 135, 144, 159, 212, 221, 229, 235, 236, 237, 239], "o\u00f9": [1, 2, 4, 9, 12, 13, 14, 17, 27, 50, 51, 52, 54, 56, 58, 59, 60, 61, 62, 69, 70, 71, 74, 78, 79, 81, 82, 83, 84, 87, 88, 95, 101, 103, 104, 110, 112, 113, 114, 115, 116, 121, 131, 132, 134, 135, 137, 139, 142, 151, 152, 162, 163, 173, 178, 183, 185, 186, 187, 189, 190, 193, 198, 200, 203, 204, 205, 212, 213, 214, 215, 219, 221, 224, 227, 229, 231, 233, 235, 236, 237, 239, 240, 242, 244], "d\u00e9sign": [4, 38, 41, 50, 51, 53, 54, 56, 58, 59, 62, 69, 70, 71, 112, 137, 152, 158, 163, 166, 173, 183, 193, 205, 212, 221, 229, 233, 235, 236, 239, 242, 244], "cons\u00e9quent": [14, 33, 41, 42, 50, 56, 59, 69, 83, 96, 110, 131, 193, 212, 214, 221, 224, 229, 235, 236, 239, 242, 244], "demand": [4, 14, 27, 58, 60, 64, 69, 71, 74, 100, 101, 111, 150, 204, 212, 213, 221, 229, 236, 244], "instuct": 212, "concaten": [30, 41, 50, 51, 54, 69, 134, 212, 229], "affect": [1, 2, 41, 50, 56, 59, 62, 69, 74, 81, 89, 162, 197, 206, 212, 213, 221, 224, 229, 231, 235, 239, 242], "para\u00eet": [14, 41, 56, 59, 70, 94, 131, 142, 146, 147, 150, 156, 170, 175, 178, 209, 212, 221, 223, 235, 237, 239, 244], "29": [0, 46, 50, 51, 53, 54, 55, 77, 84, 93, 95, 99, 102, 108, 110, 117, 119, 120, 132, 134, 136, 137, 141, 150, 152, 163, 171, 183, 184, 193, 197, 203, 204, 212, 232, 235], "implicit": [4, 27, 51, 69, 71, 121, 155, 156, 166, 203, 212, 235, 236, 237], "r\u00e9p\u00e9tit": [2, 83, 94, 96, 205, 213, 235, 236, 237, 239, 242], "manipul": [1, 15, 19, 32, 33, 41, 45, 46, 48, 49, 56, 61, 69, 70, 74, 166, 193, 203, 213, 221, 224, 233, 235, 238, 239], "Ces": [27, 39, 51, 53, 56, 58, 59, 61, 62, 64, 69, 70, 74, 83, 95, 97, 171, 187, 203, 204, 209, 213, 221, 229, 230, 233, 235, 236, 239, 240, 242, 244], "connu": [1, 50, 56, 58, 61, 62, 74, 77, 83, 84, 85, 95, 143, 177, 198, 213, 221, 229, 235, 237], "servent": [56, 62, 81, 197, 213, 229, 233, 235, 237, 244], "pouvoir": [1, 4, 7, 56, 61, 62, 71, 77, 81, 88, 94, 121, 139, 154, 166, 170, 187, 193, 195, 202, 204, 205, 213, 221, 229, 235, 236, 237, 240, 242], "proced": [2, 56, 59, 62, 69, 159, 163, 166, 173, 213, 215, 221, 229, 231, 237, 239, 242], "quelqu": [2, 4, 6, 14, 21, 22, 30, 36, 41, 42, 49, 50, 51, 53, 58, 59, 60, 62, 66, 69, 71, 74, 77, 81, 84, 85, 87, 88, 89, 91, 94, 95, 100, 101, 102, 103, 105, 108, 111, 113, 117, 118, 121, 125, 133, 135, 137, 144, 146, 150, 153, 160, 161, 165, 166, 171, 177, 179, 183, 184, 197, 202, 203, 204, 205, 213, 221, 224, 229, 231, 232, 235, 236, 237, 239, 242], "essai": [50, 53, 59, 61, 62, 69, 74, 85, 86, 95, 112, 123, 133, 146, 156, 165, 166, 171, 213, 224, 225, 229, 233, 236, 237, 242], "autour": [15, 20, 24, 29, 33, 37, 41, 43, 56, 58, 69, 70, 81, 86, 87, 95, 109, 125, 131, 137, 146, 165, 203, 213, 235, 242, 246], "enti": [38, 50, 51, 53, 56, 69, 74, 77, 79, 90, 99, 102, 151, 153, 159, 173, 181, 182, 190, 193, 206, 213, 221, 224, 229, 235, 236, 237, 240, 242], "numer": [2, 4, 22, 33, 41, 48, 50, 51, 56, 60, 70, 71, 74, 103, 110, 111, 115, 116, 134, 143, 159, 172, 177, 179, 180, 183, 187, 193, 200, 203, 209, 213, 221, 231, 235, 236, 237, 240, 241, 244], "r\u00e9el": [2, 4, 41, 53, 56, 62, 64, 69, 70, 71, 77, 110, 131, 163, 175, 193, 213, 214, 221, 232, 234, 235, 237, 240], "peuvent": [2, 39, 51, 56, 58, 59, 61, 64, 69, 70, 71, 74, 77, 95, 102, 115, 116, 124, 151, 166, 187, 189, 197, 213, 221, 224, 229, 231, 233, 235, 236, 237, 239, 242], "sl": [110, 213], "lign": [2, 4, 6, 8, 11, 17, 27, 38, 39, 41, 46, 49, 50, 51, 52, 53, 61, 69, 71, 74, 77, 78, 82, 83, 84, 87, 91, 94, 95, 102, 104, 105, 107, 108, 110, 112, 115, 116, 120, 123, 133, 151, 152, 163, 166, 170, 171, 175, 179, 180, 187, 189, 193, 194, 197, 198, 202, 203, 204, 205, 206, 213, 214, 218, 224, 225, 230, 231, 233, 235, 236, 237, 239, 242, 244], "signif": [41, 50, 51, 53, 56, 58, 59, 61, 69, 70, 82, 95, 99, 110, 116, 123, 131, 135, 141, 144, 170, 193, 203, 204, 205, 213, 221, 223, 224, 229, 230, 232, 235, 236, 237, 242, 244], "rien": [2, 4, 18, 32, 42, 46, 51, 56, 60, 62, 69, 71, 99, 100, 110, 115, 116, 123, 131, 133, 134, 139, 140, 142, 147, 151, 157, 164, 174, 193, 203, 204, 213, 221, 223, 229, 231, 235, 237, 239, 242], "signifi": [165, 213, 221, 223, 224, 229, 236, 239, 242], "erreur": [2, 4, 39, 42, 50, 51, 53, 56, 58, 59, 62, 64, 66, 70, 71, 74, 77, 81, 93, 99, 100, 102, 103, 104, 105, 110, 111, 112, 113, 115, 116, 120, 131, 132, 134, 137, 142, 145, 146, 147, 149, 151, 153, 157, 176, 177, 179, 180, 187, 197, 200, 205, 206, 213, 214, 221, 226, 227, 229, 231, 233, 235, 236], "produit": [1, 2, 4, 6, 10, 39, 42, 46, 49, 50, 56, 60, 69, 71, 78, 102, 103, 105, 113, 114, 115, 116, 125, 130, 131, 132, 133, 134, 142, 149, 150, 151, 153, 155, 171, 195, 196, 206, 213, 221, 223, 224, 225, 227, 229, 231, 235, 237, 240, 242], "n\u00e9cessair": [27, 32, 38, 41, 50, 51, 56, 59, 61, 62, 69, 70, 74, 83, 87, 88, 89, 95, 99, 100, 102, 110, 112, 115, 116, 134, 145, 168, 170, 172, 177, 179, 188, 200, 204, 213, 215, 221, 224, 225, 227, 229, 235, 236, 237, 239, 240, 242], "nplusieur": 213, "anything": 213, "affichag": [69, 104, 151, 169, 171, 213, 221, 224, 229, 235, 236, 237, 242], "v1": [7, 89, 91, 95, 108, 136, 187, 188, 213, 236], "v2": [7, 89, 91, 95, 108, 136, 187, 188, 213, 236], "doubl": [6, 31, 56, 61, 70, 71, 95, 101, 102, 105, 108, 120, 213, 229, 236, 237, 244], "d\u00e9faut": [4, 16, 34, 50, 51, 54, 56, 69, 71, 74, 100, 101, 112, 131, 144, 155, 171, 197, 213, 214, 221, 229, 234, 236, 237, 239, 240, 242, 244], "pr\u00e9sent": [4, 7, 22, 33, 34, 50, 51, 56, 58, 59, 61, 69, 70, 71, 77, 85, 88, 93, 99, 111, 112, 123, 125, 133, 134, 153, 154, 162, 163, 174, 177, 187, 197, 203, 204, 209, 213, 222, 224, 227, 229, 235, 236, 237, 239, 242, 244], "cellul": [51, 53, 189, 190, 203, 213], "S": [2, 33, 51, 56, 69, 70, 77, 85, 86, 94, 95, 108, 110, 115, 121, 173, 181, 182, 183, 187, 198, 202, 213, 221, 224, 229, 231, 232, 235, 236, 239, 244], "souhait": [1, 2, 4, 14, 33, 34, 38, 50, 51, 56, 62, 69, 71, 79, 81, 83, 84, 88, 95, 98, 99, 105, 108, 110, 112, 113, 114, 121, 123, 133, 137, 144, 153, 156, 160, 162, 170, 177, 183, 187, 189, 190, 193, 195, 197, 200, 201, 203, 204, 213, 221, 225, 227, 229, 231, 235, 236, 237, 239], "addit": [2, 41, 61, 69, 94, 95, 102, 110, 131, 164, 193, 205, 213, 221, 231, 235, 236], "\u00e9critur": [2, 4, 6, 33, 36, 39, 40, 48, 49, 50, 61, 69, 71, 90, 121, 153, 157, 166, 175, 195, 203, 206, 213, 221, 223, 224, 231, 235, 236, 237, 239, 240, 244], "assembl": [38, 56, 70, 74, 135, 178, 213, 237], "r\u00e9pet": [4, 38, 50, 62, 64, 69, 71, 74, 96, 102, 110, 115, 116, 117, 118, 187, 188, 193, 202, 203, 204, 205, 213, 221, 235, 237], "assemblag": [62, 74, 166, 213, 221, 229, 240, 242], "grand": [1, 7, 10, 15, 17, 18, 33, 41, 42, 46, 50, 51, 53, 54, 56, 58, 59, 61, 62, 64, 69, 74, 78, 79, 85, 88, 89, 91, 93, 95, 96, 99, 102, 103, 108, 109, 110, 111, 113, 114, 118, 121, 123, 124, 125, 131, 133, 134, 135, 136, 137, 149, 150, 153, 158, 159, 165, 168, 170, 171, 175, 183, 198, 200, 203, 204, 213, 215, 219, 221, 223, 224, 229, 233, 235, 236, 237, 239, 242, 244], "ressembl": [7, 12, 13, 21, 51, 58, 60, 61, 62, 77, 81, 103, 108, 136, 208, 213, 221, 237, 240], "trou": 213, "rempl": [2, 77, 105, 109, 187, 188, 197, 213, 237, 239, 244], "version": [1, 2, 4, 16, 37, 39, 40, 41, 42, 50, 51, 54, 56, 61, 65, 68, 69, 70, 71, 74, 80, 83, 91, 94, 99, 108, 113, 114, 145, 147, 159, 166, 167, 170, 171, 194, 195, 200, 204, 206, 210, 213, 215, 221, 229, 230, 231, 233, 235, 236, 237, 239, 242, 244], "mainten": [33, 39, 41, 42, 48, 51, 59, 61, 62, 74, 81, 85, 87, 91, 93, 95, 99, 112, 124, 134, 136, 139, 140, 145, 147, 151, 155, 161, 168, 171, 183, 184, 189, 193, 195, 197, 200, 204, 205, 213, 219, 221, 229, 236, 242], "syntax": [40, 41, 50, 51, 69, 72, 104, 165, 203, 205, 206, 213, 223, 229, 234, 237, 240, 243], "lisibl": [46, 51, 85, 145, 150, 153, 193, 213, 227, 229, 230, 235, 236, 237, 239, 240], "32": [0, 2, 31, 36, 50, 51, 53, 54, 77, 83, 84, 90, 93, 95, 99, 102, 108, 131, 132, 138, 141, 142, 149, 150, 152, 156, 162, 163, 171, 172, 175, 183, 184, 204, 213, 231, 236, 237], "prenom": [110, 213, 230, 235, 240], "sloan": 213, "monsieur": [162, 166, 213, 223], "isinst": [39, 87, 139, 151, 153, 171, 172, 185, 213, 224, 235, 240], "d\u00e9termin": [1, 2, 7, 9, 33, 38, 41, 50, 56, 58, 59, 60, 61, 62, 69, 95, 96, 99, 110, 111, 112, 113, 114, 120, 137, 170, 183, 184, 187, 203, 204, 205, 209, 213, 221, 227, 229, 231, 235, 236, 239, 242, 244], "lt": [46, 50, 51, 77, 78, 84, 85, 88, 95, 99, 101, 102, 104, 105, 106, 107, 110, 113, 114, 130, 131, 132, 134, 139, 149, 151, 152, 156, 163, 164, 166, 168, 169, 170, 171, 172, 183, 184, 185, 188, 193, 204, 213], "gt": [46, 50, 51, 77, 83, 87, 94, 99, 101, 102, 104, 105, 106, 107, 108, 110, 112, 113, 114, 131, 139, 149, 151, 152, 163, 166, 170, 171, 172, 183, 184, 185, 188, 193, 204, 213], "coupl": [2, 14, 38, 50, 56, 59, 61, 69, 70, 77, 78, 91, 108, 115, 116, 131, 164, 170, 175, 197, 198, 213, 221, 224, 229, 231, 235, 236, 242, 244], "obtent": [213, 224, 236], "vid": [38, 51, 52, 69, 83, 89, 108, 109, 113, 189, 197, 201, 202, 213, 221, 229, 235, 236, 237, 239], "insert": [58, 69, 88, 95, 171, 213, 229, 230, 236], "inser": [10, 46, 51, 58, 59, 69, 81, 88, 89, 105, 121, 152, 171, 187, 213, 221, 224, 227, 229, 230, 233, 235, 236, 239, 242, 244], "del": [2, 39, 69, 85, 88, 102, 105, 117, 134, 171, 177, 203, 213, 221, 231, 235, 236, 237], "supprim": [2, 4, 9, 10, 21, 51, 54, 58, 59, 69, 71, 84, 95, 99, 102, 132, 134, 183, 184, 187, 203, 213, 221, 225, 227, 229, 231, 235, 236, 237, 239, 242], "cr\u00e9ation": [2, 45, 50, 51, 69, 70, 84, 95, 152, 195, 197, 203, 213, 221, 229, 231, 235, 237, 239, 242], "extract": [50, 213], "sous": [1, 2, 8, 10, 14, 23, 27, 38, 46, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 69, 70, 74, 77, 78, 80, 87, 95, 96, 98, 99, 101, 106, 107, 125, 131, 133, 137, 147, 148, 163, 166, 175, 187, 188, 189, 193, 203, 204, 213, 221, 224, 227, 235, 236, 237, 239, 240, 242, 244], "exclu": [2, 33, 42, 69, 74, 100, 113, 114, 158, 206, 213, 229, 231, 235, 236], "remplac": [4, 33, 50, 69, 71, 78, 83, 95, 99, 102, 103, 108, 110, 115, 116, 131, 135, 156, 177, 179, 193, 195, 197, 201, 203, 204, 213, 221, 223, 229, 235, 236, 237, 242, 244], "list1": 213, "list2": 213, "recop": [4, 50, 71, 173, 213, 221, 236], "nom": [21, 39, 46, 50, 51, 54, 56, 58, 69, 70, 74, 83, 95, 99, 100, 137, 141, 150, 157, 162, 163, 166, 174, 177, 197, 203, 204, 210, 213, 221, 224, 229, 230, 235, 236, 240, 242, 244], "l1": [2, 4, 41, 61, 71, 213, 221, 231, 235, 236], "l2": [2, 4, 41, 61, 69, 71, 108, 213, 221, 231, 235, 236], "apparent": [51, 178, 213, 229, 236], "explicit": [4, 30, 41, 50, 55, 62, 69, 70, 71, 100, 101, 120, 153, 166, 213, 221, 223, 224, 226, 229, 235, 236, 239, 242], "oubli": [46, 51, 83, 115, 116, 173, 183, 184, 203, 213, 214, 221, 235, 237, 239, 242], "convent": [50, 51, 53, 54, 61, 69, 81, 154, 157, 193, 203, 204, 213, 224, 226, 236], "interpret": [14, 22, 32, 51, 62, 81, 133, 144, 170, 171, 205, 213, 221, 224, 235, 236, 241], "alourd": 213, "permettent": [2, 14, 51, 56, 62, 64, 69, 70, 74, 77, 110, 151, 155, 157, 171, 193, 203, 204, 213, 221, 223, 224, 227, 229, 231, 235, 236, 237, 239, 242, 244], "choix": [27, 33, 56, 94, 95, 98, 99, 115, 120, 133, 135, 154, 187, 188, 204, 209, 213, 221, 235, 236, 240], "condit": [1, 33, 50, 51, 54, 59, 69, 70, 75, 77, 99, 102, 103, 131, 145, 150, 168, 187, 197, 200, 213, 221, 229, 235, 236, 237, 239, 242], "s\u00e9quenc": [1, 33, 61, 77, 78, 80, 84, 94, 125, 166, 178, 181, 182, 187, 192, 203, 210, 213, 233, 235, 240, 242, 244], "claus": [1, 30, 213, 224, 235], "obligatoir": [51, 69, 74, 195, 213, 221, 223, 235], "encha\u00een": [74, 202, 213, 235, 236, 242], "sup\u00e9rieur": [1, 2, 27, 56, 70, 74, 84, 88, 95, 110, 111, 112, 114, 115, 116, 140, 173, 213, 218, 229, 231, 235, 236, 237], "inf\u00e9rieur": [1, 2, 32, 33, 50, 56, 58, 70, 78, 84, 88, 95, 102, 110, 111, 112, 132, 137, 149, 150, 173, 200, 213, 231, 235, 236], "dedan": [95, 164, 213], "dehor": [102, 136, 137, 177, 197, 213, 221], "interrompr": [171, 213, 229, 233, 235], "break": [30, 40, 69, 84, 94, 95, 106, 107, 110, 115, 160, 163, 166, 168, 174, 177, 190, 202, 213, 214, 215, 221, 229, 237, 239], "interrupt": 213, "d\u00e9finit": [27, 59, 60, 72, 86, 112, 197, 213, 229, 242, 244], "observ": [2, 14, 27, 42, 51, 56, 60, 61, 62, 70, 85, 86, 99, 111, 112, 113, 114, 132, 133, 134, 135, 136, 138, 149, 150, 159, 176, 178, 185, 189, 190, 208, 213, 229, 231, 242], "entre": [1, 6, 8, 9, 10, 14, 20, 27, 38, 48, 50, 54, 58, 59, 61, 62, 77, 78, 84, 86, 87, 88, 89, 94, 95, 96, 98, 99, 105, 108, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 125, 130, 133, 134, 137, 140, 145, 147, 148, 149, 152, 155, 160, 168, 175, 183, 184, 186, 187, 188, 191, 192, 194, 197, 200, 201, 203, 204, 205, 206, 213, 221, 224, 229, 231, 232, 235, 236, 237, 239, 240, 242, 244], "19": [4, 30, 41, 42, 46, 50, 51, 53, 54, 56, 71, 77, 82, 83, 84, 85, 88, 95, 99, 102, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 130, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 149, 150, 159, 160, 163, 169, 170, 171, 172, 173, 174, 175, 178, 183, 184, 186, 193, 197, 200, 203, 204, 206, 213, 214, 221, 232, 235, 236, 242, 244], "enumerat": [2, 27, 78, 83, 84, 85, 88, 95, 96, 101, 104, 108, 110, 111, 115, 117, 118, 131, 132, 136, 140, 149, 151, 153, 155, 163, 165, 166, 168, 174, 175, 184, 188, 197, 198, 204, 213, 214, 215, 219, 225, 227, 230, 231, 235, 237], "Que": [1, 41, 50, 51, 87, 102, 103, 104, 105, 112, 165, 172, 179, 185, 187, 203, 209, 213], "vaut": [2, 38, 52, 56, 61, 62, 64, 69, 85, 91, 98, 99, 102, 103, 104, 111, 112, 154, 163, 166, 193, 197, 213, 214, 221, 229, 231, 235, 236, 239, 240, 242], "exampl": [5, 11, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 65, 68, 71, 72, 79, 96, 121, 151, 213, 229, 231, 246], "set": [1, 4, 11, 30, 51, 54, 62, 69, 71, 77, 78, 84, 87, 94, 107, 124, 131, 136, 139, 151, 158, 161, 177, 213, 221, 225, 229, 230, 235, 242], "lesqueel": 213, "uniqu": [4, 7, 14, 32, 50, 51, 53, 54, 61, 69, 70, 71, 82, 84, 94, 101, 120, 134, 139, 151, 158, 163, 189, 191, 192, 193, 194, 198, 209, 213, 214, 221, 224, 229, 233, 235, 236, 237, 240, 242], "33": [0, 36, 46, 50, 51, 53, 54, 83, 99, 102, 108, 116, 122, 132, 138, 139, 142, 148, 149, 150, 152, 162, 163, 171, 183, 184, 197, 200, 213], "li": [2, 21, 27, 30, 33, 41, 59, 61, 69, 83, 85, 102, 133, 158, 173, 175, 180, 184, 204, 213, 221, 223, 229, 231, 235, 236, 237, 239, 240, 244], "34": [0, 26, 36, 46, 50, 51, 53, 54, 56, 62, 70, 79, 84, 87, 93, 95, 99, 102, 104, 108, 110, 121, 130, 132, 134, 139, 143, 144, 149, 163, 165, 166, 171, 183, 184, 188, 197, 204, 210, 213, 221], "cherch": [1, 2, 4, 33, 38, 50, 51, 52, 54, 56, 59, 61, 62, 69, 71, 74, 83, 86, 88, 94, 95, 96, 108, 110, 111, 112, 115, 116, 117, 118, 121, 123, 131, 133, 139, 141, 142, 143, 147, 153, 156, 159, 164, 170, 173, 174, 177, 179, 180, 181, 182, 183, 187, 190, 191, 192, 197, 199, 206, 209, 213, 214, 215, 219, 221, 223, 224, 229, 231, 235, 236, 239, 244], "e": [1, 6, 11, 27, 33, 38, 39, 40, 41, 49, 50, 51, 53, 54, 56, 59, 62, 69, 77, 80, 87, 88, 94, 95, 96, 97, 119, 122, 124, 134, 142, 149, 151, 152, 154, 162, 165, 174, 175, 178, 183, 184, 187, 188, 189, 197, 198, 202, 204, 205, 206, 209, 210, 213, 215, 219, 221, 224, 225, 229, 230, 235, 236, 237, 239, 240, 242, 244], "commenc": [2, 4, 12, 13, 14, 27, 30, 33, 50, 56, 60, 61, 62, 69, 70, 71, 74, 79, 81, 82, 93, 94, 95, 99, 100, 103, 110, 111, 119, 120, 124, 132, 147, 161, 175, 190, 197, 200, 203, 204, 209, 213, 214, 219, 229, 235, 236, 237, 242, 244], "plac": [2, 6, 8, 9, 10, 30, 56, 58, 69, 71, 74, 94, 95, 108, 110, 113, 114, 134, 139, 153, 156, 172, 175, 177, 187, 204, 210, 213, 221, 231, 235, 236, 237, 239, 242, 244], "sait": [38, 41, 51, 61, 74, 83, 88, 94, 95, 110, 115, 116, 117, 118, 119, 147, 151, 153, 155, 160, 171, 187, 200, 203, 206, 213, 224, 225, 235, 236, 242], "comparaison": [22, 39, 53, 62, 69, 91, 99, 131, 136, 142, 149, 156, 166, 213, 221, 232, 236], "\u00e9limin": [2, 18, 30, 94, 213, 231, 244], "moiti": [2, 42, 59, 77, 81, 121, 173, 213, 214, 231], "p": [1, 9, 10, 11, 27, 30, 31, 33, 40, 56, 59, 62, 65, 68, 69, 77, 84, 87, 88, 92, 93, 94, 96, 99, 108, 110, 115, 116, 119, 123, 132, 134, 138, 150, 151, 153, 155, 156, 158, 159, 162, 166, 170, 171, 172, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 200, 204, 210, 213, 215, 216, 218, 219, 221, 230, 235, 237, 244], "raison": [1, 6, 14, 33, 42, 54, 56, 61, 62, 64, 69, 71, 93, 100, 102, 105, 108, 110, 123, 137, 144, 147, 186, 188, 193, 204, 209, 213, 221, 229, 235], "r\u00e9duir": [1, 14, 34, 51, 56, 59, 69, 74, 134, 149, 208, 213, 236, 237, 240], "doit": [2, 4, 7, 41, 51, 54, 56, 58, 59, 62, 64, 69, 70, 71, 74, 77, 81, 85, 95, 101, 110, 111, 114, 115, 116, 117, 118, 120, 134, 139, 142, 144, 149, 151, 155, 166, 175, 177, 181, 182, 187, 190, 193, 195, 198, 205, 213, 221, 224, 229, 231, 233, 235, 236, 237, 239, 240, 244], "question": [1, 22, 27, 30, 41, 50, 51, 53, 56, 61, 69, 74, 83, 86, 88, 89, 94, 95, 98, 99, 100, 101, 103, 108, 110, 111, 113, 115, 116, 117, 118, 120, 133, 163, 174, 179, 199, 205, 213, 215, 221, 222, 229, 235, 242], "classiqu": [1, 6, 49, 50, 55, 56, 58, 71, 88, 89, 94, 121, 203, 213, 222, 228, 234], "atteindr": [77, 131, 177, 189, 213], "passag": [2, 41, 50, 56, 69, 102, 158, 159, 187, 213, 218, 231, 233, 235, 236, 237], "experim": 213, "g\u00e9n\u00e9ral": [41, 51, 52, 59, 61, 62, 69, 74, 113, 123, 133, 140, 142, 178, 187, 204, 209, 213, 219, 221, 224, 225, 229, 235, 236, 240, 242], "curieux": 214, "puisqu": [2, 14, 36, 50, 54, 56, 59, 61, 62, 85, 88, 91, 93, 94, 95, 99, 100, 102, 103, 108, 115, 131, 134, 145, 146, 159, 164, 170, 171, 178, 197, 200, 214, 221, 224, 229, 231, 235, 236, 242], "indiqu": [14, 38, 39, 46, 50, 51, 54, 61, 62, 69, 74, 82, 83, 103, 110, 120, 130, 131, 137, 139, 147, 149, 151, 166, 189, 200, 203, 206, 209, 214, 221, 224, 227, 229, 235, 236, 237, 239, 240, 242], "ains": [2, 51, 56, 59, 69, 77, 100, 104, 108, 116, 152, 162, 186, 206, 214, 221, 224, 225, 229, 231, 235, 236, 237, 242], "arr\u00eat": [33, 56, 69, 114, 120, 132, 133, 159, 164, 170, 197, 203, 214, 224, 227, 235, 242], "tomb": [56, 61, 70, 110, 117, 118, 164, 201, 202, 208, 214, 221, 229], "z\u00e9ro": [2, 41, 50, 51, 69, 77, 83, 214, 224, 229, 236], "td2_1": [203, 214], "tous": [1, 2, 4, 7, 10, 30, 32, 33, 34, 38, 41, 42, 50, 51, 53, 58, 59, 61, 62, 69, 71, 72, 74, 77, 78, 81, 83, 84, 86, 88, 94, 95, 101, 108, 110, 113, 114, 120, 121, 125, 131, 133, 134, 135, 136, 142, 143, 145, 149, 152, 153, 154, 158, 170, 177, 187, 189, 190, 197, 198, 203, 204, 214, 221, 224, 229, 231, 232, 235, 236, 237, 239, 240, 242, 244], "revu": [38, 58, 83, 190, 214, 241], "criter": [56, 84, 214, 239], "vis": [74, 214, 237], "sinon": [7, 10, 50, 59, 62, 69, 70, 74, 78, 83, 84, 88, 89, 96, 100, 103, 107, 108, 110, 111, 120, 140, 164, 173, 183, 184, 187, 197, 200, 202, 214, 229, 235, 236, 239, 242, 244], "divis": [1, 2, 14, 41, 50, 51, 56, 59, 69, 77, 78, 83, 96, 102, 110, 112, 115, 116, 147, 148, 154, 164, 170, 173, 181, 182, 189, 197, 199, 214, 223, 224, 235, 236], "pein": [2, 100, 204, 214, 231], "quitt": [2, 56, 71, 204, 209, 214, 235], "d\u00e9clench": [2, 4, 50, 69, 71, 102, 105, 110, 114, 155, 197, 206, 214, 221, 224, 227, 229, 235, 236, 242], "s\u00fbr": [2, 14, 27, 41, 42, 61, 62, 81, 85, 88, 91, 93, 95, 105, 110, 137, 144, 148, 188, 193, 214, 231, 236, 237], "frac": [8, 27, 33, 41, 50, 53, 55, 56, 58, 59, 61, 62, 77, 83, 85, 86, 88, 100, 101, 102, 103, 110, 111, 112, 114, 115, 116, 124, 131, 134, 135, 164, 176, 179, 180, 181, 182, 183, 186, 189, 199, 200, 208, 214, 216, 221], "sim": [1, 33, 50, 56, 62, 70, 83, 85, 86, 98, 99, 124, 131, 135, 181, 182, 198, 200, 214, 221], "ln_2": [83, 101, 173, 198, 214], "1000000": [53, 158, 214, 221, 239], "log2": 214, "456217": 214, "931568569324174": 214, "134146": 214, "166639": 214, "922092": 214, "728522": 214, "162931": 214, "741312": 214, "195045": 214, "642304": 214, "685730": 214, "professeur": [60, 215], "examen": [19, 61, 72, 97, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 215], "Son": [59, 61, 77, 87, 159, 215, 221, 229, 235, 237], "dix": [38, 56, 74, 77, 120, 205, 209, 215, 221, 235, 236], "fauss": [41, 91, 134, 171, 191, 192, 215, 235], "array": [1, 27, 31, 36, 39, 41, 45, 49, 53, 54, 55, 56, 58, 59, 62, 69, 70, 77, 78, 82, 83, 84, 85, 86, 88, 92, 93, 99, 103, 111, 112, 115, 116, 117, 118, 119, 123, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 156, 159, 160, 169, 171, 172, 175, 176, 179, 180, 183, 184, 185, 187, 188, 191, 192, 200, 202, 215, 218, 240, 242], "or": [1, 2, 4, 11, 27, 30, 40, 41, 42, 46, 50, 54, 56, 69, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 96, 99, 101, 102, 104, 108, 112, 113, 114, 115, 116, 121, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 161, 163, 171, 177, 185, 189, 190, 191, 192, 195, 196, 200, 215, 216, 218, 224, 229, 231, 235, 236, 239, 240, 244], "facult": [69, 70, 215, 221, 224, 235, 236, 244], "just": [2, 4, 11, 30, 39, 42, 50, 56, 62, 70, 71, 83, 91, 113, 115, 124, 143, 144, 153, 164, 171, 183, 195, 215, 223, 224, 231, 235, 236], "__len__": [215, 221], "n_question": 215, "sum": [2, 6, 31, 37, 49, 50, 51, 53, 54, 55, 64, 69, 78, 82, 83, 84, 85, 86, 89, 93, 95, 99, 100, 101, 102, 104, 111, 112, 113, 114, 119, 123, 131, 134, 155, 159, 164, 171, 176, 184, 185, 186, 194, 195, 196, 197, 206, 210, 215, 231, 235, 236, 244], "tir": [9, 10, 37, 50, 51, 53, 56, 58, 61, 84, 85, 86, 88, 93, 99, 105, 111, 115, 116, 117, 118, 143, 152, 159, 164, 175, 181, 182, 189, 190, 191, 192, 200, 202, 207, 208, 215, 239, 242], "hasard": [61, 62, 80, 86, 88, 89, 93, 108, 117, 118, 137, 147, 156, 202, 215, 239, 242], "45454545454545453": 215, "5050000000000003": [200, 215], "tout": [1, 2, 4, 7, 11, 14, 18, 21, 22, 27, 30, 33, 35, 38, 39, 41, 42, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 69, 70, 71, 74, 77, 78, 80, 81, 82, 83, 85, 86, 87, 91, 93, 95, 96, 99, 100, 105, 108, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 131, 133, 137, 139, 142, 143, 146, 148, 151, 152, 153, 159, 161, 162, 163, 164, 168, 172, 174, 175, 177, 178, 179, 183, 184, 186, 187, 188, 189, 190, 193, 194, 197, 198, 200, 203, 204, 205, 208, 209, 215, 218, 219, 221, 225, 227, 229, 231, 233, 235, 236, 237, 240, 242, 244], "glouton": 215, "Mais": [2, 14, 41, 42, 46, 51, 53, 61, 62, 69, 81, 83, 86, 87, 91, 93, 95, 96, 99, 101, 102, 104, 123, 131, 137, 139, 140, 144, 150, 151, 152, 153, 157, 173, 175, 178, 187, 197, 203, 208, 209, 215, 218, 221, 225, 231, 236, 242, 244], "trop": [2, 7, 9, 10, 14, 33, 38, 46, 50, 51, 54, 56, 58, 59, 60, 61, 69, 74, 77, 81, 85, 88, 91, 93, 95, 99, 107, 110, 118, 120, 131, 136, 150, 170, 171, 172, 183, 184, 193, 203, 215, 224, 231, 235, 236, 237, 239, 240, 242], "intuit": [14, 42, 54, 61, 62, 81, 108, 152, 215, 221], "mieux": [1, 2, 14, 15, 35, 41, 42, 52, 56, 60, 61, 64, 69, 85, 88, 91, 93, 94, 99, 111, 113, 114, 116, 123, 130, 131, 133, 134, 136, 139, 141, 142, 148, 150, 152, 160, 163, 166, 168, 170, 203, 205, 215, 221, 229, 231, 239, 240, 242], "r\u00e9pondu": [95, 116, 215], "croiss": [33, 51, 53, 56, 59, 69, 83, 87, 95, 99, 110, 112, 113, 114, 149, 159, 160, 162, 187, 188, 197, 215, 221, 235, 236], "taux": [14, 56, 78, 85, 110, 130, 137, 142, 171, 205, 215, 237], "5": [1, 2, 4, 6, 7, 9, 10, 11, 12, 26, 27, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 46, 49, 50, 52, 53, 54, 55, 56, 61, 62, 69, 70, 71, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 193, 194, 195, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 215, 216, 218, 219, 221, 223, 224, 229, 230, 231, 232, 235, 236, 237, 239, 242, 244], "baremeopt": 215, "optimiz": [21, 50, 56, 113, 114, 132, 138, 193, 215], "matrice_not": 215, "axis": [50, 51, 53, 54, 55, 84, 85, 86, 88, 89, 93, 99, 112, 115, 116, 123, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 176, 215], "els_pos": 215, "perm": [14, 33, 51, 62, 74, 75, 83, 88, 89, 92, 96, 153, 171, 215, 223], "copy": [4, 30, 41, 42, 46, 51, 54, 62, 69, 71, 75, 77, 78, 84, 85, 88, 89, 94, 95, 99, 100, 108, 112, 113, 115, 116, 117, 119, 132, 137, 138, 150, 153, 161, 162, 164, 169, 178, 179, 184, 215, 218, 235, 236, 237, 239, 242], "6": [2, 4, 7, 11, 16, 18, 26, 27, 34, 35, 39, 41, 42, 46, 49, 50, 52, 53, 54, 55, 56, 62, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 189, 192, 193, 194, 195, 196, 197, 198, 200, 202, 206, 215, 216, 219, 221, 223, 227, 229, 230, 231, 232, 233, 235, 236, 242, 244], "49000000000000005": 215, "4890909090909088": 215, "Est": [41, 42, 50, 61, 84, 110, 162, 171, 179, 180, 183, 187, 194, 215], "id\u00e9": [2, 14, 33, 56, 58, 59, 61, 62, 77, 78, 79, 81, 82, 83, 88, 90, 95, 99, 108, 110, 117, 118, 122, 123, 131, 132, 135, 142, 159, 160, 166, 171, 177, 178, 186, 187, 209, 215, 219, 229, 231, 237], "7": [1, 2, 4, 11, 18, 26, 31, 34, 37, 41, 42, 46, 50, 51, 52, 53, 55, 56, 62, 64, 68, 69, 71, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 193, 194, 195, 198, 200, 202, 206, 209, 210, 215, 216, 219, 221, 225, 230, 231, 232, 235, 236, 237, 242, 244], "m1": [41, 80, 81, 85, 87, 91, 108, 113, 114, 215, 216, 229], "m2": [33, 41, 80, 81, 87, 91, 108, 113, 114, 119, 215, 216, 221, 229, 242], "assur": [2, 23, 50, 56, 62, 69, 74, 79, 95, 110, 134, 149, 162, 171, 177, 183, 215, 229, 239, 240, 242], "baremeopt2": 215, "l\u00e0": [14, 51, 53, 54, 56, 62, 64, 69, 85, 88, 95, 112, 117, 118, 131, 154, 215, 221, 225], "v_i": [58, 59, 78, 215], "v_j": [59, 78, 215], "b_i": [51, 189, 215], "b_j": 215, "quantit": [27, 41, 56, 61, 62, 70, 112, 114, 190, 209, 215], "vari": [50, 56, 61, 69, 88, 118, 121, 134, 166, 187, 215, 221, 236, 237], "locat": [4, 7, 46, 71, 163, 191, 192, 215], "ski": [187, 188, 215], "skis": [188, 215], "skieur": [187, 188, 215], "op\u00e9rationnel": [1, 4, 71, 215], "dynam": [1, 19, 61, 83, 85, 94, 215, 221, 236], "markov": [1, 58, 61, 215], "attent": [4, 14, 16, 32, 42, 50, 56, 69, 71, 85, 95, 174, 204, 215, 224, 233, 235, 239], "rais": [31, 64, 69, 70, 80, 91, 96, 110, 119, 120, 139, 149, 151, 153, 155, 171, 177, 202, 216, 218, 221, 224, 225, 235, 244], "valueerror": [46, 50, 53, 80, 139, 142, 171, 177, 216, 218, 224, 225, 235, 236], "march": [10, 16, 38, 41, 42, 51, 61, 70, 81, 84, 93, 94, 96, 112, 113, 117, 118, 124, 131, 133, 137, 139, 144, 145, 160, 163, 210, 216, 221, 235, 236, 242], "remuner": 216, "renumer": 216, "distance_1": 216, "best": [1, 30, 83, 85, 87, 92, 110, 116, 117, 118, 131, 165, 188, 190, 216], "m3": [85, 216, 229], "test_distance_1": 216, "fdist": 216, "remunner": 216, "distance_n": 216, "test_distance_n": 216, "ii": [101, 171, 216], "iji": 216, "q": [33, 56, 58, 67, 84, 87, 94, 108, 119, 181, 182, 189, 190, 204, 216], "left": [31, 41, 50, 51, 53, 56, 59, 62, 70, 83, 88, 103, 110, 112, 120, 131, 134, 136, 149, 152, 154, 168, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 199, 200, 216, 229, 235, 236], "right": [27, 31, 41, 50, 51, 53, 56, 59, 62, 65, 70, 75, 77, 83, 88, 103, 110, 112, 120, 131, 134, 152, 154, 163, 168, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 199, 200, 210, 216, 229, 236], "np": [6, 19, 42, 49, 50, 55, 58, 61, 92, 95, 115, 116, 133, 135, 155, 172, 179, 180, 183, 216, 218], "distance_levenstein": 216, "dist": [4, 9, 51, 56, 84, 89, 92, 117, 118, 123, 145, 171, 185, 187, 188, 216, 237], "zeros": [31, 36, 50, 53, 55, 77, 81, 84, 85, 86, 111, 115, 116, 119, 133, 135, 156, 171, 172, 177, 184, 202, 216], "min": [2, 31, 42, 50, 51, 56, 62, 69, 70, 78, 80, 81, 83, 84, 88, 89, 91, 99, 100, 106, 110, 111, 112, 115, 116, 120, 123, 133, 136, 140, 144, 145, 149, 151, 155, 177, 187, 188, 190, 194, 216, 219, 231, 235, 236], "distance_levenstein_alignment": 216, "pred": [27, 99, 111, 117, 118, 132, 133, 134, 137, 139, 140, 146, 149, 190, 216], "char": [51, 162, 216, 229], "revers": [31, 42, 69, 94, 153, 159, 188, 190, 216, 235, 236], "remunereer": 216, "rennnumer": 216, "munereer": 216, "rennnum": 216, "er": [134, 175, 216], "cost": [31, 120, 216], "c1": [51, 52, 80, 81, 108, 130, 194, 216, 221, 236], "c2": [51, 52, 80, 81, 108, 118, 130, 194, 216, 221, 236], "e\u00e9\u00eae": 216, "and": [1, 4, 10, 11, 22, 27, 30, 31, 33, 38, 39, 46, 51, 56, 68, 69, 71, 75, 77, 78, 79, 80, 84, 85, 87, 88, 95, 99, 102, 105, 106, 107, 108, 110, 113, 114, 131, 132, 135, 139, 145, 147, 149, 151, 156, 159, 161, 164, 168, 169, 171, 177, 191, 192, 193, 194, 198, 203, 210, 216, 221, 225, 229, 235, 236, 237, 239, 240, 242], "distance_levenstein_alignment_accent": 216, "r\u00e9munner": 216, "r\u00e9mu": 216, "ner": 216, "renuumer": 216, "\u00e9dit": [1, 15, 19, 20, 61, 125, 190, 217, 220], "octobr": [97, 217, 220], "pr\u00e9fix": [20, 87, 94, 204, 217, 220, 224, 236, 237, 239], "optimis": [1, 20, 21, 40, 48, 49, 53, 58, 59, 62, 77, 88, 92, 93, 94, 112, 123, 124, 131, 133, 166, 170, 171, 172, 178, 187, 193, 194, 217, 220, 230, 236, 238], "36": [0, 31, 46, 50, 51, 54, 55, 56, 95, 99, 108, 116, 124, 142, 171, 183, 184, 197, 204, 206, 218, 232, 236], "testing": [120, 123, 131, 171, 218], "assert_almost_equal": [120, 171, 218], "pivot_gauss": [163, 169, 218], "M": [41, 50, 51, 55, 56, 61, 78, 94, 110, 111, 112, 114, 115, 116, 119, 123, 162, 176, 179, 180, 183, 184, 187, 189, 194, 198, 200, 204, 210, 218, 229, 232, 236, 244], "shap": [6, 22, 31, 36, 49, 51, 53, 54, 55, 78, 82, 84, 85, 86, 88, 89, 92, 93, 99, 111, 112, 115, 116, 119, 120, 123, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 147, 148, 149, 156, 163, 164, 169, 171, 172, 174, 176, 177, 179, 180, 186, 187, 202, 218, 242], "eye": 218, "transform": [1, 2, 4, 6, 46, 49, 53, 59, 62, 71, 84, 85, 86, 87, 91, 94, 99, 101, 110, 111, 112, 114, 136, 149, 150, 162, 171, 175, 186, 202, 218, 231, 233, 235, 237], "triangulair": [50, 84, 218], "test_pivot_gauss": 218, "identity": [1, 53, 123, 218], "dtyp": [31, 50, 51, 53, 54, 55, 77, 84, 85, 99, 119, 123, 144, 150, 155, 156, 171, 187, 188, 202, 218], "float64": [6, 50, 51, 53, 54, 71, 85, 99, 150, 218, 242], "dispos": [1, 14, 56, 62, 69, 95, 99, 108, 110, 111, 112, 117, 118, 123, 133, 170, 187, 189, 193, 219, 221, 225, 229, 236, 237, 239], "conna\u00eetr": [1, 2, 4, 14, 52, 61, 69, 71, 79, 91, 95, 121, 219, 221, 229, 230, 231, 236, 237, 244], "certain": [1, 4, 9, 14, 39, 42, 46, 51, 53, 54, 56, 57, 58, 59, 62, 64, 69, 70, 71, 74, 77, 83, 101, 110, 132, 152, 154, 158, 173, 174, 187, 193, 195, 200, 203, 204, 209, 219, 221, 223, 224, 227, 229, 232, 235, 236, 237, 239, 240, 242, 244], "abc": [80, 87, 120, 162, 219, 236], "abn": 219, "aer": 219, "bii": 219, "be": [1, 2, 4, 10, 11, 30, 46, 50, 54, 65, 75, 85, 99, 131, 139, 145, 147, 171, 191, 192, 204, 219, 229, 231, 235], "bjk": 219, "cap": [56, 110, 181, 182, 219], "cbb": 219, "position_premiere_lettr": 219, "prefix": [94, 219, 236], "startswith": [94, 124, 219, 236], "ae": 219, "position_lettr": 219, "position_deux_lettr": 219, "pos1": [219, 229], "pos2": [219, 229], "r\u00e9curs": [1, 2, 30, 69, 79, 80, 81, 83, 108, 120, 135, 166, 187, 190, 219, 236, 237, 242], "build_dictionary": 219, "increment": 219, "premiere_lettr": 219, "dico": [91, 96, 108, 219, 230, 237], "position1": 219, "position_lettre_apr": 219, "position2": 219, "sous_mot": 219, "sous_mots_1": 219, "sous_dico": 219, "ensuit": [2, 30, 38, 46, 50, 51, 54, 56, 59, 60, 70, 74, 88, 89, 93, 95, 99, 131, 134, 161, 162, 163, 170, 173, 179, 193, 197, 200, 209, 219, 221, 223, 224, 229, 231, 235, 236, 240, 242, 244], "acc\u00e9ler": [39, 40, 41, 51, 59, 61, 62, 89, 170, 171, 185, 186, 198, 219, 236, 241], "position_prefixe_dico": 219, "gain": [51, 56, 59, 70, 123, 124, 131, 142, 156, 219, 239], "log_2": 219, "latin": [2, 71, 204, 210, 219, 233, 236], "avantag": [2, 59, 62, 144, 204, 219, 221, 229, 231, 235, 236, 237], "pet": [2, 4, 6, 14, 15, 33, 35, 37, 41, 50, 53, 56, 61, 69, 71, 77, 78, 81, 83, 85, 87, 93, 95, 96, 100, 102, 108, 110, 115, 120, 121, 131, 133, 139, 162, 165, 166, 176, 187, 195, 200, 205, 210, 219, 224, 231, 235, 236], "cro\u00eetr": [99, 219], "petit": [4, 18, 33, 51, 56, 59, 60, 61, 66, 71, 82, 86, 87, 88, 95, 108, 110, 131, 134, 137, 168, 175, 183, 195, 199, 204, 207, 208, 209, 219, 229, 235, 236, 239, 244], "2023": [30, 54, 69, 85, 95, 97, 119, 220], "imaginon": [123, 190, 193, 221], "banqu": [56, 70, 110, 221], "d\u00e9tien": 221, "conten": [7, 50, 51, 58, 69, 70, 74, 121, 166, 179, 180, 190, 193, 205, 221, 224, 229, 235, 236, 237, 244], "inform": [1, 2, 7, 14, 27, 30, 38, 39, 40, 41, 46, 51, 56, 61, 62, 69, 70, 74, 78, 81, 96, 98, 99, 115, 116, 132, 133, 137, 143, 151, 163, 166, 171, 174, 175, 203, 206, 221, 224, 225, 227, 229, 231, 233, 235, 237, 239, 240, 244], "client": [14, 51, 204, 221], "impossibl": [4, 30, 38, 39, 41, 42, 56, 61, 62, 70, 71, 78, 84, 85, 91, 96, 102, 131, 148, 197, 221, 227, 235, 236, 237, 239, 240], "th\u00e9or": [1, 62, 132, 221], "banqui": 221, "concern": [4, 27, 51, 56, 59, 69, 71, 74, 204, 221, 224, 229, 233, 235, 236, 237, 242, 244], "d\u00e9tenu": 221, "rectifi": 221, "elles": [2, 3, 4, 9, 10, 34, 38, 39, 48, 50, 54, 56, 58, 59, 61, 62, 69, 70, 71, 74, 82, 85, 87, 93, 95, 117, 118, 119, 120, 121, 137, 186, 187, 197, 203, 204, 221, 223, 224, 229, 231, 235, 236, 237, 239, 242, 244], "incorrect": [69, 104, 221], "vu": [14, 50, 54, 62, 85, 94, 149, 157, 175, 187, 204, 221, 229, 236], "ext\u00e9rieur": [59, 69, 197, 221, 229, 235, 236, 241], "intern": [221, 238], "servic": [16, 56, 67, 204, 221, 240], "consider": [2, 3, 4, 14, 33, 38, 41, 50, 51, 54, 56, 58, 59, 61, 62, 64, 69, 71, 79, 81, 83, 95, 99, 101, 102, 110, 112, 113, 116, 117, 118, 120, 121, 131, 132, 133, 149, 154, 168, 171, 175, 177, 188, 189, 190, 193, 197, 205, 209, 221, 223, 225, 229, 231, 235, 236, 239, 242, 244], "informat": [1, 30, 41, 56, 69, 157, 166, 193, 200, 221, 223, 233, 235, 237], "term": [1, 33, 56, 61, 69, 70, 83, 115, 116, 124, 156, 178, 186, 221, 235, 236, 237, 240, 242, 244], "concret": [53, 61, 131, 221, 224, 236, 242], "regroup": [14, 30, 50, 53, 56, 58, 69, 89, 193, 221, 223, 224, 229, 235, 236, 237, 239, 240], "accessibl": [4, 46, 56, 70, 71, 119, 188, 203, 221, 229, 235, 236, 237, 239], "nom_cl": [70, 221], "corp": [70, 221, 235], "inclur": [1, 39, 46, 69, 83, 171, 221, 223, 229, 235, 236, 239, 244], "indent": [4, 69, 71, 152, 154, 206, 221, 224, 234], "interpr\u00e9teur": [2, 4, 32, 69, 70, 71, 74, 88, 151, 156, 171, 206, 221, 224, 225, 235, 236, 239], "forment": 221, "propr": [1, 4, 22, 39, 41, 46, 50, 53, 54, 56, 69, 70, 71, 84, 94, 135, 136, 155, 179, 180, 183, 184, 221, 226, 227, 229, 235, 236, 240, 242], "pr\u00e9d\u00e9fin": [221, 225, 242, 244], "inclut": [2, 41, 46, 69, 70, 83, 113, 114, 190, 193, 221, 224, 231, 235, 236, 237, 239, 242], "colon": [2, 6, 14, 49, 51, 53, 61, 69, 91, 98, 112, 116, 143, 163, 175, 183, 187, 193, 202, 203, 221, 229, 231, 237, 244], "coefficient": [7, 10, 22, 50, 53, 56, 78, 84, 91, 95, 98, 99, 101, 110, 111, 112, 131, 135, 137, 175, 186, 194, 197, 221], "tel": [1, 2, 14, 19, 39, 46, 51, 56, 58, 59, 61, 62, 69, 78, 83, 84, 86, 95, 99, 110, 111, 112, 113, 114, 131, 134, 153, 159, 164, 165, 166, 178, 179, 180, 181, 182, 183, 187, 188, 189, 191, 192, 195, 197, 200, 203, 204, 206, 209, 221, 229, 231, 235, 236, 237, 239, 241, 244], "soustract": [69, 193, 221, 232, 235, 236], "invers": [1, 6, 10, 30, 39, 41, 42, 49, 50, 51, 56, 59, 69, 70, 77, 85, 110, 120, 124, 141, 153, 166, 175, 179, 194, 203, 204, 208, 221, 224, 229, 233, 236, 237, 240, 242], "transposit": 221, "diagonalis": [41, 179, 221], "exhaust": [56, 57, 133, 221, 229, 235, 236, 237], "complex": [1, 4, 30, 56, 59, 69, 71, 74, 77, 81, 95, 133, 166, 203, 205, 221, 229, 235, 239, 240], "dimens": [2, 14, 33, 38, 41, 51, 53, 54, 58, 61, 62, 69, 84, 112, 115, 121, 125, 133, 134, 135, 139, 171, 173, 176, 183, 193, 208, 221, 229, 236, 237], "capabl": [1, 33, 60, 92, 153, 183, 209, 221, 229, 237, 239, 242], "r\u00e9dig": [89, 221, 236], "Leur": [56, 69, 221, 236], "am\u00e9lior": [10, 14, 42, 53, 56, 58, 59, 61, 62, 70, 81, 94, 142, 148, 186, 190, 221, 225, 235, 239], "compr\u00e9hens": [56, 187, 221, 236], "passent": [56, 70, 119, 203, 221], "fonctionnel": [1, 38, 69, 74, 221], "font": [4, 11, 30, 32, 50, 56, 59, 60, 69, 71, 81, 84, 115, 116, 131, 203, 204, 221, 224, 229, 235, 236, 237, 242], "arrier": [83, 166, 221], "instanti": 221, "schem": [2, 59, 69, 101, 198, 221, 224, 229, 231, 235, 237, 240, 242], "cl": [4, 11, 30, 39, 70, 124, 130, 178, 221, 240], "ident": [2, 10, 18, 36, 54, 56, 59, 61, 62, 69, 74, 79, 87, 88, 89, 95, 110, 115, 120, 144, 148, 151, 153, 156, 162, 170, 175, 179, 180, 197, 201, 202, 221, 224, 229, 231, 233, 235, 236, 237, 239, 244], "interven": [2, 59, 95, 120, 159, 221, 229, 231, 237, 242], "parametr": [3, 4, 6, 7, 9, 10, 11, 12, 13, 38, 41, 50, 51, 58, 59, 64, 81, 84, 95, 106, 107, 110, 112, 117, 118, 119, 120, 122, 128, 131, 134, 143, 151, 153, 157, 193, 195, 197, 204, 221, 223, 224, 229, 233, 236, 237, 239, 242, 244], "paragraph": [56, 58, 59, 69, 70, 165, 221, 224, 229, 235, 236, 237, 239, 241, 242, 244], "classe_vid": 221, "exemple_cl": [70, 221, 239], "sphinx_runpython": [40, 69, 221, 225, 235, 240], "runpython": [40, 69, 221, 225, 235, 240], "sphinx_runpython_extens": [69, 221, 225, 235, 240], "run_python_script_140615678906240": [], "local": [1, 3, 4, 11, 21, 34, 46, 56, 61, 68, 69, 99, 132, 145, 146, 147, 171, 174, 185, 221, 225, 233, 240, 242], "run_python_script_140615678947008": [], "mani": [2, 4, 27, 30, 41, 50, 51, 56, 58, 59, 61, 69, 70, 71, 77, 133, 141, 146, 153, 167, 187, 206, 221, 224, 225, 229, 231, 233, 235, 236, 237, 240, 242], "Elles": [19, 50, 54, 56, 60, 61, 69, 70, 74, 132, 151, 170, 193, 203, 221, 229, 236, 239], "particular": [54, 70, 75, 191, 192, 221, 236, 237], "privil\u00e9gi": [70, 204, 221, 236], "loin": [33, 46, 61, 62, 94, 95, 133, 146, 171, 221, 235, 236, 237], "lesquel": [1, 33, 50, 51, 56, 59, 62, 81, 84, 95, 149, 178, 191, 192, 221, 235, 237], "nom_method": [70, 221], "param_1": [70, 221, 235], "param_n": [70, 221, 235], "pr\u00e9f\u00e9rent": [56, 58, 176, 221, 235, 236], "rapport": [1, 30, 46, 56, 58, 70, 74, 77, 95, 113, 114, 116, 120, 137, 170, 178, 186, 195, 221, 223, 229, 235, 241, 242], "argument": [2, 4, 34, 37, 50, 51, 56, 69, 101, 113, 114, 177, 179, 191, 192, 195, 196, 209, 221, 224, 229, 235, 236, 237, 239, 242], "re\u00e7oit": [52, 53, 56, 70, 74, 197, 221, 235, 236, 242], "ob\u00e9it": [221, 224, 235], "valeur_1": [70, 221, 235], "valeur_n": [70, 221, 235], "n\u00e9cessit": [14, 41, 56, 69, 74, 100, 115, 130, 134, 188, 206, 221, 229, 237], "abord": [19, 33, 40, 41, 46, 51, 53, 54, 56, 59, 62, 69, 70, 74, 77, 78, 79, 82, 83, 84, 85, 91, 92, 94, 95, 99, 100, 108, 113, 114, 125, 131, 139, 142, 159, 165, 172, 178, 187, 193, 197, 198, 204, 209, 210, 221, 235, 236, 237, 239, 241, 242, 244], "symbol": [50, 69, 102, 112, 197, 203, 204, 210, 221, 235, 236, 237, 239, 242, 244], "tirag": [9, 50, 53, 77, 84, 117, 118, 119, 144, 159, 164, 195, 196, 221], "al\u00e9atoir": [1, 3, 9, 10, 27, 33, 49, 51, 53, 56, 58, 59, 62, 70, 77, 83, 85, 88, 91, 93, 98, 99, 109, 112, 117, 118, 124, 125, 131, 132, 144, 148, 159, 176, 181, 182, 183, 186, 187, 200, 202, 203, 221, 239, 242], "r\u00e9current": [1, 33, 56, 59, 79, 83, 84, 88, 108, 120, 124, 163, 187, 221, 229], "u_": [103, 221], "u_n": [33, 103, 221], "mod": [21, 58, 69, 77, 99, 113, 131, 137, 139, 145, 147, 162, 171, 181, 182, 203, 221, 224, 235, 242], "comport": [37, 56, 62, 69, 77, 85, 113, 187, 221, 229, 236, 237], "imit": 221, "global": [32, 33, 36, 38, 39, 40, 56, 66, 69, 102, 123, 149, 171, 221, 229, 241], "rnd": [31, 53, 78, 85, 115, 116, 119, 122, 131, 135, 146, 149, 159, 164, 168, 186, 221, 230], "42": [36, 46, 50, 51, 54, 56, 62, 70, 85, 95, 99, 108, 130, 131, 132, 134, 138, 139, 141, 142, 150, 171, 183, 184, 197, 210, 221, 236], "methode1": 221, "g\u00e9ner": [1, 27, 40, 49, 51, 52, 53, 54, 69, 77, 101, 111, 112, 113, 114, 115, 116, 119, 159, 163, 179, 180, 183, 202, 203, 209, 221, 224, 225, 229, 236, 239, 240, 242], "397204094": 221, "2147483647": 221, "int": [1, 4, 7, 9, 10, 11, 13, 31, 33, 38, 46, 50, 51, 53, 69, 71, 77, 84, 87, 91, 102, 104, 106, 107, 110, 113, 114, 119, 139, 144, 151, 153, 156, 160, 161, 162, 178, 199, 200, 202, 203, 204, 206, 221, 224, 235, 236, 240, 242], "nb": [4, 9, 10, 12, 13, 30, 32, 46, 50, 51, 52, 71, 79, 84, 89, 91, 95, 102, 106, 107, 108, 115, 116, 132, 151, 156, 200, 221, 229, 235, 239], "46": [46, 50, 51, 52, 53, 54, 91, 99, 110, 134, 141, 165, 171, 183, 184, 210, 221], "88": [26, 55, 56, 62, 77, 95, 112, 119, 131, 143, 144, 164, 167, 204, 221, 229], "44": [36, 46, 50, 51, 54, 56, 70, 95, 112, 116, 131, 134, 149, 165, 171, 183, 184, 185, 210, 221], "56": [2, 26, 50, 51, 54, 62, 95, 99, 111, 112, 115, 116, 130, 131, 136, 143, 144, 150, 195, 210, 221, 231, 244], "nb2": 221, "89": [50, 54, 77, 79, 95, 119, 121, 132, 142, 178, 185, 221, 235], "66": [0, 46, 50, 77, 91, 99, 122, 130, 134, 142, 150, 166, 197, 221], "48": [46, 50, 51, 52, 54, 55, 56, 95, 99, 115, 119, 131, 134, 157, 165, 170, 171, 178, 183, 184, 210, 221], "61": [50, 51, 54, 77, 95, 99, 114, 119, 123, 131, 134, 145, 167, 210, 221, 235], "84": [51, 52, 54, 77, 119, 186, 204, 221], "71": [50, 54, 77, 99, 108, 119, 123, 132, 148, 156, 171, 185, 221, 235], "41": [36, 46, 50, 51, 54, 84, 99, 123, 130, 131, 132, 134, 136, 149, 171, 174, 183, 184, 197, 210, 221, 235, 236], "chacun": [14, 18, 27, 30, 38, 41, 50, 51, 56, 58, 80, 121, 124, 142, 159, 174, 189, 204, 209, 221, 229, 235, 236, 239, 242, 244], "99": [9, 12, 38, 41, 50, 51, 54, 77, 91, 115, 119, 123, 131, 156, 178, 210, 221, 235], "int\u00e9rieur": [69, 70, 193, 197, 221, 224, 229, 235, 236, 237, 242, 244], "imper": [56, 74, 221], "extens": [1, 7, 16, 48, 53, 61, 80, 84, 95, 112, 166, 203, 210, 221, 229, 234, 237, 238, 244], "aut": [1, 9, 56, 59, 60, 61, 69, 81, 84, 101, 108, 112, 113, 121, 131, 133, 150, 188, 193, 195, 197, 198, 221, 229, 235, 236, 237, 242], "applic": [2, 33, 59, 221, 223, 231, 237], "comportent": [70, 221, 235], "manipulent": [56, 151, 221, 223, 233, 237], "segment": [1, 10, 58, 59, 62, 83, 89, 95, 144, 189, 199, 221], "extrem": [56, 59, 61, 78, 84, 95, 113, 132, 221], "san": [1, 2, 14, 33, 35, 38, 41, 46, 50, 53, 54, 55, 56, 60, 61, 62, 69, 70, 74, 77, 81, 84, 88, 89, 91, 93, 96, 99, 100, 101, 105, 108, 115, 116, 119, 120, 123, 125, 133, 135, 136, 141, 147, 151, 152, 160, 175, 176, 177, 186, 187, 195, 197, 204, 205, 209, 221, 224, 225, 227, 229, 231, 235, 236, 238, 239, 240, 241, 242, 244], "nom_attribut": [70, 221], "aucun": [2, 8, 38, 39, 53, 56, 58, 60, 69, 70, 74, 77, 78, 81, 82, 84, 91, 94, 102, 110, 119, 139, 145, 187, 188, 203, 204, 221, 224, 225, 229, 231, 235, 236, 237, 239], "endroit": [2, 61, 69, 74, 95, 113, 163, 221, 225, 227, 229, 233, 235, 236, 237, 239, 242], "pourvu": 221, "runpythonerror": [69, 221, 224, 225, 235, 236, 244], "traceback": [2, 4, 51, 64, 69, 71, 101, 102, 104, 105, 110, 188, 221, 224, 225, 229, 231, 235, 236, 244], "most": [1, 2, 4, 51, 64, 69, 71, 101, 102, 104, 105, 110, 188, 191, 192, 221, 224, 225, 229, 231, 235, 236, 239, 244], "recent": [1, 2, 4, 51, 64, 69, 71, 101, 102, 104, 105, 110, 188, 221, 224, 225, 229, 231, 235, 236, 244], "call": [2, 4, 11, 51, 56, 64, 69, 71, 101, 102, 104, 105, 110, 170, 171, 172, 185, 188, 221, 224, 226, 229, 231, 235, 236, 244], "last": [1, 2, 4, 51, 64, 65, 69, 71, 88, 89, 91, 101, 102, 104, 105, 110, 115, 188, 221, 224, 225, 229, 231, 235, 236, 244], "exec": [68, 170, 185, 221, 224, 225, 236, 239], "obj": [39, 69, 221, 224, 225, 229, 235, 236, 240], "glob": [46, 163, 221, 224, 225, 235, 236, 237, 239, 244], "loc": [27, 51, 54, 77, 99, 132, 136, 140, 163, 221, 224, 225, 235, 236], "run_python_script_140615678700608": [], "listcomp": [170, 171, 172, 185, 221], "attributeerror": [4, 71, 102, 221, 224, 230], "has": [7, 11, 31, 65, 102, 112, 120, 139, 142, 191, 192, 221, 229], "no": [2, 11, 31, 40, 51, 59, 65, 71, 74, 75, 99, 102, 131, 137, 138, 139, 140, 150, 165, 186, 188, 204, 221, 229, 236, 244], "except": [4, 33, 35, 38, 39, 40, 46, 50, 51, 53, 54, 56, 60, 64, 66, 74, 79, 80, 96, 99, 101, 102, 105, 108, 110, 111, 112, 114, 115, 116, 119, 139, 142, 148, 149, 151, 155, 166, 175, 188, 197, 202, 204, 205, 206, 221, 227, 229, 230, 235, 236, 237, 239, 240, 242, 244, 245], "rem\u00e9di": [185, 221, 235, 242], "d\u00e9couvrent": 221, "posent": [112, 221], "util": [1, 33, 41, 50, 51, 56, 58, 63, 64, 69, 81, 85, 88, 92, 112, 123, 125, 133, 134, 151, 154, 165, 185, 195, 197, 203, 221, 224, 227, 229, 235, 236, 237, 242], "concept": [1, 41, 56, 61, 69, 193, 221, 223, 229, 234, 242], "appara\u00eet": [30, 33, 54, 56, 69, 84, 132, 150, 158, 195, 201, 203, 204, 205, 221, 227, 229, 235, 236, 237, 239, 240], "progressivent": 221, "oblig": [56, 62, 157, 204, 221, 222], "appropri": [2, 61, 69, 221, 231], "impos": [32, 40, 42, 51, 56, 166, 221, 229, 236, 240], "horm": [74, 221, 235, 237], "invari": [60, 69, 221], "contraint": [8, 22, 56, 58, 59, 70, 77, 94, 95, 134, 166, 168, 194, 195, 221, 235, 242], "sauf": [53, 61, 69, 95, 147, 148, 189, 200, 221, 239, 242, 244], "emploi": [41, 204, 221, 229, 235, 236], "impliqu": [1, 32, 39, 50, 53, 56, 69, 70, 85, 100, 116, 147, 159, 221, 229, 235, 237], "suppl\u00e9mentair": [10, 39, 41, 50, 56, 69, 102, 135, 221, 224, 229, 236, 239, 242], "classe2": 221, "classe1": 221, "autoris": [2, 94, 114, 153, 204, 221, 229, 231, 232, 235, 237, 239, 242], "obten": [2, 40, 41, 46, 50, 51, 56, 58, 59, 69, 83, 88, 91, 133, 139, 160, 164, 168, 179, 183, 187, 188, 194, 197, 200, 203, 209, 221, 229, 231, 233, 235, 236, 237, 244], "autonom": [221, 229], "ni": [18, 69, 70, 151, 153, 165, 176, 204, 221, 229, 233, 235, 236, 244], "De": [4, 14, 30, 56, 62, 71, 78, 85, 95, 120, 131, 134, 144, 155, 159, 162, 183, 193, 197, 203, 206, 221, 225, 229, 235, 236, 237, 239, 242], "destructeur": 221, "destruct": [221, 229], "red\u00e9fin": [41, 69, 70, 155, 166, 193, 221, 224], "__del__": 221, "nettoi": [56, 69, 135, 171, 221, 237], "automat": [50, 51, 57, 62, 69, 115, 174, 203, 204, 209, 221, 229, 236, 237], "r\u00e9f\u00e9renc": [56, 175, 221], "__dict__": [30, 39, 69, 221, 229, 237, 239, 240], "d\u00e8s": [4, 14, 56, 60, 61, 64, 69, 71, 74, 108, 110, 139, 151, 153, 187, 195, 200, 204, 221, 224, 229, 236, 237], "offre": [54, 56, 204, 221, 235, 236], "cess": [56, 204, 221, 235, 237, 242], "existent": [50, 69, 74, 77, 84, 154, 192, 197, 204, 221, 235, 236, 237], "r\u00e9initialisent": 221, "__module__": 221, "lequel": [1, 4, 7, 51, 58, 69, 71, 74, 77, 79, 82, 93, 95, 103, 130, 134, 187, 188, 192, 197, 198, 221, 230, 233, 235, 236, 237, 239, 242], "chapitr": [60, 221, 224, 229, 230, 235, 236, 237, 239, 242], "__class__": [39, 69, 221, 224, 240], "__doc__": [69, 221, 224, 236, 239], "hor": [38, 103, 117, 118, 160, 193, 221], "__name__": [39, 64, 69, 88, 149, 203, 204, 221, 229, 236, 239, 240], "__bases__": 221, "__main__": [39, 64, 69, 151, 193, 203, 204, 221, 225, 229, 235, 236, 239], "run_python_script_140615678734208": [], "__weakref__": [221, 229, 239], "gr\u00e2c": [2, 56, 61, 62, 69, 74, 117, 118, 221, 229, 231, 236, 237, 239, 240, 244], "help": [69, 170, 171, 195, 221, 224, 229, 235, 239], "rassembl": [204, 221], "dessous": [42, 54, 56, 62, 69, 102, 144, 153, 178, 221, 229, 232, 236, 242], "builtin": [11, 170, 171, 172, 185, 221, 229, 235, 239], "method": [1, 11, 30, 50, 54, 56, 99, 138, 139, 170, 171, 172, 185, 221, 224, 225, 229, 236, 239], "defined": [30, 102, 105, 188, 221, 229, 235, 239], "her": [11, 30, 163, 221, 229, 239], "dat": [1, 2, 3, 7, 14, 37, 39, 40, 46, 50, 54, 56, 62, 70, 72, 77, 85, 86, 99, 119, 131, 132, 134, 136, 137, 138, 139, 140, 145, 150, 163, 165, 166, 169, 171, 174, 183, 198, 203, 204, 221, 229, 234, 236, 237, 239, 240, 244], "descriptor": [221, 229, 239], "dictionary": [1, 2, 4, 7, 11, 95, 221, 229, 231, 236, 239], "weak": [221, 229, 239], "referent": [50, 159, 221, 229, 239], "the": [1, 3, 4, 6, 7, 10, 11, 22, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 53, 54, 56, 58, 59, 67, 68, 71, 75, 77, 81, 85, 93, 94, 99, 106, 107, 110, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 163, 165, 170, 171, 178, 181, 182, 185, 189, 190, 191, 192, 221, 225, 229, 239, 242], "outil": [1, 5, 14, 46, 56, 60, 69, 74, 78, 151, 163, 171, 185, 203, 204, 221, 224], "document": [1, 27, 50, 51, 52, 54, 61, 75, 99, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 175, 185, 203, 221, 224, 229, 233, 236, 239, 242], "html": [19, 27, 50, 54, 69, 82, 87, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 170, 171, 174, 185, 203, 204, 221, 237, 239, 240], "pydoc": 221, "assez": [14, 17, 34, 50, 51, 56, 60, 61, 62, 69, 70, 77, 79, 88, 91, 95, 99, 103, 111, 121, 133, 134, 136, 137, 142, 156, 166, 167, 168, 173, 185, 186, 199, 201, 202, 221, 229, 232, 237, 239, 240], "sphinx": [4, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 71, 221, 225], "meth": [139, 171, 221], "etant": [51, 56, 77, 135, 221, 224, 236, 239], "longu": [7, 10, 33, 56, 59, 60, 61, 62, 70, 80, 81, 82, 94, 95, 110, 120, 121, 200, 203, 221, 235, 236, 239, 240], "essai_class": 221, "__delattr__": 221, "__dir__": 221, "__eq__": [153, 154, 155, 221], "__format__": 221, "__ge__": 221, "__getattribute__": [4, 71, 221], "__gt__": 221, "__hash__": [221, 236], "__init_subclass__": 221, "__le__": 221, "__lt__": [4, 71, 221], "__ne__": 221, "__new__": 221, "__reduce__": 221, "__reduce_ex__": 221, "__repr__": [155, 156, 221, 229], "__setattr__": [4, 71, 221], "__sizeof__": 221, "__subclasshook__": 221, "Elle": [1, 2, 4, 27, 40, 53, 54, 56, 61, 64, 69, 70, 71, 74, 79, 83, 95, 100, 112, 124, 131, 133, 137, 152, 159, 166, 168, 171, 172, 175, 187, 190, 195, 197, 200, 221, 229, 235, 237, 239, 240, 242, 244], "jam": [1, 9, 14, 23, 27, 42, 50, 54, 56, 59, 60, 61, 69, 83, 101, 102, 109, 110, 132, 159, 166, 189, 190, 191, 192, 197, 204, 221, 224, 225, 229, 235, 236, 242, 244], "arriv": [1, 2, 27, 30, 51, 56, 59, 79, 83, 85, 95, 102, 134, 142, 152, 204, 205, 221, 224, 225, 229, 231, 235, 236, 237, 242], "exclus": [30, 56, 67, 221, 236], "ensemble_el": 221, "lien": [51, 61, 62, 66, 84, 85, 137, 203, 221, 229, 237], "z": [10, 50, 51, 59, 69, 77, 87, 94, 104, 111, 133, 138, 162, 165, 179, 180, 181, 182, 197, 198, 205, 221, 235, 236, 244], "barycentr": [54, 58, 221], "el": [83, 94, 134, 168, 203, 221, 236], "Au": [4, 32, 34, 50, 51, 56, 58, 71, 83, 84, 113, 139, 193, 221, 236, 239, 242], "traver": [50, 221, 229, 235, 237], "nouvelle_cl": 221, "run_python_script_140615678979968": [], "typeerror": [39, 50, 101, 102, 104, 105, 110, 151, 153, 171, 221, 224, 235, 236], "unsupported": [102, 221], "operand": [50, 69, 102, 112, 221], "nombre_complex": 221, "get_modul": 221, "sqrt": [41, 50, 56, 61, 113, 114, 157, 179, 183, 200, 208, 221, 235, 239, 242], "aim": [62, 81, 174, 183, 184, 204, 221], "instar": [221, 235, 236, 244], "encadr": [69, 115, 221, 236], "blanc": [30, 38, 69, 87, 136, 137, 138, 139, 140, 144, 165, 221, 236], "soulign": [60, 69, 70, 221, 236], "__add__": [69, 193, 194, 221], "decr": [51, 53, 56, 59, 61, 78, 80, 95, 111, 112, 173, 221, 229, 233, 235, 236, 239, 242, 244], "nom_class": [70, 221], "dor\u00e9nav": [221, 224, 235], "correct": [15, 42, 46, 50, 69, 72, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 137, 139, 147, 177, 221, 224, 235, 236, 237], "transcr": [94, 221], "rencontr": [2, 69, 71, 150, 197, 221, 224, 235, 237, 239], "valid": [3, 27, 33, 56, 69, 77, 128, 137, 139, 141, 142, 146, 149, 151, 171, 177, 178, 185, 193, 221, 229, 235, 236, 237, 244], "__iadd__": 221, "recevoir": [2, 110, 203, 221, 224, 229, 231, 235], "\u00e9toff": 221, "transcript": [74, 221], "form": [1, 2, 8, 14, 30, 33, 38, 50, 51, 52, 54, 56, 58, 59, 61, 62, 69, 74, 82, 98, 99, 101, 106, 107, 117, 118, 121, 163, 166, 175, 187, 188, 189, 191, 192, 193, 203, 204, 221, 224, 227, 229, 235, 236, 237, 239, 240, 242, 244], "c3": [30, 51, 52, 81, 194, 221], "000000": [51, 54, 99, 130, 136, 137, 140, 148, 221, 235], "nombreux": [1, 30, 50, 51, 56, 59, 61, 62, 69, 70, 74, 77, 78, 85, 147, 153, 171, 193, 203, 221, 229, 235, 237, 239], "parm": [4, 9, 14, 27, 30, 38, 50, 56, 59, 62, 71, 88, 101, 111, 119, 137, 146, 156, 161, 162, 187, 188, 197, 203, 221, 235, 236, 237, 239], "attard": 221, "__getitem__": [185, 221], "__setitem__": 221, "espac": [58, 62, 69, 77, 81, 96, 110, 112, 125, 130, 131, 135, 173, 175, 185, 187, 206, 221, 229, 230, 235, 236, 240, 244], "coordon": [4, 7, 8, 10, 14, 38, 46, 53, 54, 58, 59, 60, 61, 71, 91, 95, 101, 116, 117, 118, 136, 186, 193, 221, 224, 229, 235], "point_espac": [221, 224], "regl": [1, 30, 53, 56, 59, 60, 61, 69, 81, 187, 200, 203, 204, 221, 225, 227, 229, 235, 236, 237], "l\u00e8vent": 221, "indexerror": [102, 104, 105, 221, 224, 235], "_x": [4, 71, 221], "_y": [4, 71, 221], "_z": 221, "absciss": [10, 27, 51, 56, 70, 116, 156, 199, 221], "altitud": [191, 192, 221], "run_python_script_140615677451136": [], "nameerror": [102, 105, 188, 221, 224, 235], "nam": [4, 11, 30, 40, 46, 51, 54, 68, 70, 71, 99, 102, 105, 149, 150, 157, 169, 174, 187, 188, 221, 225, 235, 236, 239, 242], "bi": [1, 50, 56, 192, 204, 221, 229], "arr\u00eatent": 221, "messag": [40, 50, 64, 69, 70, 74, 96, 121, 197, 198, 203, 204, 221, 224, 226, 227, 235, 236, 237, 241], "__cmp__": [69, 221], "respect": [51, 77, 115, 116, 168, 195, 204, 221, 235, 236], "cmp": [221, 235], "convert": [2, 4, 6, 11, 22, 39, 46, 51, 52, 53, 54, 61, 62, 69, 71, 99, 104, 110, 111, 119, 133, 145, 147, 151, 166, 171, 187, 197, 203, 204, 206, 221, 224, 231, 232, 233, 235, 236, 237, 239, 240], "__contains__": 221, "__abs__": 221, "ab": [31, 33, 50, 56, 61, 77, 78, 81, 106, 112, 113, 114, 116, 118, 120, 134, 140, 145, 147, 150, 155, 160, 169, 188, 193, 200, 203, 204, 221, 223, 235, 236], "lev": 221, "__delitem__": 221, "__int__": 221, "__float__": 221, "__complex__": 221, "convers": [24, 29, 33, 39, 43, 53, 69, 119, 125, 151, 166, 203, 204, 221, 224, 232, 235, 237, 240, 246], "__div__": 221, "__mul__": 221, "__sub__": 221, "__pow__": 221, "__lshift__": 221, "__rshift__": [157, 221], "__idiv__": 221, "__imul__": 221, "__isub__": 221, "__ipow__": 221, "__ilshift__": 221, "__irshift__": 221, "operator": [50, 51, 221, 235], "commun": [3, 15, 46, 50, 51, 53, 56, 81, 96, 125, 137, 155, 209, 221, 235, 236, 237, 240, 242], "normal": [50, 56, 61, 62, 115, 116, 117, 118, 132, 135, 145, 146, 166, 179, 180, 200, 221, 223, 229, 239, 242], "\u00e9chou": [38, 81, 114, 139, 221, 224, 239], "exsit": 221, "prend": [2, 4, 41, 46, 51, 56, 60, 61, 62, 70, 71, 77, 79, 81, 85, 92, 93, 95, 99, 101, 104, 107, 110, 115, 116, 117, 118, 134, 142, 153, 157, 159, 162, 167, 170, 175, 176, 177, 179, 188, 208, 209, 221, 229, 231, 235, 236, 237], "rel": [11, 56, 59, 62, 70, 84, 221], "recommand": [4, 22, 51, 52, 69, 71, 74, 78, 97, 110, 133, 175, 204, 221, 224, 229, 239], "usag": [50, 51, 61, 62, 69, 74, 77, 91, 154, 166, 176, 203, 204, 205, 221, 226, 230, 236, 237, 241, 242], "moder": 221, "r\u00e9pandu": [51, 56, 69, 166, 203, 221, 235], "rightsid": 221, "9999999999": [41, 221], "leftsid": 221, "LS": 221, "__radd__": 221, "__rlshift__": 221, "__iter__": [221, 224], "explor": [39, 42, 58, 95, 108, 131, 160, 221, 237], "conna\u00eet": [1, 14, 52, 61, 62, 74, 85, 88, 117, 118, 210, 221, 235, 239], "visit": [59, 133, 221, 235, 242], "r\u00e9f\u00e9rent": [49, 58, 69, 221, 224, 235, 236, 237, 239, 242], "__next__": 221, "actuel": [56, 74, 89, 94, 113, 114, 221, 232, 242], "yield": [1, 39, 52, 101, 152, 174, 178, 221, 235], "success": [33, 50, 58, 62, 87, 200, 221, 229, 235, 236, 239], "it": [1, 11, 31, 39, 42, 50, 65, 85, 92, 95, 112, 117, 118, 130, 131, 132, 134, 191, 192, 221, 229, 235], "try": [1, 27, 33, 35, 38, 39, 40, 46, 50, 51, 53, 54, 69, 70, 80, 99, 101, 105, 110, 112, 119, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 185, 188, 202, 204, 205, 221, 225, 230, 235, 236, 240, 244], "stopiter": [221, 224, 235], "extrait": [3, 6, 10, 19, 36, 49, 50, 51, 54, 56, 61, 69, 70, 96, 98, 99, 183, 205, 221, 235, 237, 244], "quant": [41, 56, 62, 69, 151, 221, 235], "permettr": [56, 69, 188, 204, 221, 236, 237, 242], "class_it": [221, 224], "_in": [221, 224], "_n": [221, 224], "configur": [30, 92, 119, 221, 229, 240], "para\u00eetr": [173, 221], "fastidi": [142, 193, 194, 195, 209, 221, 236, 239, 242], "proposent": [56, 58, 133, 158, 193, 203, 221, 229, 237], "court": [1, 4, 9, 10, 14, 15, 19, 33, 39, 42, 51, 58, 59, 71, 78, 80, 81, 85, 89, 94, 95, 104, 105, 108, 124, 125, 127, 160, 177, 178, 203, 209, 221, 235, 236, 237], "affichent": 221, "besoin": [2, 4, 14, 27, 39, 41, 46, 50, 51, 55, 56, 61, 69, 71, 74, 88, 91, 95, 108, 110, 120, 153, 168, 175, 193, 197, 204, 205, 221, 225, 227, 231, 233, 236, 237, 239, 240, 242], "staticmethod": [69, 70, 221], "param": [30, 70, 85, 96, 134, 144, 171, 221, 229], "conseil": [2, 50, 51, 56, 58, 66, 71, 95, 111, 195, 204, 221, 231, 235, 236, 239, 242, 244], "ck": 221, "sp\u00e9cif": [2, 41, 50, 51, 69, 71, 119, 124, 193, 221, 229, 230, 233, 237, 239, 240, 241], "couleur": [30, 38, 62, 111, 136, 137, 138, 139, 140, 143, 144, 193, 207, 221, 229], "255": [6, 71, 221], "isntanc": 221, "partag": [2, 50, 51, 59, 64, 70, 71, 74, 81, 87, 99, 145, 221, 229], "attribut_stat": [70, 221], "attribut_statique2": [70, 221], "valeur2": [69, 70, 101, 221, 236], "nom_methode_st": [70, 221], "attribut_statique3": [70, 221], "valeur3": [70, 221], "parc": [2, 4, 27, 38, 39, 51, 59, 64, 69, 71, 74, 85, 88, 102, 130, 139, 183, 193, 194, 204, 221, 224, 231, 235, 236], "incr\u00e9ment": [9, 77, 84, 205, 221], "confus": [27, 66, 81, 94, 130, 137, 141, 142, 221, 235], "appara\u00eetr": [2, 27, 40, 69, 71, 95, 168, 221, 229, 235, 236, 237], "incremente_rnd": 221, "43": [2, 36, 46, 50, 51, 54, 95, 99, 110, 112, 114, 115, 131, 132, 134, 150, 165, 171, 174, 183, 184, 197, 210, 221, 231, 235], "apparit": [74, 124, 159, 221, 239], "recens": [59, 69, 96, 221, 230, 233, 236, 239], "fonctionnal": [53, 203, 221, 227, 229, 236, 237, 239, 244], "rar": [41, 56, 64, 69, 74, 177, 203, 204, 221, 229, 233, 236, 237], "accept": [38, 51, 56, 69, 112, 147, 186, 195, 221, 229, 235, 236, 237, 244], "recevr": [33, 58, 221], "classmethod": 221, "meth3": 221, "ok": [1, 31, 221, 229, 235], "meth4": 221, "essai_cl": 221, "meth2": 221, "raccourc": [49, 59, 69, 175, 221, 236], "croir": 221, "r\u00e9alit": [56, 204, 221, 235], "programmeur": [6, 69, 71, 221, 223, 229, 233, 237], "faux": [41, 50, 61, 137, 140, 191, 192, 221, 224, 235], "nom_propriet": [70, 221], "property": [4, 11, 30, 69, 70, 71, 166, 221, 229], "fget": [70, 221], "fset": [70, 221], "fdel": [70, 221], "doc": [19, 50, 54, 70, 82, 87, 159, 221], "fget_vari": [70, 221], "fset_vari": [70, 221], "sein": [46, 56, 69, 74, 84, 221, 229, 236, 240, 242], "pseudo": [138, 221, 235], "d\u00e9truir": [221, 225, 229], "imaginair": 221, "norm": [2, 9, 10, 62, 69, 71, 134, 136, 149, 150, 164, 172, 193, 210, 221], "ib": [83, 113, 114, 221], "arg": [4, 11, 50, 62, 88, 89, 111, 112, 131, 139, 187, 221, 225], "conj": 221, "conjugu": 221, "r\u00e9ciproqu": [1, 2, 38, 69, 99, 110, 160, 166, 197, 221, 229, 233, 235, 236, 237, 240], "remarqu": [33, 50, 56, 62, 69, 84, 94, 95, 99, 100, 108, 110, 112, 115, 116, 132, 161, 221, 235, 236, 240, 242], "set_modul": 221, "get_argu": 221, "atan2": [157, 221, 235], "set_argu": 221, "cos": [41, 61, 100, 106, 107, 117, 122, 133, 134, 157, 197, 199, 200, 203, 204, 221, 239], "sin": [41, 100, 106, 107, 117, 122, 132, 133, 134, 157, 191, 192, 221], "get_conjugu": 221, "500000": [51, 140, 148, 221, 235, 236], "866025": 221, "0471975512": 221, "pi": [50, 51, 69, 88, 106, 107, 108, 117, 118, 122, 133, 134, 166, 172, 221, 239], "09439510239": 221, "9999999999999999": [41, 221], "0471975511965976": 221, "0943951023931953": 221, "descend": [56, 61, 221], "\u00e9trang": [87, 136, 165, 204, 221], "puiss": [1, 30, 62, 110, 139, 189, 203, 204, 221, 229], "sign": [56, 70, 117, 118, 203, 221, 223, 235, 237], "d\u00e9signent": [41, 112, 155, 221], "nom_copy": 221, "nom_inst": 221, "copi": [4, 54, 69, 71, 101, 115, 116, 156, 221, 236, 237], "identif": [41, 56, 69, 70, 85, 99, 178, 221, 229, 236, 239], "suppress": [58, 69, 221], "creationdestruct": 221, "survient": [2, 56, 110, 135, 221, 224, 225, 229, 235, 236, 242], "d\u00e9truit": [221, 224, 225, 229], "suffis": [56, 59, 70, 95, 96, 110, 132, 134, 200, 210, 221, 225, 235], "classe_inclus": 221, "attr": 221, "voudr": [81, 111, 163, 204, 205, 221], "option": [4, 11, 16, 50, 51, 54, 56, 61, 65, 71, 74, 80, 84, 92, 94, 99, 108, 115, 117, 118, 124, 134, 137, 139, 140, 145, 147, 156, 160, 166, 174, 193, 221, 229, 236, 239, 244], "solut": [1, 9, 30, 34, 35, 38, 41, 42, 50, 51, 54, 56, 58, 59, 61, 64, 69, 86, 89, 92, 93, 97, 105, 108, 109, 110, 112, 115, 117, 118, 120, 121, 124, 125, 131, 133, 134, 160, 161, 165, 166, 187, 188, 194, 195, 221, 224, 229, 235, 236, 237, 240, 242], "membr": [69, 187, 221], "tient": [52, 53, 54, 56, 85, 108, 113, 115, 116, 119, 166, 221, 229, 235], "pr\u00e9fer": [2, 4, 27, 39, 41, 56, 59, 60, 62, 69, 71, 74, 101, 108, 110, 134, 137, 175, 209, 221, 224, 225, 227, 229, 231, 235, 236, 237, 239, 240], "re\u00e7oiv": [221, 229], "fonction_l": 221, "attribu": [56, 221, 235, 236], "d\u00e9tect": [1, 22, 41, 56, 69, 135, 176, 178, 204, 210, 221, 224, 225, 229, 232, 235, 244], "garbag": [221, 224, 225, 239, 242], "collector": [221, 224, 225, 239, 242], "fer": [113, 140, 197, 204, 205, 221, 229, 236], "l0": [110, 221], "ll": [56, 59, 62, 70, 83, 103, 134, 138, 183, 184, 187, 200, 221, 236], "tand": [10, 33, 69, 221, 229, 235, 236, 237, 239], "__deepcopy__": 221, "doivent": [56, 69, 70, 177, 193, 197, 221, 229, 235, 236, 239, 244], "int\u00e9r\u00eat": [56, 62, 69, 87, 99, 110, 120, 159, 193, 204, 221, 236, 237], "memo": [221, 225], "envoi": [98, 99, 121, 166, 172, 193, 221, 224, 229, 235, 237, 242], "contiendr": [51, 69, 187, 221, 224, 236, 237, 239], "distingu": [1, 4, 51, 56, 69, 71, 84, 95, 157, 197, 203, 209, 221, 235, 236], "profond": [84, 221], "d\u00e9tail": [46, 61, 77, 81, 113, 114, 115, 116, 130, 134, 149, 150, 163, 221, 229, 236], "d\u00e9part": [46, 51, 53, 58, 59, 79, 83, 84, 86, 90, 95, 178, 187, 193, 221, 229, 242], "objet1": 221, "o1": [4, 71, 221], "o2": [4, 71, 221], "objet2": 221, "o3": 221, "pointent": 221, "unes": [50, 58, 69, 82, 85, 105, 117, 118, 150, 221, 224, 229, 235, 236], "ver": [9, 41, 56, 58, 61, 69, 70, 77, 84, 87, 108, 110, 112, 115, 116, 131, 144, 164, 200, 205, 221, 224, 229, 233, 235, 236, 237, 242], "oui": [110, 116, 194, 221, 235], "probl\u00e9mat": [58, 120, 221], "rencontrent": 221, "enregistr": [2, 40, 51, 53, 60, 69, 83, 134, 143, 163, 171, 174, 203, 204, 221, 231, 237, 239, 244], "circulair": [221, 237], "relectur": [1, 39, 74, 221, 237, 240], "r\u00e9solvent": [56, 221], "artific": 221, "fr\u00e9quent": [1, 2, 9, 39, 51, 56, 58, 63, 66, 77, 88, 94, 96, 120, 133, 166, 171, 175, 197, 203, 209, 221, 224, 229, 233, 234, 235, 236, 237, 240, 242], "suffisent": [69, 221], "contien": [41, 209, 221, 224, 239], "soupl": [221, 229, 236], "contrepart": [69, 70, 221, 236], "susceptibl": [56, 59, 189, 221, 224, 229, 236, 239, 244], "__slots__": [4, 70, 71, 221, 236], "attribut_1": [70, 221], "attribut_n": [70, 221], "pr\u00e9senc": [2, 51, 74, 209, 221, 231, 236, 239, 244], "incident": [205, 221, 235, 239], "gag": 221, "efficac": [1, 2, 27, 36, 38, 50, 56, 61, 62, 84, 87, 88, 91, 94, 95, 102, 108, 124, 131, 156, 163, 178, 221, 230, 231, 235, 240, 242], "t1": [88, 91, 130, 177, 186, 221], "t2": [91, 100, 130, 134, 164, 177, 186, 221], "t3": 221, "begin": [41, 50, 56, 58, 59, 61, 62, 70, 83, 85, 103, 111, 112, 120, 131, 134, 137, 149, 150, 179, 183, 184, 187, 188, 200, 221, 225], "h": [1, 11, 33, 39, 51, 56, 59, 61, 65, 68, 77, 87, 94, 99, 111, 115, 116, 117, 118, 119, 124, 131, 135, 152, 156, 162, 166, 198, 200, 210, 221, 229, 230, 232, 236, 237, 240, 242], "1e6": [50, 123, 221], "817208500000561": [], "5517426999977033": [], "2023372000003292": [], "r\u00e9sum": [1, 2, 51, 56, 61, 62, 69, 70, 110, 221, 224, 231, 235, 236, 242, 244], "atribut": 221, "produir": [19, 56, 104, 221, 224], "ancien": [2, 195, 204, 221, 229, 231], "d\u00e9sir": [38, 41, 81, 195, 204, 221, 224, 229, 235, 236, 237, 239], "exp\u00e9rient": [56, 59, 162, 193, 221, 235, 236], "cent": [26, 54, 64, 69, 99, 221], "fac": [56, 151, 161, 187, 204, 221], "pil": [221, 224, 226, 242], "figur": [27, 46, 50, 58, 59, 72, 132, 159, 161, 173, 188, 193, 221, 229, 239, 242], "cent_tirag": 221, "63": [50, 51, 56, 70, 77, 99, 113, 131, 156, 174, 203, 235, 244], "truqu": 221, "r\u00e9\u00e9crir": [33, 51, 64, 74, 120, 151, 195, 197, 221, 225], "72": [31, 50, 54, 77, 93, 99, 131, 156, 171], "satisfais": [77, 221], "faudr": [2, 4, 14, 41, 51, 53, 56, 60, 61, 62, 69, 70, 71, 78, 85, 86, 88, 94, 98, 99, 103, 110, 115, 116, 117, 118, 119, 120, 123, 139, 140, 142, 147, 152, 153, 165, 166, 187, 197, 209, 221, 229, 231, 235, 236, 239, 242, 244], "reproduit": [144, 221, 235], "piece_normal": 221, "piece_truque": 221, "52": [46, 50, 51, 54, 99, 115, 116, 119, 131, 138, 141, 174, 221, 236], "76": [46, 62, 77, 99, 115, 143, 144, 150, 164, 221, 225], "acceptent": [69, 142, 221, 236], "vient": [1, 21, 41, 56, 83, 93, 94, 95, 105, 149, 158, 159, 173, 193, 196, 205, 221, 229, 235, 237], "chois": [2, 7, 9, 10, 41, 42, 46, 50, 51, 53, 56, 58, 59, 61, 62, 64, 69, 70, 74, 77, 84, 85, 88, 94, 95, 109, 111, 115, 116, 117, 118, 120, 121, 131, 133, 134, 136, 146, 147, 149, 152, 154, 156, 158, 161, 164, 176, 179, 180, 181, 182, 187, 188, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 221, 225, 229, 231, 235, 236, 237, 240, 244], "ais": [62, 95, 163, 221, 235], "p2": [7, 9, 10, 11, 30, 69, 137, 153, 155, 184, 188, 193, 221, 237], "54": [0, 50, 51, 54, 56, 95, 99, 112, 131, 141, 142, 143, 144, 156, 210], "78": [77, 83, 99, 130, 150, 164], "exact": [4, 51, 69, 71, 87, 99, 110, 134, 144, 160, 171, 192, 198, 221, 229, 235], "devion": 221, "d\u00e9riv": [50, 56, 85, 110, 111, 112, 134, 200, 221, 242], "met": [4, 38, 58, 59, 61, 71, 105, 113, 114, 120, 151, 175, 194, 221, 229, 235], "parenthes": [35, 69, 197, 203, 206, 221, 224, 235, 236, 244], "enfin": [4, 50, 56, 71, 96, 120, 164, 183, 204, 221, 229], "redevient": 221, "piece_tres_truque": 221, "truque": [195, 196, 221], "p3": [10, 69, 155, 193, 221], "tre": [1, 22, 30, 61, 62, 65, 128, 130, 131, 139, 141, 183, 184, 198, 204, 221], "75": [9, 12, 26, 51, 56, 70, 77, 99, 136, 140, 176, 186, 187, 188, 244], "\u00e9leg": [157, 175, 193, 221, 242], "organis": [14, 17, 56, 60, 69, 157, 168, 204, 221, 223, 229, 237, 239], "rend": [27, 69, 98, 99, 110, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185, 203, 204, 221, 230, 235], "alter": [56, 221, 236, 239], "dit": [4, 10, 33, 38, 42, 51, 56, 58, 61, 69, 70, 77, 84, 85, 95, 96, 111, 112, 137, 142, 147, 150, 175, 183, 184, 193, 197, 200, 204, 221, 224, 229, 235, 236, 237, 242], "chez": [70, 86, 105, 204, 221], "anc\u00eatr": [46, 70, 221], "inchang": [42, 221, 235, 236, 242], "nom_ancetr": [70, 221], "resolu": [221, 224], "order": [1, 30, 50, 56, 115, 166, 191, 192, 221, 224], "inherited": 221, "rubriqu": 221, "men": [1, 41, 56, 60, 110, 113, 114, 162, 204, 221, 229, 242], "ira": 221, "interrog": [56, 62, 97, 221], "run_python_script_140615676027328": [], "indirect": [50, 221, 224], "revient": [1, 14, 30, 33, 34, 56, 70, 95, 100, 102, 113, 151, 153, 161, 166, 178, 187, 198, 221, 236, 237, 240, 242], "h\u00e9ritent": 221, "offrait": 221, "apparten": [56, 62, 78, 84, 157, 221, 236], "nom_autre_method": [70, 221], "appellent": [221, 242], "contrair": [40, 46, 56, 58, 70, 74, 79, 81, 99, 115, 116, 175, 192, 197, 221, 224, 229, 235, 236, 237, 239, 242], "poss\u00e8dent": [70, 221, 229, 236, 239, 242], "revanch": [1, 59, 69, 84, 119, 166, 205, 221, 224, 229, 235, 237, 242], "fill": [41, 118, 136, 171, 221, 229], "ancetr": 221, "\u00e9vident": [51, 56, 58, 59, 70, 83, 88, 93, 95, 99, 103, 115, 132, 142, 168, 170, 209, 210, 221, 229, 235, 237, 239, 244], "concevoir": [56, 58, 197, 221, 229, 237, 242], "math\u00e9mat": [1, 2, 19, 22, 51, 60, 62, 69, 74, 85, 102, 137, 154, 166, 180, 221, 231, 235, 236, 239], "c\u00f4t": [10, 14, 30, 41, 56, 61, 62, 74, 88, 95, 99, 113, 114, 118, 121, 123, 134, 164, 175, 208, 221], "prior": [33, 34, 56, 59, 62, 69, 88, 91, 111, 133, 145, 175, 200, 221, 239], "redond": [59, 187, 221], "minimis": [50, 56, 62, 70, 80, 95, 111, 112, 121, 131, 134, 183, 187, 190, 221], "fallu": [203, 221], "restent": [38, 54, 221], "h\u00e9riti": 221, "ambigu": [94, 99, 154, 221, 236], "guid": [56, 87, 221], "r\u00e9soudr": [2, 18, 50, 56, 58, 61, 62, 71, 85, 88, 95, 108, 131, 183, 187, 192, 221, 236, 242], "aver": [62, 221, 235, 236], "ult\u00e9rieur": [56, 69, 221, 236], "vecteur": [1, 9, 10, 53, 56, 58, 59, 61, 69, 70, 78, 111, 112, 115, 116, 117, 118, 135, 159, 172, 175, 179, 180, 183, 184, 186, 221, 236], "exercic": [0, 1, 17, 19, 24, 29, 38, 43, 45, 48, 49, 55, 90, 109, 125, 127, 166, 174, 207, 208, 221, 235, 246], "dilemm": 221, "princip": [41, 50, 56, 62, 77, 85, 131, 132, 221, 226, 229, 237, 244], "cub": 221, "125": [53, 200, 221], "vi": [1, 2, 4, 14, 16, 39, 46, 50, 51, 56, 61, 62, 70, 71, 81, 110, 158, 189, 203, 204, 221, 229, 235, 237, 240, 242], "genr": [2, 14, 56, 98, 99, 204, 221, 231, 235, 244], "situat": [1, 56, 134, 221, 223, 235, 242], "section": [51, 57, 67, 221, 224, 225, 229, 235, 237, 242], "repren": [221, 229], "fonction_somme_list": 221, "ens": [39, 41, 112, 153, 168, 175, 178, 221, 230, 235], "fonction_somme_dict": 221, "dict": [4, 7, 10, 11, 27, 31, 39, 46, 54, 69, 71, 77, 78, 85, 86, 87, 88, 94, 105, 111, 115, 116, 119, 122, 132, 134, 135, 136, 137, 139, 140, 144, 145, 146, 147, 148, 149, 150, 156, 158, 163, 169, 171, 172, 174, 175, 178, 198, 221, 230, 235, 240], "fonction_somm": 221, "di": [31, 69, 84, 85, 86, 99, 221], "undeuxtrois": 221, "similair": [4, 51, 52, 54, 56, 61, 62, 70, 71, 95, 187, 221, 235, 236, 242, 244], "serv": [2, 39, 50, 51, 54, 56, 69, 70, 85, 93, 98, 99, 110, 111, 113, 114, 168, 179, 197, 204, 221, 229, 231, 235, 236, 237, 244], "d\u00e9crit": [30, 56, 70, 88, 95, 135, 155, 187, 197, 221, 224, 229, 235, 236, 239, 244], "incorpor": [221, 235], "stdin": [69, 221, 244], "indentationerror": [221, 224, 235], "unindent": [221, 235], "do": [1, 11, 16, 40, 50, 65, 68, 75, 101, 102, 191, 192, 204, 221, 225, 235, 236], "match": [50, 62, 203, 221, 225, 235, 244], "any": [4, 10, 11, 22, 50, 75, 172, 221, 235], "out": [1, 11, 31, 40, 51, 65, 75, 99, 102, 104, 105, 135, 191, 192, 221, 225, 235], "level": [122, 133, 221, 235], "essay": [52, 69, 79, 96, 104, 110, 117, 118, 134, 139, 144, 200, 210, 221, 224, 236, 242, 244], "confond": [221, 235], "seilf": 221, "did": [50, 221], "you": [1, 11, 22, 31, 46, 65, 131, 191, 192, 221], "fais": [4, 50, 51, 62, 71, 88, 134, 210, 221, 235, 236, 242], "num\u00e9ro": [14, 30, 78, 84, 110, 111, 193, 221, 229, 236, 244], "troisiem": [2, 46, 53, 56, 59, 69, 74, 81, 88, 108, 124, 136, 173, 194, 197, 203, 221, 224, 229, 231, 235, 236, 237, 242, 244], "fromag": [210, 221], "poid": [1, 7, 9, 10, 56, 60, 61, 95, 112, 221], "odeur": [210, 221], "decoup": 221, "gruyer": 221, "150": [50, 85, 88, 113, 117, 118, 119, 131, 146, 150, 164, 166, 168, 221], "fr": [30, 51, 54, 85, 86, 94, 119, 166, 204, 221], "fr2": 221, "fr3": 221, "g": [11, 50, 59, 61, 69, 84, 87, 94, 95, 99, 123, 124, 131, 132, 134, 137, 145, 152, 162, 170, 183, 186, 190, 204, 210, 221, 229, 236, 239, 244], "g2": [79, 221], "g3": 221, "85": [46, 77, 84, 99, 116, 119, 123, 130, 167, 204, 221], "170": [51, 110, 150, 167, 221], "8333333333333334": 221, "61538461538461": 221, "230": [52, 110, 221], "76923076923077": 221, "7923076923076924": 221, "__class_getitem__": [4, 221], "get": [1, 2, 4, 39, 40, 46, 50, 51, 67, 68, 69, 81, 91, 94, 95, 102, 111, 167, 170, 171, 174, 175, 178, 188, 194, 197, 198, 210, 221, 229, 231, 235, 236, 240, 242], "a1": [51, 77, 122, 134, 194, 221], "a2": [51, 77, 122, 134, 194, 221], "const": [2, 4, 32, 34, 50, 53, 56, 59, 71, 85, 99, 111, 130, 131, 134, 147, 150, 186, 193, 200, 221, 231, 232, 242], "renseign": [51, 69, 115, 116, 190, 221, 236, 242], "calcul_n_valeur": [2, 221, 231], "m\u00e9lang": [4, 14, 71, 117, 118, 144, 165, 221, 235], "interfac": [4, 41, 50, 66, 71, 74, 139, 221, 229, 235, 239, 241, 245], "graphiqu": [27, 42, 51, 56, 58, 61, 66, 74, 85, 95, 138, 145, 207, 209, 210, 221, 229, 235, 239, 241, 245], "transpos": [6, 49, 50, 51, 53, 56, 61, 112, 171, 179, 180, 221, 229], "aur": [4, 38, 42, 50, 51, 56, 61, 62, 69, 71, 87, 95, 99, 113, 117, 118, 137, 151, 192, 203, 204, 221, 224, 236, 237, 239], "strassen": [1, 221], "807": [1, 221], "mod\u00e9lis": [58, 62, 78, 221], "sach": [1, 10, 30, 56, 62, 94, 198, 221, 244], "quatr": [38, 41, 51, 56, 59, 69, 70, 85, 96, 102, 109, 161, 162, 171, 177, 197, 204, 205, 221, 224, 235, 236, 237, 241, 242, 244], "mis": [32, 41, 56, 62, 69, 74, 78, 83, 108, 113, 137, 149, 187, 202, 206, 221, 229, 236, 237, 239], "jour": [32, 56, 58, 59, 70, 74, 78, 85, 86, 87, 96, 98, 99, 108, 113, 114, 119, 120, 130, 165, 187, 188, 189, 202, 203, 204, 221, 229, 232, 236, 237, 239, 244], "\u00e9chang": [2, 32, 56, 59, 60, 91, 108, 153, 166, 203, 221, 229, 231, 236, 237, 242], "col": [99, 115, 116, 130, 131, 221], "coef": [50, 99, 134, 138, 150, 169, 194, 221], "get_lin": 221, "get_col": 221, "get_submat": 221, "i1": [95, 108, 221, 223], "j1": [108, 221], "i2": [95, 108, 221, 223], "j2": [108, 221], "set_submat": 221, "mat": [2, 6, 36, 39, 49, 53, 69, 78, 81, 82, 84, 91, 99, 101, 105, 106, 107, 108, 109, 115, 116, 132, 155, 175, 179, 180, 184, 186, 194, 203, 204, 221, 231, 237, 240], "matricelist": 221, "matricedict": 221, "mat1": [91, 221], "mat2": [82, 91, 99, 203, 221], "produitclass": 221, "produitstrassen": 221, "architectur": [221, 233], "co\u00fbteux": [6, 56, 59, 62, 71, 158, 170, 171, 189, 221, 236, 237], "pens": [50, 54, 61, 62, 74, 77, 103, 139, 173, 183, 197, 203, 204, 209, 221, 236, 244], "design": [1, 61, 139, 150, 221, 242], "pattern": [68, 221, 229, 244], "connus": [56, 61, 62, 85, 88, 125, 147, 187, 221], "con\u00e7oit": [41, 95, 221, 242], "facilit": [221, 242], "mention": [51, 221, 224, 225, 229, 236], "constructeur": [69, 151, 153, 155, 193, 222, 224, 229, 237, 242], "apport": [50, 110, 139, 222, 242], "statiqu": [46, 222], "instanc": [4, 11, 51, 58, 70, 71, 100, 153, 155, 157, 193, 222, 224, 229, 230, 235, 236, 239, 240, 242], "fig": [27, 46, 50, 54, 78, 85, 86, 88, 89, 92, 93, 95, 115, 116, 117, 118, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 149, 150, 156, 160, 162, 174, 186, 200, 207, 208, 210, 222, 240], "compil": [4, 71, 94, 170, 171, 175, 203, 204, 222, 224, 236, 239, 244], "surcharg": [4, 50, 69, 71, 153, 155, 195, 222, 237, 242], "ann\u00e9": [3, 14, 15, 19, 20, 46, 51, 56, 74, 97, 110, 119, 203, 204, 223, 242, 244], "projet": [1, 46, 54, 56, 58, 62, 135, 136, 193, 223, 239], "r\u00e9pond": [84, 86, 111, 166, 192, 199, 223, 235, 242], "simplifi": [61, 62, 69, 74, 81, 94, 105, 153, 169, 223], "lanag": 223, "somm": [5, 6, 14, 31, 32, 33, 41, 49, 50, 51, 56, 59, 64, 69, 74, 78, 79, 80, 84, 85, 95, 101, 102, 104, 110, 113, 114, 125, 131, 132, 151, 154, 175, 183, 186, 193, 194, 198, 199, 200, 201, 204, 205, 206, 223, 235, 236, 239, 242, 244], "stock": [2, 12, 13, 39, 53, 54, 56, 70, 74, 77, 121, 134, 152, 158, 163, 170, 175, 197, 198, 205, 223, 231, 236, 237, 240, 244], "deux_entiers_somm": 223, "deux_entiers_multipl": 223, "pr\u00e3": 223, "fix": [14, 27, 34, 46, 56, 58, 61, 69, 77, 84, 110, 130, 132, 159, 175, 185, 197, 198, 223, 235, 236], "deux_enti": 223, "formel": [77, 223], "deuxenti": 223, "accroch": [152, 223, 242], "plu": 223, "informaticien": [33, 56, 223], "disparit": [223, 229], "pench": [56, 81, 84, 119, 223, 232], "simplif": [10, 69, 157, 223], "\u00e3": 223, "taient": 223, "renomm": [51, 54, 223, 237], "appliquent": [4, 56, 69, 71, 178, 223, 229, 236, 244], "m\u00e3\u00aame": 223, "introduir": [41, 51, 206, 223, 229, 235, 242], "r\u00e9utilis": [64, 69, 74, 82, 99, 223, 229, 235], "deuxentiersmodif": 223, "anodin": 223, "utilisent": [38, 50, 53, 56, 61, 69, 193, 198, 223, 236, 242], "majoritair": [56, 91, 209, 223], "d\u00e9couvert": [56, 85, 223], "bloc": [51, 205, 206, 223, 229, 235], "logiqu": [1, 30, 51, 69, 70, 152, 203, 223, 229, 236, 240], "run_python_script_140615701518848": [], "zerodivisionerror": [35, 69, 224], "float": [4, 7, 8, 9, 10, 11, 24, 29, 41, 43, 46, 50, 52, 53, 55, 69, 71, 96, 115, 125, 151, 155, 171, 175, 187, 200, 203, 204, 224, 235, 236, 239, 244, 246], "by": [1, 4, 10, 11, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 56, 69, 99, 170, 171, 172, 185, 191, 192, 204, 224, 229, 239], "zero": [2, 31, 50, 69, 77, 224, 229, 231, 236], "rattrap": [69, 224], "agir": [69, 224], "d\u00e9taill": [4, 46, 54, 61, 71, 95, 131, 224], "h\u00e9rit": [41, 69, 124, 155, 156, 224, 227, 229, 235], "baseexcept": 224, "d\u00e9cid": [1, 33, 56, 69, 81, 94, 95, 120, 204, 224], "run_python_script_140615679395584": [], "remont": [56, 79, 224], "inclus": [4, 10, 38, 42, 50, 58, 59, 69, 71, 72, 95, 105, 183, 203, 224, 229, 235, 236, 237, 244], "suivent": [2, 56, 58, 61, 62, 69, 85, 98, 99, 140, 203, 204, 224, 229, 231, 235, 236, 237, 239, 244], "proteg": [32, 69, 70, 224, 242], "contr": [32, 56, 62, 86, 95, 166, 224, 242], "plant": [105, 224], "produisent": [224, 242], "pend": [56, 69, 85, 172, 204, 224, 227, 229, 235, 242], "apparu": [70, 120, 224, 236, 242], "imm\u00e9diat": [18, 21, 56, 69, 113, 224, 227, 237], "poursuit": [59, 85, 204, 224, 235], "pr\u00e9voit": [56, 224, 229], "puissanc": [1, 19, 69, 90, 108, 224, 235, 236, 242], "n\u00e9gat": [38, 41, 62, 83, 99, 102, 110, 119, 134, 140, 147, 149, 183, 184, 224, 234, 235, 236, 244], "dirig": [224, 229], "intercept": [99, 224, 225, 229, 235, 236], "risqu": [14, 51, 56, 70, 142, 183, 184, 224], "masqu": [85, 224, 229, 239], "bug": [56, 69, 224], "portion": [59, 69, 70, 75, 197, 224, 235, 239, 242], "r\u00e9cuper": [2, 26, 40, 46, 50, 53, 69, 70, 95, 96, 99, 103, 119, 149, 166, 174, 187, 188, 203, 204, 224, 226, 229, 230, 231, 232, 233, 235, 236, 237, 244], "exc": [69, 224, 225], "trait": [2, 4, 10, 14, 22, 38, 41, 51, 56, 58, 61, 62, 70, 71, 77, 83, 94, 110, 113, 165, 178, 187, 198, 204, 224, 229, 235, 236, 237, 241, 242, 244], "insoup\u00e7on": [69, 224], "48606594010979": 224, "0822096637057887j": 224, "intervient": [2, 27, 41, 56, 61, 77, 224, 231, 235, 240], "accol": 224, "type_exception_1": [70, 224], "type_exception_": [70, 224], "type_exception_j": [70, 224], "type_exception_n": [70, 224], "pr\u00e9vus": [203, 224], "sp\u00e9cifi": [69, 224, 227, 229, 233, 235, 236], "tard": [2, 56, 62, 64, 69, 77, 93, 209, 224, 227, 229, 231, 235, 236, 242], "commentair": [69, 178, 206, 224, 233, 234, 242], "surviennent": [56, 224, 227, 233], "mal": [27, 56, 62, 85, 89, 94, 95, 108, 128, 174, 224, 235, 242], "caus": [56, 74, 130, 163, 224, 225, 227, 236], "syntaxerror": [2, 69, 71, 74, 104, 224, 235, 236], "tromp": [147, 180, 204, 224], "orthograph": [224, 244], "inexist": [224, 229], "importerror": [224, 229], "orthographi": [157, 224], "install": [16, 40, 46, 51, 54, 69, 132, 137, 139, 140, 142, 170, 203, 204, 224, 227, 229, 239], "erron": [119, 120, 149, 224, 235], "keyerror": [188, 224, 244], "cens": [41, 119, 205, 224], "inappropri": 224, "travaill": [2, 50, 74, 110, 177, 204, 224, 231], "oserror": 224, "input": [101, 102, 104, 105, 110, 112, 120, 139, 224, 225, 235], "output": [11, 50, 68, 139, 224], "unicodeerror": 224, "encodag": [2, 71, 224, 233], "accent": [51, 110, 165, 187, 224, 236], "anglophon": [74, 224], "interm\u00e9diair": [2, 36, 59, 61, 69, 103, 104, 197, 198, 206, 224, 227, 231, 235, 236, 237, 240, 242], "perdu": [4, 32, 56, 69, 71, 175, 185, 203, 204, 206, 224, 237, 242], "assoc": [56, 59, 61, 69, 84, 95, 104, 197, 224, 229, 235, 236, 242], "null": [14, 30, 56, 62, 78, 99, 101, 110, 115, 116, 138, 169, 179, 180, 183, 186, 187, 200, 224, 236, 237, 239], "interdit": [95, 205, 206, 224, 236], "exception_typ": [70, 224], "arithmeticerror": 224, "standarderror": 224, "modulo": [162, 224, 236], "was": [131, 224, 225], "d\u00e9rivent": 224, "1000000000": [100, 224], "ger": [51, 56, 61, 94, 109, 139, 148, 172, 224, 229, 233, 236, 237, 239, 242, 244], "aucunchiffr": [69, 224], "chiffr": [4, 33, 35, 56, 60, 69, 70, 71, 94, 96, 109, 110, 144, 193, 194, 201, 203, 224, 236, 244], "isdig": [69, 224, 236], "123a": [69, 224], "davantag": [56, 58, 224, 236], "T": [26, 27, 41, 46, 50, 51, 53, 54, 62, 68, 69, 78, 84, 85, 88, 94, 99, 111, 112, 115, 116, 134, 136, 140, 162, 164, 168, 173, 176, 202, 224], "uple": [7, 38, 69, 224, 232, 236, 244], "repr": [224, 229, 235], "interviennent": [61, 88, 224, 233], "integr": [2, 4, 19, 22, 56, 71, 177, 199, 200, 224, 231, 235, 236, 241, 242], "mauvais": [27, 56, 70, 74, 77, 137, 156, 224, 235], "pu": [56, 79, 99, 204, 224], "racine_carre": 224, "sen": [2, 7, 10, 14, 41, 42, 50, 53, 56, 59, 61, 69, 70, 83, 87, 88, 99, 101, 104, 134, 137, 155, 158, 161, 166, 204, 224, 229, 231, 232, 235, 237], "compliqu": [51, 56, 60, 61, 62, 82, 85, 88, 139, 150, 224, 240, 242, 244], "superflu": [69, 224, 236], "run_python_script_140615707794688": [], "\u00e9voqu": [56, 173, 224], "interrompt": 224, "momentan": [56, 224], "ouvert": [56, 224, 237], "ferm": [2, 50, 56, 69, 71, 121, 203, 207, 208, 224, 225, 237], "open": [4, 19, 40, 46, 50, 51, 54, 64, 69, 71, 134, 166, 174, 187, 203, 204, 210, 224, 225, 233, 237, 242, 244], "txt": [0, 4, 51, 65, 69, 71, 96, 99, 187, 188, 203, 204, 209, 210, 224, 225, 233, 236, 237], "writ": [1, 31, 40, 51, 54, 69, 163, 166, 203, 204, 210, 224, 225, 237], "clos": [51, 69, 203, 224, 225, 237, 244], "closed": 224, "tronqu": [69, 224, 236], "intervenu": 224, "voit": [42, 50, 51, 56, 69, 70, 77, 94, 99, 115, 116, 120, 131, 134, 146, 147, 148, 150, 158, 159, 193, 224, 244], "pr\u00e9mun": 224, "with": [1, 2, 4, 11, 27, 30, 31, 32, 40, 50, 51, 54, 69, 71, 75, 77, 96, 99, 112, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 163, 166, 171, 174, 185, 186, 187, 191, 192, 204, 210, 224, 225, 227, 229, 233, 235, 236, 237, 242], "context": [1, 224, 225, 235, 242], "manager": 224, "premi\u00e8rel": 225, "demeur": [225, 235], "termin": [32, 59, 69, 83, 93, 108, 175, 197, 202, 203, 225, 229, 235, 236, 237, 242], "instant": [50, 56, 77, 85, 95, 225, 236], "ordin": [4, 18, 33, 41, 56, 61, 69, 70, 71, 74, 112, 145, 166, 205, 225, 233, 236, 237, 239, 242], "sy": [40, 69, 111, 170, 171, 172, 175, 203, 225, 230, 233, 236, 239, 242], "fonc": [178, 225], "foncb": 225, "end": [4, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 56, 58, 59, 61, 62, 69, 70, 81, 83, 85, 103, 111, 112, 124, 131, 134, 137, 146, 165, 179, 183, 184, 187, 188, 200, 203, 225, 229, 236, 242, 244], "foncc": 225, "volontair": [56, 110, 225], "format_stack": 225, "usr": [170, 185, 203, 225], "lib": [4, 46, 53, 67, 68, 71, 99, 145, 147, 170, 171, 172, 185, 203, 225, 229], "python3": [46, 68, 99, 145, 147, 170, 171, 185, 203, 225, 229], "runpy": 225, "py": [2, 4, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 50, 53, 54, 64, 69, 71, 74, 84, 85, 99, 108, 132, 137, 139, 140, 142, 145, 147, 170, 171, 172, 185, 200, 203, 204, 208, 225, 229, 231, 235, 236, 237, 239, 246], "196": [110, 150, 186, 188, 225], "_run_module_as_main": 225, "_run_cod": 225, "main_global": 225, "86": [77, 99, 110, 116, 119, 123, 132, 167, 204, 225, 236], "run_global": 225, "hom": [4, 39, 40, 46, 71, 99, 132, 137, 139, 140, 142, 145, 147, 170, 185, 203, 225], "xadupr": [39, 46, 99, 132, 137, 139, 140, 142, 145, 147, 170, 185, 203, 225], "packag": [3, 16, 19, 21, 22, 40, 46, 53, 99, 145, 147, 170, 171, 172, 185, 203, 225, 229, 239, 241, 242], "systemex": 225, "main": [4, 7, 11, 51, 54, 65, 69, 71, 95, 96, 99, 119, 163, 166, 187, 188, 203, 204, 209, 210, 225, 242], "argv": 225, "cmd": [40, 68, 225, 229], "build": [11, 67, 177, 225], "341": [84, 225], "build_main": 225, "298": [99, 150, 225], "app": 225, "force_all": 225, "filenam": [11, 51, 170, 171, 172, 185, 204, 209, 210, 225, 227, 237], "355": 225, "build_updat": 225, "builder": 225, "293": [50, 225], "to_build": 225, "313": [50, 150, 225], "updated_docnam": 225, "read": [1, 31, 39, 40, 51, 54, 68, 96, 166, 174, 203, 204, 210, 225, 233, 237, 240, 242, 244], "420": [99, 130, 225], "_read_serial": 225, "docnam": 225, "441": 225, "read_doc": 225, "498": [115, 116, 150, 225, 236], "publish": [75, 225], "docutil": [4, 71, 225], "cor": [1, 51, 54, 61, 65, 83, 112, 133, 135, 170, 171, 172, 180, 185, 190, 203, 225], "234": [51, 110, 225, 236], "pars": [4, 40, 225, 237], "io": [4, 19, 22, 30, 39, 40, 46, 51, 67, 71, 82, 87, 163, 166, 170, 171, 172, 174, 185, 225, 237, 240, 244], "105": [159, 225, 229], "reader": 225, "parser": 225, "81": [50, 77, 116, 225], "statemachin": 225, "inputlin": 225, "inlin": [46, 50, 51, 53, 54, 77, 78, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 95, 99, 106, 107, 110, 113, 114, 115, 116, 117, 118, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 159, 160, 162, 164, 168, 169, 178, 186, 200, 204, 207, 208, 210, 225], "rst": [225, 237], "stat": [11, 39, 46, 50, 85, 134, 153, 166, 170, 171, 172, 174, 176, 185, 225, 229, 239, 240, 242], "169": [2, 85, 141, 150, 225, 231], "result": [11, 30, 31, 93, 99, 150, 153, 171, 225, 242], "statemachinew": 225, "input_lin": 225, "input_offset": 225, "233": [50, 79, 110, 150, 205, 225], "next_stat": 225, "check_lin": 225, "445": 225, "3024": 225, "titl": [27, 50, 54, 77, 78, 83, 85, 88, 99, 132, 133, 136, 156, 166, 168, 169, 225, 229, 235, 244], "lstrip": 225, "styl": [163, 171, 173, 225, 236], "lineno": [170, 171, 172, 185, 225, 227], "325": [51, 225], "new_subsect": 225, "391": [185, 225], "newabsoffset": 225, "nested_pars": 225, "279": [31, 170, 171, 225], "state_machin": 225, "block": [225, 235], "195": [206, 225], "2785": [150, 225], "underlin": [225, 229], "2355": 225, "explicit_markup": 225, "nodelist": 225, "blank_finish": 225, "explicit_construct": 225, "2367": 225, "expmatch": 225, "2104": 225, "run_direct": 225, "2154": [46, 225], "directive_inst": 225, "789": 114, "err": [40, 85, 99, 138, 150, 225, 233], "run_python_script": 225, "431": [50, 225], "run_python_script_140615745756480": [], "raise_except": 225, "an": [1, 4, 7, 11, 14, 51, 53, 56, 59, 61, 68, 70, 74, 75, 93, 110, 111, 191, 192, 204, 225, 229, 235, 242], "error": [1, 40, 85, 99, 134, 150, 225], "raised": [4, 225], "insidef": 225, "exc_typ": 225, "exc_valu": 225, "exc_traceback": 225, "exc_info": 225, "format_tb": 225, "run_python_script_140616118032256": [], "extract_tb": 225, "pr\u00e9cieux": [61, 225], "how": [1, 4, 22, 31, 50, 51, 71, 99, 111, 191, 192, 198, 225, 236], "flask": [225, 241], "excellent": [56, 225, 229], "debug": [41, 225, 242], "product": [3, 225], "librair": [4, 6, 39, 48, 50, 53, 54, 58, 64, 71, 72, 150, 162, 166, 172, 177, 225, 236, 241], "provoqu": [50, 51, 56, 64, 69, 74, 102, 104, 105, 197, 205, 225, 227, 235, 236, 239], "run_python_script_140615707804672": [], "domain": [46, 56, 58, 60, 61, 77, 225], "typiqu": [209, 225], "perdr": [56, 87, 185, 204, 225], "original": [46, 49, 54, 61, 70, 71, 95, 115, 116, 175, 225, 231, 244], "issu": [1, 31, 51, 54, 56, 62, 70, 80, 84, 99, 110, 119, 131, 149, 166, 187, 225, 237], "run_python_script_140615699860352": [], "abov": [30, 75, 225], "following": [4, 11, 31, 50, 65, 75, 191, 192, 225, 229], "gard": [7, 18, 51, 53, 54, 56, 69, 79, 83, 88, 91, 93, 95, 96, 99, 108, 113, 114, 115, 116, 120, 121, 134, 138, 150, 165, 166, 184, 225, 239, 242], "built": [11, 170, 171, 172, 185, 225, 235, 239], "attrap": [56, 151, 225, 229], "run_python_script_140615721860992": [], "lanc": [12, 13, 21, 32, 69, 70, 87, 95, 165, 225, 227, 237, 242], "restrict": [75, 225], "d\u00e9veloppeur": [17, 42, 225, 227], "corrig": [37, 41, 42, 58, 59, 61, 64, 69, 85, 102, 105, 119, 175, 205, 206, 225, 227], "fautif": 225, "file_to_read": 225, "content": [0, 11, 40, 54, 59, 62, 69, 110, 204, 225, 237], "filenotfounderror": [40, 225, 244], "malgr": [56, 60, 149, 166, 225, 235, 236], "download_content": 225, "permiss": [75, 225, 244], "os": [40, 134, 163, 171, 172, 174, 185, 203, 225, 229, 237, 239, 244], "path": [7, 10, 21, 30, 40, 65, 68, 94, 95, 171, 172, 185, 203, 225, 229, 237, 239], "read_fromf_fil": 225, "ressourc": [19, 74, 225, 237, 242], "unicodeencodeerror": 225, "inattendu": [2, 203, 225, 231, 235], "unabl": [27, 40, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185, 225, 244], "w": [40, 46, 54, 61, 69, 78, 94, 111, 112, 163, 166, 187, 188, 189, 190, 198, 203, 204, 209, 210, 225, 227, 229, 237, 242, 244], "encoding": [2, 51, 54, 69, 71, 74, 111, 166, 203, 204, 210, 225, 234, 236], "utf": [2, 51, 54, 71, 74, 96, 162, 166, 203, 204, 210, 225, 229, 233, 236, 237], "\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9": 225, "ascii": [74, 225, 233, 236, 237], "\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0": 225, "run_python_script_140615709348608": [], "decod": [39, 96, 124, 166, 198, 204, 210, 225, 233, 236, 240], "codec": 225, "ascii_decod": 225, "unicodedecodeerror": 225, "can": [1, 2, 4, 11, 31, 39, 46, 50, 65, 71, 104, 131, 225, 229, 230, 231], "byt": [4, 71, 203, 225, 233, 237, 240], "0xc3": 225, "ordinal": 225, "128": [1, 83, 90, 108, 156, 225], "stack": [11, 50, 51, 94, 226], "warning": [11, 46, 84, 99, 130, 131, 132, 133, 134, 142, 149, 177, 185, 226, 244], "logging": [11, 226, 242], "soup\u00e7on": 227, "t\u00f4t": [56, 114, 159, 227], "deprecationwarning": 227, "dispara\u00eetr": [54, 175, 227, 229], "prochain": [56, 88, 110, 133, 204, 227, 229, 235], "releas": [41, 99, 227, 242], "scik": [4, 22, 62, 71, 99, 131, 133, 137, 139, 140, 142, 144, 147, 149, 177, 227, 241], "learn": [4, 22, 62, 71, 99, 131, 133, 137, 139, 140, 142, 144, 147, 149, 177, 227, 241], "api": [39, 46, 62, 99, 139, 227, 240, 242], "subsist": 227, "appui": [51, 56, 64, 69, 132, 144, 205, 227, 229], "warn": [46, 84, 99, 132, 142, 227, 244], "userwarning": [84, 85, 133, 142, 227], "agac": 227, "deviennent": [101, 131, 203, 227], "\u00e9volu": [14, 33, 50, 56, 59, 60, 69, 70, 74, 77, 81, 85, 88, 131, 185, 227, 229, 235, 236, 237, 242, 244], "difficil": [14, 56, 61, 62, 69, 74, 117, 118, 130, 145, 186, 204, 206, 227, 235, 236, 242], "fxn": 227, "deprecated": [46, 99, 145, 147, 227], "catch_warning": [133, 134, 227], "simplefilt": [134, 149, 227], "ignor": [4, 130, 133, 134, 149, 204, 227, 233, 235], "r\u00f4l": [56, 58, 84, 136, 227, 235, 236, 244], "record": [39, 51, 56, 163, 227, 240], "alway": [191, 192, 227, 235, 239], "category": [30, 133, 139, 155, 165, 227], "monwarning": 227, "enregistrent": [171, 227], "\u00e9ven": [56, 88, 227, 232, 236, 242], "r\u00e9flex": [2, 24, 29, 43, 99, 125, 203, 209, 227, 231, 236, 246], "enlev": [10, 39, 51, 59, 64, 69, 74, 77, 93, 95, 96, 104, 107, 110, 118, 135, 147, 156, 183, 195, 203, 227, 229, 236, 237, 239, 240], "rendent": [95, 193, 227], "illisibl": [87, 170, 227, 235, 237, 240], "mass": [227, 237], "inutil": [41, 60, 64, 69, 91, 100, 123, 194, 195, 227, 235, 242], "silenci": [50, 60, 227], "activ": [56, 132, 227, 229, 242], "d\u00e9bugg": [227, 242], "d\u00e9velopp": [50, 56, 59, 81, 151, 227, 229, 236, 239, 240, 241], "transmettr": [69, 163, 227, 235, 237, 240, 242], "connex": [1, 7, 15, 19, 56, 59, 95, 125, 183, 184, 227], "attaqu": 227, "tkint": [228, 235, 239, 242], "disposit": [60, 62, 228, 237, 239, 242], "fen\u00eatr": [51, 189, 228, 235, 236, 242], "even": [7, 228], "rendr": [4, 14, 22, 41, 71, 87, 95, 98, 99, 204, 229, 235], "convivial": 229, "demandent": 229, "attend": [12, 13, 56, 64, 69, 209, 229, 237, 242, 244], "pression": [12, 13, 109, 229, 242], "touch": [56, 60, 109, 200, 229, 235, 242], "clavi": [60, 229, 235], "clic": [12, 13, 229, 242], "sour": [12, 13, 229, 242], "multitud": [41, 229], "exploit": [56, 87, 229, 232, 233, 237, 239, 242], "limit": [56, 61, 75, 84, 123, 132, 194, 200, 229, 236, 242], "wxpython": 229, "altern": [39, 50, 56, 137, 139, 140, 159, 229, 237, 240], "rich": 229, "r\u00e9cent": [50, 56, 131, 204, 229, 235, 239, 241, 242], "pyqt5": 229, "pyqt4": 229, "distribu": [1, 4, 5, 16, 27, 50, 56, 61, 62, 70, 71, 74, 77, 84, 137, 140, 145, 147, 148, 159, 162, 164, 175, 176, 178, 187, 229, 242], "verion": 229, "visuel": [1, 4, 42, 56, 61, 71, 87, 229], "jol": 229, "fr\u00e9quenc": [14, 33, 56, 77, 96, 175, 197, 209, 210, 229, 242], "licenc": 229, "other": [1, 11, 75, 99, 210, 229], "graphical": 229, "user": [4, 21, 67, 68, 155, 174, 229, 236], "presqu": [50, 62, 79, 95, 113, 137, 142, 144, 158, 180, 186, 187, 197, 229, 235, 237, 242], "changent": [85, 186, 229, 233, 236], "\u00e9voluent": [85, 160, 229], "dout": [14, 35, 42, 50, 56, 60, 61, 62, 69, 70, 89, 99, 108, 115, 116, 120, 123, 136, 141, 204, 209, 229, 235, 236], "vit": [30, 35, 41, 56, 74, 83, 87, 88, 89, 108, 123, 130, 173, 177, 194, 198, 199, 204, 229, 239], "compos": [1, 14, 15, 19, 35, 56, 58, 59, 62, 69, 95, 125, 136, 137, 138, 143, 153, 171, 183, 184, 229, 235, 236, 239], "forum": 229, "discuss": [56, 229], "\u00e9changent": [69, 229, 240], "moteur": [1, 51, 63, 64, 111, 203, 229, 237], "r\u00e9solus": [1, 229], "stackoverflow": 229, "linux": [4, 16, 40, 63, 66, 71, 74, 187, 229, 233, 236, 237], "requiert": [14, 16, 51, 64, 77, 115, 116, 229], "\u00e9tap": [41, 51, 56, 58, 59, 69, 85, 87, 89, 95, 107, 112, 131, 169, 173, 179, 180, 187, 188, 193, 229, 236, 237, 240, 244], "named": [51, 188, 229], "sudo": [67, 229], "apt": [40, 67, 68, 229], "tk": [229, 235, 242], "mun": [56, 69, 189, 229, 235], "lin\u00e9air": [1, 22, 49, 56, 61, 62, 77, 88, 99, 111, 112, 113, 114, 115, 116, 130, 131, 133, 134, 139, 149, 150, 162, 168, 178, 179, 180, 186, 229, 239], "troubl": 229, "d\u00e9roul": [2, 51, 60, 71, 94, 229, 235, 237], "Du": 229, "pr\u00e9voir": [56, 62, 69, 149, 229, 236], "action": [75, 229, 242], "dessin": [8, 26, 46, 62, 82, 87, 89, 93, 99, 133, 183, 184, 207, 208, 229], "allon": [50, 59, 62, 114, 144, 204, 229], "scind": [27, 69, 229, 237], "entrem\u00eal": [229, 242], "widget": 229, "re\u00e7oivent": [69, 229, 235], "pilotent": 229, "contr\u00f4lent": 229, "zone_text": 229, "label": [11, 27, 31, 54, 77, 83, 87, 91, 95, 117, 119, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 149, 150, 156, 160, 186, 191, 192, 210, 229, 235, 242], "enrob": 229, "mainloop": [229, 235, 242], "l\u00e9gend": [51, 229, 242], "voisin": [3, 9, 10, 30, 38, 58, 59, 61, 108, 117, 118, 123, 125, 128, 133, 144, 146, 189, 229], "doiv": 229, "config": [65, 67, 229, 242], "\u00e9tat": [1, 4, 51, 61, 71, 91, 103, 109, 110, 160, 205, 229, 235, 242], "disabled": [204, 229, 242], "gris": [229, 239], "reven": [59, 83, 95, 133, 209, 229, 235, 239], "rappel": [19, 22, 23, 50, 60, 64, 69, 85, 95, 103, 121, 137, 179, 180, 183, 204, 229, 235, 236], "but": [2, 14, 30, 31, 41, 50, 59, 62, 71, 74, 75, 139, 171, 229, 236], "button": [229, 235, 242], "int\u00e9ress": [14, 30, 33, 46, 50, 52, 56, 59, 61, 62, 69, 77, 86, 88, 99, 108, 109, 131, 147, 159, 160, 200, 229, 235, 236, 237, 239, 244], "interdir": [229, 237, 242], "visibl": [99, 137, 144, 210, 229, 237], "cr\u00e9ent": [54, 229], "gif": 229, "im": [83, 131, 229], "photoimag": 229, "chameau": 229, "entry": [229, 235], "delet": [65, 229], "differ": 229, "s\u00e9par": [2, 27, 56, 61, 62, 66, 83, 94, 113, 114, 133, 152, 175, 189, 203, 206, 207, 208, 209, 210, 229, 231, 235, 236, 237, 244], "nsecond": 229, "width": [11, 95, 133, 142, 144, 163, 183, 184, 190, 200, 201, 202, 229, 235], "largeur": [1, 56, 70, 84, 108, 121, 175, 229], "height": [11, 174, 229], "hauteur": [56, 70, 121, 200, 208, 229], "checkbutton": 229, "intvar": 229, "radiobutton": 229, "d\u00e9coch": 229, "select": [51, 68, 134, 229], "deselect": 229, "semblabl": [56, 133, 229, 236, 244], "group": [14, 22, 56, 62, 87, 94, 96, 99, 110, 133, 153, 162, 165, 174, 191, 192, 203, 229, 235], "case1": 229, "case2": 229, "case3": 229, "s\u00e9lection": [50, 51, 54, 56, 77, 229, 237], "numero": [110, 229], "agiront": 229, "intitul": [56, 229], "listbox": 229, "cliqu": [46, 229, 242], "select_set": 229, "s\u00e9lect": [3, 62, 69, 95, 128, 229, 236], "select_clear": 229, "retir": [158, 203, 229, 242], "curselect": 229, "sel": [75, 229], "siz": [2, 9, 10, 11, 12, 13, 40, 42, 50, 68, 77, 78, 82, 86, 95, 99, 112, 115, 116, 132, 135, 149, 168, 207, 208, 229, 231, 236, 237], "indextkk": 229, "adjoindr": [229, 242], "vertical": [8, 10, 50, 56, 70, 229], "fram": [11, 229], "parent": [153, 229, 239], "scrollbar": 229, "yscrollcommand": 229, "yview": 229, "sid": [229, 235], "Y": [2, 10, 14, 27, 38, 50, 56, 61, 62, 70, 94, 110, 111, 112, 113, 114, 115, 116, 132, 133, 134, 135, 160, 170, 203, 204, 229, 231, 232, 236], "horizontal": [8, 10, 50, 56, 70, 77, 188, 229], "tix": 229, "partagent": [34, 51, 229], "exportselect": 229, "aspect": [19, 56, 88, 133, 158, 193, 229, 242], "itemconfig": 229, "vouloir": [2, 101, 204, 229, 231], "bel": [87, 165, 229], "ttk": 229, "\u00e9tend": [69, 229, 236, 237], "print_fil": 229, "idem": [69, 229], "canv": 229, "pixel": [8, 229], "courb": [3, 51, 56, 59, 62, 70, 83, 85, 128, 130, 131, 134, 142, 199, 229], "create_lin": 229, "create_rectangl": 229, "create_text": 229, "40": [4, 30, 36, 38, 39, 50, 51, 54, 56, 71, 77, 88, 95, 99, 110, 116, 119, 122, 130, 131, 132, 134, 138, 141, 142, 146, 149, 150, 155, 169, 171, 175, 183, 184, 200, 229, 240, 244], "60": [11, 30, 46, 50, 51, 54, 55, 62, 77, 85, 99, 110, 130, 131, 135, 143, 144, 150, 156, 169, 174, 204, 210, 229, 244], "bleu": [27, 30, 62, 87, 93, 111, 165, 229], "\u00e9paisseur": [79, 122, 229], "blu": [11, 30, 54, 77, 106, 107, 118, 136, 160, 174, 229], "b\u00e9zi": 229, "assis": 229, "smooth": 229, "red": [1, 11, 26, 46, 54, 62, 77, 106, 107, 136, 137, 138, 139, 140, 143, 144, 156, 174, 229], "plein": [53, 60, 85, 86, 87, 91, 94, 120, 152, 165, 178, 193, 204, 229, 237, 242], "jaun": [30, 62, 229], "bord": [30, 38, 113, 117, 118, 163, 229], "300": [58, 59, 88, 99, 116, 117, 118, 132, 144, 150, 163, 166, 172, 185, 204, 207, 208, 229], "120": [30, 46, 56, 85, 99, 160, 175, 229, 242], "gray": [99, 229], "80": [30, 77, 84, 95, 99, 119, 131, 132, 160, 164, 169, 174, 175, 178, 229, 235, 236], "polic": 229, "arial": 229, "black": [1, 11, 46, 149, 151, 229], "arborent": 229, "edit": [1, 4, 56, 62, 67, 81, 229], "Nous": [14, 61, 77, 99, 112, 114, 144, 174, 175, 188, 229, 236], "avon": [14, 91, 99, 175, 179, 188, 204, 229], "optionnel": [69, 229, 236], "Ou": [2, 23, 34, 51, 69, 71, 85, 99, 104, 105, 112, 124, 135, 144, 153, 163, 193, 229, 235, 236, 237], "cnf": 229, "kw": 229, "unbound": 229, "resourc": [1, 85, 229], "are": [1, 30, 31, 50, 65, 137, 150, 171, 191, 192, 229, 236, 239], "specified": [99, 150, 229], "keyword": [229, 235], "overview": [4, 71, 229], "about": [1, 2, 4, 6, 14, 41, 56, 59, 60, 69, 81, 84, 108, 111, 153, 161, 187, 191, 192, 229, 231, 236, 240, 242], "allowed": 229, "key": [2, 5, 11, 27, 51, 67, 69, 94, 95, 120, 123, 162, 175, 188, 190, 229, 231, 235, 236], "mast": [30, 65, 85, 229], "activebackground": 229, "activeforeground": 229, "anchor": 229, "background": 229, "bitmap": 229, "borderwidth": 229, "cursor": 229, "disabledforeground": 229, "foreground": 229, "highlightbackground": 229, "highlightcolor": 229, "highlightthickness": 229, "justify": 229, "padx": 229, "pady": 229, "relief": 229, "repeatdelay": 229, "repeatinterval": 229, "takefocus": 229, "textvari": 229, "wraplength": 229, "specific": 229, "compound": 229, "default": [4, 11, 39, 40, 65, 69, 139, 229, 235, 239, 240, 244], "overrelief": 229, "fond": [56, 204, 229], "align": [51, 163, 206, 229, 235, 236], "gauch": [18, 30, 38, 51, 56, 61, 70, 83, 88, 152, 154, 156, 229, 236, 237, 239], "droit": [10, 51, 56, 59, 61, 62, 69, 70, 77, 83, 88, 95, 134, 138, 152, 154, 156, 164, 189, 204, 205, 229, 235, 236, 237, 239], "centr": [8, 14, 30, 117, 118, 229, 235], "tabul": [69, 160, 229, 236, 237, 244], "souci": 229, "grill": [51, 53, 109, 134, 201, 229], "risquent": [204, 229], "attendus": 229, "empil": [207, 208, 229, 242], "uns": [4, 32, 56, 71, 74, 84, 166, 204, 229, 237, 244], "top": [51, 65, 68, 125, 191, 192, 229], "bottom": [149, 191, 192, 229], "expand": [1, 229], "occup": [38, 61, 108, 189, 229, 233, 237, 242], "both": 229, "axe": [8, 10, 31, 51, 56, 70, 85, 99, 106, 107, 134, 135, 136, 183, 184, 199, 229], "coup": [1, 2, 51, 56, 70, 80, 83, 91, 95, 110, 113, 114, 136, 177, 183, 184, 195, 202, 204, 229, 231, 236], "position": [62, 117, 118, 229], "t\u00e2ton": [81, 229], "pack_forget": 229, "r\u00e9appara\u00eetr": 229, "column": [50, 51, 52, 54, 67, 85, 86, 99, 111, 115, 116, 119, 130, 132, 136, 137, 139, 140, 141, 142, 147, 148, 150, 162, 163, 169, 174, 178, 183, 184, 204, 229], "re\u00e7u": [229, 235, 237], "tenu": [56, 74, 229], "cinq": [30, 41, 56, 62, 70, 74, 94, 144, 159, 164, 197, 229, 236, 239], "columnspan": 229, "rowspan": 229, "sticky": [204, 229], "angle": [41, 57, 58, 59, 61, 122, 125, 229], "\u00e9tendr": [56, 62, 112, 115, 229, 237], "\u00e9criv": [4, 41, 71, 102, 171, 195, 197, 229, 236], "grid_forget": 229, "parallel": [1, 82, 115, 116, 175, 185, 229, 241, 242], "50": [30, 31, 46, 50, 51, 53, 54, 56, 70, 77, 83, 88, 99, 102, 111, 114, 115, 117, 118, 123, 130, 131, 134, 136, 137, 138, 140, 146, 160, 161, 164, 165, 169, 171, 174, 184, 185, 186, 191, 192, 204, 210, 229, 235], "place_forget": 229, "revoir": [101, 229], "travail": [16, 64, 69, 74, 82, 98, 99, 229], "dupliqu": [50, 58, 163, 229], "dessus": [56, 59, 86, 110, 112, 119, 134, 137, 153, 155, 166, 187, 193, 205, 229, 235, 236, 239, 242], "invisibl": [41, 229], "\u00e9cran": [9, 10, 11, 12, 13, 69, 74, 203, 229, 236, 237], "envisag": [7, 38, 56, 59, 95, 110, 120, 188, 192, 229, 237], "d\u00e9crivent": [56, 229, 235], "outr": [33, 56, 69, 204, 229], "parcourt": [2, 39, 42, 59, 69, 83, 87, 88, 93, 95, 102, 103, 194, 229, 231, 235, 237], "regard": [10, 51, 56, 61, 69, 77, 79, 84, 85, 87, 95, 99, 110, 123, 131, 132, 136, 137, 141, 142, 143, 145, 147, 170, 172, 175, 178, 194, 198, 203, 205, 210, 229], "focus_set": 229, "entour": [69, 119, 229, 236], "cercl": [58, 62, 117, 118, 133, 134, 229], "pointill": [27, 229], "change_legend": 229, "lisibil": [74, 229], "r\u00e9duit": [14, 21, 50, 53, 62, 69, 70, 81, 96, 108, 115, 116, 120, 133, 134, 173, 186, 194, 209, 229, 235], "augmentent": 229, "sugger": [27, 56, 108, 110, 111, 115, 116, 124, 136, 163, 175, 181, 182, 183, 184, 186, 187, 188, 198, 209, 229, 236], "moindr": [50, 56, 58, 110, 157, 183, 184, 229], "proven": [2, 4, 56, 71, 229, 231, 242], "brut": [133, 135, 142, 185, 186, 229], "mouv": [56, 229], "event": [11, 56, 70, 75, 229, 242], "muet": 229, "shift": [54, 99, 229], "ctrl": 229, "alt": 229, "suppr": 229, "keysym": 229, "num": [167, 229], "relat": [51, 54, 56, 77, 78, 85, 98, 99, 111, 112, 119, 200, 229, 236, 237, 242], "coin": [38, 229], "x_root": 229, "y_root": 229, "absolu": [14, 56, 61, 112, 113, 114, 118, 131, 140, 147, 229, 235, 237], "contain": [2, 10, 11, 30, 120, 155, 193, 198, 229, 231], "propert": [30, 69, 229], "this": [1, 3, 4, 11, 27, 30, 31, 65, 75, 81, 93, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 185, 191, 192, 229, 235, 239, 242], "generated": [24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 159, 229], "one": [0, 1, 4, 6, 10, 11, 49, 50, 51, 53, 111, 112, 130, 139, 147, 171, 172, 191, 192, 229], "occur": 229, "keypress": 229, "keyreleas": 229, "keyboard": 229, "buttonpress": 229, "buttonreleas": 229, "motion": 229, "enter": 229, "leav": [11, 152, 229, 239], "mousewheel": 229, "mous": [11, 229], "visibility": 229, "unmap": 229, "focusin": 229, "focusout": 229, "circulat": 229, "colormap": [50, 229], "gravity": 229, "reparent": 229, "destroy": [229, 235], "activat": 229, "deactivat": 229, "window": [2, 10, 23, 54, 69, 74, 229, 233, 236, 237], "callback": [132, 229], "thes": [1, 11, 191, 192, 229], "registered": 229, "using": [1, 11, 30, 54, 229, 242], "bind": [229, 242], "bind_all": 229, "bind_class": 229, "tag_bind": 229, "called": [11, 191, 192, 229], "first": [1, 11, 50, 99, 168, 191, 192, 229], "will": [1, 11, 46, 65, 85, 99, 145, 147, 191, 192, 229], "hav": [11, 50, 54, 139, 191, 192, 229], "brac": 229, "which": [10, 11, 30, 31, 65, 142, 229], "serial": 229, "numb": [10, 11, 13, 30, 31, 32, 36, 39, 40, 50, 52, 99, 123, 131, 137, 139, 140, 168, 169, 186, 229, 230, 235, 242], "pressed": 229, "wheth": [1, 75, 229], "exposed": 229, "keycod": 229, "string": [1, 11, 40, 50, 51, 69, 70, 165, 166, 172, 191, 192, 203, 229, 235, 236, 237, 239], "when": [1, 7, 11, 16, 191, 192, 229], "occurred": 229, "screen": [11, 229], "charact": [74, 229], "send_event": 229, "see": [2, 7, 10, 11, 12, 13, 50, 65, 71, 74, 96, 171, 229, 231, 236], "keysym_num": 229, "delt": [31, 41, 51, 77, 81, 85, 110, 112, 229], "wheel": [1, 16, 229], "mov": [11, 229], "ev": [174, 204, 229], "rel\u00e2ch": [189, 229, 242], "curseur": [132, 229], "boug": [42, 113, 117, 118, 201, 229], "sequenc": [4, 11, 71, 229, 236], "func": [171, 172, 229], "add": [0, 11, 40, 51, 67, 77, 94, 111, 155, 229], "at": [1, 4, 11, 26, 27, 30, 39, 42, 50, 51, 56, 62, 69, 77, 99, 101, 106, 107, 113, 114, 120, 139, 151, 152, 191, 192, 193, 204, 229, 233, 235, 236, 240], "concatenated": [191, 192, 229], "detail": [1, 2, 71, 74, 163, 229, 236], "wher": [1, 4, 13, 50, 51, 191, 192, 229], "control": [85, 229], "mod2": 229, "mod3": 229, "lock": [1, 32, 229, 241], "mod4": 229, "m4": 229, "button1": 229, "b1": [51, 77, 194, 204, 229], "mod5": 229, "m5": [120, 229], "button2": 229, "b2": [51, 77, 194, 229], "button3": 229, "b3": [51, 194, 229], "button4": 229, "b4": 229, "button5": 229, "b5": 229, "tripl": [56, 164, 229], "mod1": 229, "pressing": 229, "omitted": 229, "also": [50, 65, 137, 139, 140, 229], "virtual": 229, "astring": 229, "arbitrary": 229, "event_generat": [229, 242], "they": [1, 56, 65, 229, 239], "must": [30, 50, 65, 120, 139, 229, 239], "appear": 229, "shortly": 229, "furth": [50, 131, 163, 229], "bound": [1, 50, 229], "invoked": 229, "additional": [11, 229], "boolean": [11, 50, 51, 229], "paramet": [11, 85, 86, 229], "specif": [229, 235], "additionally": 229, "replac": [69, 82, 87, 96, 101, 115, 130, 150, 171, 172, 174, 185, 204, 229, 236, 239, 244], "previous": [11, 163, 229], "allow": [7, 51, 229], "unbind": 229, "without": [75, 229], "memory": [1, 11, 68, 131, 229], "leak": 229, "returned": 229, "affiche_touche_presse": 229, "evt": 229, "presse": 229, "r\u00e9sult": [30, 51, 56, 69, 132, 229, 236], "292": 229, "239": [50, 110, 185, 229], "9261224": 229, "caract\u00e9rist": [51, 56, 74, 170, 229], "stipul": [54, 110, 229, 239], "souc": [204, 229], "forc": [9, 42, 50, 56, 65, 83, 95, 113, 152, 164, 188, 204, 229, 235, 236, 237, 239], "exemple_bind": 229, "python26": 229, "933": 229, "_bind": 229, "_w": 229, "888": [54, 150, 229], "what": [1, 4, 16, 50, 71, 165, 191, 192, 229, 239], "_tkint": 229, "tclerror": 229, "bad": [131, 191, 192, 229], "Sa": [61, 229, 235], "d\u00e9sact": [229, 242], "unbind_all": 229, "xsyntax": 229, "p\u00e9ripher": 229, "thread": [1, 32, 64, 229, 239, 241], "auquel": [32, 56, 69, 158, 159, 171, 173, 229, 236, 239], "connect": [7, 10, 19, 59, 69, 75, 84, 93, 108, 229, 237], "toplevel": 229, "add_cascad": 229, "mainmenu": 229, "msousmenu": 229, "add_command": 229, "fonction1": [195, 229], "sm1": 229, "sm2": 229, "ajoute_bouton": 229, "mettr": [32, 50, 56, 69, 113, 115, 116, 139, 144, 159, 162, 188, 229, 235, 244], "deiconify": 229, "geometry": [46, 229], "iconify": 229, "ic\u00f4n": 229, "resiz": [11, 52, 180, 186, 229], "bool\u00e9en": [6, 38, 49, 50, 51, 62, 69, 229, 235], "titr": [51, 74, 77, 85, 163, 204, 229, 242, 244], "withdraw": 229, "\u00e9tendu": [2, 58, 99, 229, 231, 235], "compl\u00e8tent": 229, "progressbar": 229, "treeview": 229, "dirtre": 229, "fileselectbox": 229, "in\u00e9vit": [56, 229, 242], "win": [3, 62, 229, 242], "appartiennent": 229, "provient": [95, 229, 235, 237, 239], "attendr": [1, 32, 56, 59, 70, 229, 242], "simultan": [56, 229, 235, 236, 242], "nouvelle_fenetr": 229, "resultat": [96, 108, 229], "sec": 229, "entrer": [41, 229, 242], "quit": [11, 229], "fenetr": 229, "apprentissag": [1, 3, 27, 62, 99, 128, 130, 133, 134, 139, 142, 144, 146, 149, 150, 186, 189, 229], "ma\u00eetris": [19, 74, 229, 235], "coding": [1, 2, 71, 74, 203, 204, 229, 233, 236], "r\u00e9pertoir": [1, 4, 7, 12, 13, 69, 71, 98, 99, 177, 203, 229, 237, 239, 244], "fileselect": 229, "getcwd": [172, 229, 237], "get_list": 229, "isdir": [229, 237], "listf": 229, "listd": [40, 163, 174, 203, 229, 237], "ch": [59, 229, 242], "fi": [68, 166, 229, 237], "lifil": 229, "lid": 229, "wm_titl": 229, "fli": 229, "annul": [56, 89, 111, 112, 134, 229], "update_chemin": 229, "update_list": 229, "precedent": [195, 196, 229, 235, 236], "rentr": [56, 61, 171, 204, 229], "update_sel": 229, "cget": 229, "reviennent": [56, 95, 229], "isol": [229, 235, 237], "gestion": [229, 239], "\u00e9v\u00e9nementiel": 229, "diss\u00e9min": 229, "espion": 229, "r\u00e9activ": [56, 229, 242], "r\u00e9ag": [53, 56, 70, 229, 242], "contourn": [39, 56, 95, 96, 144, 229, 240], "d\u00e9coup": [10, 14, 27, 62, 69, 83, 88, 94, 144, 165, 170, 187, 229, 235, 236, 237, 244], "scientif": [60, 229], "pr\u00e9sentent": [1, 56, 166, 203, 229, 237], "t\u00eat": [61, 69, 154, 229], "lap": 229, "exprim": [4, 30, 41, 56, 59, 61, 70, 71, 134, 183, 186, 187, 204, 229], "millisecond": [56, 229, 232, 242], "id": [7, 40, 77, 82, 87, 166, 229, 235, 236], "after_cancel": 229, "personnifi": 229, "substitu": [229, 235], "pren": [27, 53, 56, 95, 112, 142, 204, 229], "malistbox": 229, "nearest": [62, 123, 133, 229], "bg": 229, "itemconfigur": 229, "prolong": 229, "mafenetr": 229, "creation": [39, 229], "commande_bouton1": 229, "commande_bouton2": 229, "lab": 229, "pointeur": 229, "r\u00e9cept": 229, "reprogramm": [2, 229, 231], "consult": [98, 99, 229], "intervenus": 229, "offrent": [229, 236], "feront": [132, 229], "mafenetreseq": 229, "remis": [115, 116, 229], "perso": 229, "rooty": 229, "tour": [9, 12, 37, 89, 95, 152, 161, 177, 193, 229, 235, 239], "lent": [4, 41, 50, 58, 59, 60, 61, 71, 91, 101, 153, 166, 170, 171, 172, 183, 184, 186, 230, 236, 240], "conservent": 230, "classeperson": 230, "person": [14, 30, 40, 56, 61, 64, 69, 74, 75, 78, 85, 98, 99, 110, 119, 204, 230, 232, 236, 239, 240], "georg": [162, 230], "bool": [3, 4, 7, 10, 11, 13, 50, 51, 69, 71, 151, 161, 230, 235], "_field": 230, "comptag": 230, "support": [69, 74, 101, 102, 230, 236, 242, 244], "appendleft": [158, 230], "reten": [27, 50, 56, 69, 131, 203, 230, 236, 237, 239, 242], "agil": 230, "perd": [56, 60, 70, 110, 171, 172, 175, 186, 195, 230, 236], "perform": [6, 14, 27, 52, 53, 56, 59, 62, 71, 77, 83, 130, 131, 132, 134, 136, 137, 139, 140, 142, 144, 146, 150, 160, 198, 199, 201, 230, 237, 242], "flagr": [99, 230], "append_time_list": 230, "append_time_dequ": 230, "07087049999972805": [], "06322000000000116": [], "434": [2, 172, 231], "6456": [2, 231], "6933": [2, 231], "s1": [2, 137, 157, 166, 231], "s2": [2, 51, 69, 137, 157, 231, 236, 237], "s3": [2, 46, 231], "\u00e9vitent": [2, 231], "volumin": [2, 56, 99, 231, 236], "construction_class": [5, 72, 231], "docstring": [49, 71, 231], "diff\u00e8rent": [2, 231], "abreg": [2, 16, 69, 206, 231, 236], "dix_entiers_carr": [2, 5, 71, 231], "occurrent": [2, 33, 69, 96, 209, 231, 236], "popular": [2, 231, 239], "discour": [2, 203, 204, 231], "polit": [2, 56, 231], "vocabulair": [2, 62, 155, 193, 231], "why": [2, 22, 231], "ncol": [2, 115, 231], "vect": [2, 231], "vect2mat": [2, 5, 231], "strftim": [2, 4, 71, 231, 232], "strptim": [2, 51, 231], "01": [2, 11, 23, 33, 41, 43, 50, 51, 54, 77, 78, 95, 99, 111, 112, 115, 116, 124, 130, 131, 134, 137, 138, 150, 164, 180, 184, 203, 231, 232, 236, 242, 246], "2014": [2, 51, 97, 191, 192, 231], "str2dat": [2, 5, 231], "d\u00e9compos": [1, 2, 41, 52, 56, 59, 70, 90, 110, 135, 153, 193, 198, 231], "tableur": [2, 231, 237], "case11": [2, 231], "case12": [2, 231], "case13": [2, 231], "case21": [2, 231], "case22": [2, 231], "case23": [2, 231], "to_csv": [2, 51, 119, 163, 204, 231], "read_csv": [2, 30, 51, 54, 85, 99, 119, 163, 187, 188, 204, 231], "excel": [2, 19, 69, 74, 231, 237], "read_excel": [2, 54, 163, 231], "to_excel": [2, 51, 163, 231], "text2mat": [2, 5, 231], "mat2text": [2, 5, 231], "reduc": [2, 30, 159, 171, 172, 185, 231], "functool": [2, 159, 231], "mat2vect": [2, 5, 231], "fonction_carr": [2, 231], "fonction_cub": [2, 231], "integral": [2, 5, 200, 231], "minium": [2, 231], "recod": [2, 231], "6436": [2, 231], "d\u00e9parteg": [2, 231], "exaequo": [2, 231], "minindex": [2, 5, 231], "45": [2, 46, 50, 51, 54, 84, 95, 99, 123, 130, 134, 146, 148, 149, 150, 155, 165, 171, 174, 183, 184, 206, 210, 231, 235], "faibl": [2, 14, 56, 77, 78, 88, 95, 130, 131, 149, 178, 231], "intervall": [1, 2, 31, 33, 53, 56, 61, 62, 69, 70, 83, 85, 95, 112, 113, 114, 115, 159, 181, 182, 189, 190, 199, 200, 231, 239, 242], "central": [1, 2, 200, 231], "recherche_dichotom": [2, 5, 163, 173, 231], "quicksort": [2, 231], "recomment": [2, 27, 53, 62, 115, 135, 144, 185, 186, 204, 210, 231, 242], "proc\u00e9dur": [2, 204, 231, 239], "ech": [2, 108, 231], "timsort": [2, 178, 231], "amen": [2, 62, 95, 231], "fn": [2, 7, 11, 69, 96, 171, 231], "tab": [2, 41, 100, 104, 108, 168, 231], "succinct": [2, 231], "tab_posit": [2, 231], "triindex": [2, 5, 231], "varianc": [2, 41, 56, 62, 84, 102, 111, 112, 115, 116, 136, 179, 180, 200, 231], "variance_a_evit": [2, 231], "ob": [2, 78, 86, 88, 91, 93, 111, 134, 156, 163, 177, 231], "repetition_a_evit": [2, 5, 231], "pr\u00e9viennent": [2, 231], "session1": [2, 231], "176": [2, 55, 110, 150, 156, 231], "liste_modifie_dans_la_boucl": [2, 231], "runtimeerror": [2, 95, 120, 139, 231, 236], "changed": [2, 95, 231, 236], "during": [2, 95, 231, 236], "rem": [2, 172, 231], "absten": [2, 231], "habitud": [2, 14, 74, 99, 204, 231, 235], "dictionnaire_modifie_dans_la_boucl": [2, 5, 231], "fourn": [50, 51, 56, 69, 95, 232, 239], "heur": [4, 51, 56, 70, 71, 97, 204, 232, 239], "\u00e2ge": [14, 51, 77, 98, 99, 232], "n\u00e9": [203, 208, 232], "ao\u00fbt": [56, 70, 232], "1975": [204, 232], "naissanc": [51, 87, 165, 166, 232, 244], "now": [31, 95, 232, 236], "2017": [1, 61, 97, 232], "312000": 232, "age": [39, 98, 99, 232, 240], "12614": 232, "day": [4, 56, 85, 99, 204, 232], "712000": 232, "2024": [75, 97, 99, 138, 150, 232, 236, 242], "758213": [], "17610": [], "timedelt": [51, 85, 232], "multipli": [53, 56, 58, 91, 95, 150, 232, 236], "calendar": [232, 239], "calendri": [74, 232, 239], "inclu": [7, 69, 70, 83, 91, 99, 197, 203, 232, 235, 236, 237, 239], "semain": [14, 51, 54, 74, 98, 99, 203, 232], "mois": [51, 56, 74, 85, 110, 232, 244], "lund": [98, 99, 204, 232], "itermonthdays2": 232, "synchronis": [32, 232, 241], "timestamp": 232, "expriment": [56, 232], "\u00e9coul": [56, 98, 99, 121, 191, 192, 232, 239], "origin": [8, 50, 65, 82, 133, 232], "system": [1, 4, 46, 50, 51, 56, 71, 78, 83, 85, 94, 111, 112, 181, 182, 232, 233, 236, 237, 239, 242, 244], "d\u00e9cimal": [69, 232, 235, 236, 237], "compr\u00e9hensibl": [27, 232], "fromtimestamp": 232, "ts": [54, 232], "st": [4, 30, 69, 71, 94, 119, 166, 232, 233, 236], "1706202961": [], "7644427": [], "domin": 233, "emp\u00each": [123, 131, 140, 157, 233, 235, 236, 242], "japon": 233, "octet": [4, 6, 41, 71, 163, 166, 175, 204, 210, 233, 236, 237, 240], "256": [83, 90, 108, 150, 204, 210, 233], "franc": [14, 46, 51, 53, 54, 56, 60, 61, 70, 85, 96, 110, 123, 168, 204, 209, 210, 233, 236, 237], "d\u00e9codag": [94, 233], "asiat": 233, "\u00e9diteur": [2, 4, 71, 74, 233, 236, 237], "cp1252": [233, 236], "unicod": [165, 233], "encod": [99, 162, 233, 236, 237], "deviendr": 233, "e\u00e9": 233, "sb": 233, "transfer": [186, 233], "lu": [39, 50, 69, 94, 99, 210, 233, 237], "enc": [210, 233], "strict": [40, 190, 206, 233, 240], "platform": [233, 239], "getdefaultencoding": 233, "getdefaultlocal": 233, "0x7fe415a6e9e0": [], "en_us": 233, "contr\u00f4l": [56, 233, 237], "accentu": [51, 74, 204, 234], "usuel": [69, 234], "ordereddict": 234, "namedtupl": 234, "count": [30, 51, 69, 77, 84, 136, 140, 147, 148, 154, 159, 167, 175, 202, 210, 234, 236, 244], "dequ": [11, 234], "datetim": [4, 51, 71, 85, 95, 204, 234, 236, 239], "briqu": [125, 235], "\u00e9l\u00e9mentair": 235, "aisanc": 235, "acquer": 235, "connaiss": [56, 60, 61, 62, 74, 96, 133, 189, 235, 239], "constitu": [27, 56, 58, 64, 69, 83, 91, 94, 110, 135, 137, 195, 235, 240], "processeur": [1, 53, 171, 235, 242], "saut": [79, 110, 235], "ruptur": [22, 235], "combinent": 235, "moy": [2, 111, 200, 235], "allant": [58, 59, 69, 74, 152, 235], "traduit": [197, 235, 236, 244], "aller": [4, 33, 41, 50, 61, 71, 79, 83, 87, 100, 130, 133, 166, 170, 194, 198, 199, 200, 203, 235], "nuanc": 235, "reconna\u00eetr": 235, "inconnus": 235, "iskeyword": 235, "until": 235, "kwlist": 235, "async": 235, "await": 235, "finally": [31, 235], "nonlocal": 235, "ajoutent": 235, "grammair": [203, 205, 235, 244], "particuili": 235, "full": [21, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 53, 171, 174, 185, 235, 242], "grammar": 235, "absent": [56, 141, 235], "condition1": [70, 235], "instruction1": [70, 235], "instruction2": [70, 235], "instruction3": [70, 235], "instruction4": [70, 235], "affil": 235, "condition2": 235, "condition3": 235, "instruction5": 235, "instruction6": 235, "instruction7": 235, "instruction8": 235, "d\u00e9calag": [56, 96, 197, 204, 235, 236], "d\u00e9cal": [54, 69, 135, 173, 197, 208, 235, 236], "transcrivent": 235, "priorit": [50, 69, 235, 236], "prioritair": 235, "juxtapos": [235, 236, 244], "sais": [1, 14, 61, 94, 204, 235, 237], "invit": [204, 235], "press": [235, 242], "legend": [27, 51, 54, 77, 83, 85, 91, 117, 119, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 149, 150, 160, 162, 186, 210, 235], "repons": 235, "pack": [40, 235, 237, 242], "rget": 235, "manqu": [14, 22, 38, 51, 53, 54, 56, 69, 85, 95, 102, 131, 172, 205, 206, 235, 236], "nopass": 235, "expected": [1, 31, 84, 85, 139, 147, 149, 151, 176, 235], "indented": 235, "scrupul": 235, "d\u00e9guis": 235, "cond": [4, 70, 71, 74, 99, 204, 235], "jou": [56, 62, 136, 195, 202, 203, 204, 235, 242], "pr\u00e9matur": 235, "reg": [54, 94, 99, 131, 139, 149, 204, 235], "addition": [33, 56, 102, 110, 156, 235], "quelconqu": [59, 69, 111, 113, 143, 151, 188, 235, 236], "parcouru": [59, 84, 95, 235], "introduit": [4, 50, 51, 69, 71, 112, 134, 135, 142, 153, 197, 235, 239], "essentiel": [4, 56, 59, 69, 71, 134, 195, 235, 239, 242], "convertibl": 235, "notat": [54, 55, 59, 61, 69, 90, 120, 176, 206, 235], "valabl": [56, 69, 235, 236], "run_python_script_140615726035776": [], "too": [1, 65, 149, 191, 192, 235], "many": [1, 30, 31, 50, 85, 171, 191, 192, 235], "unpack": [40, 235, 237], "zip": [7, 11, 24, 35, 46, 51, 80, 84, 95, 105, 111, 113, 114, 119, 130, 163, 171, 187, 188, 203, 204, 209, 210, 235, 238, 239, 242], "collag": 235, "cribl": 235, "eratosthen": 235, "d\u00e9nich": 235, "apart": [125, 203, 235, 239], "diviseur": [96, 235], "2i": [100, 168, 235], "3i": 235, "ray": 235, "coch": [85, 235], "37": [50, 51, 54, 77, 94, 95, 99, 110, 116, 147, 152, 156, 171, 183, 184, 185, 194, 197, 204, 210, 235, 236], "47": [0, 46, 50, 51, 54, 99, 112, 131, 134, 141, 150, 156, 171, 178, 183, 184, 185, 200, 235, 244], "53": [50, 51, 54, 95, 99, 107, 131, 141, 147, 160, 165, 178, 185, 210, 221, 235], "59": [46, 50, 51, 54, 62, 95, 99, 131, 141, 150, 165, 196, 210, 235], "67": [26, 50, 54, 56, 62, 70, 77, 99, 102, 110, 119, 143, 144, 221, 235], "73": [46, 50, 54, 77, 95, 99, 119, 132, 166, 204, 221, 235], "79": [50, 54, 77, 99, 116, 119, 123, 134, 150, 168, 178, 235], "83": [50, 77, 99, 115, 116, 132, 150, 174, 185, 235], "ad\u00e9quat": [50, 53, 56, 235, 237], "interrompu": [171, 235], "produis": [105, 110, 235], "run_python_script_140615721891264": [], "parfait": [42, 56, 61, 77, 87, 235, 236], "cadr": [56, 69, 204, 235], "d\u00e9conseil": [56, 74, 203, 235, 236, 237, 239], "convient": [133, 187, 235, 239], "effectuent": [50, 69, 235], "mauv": [56, 62, 70, 137, 144, 145, 150, 235], "endroitsfootnot": 235, "expert": [56, 62, 235], "morceau": [59, 235, 236, 244], "ind\u00e9pend": [50, 56, 64, 69, 70, 77, 84, 88, 161, 176, 179, 180, 235, 240, 242], "apercevoir": [4, 71, 235], "fonction_nom": [70, 235], "par_1": [70, 235], "par_n": [70, 235], "instruction_1": [70, 235], "instruction_n": [70, 235], "res_1": [70, 235], "res_n": [70, 235], "x_1": [50, 61, 62, 70, 112, 133, 134, 183, 184, 191, 192, 235], "x_n": [61, 62, 70, 112, 162, 183, 191, 192, 235], "valeur_2": [70, 235], "souven": [54, 63, 94, 114, 204, 235], "impact": [2, 11, 14, 22, 56, 59, 69, 70, 71, 74, 150, 235, 236], "cart\u00e9sien": [95, 207, 208, 235], "polair": [117, 235], "coordonnees_polair": 235, "rho": [56, 61, 181, 182, 235], "thet": [41, 50, 62, 70, 131, 235], "arc": [7, 10, 42, 59, 78, 84, 95, 108, 183, 184, 235], "tangent": [8, 134, 235], "degr": [1, 7, 59, 78, 84, 95, 150, 176, 183, 197, 235], "degre": [7, 84, 150, 176, 235], "414214": 235, "118034": 235, "434949": 235, "116": [31, 43, 115, 235, 246], "565051": 235, "param_2": [70, 235], "devront": [204, 235], "commander_carte_orang": 235, "pai": [56, 98, 99, 110, 235], "cart": [3, 4, 22, 47, 48, 71, 193, 235], "zon": [10, 13, 14, 27, 56, 59, 60, 70, 117, 118, 136, 137, 235, 242], "pr\u00e9nom": [39, 51, 69, 103, 162, 198, 235, 237, 240], "chequ": 235, "situ": [56, 59, 123, 134, 146, 164, 235, 237], "problem_zon": 235, "follow": [69, 235], "attendu": [37, 42, 50, 62, 64, 69, 108, 110, 120, 123, 131, 147, 149, 159, 168, 170, 235, 242], "recr\u00e9": [51, 95, 235, 236, 239], "hypercub": [24, 29, 43, 125, 235, 246], "retor": 235, "valeur_": 235, "param_": 235, "identit": 235, "portent": 235, "run_python_script_140615348591680": [], "missing": [40, 51, 132, 139, 235], "required": 235, "positional": 235, "effac": [108, 235, 237, 242], "round": [62, 189, 190, 235], "ndigit": 235, "floating": 235, "given": [4, 139, 191, 192, 235], "precis": [77, 137, 160, 200, 235], "decimal": [171, 235], "digit": 235, "may": [65, 131, 235], "negat": 235, "pho": 235, "net": [56, 69, 70, 78, 94, 99, 131, 132, 133, 137, 144, 174, 235, 236, 240], "oubl": [42, 205, 206, 235], "r\u00e9percuss": [56, 235], "oppos": [10, 30, 50, 56, 78, 131, 151, 161, 235], "r\u00e9percut": [56, 235], "somme_n_premier_term": 235, "statut": 235, "rapproch": [56, 58, 77, 117, 118, 198, 235], "cit": [10, 13, 46, 51, 56, 61, 69, 74, 85, 93, 110, 235, 236, 242], "factoriel": [205, 206, 235], "ininterrompu": 235, "999": [31, 41, 99, 173, 235], "fact": 235, "factorielle_non_recurs": 235, "partout": [60, 200, 209, 235], "run_python_script_140615346889536": [], "portee_vari": 235, "var": [27, 50, 53, 54, 56, 61, 67, 68, 82, 87, 113, 139, 178, 180, 235, 237], "run_python_script_140615348306240": [], "recouvr": [70, 117, 118, 235], "opposit": 235, "locale_global": 235, "affiche_pair": 235, "fonction_local": 235, "run_python_script_140615348879232": [], "prennent": [6, 56, 61, 71, 74, 143, 163, 235], "ind\u00e9termin": 235, "transm": [69, 94, 193, 235], "liste_valeur_1": 235, "liste_valeur_p": 235, "nom_1": 235, "v_1": [58, 59, 189, 190, 235], "nom_q": 235, "v_q": 235, "n\u00e9cess": 235, "fonction2": [195, 235], "nom_fonct": 235, "reprendr": 235, "fonction_yield": 235, "callabl": [7, 10, 11, 235], "\u00e9valu": [1, 14, 22, 27, 41, 50, 56, 62, 97, 128, 130, 132, 140, 144, 147, 235, 236], "49": [46, 50, 51, 54, 99, 115, 119, 131, 150, 171, 174, 183, 184, 235], "run_python_script_140615673825344": [], "4142135623730951": 235, "78539816339744828": 235, "7853981633974483": 235, "agreg": [99, 139, 235], "23606797749979": [117, 235], "synonym": [56, 235], "perl": 235, "d\u00e9limiteur": [69, 235, 236], "est_pair": 235, "0x7fe3a6901e40": [], "Ici": [41, 69, 120, 139, 153, 157, 235, 236, 242], "mo": [51, 74, 108, 204, 235], "issubclass": 235, "cl1": [30, 235], "cl2": [30, 235], "ord": [96, 103, 104, 162, 197, 198, 235], "reload": [70, 235, 239], "recharg": [203, 204, 235, 239], "arrond": [51, 102, 235, 236], "combinaison": [30, 51, 56, 59, 94, 133, 179, 180, 235], "varient": [61, 236], "jouent": [58, 84, 236, 244], "inconnu": [62, 85, 209, 236], "\u00e9quat": [8, 10, 41, 85, 111, 112, 236], "\u00e8me": [33, 236], "55": [0, 33, 46, 50, 51, 54, 79, 95, 99, 111, 112, 121, 131, 141, 150, 156, 200, 206, 210, 221, 236], "caract\u00e9ris": [70, 236], "minuscul": [61, 69, 70, 236, 237], "majuscul": [61, 69, 70, 105, 236, 237], "diff\u00e9renci": [70, 236], "typag": 236, "fondamental": [190, 236], "desquel": 236, "d\u00e9clar": [50, 51, 204, 236, 242], "sc": [131, 236], "suivront": [236, 237], "maint": 236, "repris": 236, "marqu": [14, 56, 94, 236, 242], "privileg": 236, "virgul": [50, 69, 236, 237], "\u00e9num": 236, "incontourn": [48, 53, 54, 61, 236], "cat\u00e9gor": [30, 56, 84, 85, 111, 131, 139, 236, 237], "entra\u00een": [56, 70, 133, 204, 236], "temporair": [36, 56, 70, 236], "augment": [56, 59, 62, 77, 88, 95, 110, 115, 116, 132, 134, 146, 150, 175, 185, 186, 236, 242], "impossibil": 236, "compris": [2, 38, 61, 71, 152, 236, 244], "numeric": [166, 185, 236], "expliquent": 236, "bit": [6, 77, 124, 181, 182, 236, 237], "\u00e9quivaut": [69, 203, 236], "1011": [31, 236], "comprennent": 236, "recour": [204, 236], "opertor": 236, "zz": 236, "retournent": [171, 236, 244], "\u00e9tud": [52, 56, 83, 110, 132, 134, 236, 240], "guillemet": 236, "apostroph": [69, 236], "interchange": 236, "confondr": [61, 69, 102, 104, 156, 236], "1morceau": 236, "commod": 236, "recoll": 236, "extra": [111, 236], "\u00e9chapp": [187, 204, 236], "pourcentag": 236, "sp\u00e9cial": [51, 53, 56, 74, 153, 236, 237, 244], "retour": [56, 99, 112, 139, 236, 244], "usit": 236, "literal": [203, 236], "lexical": 236, "analys": [4, 22, 58, 62, 68, 70, 71, 77, 85, 111, 128, 133, 136, 183, 236], "ind\u00e9sir": [96, 236, 244], "567": 236, "ed": 236, "med": 236, "eniem": 236, "sub": [10, 11, 51, 69, 88, 136, 165, 236, 244], "start": [4, 11, 17, 69, 77, 131, 132, 165, 170, 203, 236, 242], "occurent": [4, 69, 167, 236], "isalph": [69, 236], "old": [4, 69, 236], "new": [0, 4, 11, 30, 51, 56, 69, 71, 210, 236], "sep": [50, 51, 54, 69, 85, 99, 119, 187, 188, 236, 239, 244], "maxspl": [69, 236, 244], "coupur": [56, 69, 70, 80, 113, 114, 236], "upper": [69, 96, 105, 136, 162, 190, 236], "low": [4, 27, 31, 69, 87, 133, 162, 191, 192, 236, 244], "agglutin": [69, 236], "endswith": [149, 236], "suffix": [1, 15, 99, 125, 236], "deven": [94, 110, 120, 133, 236, 242], "printf": 236, "formatting": 236, "concis": [60, 236], "transcrit": 236, "df": [1, 11, 26, 31, 37, 46, 51, 52, 54, 62, 68, 78, 85, 86, 88, 91, 99, 110, 115, 116, 119, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 162, 163, 168, 169, 174, 178, 183, 184, 187, 188, 204, 236], "total": [11, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 56, 59, 68, 77, 83, 85, 93, 131, 137, 139, 140, 146, 156, 170, 236, 246], "123456789": [69, 236], "2f": [50, 69, 77, 83, 92, 95, 131, 236], "06": [23, 41, 50, 51, 77, 85, 110, 132, 134, 150, 158, 232, 236, 237], "000": [14, 28, 33, 43, 44, 50, 51, 53, 68, 83, 93, 99, 111, 123, 124, 130, 150, 160, 166, 167, 170, 171, 172, 178, 185, 200, 210, 236, 246], "exponentiel": [56, 61, 119, 236], "formatt": [151, 236, 242], "accolad": [105, 236], "abra": 236, "cad": 236, "abracadabr": 236, "coordinat": [4, 10, 236], "latitud": [14, 46, 54, 95, 236], "longitud": [14, 46, 54, 95, 236], "24n": 236, "115": [99, 115, 136, 236], "81w": 236, "coord": 236, "aligned": 236, "centered": 236, "aleft": 236, "alignedb": 236, "hex": [203, 207, 208, 236], "oct": 236, "bin": [27, 31, 51, 77, 131, 137, 140, 145, 147, 236, 237], "1234567890": 236, "2a": 236, "101010": 236, "0x2a": 236, "0o52": 236, "0b101010": 236, "890": [31, 119, 236], "02": [28, 50, 51, 56, 77, 78, 88, 99, 110, 111, 131, 132, 134, 137, 150, 184, 203, 232, 236, 242, 246], "pep": [2, 50, 71, 74, 112, 236], "indroduit": 236, "correspondent": [51, 56, 193, 200, 236, 244], "excentr": 236, "aper\u00e7oit": [14, 101, 172, 187, 236], "notabl": 236, "r\u00e9solu": [1, 18, 24, 29, 43, 46, 56, 84, 125, 134, 163, 236, 246], "oeil": [1, 50, 51, 56, 236], "orient": [1, 10, 59, 69, 78, 84, 99, 163, 236], "formattag": 236, "reprennent": [204, 236], "common": [4, 30, 171, 236, 239], "iem": [69, 236], "2k": [69, 200, 236], "3k": [69, 236], "run_python_script_140615672080960": [], "assignment": [102, 105, 236], "d\u00e9criv": [56, 59, 163, 236], "1j": 236, "2j": 236, "pareil": [87, 93, 140, 141, 147, 236], "partit": [1, 68, 236], "345": [99, 172, 236], "fromhex": 236, "2ef0": 236, "f1f2": 236, "xf0": 236, "xf1": 236, "xf2": 236, "sigl": 236, "conteneur": [166, 236], "soupless": 236, "getsizeof": [11, 175, 236], "104": [99, 189, 236], "crochet": [69, 168, 236, 244], "incluent": [4, 69, 71, 236, 239], "remov": [11, 67, 69, 77, 84, 131, 165, 236, 237], "pop": [69, 88, 236], "d\u00e9croiss": [33, 41, 56, 58, 59, 69, 77, 87, 88, 112, 197, 200, 236], "sorting": [1, 236], "contenus": [18, 209, 236], "compare_key": 236, "run_python_script_140615667930688": [], "verron": 236, "dison": 236, "ensemb": 236, "impair": [77, 84, 95, 108, 181, 182, 205, 206, 236], "litt\u00e9ral": [61, 236], "juxtaposit": 236, "0x7fe3a2f5a100": [], "constuir": [56, 187, 236], "l3": 236, "deepcopy": [4, 30, 69, 71, 236], "surprendr": 236, "1111": 236, "entrepris": [56, 204, 236], "cle1": [51, 69, 101, 236], "valeur1": [69, 101, 236], "cle2": [51, 69, 101, 236], "reper": [33, 46, 59, 96, 120, 135, 207, 208, 236], "dress": 236, "clear": [69, 236, 242], "updat": [67, 69, 82, 94, 95, 162, 169, 236, 237], "setdefault": [69, 236], "six": [56, 58, 204, 236, 244], "sept": [95, 236], "huit": [4, 71, 95, 236, 237, 244], "neuf": [166, 193, 236], "dinv": 236, "parcout": 236, "dicionnair": 236, "dict_item": [101, 175, 236], "impr\u00e9visibl": [56, 103, 131, 236, 242], "avert": [54, 236], "souhaitent": [56, 74, 236], "cledict": 236, "unhash": [105, 236], "faill": [110, 236, 237], "renonc": [204, 236], "notion": [1, 4, 14, 19, 22, 56, 60, 61, 71, 77, 79, 83, 94, 112, 236], "0x0120db90": 236, "18930576": 236, "0x120db90": 236, "hexad\u00e9cimal": 236, "conclur": [209, 236], "intersect": [1, 10, 46, 59, 189, 236], "union": [204, 236], "garant": [61, 70, 77, 87, 110, 204, 236], "n\u00e9cessitent": [56, 236, 239], "pr\u00e9alabl": [115, 189, 236, 237], "donnent": [56, 61, 62, 236], "\u00e9cout": [204, 236, 242], "st\u00e9thoscop": 236, "op": [35, 236], "288": [99, 236], "5555555555555554": 236, "16384": [101, 236], "__wd__": 236, "environ": [4, 33, 50, 56, 59, 71, 74, 95, 101, 123, 236, 239], "__builtins__": [236, 239], "__file__": [4, 71, 171, 172, 185, 236, 239, 244], "reviendr": 236, "divmod": 236, "model": [1, 3, 14, 22, 27, 50, 54, 56, 58, 61, 62, 70, 84, 88, 98, 99, 110, 111, 125, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 185, 186, 236], "Des": [1, 19, 56, 62, 66, 74, 236], "transpara\u00eetr": 236, "traduir": 236, "commencent": [69, 162, 177, 236, 237, 239], "terminent": [69, 82, 236], "influenc": [132, 236], "starting": [2, 71, 236], "xe9": [74, 183, 184, 236], "declared": [2, 71, 74, 236], "org": [2, 4, 27, 30, 50, 54, 71, 74, 82, 87, 99, 112, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 159, 171, 185, 204, 236], "0263": [2, 71, 74, 236], "mond": [56, 70, 74, 87, 165, 204, 205, 210, 236, 240], "disqu": [4, 61, 71, 74, 134, 155, 166, 203, 204, 237, 239], "concepteur": 237, "puissent": [58, 237], "con\u00e7u": [2, 71, 74, 149, 237, 239], "textuel": [22, 237], "num\u00e9ros": [111, 189, 237], "t\u00e9l\u00e9phon": [53, 60, 237], "reportlab": 237, "openpyxl": [163, 237], "pdf": [11, 62, 172, 237], "allong": [237, 239], "ouvertur": [56, 69, 70, 203, 237], "fermetur": [56, 69, 237], "perturb": 237, "fort": [14, 51, 56, 61, 69, 70, 96, 120, 123, 131, 146, 186, 193, 204, 237], "tsv": [203, 237], "separated": 237, "rit": [94, 237], "ppend": 237, "ead": 237, "ouvr": [56, 69, 237, 244], "physiqu": [193, 237], "tampon": 237, "buff": [39, 40, 163, 237, 240], "r\u00e9ouvr": [2, 71, 237], "flush": 237, "technolog": [237, 242], "\u00e9cras": [69, 237], "premier": [95, 237], "phas": [106, 107, 109, 237], "diverg": 237, "d\u00e9coupag": [3, 62, 128, 144, 237], "diff": [11, 54, 77, 86, 99, 115, 116, 119, 145, 147, 178, 237, 242], "gros": [51, 56, 61, 85, 163, 237], "readlin": [69, 187, 203, 204, 237, 244], "lit": [51, 69, 74, 82, 87, 151, 166, 237, 242], "marquent": [69, 237], "nettoyag": [23, 69, 237], "l_net": [69, 237], "strip": [46, 69, 187, 203, 204, 237], "\u00e9labor": [125, 237], "d\u00e9cryptent": 237, "d\u00e9limit": [69, 237], "hugo": [69, 237], "victor": [69, 237], "miser": [69, 237], "kessel": [69, 237], "joseph": [69, 237], "lion": [69, 237], "woolf": [69, 237], "virgini": [69, 237], "mr": [69, 162, 166, 237], "dalloway": [69, 237], "calvino": [69, 237], "italo": [69, 237], "baron": [69, 237], "perch": [69, 210, 237], "csv": [19, 54, 85, 98, 99, 119, 203, 204, 237, 239], "relu": [132, 237], "\u00e9crivent": [61, 177, 237], "acaracter": 237, "r\u00e9pandus": 237, "constituent": [30, 237], "d\u00e9compress": [187, 237], "zipfil": [51, 163, 237, 239], "exemplezip": 237, "fz": 237, "info": [11, 65, 68, 81, 82, 87, 131, 163, 185, 237, 242, 244], "infolist": 237, "date_tim": 237, "file_siz": 237, "testzip": 237, "zip_deflated": 237, "zip_stored": 237, "nom_fichier_dans_zip": 237, "mail": [74, 98, 99, 237], "piec": [30, 98, 99, 135, 177, 189, 190, 237], "joint": [98, 99, 237], "requ\u00eat": [51, 69, 111, 237], "votr": [2, 4, 33, 71, 74, 98, 99, 105, 110, 112, 116, 124, 158, 177, 179, 180, 193, 204, 209, 237, 239, 240], "serveur": [16, 74, 237, 241], "email": [4, 40, 64, 69, 71, 237], "couron": 237, "succes": 237, "spammeur": 237, "smtplib": 237, "mim": 237, "multipart": 237, "mimemultipart": 237, "mimebas": 237, "mimetext": 237, "formatdat": 237, "encoder": [1, 237], "envoyer_mail": 237, "aqui": 237, "auteur": [50, 74, 105, 237, 244], "msg": [11, 237], "localtim": 237, "subject": [75, 191, 192, 237], "stream": [4, 71, 170, 171, 172, 174, 185, 237], "rb": [54, 134, 204, 210, 237], "set_payload": 237, "encode_base64": 237, "add_head": 237, "attachment": 237, "basenam": 237, "smtp": 237, "gmail": 237, "587": [50, 237], "ehlo": 237, "starttl": 237, "login": 237, "mot_de_p": 237, "sendmail": 237, "as_string": 237, "destinatair": 237, "manuel": [56, 237], "centain": [56, 58, 59, 61, 237], "journ": [56, 61, 70, 237], "r\u00e9organis": 237, "musical": 237, "mp3": [203, 237, 244], "compl\u00e9mentair": [183, 237], "mutagen": [237, 244], "famili": 237, "mac": [187, 237], "osx": 237, "d\u00e9bouchent": 237, "divers": [58, 77, 237], "abspath": 237, "commonprefix": 237, "dirnam": [171, 185, 237], "getatim": 237, "getmtim": 237, "getctim": 237, "getsiz": 237, "isab": 237, "isfil": 237, "p1": [7, 9, 10, 11, 30, 69, 137, 153, 155, 184, 188, 193, 237], "splitext": 237, "f1": [31, 68, 137, 166, 237, 242], "f2": [31, 166, 237, 242, 244], "chdir": 237, "mkdir": 237, "hlin": [187, 237], "makedir": 237, "repfinal": 237, "renam": 237, "rmdir": 237, "filtr": [1, 7, 22, 149, 170, 237, 244], "liste_fichier_repertoir": 237, "fold": [3, 11, 12, 13, 65, 68, 134, 146, 237], "filt": [54, 69, 170, 237], "ob\u00e9iss": 237, "rep": 237, "fo": 237, "repos": [56, 77, 87, 237], "walk": [50, 87, 237, 244], "gitignor": 237, "code_of_conduct": 237, "md": [132, 200, 237], "gitattribut": 237, "appveyor": 237, "yml": 237, "_latex": 237, "ruff_cach": 237, "circlec": 237, "__pycache__": [203, 237, 239], "git": [19, 63, 66, 237], "ecrir": [30, 51, 100, 101, 104, 105, 108, 110, 111, 112, 113, 114, 117, 118, 162, 177, 179, 180, 183, 184, 187, 195, 199, 203, 205, 206, 209, 237, 242], "jug": [149, 237], "gourmand": [74, 77, 237], "relir": 237, "judici": [10, 56, 70, 237], "struct": [40, 237], "rawiobas": 237, "affili": 237, "sp\u00e9cialis": [50, 56, 237], "r\u00e9sid": [69, 237], "quinz": 237, "soul\u00e8vent": 237, "modil": 237, "dill": [166, 237], "nom_fichi": [4, 71, 237], "wb": [51, 134, 174, 204, 237], "binary": [1, 67, 237], "1415692": 237, "abcd": [81, 237], "fb": 237, "sauvegard": 237, "abcdedf": 237, "sauv": [51, 204, 237], "64": [31, 50, 51, 77, 83, 90, 95, 99, 108, 110, 119, 131, 134, 142, 148, 156, 169, 174, 237], "lis": [166, 237], "dump": [11, 39, 134, 166, 237, 240], "load": [39, 51, 134, 163, 237, 240], "chain": [124, 237], "__getstate__": [39, 237, 240], "__setstate__": [39, 237, 240], "calcule_norm": 237, "dic": 237, "830951894845301": 237, "extern": [51, 203, 238], "r\u00e9part": [10, 14, 56, 59, 64, 69, 85, 95, 110, 162, 203, 239], "annex": [45, 239], "exemple_vari": [70, 239], "exemple_fonct": [69, 70, 239], "module_exempl": [70, 239], "nom_modul": 239, "diff\u00e9renc": [56, 239], "pyc": 239, "traduct": [61, 239], "bytecod": 239, "importlib": [70, 239], "ali": [70, 203, 239], "d\u00e9commmand": [70, 239], "exemple_class": 239, "__import__": 239, "nom_module_sans_extens": 239, "absolus": 239, "techniqu": [56, 58, 123, 159, 171, 239], "python36_x64": 239, "exe": 239, "__all__": 239, "inh\u00e9rent": 239, "routin": [50, 239], "nt": [119, 239], "posix": 239, "depending": 239, "we": [7, 11, 30, 31, 50, 95, 239], "export": [54, 239], "unlink": 239, "etc": [50, 67, 77, 189, 239], "eith": 239, "posixpath": 239, "ntpath": 239, "curd": 239, "representing": 239, "current": [4, 84, 115, 138, 163, 191, 192, 239], "directory": [4, 40, 239, 244], "pard": 239, "pathnam": 239, "separator": 239, "extsep": 239, "altsep": 239, "alternat": 239, "pathsep": 239, "component": [7, 10, 239], "used": [1, 4, 11, 30, 131, 239], "linesep": 239, "defpath": 239, "search": [1, 4, 11, 67, 71, 239, 244], "devnull": 239, "devic": [132, 239], "program": [11, 239], "that": [10, 11, 31, 50, 65, 93, 99, 150, 171, 191, 192, 239], "use": [4, 11, 30, 31, 40, 50, 75, 239], "stand": 239, "bet": [1, 9, 12, 50, 54, 56, 62, 70, 85, 86, 112, 134, 239], "chanc": [1, 59, 61, 96, 119, 139, 147, 148, 166, 204, 239], "being": [93, 191, 192, 239], "portabl": [53, 239], "between": [1, 10, 11, 12, 13, 31, 191, 192, 239], "different": [1, 4, 11, 30, 31, 51, 112, 113, 114, 139, 191, 192, 239], "cours": [66, 239, 242], "then": [11, 30, 65, 68, 191, 192, 239], "only": [1, 4, 10, 11, 139, 142, 239], "opend": 239, "module1": 239, "module2": 239, "retard": [34, 56, 74, 239], "_frozen_importlib": 239, "frozen": 239, "_imp": 239, "_thread": 239, "_warning": 239, "_weakref": 239, "python_cour": 239, "assign": [50, 51, 111, 239], "englob": 239, "mesmodul": 239, "part1": 239, "niveaud": 239, "part2": 239, "niveaudeuxb": 239, "subpackage1": 239, "modulex": 239, "subpackage2": 239, "moduley": 239, "pr\u00e9install": 239, "fur": [52, 56, 62, 239, 244], "asyncio": [239, 241], "socket": 239, "protocol": [39, 239], "cgi": 239, "script": [26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 82, 87, 239], "cmath": 239, "gc": [239, 242], "getopt": 239, "hashlib": [162, 239], "cryptag": [125, 239], "htmllib": 239, "exp": [4, 35, 50, 71, 94, 101, 172, 178, 184, 203, 204, 239, 244], "pathlib": 239, "profil": [5, 11, 56, 171, 185, 239], "etudi": [185, 239], "shutil": [174, 239], "sqlite3": 239, "gestionnair": 239, "threading": [131, 239, 242], "unittest": [19, 177, 239], "urllib": [51, 96, 166, 174, 204, 239], "navig": [16, 74, 239], "dom": 239, "lectur": [40, 50, 52, 54, 62, 66, 95, 165, 166, 239, 240, 242], "sax": [69, 239], "infegal": [56, 62, 70, 239], "hat": [50, 62, 111, 239], "esp": [56, 62, 70, 239], "140512": [], "141592653589793": [166, 239], "mont": [14, 35, 56, 61, 110, 125, 239], "carlo": 239, "integrale_monte_carlo": 239, "66722925620987": [], "couvr": [56, 189, 190, 239], "them": [1, 4, 11, 30, 53, 56, 239], "simpliqu": 239, "interfa\u00e7ag": 239, "contribu": [4, 71, 150, 204, 239], "con\u00e7us": [1, 239], "h\u00e9bergent": 239, "maintenus": 239, "ponctuel": 239, "ambiti": [56, 239], "pr\u00e9vis": [15, 239], "futur": [14, 22, 32, 56, 99, 145, 147, 239], "tensorflow": 239, "maintenu": [16, 74, 132, 239], "aujourd": [51, 56, 60, 61, 64, 69, 74, 77, 92, 203, 239], "hui": [51, 56, 60, 61, 64, 69, 74, 77, 92, 203, 239], "scipy": [4, 49, 53, 61, 66, 71, 89, 117, 118, 123, 159, 171, 172, 186, 193, 239], "setup": 239, "pr\u00e9compil": [4, 71, 239], "pyp": [74, 239], "publiqu": [56, 181, 182, 239], "aven": [50, 240], "apppliqu": [149, 240], "lang": [82, 87, 240], "vitess": [38, 45, 48, 56, 58, 59, 60, 193, 240], "verbeux": [153, 166, 240], "communiqu": [163, 166, 189, 240], "conc": [85, 99, 240], "stringio": [5, 30, 39, 163, 166, 170, 171, 172, 185, 240], "seq": [39, 203, 204, 240], "getvalu": [39, 40, 163, 166, 170, 171, 172, 185, 240], "pr": [39, 62, 170, 171, 172, 185, 204, 240], "u00e9nom": [39, 240], "ndarray": [39, 171, 172, 185, 240], "serializ": [39, 240], "jsonencod": [39, 240], "att": [39, 240], "myencod": [39, 240], "classnam": [39, 240], "obstacl": [39, 56, 96, 133, 240], "jsondecod": [39, 240], "mydecod": [39, 240], "dec": [39, 56, 95, 153, 240], "run_python_script_140615661840064": [], "0x7fe3a80eae30": [], "ultrajson": 240, "parl": [1, 42, 50, 56, 60, 94, 135, 152, 204, 240], "bytesio": [39, 40, 240], "x80": [39, 240], "x04": [39, 240], "x95f": [39, 240], "x00": [39, 240], "x94": [39, 240], "x8c": [39, 240], "x07record": [39, 240], "x03nom": [39, 240], "x06xavi": [39, 240], "x07pr": [39, 240], "xc3": [39, 240], "xa9nom": [39, 240], "x94h": [39, 240], "x05": [39, 240], "x08langag": [39, 240], "x03c": [39, 240], "x03ag": [39, 240], "x94k": [39, 240], "u": [33, 39, 59, 65, 77, 87, 94, 96, 135, 155, 165, 173, 204, 210, 240], "x06python": [39, 240], "x0bk": [39, 240], "x14ueu": [39, 240], "restaur": 240, "att1": [39, 69, 240], "att2": [39, 69, 240], "setattr": [39, 240], "crucial": 240, "enjeu": [18, 74, 240], "d\u00e9chiffr": [62, 240], "librar": 240, "protobuf": [24, 29, 43, 240, 246], "d\u00e9s\u00e9rialis": [40, 240], "multithreading": 241, "bibliograph": 241, "joblib": [185, 241], "gevent": 241, "uvloop": 241, "blazing": 241, "fast": [1, 31, 51, 241], "networking": 241, "sanic": 241, "processing": [31, 241], "cython": [52, 241], "openmp": [241, 242], "2003": [95, 242], "2004": 242, "microprocesseur": 242, "transistor": 242, "multicoeur": 242, "disjoint": [62, 128, 242], "front": [87, 165, 242], "parall\u00e9lis": [1, 139, 242, 245], "entam": 242, "processus": 242, "bouton": [64, 69, 242], "achev": 242, "asynchron": 242, "communiquent": 242, "synchronisent": 242, "destin": [11, 41, 56, 120, 242], "mer": [69, 87, 165, 204, 242], "secondair": [162, 242], "monthread": 242, "sleep": [11, 32, 120, 242], "08": [23, 30, 31, 41, 50, 51, 54, 77, 85, 95, 132, 134, 150, 158, 166, 168, 184, 203, 242, 244], "d\u00e9marr": [16, 82, 242], "proviennent": 242, "09": [23, 30, 31, 41, 50, 51, 77, 85, 95, 132, 134, 137, 150, 168, 184, 242, 244], "ralent": [170, 171, 242], "humain": [1, 56, 61, 205, 242], "exager": [56, 242], "ordinair": [50, 69, 242], "etat": [46, 56, 242], "temporis": 242, "consacr": [110, 242], "ojet": 242, "wait": [11, 40, 110, 242], "diziem": [56, 242], "ind\u00e9fin": 242, "is_set": 242, "bloqu": [84, 203, 242], "dixiem": 242, "del\u00e0": [4, 7, 51, 58, 71, 77, 110, 137, 150, 187, 242], "verrous": 242, "indexfrr": 242, "verrou": [32, 242], "veulent": 242, "11111111112222222222": 242, "acquir": 242, "\u00e9toil": [102, 242], "entrem\u00ealent": 242, "001": [32, 33, 41, 85, 99, 122, 124, 132, 170, 171, 185, 193, 242], "semaphor": [1, 242], "imprim": [87, 165, 242], "coinc": [95, 242], "liber": [189, 242], "sien": [145, 242], "b\u00e2t": [56, 242], "viennent": [61, 152, 187, 242], "thread_fin": 242, "thread_resultat": 242, "lance_thread": 242, "legnd": 242, "text2": 242, "thread_fini_fonct": 242, "permanent": [203, 242], "concernent": [56, 242], "actif": [56, 189, 242], "envoient": 242, "queu": [84, 242], "put": [56, 242], "\u00e9tranger": [124, 242], "timeout": [7, 11, 67, 242], "empty": [30, 53, 85, 111, 112, 117, 118, 123, 155, 171, 242], "get_now": 242, "put_now": 242, "qsiz": 242, "joueur": [195, 201, 242], "tent": [39, 56, 87, 114, 142, 155, 165, 242], "\u00e9cart": [56, 115, 116, 117, 118, 242], "essais": [30, 42, 58, 117, 118, 242], "chevauchent": 242, "executor": [32, 242], "soumettr": 242, "subm": 242, "threadpoolexecutor": [32, 242], "max_work": 242, "reproduis": [30, 242], "prim": 242, "112272535095293": 242, "112582705942171": 242, "115280095190773": 242, "115797848077099": 242, "1099726899285419": 242, "is_prim": [50, 242], "sqrt_n": 242, "floor": [123, 242], "ind\u00e9chiffr": 242, "logg": 242, "logger": 242, "get_logg": 242, "getlogg": 242, "setlevel": 242, "fmt": [2, 11, 242], "asctim": 242, "threadnam": 242, "levelnam": 242, "streamhandl": 242, "stdout": 242, "setformatt": 242, "addhandl": 242, "fh": 242, "filehandl": 242, "current_thread": 242, "end1": 242, "end2": 242, "end3": 242, "thread_0": 242, "thread_1": 242, "464": 77, "304": 150, "314": 166, "162": 159, "163": [50, 54, 147, 150, 160], "412": 185, "471": [], "309": [], "139": [50, 150, 159, 160, 170, 171, 185, 242], "140": [150, 174], "702": 148, "2000": [31, 78, 85, 130, 135, 168, 170, 186, 242, 244], "promess": [56, 242], "pr\u00eat": [56, 61, 110, 242], "bient\u00f4t": [60, 242], "compatibl": [30, 40, 242], "as_completed": 242, "compliquent": 242, "inscrit": [164, 209, 242], "cf": [77, 137, 242], "parallel_numpy_dot": 242, "vb": 242, "max_worker": [32, 242], "dot": [11, 50, 53, 82, 87, 112, 242], "randn": [50, 53, 86, 93, 120, 131, 134, 168, 242], "astyp": [31, 50, 53, 54, 84, 119, 164, 171, 242], "459": [99, 110], "3849763730193": [], "distribute_sum": 242, "\u00e9merg": [50, 242], "vocat": [203, 204, 242], "inlass": 242, "aiguillag": [205, 242], "enclench": 242, "signal": [171, 242, 244], "distrinct": 242, "concurrentiel": [32, 242], "d\u00e9velopeur": 242, "multithread": 242, "nogil": 242, "libert": [59, 176, 204, 242], "parallelism": 242, "parallelizing": 242, "interp\u00e9teur": 242, "pythonnet": 242, "py4j": 242, "pyjnius": 242, "nuir": 242, "pluriel": 244, "singuli": [179, 244], "formulair": 244, "mm": [51, 56, 244], "jj": [51, 244], "conform": [42, 244], "04": [16, 50, 51, 62, 77, 85, 95, 99, 134, 137, 143, 144, 150, 174, 178, 244], "1971": [51, 150, 244], "1913": 244, "1978": 244, "1986": [51, 244], "1914": 244, "03": [23, 51, 54, 77, 78, 85, 92, 99, 112, 119, 131, 132, 134, 150, 156, 160, 164, 174, 180, 200, 244, 246], "1941": 244, "1980": 244, "1976": [204, 244], "int\u00e9resson": 244, "findall": [165, 174, 203, 204, 244], "r\u00e9pondent": 244, "officiel": [74, 203, 244], "regular": [165, 203, 244], "0123456789": 244, "cons\u00e9cut": [96, 120, 135, 156, 201, 244], "approch": [7, 14, 33, 41, 42, 59, 61, 62, 85, 95, 110, 112, 125, 133, 142, 164, 183, 187, 192, 244], "za": [165, 244], "z0": 244, "taxinom": 244, "tax": [56, 244], "quadrupl": [61, 244], "something": [31, 203, 209, 244], "vba": 244, "vbatd1_4": 244, "span": [174, 244], "absenc": [56, 244], "suspens": 244, "correspondr": [77, 135, 209, 244], "h1": [77, 244], "yoyo": 244, "yo": [42, 134, 244], "dupont": 244, "tc": 244, "repl": 244, "valident": 244, "flag": [11, 12, 13, 244], "g1": [79, 244], "gr": [51, 94, 99, 119, 152, 171, 244], "\u00e9niem": [162, 244], "chanson": 244, "track03": 244, "track": [56, 244], "audiotrack": 244, "pist": 244, "audiop": 244, "audio": 244, "heart": 244, "heartland": 244, "heartach": 244, "ache": 244, "land": [54, 191, 192, 244], "easyid3": 244, "infomp3": 244, "tag": [65, 244], "artist": [31, 244], "assertionerror": [31, 64, 69, 91, 96, 151, 177, 244], "length": [10, 13, 163, 244], "all_fil": 244, "repertoir": 244, "ext": [102, 244], "process": [1, 4, 11, 244], "heart_notitle_mot": 244, "avoid": [1, 30, 95, 244], "liheart": 244, "notitl": 244, "nbmot": 244, "nbsong": 244, "ti": [191, 192, 244], "album": 244, "tracknumb": 244, "musiqu": [203, 244], "moymot": 244, "extrair": [50, 51, 59, 83, 87, 244], "2010": [51, 204, 244], "nom_du_group": 244, "groupdict": 244, "recoup": [85, 95, 244], "trouve_toute_fonct": 244, "expm": 244, "get_function_list_definit": 244, "ndef": 244, "z_": 244, "z_0": 244, "get_function_list_call": 244, "detection_fonction_pas_appele": 244, "sfil": 244, "funcdef": 244, "funccal": 244, "fonction_inutil": 244, "errno": [40, 244], "such": [1, 4, 40, 191, 192, 244], "223": [50, 246], "execu": [11, 28, 43, 44, 67, 246], "galler": [50, 51, 72, 246], "mem": [28, 43, 44, 96, 246], "mb": [28, 43, 44, 83, 246], "prog": [39, 43, 246], "plot_float_and_double_rouding": [31, 40, 43, 246], "receiv": [24, 25, 28, 128, 246], "operating": [1, 24, 25, 28, 99, 128, 145, 147, 246], "characteristic": [24, 25, 28, 128, 246], "roc": [22, 24, 25, 28, 62, 128, 142, 246], "ml": [28, 52, 246], "plot_roc": [27, 28, 246], "00": [28, 43, 44, 50, 56, 62, 69, 70, 78, 84, 85, 88, 92, 95, 99, 111, 112, 119, 124, 130, 131, 132, 134, 137, 138, 143, 144, 150, 152, 156, 164, 168, 169, 174, 180, 184, 204, 246], "107": [27, 28, 50, 187, 246], "correl": [14, 24, 25, 28, 54, 70, 99, 115, 116, 128, 134, 145, 150, 246], "plot_correl": [26, 28, 246], "einstein": [18, 24, 29, 43, 125, 246], "plot_einstein_riddl": [30, 40, 43, 246], "plot_gil_exampl": [32, 40, 43, 246], "plot_hypercub": [33, 40, 43, 246], "plot_lambda_funct": [34, 40, 43, 246], "plot_matador": [35, 40, 43, 246], "plot_numpy_trick": [36, 40, 43, 246], "groupby": [24, 29, 43, 51, 54, 99, 119, 126, 144, 147, 148, 167, 246], "plot_pandas_groupby": [37, 40, 43, 246], "plot_partie_dam": [38, 40, 43, 246], "plot_serialisation_exampl": [39, 40, 43, 246], "plot_serialisation_protobuf": [40, 43, 246], "plot_tarabiscot": [40, 41, 43, 246], "voyag": [24, 29, 43, 125, 187, 246], "commerc": [1, 19, 20, 24, 29, 43, 58, 59, 77, 89, 125, 246], "tsp": [15, 20, 24, 29, 43, 58, 61, 125, 246], "plot_tsp": [40, 42, 43, 246], "dependency": 0, "patsy": [0, 99], "requir": [0, 4, 10, 65, 71], "helper": 0, "creat": [0, 4, 11, 46, 50, 56, 71], "video": [0, 5, 72], "35": [0, 46, 50, 51, 53, 54, 56, 70, 71, 77, 95, 99, 102, 108, 124, 130, 132, 134, 139, 146, 149, 150, 152, 156, 159, 171, 178, 183, 184, 197, 204, 210], "refactoring": 0, "d\u00e9montr": [1, 41, 61, 137, 187], "variet": [1, 54, 203], "leqsl": [1, 31, 61, 62, 79, 83, 101, 112, 164, 183, 187, 188, 189, 190, 191, 192, 200], "alpha": [1, 7, 9, 12, 27, 50, 54, 56, 59, 70, 78, 94, 111, 115, 116, 117, 118, 131, 134, 137, 140, 188, 207, 208], "mathbb": [1, 27, 31, 50, 77, 111, 112, 113, 114, 115, 116, 131, 137, 164, 181, 182, 189, 200], "probem": 1, "combinatoir": [1, 58, 187], "quadrat": [1, 56, 61, 62, 112, 131, 134, 188], "d\u00fb": [1, 56, 100, 134, 137, 144], "D\u00e8s": [1, 2, 71], "trivial": [1, 79], "marco": 1, "bodrato": 1, "lik": [1, 11, 31], "matrix": [1, 26, 30, 53, 91, 99, 139, 150, 179, 180, 184], "suited": 1, "squaring": 1, "high": 1, "pow": [1, 174], "comput": [1, 7, 171, 185], "minimal": [1, 10, 50, 56, 61, 83, 95, 108, 121, 151], "hypothes": [1, 59, 62, 98, 99, 187], "cardinal": [1, 59, 77], "inf": [1, 50, 88, 99, 131, 137, 145, 147], "blog": [1, 21, 23, 56], "interesect": 1, "sse": 1, "introduis": 1, "milliard": [1, 77], "word2vec": 1, "auto": [1, 23, 117, 118, 131, 133], "ranking": [1, 22], "Quel": [1, 41, 60, 101, 113, 114, 124, 183, 184, 203], "fusion": [1, 19, 56, 62, 88, 108, 163, 178], "algo": 1, "bucket": 1, "bull": 1, "lempel": 1, "ziv": 1, "implement": [1, 59, 171, 198], "kullback": [1, 62], "leibl": 1, "divergent": 1, "kl": [1, 61], "ucb": 1, "matriciel": [1, 6, 15, 33, 48, 61, 120, 125, 171, 179, 180], "winograd": 1, "minimum": [1, 42, 50, 53, 61, 79, 81, 83, 84, 100, 112, 117, 118, 119, 123, 131, 134, 183, 184, 189, 190], "filtering": 1, "im2col": 1, "r\u00e9arrang": 1, "reign": 1, "ultimat": 1, "planar": 1, "convex": [1, 56, 112], "hull": [1, 56], "kirkpatrick": 1, "seidel": 1, "prun": [1, 113, 114], "finding": [1, 50], "envelopp": 1, "ordonnanc": [1, 15, 125], "sattolo": 1, "voyageur": [1, 19, 20, 42, 58, 59, 89, 125], "hamiltonien": [1, 10, 13, 20, 42, 57], "larg": [1, 22, 42, 58, 59, 68, 77, 99], "scal": [1, 59, 137, 138, 139, 140, 150], "traveling": [1, 15, 58, 59, 125], "salesman": [1, 15, 20, 58, 59, 61, 92, 125], "v\u00e9hicul": 1, "hongrois": [1, 192], "miminum": [1, 79], "kruskal": [1, 5, 7, 10, 13, 19, 20, 57, 95], "bor\u016fvk": 1, "sac": 1, "dos": 1, "tas": [1, 88, 163], "fibonacc": [1, 79], "judy": 1, "mapping": [1, 51, 111, 124], "profondeur": [1, 56, 108, 132], "acycl": [1, 108], "floyd": [1, 192], "flukerson": 1, "cut": [1, 68, 109], "maximum": [1, 6, 9, 10, 12, 49, 50, 53, 56, 69, 70, 82, 83, 94, 96, 110, 112, 119, 123, 132, 142, 156], "pagerank": 1, "appari": [1, 9, 51, 95, 188, 192], "edmond": [1, 95], "blossum": 1, "hopcroft": [1, 192], "karp": [1, 192], "blossom": [1, 192], "couplag": [1, 95, 192], "gal": 1, "shapley": 1, "mariag": [1, 117, 118], "stabl": [1, 50, 54, 56, 67, 70, 132, 133, 137, 139, 140], "robinson": 1, "fould": 1, "robustess": [1, 56], "r\u00e9seau": [1, 62, 77, 84, 133, 187], "quantifying": 1, "robustness": 1, "metro": [1, 54, 56], "network": [1, 94, 183], "motif": [1, 165, 207, 208], "fp": [1, 11], "growth": [1, 174], "knuth": 1, "morr": 1, "pratt": 1, "rabin": 1, "jaccard": 1, "gramm": 1, "aho": 1, "corasick": 1, "commentz": 1, "walt": 1, "burrow": 1, "aprior": 1, "boi": 1, "moor": 1, "simplex": 1, "neld": [1, 50], "mead": [1, 50], "codag": 1, "huffman": [1, 94], "lz77": 1, "lz78": 1, "bootstrap": [1, 134], "confianc": [1, 56, 137, 200], "bloom": 1, "woodbury": 1, "blockwis": 1, "toom": 1, "cook": 1, "canopy": 1, "clustering": [1, 14, 22, 58, 61, 125], "lru": 1, "m\u00e9mo\u00efz": 1, "kahan": 1, "summat": [1, 191, 192], "probabil": [1, 164], "probabilistic": 1, "analytic": 1, "mining": 1, "lzfse": 1, "lzma": 1, "squash": 1, "benchmark": [1, 50], "inspir": [1, 30, 33, 50, 56, 59, 62, 84, 94, 95, 108, 112, 117, 118, 139, 148, 159, 162, 177, 187, 190, 204, 207, 208], "quantiqu": [1, 19, 74], "quantum": 1, "inspired": [1, 4], "classical": 1, "recommend": 1, "thealgorithm": 1, "mersen": 1, "heapsort": 1, "polyn\u00f4mial": [1, 3, 42, 58, 61, 62, 92, 128, 133, 187, 192], "turing": 1, "polynomial": [1, 95, 183], "admet": [1, 61, 112, 200], "r\u00e9duct": [1, 53, 122], "bpp": 1, "acronym": [1, 197], "bounded": 1, "irr\u00e9solu": 1, "preuv": 1, "423": 1, "compl\u00e9tud": 1, "th\u00e9orem": [1, 60, 61, 137, 153, 200], "stephen": [1, 56], "sat": 1, "acc": [1, 56, 59, 62, 70], "vee_k": 1, "y_": [1, 31, 61, 62, 70, 131, 135], "1k": [1, 61], "wedg": 1, "n_k": 1, "ik": [1, 42, 84], "x_i": [1, 50, 61, 62, 77, 111, 112, 113, 114, 115, 116, 131, 132, 134, 137, 181, 182, 183, 184, 186, 200], "neg": [1, 51], "seuil": [1, 7, 27, 56, 77, 95, 137, 140], "wikip\u00e9di": [1, 51, 80, 166, 207, 208], "fran\u00e7ais": [1, 60, 61, 62], "statist": [1, 14, 49, 51, 56, 61, 62, 70, 84, 133, 144, 170, 171, 176, 210], "\u00e9chantillon": [1, 50, 51, 62, 70, 93, 95, 179, 180, 187], "flow": [1, 191, 192], "blossom5": 1, "matching": 1, "smoothed": 1, "geometric": 1, "embedding": 1, "partitioning": 1, "partitionning": 1, "optimized": 1, "period": 1, "preserving": 1, "recurs": [1, 30, 65, 113, 114, 171, 197], "gram": 1, "hashing": [1, 61], "pairwis": [1, 123], "independent": 1, "hash": [1, 166, 198], "featur": [1, 46, 62, 128, 131, 134, 143, 150, 204], "classif": [1, 5, 14, 22, 60, 132, 133, 137, 186, 209], "malwar": 1, "detect": [1, 54, 135, 204, 210], "computing": 1, "deriv": 1, "tensor": 1, "robert": 1, "faur": 1, "bernard": [1, 204], "lemair": 1, "christoph": 1, "picouleau": 1, "programming": [1, 17, 189], "pearl": 1, "jon": 1, "bentley": 1, "3rd": [1, 56], "thom": 1, "cormen": 1, "charl": [1, 96, 157], "leiserson": 1, "ronald": 1, "rivest": 1, "clifford": 1, "stein": 1, "accompagn": [1, 4, 56, 70, 71], "tryalgo": 1, "efficient": [1, 53, 56, 95], "practical": 1, "preconditioning": 1, "solving": 1, "laplacian": 1, "survey": 1, "driven": [1, 56, 70], "based": [1, 11, 58, 85, 191, 192], "3d": [1, 50, 132], "modeling": [1, 56], "project": [1, 4, 46, 50, 58, 62, 71, 128, 132, 133], "eul": [1, 50, 95], "archiv": 1, "2020": [1, 54, 85, 97], "2019": [1, 97], "2018": [1, 97, 166], "earli": 1, "leetcod": 1, "comp\u00e9tit": [1, 56], "recensent": [1, 119], "southwestern": 1, "europ": [1, 46, 204], "regional": 1, "contest": 1, "swerc": 1, "acm": 1, "icpc": 1, "liv": 1, "castor": 1, "jeun": [1, 183, 184, 204], "should": [1, 22, 31, 171], "know": [1, 6, 30], "least": [1, 30, 99, 112, 120, 142], "really": 1, "wel": [1, 11], "preferably": 1, "jav": [1, 67], "sinc": [1, 65, 131, 191, 192], "pretty": 1, "similar": 1, "som": [1, 30, 31, 58, 65, 139], "your": [1, 65], "interview": [1, 56], "amount": 1, "favorit": 1, "bubbl": 1, "two": [1, 10, 11, 12, 13, 30, 31, 50, 51, 56, 85, 120, 191, 192], "say": 1, "quick": [1, 50], "merg": [1, 54, 65, 75, 99, 163], "highly": 1, "useful": [1, 11], "impractical": 1, "so": [1, 10, 31, 75, 85, 191, 192], "tak": [1, 10, 53], "look": [1, 11, 50], "hashtabl": 1, "arguably": 1, "singl": [1, 54, 128], "known": 1, "mankind": 1, "absolutely": 1, "work": [1, 40], "able": 1, "spac": [1, 10, 77, 145, 149, 171], "basic": [1, 6, 71], "traversal": 1, "familiariz": 1, "yourself": 1, "ary": 1, "familiar": 1, "balanced": 1, "splay": 1, "avl": [1, 198], "implemented": [1, 139], "understand": 1, "treetraversal": 1, "bf": 1, "inord": 1, "postord": 1, "preord": 1, "ther": [1, 30, 65, 99, 150, 191, 192], "way": [1, 4, 7, 50, 51, 71, 165, 191, 192], "represent": [1, 11, 27, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 166, 185], "pointer": 1, "adjacency": 1, "pros": 1, "con": [1, 56, 84, 204], "breadth": 1, "depth": [1, 87], "their": [1, 4, 11, 191, 192], "computational": 1, "tradeoff": 1, "real": 1, "study": [1, 31], "up": [1, 31, 51, 69], "fanci": 1, "dijkstr": [1, 61], "especially": 1, "famous": 1, "knapsack": 1, "recogniz": 1, "ask": 1, "disguis": 1, "whatnp": 1, "mathematic": 1, "interviewer": 1, "discret": [1, 58, 62, 111, 138], "mor": [1, 6, 53, 56, 163], "prevalent": 1, "than": [1, 30, 31, 50, 56, 93, 142, 178, 191, 192], "compan": 1, "becaus": 1, "counting": 1, "probability": 1, "101": [1, 50, 54, 99, 124, 140], "surround": 1, "us": 1, "spend": [1, 191, 192], "refreshing": 1, "teaching": 1, "essential": 1, "combinatoric": 1, "choos": [1, 191, 192], "ilk": 1, "concurrency": 1, "mutex": 1, "monitor": 1, "knowabout": 1, "deadlock": 1, "livelock": 1, "need": [1, 11, 31, 65], "switching": 1, "initiated": 1, "underlying": 1, "hardwar": 1, "littl": [1, 6], "scheduling": 1, "world": [1, 46, 51, 69], "rapidly": 1, "moving": [1, 56], "toward": 1, "mult": [1, 3, 56, 70, 128, 131], "fundamental": 1, "modern": 1, "distributed": [1, 56], "commentaire_accentu": [2, 5, 71], "ponctuat": [2, 71], "faq_cvxopt": [2, 71], "\u00e8": [2, 71, 87, 210], "chinois": [2, 71, 95, 210], "scit": [2, 4, 71], "transmet": [2, 71], "a_evit": 2, "leaf": [2, 84], "guess": [2, 139], "construit_matrice_carre": [2, 5], "enumerate_permut": [2, 5], "enumer": 2, "enumerate_permutations_recurs": [2, 5], "rienmann": [2, 200], "born": [2, 56, 70, 95, 200], "sep_row": 2, "sep_col": 2, "dataset": [3, 26, 27, 46, 54, 62, 85, 119, 130, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163, 185, 186], "load_enedis_dataset": [3, 5, 46], "ened": [3, 46], "\u00e9lectr": [3, 60], "annuel": [3, 14, 46, 56, 110], "fili": [3, 46], "maill": 3, "2015": [3, 97, 100], "2016": [3, 4, 46, 71, 75, 97, 99], "load_wines_dataset": [3, 5, 26, 62, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "download": [3, 11, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 51], "shuffl": [3, 42, 144, 146, 178, 204], "quality": [3, 26, 62, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "voisinsn": 3, "hyp": [3, 56, 128], "param\u00e8tresn": 3, "cross": [3, 62, 128, 142], "\u00e9valuation": 3, "pipelinen": 3, "pr\u00e9dict": [3, 14, 27, 62, 85, 88, 99, 111, 128, 131, 132, 134, 139, 143, 145, 146, 147, 150, 185, 186], "vinsn": 3, "stratifi": [3, 62, 128, 189, 190], "testn": 3, "t\u00e9l\u00e9charg": [3, 4, 7, 46, 62, 69, 71, 74, 166, 174, 203, 204, 209], "data_help": [3, 187, 188, 203, 204, 209, 210], "get_data_fold": [3, 5], "including": [3, 75], "load_wine_dataset": [3, 5], "disjointesn": 3, "logist": [3, 62, 128, 130, 133, 141, 142], "rocn": 3, "classen": 3, "stackingn": 3, "2dn": 3, "pqpiperror": [4, 5], "class_getitem": [4, 5], "show": [4, 11, 26, 27, 50, 71, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185], "enabl": [4, 170, 171, 172, 185], "through": [4, 10], "difference_div": [4, 5, 71], "quotient": [4, 71], "div1": [4, 71], "div2": [4, 71], "div3": [4, 71], "div4": [4, 71], "entier_grande_taill": [4, 5, 71], "maxint": [4, 71], "getrandb": [4, 71], "getrandbit": [4, 71], "Qui": [4, 30, 71, 87, 165], "2882159224557107513165483098383814837021447484558010147211921": [4, 71], "304219017212673656549681269862792029": [4, 71], "gmpy2": [4, 71], "editeur": [4, 71], "bougent": [4, 58, 71, 161], "menu": [4, 71, 204], "setting": [4, 67, 71], "enumerate_regex_search": [4, 5, 71], "findit": [4, 71, 94, 165, 203], "found": [4, 30, 51, 71, 124, 203], "get_day_nam": [4, 5, 71], "giv": 4, "datatim": 4, "month": 4, "friday": [4, 71], "get_installed_distribu": [4, 5], "local_only": 4, "skip": [4, 95, 149], "include_edit": 4, "editables_only": 4, "user_only": 4, "use_cmd": 4, "installed": 4, "virtualenv": 4, "compat": 4, "stdlib_pkg": 4, "report": 4, "updated": [4, 65], "get_month_nam": [4, 5, 71], "january": [4, 71], "get_package_info": [4, 5], "retriev": [4, 68], "he": [4, 191, 192], "get_packages_list": [4, 5], "dictionar": [4, 11], "information_about_packag": [4, 5, 71], "matplotlib": [4, 22, 27, 31, 42, 46, 50, 53, 54, 66, 71, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 99, 106, 107, 110, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 159, 160, 162, 164, 168, 169, 174, 178, 186, 200, 204, 207, 208, 210], "compiling": [4, 71], "anacond": [4, 16, 19, 71, 74], "module_compil": [4, 71], "list_of_installed_packag": [4, 5, 71], "summary": [4, 71, 99], "powerful": [4, 71], "statistic": [4, 11, 71, 99, 150], "pydat": [4, 54, 71], "author": [4, 71, 75], "development": [4, 16, 71], "team": [4, 71, 191, 192], "googlegroup": [4, 71], "bsd": [4, 71], "python35_x64": [4, 71], "dateutil": [4, 71, 85], "pytz": [4, 71], "freez": [4, 71], "r\u00e9pliqu": [4, 69, 71, 102], "jinja2": [4, 71, 203, 204], "markupsaf": [4, 71], "pygment": [4, 71], "property_exampl": [4, 5, 71], "classeavecproperty": [4, 71], "norm2": [4, 71], "455": [4, 71, 185], "python_path": [4, 5, 71], "moncod": [4, 71], "monmodul": [4, 71, 203], "src": [4, 71, 82, 87], "barb": [4, 71], "pythonpath": [4, 71], "same_vari": [4, 5, 71], "emplac": [4, 71, 117, 118], "paur": [4, 71], "_immutable_": [4, 71], "_mutable_": [4, 71], "frozenset": [4, 11, 71, 158], "bytearray": [4, 71], "mak": [4, 11, 71, 191, 192], "__getattr__": [4, 71, 185], "imbriquent": [4, 71], "sortable_class": [4, 5, 71], "macl": [4, 71], "autre_inst": [4, 71], "jenesaisp": [4, 71], "jenesaispas2": [4, 71], "teturn": 4, "automatis": [4, 60, 71, 74, 146, 205], "processur": [4, 71], "processus_quotidien": [4, 71], "gigaoctet": [4, 71], "corrompu": [4, 71], "voulu": [4, 71, 79, 105], "invent": [4, 61, 71], "flux": [4, 71, 77, 78], "data_stream": [4, 71], "ligne1": [4, 71], "nligne2": [4, 71], "call_stack": [4, 5], "lambert93_to_wgp": [4, 5, 46, 71], "lambert": [4, 46, 71], "lambertn": 4, "93": [4, 46, 54, 71, 77, 93, 116, 120, 167, 185], "ign": 4, "east": [4, 191, 192], "north": [4, 46, 191, 192], "lam93tolatlon": 4, "coniqu": [4, 71], "cartopy": [4, 23, 47, 71], "conformal": [4, 71], "to_float32": [4, 5], "cartograph": [5, 46], "r\u00e9gress": [5, 22, 60, 98, 99, 111, 112, 113, 130, 132, 133, 139, 141, 142, 147, 149], "tool": [5, 72, 168, 171, 175, 183, 184, 187, 188, 203, 204, 209, 210], "decompress_zip": 5, "download_and_unzip": [5, 187, 188, 203, 204, 209, 210], "draw_diagram": [5, 168], "draw_graph_graphviz": [5, 183, 184], "total_siz": [5, 175], "profiling": [5, 185], "profilenod": [5, 11], "add_called_by": [5, 11], "add_calls_to": [5, 11], "as_dict": [5, 11], "filter_node_": [5, 11], "get_root": [5, 11], "to_json": [5, 11, 163], "to_text": [5, 11, 171], "profile2df": [5, 11], "profile2graph": [5, 11, 171], "run_graphviz": 5, "run_subprocess": 5, "build_diff_imag": [5, 11], "display_lin": [5, 11], "empty_main_loop": [5, 11], "get_pygame_screen_font": [5, 11], "wait_event": [5, 11], "get_local_fold": [5, 11], "make_video": [5, 11], "practic": [5, 12, 58, 72, 95, 189, 191, 192], "rues_par": [5, 72, 95], "bellman": [5, 7, 187], "connected_component": [5, 7], "distance_haversin": [5, 7, 95, 157], "distance_par": [5, 7], "euler_path": [5, 7, 95], "eulerien_extens": [5, 7, 95], "get_dat": [5, 7, 95], "graph_degre": [5, 7], "possible_edg": [5, 7], "tsp_bresenham": [5, 72], "draw_ellips": [5, 8], "draw_lin": [5, 8], "trace_ligne_simpl": [5, 8], "tsp_kohonen": [5, 12, 58, 72], "ajoute_vecteur": [5, 9], "construit_liste_neuron": [5, 9], "construit_vill": [5, 9, 10], "deplace_neuron": [5, 9], "distance_chemin": [5, 9, 92], "distance_euclidienne_carre": [5, 9], "modifie_structur": [5, 9], "moyenne_proximit": [5, 9], "multiplie_vecteur": [5, 9], "poids_attir": [5, 9], "soustrait_vecteur": [5, 9], "vecteur_norm": [5, 9, 10], "tsp_kruskal": [5, 59, 72], "amelioration_chemin": [5, 10], "arbre_poids_minimal": [5, 10], "circuit_eulerien": [5, 10], "circuit_hamiltonien": [5, 10], "dessin_arete_zon": [5, 10], "distance_euclidian": [5, 10], "echange_posit": [5, 10], "echange_position_ess": [5, 10], "equation_droit": [5, 10], "evaluation_droit": [5, 10], "intersection_segment": [5, 10], "longueur_chemin": [5, 10], "oppose_vecteur": [5, 10], "repartition_zon": [5, 10], "retournement_ess": [5, 10], "supprime_crois": [5, 10], "tsp_kruskal_algorithm": [5, 10, 13], "vecteur_cosinus": [5, 10], "vecteur_point": [5, 10], "vecteur_sinus": [5, 10], "voisinage_zon": [5, 10], "voisinage_zone_xy": [5, 10], "tsp_kohonen_pygam": [5, 72], "pygame_simul": [5, 12, 13], "numpysex": [5, 49, 71, 72], "numpy_matrix2list": [5, 6, 49], "numpy_typ": [5, 6, 71], "faq_python": [5, 71], "faq_except": 5, "faq_geo": [5, 71], "faq_numpy": 5, "iv": [6, 49], "10x10": [6, 49, 50], "diag": [6, 49, 50, 112, 135, 179, 180], "mx": [6, 49, 113, 114], "diagflat": [6, 49], "avail": [6, 11], "thos": 6, "cherchent": [6, 56, 59, 71], "uint8": [6, 71], "float32": [6, 41, 54, 71, 171], "gpu": [6, 50, 71], "explaining": [6, 22, 71], "fp64": [6, 71], "gpus": [6, 71], "edge": [7, 11, 78, 84, 95, 108, 184, 187, 188], "max_it": [7, 9, 10, 12, 13, 85, 117, 118, 132, 134, 137, 139, 140, 141, 142], "init": [7, 65, 67, 95, 117, 118], "verbos": [7, 9, 10, 11, 13, 81, 95, 117, 118, 120, 131, 134, 146, 161], "ford": [7, 95, 187], "liaison": 7, "progres": 7, "connected": [7, 10], "vertex": [7, 84], "lat1": [7, 157], "lng1": [7, 157], "lat2": [7, 157], "lng2": [7, 157], "haversin": [7, 95], "formul": [7, 50, 53, 74, 79, 99, 111, 114, 121, 137, 173], "euclidien": [7, 9, 61, 183, 184], "paris": [7, 51, 56, 110, 125], "added_edg": [7, 95], "eulerian": [7, 95], "assum": [7, 11, 99, 150, 204], "every": [7, 11, 51, 65, 191, 192], "added": [7, 65, 95, 99], "typing": 7, "eul\u00e9rien": [7, 10], "max_segment": [7, 95], "url": [7, 11, 46, 54, 85, 95, 96, 166, 174, 187, 188, 209, 210], "sdpython": [7, 19, 22, 51, 54, 65, 82, 87, 95, 96, 99, 119, 166, 187, 188, 203, 204, 209, 210], "raw": [7, 11, 51, 54, 85, 95, 96, 99, 119, 166, 174, 187, 188, 203, 204, 209, 210], "_dat": [7, 51, 54, 95, 96, 98, 99, 119, 166, 187, 188, 203, 204, 209, 210], "paris_54000": [7, 95], "dest": [7, 11], "keep": [7, 11, 95], "ru": [7, 125], "rightarrow": [7, 51, 59, 61, 95, 101, 104, 105, 112, 164], "estabishing": 7, "threshold": [7, 137, 140, 171], "vol": [7, 95], "oiseau": [7, 30, 95], "duquel": [7, 137], "symetr": [7, 51, 69, 82, 84, 95, 100, 179, 197], "xc": 8, "yc": 8, "ellips": 8, "dem": [8, 95, 102, 118, 147, 154], "x\u00b2": 8, "a\u00b2": 8, "y\u00b2": 8, "b\u00b2": 8, "x0": [8, 42, 50, 138], "y0": [8, 42, 138], "x_0": [8, 46, 181, 182], "y_0": [8, 46], "bresenham": 8, "x1": [8, 31, 42, 50, 102, 117, 118, 122, 133, 134, 138, 150, 177], "y1": [8, 42, 102, 117, 118, 122, 133, 138, 177], "x2": [8, 31, 50, 61, 102, 113, 114, 117, 118, 122, 133, 134, 135, 150, 160, 177, 179, 180, 197], "y2": [8, 102, 113, 114, 117, 118, 122, 133, 160, 177, 179, 180], "vill": [9, 10, 14, 51, 58, 59, 61, 93, 95, 187, 188], "neuron": [9, 58, 62, 133], "700": [9, 10, 13, 116], "dist_w": 9, "attir": [9, 58], "compte_v": 9, "compte_n": 9, "nb_sel": 9, "solliqu": 9, "scalair": [9, 10, 50, 51], "attract": 9, "800": [9, 10, 12, 13, 59, 99, 116, 135, 168], "500": [9, 10, 12, 13, 59, 74, 77, 95, 115, 116, 130, 133, 134, 156, 163, 168, 186, 190], "dist_ratio": [9, 12], "12000": [9, 12], "soustr": 9, "taille_zon": 10, "croisent": [10, 42, 58, 89], "quadrillag": [10, 117, 118], "zone_taill": 10, "sublist": 10, "neighbor": [10, 30, 62, 123, 133, 143, 144, 145, 146, 147, 148, 149, 185, 186, 191, 192], "nod": [10, 11, 84, 152], "whol": 10, "confondu": [10, 140], "ar\u00eat": [10, 59, 95], "sommet": [10, 58, 59, 183], "sortent": 10, "euclien": 10, "neglige": 10, "1e": [10, 41, 78, 110, 132, 134, 160, 169, 200], "echang": [10, 168], "ka": 10, "kb": 10, "ax": [10, 27, 31, 46, 50, 51, 54, 77, 78, 84, 85, 86, 88, 89, 91, 92, 93, 95, 99, 106, 107, 115, 116, 117, 118, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150, 156, 160, 162, 174, 186, 200, 207, 208, 210], "p4": [10, 119], "vec": [10, 184], "ask_zon": 10, "zx": 10, "zy": 10, "shortest": 10, "going": 10, "dimensional": [10, 191, 192], "2d": [10, 46, 50, 62, 128, 165], "plan": [10, 19, 46, 51, 56, 58, 59, 183, 184, 193], "into": [10, 11, 65, 68, 191, 192], "squar": [10, 50, 99, 103, 112], "vec1": 10, "vec2": 10, "cosinus": [10, 100], "sinus": 10, "vectoriel": [10, 112, 135], "zmax": 10, "unzip": [11, 51], "verbosity": [11, 13], "decompressed": 11, "progress": [11, 84, 85, 204], "unzipped": 11, "blockdiag": [11, 168], "pillow": 11, "draw": [11, 31, 84, 95, 122, 159, 162], "definit": 11, "graphviz_help": [11, 183, 184], "vertic": [11, 78, 95, 108], "engin": [11, 163], "graphviz": [11, 82, 87], "below": [11, 171], "neato": 11, "gv": 11, "color": [11, 26, 27, 30, 42, 46, 59, 62, 77, 106, 107, 111, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 160, 207, 208], "image_nam": 11, "handler": 11, "approximat": [11, 31], "footprint": 11, "measur": 11, "recursivity": 11, "purpos": [11, 75], "automatically": 11, "subcl": 11, "iterat": 11, "over": [11, 50, 56, 181, 182, 202], "somecontainerclass": 11, "othercontainerclass": 11, "get_el": 11, "func_nam": 11, "nc1": 11, "nc2": 11, "tin": [11, 171], "tall": 11, "spent": 11, "pnod": 11, "time_el": 11, "filter_nod": 11, "sort_key": 11, "sortkey": [11, 170, 171], "render": 11, "interpreted": 11, "loaded": 11, "small": [11, 22, 56], "static": 11, "filter": 11, "displayed": 11, "overwrit": 11, "held": 11, "forget": 11, "as_str": 11, "kwarg": [11, 139], "fct_width": [11, 171], "fct": [11, 31, 34, 88, 113, 114, 120, 139, 162], "cumul": [11, 50, 51, 83, 119, 159, 170, 171, 172, 185], "rootrem": 11, "as_df": 11, "return_result": 11, "pstat": [11, 170, 171, 172, 185], "sort_stat": [11, 170, 171, 172, 185], "parameter": [11, 146], "cprofil": [11, 170, 171, 172, 185], "hir": [11, 62], "clean_text": 11, "logf": [11, 30], "clean": [11, 171], "onnx_array_ap": 11, "bench_ortmodule_nn_gpu6": 11, "prof": [11, 172], "pd": [11, 99, 145, 147, 174], "pyinstru": [11, 170], "nic": [11, 51], "sam": [11, 30, 31, 50, 51, 191, 192], "replicat": 11, "produced": 11, "fct0": 11, "fct1": 11, "fct2": 11, "fct3": 11, "fct4": 11, "00005": 11, "61130": [], "61125": [], "00001": 134, "81184": [], "00002": 11, "11067": [], "00003": 11, "11065": [], "70115": [], "20049": [], "20047": [], "50064": 31, "81171": [], "cwd": 11, "pygame_help": 11, "pygam": [11, 12, 13], "maxw": 11, "seq1": 11, "seq2": 11, "bar": [11, 51, 61, 62, 135, 136, 159, 162, 183, 189], "prev_bar": 11, "cannot": [11, 39, 53, 139], "sequencematch": 11, "font_small": 11, "font_half": 11, "associated": [11, 75], "deleted": 11, "green": 11, "vert": [11, 30, 54, 56, 59, 62, 70, 87, 111, 112, 164, 165, 186, 200], "yellow": [11, 174], "pictur": 11, "kind": [11, 51, 75, 85, 99, 131, 132, 135, 136, 138, 140, 145, 147, 149, 156], "averag": [11, 56, 168, 169], "suggest": [11, 87, 94], "defin": [11, 30, 31, 77], "circl": [11, 117, 187], "click": [11, 163], "halt": 11, "anoth": [11, 65, 68], "again": [11, 67, 81], "initializ": 11, "set_mod": [11, 12, 13], "thre": [11, 51], "3h": [11, 119], "5h": 11, "still": 11, "opened": 11, "generat": [11, 30, 139], "working": [11, 51], "seen": 11, "video_help": 11, "file_or_fold": 11, "temp_video": 11, "outvid": 11, "is_color": 11, "xvid": 11, "opencv": 11, "fourcc": 11, "videowrit": 11, "adding": 11, "first_click": [12, 13], "See": [12, 54], "delay": [12, 13, 54, 98, 99, 110, 119], "tsp_kruskal_pygam": 13, "sav": [13, 14], "J": [14, 16, 35, 42, 62, 81, 94, 95, 100, 124, 139, 152, 156, 162, 176, 183, 184, 203, 204], "avou": 14, "allait": 14, "pr\u00e9dir": [14, 61, 62, 99, 111, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144], "racont": [14, 61], "avion": [14, 56, 74, 204], "compagn": [14, 56], "flou": 14, "\u00e9clairc": 14, "aiment": [14, 74, 150], "impr\u00e9cis": 14, "quantifi": [14, 124], "dis": [14, 54, 96, 204], "vais": [14, 204], "r\u00eav": 14, "chauffeur": 14, "disparaissent": [14, 149], "mutualis": 14, "financi": [14, 70, 110], "accident": [14, 204], "vivon": [14, 204], "\u00e9conom": [14, 19, 56, 110], "argent": [14, 56, 110], "d\u00e9pens": [14, 110, 190], "sinistr": 14, "voitur": [14, 95], "sembl": [14, 38, 54, 56, 70, 77, 78, 84, 116, 131, 132, 195], "souv": [14, 170], "kilom\u00e9trag": 14, "lattitud": 14, "quarti": 14, "anonymis": 14, "souhaiton": [14, 210], "horizon": [14, 135], "tendanc": [14, 42, 56, 70, 135], "surapprentissag": [14, 132], "temporel": [14, 22, 50, 134, 135], "incap": [14, 62], "temorel": 14, "exclur": [14, 121], "pertinent": [14, 27, 56, 59, 62, 77, 137, 140, 145, 146, 155], "r\u00e9gion": [14, 46], "pay": [14, 46, 51, 56, 61, 110, 204], "propic": 14, "improb": [14, 53, 115], "conduir": [14, 204], "nord": 14, "sud": [14, 207, 208], "habit": [14, 30], "dens": 14, "constraindr": 14, "milli": [14, 59, 61, 62, 177], "ascend": 14, "hi\u00e9rarch": 14, "clusteris": [14, 183, 184], "cluster": [14, 117, 118], "clust": [14, 117, 118], "cat\u00e9goriel": [14, 22, 111], "onehotencod": 14, "dep": [14, 50, 51, 54, 56, 59, 70, 99, 110, 114], "acp": [14, 58, 62, 128, 135, 186], "personnalis": [14, 51], "individus": 14, "personnel": [14, 50, 174], "appr\u00e9hend": [15, 56, 62], "r\u00e9vis": 15, "gageur": 16, "archived": 16, "unofficial": 16, "binar": 16, "veux": [16, 204], "ingrat": 16, "permen": 16, "gohlk": 16, "shut": 16, "down": [16, 191, 192], "viabl": 16, "ubuntu": [16, 40], "subsystem": 16, "jupyt": [16, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 74, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 163, 185], "notebookapp": 16, "token": 16, "password": 16, "visual": [16, 19, 74], "studio": [16, 19, 74], "remot": 16, "noyau": 16, "googl": [17, 40, 64, 69, 95, 109, 189, 190, 191, 192], "concour": 17, "passion": [17, 204], "kick": 17, "logic": [17, 189], "personnag": [18, 162], "r\u00e9soud": [18, 30, 61, 111, 112], "tom": [18, 30, 56], "harry": [18, 30, 56], "pott": [18, 30], "fiol": 18, "poison": [18, 174], "vin": [18, 60, 62, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147], "orti": 18, "recul": [18, 183, 184], "insurmont": 18, "broadcasting": 19, "pull": [19, 65], "request": [19, 51, 96, 166, 174, 204], "evalu": [19, 59, 62, 97], "algortihm": 19, "2022": [19, 54, 85, 97, 166], "r\u00e9uss": [19, 51, 64, 69, 81, 115, 116, 134, 178, 179], "getting": 19, "started": 19, "cheat": [19, 66], "sheet": [19, 51, 66], "minicond": [19, 74], "mamb": 19, "logiciel": [19, 51, 56, 69, 163, 203], "ing\u00e9nier": 19, "collabor": 19, "demain": [19, 60, 204, 205], "nvidi": 19, "hi": 19, "_l": 20, "broadcast": [20, 50], "rechech": 20, "variat": [20, 70, 133], "travelling": [20, 61, 92], "kohonen": [20, 57], "1h30": 20, "enonc": [20, 45, 49, 72], "gross": [21, 53], "epxlicit": 21, "powershel": 21, "vhd": 21, "appdat": 21, "localstat": 21, "ext4": 21, "vhdx": 21, "canonicalgrouplimited": 21, "ubuntu22": 21, "04lts_79rhkp1fndgsc": 21, "daniel": 21, "nashed": 21, "sql": [22, 51, 54], "cpu": [22, 50], "cud": 22, "pytorch": [22, 50], "torch": [22, 171], "chatgpt": 22, "llm": 22, "sllm": 22, "wsl": 23, "ensa": [23, 61, 95], "hermion": [23, 30], "07": [23, 31, 41, 51, 53, 54, 56, 77, 85, 95, 99, 132, 134, 156, 158, 169, 174, 184], "auto_examples_python": 24, "auto_examples_jupyt": 24, "gallery": [24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "go": [26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 53, 166], "seaborn": [26, 61, 99, 136, 145, 147, 149], "clustermap": [26, 99], "head": [26, 30, 31, 46, 51, 52, 54, 62, 65, 68, 86, 88, 99, 119, 132, 134, 135, 137, 140, 143, 144, 147, 150, 156, 163, 168, 174, 187, 188, 204], "fixed_acidity": [26, 62, 138, 143, 144, 150], "volatile_acidity": [26, 62, 138, 143, 144, 150], "citric_acid": [26, 62, 138, 143, 144, 150], "residual_sugar": [26, 62, 136, 138, 143, 144, 150], "chlorid": [26, 62, 136, 138, 143, 144, 150], "076": [26, 62, 143, 144, 170], "098": [26, 62, 143, 144], "free_sulfur_dioxid": [26, 62, 136, 138, 143, 144, 150], "total_sulfur_dioxid": [26, 62, 136, 138, 143, 144, 150], "density": [26, 62, 136, 138, 143, 144, 150, 172], "9978": [26, 62, 143, 144], "9968": [26, 62, 143, 144], "ph": [26, 62, 136, 138, 143, 144, 150, 166], "51": [26, 50, 51, 54, 62, 95, 99, 112, 130, 131, 132, 134, 143, 144, 146, 148, 150, 160, 165, 210], "sulphat": [26, 62, 138, 143, 144, 150], "68": [26, 50, 54, 62, 77, 99, 110, 113, 142, 143, 144, 176], "alcohol": [26, 62, 138, 143, 144, 150], "corr": [26, 54, 99, 115, 116], "numeric_only": 26, "cmap": [26, 50, 133, 136], "vlag": 26, "linewidth": [26, 85, 99, 133, 149], "figsiz": [26, 27, 46, 50, 51, 54, 78, 84, 85, 86, 88, 89, 92, 93, 95, 99, 115, 116, 117, 118, 119, 122, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150, 156, 159, 160, 162, 174, 186, 208, 210], "plt": [26, 27, 31, 42, 46, 50, 51, 53, 54, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 106, 107, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 149, 150, 152, 156, 159, 160, 162, 164, 168, 174, 186, 200, 207, 208, 210], "clustergrid": [26, 99], "0x7f8889b4b520": 26, "running": [26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "505": [26, 150], "ipynb": [26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 163, 203], "nuag": [27, 58, 98, 99, 111, 115, 116, 130, 131, 132, 133, 139, 186, 210], "sklearn": [27, 62, 99, 117, 118, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163, 185, 186], "metric": [27, 132, 134, 137, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 185], "f1_scor": 27, "precision_recall_curv": [27, 137], "roc_curv": [27, 137, 140, 142], "confusion_matrix": [27, 137, 141, 142], "linear_model": [27, 99, 130, 133, 134, 137, 138, 139, 140, 141, 142, 149, 150], "logisticregress": [27, 130, 133, 137, 138, 139, 140, 141, 142], "model_select": [27, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 186], "train_test_spl": [27, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 186], "make_classif": [27, 62, 139, 185, 186], "pyplot": [27, 31, 42, 46, 50, 51, 53, 54, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 106, 107, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 149, 150, 152, 156, 159, 160, 162, 164, 168, 174, 186, 200, 207, 208, 210], "ext_test_cas": [27, 149, 168, 169], "unit_test_going": [27, 149], "n_sampl": [27, 50], "n_featur": [27, 130, 185, 186], "n_class": [27, 185, 186], "n_repeated": 27, "n_redund": [27, 62, 139], "subplot": [27, 46, 50, 54, 77, 78, 84, 85, 86, 88, 89, 92, 93, 95, 106, 107, 115, 116, 117, 118, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 149, 150, 156, 160, 162, 174, 186, 200, 207, 208, 210], "plot": [22, 27, 31, 42, 45, 46, 50, 53, 54, 77, 78, 83, 85, 86, 88, 89, 91, 92, 93, 95, 99, 106, 107, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 149, 150, 152, 156, 160, 162, 164, 168, 169, 178, 183, 184, 186, 200, 210], "line2d": [27, 42, 99, 113, 114], "0x7fad63981360": 27, "x_train": [27, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 186], "x_test": [27, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 186], "y_train": [27, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 186], "y_test": [27, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 186], "apprend": [27, 61, 62, 99, 132, 134, 139, 142, 147], "logreg": 27, "fit": [27, 50, 61, 62, 99, 117, 118, 119, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 185, 186], "environment": [27, 65, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185], "pleas": [27, 85, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 163, 185], "rerun": [27, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185], "trust": [22, 27, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185], "loading": [27, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185], "nbview": [27, 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185], "nbsp": [27, 99, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 185], "logisticregressionifittedlogisticregress": [27, 133, 137, 138, 139, 140, 141], "y_pred": 27, "predict": [22, 27, 61, 62, 99, 117, 118, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 185, 186], "conf": [27, 137, 141], "scor": [27, 62, 130, 131, 132, 137, 139, 140, 142, 144], "r\u00e9pondr": [27, 88, 94, 98, 99, 110, 120, 166], "fpr_cl": 27, "tpr_cl": 27, "y_prob": 27, "ravel": [27, 78, 86, 89, 99, 112, 115, 116, 119, 123, 131, 132, 133, 139, 140, 141, 142, 145, 172, 202], "prob_pred": 27, "lw": [27, 50, 119, 122, 132, 134, 138, 149], "navy": 27, "linestyl": [27, 46, 77], "xlim": 27, "ylim": [27, 99, 149], "xlabel": [27, 31, 77, 99, 132, 183, 184, 210], "proport": [27, 78, 137], "ylabel": [27, 77, 99, 132, 183, 184, 210], "0x7fad63684040": 27, "optimal": [27, 42, 56, 58, 59, 74, 92, 93, 112, 113, 114, 120, 125, 133, 134, 146, 187, 188, 192], "monoton": 27, "vstack": [27, 50, 53, 117, 118, 130, 134, 139, 171], "0x7fad633e70a0": 27, "rat": [22, 27, 61, 137, 174], "fpr": [27, 137, 140], "tpr": [27, 137, 140], "rapp": 27, "0x7fad630fc610": 27, "ponder": [27, 51, 112, 131, 132], "y_scor": 27, "precd": 27, "rappd": 27, "seuild": 27, "f1d": 27, "set_titl": [27, 46, 50, 51, 77, 89, 92, 95, 115, 116, 117, 118, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150, 160], "0x7fad62b0c220": 27, "air": [27, 36, 41, 42, 130, 135, 137, 145, 150, 164, 199, 204], "auc": [27, 137, 140], "s_f": 27, "s_t": [27, 85], "hist": [27, 31, 51, 53, 84, 137, 140, 145, 147, 167, 175, 178, 209, 210], "prob": [27, 99, 111, 135, 137, 139, 140, 142, 150, 178], "600": [27, 116, 130, 141], "250": [27, 77, 88, 99, 117, 131, 186], "0x7fad5ff94100": 27, "d\u00e9lim": [27, 199], "ajust": [27, 56, 95], "auto_exampl": [28, 43, 44], "impl\u00e9mentatin": 30, "maison": [30, 61], "national": [30, 51, 174], "boit": 30, "boisson": 30, "fum": 30, "cigar": 30, "animal": [30, 87, 165], "domest": 30, "su\u00e9dois": 30, "chien": 30, "danois": 30, "th\u00e9": 30, "blanch": [30, 62, 200], "propri\u00e9tair": 30, "caf": [30, 56], "pall": 30, "mall": 30, "dunhill": 30, "lait": [30, 121], "norv\u00e9gien": 30, "homm": [30, 94, 204], "blend": 30, "chat": 30, "cheval": 30, "bier": 30, "allemand": 30, "princ": 30, "eau": [30, 191, 192], "poisson": [30, 60, 61], "reconstitu": 30, "d\u00e9duct": 30, "puzzl": [30, 60, 125, 135], "embo\u00eet": 30, "notr": [30, 42, 56, 59, 61, 70, 99, 111, 115, 119, 133, 134, 143, 149, 156, 185, 190, 193, 204], "compatibil": 30, "incompatibl": 30, "\u00e9numer": [30, 50, 152, 187, 206], "cont": [30, 89, 119, 204], "constraint": 30, "described": 30, "enigm": 30, "gener": 30, "triplet": [30, 33], "al": [30, 96, 204], "260": [30, 130, 150], "combin": [30, 51, 56, 89, 202, 209], "nothing": 30, "everything": 30, "incompatibility": 30, "compatibility": 30, "combine_cross_set": 30, "set1": 30, "set2": 30, "ruleposit": 30, "overrid": 30, "ruleequivalent": 30, "equivalent": [30, 50, 171], "rulevoisin": 30, "ruleav": 30, "ruleensembl": 30, "categor": [30, 139, 204], "tl": 30, "ttcouleur": 30, "ttnationalit": 30, "norvegien": 30, "suedois": 30, "ttboisson": 30, "ttcigar": 30, "bluemast": 30, "ttanimal": 30, "gar": 30, "pr\u00e9dicat": 30, "wikipedi": [30, 50, 54, 61, 95, 131, 166, 171, 176, 204], "wik": [30, 204], "calcul_des_pr": 30, "a9dicat": 30, "solv": [30, 50, 130, 137, 139, 140, 141, 142, 190], "incompatibil": 30, "describ": [30, 51, 136, 140], "hous": [30, 191, 192], "to_datafram": 30, "sr": 30, "eploring": 30, "deepness": 30, "beginning": 30, "recursively": 30, "solved": 30, "unless": 30, "looking": 30, "possibilit": [30, 121], "much": [30, 191, 192], "research": 30, "could": [30, 50, 85, 93], "represented": 30, "creating": 30, "check": [30, 31, 65], "bringing": 30, "back": [30, 51, 85, 171], "70": [30, 46, 50, 54, 62, 77, 83, 99, 112, 119, 143, 144, 169, 172], "90": [30, 31, 54, 77, 85, 95, 99, 119, 123, 134, 147, 164, 167, 204], "110": [30, 33, 46, 52, 54, 56, 124, 130, 150, 167, 185], "130": [30, 170, 171], "625": 30, "cam": 31, "longrightarrow": [31, 58, 59, 62, 70], "hold": 31, "let": [31, 50, 94, 124, 191, 192], "evaluat": [31, 181, 182], "equal": [31, 46], "100000000": 31, "rnd32": 31, "very": 31, "rnd32b": 31, "9802321055427683e": 31, "9802321721561498e": 31, "91019621920941e": 31, "9999999740103884": 31, "49933": 31, "50211": 31, "50124": 31, "50142": 31, "49965": 31, "50176": 31, "49854": 31, "49792": 31, "49637": 31, "49803": 31, "50390": 31, "49874": 31, "49952": 31, "49763": 31, "49934": 31, "49917": 31, "49852": 31, "49823": 31, "50244": 31, "50251": 31, "49714": 31, "50292": 31, "49838": 31, "50156": 31, "50051": 31, "49602": 31, "50190": 31, "50168": 31, "49603": 31, "50060": 31, "49422": 31, "50202": 31, "50018": 31, "50208": 31, "49919": 31, "50089": 31, "49876": 31, "49937": 31, "49765": 31, "50164": 31, "49935": 31, "50250": 31, "50073": 31, "49961": 31, "49957": 31, "50238": 31, "50052": 31, "49872": 31, "50178": 31, "49975": 31, "49901": 31, "50087": 31, "50132": 31, "50534": 31, "49974": 31, "50212": 31, "50162": 31, "50001": 31, "50012": 31, "49924": 31, "50143": 31, "49589": 31, "50291": 31, "50421": 31, "50204": 31, "50140": 31, "50070": 31, "50077": 31, "49752": 31, "49769": 31, "49906": 31, "49941": 31, "50196": 31, "50447": 31, "50228": 31, "49677": 31, "49700": 31, "49896": 31, "49729": 31, "49861": 31, "49916": 31, "50222": 31, "49947": 31, "50407": 31, "50199": 31, "49606": 31, "49923": 31, "49608": 31, "49605": 31, "49833": 31, "49858": 31, "50042": 31, "49460": 31, "50093": 31, "49859": 31, "50027": 31, "50177": 31, "50414": 31, "50216": 31, "50217": 31, "50451": 31, "50023": 31, "49773": 31, "50085": 31, "50331": 31, "50103": 31, "50218": 31, "50115": 31, "50055": 31, "50215": 31, "49212": 31, "49979": 31, "50123": 31, "49629": 31, "50229": 31, "50017": 31, "49724": 31, "49885": 31, "49504": 31, "49672": 31, "50246": 31, "50300": 31, "50135": 31, "50309": 31, "50258": 31, "49531": 31, "50094": 31, "49842": 31, "50339": 31, "50133": 31, "49820": 31, "50209": 31, "50264": 31, "49648": 31, "49812": 31, "49675": 31, "49804": 31, "50054": 31, "49976": 31, "50201": 31, "49717": 31, "49757": 31, "49762": 31, "49818": 31, "49826": 31, "50247": 31, "50037": 31, "49780": 31, "49844": 31, "49871": 31, "49730": 31, "50171": 31, "50009": 31, "50205": 31, "49996": 31, "49492": 31, "49888": 31, "49698": 31, "50011": 31, "50080": 31, "49959": 31, "50088": 31, "50406": 31, "49802": 31, "49887": 31, "50188": 31, "49881": 31, "50441": 31, "50334": 31, "50136": 31, "49781": 31, "49967": 31, "49709": 31, "50169": 31, "50160": 31, "49741": 31, "50044": 31, "50166": 31, "50505": 31, "50119": 31, "50145": 31, "50322": 31, "50091": 31, "49583": 31, "49840": 31, "50235": 31, "49955": 31, "49862": 31, "49751": 31, "50114": 31, "50041": 31, "50062": 31, "49865": 31, "49821": 31, "49886": 31, "49683": 31, "50120": 31, "49622": 31, "50430": 31, "49694": 31, "49816": 31, "50163": 31, "49868": 31, "49912": 31, "49982": 31, "50110": 31, "50099": 31, "49805": 31, "50067": 31, "50356": 31, "50065": 31, "49595": 31, "49931": 31, "50233": 31, "100017": 31, "100095": 31, "99719": 31, "100001": 31, "99856": 31, "99882": 31, "100271": 31, "99821": 31, "99861": 31, "100335": 31, "100261": 31, "99933": 31, "100412": 31, "99757": 31, "99774": 31, "100073": 31, "100186": 31, "100152": 31, "100421": 31, "99387": 31, "100394": 31, "99748": 31, "99789": 31, "100323": 31, "100208": 31, "99969": 31, "99710": 31, "100245": 31, "100056": 31, "100055": 31, "99572": 31, "99931": 31, "99888": 31, "100133": 31, "99314": 31, "100031": 31, "100083": 31, "99895": 31, "100598": 31, "100045": 31, "100402": 31, "100273": 31, "99627": 31, "100165": 31, "100125": 31, "100183": 31, "99995": 31, "100024": 31, "100590": 31, "100052": 31, "99799": 31, "100354": 31, "99796": 31, "99707": 31, "100075": 31, "100373": 31, "100179": 31, "100206": 31, "100190": 31, "100080": 31, "100069": 31, "100151": 31, "100119": 31, "100093": 31, "100178": 31, "100028": 31, "99875": 31, "100629": 31, "100251": 31, "99605": 31, "99516": 31, "100156": 31, "100377": 31, "100136": 31, "100452": 31, "99568": 31, "99742": 31, "100527": 31, "99929": 31, "99926": 31, "99749": 31, "99613": 31, "100253": 31, "100308": 31, "100041": 31, "99866": 31, "99384": 31, "100466": 31, "99949": 31, "99784": 31, "99643": 31, "100111": 31, "100286": 31, "100301": 31, "99711": 31, "99934": 31, "100118": 31, "100642": 31, "99701": 31, "99512": 31, "99624": 31, "100356": [31, 130], "99803": 31, "99829": 31, "100002": 31, "99794": 31, "99910": 31, "99911": 31, "99348": 31, "100181": 31, "99540": 31, "100487": 31, "100322": 31, "99972": 31, "150480": 31, "150304": 31, "150431": 31, "150513": 31, "149820": 31, "150113": 31, "150867": 31, "149769": 31, "149829": 31, "150206": 31, "149709": 31, "149843": 31, "149940": 31, "150536": 31, "149616": 31, "150406": 31, "150081": 31, "149314": 31, "149190": 31, "149867": 31, "149532": 31, "150664": 31, "149127": 31, "150455": 31, "150383": 31, "149923": 31, "150148": 31, "149780": 31, "149438": 31, "150602": 31, "149840": 31, "149912": 31, "150232": 31, "150353": 31, "150403": 31, "149796": 31, "150108": 31, "150318": 31, "149658": 31, "150176": 31, "150041": 31, "149664": 31, "150404": 31, "150544": 31, "149937": 31, "149753": 31, "149338": 31, "149691": 31, "150170": 31, "150511": 31, "150224": 31, "150202": 31, "149102": 31, "150186": 31, "150036": [31, 51], "149908": 31, "150246": 31, "149879": 31, "150024": 31, "150433": 31, "149805": 31, "150276": 31, "175660": 31, "199597": 31, "200557": 31, "200545": 31, "199562": 31, "200452": 31, "199952": 31, "199484": 31, "199814": 31, "199956": 31, "200014": 31, "200444": 31, "200015": 31, "200399": 31, "199806": 31, "200585": 31, "200201": 31, "200183": 31, "200093": 31, "200285": 31, "200318": 31, "199533": 31, "199660": 31, "200249": 31, "199567": 31, "200052": 31, "200393": 31, "199838": 31, "200248": 31, "200887": 31, "211886": 31, "250242": 31, "249519": 31, "250284": 31, "249680": 31, "250398": 31, "250632": 31, "250077": 31, "249789": 31, "249622": 31, "249599": 31, "250217": 31, "249764": 31, "250530": 31, "250694": 31, "249060": 31, "281422": 31, "300561": 31, "299899": 31, "299114": 31, "299654": 31, "300692": 31, "300667": 31, "299642": 31, "340225": 31, "350652": 31, "349699": 31, "349983": 31, "394727": 31, "399944": 31, "449050": 31, "547320": 31, "547204": 31, "447194": 31, "399792": 31, "395037": 31, "350239": 31, "350128": 31, "350125": 31, "340207": 31, "299647": 31, "299787": 31, "300104": 31, "299121": 31, "300420": 31, "299964": 31, "299784": 31, "280898": 31, "249849": 31, "249750": 31, "249125": 31, "250254": 31, "250816": 31, "249811": 31, "249858": 31, "250340": 31, "249795": 31, "250335": 31, "248952": 31, "250597": 31, "250064": 31, "250020": 31, "250558": 31, "212938": 31, "200182": 31, "200668": 31, "200037": 31, "198918": 31, "200097": 31, "200152": 31, "200113": 31, "199732": 31, "200067": 31, "199304": 31, "199824": 31, "199326": 31, "199630": 31, "200091": 31, "198549": 31, "200027": 31, "199177": 31, "199080": 31, "200064": 31, "199703": 31, "199877": 31, "199787": 31, "200239": 31, "199667": 31, "200728": 31, "200099": 31, "200223": 31, "200108": 31, "175418": 31, "149525": 31, "150058": 31, "149313": 31, "149717": 31, "149877": 31, "150227": 31, "150624": 31, "149566": 31, "149852": 31, "149739": 31, "149930": 31, "150646": 31, "150056": 31, "150751": 31, "150256": 31, "149810": 31, "150198": 31, "149927": 31, "149666": 31, "150235": 31, "150179": 31, "150484": 31, "149809": 31, "150985": 31, "150583": 31, "150205": 31, "150003": 31, "149722": 31, "149711": 31, "149136": 31, "150083": 31, "150134": 31, "150445": 31, "150382": 31, "149502": 31, "150547": 31, "150270": 31, "149586": 31, "150354": 31, "150217": 31, "150508": 31, "149911": 31, "149965": 31, "150282": 31, "149700": 31, "150468": 31, "149288": 31, "150814": 31, "149906": 31, "149837": 31, "149268": 31, "149745": 31, "149763": 31, "150008": 31, "149539": 31, "149638": 31, "150243": 31, "149720": 31, "150065": 31, "99709": 31, "100050": 31, "99804": 31, "100403": 31, "99951": 31, "100228": 31, "99925": 31, "99717": 31, "100311": 31, "100606": 31, "100941": 31, "99660": 31, "100224": 31, "100098": 31, "100280": 31, "100126": 31, "100344": 31, "100144": 31, "99787": 31, "99704": 31, "99689": 31, "99900": 31, "99671": 31, "99781": 31, "100756": 31, "99864": 31, "99956": 31, "100658": 31, "100546": 31, "99691": 31, "99954": 31, "99941": 31, "99521": 31, "99371": 31, "100154": 31, "100374": 31, "100428": 31, "100532": 31, "100087": 31, "100037": 31, "100168": 31, "100391": 31, "99958": 31, "99923": 31, "100117": 31, "100367": 31, "100187": 31, "100109": 31, "99161": 31, "100074": 31, "100447": 31, "99634": 31, "100459": 31, "99631": 31, "100198": 31, "99715": 31, "100291": 31, "100049": 31, "99902": 31, "100134": 31, "100062": 31, "100762": 31, "99852": 31, "99935": 31, "99713": 31, "100348": 31, "99534": 31, "99812": 31, "99583": 31, "100295": 31, "100434": 31, "100376": 31, "100072": 31, "99815": 31, "100015": 31, "99633": 31, "99684": 31, "99578": 31, "99744": 31, "100560": 31, "99419": 31, "99942": 31, "100044": 31, "100209": 31, "100338": 31, "99617": 31, "99658": 31, "99571": 31, "100066": 31, "100128": 31, "99730": 31, "100116": 31, "99668": 31, "100256": 31, "100700": 31, "100081": 31, "99602": 31, "99550": 31, "100265": 31, "100519": 31, "99780": 31, "100039": 31, "100319": 31, "100364": 31, "99808": 31, "100342": 31, "49518": 31, "50134": 31, "50084": 31, "49813": 31, "50353": 31, "50083": [11, 31], "49771": 31, "50150": 31, "50107": 31, "50326": 31, "50056": 31, "50157": 31, "50016": 31, "50311": 31, "49735": 31, "50175": 31, "50026": 31, "50611": 31, "49832": 31, "50242": 31, "49973": 31, "49612": 31, "49685": 31, "50183": 31, "50437": 31, "49764": 31, "50173": 31, "50137": 31, "50493": 31, "49905": 31, "50109": 31, "49738": 31, "49873": 31, "49772": 31, "50287": 31, "49837": 31, "49692": 31, "49784": 31, "49723": 31, "49604": 31, "50318": 31, "49552": 31, "49733": 31, "50096": 31, "50131": 31, "50403": 31, "50082": 31, "49760": 31, "49945": 31, "49846": 31, "49992": 31, "50104": 31, "49807": 31, "50058": 31, "49969": 31, "49640": 31, "49847": 31, "50413": 31, "49963": 31, "49999": 31, "50078": 31, "49914": 31, "50277": 31, "49940": 31, "49822": 31, "50111": 31, "50127": 31, "50108": 31, "49892": 31, "50191": 31, "49746": 31, "49879": 31, "49911": 31, "50122": 31, "50381": 31, "49707": 31, "49796": 31, "49936": 31, "50050": 31, "49998": 31, "49528": 31, "49893": 31, "50268": 31, "49915": 31, "49839": 31, "49863": 31, "50276": 31, "50200": 31, "50814": 31, "50179": 31, "50213": 31, "49913": 31, "49895": 31, "50388": 31, "50194": 31, "50284": 31, "49759": 31, "49984": 31, "49756": 31, "49845": 31, "50159": 31, "49739": 31, "50043": 31, "49673": 31, "50112": 31, "49902": 31, "49766": 31, "49960": 31, "50187": 31, "50046": 31, "50214": 31, "49731": 31, "50004": 31, "49674": 31, "50038": 31, "49710": 31, "50068": 31, "49795": 31, "49570": 31, "50172": 31, "49870": 31, "50063": 31, "50257": 31, "50075": 31, "50010": 31, "49446": 31, "50074": 31, "49815": 31, "49753": 31, "50090": 31, "49989": 31, "50369": 31, "50013": 31, "50036": 31, "49835": 31, "49836": 31, "50045": 31, "50053": 31, "50149": 31, "49903": 31, "49890": 31, "50066": 31, "50154": 31, "50040": 31, "49680": 31, "49853": 31, "49825": 31, "49755": 31, "49951": 31, "50316": 31, "49127": 31, "50165": 31, "49701": 31, "50321": 31, "49498": 31, "50506": 31, "49711": 31, "50126": 31, "49910": 31, "50418": 31, "98023211e": 31, "97427164e": 31, "96831118e": 31, "96831124e": 31, "97427171e": 31, "98023217e": 31, "barcontain": 31, "numper": 31, "remain": 31, "d32": 31, "d64": 31, "imagin": [31, 56, 59, 60, 61, 86, 113, 114, 156, 162, 188, 189, 200, 201, 202], "want": [31, 50, 191, 192], "converted": 31, "find_interval": 31, "dx": [31, 92, 93, 117, 118, 170, 175, 184, 199], "usually": 31, "455067403371979e": 31, "960464410925681e": 31, "117": [31, 115, 170, 171, 180, 185], "519": [31, 150], "956": 31, "45506740e": 31, "20635254e": 31, "39815441e": 31, "58995628e": 31, "78175815e": 31, "97356002e": 31, "16536189e": 31, "35716375e": 31, "54896562e": 31, "07407675e": 31, "19325694e": 31, "31243712e": 31, "43161731e": 31, "55079750e": 31, "66997768e": 31, "78915787e": 31, "90833806e": 31, "02751824e": 31, "14669843e": 31, "26587862e": 31, "38505880e": 31, "50423899e": 31, "62341918e": 31, "74259937e": 31, "86177955e": 31, "98095974e": 31, "10013993e": 31, "21932011e": 31, "33850030e": 31, "45768049e": 31, "57686067e": 31, "69604086e": 31, "81522105e": 31, "93440123e": 31, "05358142e": 31, "17276161e": 31, "29194179e": 31, "41112198e": 31, "53030217e": 31, "64948236e": 31, "76866254e": 31, "88784273e": 31, "00702292e": 31, "12620310e": 31, "24538329e": 31, "36456348e": 31, "48374366e": 31, "60292385e": 31, "72210404e": 31, "84128422e": 31, "96046441e": 31, "ql": 31, "95118410107176e": 31, "estimat": [31, 77], "x_": [31, 56, 61, 62, 70, 85, 131, 162, 181, 182, 200], "inf_strict": 31, "count_event": 31, "1001": [31, 50, 101, 124, 200], "356065690964584e": 31, "665": 31, "1025": 31, "190": [31, 110], "1307249792036345e": 31, "842": [31, 99, 171], "1005": [31, 53], "290": 31, "7258433893108105e": 31, "882": 31, "990": 31, "390": 31, "3209617994179865e": 31, "910": [31, 150], "993": 31, "490": 31, "9160802095251626e": 31, "949": 31, "1012": 31, "590": [31, 99], "5111986196323386e": 31, "946": [31, 114], "1002": [31, 54, 107], "690": [31, 147], "1063170297395146e": 31, "924": 31, "991": [31, 50], "790": 31, "7014354398466907e": 31, "942": 31, "978": [31, 54], "296553849953867e": 31, "923": [31, 99], "957": 31, "891672260061043e": 31, "958": 31, "992": 31, "951184e": 31, "028398": 31, "986": 31, "190237e": 31, "033138": 31, "1026": 31, "785355e": 31, "043605": 31, "1032": 31, "380474e": 31, "068702": 31, "1048": 31, "975592e": 31, "065025": 31, "1015": 31, "logx": [31, 88], "inf_equal": 31, "df2": [31, 54, 119, 130, 156, 163], "984": [31, 77], "954": [31, 99], "1014": 31, "981": 31, "1028": 31, "1018": 31, "996": [31, 53, 114, 130, 242], "983": [31, 50], "966": [31, 119], "1034": 31, "989": 31, "1022": 31, "sup_strict": 31, "df3": [31, 130, 163], "635": 31, "1020": 31, "788": [31, 130, 170], "973": 31, "879": [31, 99], "899": 31, "930": 31, "998": [31, 114], "940": 31, "964": 31, "1007": [31, 53], "943": 31, "982": 31, "980": 31, "020937": 31, "1003": [31, 119, 120], "040583": 31, "961": [31, 50], "042084": 31, "081755": 31, "094303": 31, "sup_equal": 31, "df4": [31, 130], "1009": [31, 53], "1046": 31, "972": 31, "967": [31, 50], "985": [31, 35, 99], "987": 31, "1004": 31, "975": [31, 99, 138, 150, 172], "inf_strict_neg": 31, "dfn": 31, "962": 31, "1013": [31, 101], "994": 31, "968": 31, "995": [31, 53], "As": [31, 65, 191, 192], "soon": 31, "rounded": 31, "inequality": 31, "howev": 31, "handl": 31, "templat": [31, 204], "inequalit": 31, "easi": 31, "according": 31, "versus": [31, 54], "concurrent": 32, "create_list": 32, "5017731000007188": 32, "run2": 32, "0972130999998626": 32, "009": [32, 170], "9519763000007515": 32, "run3": 32, "3304714000005333": 32, "signific": 32, "887": [32, 50], "compteur": [33, 164], "u_st": 33, "u_non_recurs": 33, "u0": 33, "u1": [33, 155], "u2": [33, 155], "compare_l": 33, "g\u00e9ometr": [33, 59, 101, 102, 160], "sum_": [33, 50, 51, 53, 55, 56, 58, 59, 61, 62, 70, 77, 83, 100, 101, 102, 111, 112, 113, 114, 115, 116, 131, 134, 137, 164, 176, 181, 182, 183, 184, 186, 187, 188, 189, 190, 199, 200, 205, 206], "infty": [33, 58, 59, 101, 154, 187], "convergent": [33, 50, 58, 59, 89, 103, 130, 133], "suite_geometrique_1": 33, "1075": 33, "exp\u00e9riment": 33, "suite_geometrique_2": 33, "yold": 33, "approxim": [33, 41, 54, 62, 69, 70, 85, 95, 111, 112, 114, 123, 131, 199, 200], "1055": [33, 150], "s_n": 33, "u_i": [33, 200], "chercheur": [33, 74], "01100111": 33, "011": [33, 124, 170, 172], "111": [33, 46, 53, 54, 95, 132, 134], "hyper_cube_l": 33, "hyper_cube_dico": 33, "ind": [33, 46, 123, 131, 139, 171, 204], "cle": [33, 69, 87, 96, 175, 197, 198], "hyper_cub": 33, "Sur": [33, 56, 59, 70, 91, 100, 132, 133, 142], "occurrence2": 33, "uplet": [33, 56], "curios": [33, 60], "occurrence3": 33, "hyper_cube_liste2": 33, "occurrence4": 33, "hyper_cube_liste3": 33, "occurrence5": 33, "013": [33, 37, 170, 172], "esthet": 34, "twoarg": 34, "onearg": 34, "fcts_a": 34, "fcts_b": 34, "004": [34, 36, 170], "itertool": [35, 92, 93, 194], "pn": 35, "po": 35, "eval": [35, 52], "1400001060101204e": 36, "9200000173877925e": 36, "nan": [37, 50, 51, 85, 99, 115, 116, 119, 132, 137, 145, 147, 166, 169, 204], "disparu": 37, "dropn": 37, "quar": 38, "pion": 38, "vingt": [38, 56], "dami": 38, "voisinag": [38, 58, 117, 118], "libr": [38, 119], "Quels": [38, 50, 98, 99, 187], "adversair": 38, "pion_prendr": 38, "advers": 38, "pion_prendre_dict": 38, "damier_dict": 38, "\u00e9chiqui": [38, 50], "pion_prendre_list": 38, "damier_list": 38, "pion_prendre_bord": 38, "005": [38, 99, 134, 171, 172], "notemm": 39, "ujson": [39, 166], "cloudpickl": [39, 166], "0x7f87ddae8340": 39, "002849399999831803": 39, "00033690000054775737": 39, "0005795999986730749": 39, "0003201000017725164": 39, "570000080799218e": 39, "x95": 39, "x08__main__": 39, "x01a": 39, "x93": 39, "x81": 39, "x03att": 39, "x01r": 39, "x94sb": 39, "0x7f8889b4b940": 39, "duppliqu": 39, "voluminu": 39, "x01b": 39, "x04att1": 39, "x04att2": 39, "x06ub": 39, "eviton": 39, "0x7f88877b2dd0": 39, "000416300001234049": 39, "00032219999957305845": 39, "habituel": 39, "pr\u00e9visibl": 39, "highest_protocol": 39, "0003802999999606982": 39, "myfunc": 39, "x01x": 39, "x01f": 39, "x06myfunc": 39, "x94u": 39, "0x7f8885f8b130": 39, "x02": 39, "x17cloudpickl": 39, "x0e_make_funct": 39, "x03": 39, "r_builtin_typ": 39, "x08codetyp": 39, "x85": 39, "x94r": 39, "x01k": 39, "x00k": 39, "x02kcc": 39, "x08": 39, "x00d": 39, "x01": 39, "x17": [39, 150], "x94nk": 39, "x86": 39, "x8co": 39, "_doc": [39, 65], "x94m": 39, "x97": 39, "x01c": 39, "x0b__package__": 39, "x08__name__": 39, "x94unnnt": 39, "x1ccloudpickl": 39, "cloudpickle_fast": 39, "x12_function_setstat": 39, "x19": [39, 150], "x16h": 39, "x0f": 39, "x0c__qualname__": 39, "x0f__annotations__": 39, "x0e__kwdefaults__": 39, "x94n": 39, "x0c__defaults__": 39, "n__module__": 39, "x07__doc__": 39, "x0b__closure__": 39, "x17_cloudpickle_submodul": 39, "x0b__globals__": 39, "x86r0u": 39, "0x7f8885f895a0": 39, "0x7f8885f8a560": 39, "x953": 39, "x02it": 39, "x08builtin": 39, "x04it": 39, "x02e": 39, "x00bu": 39, "list_iterator": 39, "0x7f8889b4b7c0": 39, "ensgen": 39, "generator": [39, 69, 101, 152], "030": [39, 170], "protoc": 40, "gp": 40, "__version__": [40, 65, 68], "tutorial": [40, 66], "run_cmd": 40, "json_format": 40, "messagetojson": 40, "parsejson": 40, "proto2": 40, "optional": 40, "int32": [40, 54, 84, 119, 144], "enum": 40, "phonetyp": 40, "mobil": [40, 70], "phonenumb": 40, "repeated": 40, "phon": 40, "addressbook": 40, "peopl": 40, "debian": [40, 67], "proto": 40, "python_out": 40, "use_protoc": 40, "schema_pb2": 40, "utlis": 40, "noq": 40, "e402": 40, "1234": 40, "john": [40, 56, 166], "jdo": 40, "555": 40, "4321": 40, "serializetostring": 40, "fromstring": 40, "parsefromstring": 40, "db": [40, 204], "5678": 40, "johnet": 40, "doet": 40, "jtdoet": 40, "example2": 40, "777": 40, "bytesiz": 40, "db2": 40, "bsiz": 40, "js": [40, 82, 87], "055": 40, "fall": [41, 61, 105, 115, 116, 120, 131, 171, 204], "escompt": 41, "mi": [41, 149], "pieg": [41, 50], "3n": [41, 103], "exigent": [41, 56], "exig": [41, 77], "\u00f4t\u00e9": [41, 87, 94, 110], "devenus": [41, 61], "favoris": [41, 56], "losang": 41, "paraiss": 41, "b\u00e9n\u00e9fici": 41, "183676841431136": 41, "sens": [41, 131, 166], "31622776601683794": 41, "03162277660168379": 41, "9999": [41, 119], "0001": [41, 85, 112, 117, 118, 124, 134, 150, 174], "99999": 41, "0031622776601683794": 41, "999999": [41, 171], "0000000000000002e": 41, "9999999": 41, "000316227766016838": 41, "99999999": 41, "999999999": 41, "0000000000000003e": 41, "1622776601683795e": 41, "99999999999": 41, "1622776601683796e": 41, "999999999999": 41, "9999999999999": 41, "1622776601683797e": 41, "99999999999999": 41, "0000000000000001e": 41, "999999999999999": 41, "162277660168379e": 41, "8999999985098839": 41, "3162277683729184": 41, "9900000002235174": 41, "0999999988824129": 41, "9990000000689179": 41, "0009999999": 41, "03162277551199656": 41, "9999000000098022": 41, "999999e": 41, "009999999509891484": 41, "9999900000011621": 41, "0031622774764217087": 41, "9999990000001162": 41, "0009999999418942008": 41, "999999900000013": 41, "0003162277453952373": 41, "999999990000001": 41, "999999525523424e": 41, "9999999990000001": 41, "162277439909038e": 41, "99999937286775e": 41, "162277516708525e": 41, "999999437919884e": 41, "162277525279896e": 41, "999999488741863e": 41, "162277498494361e": 41, "999999422567411e": 41, "162277503725911e": 41, "999999712080637e": 41, "1622776099917643e": 41, "matrice_carree_2": 41, "determin": [41, 96], "cc": [41, 81, 115, 116, 171], "det": [41, 50], "tr": [41, 68, 150, 153, 163, 174], "lambda_1": [41, 179], "lambda_2": [41, 179, 183], "lll": [41, 58, 59], "discrimin": [41, 133, 209], "polyn\u00f4m": [41, 62, 150, 197], "valeurs_propr": 41, "9999990000110609": 41, "000000999988939": 41, "m_2": [41, 115, 116], "_2": [41, 61, 134], "99999999900000002828": 41, "000000001": 41, "Quelles": [41, 121, 187], "014": 41, "0x7f87dde1b820": 42, "\u00e9loign": [42, 50, 54, 56, 58, 117, 118, 123], "0x7f87ddd9cf70": 42, "constat": [42, 204], "d\u00e9duit": [42, 90, 115, 168, 200], "d\u00e9crois": 42, "diminu": [42, 51, 56, 59, 77, 130, 131, 187], "505907269186013": 42, "d0": [42, 85, 93], "ordre2": 42, "xo": 42, "691942421153962": 42, "1903892598312495": 42, "0x7f87dde1af50": 42, "voil\u00e0": [42, 93, 131, 203, 204], "supposon": [42, 56, 62, 83, 195], "faison": 42, "oublion": [42, 204], "078025608783923": 42, "6771876900613591": 42, "1391250768731818": 42, "1046501462201344": 42, "0784484090749775": 42, "0x7f87ddd3e8f0": 42, "concord": 42, "d\u00e9liber": 42, "bouclag": 42, "weight": [42, 174], "bold": 42, "181581748314381": 42, "5243392021523936": 42, "4158660324899728": 42, "7332034403329302": 42, "2868319034555752": 42, "tort": [42, 75, 137, 203], "empress": 42, "443079572694948": 42, "523338179940478": 42, "3819249081186789": 42, "194186815206845": 42, "1883320298224307": 42, "0767649820540774": 42, "16329823208868144": 42, "016637088361759367": 42, "Pas": [42, 66, 81, 85, 88, 89, 134, 141, 149, 168, 193], "parf": [42, 46, 93, 114], "mien": [42, 204], "circonst": [42, 203], "aurion": 42, "al\u00e9": [42, 117, 118], "permutation_rnd": 42, "4489424506049406": 42, "6524839602002874": 42, "5691003846597402": 42, "4629741018183848": 42, "aberr": [42, 56, 85, 112, 123, 149], "syst\u00e9mat": [42, 56], "9657797307374083": 42, "8005404539463572": 42, "2436614330765459": 42, "15328048902852542": 42, "027303437404047504": 42, "recommenc": [42, 78, 89, 113, 114, 115, 116, 149, 150, 152, 181, 182], "minit": 42, "n_permut": 42, "bordr": 42, "1380905804644303": 42, "0971799688330344": 42, "096552604587197": 42, "0873102647994237": 42, "6066673059897301": 42, "29070487509552667": 42, "502": 42, "el\u00e9ment": [45, 49, 190, 192], "basemap": 46, "surcouch": 46, "anim": 46, "pygal": 46, "ipyleaflet": 46, "g\u00e9ograph": [46, 58, 95], "pyproj": 46, "fronti": [46, 62, 117, 118, 123, 133, 137, 138, 140], "fleuv": 46, "unis": [46, 56], "difficult": [46, 77, 95, 133, 204], "fou": [46, 53], "ponteil": 46, "varredd": 46, "66145": 46, "77483": 46, "epci": 46, "cu": 46, "perpignan": 46, "m\u00e9diterran": 46, "pmcu": 46, "meau": 46, "200027183": 46, "247700628": 46, "pyren": 46, "oriental": 46, "marn": 46, "77": [46, 77, 85, 95, 99, 112, 114, 119, 136, 221], "occitan": 46, "\u00eele": 46, "tension": 46, "bt": 46, "kva": 46, "photovolta": 46, "energ": 46, "mwh": 46, "10728": 46, "620366": 46, "41684": 46, "eolien": 46, "hydraul": 46, "bio": 46, "cog\u00e9ner": 46, "geo": [46, 69, 72], "6323626522": 46, "82631103755": 46, "0059497861": 46, "92725176893": 46, "826311": 46, "927252": 46, "lat": [46, 157], "632363": 46, "00595": 46, "terr": [46, 204], "sph\u00e9riqu": 46, "localis": [46, 56, 70, 163], "wgs_84": 46, "inse": [46, 51], "epsg": 46, "proj": [46, 136], "cr": 46, "ccr": 46, "cfeatur": 46, "add_subplot": [46, 50, 132], "platecarre": 46, "set_extent": 46, "add_featur": 46, "ocean": 46, "coastlin": 46, "border": 46, "241": [46, 50, 110], "downloadwarning": 46, "downloading": 46, "naturalearth": 46, "amazonaw": 46, "10m_physical": 46, "ne_10m_ocean": 46, "ne_10m_coastlin": 46, "10m_cultural": 46, "ne_10m_admin_0_boundary_lines_land": 46, "with_scal": 46, "10m": 46, "50m": 46, "110m": 46, "river": 46, "50m_physical": 46, "ne_50m_ocean": 46, "ne_50m_coastlin": 46, "ne_50m_rivers_lake_centerlin": 46, "50m_cultural": 46, "ne_50m_admin_0_boundary_lines_land": 46, "from_cr": 46, "4326": 46, "latidud": 46, "6634541": 46, "621546051": 46, "1633374": 46, "3871915536": 46, "6723037": 46, "367738617": 46, "4228679": 46, "19768552": 46, "lamb_x": 46, "lamb_y": 46, "parse_option_pyproj": 46, "mycr": 46, "proj4_param": 46, "sup": [46, 85, 88, 153, 195, 200], "lcc": 46, "lat_1": 46, "lat_2": 46, "lat_0": 46, "lon_0": 46, "700000": 46, "6600000": 46, "ellp": 46, "grs80": 46, "unit": [46, 51, 110, 204], "no_def": 46, "Ne": [46, 82, 91], "lambert93": 46, "proj4_list": 46, "crs_lambert93": 46, "36954": 46, "1181938": 46, "6133555": 46, "7233428": 46, "authentifi": 46, "populair": [46, 61, 201, 202], "gpd": 46, "read_fil": [46, 209, 210], "get_path": 46, "naturalearth_cit": 46, "tmp": [46, 50, 54, 68, 84, 85, 170, 171, 172, 185], "ipykernel_25365": 46, "1282256058": 46, "futurewarning": [46, 99, 145, 147], "removed": [46, 65, 77, 99, 145, 147], "www": [46, 51, 54, 85, 112, 119], "naturalearthdat": 46, "cultural": 46, "vector": [46, 183, 204], "vatican": 46, "city": 46, "45339": 46, "90328": 46, "marino": 46, "44177": 46, "93610": 46, "vaduz": 46, "51667": 46, "13372": 46, "lobamb": 46, "20000": [46, 101, 110], "46667": 46, "luxembourg": [46, 56, 70], "13000": 46, "61166": 46, "naturalearth_lowr": 46, "913829029": 46, "pop_est": 46, "continent": 46, "iso_a3": 46, "gdp_md_est": 46, "889953": 46, "oceani": 46, "fij": 46, "fji": 46, "5496": 46, "multipolygon": 46, "180": [46, 54, 85, 110, 130, 170, 171], "00000": [46, 51], "06713": 46, "58005463": 46, "afric": 46, "tanzani": 46, "tza": 46, "63177": 46, "polygon": [46, 160], "90371": 46, "95000": 46, "07262": 46, "05982": 46, "603253": 46, "sahar": 46, "esh": 46, "907": [46, 50], "66559": 46, "65643": 46, "66512": 46, "58948": 46, "37589262": 46, "americ": 46, "canad": 46, "1736425": 46, "122": [46, 99], "84000": 46, "9742": 46, "328239523": 46, "united": 46, "usa": [46, 51, 56, 70], "21433226": 46, "0000": [46, 51, 124, 138, 150], "set_aspect": 46, "whit": [46, 136, 137, 138, 139, 140, 144, 171], "edgecolor": [46, 99], "mark": 46, "markersiz": 46, "restreint": [46, 166], "m\u00e9tropol": [46, 204], "shapely": 46, "144373535": 46, "russi": 46, "rus": [46, 53], "1699876": 46, "67591": 46, "64149": 46, "68201": 46, "5347896": 46, "norway": 46, "nor": 46, "403336": 46, "39955": 46, "69": [46, 50, 51, 54, 77, 99, 134, 141, 150, 172], "15692": 46, "59193": 46, "67059887": 46, "fra": [46, 204], "2715518": 46, "65823": 46, "20196": 46, "09928": 46, "10285453": 46, "sweden": 46, "swe": 46, "530883": 46, "46827": 46, "43239": 46, "30037": 46, "11793": 46, "9466856": 46, "belarus": 46, "blr": 46, "63080": 46, "22951": 46, "91834": 46, "37157": 46, "67009": 46, "lon": 46, "itertupl": [46, 136, 149], "geodatafram": 46, "82631": 46, "63236": 46, "92725": 46, "21389": 46, "46046": 46, "97421": 46, "12047": 46, "08532": 46, "61706": 46, "map_osm": 46, "regularpolygonmark": 46, "popup": 46, "fill_color": 46, "132b5e": 46, "radius": [46, 157], "img_til": 46, "osm": 46, "imagery": 46, "add_imag": 46, "plotly": 47, "gmap": 47, "bingmap": 47, "geopand": [22, 47], "folium": 47, "openstreetmap": [47, 54], "simplifient": [48, 61], "algebr": 49, "d\u00e9di": [50, 58, 74, 177], "offrant": 50, "\u00e9mergent": 50, "standardis": 50, "ndim": 50, "int64": [50, 51, 53, 54, 119, 123, 164, 171], "allez": [50, 88], "jet": [50, 51, 80, 95], "bb": [50, 80], "cast": 50, "casting": 50, "dimmensionnel": 50, "aplat": 50, "1d": 50, "transposed": 50, "flatten": [50, 171], "flattened": 50, "multidimensionnel": [50, 111], "mask": [50, 51], "\u00e9lement": [50, 51, 77, 153, 164], "ar": [50, 175, 188, 204], "arang": [50, 77, 78, 84, 88, 115, 116, 121, 123, 132, 134, 135, 139, 160, 171], "idx": 50, "idx_bool": 50, "indexed": 50, "along": 50, "corresponding": [50, 65], "list_python": 50, "integer": [50, 181, 182], "slic": [50, 54], "cr\u00e9on": 50, "step": [50, 62, 110, 132, 139, 174], "flott": 50, "shallow": 50, "14159265": 50, "linspac": [50, 133], "subsidiair": 50, "71828183": 50, "vicieux": 50, "r\u00e2l": 50, "habitu": [50, 56], "naturel": [50, 175], "coh\u00e9rent": [50, 69], "nuit": [50, 56, 74, 204], "notanumb": 50, "slice_of_d": 50, "nslice_of_d": 50, "nd": 50, "fancy_indexed_subarray": 50, "nfancy_indexed_subarray": 50, "reshap": [50, 53, 111, 112, 123, 130, 131, 132, 133, 169, 171, 172, 176], "fortran": [50, 53, 61, 159], "connaissent": [50, 204], "matlab": 50, "jok": 50, "infer": [50, 85, 194], "zeros_lik": 50, "ones_lik": 50, "concatenat": [50, 51, 77], "gmat": 50, "hstack": [50, 53, 111, 130, 132, 139, 186], "8x8": [50, 177], "til": [50, 109], "ccccc": 50, "ccc": [50, 61], "arithmet": 50, "adopt": 50, "36787944": 50, "3890561": 50, "08553692": 50, "59815003": 50, "ipykernel_4567": 50, "2601360242": 50, "runtimewarning": 50, "divid": [50, 191, 192], "encountered": 50, "33333333": 50, "togeth": [50, 191, 192], "newax": [50, 139, 171], "38": [50, 51, 54, 99, 104, 111, 116, 124, 150, 171, 183, 184, 197, 204], "op\u00e8rent": 50, "\u00e9ventail": 50, "qr": 50, "svd": [50, 135], "commen\u00e7on": 50, "tril": 50, "whatsnew": 50, "465": 50, "dedicated": 50, "infix": 50, "linalg": [50, 78, 111, 112, 134, 135, 179, 180, 184], "inv_a": 50, "inv": [50, 111, 112, 179, 180], "equat": 50, "eig": [50, 78, 136, 179, 180, 184], "eigresult": 50, "eigenvalu": [50, 150], "eigenvector": 50, "00000000e": [50, 112, 180], "93038066e": 50, "22044605e": 50, "eigval": 50, "indiquent": 50, "96": [50, 53, 77, 119, 131, 164, 178, 185, 197, 200], "102": [50, 53, 112, 150, 170, 171, 189], "126": [50, 99], "l\u00e9ger": [50, 51, 79, 80, 95, 139], "rank": [50, 166], "matrix_rank": 50, "000000000000016": 50, "77475828e": 50, "10542736e": 50, "88178420e": [50, 180], "66453526e": 50, "77635684e": [50, 111, 180], "natif": 50, "randomnumpy": 50, "4x3": 50, "gaussien": [50, 135, 179, 180], "78986084": 50, "56625033": 50, "50288104": 50, "17435748": 50, "99013306": 50, "07810937": 50, "5082934": 50, "08166826": 50, "04530213": 50, "01406781": 50, "38415054": 50, "05907499": 50, "pur": [50, 159], "normalvariat": 50, "691": [50, 132], "\u00e9quiprob": [50, 62], "amplitud": [50, 131, 136], "atteint": [50, 56, 77], "combien": [50, 51, 54, 79, 102, 110, 117, 118, 121, 145, 177, 197, 204], "argmax": [50, 53, 185], "cumsum": [50, 51, 54, 140, 159], "panel": [50, 51], "viv": [50, 204], "tutoriel": [50, 51], "mathematical": 50, "minim": 50, "ga\u00ebl": [50, 62], "varoqual": [50, 62], "solver": 50, "normalis": [50, 134, 136, 149, 150], "minimiz": [50, 193], "minimize_scalar": 50, "obtiendr": [50, 62], "optimizeresult": 50, "toolbox": 50, "clair": [50, 61, 69, 93, 95, 99, 103, 131, 144], "rafraich": 50, "bowl_peak": 50, "57": [50, 51, 54, 95, 99, 115, 123, 131, 132, 167, 196, 210, 221], "contour3d_demo3": 50, "58": [50, 51, 95, 99, 112, 113, 130, 131, 142, 143, 144, 156, 165, 174, 210, 232, 236, 242], "mpl_toolkit": [50, 132], "mplot3d": [50, 132], "axes3d": [50, 132], "cm": [50, 61, 133, 136, 163], "min_val": 50, "max_val": 50, "x_ax": 50, "y_ax": 50, "meshgrid": [50, 133], "xy": [50, 77, 111, 112, 113, 114, 145, 149], "get_test_dat": 50, "plot_surfac": 50, "rstrid": 50, "cstrid": 50, "cset": 50, "contour": [50, 54, 133], "zdir": 50, "offset": 50, "coolwarm": [50, 133], "set_xlabel": [50, 51, 132, 134, 137, 160, 186, 210], "set_xlim": [50, 106, 107, 117, 118, 122], "set_ylabel": [50, 132, 134, 137, 146, 160, 186, 210], "set_ylim": [50, 106, 107, 117, 118, 122, 145, 149, 150], "set_zlabel": 50, "set_zlim": 50, "fun": 50, "cg": 50, "bfg": 50, "powel": 50, "cobyl": 50, "optim_r": 50, "nmethod": 50, "terminated": [50, 138], "successfully": [50, 138], "status": [50, 137, 139, 140], "4052368582391728": 50, "690e": 50, "446e": 50, "nit": 50, "nfev": 50, "final_simplex": 50, "691e": 50, "814e": 50, "011e": 50, "052e": 50, "40523687026669025": 50, "670e": 50, "jac": 50, "863e": 50, "000e": 50, "njev": 50, "40523687025688715": 50, "451e": 50, "083e": 50, "hess_inv": 50, "287e": 50, "836e": 50, "154e": 50, "direc": 50, "854e": 50, "4052368678399868": 50, "892e": 50, "maxcv": 50, "norm_of_projected_gradient_": 50, "_pgtol": 50, "4052368702662145": 50, "828e": 50, "360e": 50, "2x2": 50, "lbfgsinvhessproduct": 50, "4052": 50, "669": 50, "gradient": [22, 50, 56, 61, 62, 128, 132, 134], "optimum": [50, 146], "reposent": 50, "relanc": [50, 58, 94, 96, 204], "anneal": 50, "m\u00e9taheurist": 50, "797": 50, "\u00b5": [50, 51, 52, 53, 83, 91, 93, 113, 114, 116, 123, 160, 166, 167, 168, 178, 200, 210], "91": [50, 77, 167, 185], "87": [50, 52, 77, 119, 138, 168, 174, 178, 204], "771": 50, "369": 50, "616": [50, 77], "vraissembl": 50, "rescaled": 50, "62": [50, 51, 54, 99, 112, 119, 131, 141, 160, 174, 195, 210], "shifted_scaled_bowlpeak": 50, "05000000677266441": 50, "500e": 50, "229e": 50, "918e": 50, "635e": 50, "407e": 50, "579e": 50, "174e": 50, "hessien": 50, "x_2": [50, 133, 134, 183, 184, 191, 192], "epsilon": [50, 56, 58, 61, 111, 112, 115, 116, 131, 134], "mathcal": [50, 77, 181, 182], "mco": 50, "densit": [50, 77, 136, 149], "mu": [50, 85, 86, 119], "sigm": [50, 56, 62, 70, 151, 153, 187, 188, 189, 190], "overlin": [50, 56], "equiv": [50, 59], "exercis": [50, 66], "partiel": [50, 135], "exo1": 50, "chess": 50, "chess2": 50, "exo1b": 50, "idx_row": 50, "idx_col": 50, "wrong": 50, "broadcasted": 50, "ix_": 50, "65": [50, 77, 96, 99, 112, 119, 136, 143, 144, 150, 156, 174, 178, 197, 198], "exo1c": 50, "103": 50, "109": [50, 53, 54, 95, 180], "113": [50, 95, 112, 170, 172, 242], "127": 50, "131": [50, 172], "137": 50, "149": [50, 150, 163], "151": [50, 99, 119, 130, 146, 150], "157": [50, 99], "167": 50, "173": [50, 99, 110, 112], "179": [50, 110], "181": [50, 185], "191": [50, 110, 150], "193": [50, 51, 110], "197": [50, 85, 110, 160], "199": [50, 54, 110, 159], "211": [50, 99], "227": [50, 92, 95, 99, 110], "229": [50, 110], "251": [50, 51, 91, 131, 164], "257": [50, 99, 200], "263": [50, 150], "269": [50, 200], "271": 50, "277": 50, "281": 50, "283": 50, "307": [50, 150], "311": 50, "317": [50, 101, 150], "331": [50, 134, 150], "337": 50, "347": [50, 51], "349": 50, "353": 50, "359": [50, 51], "367": 50, "373": [50, 54], "379": [50, 99], "383": 50, "389": 50, "397": 50, "401": 50, "409": [50, 99], "419": 50, "421": 50, "433": 50, "439": 50, "443": [50, 123], "449": 50, "457": [50, 171], "461": [50, 170], "463": [50, 99], "467": 50, "479": 50, "487": 50, "491": [50, 99], "499": [50, 115, 116], "503": [50, 113], "509": [50, 91, 99, 185], "521": 50, "523": 50, "541": [50, 141, 150], "547": 50, "557": 50, "563": [50, 147], "569": 50, "571": 50, "577": [50, 180], "593": 50, "599": 50, "601": [50, 99], "607": 50, "613": [50, 99], "617": 50, "619": 50, "631": 50, "641": 50, "643": [50, 150], "647": 50, "653": 50, "659": 50, "661": [50, 99, 150], "673": 50, "677": 50, "683": [50, 99], "701": [50, 54, 170], "709": 50, "719": [50, 54, 99, 150], "727": 50, "733": 50, "739": [50, 54, 170], "743": 50, "751": 50, "757": [50, 150], "761": [50, 54], "769": [50, 54, 150], "773": 50, "787": [50, 114, 225], "809": 50, "811": [50, 147], "821": 50, "823": [50, 99], "827": [50, 150], "829": 50, "839": 50, "853": 50, "857": 50, "859": 50, "863": 50, "877": [50, 170], "881": 50, "883": [50, 85], "911": 50, "919": [50, 170], "929": 50, "937": 50, "941": [50, 135, 172], "947": 50, "953": [50, 172], "971": [50, 150], "977": 50, "997": [50, 53, 99, 114, 120], "barr": [50, 56, 70, 85, 94, 95, 104, 164], "n_walk": 50, "n_step": 50, "few": 50, "evolv": 50, "rms_posit": 50, "highest": 50, "lowest": [50, 191, 192], "wand": 50, "hits_the_bound": 50, "among": 50, "beyond": 50, "hit": 50, "first_hit": 50, "crossing": 50, "derive": 50, "2n": [50, 59, 90, 101, 191, 192, 200], "x1_x2_ep": 50, "beta_hat": 50, "9970383": 50, "99521061": 50, "99634679": 50, "log_likelihood": 50, "sigma_squar": 50, "neg_log_likelihood_vectoriel": 50, "theta0": 50, "8178268765388288": 50, "984e": 50, "395e": 50, "985e": 50, "818e": 50, "9844993574269878": 50, "952430926826533": 50, "recet": 51, "cookbook": 51, "spyd": 51, "million": [51, 91], "patient": [51, 99], "astuci": 51, "sqllit": 51, "streaming": [51, 125], "td2df": 51, "uni": [51, 130, 204], "dimensionnel": 51, "hello": [51, 69], "missing1": 51, "missing2": 51, "city2cp_dict": 51, "paris14": 51, "75014": 51, "paris18": 51, "75018": 51, "malakoff": 51, "92240": 51, "6300": [51, 150], "isnull": [51, 115], "notnull": 51, "cities_list": 51, "paris12": 51, "vanv": 51, "cities2": 51, "\u00e9ventuel": [51, 56, 120, 204], "75012": 51, "92": [51, 77, 95, 150, 167, 178], "paris13": 51, "184480": 51, "12600": 51, "150028": 51, "additionnent": 51, "postal": 51, "prix": [51, 56, 70, 98, 99, 110, 155], "220": [51, 55, 56, 93, 110, 130, 174], "devis": [51, 56], "euros": [51, 56, 70, 99, 110], "221": [51, 53, 160, 200], "briev": 51, "xlsx": [51, 163], "special": 51, "bash": [51, 68], "tail": [51, 54, 68, 85, 115, 116, 119, 140, 144, 163], "df_marathon": 51, "marathon": 51, "anne": [51, 204], "2011": [51, 74, 150], "7589": 51, "7601": 51, "2009": [51, 74, 191, 192, 204], "7547": 51, "2008": [51, 189, 190], "7600": 51, "2007": 51, "7637": 51, "1989": 51, "754875": 51, "7933": 51, "660167": 51, "028545": 51, "385": 51, "289830": 51, "1947": 51, "7382": 51, "1981": [51, 204], "7698": 51, "1991": 51, "7820": 51, "2001": [51, 56, 168, 204], "8046": 51, "10028": 51, "iloc": [51, 54, 85, 115, 119, 136, 138, 139, 143, 146, 148], "set_index": [51, 54, 85, 88, 115, 116, 134, 150, 162, 168], "dfi": [51, 54, 144], "r\u00e9fer": [51, 69], "cl\u00e9menc": 51, "reset_index": [51, 54, 99, 119, 139, 140, 144, 146, 149, 150], "drop": [51, 54, 85, 88, 99, 110, 119, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "inplac": 51, "dfi2": 51, "plag": [51, 135], "2006": 51, "7683": 51, "2005": [51, 56], "year": [51, 56], "donnees_enquete_2003_televis": 51, "poidslog": 51, "individuel": 51, "poidsf": 51, "clt1freq": 51, "t\u00e9l\u00e9vis": 51, "clt2freq": 51, "isnan": [51, 53, 115, 116, 139], "apply": [51, 99, 178], "filln": [51, 54, 99], "n_1": 51, "n_2": 51, "sas": 51, "boston": 51, "fukuok": 51, "chicago": 51, "stockolm": 51, "york": [51, 56, 210], "london": 51, "berlin": 51, "amsterdam": 51, "1948": 51, "1949": [51, 166], "1950": 51, "1951": [51, 150], "1952": 51, "1953": 51, "1954": 51, "1955": 51, "1956": 51, "chaining": 51, "indexing": [51, 53, 54, 101], "selecting": 51, "subset": [51, 59, 181, 182], "112": 51, "7971": 51, "204": [51, 110], "8574": 51, "285": 51, "8325": 51, "query": 51, "concat": [51, 54, 85, 99, 139, 140, 144, 147, 148], "concat_lign": 51, "718": 51, "concat_col": 51, "sort_valu": [51, 99, 115, 116, 132, 139, 140, 149, 162], "ascending": [51, 99, 140], "7418": 51, "202": [51, 110], "7480": 51, "276": 51, "8047": 51, "customis": 51, "generic": 51, "dataframegroupby": 51, "0x7fd034df94b0": 51, "sort_index": 51, "37916": 51, "68673": 51, "7583": 51, "7630": 51, "333333": [51, 99], "7652": 51, "555556": 51, "aggreg": [51, 54, 85, 159], "max_enti": 51, "agg": [51, 99, 159], "8134": 51, "7968": 51, "nsmallest": 51, "171": [51, 110, 148, 150, 185], "324": [51, 150], "357": 51, "74": [51, 77, 95, 99, 119, 150, 160, 194], "222": [51, 110, 111], "248": [51, 119], "7544": 51, "7578": 51, "7439": 51, "7552": 51, "7541": 51, "1999": 51, "7542": [51, 150], "7518": 51, "7570": 51, "7510": 51, "7663": 51, "7681": 51, "1983": 51, "7897": 51, "7953": 51, "inner": [51, 99], "merging": 51, "joining": 51, "jointur": [51, 98, 99], "patat": 51, "germany": 51, "uk": 51, "dfavecpay": 51, "left_on": [51, 54, 163], "right_on": [51, 54, 163], "192": [51, 95, 99, 130], "joindr": 51, "c_1": [51, 58, 181, 182], "c_2": 51, "c_3": 51, "a_i": [51, 159, 189], "c_i": [51, 58, 84], "c4": [51, 52, 81, 204], "c5": [51, 52, 204], "pivot_t": [51, 54], "reshaping": 51, "piv": [51, 132, 147, 148, 169], "1967": 51, "1968": [51, 95], "1969": 51, "1987": 51, "1988": 51, "syntactic": 51, "sugar": 51, "2em": [51, 101], "four": 51, "riemann": 51, "3328334999999999": 51, "na\u00efv": [51, 199, 203], "mn": [51, 89, 165], "klib": 51, "magic": 51, "big_df": 51, "784": 51, "310": 51, "hh": 51, "ss": 51, "1900": [51, 148], "total_second": 51, "d\u00e9ces": [51, 54, 85], "2012": [51, 56, 97], "download_and_sav": 51, "root_url": 51, "respons": [51, 56, 174, 204], "urlopen": [51, 96, 166, 174, 204], "timeouterror": 51, "urlerror": 51, "badstatuslin": 51, "teachdat": 51, "naissance_deces_mariag": 51, "outfil": 51, "extractall": 51, "etatcivil2012_mar2012_dbas": 51, "etatcivil2012_nais2012_dbas": 51, "etatcivil2012_dec2012_dbas": 51, "2407910": 51, "dbfread": 51, "dbf": 51, "dbase2df": 51, "dbase_filenam": 51, "cp437": 51, "df_civil": 51, "mar2012": 51, "utf8": [51, 69, 204], "modulenotfounderror": [51, 188], "vardf": 51, "varlist_mariag": 51, "libel": 51, "amar": 51, "anaisf": 51, "\u00e9pous": 51, "anaish": 51, "\u00e9poux": 51, "depdom": 51, "domicil": [51, 119], "depmar": 51, "depnaisf": 51, "depnaish": 51, "etamatf": 51, "matrimonial": 51, "ant\u00e9rieur": 51, "etamath": 51, "indnatf": 51, "indnath": 51, "jsemain": 51, "mmar": 51, "nbenfcom": 51, "enfant": [51, 153, 204], "tucom": 51, "tranch": 51, "tudom": 51, "urbain": 51, "mar": [51, 56, 70, 97, 130], "femm": [51, 183, 184, 203, 204], "heatmap": [51, 145], "visualiz": 51, "grid": [51, 134, 146], "superpos": [51, 85], "as_index": [51, 99, 147, 148], "fontsiz": 51, "set_visibl": [51, 150, 174], "excelwrit": 51, "existing": [51, 68], "workbook": 51, "df1000": 51, "ton_example100": 51, "poidlog": 51, "unnamed": 51, "889422": 51, "4766": 51, "865201": 51, "310209": 51, "12381": 51, "589746": 51, "740070": 51, "14685": 51, "431344": 51, "775545": 51, "9516": 51, "049939": 51, "732512": 51, "3925": 51, "907588": 51, "8403": 51, "7386": 51, "8397": 51, "502091": 51, "2690": 51, "961176": 51, "8398": 51, "306852": 51, "1644": 51, "574141": 51, "8399": 51, "501181": 51, "13405": 51, "104689": 51, "8400": 51, "382758": 51, "7410": 51, "905653": 51, "8401": 51, "343340": 51, "1840": [51, 150], "132652": 51, "echantillon": 51, "830": 51, "7883": 51, "371429": 51, "7922": 51, "315789": 51, "7891": 51, "061224": 51, "7815": 51, "909091": 51, "8075": 51, "187500": 51, "secondes_x": 51, "secondes_y": 51, "7937": 51, "028571": 51, "7466": 51, "8053": 51, "7871": 51, "7599": 51, "7661": 51, "7744": 51, "8456": 51, "7672": [51, 150], "7665": 51, "7585": 51, "7515": 51, "7723": 51, "8163": 51, "7568": 51, "7722": 51, "7755": 51, "7508": 51, "7704": 51, "7519": 51, "7694": 51, "pivmean": 51, "7695": 51, "161290": 51, "7928": 51, "560976": 51, "8133": 51, "393939": 51, "1612903225805": 51, "909090909091": 51, "371428571429": 51, "061224489796": 51, "315789473684": 51, "5609756097565": 51, "028571428571": 51, "1875": 51, "393939393939": 51, "courus": 51, "16129": 51, "246123": 51, "1982": 51, "1984": 51, "1992": 51, "1985": 51, "1963": 51, "ageh": 51, "agef": 51, "scatt": [51, 54, 99, 117, 118, 131, 132, 133, 134, 136, 138, 140, 145, 149, 156, 183, 184, 207, 208, 210], "hexbin": 51, "differencehf": 51, "dissem": 51, "repsem": 51, "secondary_y": 51, "enumerate_row": 52, "4584214264768637": 52, "0957370472492135": 52, "825720254865909": 52, "056222146826998554": 52, "012568801665460705": 52, "20797581971445256": 52, "6508447830614892": 52, "817974554103244": 52, "04182207570159391": 52, "591375261282058": 52, "5818213564160107": 52, "3384435930913253": 52, "5900215149482624": 52, "9556893663618211": 52, "9156247392985197": 52, "20153581804870713": 52, "893987513368823": 52, "11112779556835362": 52, "043959856261986174": 52, "233344273733338": 52, "c0": 52, "c6": 52, "c7": 52, "c8": 52, "c9": 52, "155969": 52, "431193": 52, "995451": 52, "081467": 52, "257834": 52, "457617": 52, "773857": 52, "843436": 52, "842255": 52, "570137": 52, "876386": 52, "702447": 52, "130592": 52, "084160": 52, "782795": 52, "065442": 52, "682476": 52, "077565": 52, "444916": 52, "025166": 52, "854808": 52, "873240": 52, "055319": 52, "518709": 52, "486142": 52, "034237": 52, "979128": 52, "997898": 52, "472220": 52, "512437": 52, "476952": 52, "250016": 52, "964843": 52, "579930": 52, "693238": 52, "103160": 52, "249000": 52, "850935": 52, "632083": 52, "738248": 52, "773502": 52, "237446": 52, "974755": 52, "564504": 52, "684763": 52, "361164": 52, "152243": 52, "320242": 52, "218529": 52, "411604": 52, "225": 52, "145": [52, 69, 85, 148, 150, 163], "from_record": 52, "94": [52, 54, 77, 85, 119, 121, 156], "540": [52, 53], "create_df3": 52, "224": [52, 110, 150], "fromit": 52, "enumerate_row2": 52, "agrand": [52, 58], "18094164": 52, "98726051": 52, "15154422": 52, "02532254": 52, "13567288": 52, "52949799": 52, "9955031": 52, "56441516": 52, "95278832": 52, "37068437": 52, "97776124": 52, "1088838": 52, "72051064": 52, "79808152": 52, "25334263": 52, "04203916": 52, "8290536": 52, "32045666": 52, "48908504": 52, "70058525": 52, "03562189": 52, "45141838": 52, "98266729": 52, "36282507": 52, "74903618": 52, "36675298": 52, "30681627": 52, "86053065": 52, "36733881": 52, "03716365": 52, "8255547": 52, "31025914": 52, "61405287": 52, "2289358": 52, "87746991": 52, "98780181": 52, "99195587": 52, "6592586": 52, "90237022": 52, "73119145": 52, "79096242": 52, "72046597": 52, "87479709": 52, "75549334": 52, "2525281": 52, "91680528": 52, "97679278": 52, "92947194": 52, "2344261": 52, "67808894": 52, "create_array": 52, "106": [52, 53, 85, 99], "create_array2": 52, "175": [52, 54], "create_array3": 52, "conclus": [52, 70, 99, 115, 116, 172], "enhancing": 52, "sc\u00e9nar": [52, 56], "basiqu": 53, "blas": 53, "assembleur": 53, "peaufin": 53, "gr\u00e9": 53, "mat\u00e9riel": 53, "integ": 53, "matint": 53, "ns": [53, 54, 99, 115, 116, 160, 166, 178, 200, 210], "matintf": 53, "549": [53, 150], "1006": 53, "1008": [53, 119], "95": [53, 61, 77, 99, 112, 119, 122, 132, 164, 167, 200], "108": 53, "valent": [53, 124], "rand": [53, 78, 85, 89, 112, 119, 123, 164, 169, 186], "squeez": 53, "expend_dim": 53, "argmin": [53, 89, 116, 123], "prod": [53, 171], "commm": 53, "chisquar": 53, "p_": [53, 58], "o_": 53, "ij": [53, 55, 56, 78, 84, 176, 183, 184], "histogram": [53, 178, 209, 210], "empir": [53, 56, 70], "r\u00e9flech": [53, 74, 204], "csr_matrix": [53, 186], "contact": 53, "chi_squar": 53, "pis": [53, 166], "keepdim": [53, 55], "pj": 53, "pispj": 53, "5798254016266716": 53, "98556467": 53, "47377301": 53, "77148185": 53, "26135908": 53, "27373018": 53, "0240458": 53, "55360714": 53, "3575369": 53, "71740732": 53, "3260206": 53, "876020129318981": 53, "plusieurs_tirag": 53, "99594032": 53, "67914189": 53, "98105965": 53, "93181536": 53, "86827764": 53, "5000": [53, 77, 96, 99, 168, 170, 186], "407": [53, 210], "785": 53, "1273": 53, "2135": 53, "437878": 53, "49408914": 53, "55030028": 53, "60651142": 53, "66272256": 53, "7189337": 53, "77514485": 53, "83135599": 53, "88756713": 53, "94377827": 53, "99998941": 53, "creus": [53, 54, 115, 116, 125], "spars": [53, 65, 91], "ide": 53, "setdiag": 53, "python395_x64": 53, "_index": 53, "sparseefficiencywarning": 53, "changing": 53, "sparsity": 53, "expens": 53, "lil_matrix": 53, "_set_arrayxarray": 53, "territoir": 53, "col1": 54, "col2": 54, "schtroumph": 54, "schtroumphet": 54, "impress": [54, 131, 133, 203], "potentiel": [54, 88, 113], "sup055": 54, "df1": 54, "col3": 54, "ipykernel_5653": 54, "164517544": 54, "settingwithcopywarning": 54, "trying": 54, "row_index": 54, "col_index": 54, "instead": [54, 99, 145, 147], "caveat": 54, "user_guid": 54, "returning": 54, "view": [54, 163], "congestion": 54, "utilitair": 54, "isna": [54, 85], "to_datetim": [54, 85, 99, 119], "isin": [54, 85], "quantil": [54, 112, 113, 123], "hospitali": [54, 119], "\u00e9pidem": [54, 78, 85, 86, 119], "gouv": [54, 85, 86, 119], "63352e38": [54, 119], "d353": [54, 119], "4b54": [54, 119], "bfd1": [54, 119], "f1b3ee1cabd7": [54, 119], "08c18e08": 54, "6780": 54, "452d": 54, "9b8c": 54, "ae244ad529b3": 54, "cl_age90": 54, "hosp": [54, 119], "hospconv": 54, "ssr_usld": 54, "rad": [54, 119], "dc": [54, 119], "219577": 54, "387": [54, 85], "219578": 54, "536": [54, 150], "219579": 54, "810": [54, 119], "129": [54, 148, 159], "219580": 54, "219581": 54, "388": [54, 130], "121": [54, 170], "datetime64": [54, 99], "agg_par_jour": 54, "26110": 54, "1452": 54, "14586": 54, "9311": 54, "1717663": 54, "271176": 54, "26239": 54, "1435": 54, "14707": 54, "9336": 54, "1718630": 54, "271254": 54, "26255": 54, "1465": [54, 150], "14704": 54, "9323": 54, "763": 54, "1719634": 54, "271322": 54, "26253": 54, "1460": 54, "14680": 54, "9344": 54, "1720370": 54, "271394": 54, "26174": 54, "1413": 54, "14658": 54, "9354": 54, "749": 54, "1721380": 54, "271456": 54, "evolu": [54, 85, 115, 116, 137, 140, 146], "hospitalis": [54, 85], "\u00e9chel": [54, 85, 125, 136, 140], "logy": [54, 85, 88], "covid49": 54, "agg_par_jour49": 54, "372": [54, 130, 168], "57846": 54, "1554": 54, "377": [54, 79], "184": [54, 141, 142, 175], "57859": 54, "374": [54, 152], "177": [54, 110, 159, 172], "57877": 54, "375": [54, 150], "57889": 54, "57900": 54, "nag": 54, "736": [54, 119], "1010": [54, 150], "rolling": [54, 85], "roll": [54, 56], "857143": 54, "142857": 54, "571429": 54, "428571": [54, 148], "gen": [54, 56, 81, 85], "h\u00f4pital": [54, 85], "gu\u00e9rison": [54, 85], "r\u00e9anim": 54, "pic": [54, 56, 70, 132, 135], "714286": 54, "285714": [54, 130], "data_last": 54, "dclag": 54, "realag": 54, "ts_cor": 54, "corr_dc": 54, "corr_r": 54, "m\u00e9dical": [54, 61], "sir": [54, 85], "sex": 54, "338240": 54, "976": [54, 130], "1766": 54, "338241": 54, "338242": 54, "338243": 54, "338244": 54, "4acad602": 54, "d8b1": 54, "4516": 54, "bc71": 54, "7d5574d5f33e": 54, "iso": [54, 204], "8859": [54, 204], "1911493942": 54, "dtypewarning": 54, "mixed": 54, "specify": [54, 85], "low_memory": 54, "extract_dat": [54, 85], "depart": 54, "region": [54, 85, 191, 192], "libelle_reg": 54, "libelle_dep": 54, "tx_incid": 54, "taux_occupation_sa": 54, "tx_pos": 54, "tx_incid_couleur": 54, "r_couleur": 54, "taux_occupation_sae_couleur": 54, "tx_pos_couleur": 54, "nb_orang": 54, "nb_roug": 54, "90390": 54, "provenc": 54, "alpe": 54, "c\u00e3": 54, "azur": 54, "vauclus": 54, "721489": 54, "orang": [54, 113], "90391": 54, "719256": 54, "90392": 54, "524887": 54, "90393": 54, "566028": 54, "90394": 54, "570747": 54, "chardet": [54, 204, 210], "covid19": [54, 85], "confident": [54, 132, 204, 210], "issus": [54, 69], "departement_french_2018": 54, "spher": [54, 95], "dep_pos": 54, "code_inse": 54, "nuts3": 54, "surf_km2": 54, "deplong": 54, "deplat": 54, "morbihan": 54, "fr524": 54, "6870": 54, "812320": 54, "846846": 54, "98": [54, 77, 83, 116, 119, 159, 164, 167, 178, 197], "doub": 54, "fr431": 54, "5256": 54, "362722": 54, "165964": 54, "jur": 54, "fr432": 54, "5049": 54, "697361": 54, "729368": 54, "ardech": 54, "fr712": 54, "5566": 54, "425582": 54, "752771": 54, "fr812": 54, "5875": 54, "179861": 54, "993601": 54, "last_extract_dat": 54, "indic_last": 54, "ain": 54, "348764": 54, "099799": 54, "alli": [54, 59], "187644": 54, "393637": 54, "cantal": 54, "669045": 54, "051247": 54, "dr\u00f4m": 54, "167364": 54, "685239": 54, "018230": 54, "090620": 54, "dordogn": 54, "741203": 54, "104948": 54, "girond": 54, "575870": 54, "823614": 54, "783793": 54, "965855": 54, "lot": [54, 191, 192], "garon": 54, "460747": 54, "367964": 54, "bigr1": 54, "bigr2": 54, "SAE": 54, "arden": 54, "640751": 54, "616226": 54, "chi_2": [55, 176], "m_": [55, 61, 78, 111, 120, 176, 183, 184], "forall": [55, 56, 58, 61, 62, 70, 85, 176, 187, 188, 200], "bullet": [55, 176], "sum_j": [55, 84, 176, 186], "n_": [55, 176], "n2": [55, 83, 137, 158], "03061224": 55, "95408163": 55, "93877551": 55, "92346939": 55, "8877551": 55, "83163265": 55, "7755102": 55, "71938776": 55, "132": [55, 170], "trad": 56, "sc\u00e9nario": [56, 131], "rendu": 56, "ultra": 56, "verizon": 56, "speed": [56, 174], "auror": 56, "financial": 56, "market": [56, 70], "cme": 56, "renaiss": 56, "extr\u00eam": [56, 61, 62, 123], "frequency": 56, "\u00e9lev": [56, 70, 95, 99, 100, 110, 115, 116, 119, 130, 131, 149, 162, 193, 194], "invest": [56, 60, 110], "succint": 56, "pr\u00e9tend": 56, "reflet": 56, "bibl": 56, "hull2011": 56, "paul": 56, "wilmott": 56, "wilmott2008": 56, "cinqu": 56, "conclut": 56, "r\u00e9dact": 56, "cv": [56, 134, 144, 146, 149], "entretien": [56, 61, 90, 125], "vivac": 56, "esprit": [56, 110, 162, 204], "candidat": [56, 134, 146, 204], "privat": 56, "equity": [56, 70], "frer": 56, "ennem": 56, "bertrand": 56, "jacquillat": 56, "jacquillat2008": [56, 70], "recueil": 56, "mondial": [56, 61], "r\u00e9gul": 56, "tier": [56, 110, 145], "\u00e9tabl": [56, 204], "ile": [56, 70], "cayman": [56, 70], "rocchichristiaens2007": 56, "personnal": 56, "henry2008": 56, "Ayant": 56, "cris": [56, 70], "subprim": [56, 70], "d\u00e9march": 56, "surveil": 56, "kaggl": 56, "challeng": 56, "winton": 56, "particip": [56, 95], "explicitent": 56, "winn": 56, "2nd": 56, "nim": 56, "shahbaz": 56, "chahhou": 56, "mohamed": 56, "disert": 56, "mendrik": 56, "ramarlin": 56, "publient": 56, "post": 56, "mortem": 56, "marcher": 56, "int\u00e9ret": [56, 110], "limitent": 56, "jacent": [56, 131, 163], "vendeur": 56, "acheteur": 56, "matur": [56, 61], "achet": [56, 70, 133, 155], "p\u00e9trol": 56, "engag": [56, 204], "contrat": 56, "transact": 56, "clor": 56, "contract": [56, 75, 110], "sp\u00e9cul": 56, "pari": 56, "euro": [56, 204], "dollar": 56, "vendr": [56, 70], "big": [56, 77, 91], "mid": [56, 70], "capitalis": 56, "boursi": 56, "secteur": 56, "vingtain": [56, 95], "p\u00e9riod": [56, 83, 85, 204], "soir": [56, 95, 204], "europ\u00e9en": [56, 70], "am\u00e9ricain": [56, 70], "acteur": 56, "attendent": 56, "annonc": 56, "baiss": [56, 146], "satisfact": [56, 95], "m\u00e9nag": 56, "uen": [56, 108], "le\u00e7on": 56, "vagu": [56, 70], "paus": [56, 70, 94], "d\u00e9jeun": [56, 70], "13h30": [56, 70], "organ": [56, 204], "tick": 56, "bruit": [56, 86, 99, 111, 112, 132, 135, 186], "intent": [56, 99, 155], "bid": 56, "offer": 56, "spread": 56, "vend": 56, "cher": [56, 99, 204], "agiss": [56, 62], "bours": 56, "cac": 56, "x_t": [56, 85, 131], "_t": [56, 189], "journali": 56, "eqnarray": 56, "r_t": [56, 85], "r_": [56, 70, 131], "annualis": 56, "longleftrightarrow": [56, 112, 188], "045": 56, "graduel": 56, "pa": [56, 58, 59, 61, 62, 70, 204], "sum_1": 56, "r_i": 56, "bancair": 56, "proxim": [56, 58, 61], "r_1": 56, "r_2": 56, "sigma_1": 56, "sigma_2": 56, "1t": 56, "cro": [56, 58, 62], "gliss": 56, "gomm": [56, 88], "MA": 56, "d\u00e9centr": 56, "d\u00e9gag": 56, "enserrent": 56, "tub": 56, "interval": [56, 132, 200], "couloir": 56, "trader": 56, "o_t": 56, "h_t": 56, "l_t": 56, "c_t": [56, 181, 182], "accord": 56, "mme_": 56, "mme": [56, 162], "ema": 56, "exponential": [56, 119], "tr_t": 56, "c_": [56, 58, 133], "intra": 56, "macd": 56, "macd_": 56, "ema_m": 56, "ema_n": 56, "parabolic": 56, "sar": 56, "stop": [56, 132, 137, 139, 140, 170], "ep": [56, 77], "cro\u00eet": 56, "haussi": 56, "baissi": [56, 70], "rsi": 56, "strength": 56, "indicator": 56, "u_t": 56, "d_t": [56, 85], "emu_n": 56, "emd_n": 56, "rs_n": 56, "rsi_n": 56, "rachet": 56, "emprunt": [56, 79, 110], "brok": 56, "interd": 56, "frequ": 56, "leverag": 56, "anglic": 56, "essort": 56, "f\u00e9d\u00e9ral": 56, "dang": 56, "pert": [56, 83], "favorisent": 56, "lipp": [56, 70], "british": [56, 70], "virgin": [56, 70], "island": [56, 70], "bermud": [56, 70], "irland": [56, 70], "baham": [56, 70], "guernsey": [56, 70], "antill": [56, 70, 204], "n\u00e9erlandais": [56, 70], "short": [56, 70], "commodity": [56, 70], "advisor": [56, 70], "cta": [56, 70], "fixed": [56, 70], "incom": [56, 70], "arbitrag": [56, 70], "emerging": [56, 70], "macro": [56, 70], "neutral": [56, 70], "vendeux": [56, 70], "exposit": 56, "focalis": 56, "actual": 56, "mouvement": 56, "essayent": [56, 171], "anticip": [56, 84], "acquisit": 56, "opa": 56, "livraison": 56, "a380": 56, "r\u00e9ussit": 56, "bilan": 56, "mati": [56, 121], "commodit": 56, "pr\u00e9dilect": 56, "bl\u00e9": 56, "cac40": 56, "brent": 56, "crud": 56, "oil": 56, "merchantil": 56, "exchang": 56, "nymex": 56, "aug08": 56, "affirm": [56, 62, 190, 204], "investisseur": 56, "fass": [56, 74, 113, 114, 137, 204], "vers": 56, "forfaitair": 56, "marg": [56, 200, 203], "chambr": 56, "compens": 56, "pali": [56, 70], "ach\u00e8tent": 56, "entendu": 56, "vendent": 56, "hauss": 56, "croissanc": [56, 70], "exerc": [56, 61], "confer": 56, "b\u00e9n\u00e9fic": [56, 203], "regardent": 56, "capac": [56, 74, 149], "incertitud": [56, 200], "capt": 56, "appuient": [56, 74, 162], "\u00e9mettric": 56, "affair": [56, 70, 153], "licenci": 56, "d\u00e9pr\u00e9ci": 56, "justif": [56, 95, 110], "corrigent": 56, "int\u00e8grent": 56, "profit": 56, "impass": [56, 95, 142], "errat": 56, "passager": 56, "longtemp": [56, 61, 120], "revendr": [56, 70], "avers": 56, "trentain": [56, 62], "immiscent": 56, "stopp": 56, "diminuent": 56, "oscill": [56, 131], "contrarian": 56, "consensus": 56, "rebond": 56, "d\u00e9grad": [56, 70], "kerviel": [56, 70], "janvi": [56, 70], "auparav": [56, 70, 86], "sant": 56, "cot": 56, "perspect": 56, "earning": 56, "interest": 56, "depreci": 56, "amortiz": 56, "ebitd": 56, "revenus": 56, "imp\u00f4t": 56, "dotat": 56, "amort": 56, "provis": 56, "shar": 56, "mbox": 56, "outstanding": 56, "pric": [56, 99], "sal": 56, "revenu": 56, "dividend": 56, "payout": 56, "dpr": 56, "annual": 56, "i_t": [56, 85], "rebalancing": 56, "grandeur": [56, 61, 111, 130, 150, 189, 204], "incontest": 56, "markowitz": 56, "re\u00e7ut": 56, "nobel": 56, "traval": [56, 58], "1990": 56, "sigma_": [56, 70], "alpha_": [56, 70, 111], "alpha_1": [56, 70, 134], "alpha_n": [56, 70], "rho_": 56, "alpha_j": 56, "sigma_j": 56, "covari": [56, 99, 111, 135, 150, 179, 180], "underset": [56, 62, 70, 200], "supegal": [56, 58, 70], "maximis": [56, 59, 62, 70, 113, 114, 156], "contrain": [56, 70], "assoupl": 56, "lagrang": 56, "s\u00e9quentiel": [56, 77, 166], "inegl": 56, "boyd": 56, "admm": 56, "boyd2012": 56, "statistical": [56, 183], "alternating": 56, "cvxgen": 56, "p_i": [56, 58, 62, 164], "cl\u00f4tur": 56, "oe": 56, "uvre": 56, "\u00e9paul": 56, "chevron": 56, "7822": 56, "7823": 56, "7818": 56, "7819": 56, "1130": 56, "7830": 56, "1543": 56, "7827": 56, "7824": 56, "1244": [56, 150], "7825": 56, "216": [56, 99, 164], "7828": 56, "7833": 56, "640": [56, 99], "7829": 56, "7831": 56, "478": [56, 111], "7821": [56, 150], "716": 56, "7834": 56, "7826": 56, "681": 56, "24h": 56, "immobil": 56, "informatisent": 56, "histor": [56, 69, 70, 204], "incoh\u00e9rent": [56, 151], "mulitpl": 56, "redescend": 56, "franch": 56, "inefficac": 56, "dizain": [56, 59, 61], "vendu": [56, 70], "impr\u00e9vu": [56, 131], "d\u00e9cevoir": 56, "cascad": 56, "vigil": 56, "remettr": 56, "qualit": [56, 60, 62, 77, 139, 143, 145, 148, 150], "\u00e9prouv": [56, 204], "d\u00e9pass": [56, 110, 201, 202], "cert": 56, "asset": 56, "tiennent": 56, "frais": 56, "r\u00e9invest": 56, "Cee": 56, "\u00e9cueil": 56, "avis": [56, 77, 105, 110], "slippag": 56, "d\u00e9faveur": 56, "fraction": 56, "pourcent": 56, "n\u00e9glig": 56, "surestim": 56, "observent": 56, "d\u00e9cro\u00eetr": [56, 59, 110, 146], "p\u00e9nalis": 56, "proportionnel": [56, 59, 77, 91, 159], "sharp": [56, 70], "ref": [56, 59, 137, 139, 140, 144], "finance_rendemnt_anne": 56, "caution": 56, "partiquent": 56, "empruntent": 56, "g\u00e8rent": 56, "gratuit": 56, "retranch": [56, 113], "drawdown": [56, 70, 83], "succed": 56, "roul": 56, "reproduisent": [56, 197], "risk": 56, "repr\u00e9sentent": [56, 59, 61], "pir": [56, 77, 83, 88, 100, 168], "lendemain": 56, "82": [56, 77, 93, 99, 174], "vraisembl": [56, 62, 85], "obtien": [56, 70], "montrent": [56, 70], "d\u00e9correl": [56, 61, 115, 116, 125], "permettront": 56, "banquair": [56, 70], "alimentair": [56, 70], "autocorrel": [56, 70], "sg": [56, 70], "homogen": [56, 70, 147], "mitig": [56, 70], "tend": [56, 61, 70, 115, 116, 200], "t_1": [56, 187], "t_2": [56, 187], "p_1": [56, 58, 187], "p_2": [56, 187], "flech": [56, 59, 70], "superposent": [56, 70, 137], "d_i": [56, 183, 184], "potters2005": [56, 70], "reconna\u00eet": 56, "bouchaud": [56, 70], "potter": [56, 70], "troisem": [56, 70], "Ses": [56, 87, 165], "in\u00e9gal": 56, "envisage": [56, 70, 88], "os\u00e9": [56, 70], "sc\u00e9narios": 56, "visent": 56, "sall": [56, 117, 118], "voi": [56, 61, 162, 199], "sytem": 56, "agent": [56, 174], "micro\u00e9conom": 56, "montent": 56, "baissent": 56, "rentabl": 56, "suppl\u00e9ent": 56, "accel": 56, "capturent": 56, "maximisent": 56, "regularized": 56, "wahlberg": 56, "annergren": 56, "wang": 56, "proceeding": 56, "16th": 56, "ifac": 56, "symposium": 56, "july": 56, "g\u00e9rard": 56, "henry": 56, "eyroll": 56, "pearson": [56, 61], "educ": 56, "puf": 56, "follower": 56, "los": 56, "often": 56, "marc": 56, "jean": [56, 103, 162], "philipp": 56, "econpaper": 56, "arxiv": 56, "michel": [56, 110, 157], "rocch": 56, "arnaud": 56, "christiaen": 56, "sef": 56, "willmott": 56, "abordent": 57, "trading": [57, 83], "financ": 57, "travevelling": 58, "magasin": [58, 60, 187], "plannif": 58, "pr\u00e9par": [58, 198, 204], "converg": [58, 77, 110, 112, 131, 137, 139, 140, 164, 200], "sued": 58, "diver": 58, "vast": 58, "backbon": 58, "heuristic": [58, 59], "organized": 58, "citeindex": 58, "koivisto1999": 58, "vesanto2000": 58, "reconnaiss": [58, 204], "parol": 58, "d\u00e9form": 58, "torsion": 58, "ressemblent": [58, 145], "papillon": 58, "organizing": 58, "rejoint": [58, 95], "v_n": [58, 59, 189, 190], "p_l": 58, "c_l": 58, "longleftarrow": [58, 59], "eta": [58, 61, 181, 182], "rcl": [58, 61, 62, 83, 131, 137, 179, 183, 188], "epsilon_0": 58, "d_0": [58, 85], "eta_0": 58, "maillag": 58, "vid\u00e9o": [58, 59, 203], "esper": [59, 84, 95, 204], "ud": 59, "d\u00e9barrass": [59, 113, 114], "e_1": [59, 112], "e_n": 59, "emptyset": 59, "quad": 59, "e_i": [59, 78, 79], "neq": [59, 62, 70, 183, 184, 187], "cup": 59, "foreach": [59, 65], "majeur": [59, 69, 113, 114, 166, 186], "quadrill": 59, "30000": [59, 101, 178], "algo_kruskal_tsp": 59, "3000": [59, 168, 170], "composent": [59, 132], "trigonometr": 59, "confondus": 59, "parcourus": [59, 87], "appartien": [59, 83], "imperfect": 59, "kernighan": 59, "notin": [59, 62, 112], "v_": [59, 189, 190], "d\u00e9cro\u00eet": [59, 85, 130, 132, 134, 146], "v_k": 59, "pr\u00e9c\u00e8dent": [59, 69], "d\u00e9terminent": 59, "resteindr": 59, "concentr": [59, 62, 133, 170], "r\u00e9sorb": 59, "a\u00b5": 59, "lieux": 59, "travers": [59, 87, 95, 165, 177], "extr\u00e9mit": 59, "etap": [59, 84, 131, 169, 187], "1500": [59, 142], "scienc": 60, "d\u00e9marrag": 60, "lecteur": 60, "d\u00e9monstr": [60, 69, 187], "fidel": 60, "enseign": [60, 61], "plais": 60, "digress": 60, "m\u00ealent": 60, "assist": 60, "d\u00e9battr": [60, 204], "supposit": 60, "appr\u00e9ci": [60, 62], "tradit": 60, "motiv": [60, 77], "sanction": 60, "aveugl": 60, "vois": [60, 88, 105], "agenc": [60, 61], "terrain": 60, "r\u00e9sist": 60, "nait": 60, "d\u00e9crir": [60, 193, 205], "ph\u00e9nomen": 60, "bocal": 60, "enivr": 60, "datascient": 60, "phras": 60, "charm": 60, "d\u00e9duir": [60, 85, 187], "vif": [60, 61], "nourr": 60, "d\u00e9press": 60, "frapp": [60, 204], "fascin": 60, "limpid": 60, "jogging": 60, "menac": 60, "s\u00e9cur": [60, 74, 204], "militair": 60, "bo\u00eet": 60, "tourment": [60, 204], "laisson": 60, "ustensil": 60, "journal": [60, 210], "intim": 60, "passon": 60, "tripot": 60, "v\u00e9rit": [61, 62, 119, 204], "symbolis": 61, "purist": 61, "diront": 61, "trompeur": [61, 99, 118], "r\u00e9vel": 61, "h\u00e9sit": [61, 62, 69, 205], "iri": 61, "bilin\u00e9air": 61, "y_i": [61, 62, 77, 111, 112, 113, 114, 115, 116, 131, 132, 134, 137], "_1": [61, 134], "beaoucoup": 61, "grecqu": 61, "r\u00e9flexion": 61, "min_w": 61, "newton": 61, "synth\u00e9tis": 61, "biolog": 61, "ami": [61, 162], "r\u00e9cit": 61, "endort": 61, "paress": [61, 101], "uniform": [61, 62, 77, 111, 113, 114, 117, 118, 123, 124, 159, 162, 200, 203], "chapeau": 61, "fabriqu": [61, 139, 145], "ampoul": 61, "vision": [61, 187], "y_1": [61, 114], "y_n": [61, 62], "r\u00e9su": 61, "spearman": 61, "rg_x": 61, "rg_y": 61, "volont": 61, "gamm": [61, 131, 132, 181, 182], "ampleur": 61, "math\u00e9maticien": [61, 95], "guerr": 61, "reconstruir": [61, 166], "aimon": 61, "prou": 61, "crypt": [61, 96, 181, 182], "uniformis": 61, "illustrent": [61, 125], "mard": 61, "d\u00e9cembr": [61, 97, 204], "\u00e9col": [61, 74], "dispens": [61, 193], "lyc": [61, 204], "cultur": [61, 62, 74], "auxquel": [61, 74, 87, 204], "x4": [61, 150], "viterb": 61, "levenstein": [61, 80, 81, 192], "exeric": 61, "embauch": [61, 90, 125], "d\u00e9nomin": [61, 137], "apprendr": [61, 62, 99, 132, 149, 204], "plair": 61, "statisticien": 61, "spectral": [61, 125], "uci": 62, "p\u00e9dagog": 62, "go\u00fbt": [62, 153], "bouch": 62, "taniqu": 62, "parfum": 62, "breuvag": 62, "pipet": 62, "chimiqu": [62, 143], "gustat": 62, "composit": 62, "envi": 62, "viticulteur": 62, "6000": [62, 150], "r\u00e9pertori": 62, "accumul": [62, 78, 110], "regress": [62, 99, 111, 131, 137, 139, 140, 150], "i_": 62, "x_j": [62, 183, 184, 186], "d\u00e9saccord": 62, "visag": 62, "enquer": [62, 91], "ball": 62, "acquis": [62, 144], "aubain": [62, 144], "appris": [62, 99, 131], "descent": [62, 131], "illusoir": 62, "epsilon_": [62, 70, 111, 112, 115, 116, 132], "loinormal": [62, 70], "independ": [62, 70], "epsilon_j": [62, 70], "Soient": [62, 70], "saporta2006": 62, "supervised": [22, 62], "lumi": 62, "cibl": [62, 99], "leftrightarrow": [62, 83, 134], "logisit": 62, "fonti": 62, "beta_0": 62, "propto": 62, "kullbak": 62, "leib": 62, "loss": [62, 131], "converst": 62, "onevsrest": [62, 130, 141, 142], "onevson": [62, 130], "classifieur": [62, 137, 140, 141, 142, 186], "c_k": 62, "pr\u00e9dit": [62, 131, 140, 145, 147, 149], "remport": 62, "paradoxal": 62, "d\u00e9s\u00e9quilibr": 62, "furnkranz2002": 62, "balanc": [62, 128], "leg": [62, 134], "stacked": 62, "generaliz": 62, "supportent": 62, "nativ": 62, "stacking": [62, 128], "hyperparametr": [62, 128, 146], "pipelin": [22, 62, 128, 139, 142], "svm": [62, 133, 139], "feature_select": [62, 139], "selectkbest": [62, 139], "f_regress": [62, 139], "n_inform": [62, 139, 185, 186], "random_stat": [62, 117, 118, 132, 134, 139, 144], "anova_filt": [62, 139], "clf": [62, 133, 139], "svc": [62, 133, 139], "kernel": [62, 139, 163, 171], "linear": [62, 133, 139], "anova_svm": [62, 139], "anov": [62, 139], "score_func": [62, 139], "0x7fe3a86cdd80": [], "estimator": [62, 134, 139, 141, 142, 144, 146], "predict_prob": [62, 137, 139, 140, 142, 149, 185], "get_param": [62, 150], "set_param": 62, "clon": [62, 139], "overfitting": [22, 62, 128, 150], "gilbert": 62, "saport": 62, "technip": 62, "robin": 62, "johann": 62, "f\u00fcrnkranz": 62, "manil": 63, "jenkin": [63, 66], "vglob": 64, "un_calcul": 64, "contors": 64, "somme_doubl": [64, 69], "test_somme_doubl": [64, 69], "quiconqu": [64, 69], "bing": [64, 69], "envois": [64, 69], "remote_nam": 65, "url_repo": 65, "upstream_dmlc": 65, "dmlc": 65, "xgboost": [22, 65], "repo": 65, "branchpy": 65, "machinelearning": 65, "cscod": 65, "patch": [65, 117, 118, 160], "ish": 65, "pathspec": 65, "includ": 65, "predictor": 65, "new_branch": 65, "upstream": 65, "rm": [65, 68, 110], "localpath": 65, "hard": 65, "included": [65, 75], "mad": 65, "fetch": 65, "banch": 65, "insid": 65, "sync": 65, "assuming": 65, "reposity": 65, "ongoing": 65, "away": 65, "retain": 65, "seem": 65, "renamed": 65, "renaming": 65, "own": 65, "moved": 65, "tagged": 65, "declar": 65, "onnx": 65, "extended": 65, "sparsecheckout": 65, "echo": [65, 67, 68], "_unittest": 65, "pyproject": 65, "toml": 65, "cominf": 65, "stor": [65, 68], "onnx_extended": [65, 68], "thistag": 65, "truc": 66, "crash": 66, "programmer": 66, "openjdk": 67, "jdk": 67, "wget": 67, "pkg": [67, 68], "sh": [67, 68], "deb": 67, "purg": [67, 68], "nano": 67, "chown": 67, "consol": 67, "collapsing": 67, "usesecurity": 67, "security": 67, "ls": 68, "cd": 68, "autoremov": 68, "aptitud": 68, "dpkg": 68, "xarg": 68, "files0": 68, "sed": 68, "rn": 68, "causing": 68, "mtim": 68, "fuser": 68, "ncdu": 68, "sfdisk": 68, "lht": 68, "human": [22, 68], "readabl": 68, "shc": 68, "heavy": 68, "folder": 68, "rh": 68, "kill": 68, "pid": 68, "eo": 68, "envvar": 68, "jun": 69, "gcc": 69, "derri": [69, 77], "\u00e9tal": 69, "douteux": 69, "guill": 69, "2e": [69, 99], "14159": 69, "14e": 69, "d2": [69, 80, 93, 108, 113, 115, 116, 162, 188], "d1": [69, 80, 108, 113], "popitem": 69, "encha\u00eenent": 69, "syumbol": 69, "xrang": 69, "li2": 69, "random_matrix": [69, 91], "__enter__": [69, 170, 171, 172, 185], "__exit__": [69, 170, 171, 172, 185], "r1": [69, 113, 114, 123], "r2": [69, 113, 114, 117, 123, 134, 144, 146, 147, 149], "r\u00e9percu": 69, "d\u00e9clin": 69, "iterate_double_on_list": 69, "run_python_script_140615755600256": [], "0x7fe3a82c35a0": [], "ma_cl": 69, "att3": 69, "att4": 69, "calcule4": 69, "calcule_static": 69, "__": 69, "ma_classe2": 69, "makebold": 69, "wrapped": 69, "makeitalic": 69, "_p": 69, "val": [69, 175, 184, 200], "p_get": 69, "p_set": 69, "backslash": 69, "balis": 69, "htmlpars": 69, "descript": [69, 95], "geometr": 69, "pseudonym": 69, "rapportent": 69, "invalid": [69, 104], "abcdefghijklmnopqrstuvwxyz": [69, 162], "ef": 69, "calcul1": 69, "calcul2": 69, "calcul3": 69, "calculx": 69, "calcul4": 69, "ported": 69, "nonetyp": [69, 102], "dropbox": 69, "skydriv": 69, "googledr": 69, "propag": [69, 78, 119], "svn": 69, "tortoisesvn": 69, "duplicat": [70, 71], "implic": 70, "target": [70, 71, 134, 163], "volatil": [70, 144], "achat": [70, 133, 155, 204], "band": 70, "bolling": 70, "vent": 70, "explic": 71, "faq": 72, "d\u00e9butent": [74, 105], "macos": 74, "alleg": 74, "d\u00e9fault": [74, 175], "heureux": [74, 204], "florileg": 74, "awesom": [74, 85], "pip": [74, 142, 150], "pourront": 74, "soulev": 74, "r\u00e9serv": [74, 203], "h\u00f4tel": 74, "vieillot": 74, "obsolet": 74, "autorisent": 74, "publi": 74, "enhanc": 74, "proposal": 74, "relev": [74, 204], "immens": [74, 77], "manquent": 74, "qualif": 74, "cursus": 74, "scolair": 74, "intemporel": 74, "couvrent": 74, "serr": 74, "exit": 74, "copyright": 75, "hereby": 75, "granted": 75, "fre": 75, "obtaining": 75, "softwar": 75, "deal": [75, 191, 192], "modify": 75, "distribut": 75, "sublicens": 75, "whom": 75, "furnished": 75, "notic": 75, "shall": 75, "substantial": 75, "provided": 75, "AS": 75, "warranty": 75, "implied": 75, "limited": 75, "warrant": 75, "merchantability": 75, "fitness": 75, "noninfring": 75, "holder": 75, "liabl": 75, "claim": [75, 166], "damag": 75, "liability": 75, "otherwis": [75, 191, 192], "arising": 75, "dealing": 75, "social": [77, 84, 187, 204], "connexion": 77, "lourd": [77, 173], "facebook": 77, "consid\u00e9ron": 77, "univer": 77, "s_1": [77, 187], "s_2": [77, 187], "ldot": 77, "s_m": [77, 187, 188], "noton": 77, "satisfair": 77, "actualis": 77, "toler": 77, "do\u00eet": 77, "lvert": [77, 134], "rvert": [77, 134], "leq": 77, "geq": 77, "m\u00e9dian": [77, 112], "pr\u00e9senton": 77, "famill": [77, 162, 204], "universel": 77, "mapsto": 77, "h_": [77, 131], "mathrm": 77, "prenon": [77, 193], "arbitrair": 77, "4294967291": 77, "tiron": 77, "sampl": [77, 95, 136, 139, 166], "calculon": 77, "compton": 77, "p_collis": 77, "effectuon": 77, "reiter": 77, "r\u00e9it\u00e9ron": 77, "750": [77, 131], "a_1": [77, 134], "a_2": [77, 134], "essayon": [77, 131, 139, 145, 147, 149, 158, 175], "64bit": 77, "i8": 77, "univers": 77, "\u00e9chantillonag": 77, "b_": 77, "b_max": 77, "b_1": 77, "b_2": 77, "h2": 77, "initialison": 77, "z\u00e9ros": [77, 112, 156, 175], "consecut": 77, "trailing": 77, "modulus": 77, "mod_37bit_posit": 77, "decomposit": [77, 135, 136, 153, 186], "0b10": 77, "0b10000000000": 77, "0b1101": 77, "comparon": [77, 167], "rajouton": 77, "539": 77, "parcouron": 77, "regardon": [77, 136, 140, 149], "card": 77, "384": [77, 83, 114, 130, 137, 185], "remarquon": 77, "divisibl": 77, "dernier": 77, "obtenon": 77, "regroupon": 77, "2500": 77, "median": [77, 112], "1f": 77, "axhlin": 77, "0x7f1d715b2860": 77, "observon": 77, "approx": [77, 199], "rappelon": 77, "size_bound": 77, "effort": [77, 204, 208], "stad": 77, "rajout": 77, "estimated": 77, "nonzero": 77, "annotat": 77, "xytext": 77, "arrowprop": 77, "arrowstyl": 77, "pr\u00e9conisent": 77, "consomm": 78, "ji": 78, "random_adjacency_matrix": 78, "remplissag": 78, "e_j": 78, "random_symmetric_adjacency_matrix": 78, "rnd2": 78, "tqdm": [78, 84, 85, 88, 95, 130, 131, 132, 134, 152, 156, 164, 168, 169, 186], "total_nb1": 78, "nb1": 78, "emptyness": 78, "73it": 78, "0000000e": 78, "4408921e": 78, "total_null": 78, "nb_null": 78, "82it": 78, "90it": [78, 131], "connex_component": 78, "total_cnx": 78, "cnx": 78, "ny": [78, 210], "96it": 78, "connex_components_indic": 78, "grenouill": 79, "bond": 79, "barreau": 79, "treiz": 79, "ven": [79, 194, 202], "144": [79, 242], "e_": [79, 131], "geqsl": [79, 83, 137, 168, 188], "grenouille2": 79, "grenouille3": 79, "pr\u00e9d\u00e9cesseur": [79, 84], "levenshtein": 80, "tron\u00e7on": [80, 83], "distance_meme_longueur": 80, "abcef": 80, "abcde": 80, "mind": [80, 84], "distance_alambique": 80, "verlan": 80, "ac": [80, 150, 204], "distance_alambiquee_levenstein": 80, "ace": 80, "occas": [81, 204, 210], "na\u00eff": 81, "restraint": 81, "distance1": 81, "imfo": 81, "distance2": 81, "m1_e": 81, "cab": 81, "bcdef": 81, "distance2_verbos": 81, "disent": 81, "pirat": 81, "distance3": 81, "pimfos": 81, "fastid": 81, "convien": 81, "test_dist_equal": 81, "test_distance1": 81, "test_dist_diff1": 81, "_a": [81, 189], "a_": [81, 84], "test_distance2": 81, "magnif": 81, "test_dist_diff2": 81, "_ab": 81, "ab_": 81, "a_b": 81, "test_distance3": 81, "incroi": 81, "edit_dist": 81, "agraf": 81, "agra": 81, "test_edit_dist": 81, "r\u00e9muner": 81, "r\u00e9numer": 81, "edit_distance2": 81, "cmp_char": 81, "test_special": 81, "test_edit_distance2": 81, "agraff": 81, "\u00e9leph": 81, "\u00e9lef": 81, "edit_distance3": 81, "ins_char": 81, "test_edit_distance3": 81, "adjacent": [82, 108, 189], "uuid": [82, 87], "plot_network": 82, "digraph": [82, 87], "rankd": 82, "lr": [82, 99, 130, 131, 142], "d\u00e9comment": [82, 87], "hdot": [82, 87], "uid": [82, 87], "uuid4": [82, 87], "viz": [82, 87], "div": [82, 87], "svggraph": [82, 87], "getelementbyid": [82, 87], "innerhtml": [82, 87], "Quelle": [82, 110, 152, 162, 187, 199], "f_": 82, "order_same_weight": 82, "order_any_weight": 82, "durat": [82, 149], "duract": 82, "new_end": 82, "subarray": 83, "l_1": 83, "l_2": 83, "l_n": 83, "l_k": 83, "max_": [83, 175, 200], "somme_partiel": 83, "plus_grande_sous_l": 83, "jm": 83, "cout": [83, 108, 120], "l_j": 83, "plus_grande_sous_liste_n2": 83, "l_a": 83, "l_i": 83, "k_1": 83, "k_2": 83, "r\u00e9union": 83, "jonction": 83, "plus_grande_sous_liste_nlnn2_r": 83, "ia": 83, "ja": 83, "jb": [83, 99, 150], "plus_grande_sous_liste_nlnn2": 83, "160": [83, 185], "896": 83, "512": [83, 99], "4608": 83, "4f": 83, "cumul2": 83, "quatriem": [83, 197], "l_": 83, "sommemax": 83, "red\u00e9marr": 83, "plus_grande_sous_liste_n": 83, "li100": 83, "565": [83, 113, 138], "134": 83, "binomial": 84, "adja": 84, "networkx": [84, 95], "from_numpy_array": 84, "with_label": 84, "distrib": [84, 117, 118], "successeur": [84, 108], "pr\u00e9decesseur": 84, "partent": [84, 95], "arrivent": [84, 133], "sup\u00e9rieu": 84, "2_": 84, "jk": 84, "pq": [84, 181, 182], "3_": 84, "adjan": 84, "c_j": 84, "maj": 84, "\u00e9paiss": 84, "lois": [84, 117, 118, 179, 180], "admettent": 84, "distribution_to_degree_list": 84, "deg": [84, 150], "nh": 84, "random_graph": 84, "distribution_degre": 84, "n_it": [84, 86], "set_descript": [84, 92], "dj": 84, "incomplet": 84, "ndegre": 84, "ncurrent": 84, "376": 84, "28it": 84, "ipykernel_17111": 84, "4037000715": 84, "382": 84, "61it": [84, 85], "a_t": [84, 135], "voyon": [84, 113, 114, 130, 131, 134, 137, 139, 140, 141, 146, 150, 205], "random_graph_remov": 84, "last_added": 84, "n_removed": 84, "dh": 84, "30it": [84, 131], "distribution_degree_realis": 84, "sumd": 84, "rejet": 84, "d3a98a30": 85, "893f": 85, "47f7": 85, "96c5": 85, "2f4bcaaa0d71": 85, "total_cas_confirm": 85, "total_deces_hopital": 85, "total_deces_ehpad": 85, "total_cas_confirmes_ehpad": 85, "total_cas_possibles_ehpad": 85, "patients_reanim": 85, "patients_hospitalis": 85, "total_patients_guer": 85, "nouveaux_patients_hospitalis": 85, "nouveaux_patients_reanim": 85, "802": 85, "118431": 85, "28826": 85, "1233": [85, 138], "19272": 85, "653050": 85, "756": 85, "803": 85, "118494": 85, "28837": 85, "1213": [85, 95], "18901": 85, "653734": 85, "804": 85, "118508": 85, "28844": 85, "1214": 85, "18935": 85, "653827": 85, "805": 85, "118633": 85, "28845": 85, "1199": 85, "18742": 85, "654775": 85, "900": [85, 116, 135], "806": [85, 119], "118723": 85, "1173": 85, "18290": 85, "655984": 85, "set_yscal": [85, 137, 140], "courag": [85, 166, 204], "rigour": [85, 144, 147, 179, 180, 186], "death": 85, "country": 85, "githubusercontent": [85, 99], "cssegisanddat": 85, "csse_covid_19_dat": 85, "csse_covid_19_time_ser": 85, "time_series_covid19_": 85, "s_global": 85, "eur": 85, "provinc": 85, "tf": 85, "extract_whole_dat": 85, "confirmed": 85, "recovered": 85, "popul": 85, "67e6": 85, "infected": 85, "saf": 85, "ipykernel_20449": 85, "102400080": 85, "parsed": 85, "individually": 85, "falling": 85, "ensur": 85, "parsing": 85, "consistent": 85, "161407": 85, "38591184": 85, "38429777": 85, "28408816": 85, "161450": 85, "38599330": 85, "38437880": 85, "28400670": 85, "161474": 85, "38606393": 85, "38444919": 85, "28393607": 85, "161501": 85, "38612201": 85, "38450700": 85, "28387799": 85, "161512": 85, "38618509": 85, "38456997": 85, "28381491": 85, "r\u00e9par": 85, "improvis": 85, "correct_ser": 85, "covid_modified": 85, "09it": [85, 131], "342253": 85, "liss": 85, "compartimental": 85, "\u00e9pid\u00e9miolog": [85, 125], "contamin": [85, 119, 135], "malad": [85, 204], "guer": [85, 119], "d\u00e9ced": [85, 119], "dS": [85, 86], "nu": [85, 86, 119, 165], "dr": [85, 86, 188], "transmiss": 85, "plot_simul": 85, "day0": 85, "true_dat": 85, "infect": 85, "visibil": 85, "tdf": 85, "sob": 85, "iob": 85, "rob": 85, "dob": 85, "s_0": 85, "i_0": 85, "r_0": 85, "s0": 85, "9990": 85, "i0": [85, 107], "r0": 85, "confin": 85, "reconfin": 85, "temp\u00e9ratur": 85, "lisse_mar": 85, "28305367": 85, "1697884": 85, "1640875027069664": 85, "626756310367156": 85, "9857629613918629": 85, "533445387958945": 85, "transitoir": 85, "simulation_cumule": 85, "minimisent": [85, 112], "i_rang": 85, "beta_rang": 85, "mu_rang": 85, "nu_rang": 85, "error_fct": 85, "err_min": 85, "di0": 85, "j_t": 85, "cum": [85, 159], "gras": 85, "240": [85, 99, 110], "sim_opt": 85, "3f": [85, 111], "3g": 85, "3772": 85, "51it": [85, 156], "188": [85, 99, 110], "39it": 85, "mort": [85, 203], "error_norm": 85, "45it": [85, 95], "aticl": 85, "modified": [85, 166], "contagion": 85, "italy": 85, "estimating": 85, "simulating": 85, "countr": 85, "s_": [85, 187, 188], "beta_t": 85, "incub": 85, "d_": [85, 183], "epidemic": 85, "identifying": 85, "unreported": 85, "inferent": 85, "modelling": 85, "forecasting": 85, "outbreak": 85, "seird": 85, "covidtrack": 85, "pyepidemic": 85, "pandemic": 85, "etrang": [86, 161, 175], "inacessibl": 86, "pann": 86, "ovh": 86, "inaccessibl": [86, 91], "909090909090908": 86, "8909090909090909": 86, "90909091": 86, "89090909": 86, "82883546": 86, "79298272": 86, "18909091": 86, "simulation_bruite": 86, "90629495": 86, "90818313": 86, "0769856": 86, "10853633": 86, "84322669": 86, "77113049": 86, "17022418": 86, "21541865": 86, "sim_bruit": 86, "estimation_coefficient": 86, "645167": 86, "153483": 86, "113224": 86, "prouv": [86, 187], "distance_sim": 86, "1379327480825296": 86, "b0": 86, "m0": 86, "n0": [86, 171, 200], "distance0": 86, "mu0": 86, "nu0": 86, "175492030437819": 86, "21093122422461147": 86, "11141742761811038": 86, "12240477": 86, "1995322": 86, "09668045": 86, "06764482535407212": 86, "0880922396685696": 86, "poem": [87, 165], "arthur": [87, 165], "rimbaud": [87, 165], "voyel": [87, 101, 105, 110, 165], "latent": [87, 165], "corset": [87, 165], "velu": [87, 165], "mouch": [87, 165], "\u00e9clat": [87, 99, 165], "bombillent": [87, 165], "puanteur": [87, 165], "cruel": [87, 165, 204], "golf": [87, 165], "ombre": [87, 165], "candeur": [87, 165], "vapeur": [87, 165], "glaci": [87, 165], "fier": [87, 165], "rois": [87, 165], "frisson": [87, 165], "ombel": [87, 165], "pourpr": [87, 165], "sang": [87, 165, 204], "crach": [87, 165], "rir": [87, 165], "levr": [87, 165], "coler": [87, 165, 189], "ivress": [87, 165], "p\u00e9nitent": [87, 165], "vibr": [87, 165], "divin": [87, 165], "virid": [87, 165], "paix": [87, 165, 189, 204], "p\u00e2t": [87, 165], "sem": [87, 165], "rid": [87, 134, 165], "alchim": [87, 165], "studieux": [87, 165], "supr\u00eam": [87, 165, 204], "clairon": [87, 165], "strideur": [87, 165], "silenc": [87, 165, 183, 184], "ange": [87, 165], "omeg": [87, 165], "rayon": [87, 117, 164, 165, 204], "violet": [87, 165], "yeux": [87, 165], "extract_word": [87, 165], "spl": 87, "plus_grand_suffix_commun": 87, "longueur_max": 87, "meilleure_pair": 87, "meilleur_suffix": 87, "suffix_map": 87, "\u00e9": [87, 162, 210], "ingr\u00e9dient": 87, "plus_grand_suffix_commun_dictionnair": 87, "5386918000003789": 87, "17898409999997966": 87, "n_x": 87, "sum_x": 87, "zabc": 87, "\u00ea": 87, "\u00e2": 87, "partiqu": 87, "build_dot": 87, "predecessor": 87, "root_nam": 87, "set2374575491648": 87, "n2374575489600": 87, "e2374575503808": 87, "t2374575329600": 87, "a2374575329984": 87, "l2374575327296": 87, "fin2374494191824": 87, "i2374575817216": 87, "n2374575817280": 87, "e2374575817344": 87, "p2374575817408": 87, "a2374575326656": 87, "t2374575325312": 87, "a2374575330240": 87, "l2374575340416": 87, "c2374575339968": 87, "e2374575595200": 87, "plot_dot": 87, "plus_grand_suffix_commun_dictionnaire_tr": 87, "whole_tr": 87, "23091779999958817": 87, "05081569999947533": 87, "topk_sortall": 88, "topk_idee1ou2": 88, "trich": 88, "d\u00e9brouill": [88, 203], "fairr": 88, "tris": 88, "interstic": 88, "topk_tri_select": 88, "kn": [88, 200], "topk_insert": 88, "topk_fus": 88, "topk": [88, 168], "topk_select_recurs": 88, "topk_select": 88, "pivot_index": 88, "measure_tim": [88, 168, 169], "repeat": [88, 123, 168, 169, 171], "0023090000031515956": 88, "06701939999766182": 88, "017117299998062663": 88, "0257670000064536": 88, "010535299996263348": 88, "05852940000477247": 88, "perm10000": 88, "006514400003652554": 88, "0134890000044834": 88, "019539000000804663": 88, "041308899999421556": 88, "014250300002458971": 88, "062273499999719206": 88, "perm1000": 88, "501": 88, "71it": [88, 131, 164], "000692": 88, "194126": 88, "003134": 88, "003230": 88, "013448": 88, "015127": 88, "000383": 88, "283472": 88, "001300": 88, "003163": 88, "022354": 88, "010969": 88, "000835": 88, "377026": 88, "001189": 88, "003169": 88, "022742": 88, "024926": 88, "000522": 88, "450699": 88, "001051": 88, "002952": 88, "045683": 88, "038119": 88, "000527": 88, "539852": 88, "001091": 88, "003602": 88, "038593": 88, "026605": 88, "affin": [88, 141], "permn": 88, "70it": 88, "000620": 88, "000124": 88, "000111": 88, "000137": [88, 169], "000411": 88, "000030": [88, 169], "002329": 88, "000275": 88, "000402": 88, "000326": 88, "001340": 88, "000328": 88, "021377": 88, "001635": 88, "005340": 88, "001277": 88, "005500": 88, "005612": 88, "178028": 88, "011507": 88, "034768": 88, "008894": 88, "022889": 88, "066547": 88, "755049": 88, "115708": 88, "361258": 88, "099447": 88, "233724": 88, "paraissent": [88, 132], "redessin": 89, "distance_vill": 89, "distance_tour": 89, "540451130306862": 89, "dessine_tour": 89, "ameliore_tour": 89, "transmis": 89, "dist_min": 89, "nb_perm": 89, "nb_it": 89, "extraordinair": [89, 141, 204], "ameliore_tour_renvers": 89, "p0": [89, 193], "spatial": [89, 117, 118, 123], "cdist": [89, 123], "build_permut": 89, "max_dist": 89, "arg_dist": 89, "extrapol": 90, "puissance2k": 90, "sum_k": 90, "a_k": 90, "prod_k": 90, "maxj": 91, "embarrass": 91, "produit_class": 91, "dim1": 91, "dim2": 91, "produit_eleg": 91, "k1": 91, "k2": [91, 200], "bigmat": 91, "259": 91, "sonne": 91, "mill": [91, 204], "sabord": 91, "matrice_dicodico": 91, "matrice_dicodico_lc": 91, "song": [91, 142], "produit_elegant_rapid": 91, "produit_elegant_rapide_transform": 91, "dicodico": 91, "008358499999303604": 91, "10761350000029779": 91, "2080854999985604": 91, "011978200000157813": 91, "28018710000105784": 91, "28202239999882295": 91, "06322960000034072": 91, "7310262999999395": 91, "21729559999948833": 91, "04302850000021863": 91, "25215659999958007": 91, "06354410000130883": 91, "24071189999813214": 91, "08784929999819724": 91, "23844240000107675": 91, "13118289999692934": 91, "2613874999988184": 91, "21261740000045393": 91, "2777879999994184": 91, "22135960000014165": 91, "2984610000021348": 91, "27173079999920446": 91, "28927499999917927": 91, "embl\u00e9mat": 92, "20256988": 92, "27603738": 92, "77763596": 92, "50108287": 92, "07482647": 92, "60880805": 92, "56075455": 92, "9637854": 92, "79735982": 92, "32773718": 92, "65017942": 92, "96827692": 92, "dy": [92, 93, 117, 118, 184], "090536785820115": 92, "plot_point": 92, "impatient": 92, "0it": 92, "720it": 92, "89it": 92, "optimisation_retourn": 92, "random_cit": 93, "39190158": 93, "70104769": 93, "865672": 93, "22913836": 93, "65596723": 93, "32503514": 93, "distance_boucl": 93, "8284271247461903": 93, "513": 93, "slowest": [93, 178], "took": [93, 178], "fastest": [93, 178], "intermediat": 93, "cached": [93, 171], "253": [93, 114, 150], "faveur": 93, "best_cit": 93, "best_dist": 93, "p_cit": 93, "opt_cit": 93, "optimise_random": 93, "n_perm": 93, "pout": 93, "retournement1": 93, "d_av": 93, "og": 93, "siecl": 94, "tiret": 94, "330px": 94, "international_morse_cod": 94, "svg": [94, 171], "mn\u00e9motechn": 94, "r\u00e9duis": 94, "man": 94, "who": 94, "laugh": 94, "eee": 94, "ooo": 94, "eel": 94, "oo": 94, "oooo": 94, "ooooo": 94, "word2mors": 94, "lison": 94, "ooooooo": 94, "rev_alph": 94, "reg_exp": 94, "hyperprob": 94, "souvien": [94, 203, 204], "dec_exp": 94, "suffir": [94, 157, 159], "decode_mors": 94, "een": 94, "eeee": 94, "eb": 94, "DEE": 94, "gn": 94, "decode_morse_longer_first": 94, "flemm": 94, "plu\u00f4t": 94, "dr\u00f4l": 94, "patron": [94, 204], "ee": 94, "decompose_mors": 94, "letter": 94, "new_opt": 94, "xa": 94, "dk": [94, 110], "dnt": 94, "dta": 94, "dtet": 94, "na": [94, 116, 152, 154, 165], "naet": 94, "nek": 94, "nent": 94, "netet": 94, "nrt": 94, "teaet": 94, "teek": 94, "teent": 94, "teet": 94, "teetet": 94, "tert": 94, "tft": 94, "tik": 94, "tint": [94, 210], "tit": 94, "titet": 94, "TUA": 94, "tuet": 94, "xet": 94, "explos": 94, "d\u00e9duis": [94, 113, 185], "t\u00e9l\u00e9graph": 94, "initi": [95, 204], "trajet": 95, "parcourent": [95, 175], "d\u00e9marrent": 95, "posti": 95, "inspect": 95, "already": [95, 171], "downloaded": 95, "146": [95, 163, 166], "carrefour": 95, "873361200000005": 95, "3236609": 95, "8730454": 95, "3235788": 95, "compren": 95, "03562501840766763": 95, "8741849": 95, "3239352": 95, "0937624742737696": 95, "p\u00f4l": 95, "porti": 95, "exp\u00e9rimental": 95, "id\u00e9al": [95, 121, 135], "verr": 95, "pont": 95, "konigsberg": 95, "repart": 95, "nx": 95, "add_edg": 95, "rejoign": 95, "nb_edg": 95, "parit": [95, 108, 205], "tien": [95, 204], "r\u00e9duisent": 95, "descendr": 95, "d\u00e9doubl": 95, "edges_from": 95, "total_possible_edg": 95, "fromi2": 95, "new_": 95, "new_d": 95, "535221": 95, "778": 95, "1138": 95, "21316": 95, "538415": 95, "1228": [95, 140], "2258": 95, "545218": 95, "1717": 95, "3748": 95, "557001": 95, "2118": [95, 150], "5500": 95, "574194": 95, "2442": [95, 166], "7470": 95, "602050": 95, "2726": 95, "9624": 95, "642132": 95, "2900": 95, "11810": 95, "3258634178614415": 95, "admissibl": 95, "d\u00e9fil": [95, 164], "build_possibl": 95, "009382623381497467": 95, "5290": 95, "248170388440608": 95, "initc": 95, "undesired": 95, "912505": 95, "400": [95, 116, 142, 163, 183, 184, 200], "928070": 95, "938916": 95, "1627": [95, 119], "2244": 95, "957763": 95, "1676": 95, "3644": 95, "976823": 95, "1341": 95, "4989": 95, "020697": 95, "833": 95, "5977": 95, "042415": 95, "427": 95, "6489": 95, "062800": 95, "187": [95, 165], "6716": 95, "088837": 95, "6815": 95, "112715": 95, "6856": 95, "138552": 95, "6874": 95, "168428": 95, "197202": 95, "relient": [95, 183, 184], "refair": [95, 190], "122002169199727": 95, "661698849016764": 95, "Mon": 95, "combl": 95, "risque": 95, "pourait": 95, "probl\u00e8mat": 95, "making": 95, "directed": 95, "334": [95, 185], "1511": 95, "eulerian_path": 95, "hierholz": 95, "odd": 95, "1327": 95, "10585": 95, "1383": 95, "1423": 95, "133": [95, 134], "1470": 95, "168": [95, 150, 186], "1523": 95, "1589": 95, "1655": 95, "219": [95, 99, 110, 185], "1722": 95, "232": [95, 110, 168, 175], "1796": 95, "1863": 95, "207": [95, 110, 119, 150], "1919": 95, "164": [95, 99, 150, 186], "2027": 95, "2038": 95, "2039": 95, "2040": 95, "0016168196457467584": 95, "002915457386378182": 95, "004107201738406607": 95, "138": 95, "005201454147672404": 95, "010775423696863674": 95, "street": 95, "016229655482986917": 95, "08264740074165475": 95, "026299568900906643": 95, "jump": 95, "08193964999861593": 95, "d\u00e9patouill": 95, "entrant": 95, "ramen": [95, 133], "c\u00e9sar": [96, 197, 198], "babbag": 96, "apparaiss": [96, 204], "cryptanalys": 96, "d\u00e9crypt": [96, 181, 182], "code_vigener": [96, 197, 198], "message_cod": [96, 197, 198], "decodevigener": 96, "codevigener": 96, "pgcd": 96, "decodevigenerelongueurcl": 96, "DES": [96, 204], "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd": 96, "egv": 96, "etre": [96, 204], "decodevigenerecl": 96, "d\u00e9cod": [96, 124, 125, 198], "2l": 96, "3l": 96, "cassevigener": 96, "condamn": 96, "gutenberg": [96, 209], "hugo_dernier_jour_condamn": 96, "218451": 96, "7000": 96, "cle_cod": 96, "td_note_2006": 97, "td_note_2007": 97, "td_note_2008": 97, "td_note_2009": 97, "td_note_2010": 97, "td_note_2010_rattrap": 97, "td_note_2011": 97, "td_note_2012": 97, "td_note_2013": 97, "td_note_2013_rattrap": 97, "td_note_2014": 97, "td_note_2015": 97, "td_note_2016": 97, "td_note_2017": 97, "broken": 97, "td_note_2018": 97, "td_note_2019": 97, "td_note_2020": 97, "td_note_2021": 97, "td_note_2022": 97, "td_note_2022_rattrapag": 97, "td_note_2022_rattrapage2": 97, "td_note_2023": 97, "1a": [97, 189, 190], "novembr": 97, "rattrapag": 97, "oral": [22, 97], "f\u00e9vri": [97, 98, 99], "2021": 97, "septembr": [97, 204], "m\u00e9decin": [98, 99], "_moyen": [98, 99], "moustach": [98, 99], "365": [98, 99], "_semain": [98, 99], "gend": [99, 174], "idc": 99, "4ba0b473": 99, "f8ca": 99, "4466": 99, "a65b": 99, "40e9b8ba5029": 99, "cendrillon": 99, "f44b004b": 99, "b01e": 99, "4835": 99, "b86d": 99, "1a42846c6d93": 99, "304895f0": 99, "f686": 99, "4b0e": 99, "8854": 99, "a705bb5a6982": 99, "balthazar": 99, "3f0d31d2": 99, "0ef4": 99, "4e7": 99, "b876": 99, "07d10225cc8c": 99, "f29273f4": 99, "a76c": 99, "4158": 99, "b5f5": 99, "b3e5a080a0c7": 99, "rendezvous": 99, "idr": 99, "068274": 99, "b7db0ac9": 99, "86a1": 99, "46f9": 99, "98ac": 99, "f1f8eb54072d": 99, "a65f721a": 99, "de11": 99, "4a01": 99, "be71": 99, "b26e2da3ac00": 99, "644b1236": 99, "b9e": 99, "4ef5": 99, "8ca7": 99, "d1adadb547c8": 99, "aff6ac9": 99, "5dd0": 99, "434e": 99, "9888": 99, "f724f6d40969": 99, "9ca87507": 99, "aa95": 99, "49a9": 99, "88b3": 99, "86ec9fbc44d6": 99, "2537": 99, "003b0195": 99, "2acb": 99, "4f46": 99, "b7fa": 99, "28cf266a8f60": 99, "009e689c": 99, "51a1": 99, "4cef": 99, "99ca": 99, "a4ba364eba8d": 99, "00a213c2": 99, "1174": 99, "4359": 99, "8a67": 99, "fe710ec1b439": 99, "00e42818": 99, "aad": 99, "4758": 99, "a5f6": 99, "c78a6f235ea5": 99, "0153b785": 99, "9acd": 99, "4d28": 99, "aad1": 99, "62f8bf2faea3": 99, "statisticatien": 99, "jointplot": [99, 145, 147, 149], "scatter_kw": [99, 136], "_oldcor": [99, 145, 147], "1119": [99, 145, 147], "use_inf_as_n": [99, 145, 147], "option_context": [99, 145, 147], "gx": [99, 123], "boxplot": [99, 145], "diagramm": [99, 117, 118, 133], "violon": [99, 145], "violinplot": [99, 145], "quart": [99, 164], "linearregress": [99, 134, 139, 149, 150], "linearregressionifittedlinearregress": 99, "coef_": [99, 133, 134, 138], "52440734": 99, "36373925": 99, "intercept_": [99, 134, 138, 149], "05057671902867": 99, "statsmodel": [22, 99, 135, 138, 150], "ol": [99, 150], "squared": [99, 138, 150], "579": 99, "adj": [99, 108, 150], "686": [99, 187], "thu": 99, "jan": 99, "25e": 99, "likelihood": [99, 138, 150], "3149": 99, "aic": [99, 138, 150], "6306": [99, 150], "residual": [99, 138, 150], "bic": [99, 138, 150], "6320": 99, "nonrobust": 99, "025": [99, 134, 138, 150], "0506": [99, 150], "432": 99, "795": 99, "306": [99, 150], "5244": 99, "015": [99, 110, 134, 170], "302": [99, 170], "495": [99, 115, 116], "554": 99, "3637": 99, "358": 99, "194": [99, 110], "066": 99, "662": [99, 130], "omnibus": [99, 150], "096": 99, "durbin": [99, 150], "watson": [99, 150], "jarqu": [99, 150], "ber": [99, 150], "506": 99, "skew": [99, 150], "618": [99, 113], "77e": 99, "kurtos": [99, 150], "608": [99, 119], "correctly": [99, 150], "join2": 99, "cst": 99, "dmatric": 99, "return_typ": 99, "fit_intercept": [99, 134], "05057672": 99, "date2": 99, "dimanch": [99, 203, 204], "j365": 99, "delay1": 99, "002732": 99, "033333": 99, "019608": 99, "rend2": 99, "6d65b2b5": 99, "f34d": 99, "4440": 99, "8442": 99, "679175554db4": 99, "065474ed": 99, "6ba3": 99, "4ee1": 99, "aa83": 99, "b89e97d5a2a": 99, "38a02a6": 99, "8c04": 99, "4630": 99, "aaa6": 99, "2077077a9f87": 99, "f4cf0df4": 99, "0b6a": 99, "4b0f": 99, "93c7": 99, "d12499026fab": 99, "c1b3381b": 99, "9663": 99, "429d": 99, "a8fb": 99, "3b24c20a125b": 99, "030852": 99, "010694": 99, "023011": 99, "032413": 99, "614708": 99, "008700": 99, "026779": 99, "000064": [99, 131], "198835": 99, "616038": 99, "039766": 99, "049796": 99, "025400": 99, "054954": 99, "448584": 99, "0x7fb3214280d0": 99, "pairplot": 99, "plot_kw": 99, "axisgrid": 99, "pairgrid": 99, "0x7fb3029bf820": 99, "feat": 99, "x_var": 99, "y_var": 99, "stripplot": 99, "palet": 99, "reds_r": 99, "0x7fb2fad7ac20": 99, "08109837e": 99, "41245429e": 99, "42852787e": 99, "60797483e": 99, "12155016e": 99, "612": 99, "8257": [99, 150], "653e": 99, "2531": 99, "656e": 99, "4146": 99, "545": 99, "484": 99, "5081": 99, "010": [99, 111, 124, 172], "918": 99, "488": [99, 130], "528": [99, 170], "4125": 99, "902": 99, "0005": [99, 174], "562": 99, "574": 99, "002": [99, 170], "0797": 99, "321": 99, "575": 99, "585": 99, "1216": 99, "061": 99, "623": 99, "242": [99, 113], "147": [99, 150, 163], "969": 99, "558": 99, "17e": 99, "20e": 99, "might": [99, 150], "indicat": [99, 150], "arestrong": 99, "multicollinearity": [99, 150], "numerical": 99, "pourrion": [99, 131, 210], "dangeral": 99, "lr_moy": 99, "pred_moy": 99, "453648": 99, "551278": 99, "809575": 99, "711946": 99, "187538": 99, "err1": 99, "874448844571756": 99, "lrc": 99, "41460950333407": 99, "predc": 99, "855082": 99, "644421": 99, "334615": 99, "566717": 99, "048055": 99, "945104": 99, "345309": 99, "277461": 99, "298313": 99, "err2": 99, "697836056479865": 99, "6423a722": 99, "4769": 99, "4a7c": 99, "8d1d": 99, "266538c2a07": 99, "12617": 99, "temp2": 99, "54544": 99, "superposit": 99, "erreur2": 99, "0x7fb2fa805210": 99, "contrairment": 99, "modal": [99, 111], "dumm": 99, "get_dumm": 99, "ve": 99, "917": [99, 170], "2812": [99, 150], "6293": 99, "261e": 99, "2526": 99, "267e": 99, "0371": 99, "272": 99, "217": [99, 110, 141, 185], "342": 99, "504": 99, "570": [99, 110, 114], "0840": 99, "405": [99, 150, 159], "323": 99, "3003": 99, "392": [99, 170], "123": [99, 150], "723": [99, 148], "1607": 99, "735": [99, 150], "268": [99, 147], "1748": [99, 150], "212": [99, 110, 185, 186], "825": 99, "1849": 99, "210": [99, 110, 119, 142, 150], "597": 99, "0978": 99, "203": [99, 150], "684": 99, "5005": 99, "318": 99, "510": 99, "0722": 99, "846": [99, 185], "0003": [99, 174], "7385": 99, "236": [99, 110, 150], "275": 99, "354": [99, 134], "849": 99, "034": 99, "437": 99, "672": 99, "40e": 99, "666": [99, 102], "feat2": 99, "00892234e": 99, "07229120e": 99, "97614199e": 99, "07004497e": 99, "00395644e": 99, "07951294272968": 99, "664596": 99, "668165": 99, "934710": 99, "225084": 99, "agg2": 99, "103904": 99, "812446": 99, "581598": 99, "890947": 99, "158351": 99, "err2d": 99, "626505427547838": 99, "category_encoder": 99, "polynomialencod": 99, "base_contrast_encod": 99, "anymor": 99, "370": 99, "weekday_0": 99, "weekday_1": 99, "weekday_2": 99, "weekday_3": 99, "weekday_4": 99, "weekday_5": 99, "566947": 99, "545545": 99, "408248": 99, "241747": 99, "109109": 99, "032898": 99, "377964": 99, "564076": 99, "436436": 99, "197386": 99, "188982": 99, "327327": 99, "080582": 99, "493464": 99, "112532": 99, "195373": 99, "047478": 99, "677116": 99, "049724": 99, "630728": 99, "078804": 99, "feat3": 99, "_label": 99, "price_label": 99, "7ffb8a8b": 99, "a829": 99, "41f1": 99, "9572": 99, "2985ee9ba05": 99, "034483": 99, "47e415f0": 99, "f4e9": 99, "40c5": 99, "a59d": 99, "adc4c0621c8a": 99, "442": 99, "5611": 99, "6298": 99, "264e": 99, "9859": 99, "664": 99, "576": 99, "0767": 99, "344": 99, "303": 99, "851": [99, 150], "548": 99, "8060": 99, "237": [99, 110, 242], "9696": 99, "008": [99, 170, 171], "209": [99, 110], "249": [99, 150, 242], "245": [99, 150], "035": 99, "156": [99, 114, 136, 147, 159, 200], "660": [99, 185], "98e": 99, "47e": 99, "mul2014": 100, "9899924966004454": [100, 203, 204], "ecir": 100, "ex": [100, 115, 116, 132, 197], "kayak": [100, 101], "kakak": 100, "aill": 100, "contient_": 100, "12093467645909634": 100, "est_tri": [100, 164], "est_trie_nocopy": 100, "pas_de_voyel": 101, "aeiouy": [101, 105, 110], "bonjour": 101, "bnjr": 101, "rvr": 101, "mat_dict": 101, "9289682539682538": 101, "581": 101, "4676254832484": 101, "19981": 101, "39980": 101, "40000": [101, 134], "59978": 101, "60000": 101, "79979": 101, "80000": 101, "50000": [101, 140], "99978": 101, "119977": 101, "120000": [101, 130], "70000": 101, "139977": 101, "140000": [101, 110], "159978": 101, "160000": [101, 110, 130], "90000": 101, "179974": 101, "180000": [101, 110], "abcdef": 101, "1er": 101, "3em": 101, "afbecd": 101, "kkaay": 101, "strang": 101, "dictionnaire_depart": 101, "dictionnaire_retourn": 101, "it\u00e9reur": 101, "68beadeaff45": 101, "0x0000000006f305e8": 101, "86215c660090": 101, "subscript": 101, "7191411125634257": 101, "3177321667311": 101, "1024": [101, 152], "2036": 101, "4083": 101, "4096": 101, "8178": 101, "8192": 101, "16369": 101, "32752": 101, "32768": 101, "65519": 101, "65536": 101, "131054": 101, "131072": 101, "262125": 101, "262144": 101, "524268": 101, "524288": 101, "9f18cbb91429": 102, "ma_fonct": 102, "expliciti": 102, "495000": 102, "42400f095e8c": 102, "655479e1d45c": 102, "ma_list": 102, "d3addcc3bdbd": 102, "1eb96223c6dd": 102, "due": 102, "5607f3ee5543": 102, "26184474654812057": 102, "star": 102, "29749469599416334": 102, "305837286201697": 102, "make_squar": 103, "alic": 103, "bob": 103, "Ma": [103, 203], "myster": 103, "conjectur": [103, 191, 192], "syracus": 103, "6893f4ac9402": 104, "58b7566d9294": 104, "d\u00e9vient": 104, "2f84bd962211": 104, "elu": 104, "somme_caracter": 104, "225cea37f121": 104, "implicitly": 104, "un_sur_d": 104, "pto": 104, "systemt": 105, "ced82ea8013": 105, "b85136f11268": 105, "maj_voy": 105, "ambig\u00fc": [105, 156], "6b8ba89606bb": 105, "pyythoon": 105, "double_voy": 105, "populating": [106, 107, 110], "interact": [106, 107, 110], "namespac": [106, 107, 110], "construit_m": [106, 107, 111], "pointij": [106, 107], "th": [106, 107, 113, 114, 140, 163, 166, 174], "tinc": [106, 107], "dessin_m": [106, 107], "_subplot": [106, 107], "axessubplot": [106, 107], "0x10128a58": 106, "0x9491390": 106, "0x87cef28": 107, "voisins_a_valeurs_null": 107, "tous_voisins_a_valeurs_null": 107, "liste_point": 107, "fonction_coloriag": 107, "j0": [107, 169], "\u00e9tag": [107, 124], "acolori": 107, "doublon": [107, 187], "surface_colorie": 107, "fonction_coloriage_1000": 107, "0x14675b00": 107, "3258": 107, "0x1bc6a630": 107, "ajoute_point": 108, "q3": 108, "q4": 108, "successeurs_dico": 108, "q5": 108, "suites_chemin": 108, "q6": 108, "chemins2": 108, "q7": 108, "q8": 108, "adjacence8": 108, "che": 108, "garde_3_el": 108, "word2dict": 108, "pyt": 108, "pyth": 108, "pytho": 108, "two_words2dict": 108, "mot1": 108, "mot2": 108, "piton": 108, "pito": 108, "pit": 108, "add_edge_hv": 108, "edge1": 108, "edge2": 108, "2pq": 108, "ajoute_diagonal": 108, "loop_on_edg": 108, "misejour": 108, "plus_court_chemin": 108, "q9": 108, "trie_parit": 108, "carreau": 109, "rx": 110, "0404": 110, "0612080000000002": 110, "mensuel": [110, 205], "capital": 110, "rembours": 110, "mensual": 110, "decompose_mensualit": 110, "029": 110, "6769646931234": 110, "429": [110, 172], "32303530687665": 110, "emprunteur": 110, "int\u00earet": 110, "km": [110, 117, 118], "r\u00e9sulat": 110, "mensualit": 110, "666666666666668": 110, "63104825975415": 110, "12y": 110, "somme_maximal": 110, "183000": 110, "somme_maximale_step": 110, "150000": 110, "186": [110, 186], "170000": 110, "190000": 110, "254": [110, 171], "139000": 110, "141000": 110, "142000": 110, "174": [110, 185], "143000": 110, "144000": 110, "145000": 110, "146000": 110, "147000": 110, "182": [110, 165, 186], "148000": 110, "183": [110, 141, 150], "149000": 110, "185": 110, "151000": 110, "152000": 110, "153000": 110, "154000": 110, "155000": 110, "156000": 110, "157000": 110, "158000": 110, "159000": 110, "201": [110, 150], "161000": 110, "162000": 110, "206": 110, "163000": 110, "164000": 110, "165000": 110, "166000": 110, "167000": 110, "214": [110, 185], "168000": 110, "215": 110, "169000": 110, "171000": 110, "172000": 110, "173000": 110, "174000": 110, "226": 110, "175000": 110, "176000": 110, "177000": 110, "231": 110, "178000": 110, "179000": 110, "181000": 110, "238": 110, "182000": 110, "somme_maximale_mois_step": 110, "175312": 110, "228": [110, 130, 150], "312": 110, "175625": 110, "175937": 110, "176250": 110, "176562": 110, "176875": 110, "177187": 110, "177500": 110, "177812": 110, "178125": 110, "178437": 110, "178750": 110, "179062": 110, "179375": 110, "235": [110, 113, 138], "179687": 110, "180312": 110, "180625": 110, "180937": 110, "181250": 110, "181562": 110, "181875": 110, "182187": 110, "parisien": 110, "apprtement": 110, "\u00e9conomis": 110, "econom": 110, "eco": 110, "nbm": 110, "25862": 110, "65218705509": 110, "carri": 110, "professionnel": 110, "metr": [110, 188], "parisen": 110, "salair": [110, 204], "exam2016_valu": 110, "bascul": 110, "8000": 110, "offrir": 110, "surface_max": 110, "a40a30": 110, "2600": 110, "inflat": [110, 205], "egg": [110, 174], "somme_maximale_dicho": 110, "k_max": 110, "182199": 110, "99817640134": 110, "carnet": 110, "importun": 110, "impromptus": 110, "conson": 110, "adel": 110, "gerard": 110, "transforme_numero": 110, "0664342267": 110, "0646342267": 110, "0660342467": 110, "transforme_numero_enver": 110, "affront": 110, "9b3e94b6565": 110, "unorder": 110, "comparison": [110, 133, 135], "partial": [22, 111, 112, 131], "generate_xy": 111, "996890181837922": 111, "8750295096923186": 111, "264526460045277": 111, "324063943726332": 111, "718648422500299": 111, "052469543647318": 111, "442689562115705": 111, "861870829036456": 111, "13558433730903707": 111, "5754835901808546": 111, "59230695209076": 111, "6209924216651825": 111, "610357428256408": 111, "3202733390571373": 111, "678403330137792": 111, "96766236219644": 111, "427259745518597": 111, "385862058140737": 111, "273956381823456": 111, "938275166261537": 111, "calcule_exyxyx2": 111, "sx": 111, "sxy": 111, "sx2": 111, "523441805914873": 111, "850511796328412": 111, "88928454527569": 111, "98854258182378": 111, "calcule_ab": 111, "5446995618974346": 111, "859128128176218": 111, "generate_caty": 111, "cat": [111, 131, 139], "132157444058703": 111, "088324149707968": 111, "16315983779393228": 111, "9717657424738734": 111, "843197432779423": 111, "7204386278807904": 111, "89226869979884": 111, "16605748011543708": 111, "02903894820027486": 111, "5787816483863786": 111, "numero_cat": 111, "ic": 111, "convert_numpy": 111, "mc": 111, "15485572": 111, "37882494": 111, "37124634": 111, "77476221": 111, "03305199": 111, "92499253": 111, "14818418": 111, "09988478": 111, "yp": [111, 186], "0084452843428675": 111, "155449750270483": 111, "1132607428792447": 111, "897729973062269": 111, "7637316114791164": 111, "566787193134299": 111, "848567708215508": 111, "722503065860707": 111, "8043492141543047": 111, "675781652825997": 111, "histogram_cat": 111, "moyenne_cat": 111, "69914235934335": 111, "4591978296957873": 111, "080382539688736": 111, "induis": 111, "z_i": [111, 112, 131], "obs2": [111, 163], "7763568394002505e": 111, "bigm": 111, "00844528": 111, "08038254": 111, "07193726": 111, "15544975": 111, "45919783": 111, "69625192": 111, "11326074": 111, "65406291": 111, "89772997": 111, "81734743": 111, "76373161": 111, "69546622": 111, "cov": [111, 139, 179, 180], "62221004e": 111, "56972711e": 111, "24829301e": 111, "53176124e": 111, "77901369e": 111, "00966261e": 111, "92890933e": 111, "54535166e": 111, "40725030e": 111, "24510807e": 111, "66666667e": 111, "77777778e": 111, "88888889e": 111, "applymap": 111, "697": 111, "525": 111, "532": 111, "267": 111, "178": [111, 150, 172], "089": 111, "w_i": [111, 112], "obs3": 111, "829591905722086": 111, "2193824894893863": 111, "calcule_erreur": 111, "4723463712054069": 111, "100975199731273": 111, "categorical": 111, "outill": 111, "ensemble_aleatoir": 112, "x_m": 112, "regression_lineair": 112, "00144835": 112, "matrice_diagonal": 112, "w_1": [112, 189, 190], "w_n": [112, 189, 190], "beta_": [112, 134], "wx": 112, "wy": 112, "regression_lineaire_pondere": 112, "xt": 112, "01427573": 112, "reciprocal": 112, "calcule_z": 112, "01538305e": 112, "88235294e": 112, "32558140e": 112, "27272727e": 112, "53846154e": 112, "13636364e": 112, "05263158e": 112, "8971776057001": 112, "09487215": 112, "8229016016727": 112, "16379991": 112, "31983967417062": 112, "73034639": 112, "39132855434099": 112, "15204012": 112, "24844521352179": 112, "10443138": 112, "10481587527799": 112, "05258271": 112, "0856692693878": 112, "04297748": 112, "08332794594425": 112, "04131809": 112, "0800296132712": 112, "03867545": 112, "07493795090468": 112, "03459599": 112, "136": 112, "1726": 112, "6000000000004": 112, "1168": 112, "2374836735025": 112, "61874184": 112, "1163": 112, "7683647305184": 112, "38418237": 112, "1161": 112, "75688683": 112, "iteratively": 112, "reweighted": 112, "reprenon": [112, 149], "e_2": 112, "retomb": 112, "ressort": 112, "minor": 112, "atteign": 112, "0465": 112, "matmul": 112, "mismatch": [112, 171], "gufunc": 112, "signatur": 112, "escali": [113, 114, 131, 132], "0x1f893f9e518": 113, "014962888038782651": 113, "020462778257442693": 113, "022310859639508962": 113, "03078728731371605": 113, "03153252863972433": 113, "somme_diff": [113, 114], "y_k": [113, 114], "476": [113, 172], "2380000000092": 113, "56022222223197": 113, "distance_list": [113, 114], "list_x": [113, 114], "list_y": [113, 114], "custom": [113, 119], "494": 113, "7982222222412": 113, "711": 113, "6476814159435": 113, "552": [113, 114, 150], "0x1f893ea57b8": 113, "reproductibl": 113, "0710615624871": 113, "0x1f8943ece80": 113, "somme_diff_ab": 113, "difference_ab": 113, "optimise_ab": [113, 114], "recalcul": [113, 114, 200], "histogramme_y": 113, "somme_diff_histogramm": 113, "optimise_rapid": [113, 114], "4096814159292": 113, "40968141593424": 113, "contiendront": 113, "0x1f8944d3ba8": 113, "nuage2": 113, "0x1c0e33655f8": 114, "15754": 114, "105018618644": 114, "19898": 114, "600443365925": 114, "6383487080093": 114, "553": [114, 148, 168], "2184": 114, "8079894060775": 114, "0x1c0e4c6f208": 114, "5154656398129": 114, "7106930739271": 114, "0x1c0e4c90940": 114, "grav": 114, "delta_": 114, "782": 114, "somme_diff2": 114, "difference2": 114, "optimise2": 114, "628": 114, "y_2": 114, "y2_1": 114, "y2_2": 114, "13082": 114, "574312018376": 114, "574312018447": 114, "random_mat": [115, 116], "21542897": 115, "02478399": 115, "89552004": 115, "24733264": 115, "393163": 115, "40164738": 115, "32997878": 115, "70660631": 115, "20765567": 115, "43301488": 115, "m_1": [115, 116, 120], "build_m1": [115, 116], "26184685": 115, "41751593": 115, "53354327": 115, "34849608": 115, "96298222": 115, "51815696": 115, "58374784": 115, "71569523": 115, "12326482": 115, "v_x": [115, 116], "v_y": [115, 116], "mean_no_nan": [115, 116], "05543522": 115, "0564421": 115, "nanmean": [115, 116], "build_m2": [115, 116], "entourent": 115, "m_3": [115, 116], "fill_column": 115, "nlin": 115, "argsort": [115, 131], "reverse_ord": 115, "bmat": 115, "build_m3": [115, 116], "18717541": 115, "d3": [115, 116, 162], "16303767944946": 115, "990990757306854": 115, "calcul_norm": 115, "puc": [115, 116, 144], "oreil": [115, 116, 144], "experient": [115, 116], "repetit": [115, 116], "25531314": 115, "070392": 115, "57432808": 115, "73422968": 115, "43834865": 115, "07553875": 115, "49648148": 115, "11340377": 115, "28344822": 115, "90363643": 115, "90465816": 115, "88595361": 115, "28824424": 115, "05673836": 115, "37972659": 115, "28703801": 115, "97835736": 115, "49136146": 115, "70723528": 115, "34848088": 115, "10112512": 115, "1306255": 115, "94022724": 115, "91916954": 115, "96721215": 115, "14121786": 115, "35629971": 115, "99870181": 115, "48138722": 115, "00467304": 115, "ratio2": 115, "nerreur": [115, 116], "build_m3_just1": 115, "imin": 115, "imax": 115, "corrcoef": [115, 116], "979253": 115, "308262": 115, "616462": 115, "496": [115, 116, 130], "980323": 115, "790158": 115, "667422": 115, "497": [115, 116], "977415": 115, "050925": 115, "430873": 115, "980746": 115, "885168": 115, "995820": 115, "978955": 115, "935248": 115, "137125": 115, "56987627": 116, "87585938": 116, "21230699": 116, "85706677": 116, "32971056": 116, "31614371": 116, "99469359": 116, "63550262": 116, "90844194": 116, "84040783": 116, "48750338": 116, "92138266": 116, "59978536": 116, "22258934": 116, "72143302": 116, "02229479": 116, "52222862": 116, "1157862": 116, "97598417": 116, "01928312": 116, "09388639": 116, "plus_proch": 116, "colnan": 116, "plus_proche_rapid": 116, "amin": 116, "399": 116, "83806507": 116, "88020645836853": 116, "054794671768933": 116, "9707": 116, "2287": 116, "93113166": 116, "65407502": 116, "59161999": 116, "20763444": 116, "36123306": 116, "49474066": 116, "20767715": 116, "72341549": 116, "99591576": 116, "28602503": 116, "35006845": 116, "18103292": 116, "775306": 116, "15330721": 116, "44248685": 116, "80699951": 116, "70774305": 116, "74452936": 116, "59144759": 116, "22093401": 116, "35913762": 116, "46902292": 116, "02940671": 116, "50112628": 116, "06988804": 116, "66400287": 116, "02826212": 116, "6163169": 116, "98007237": 116, "7964768": 116, "978472": 116, "787724": 116, "693286": 116, "980944": 116, "399139": 116, "579552": 116, "979960": 116, "064428": 116, "893382": 116, "977117": 116, "492200": 116, "140280": 116, "981207": 116, "797778": 116, "785862": 116, "rond": [117, 207], "585786437626905": 117, "04987562112089": 117, "04023026006364461": 117, "613278941761477": 117, "table_alea_pol": 117, "2697993898932539": 117, "07781479211233774": 117, "104239515207136": 117, "7109081402403072": 117, "46932352351540807": 117, "3259610442266929": 117, "1743368223886739": 117, "2821629999494295": 117, "skip_": [117, 118], "list_tabl": [117, 118], "7403604958859722": 117, "mur": [117, 118, 189], "151393678876878": 117, "0883943109284333": 117, "2251498896276685": 117, "9591970274173125": 117, "8759281350069976": 117, "8362221630472657": 117, "7566611650530053": 117, "0002849316792242": 117, "5208215962264875": 117, "537577072452744": 117, "650373925673775": 117, "339568894819979": 117, "31652883529303466": 117, "256221251336387": 117, "diametr": 117, "5565818929001787": 117, "05896867240161785": 117, "5288969098327476": 117, "28733719348942466": 117, "6110699282390006": 117, "32241732345580165": 117, "14909553247181195": 117, "9356539992681199": 117, "026230694145464417": 117, "2908024901550055": 117, "4975323234658624": 117, "06918255935350293": 117, "60937258121247": 117, "16579629631884596": 117, "22654870937824634": 117, "12601838486539685": 117, "651232619461013": 117, "05440550117493803": 117, "25693188063963546": 117, "044795815889184576": 117, "07316443943516515": 117, "8533292769508105": 117, "0525413549133239": 117, "add_artist": [117, 118], "hexagonal": [117, 207, 208], "spiral": [117, 118], "improve_distrib": [117, 118], "pjp": [117, 118], "best_sol": [117, 118], "351": [117, 165], "16110855450954664": 117, "13158100390586172": 117, "2384176552949989": 117, "218691822411302": 117, "19838094003303594": 117, "2162723387696761": 117, "20826241454101815": 117, "350": 117, "2094900548253301": 117, "triangul": 117, "delaunay": 117, "voronoi": [117, 118], "voronoi_plot_2d": [117, 118], "vor": [117, 118], "triplot": 117, "simplic": 117, "points2": [117, 118], "vor2": [117, 118], "dela2": 117, "triangl": [117, 118, 205, 208], "\u00e9quilat\u00e9ral": [117, 118, 208], "peux": [117, 118], "points_in_circl": 117, "n_cluster": [117, 118], "copy_x": [117, 118, 134], "n_in": [117, 118], "n_job": [117, 118, 132, 134], "precompute_dist": [117, 118], "tol": [117, 118, 132, 134], "cluster_centers_": [117, 118], "distance_n_t": [117, 118], "22015129672480682": 117, "13834146640009876": 117, "mixtur": [117, 118], "gaussianmixtur": [117, 118], "gau": [117, 118], "means_": [117, 118], "gaussian": [117, 118], "21874003784217044": 117, "2c": 118, "908190224838399": 118, "7798369055014547": 118, "6047310701361788": 118, "538160002945912": 118, "7983390011407794": 118, "6871544213644984": 118, "4887075948495667": 118, "511831256978005": 118, "1962115931817596": 118, "6710676955082597": 118, "8642968594855169": 118, "32893230449174": 118, "500463237472049": 118, "1547646758902923": 118, "7606012466424747": 118, "019429938832147": 118, "6514056477386534": 118, "596586600954664": 118, "05123812953078399": 118, "05320587377518926": 118, "37467460315675805": 118, "4937702081221422": 118, "3485943522613466": 118, "6259118658008394": 118, "1764558984440392": 118, "6004143527243244": 118, "4008125902558497": 118, "052940751769248395": 118, "547095264138868": 118, "7525281574947777": 118, "6243952889602158": 118, "2784959002399452": 118, "16893417347025785": 118, "15965080092875694": 118, "5866949933059173": 118, "6062900542195173": 118, "43564615941411566": 118, "26135901810381923": 118, "2792244176019283": 118, "7961649730497629": 118, "28673576049151195": 118, "08784118387851514": 118, "2840288333247212": 118, "7893555701617381": 118, "6299236074366998": 118, "19575062032543844": 118, "facecolor": 118, "rectangulair": 118, "07797442236028274": 118, "17084871553555847": 118, "16055223380264586": 118, "22481137276979984": 118, "points_in_rectangl": 118, "19622641509433936": 118, "2016527778991591": 118, "14695957901204992": 118, "covid": [119, 125], "435": 119, "2322": 119, "642": 119, "3128": [119, 150], "3580": 119, "1041": 119, "4188": 119, "1251": 119, "695": 119, "452": 119, "1104": 119, "1105": 119, "1106": [119, 172], "1107": 119, "1108": 119, "donnees_artificiel": 119, "dayofyear": 119, "examen2021": 119, "dure": [119, 149, 150], "98965342710248": 119, "lifelin": 119, "kaplanmeierfitt": 119, "kmf": 119, "portail": 119, "propagation_n": 119, "propagation_vaccin": 119, "propagation_n_vaccin": 119, "prop": 119, "immunis": 119, "mesure_temps_fonct": 120, "10280692000000005": 120, "bc": [120, 150], "189998290": 120, "18042000": 120, "009560690999999987": 120, "009846866999999992": 120, "001004321000000008": 120, "n_op": 120, "m1_shap": 120, "m2_shap": 120, "185998326": 120, "n_ops_3": 120, "sh1": 120, "sh2": 120, "sh3": 120, "m1_m2m3": 120, "m1m2_m3": 120, "36084000": 120, "produit3": 120, "0011657070000000048": 120, "0011010209999999887": 120, "n_ops_4": 120, "sh4": 120, "m1_m2m3m4": 120, "m1m2_m3m4": 120, "m1m2m3_m4": 120, "11331640": 120, "produit4": 120, "000988687999999982": 120, "010446371000000027": 120, "008082993999999956": 120, "0008713240000000155": 120, "0009054390000000013": 120, "m_n": 120, "mm_i": 120, "verront": 120, "n_ops_n": 120, "unexpected": [120, 139, 151, 153, 171], "best_cost": 120, "best_pos": 120, "product_n": 120, "bot": 120, "0009734980000000349": 120, "0009873739999999031": 120, "9697854": 120, "n_ops_n_opt": 120, "product_n_opt": 120, "0010903469999999516": 120, "0009383259999999893": 120, "01018160299999991": 120, "calcu": 120, "surface_br": 121, "brique_optimal": 121, "surf": 121, "additionnel": 121, "brique_optimale_surplus": 121, "4471428571428575": 121, "4285714285714286": 121, "producteur": 121, "marchandis": 121, "surface_brique2": 121, "brique_optimale_surplus_deux_litr": 121, "surf1": 121, "surf2": 121, "6938095238095245": 121, "7857142857142858": 121, "maxxy": 122, "seg": 122, "tree3": 122, "rl": 122, "tree_recurs": 122, "all_seg": 122, "iter_seg": 122, "new_seg": 122, "tree3_al": 122, "re_rnd": 122, "rl_rnd": 122, "a3": [122, 194], "tree_recursive_al": 122, "tirage_al": 123, "n_ru": 123, "n_med": 123, "07629544": 123, "9432004": 123, "52035232": 123, "47051663": 123, "89432851": 123, "07652123": 123, "01653439": 123, "99436816": 123, "1499065": 123, "10758634": 123, "29317605": 123, "76729661": 123, "97237465": 123, "25573414": 123, "60399214": 123, "72086801": 123, "76951744": 123, "75725811": 123, "6663647": 123, "92848284": 123, "07308657": 123, "11122628": 123, "92539686": 123, "48536534": 123, "43820312": 123, "26151317": 123, "74683167": 123, "40646889": 123, "92033983": 123, "88312987": 123, "83198031": 123, "96466894": 123, "77179962": 123, "85889438": 123, "8461793": 123, "57370393": 123, "40531662": 123, "22456834": 123, "23536145": 123, "57466486": 123, "82197491": 123, "41002286": 123, "49221173": 123, "36141496": 123, "80702793": 123, "88495069": 123, "04168846": 123, "84550633": 123, "93752849": 123, "91062519": 123, "07690611": 123, "86261363": 123, "32681556": 123, "66757055": 123, "0931767": 123, "69200264": 123, "69223434": 123, "52616512": 123, "57965512": 123, "63777092": 123, "91082466": 123, "23438729": 123, "53420279": 123, "27127587": 123, "62954985": 123, "80840816": 123, "39845012": 123, "48835731": 123, "34532585": 123, "3555345": 123, "94993319": 123, "31340719": 123, "59626523": 123, "351522": 123, "19644616": 123, "00989466": 123, "51327456": 123, "70491577": 123, "52817942": 123, "25799275": 123, "assert_allclos": 123, "test_dist": 123, "tolist": [123, 156, 171], "nm": [123, 200], "plus_proche_medecin": 123, "p_min": 123, "p_max": 123, "test_grill": 123, "map_grille_indic": 123, "xi": [123, 132], "test_map": 123, "pairwise_distance_grill": 123, "gy": 123, "test_distance_grill": 123, "415": 123, "470": 123, "8018622000236064": 123, "8201483000302687": 123, "8459657999919727": 123, "8035789999994449": 123, "8155568999936804": 123, "026652099972125143": 123, "01595849997829646": 123, "01231670001288876": 123, "012164799962192774": 123, "011980499955825508": 123, "plus_proche_medecin_grill": 123, "mg": 123, "co\u00efncident": 123, "irait": 123, "closest": 123, "abcdefghuij": 124, "code_def": 124, "0010": 124, "0011": 124, "0100": [124, 134], "0101": 124, "0110": [124, 138], "0111": 124, "ag": 124, "00000110": 124, "correpond": 124, "first_let": 124, "10010001": 124, "code_def_invers": 124, "decode_rapid": 124, "coding35": 124, "11100": 124, "11101": 124, "11110": 124, "ah": 124, "00011100": 124, "which_coding": 124, "222222222222222": 124, "3333333333333335": 124, "bgbb": 124, "coding235": 124, "011100101": 124, "first_letter": 124, "bjkst": 125, "sird": 125, "cass": [125, 177, 189, 197, 198], "mors": [125, 210], "homomorphic": 125, "craig": 125, "gentry": 125, "machain": 127, "spectrum": 128, "ssa": [22, 128], "make_blob": 130, "\u00e9court": 130, "remet": 130, "filterwarning": [130, 133], "cluster_std": 130, "center": 130, "rgbyc": 130, "sag": 130, "658": 130, "metton": [130, 144], "evaluate_model": 130, "_time_train": 130, "_time_test": 130, "_scor": 130, "multiclass": [130, 141, 142], "onevsoneclassifi": [130, 141], "onevsrestclassifi": [130, 141, 142], "ovo": 130, "ovr": 130, "lr_time_train": 130, "2209448000003249": 130, "lr_time_test": 130, "009104000000206725": 130, "lr_scor": 130, "2086589999998978": 130, "005245500000000902": 130, "654": [130, 170, 171], "05842000000029657": 130, "0010207000000264088": 130, "032755": 130, "001730": 130, "022686": 130, "001637": 130, "324123": 130, "032629": 130, "812": 130, "076139": 130, "001591": 130, "808": 130, "730089": 130, "036648": 130, "053406": 130, "000859": [130, 149], "508": [130, 150], "984762": 130, "096167": 130, "444": 130, "116836": 130, "001022": 130, "468": 130, "537234": 130, "154609": 130, "110220": 130, "001036": 130, "595010": 130, "209428": 130, "328": 130, "122475": 130, "000956": 130, "336": 130, "022290": 130, "437165": 130, "280": [130, 160], "150593": 130, "000868": 130, "rgb": [130, 208], "009756": 130, "003354": 130, "980000": 130, "016191": 130, "001600": 130, "248614": 130, "011291": 130, "636000": 130, "092591": 130, "001695": 130, "568000": 130, "834381": 130, "067650": 130, "524444": 130, "376624": 130, "004853": 130, "466667": 130, "502573": 130, "099040": 130, "460000": 130, "721085": 130, "004124": 130, "436923": 130, "613464": 130, "178248": 130, "397647": 130, "990700": 130, "005284": 130, "342353": 130, "057976": 130, "297401": 130, "375238": 130, "337764": 130, "006087": 130, "340952": 130, "861960": 130, "479451": 130, "316800": 130, "269823": 130, "008297": 130, "269600": 130, "rg": 130, "cy": 130, "std_": 130, "031314": 130, "243204": 130, "584626": 130, "005322": 130, "560": 130, "901009": 130, "275102": 130, "527490": 130, "008637": 130, "790364": 130, "245218": 130, "538992": 130, "005838": 130, "985556": 130, "258749": 130, "459469": 130, "005051": 130, "154060": 130, "258028": 130, "603545": 130, "005316": 130, "031245": 130, "208715": 130, "529591": 130, "005976": 130, "nf": [130, 186], "042428": 130, "264521": 130, "320": [130, 166, 175], "491270": 130, "005313": 130, "325670": 130, "225577": 130, "740": 130, "760807": 130, "005378": 130, "728": 130, "953030": 130, "214104": 130, "865434": 130, "005122": 130, "952": 130, "404396": 130, "234881": 130, "967371": 130, "009054": 130, "988": 130, "818875": 130, "287795": 130, "898213": 130, "005280": 130, "lbfg": [130, 137, 139, 140], "df5": 130, "285135": 130, "017950": 130, "600000": [130, 136], "042483": 130, "002003": 130, "520000": 130, "895627": 130, "189201": 130, "302857": 130, "168547": 130, "004620": 130, "251429": 130, "890931": 130, "605583": 130, "196667": 130, "367130": 130, "013213": 130, "404424": 130, "189003": 130, "499927": 130, "012866": 130, "105882": 130, "166851": 130, "902685": 130, "132727": 130, "772086": 130, "014063": 130, "083636": 130, "347375": 130, "720673": 130, "901161": 130, "043177": 130, "084444": 130, "135": 130, "rgcy": 130, "jeu_x_y": 130, "ncl": 130, "resx": 130, "resy": 130, "decisiontreeclassifi": [130, 139, 141], "22it": 130, "dt_time_train": 130, "dt_time_test": 130, "dt_scor": 130, "008709": 130, "003290": 130, "014272": 130, "002550": 130, "001384": 130, "001313": 130, "050579": 130, "007302": 130, "800000": [130, 136], "025281": 130, "002580": 130, "733333": 130, "001434": 130, "001112": 130, "013768": 130, "032940": 130, "001779": 130, "320000": 130, "001064": 130, "000719": [130, 150], "185524": 130, "020908": 130, "046669": 130, "001958": 130, "085714": 130, "001124": 130, "000627": 130, "292794": 130, "039437": 130, "311111": 130, "083591": 130, "003007": 130, "111111": 130, "001478": 130, "000881": 130, "rgycbp": 130, "njeu": 130, "for\u00eat": [131, 132], "generate_dat": 132, "param\u00eatr": 132, "_depth": 132, "decisiontreeregressor": [131, 132], "decisiontre": 132, "clr": [132, 133, 137, 139, 140, 141, 142], "repr\u00e9sentat": 132, "randomforestregressor": [131, 132, 134, 149], "randomforest": [22, 132], "extact": 132, "axarr": 132, "sharex": [132, 156], "test_siz": [132, 148], "r2_scor": [132, 134, 139, 144, 146, 147, 148, 149, 150], "min_samples_split": 132, "overfitt": 132, "pl": [132, 136], "521566": 132, "525835": 132, "534421": 132, "602039": 132, "585866": 132, "pivx": 132, "pivy": 132, "plot_wirefram": 132, "neural_network": [132, 141, 149], "mlpregressor": [132, 149], "hidden_layer_siz": [132, 141], "_multilayer_perceptron": [132, 149], "convergencewarning": [132, 137, 139, 140], "stochastic": 132, "reached": [132, 137, 139, 140], "hasn": 132, "converged": [132, 138], "yet": 132, "18it": 132, "grid_search": 132, "hyperopt": 132, "jackknif": 132, "resampling": 132, "infinitesimal": 132, "randomforestregressorifittedrandomforestregressor": 132, "xgbregressor": [131, 132], "clrx": 132, "base_scor": 132, "boost": 132, "colsample_bylevel": 132, "colsample_bynod": 132, "colsample_bytre": 132, "early_stopping_round": 132, "enable_categorical": 132, "eval_metric": 132, "feature_typ": 132, "grow_policy": 132, "importance_typ": 132, "interaction_constraint": 132, "learning_rat": 132, "max_bin": 132, "max_cat_threshold": 132, "max_cat_to_onehot": 132, "max_delta_step": 132, "max_leav": 132, "min_child_weight": 132, "monotone_constraint": 132, "multi_strategy": 132, "num_parallel_tre": 132, "xgbregressorifittedxgbregressor": 132, "psx": 132, "sk": [132, 181, 182], "xg": 132, "conviendr": 133, "retravaill": 133, "fresqu": 133, "classifi": [22, 133, 139], "_imag": 133, "sphx_glr_plot_classifier_comparison_001": 133, "lda": 133, "listedcolormap": 133, "plot_clf_2cl": 133, "x_min": 133, "x_max": 133, "y_min": 133, "y_max": 133, "xx": 133, "yy": 133, "imshow": [133, 174], "interpol": 133, "extent": 133, "linetyp": 133, "paired": 133, "set_xtick": 133, "set_ytick": 133, "kneighborsclassifi": [133, 185, 186], "kneighborsclassifierifittedkneighborsclassifi": [133, 185], "knn": [133, 143, 144, 145, 146, 147, 148], "svcifittedsvc": 133, "s\u00e9duis": 133, "captur": 133, "xext": 133, "13422662": 133, "08574201": 133, "1199182": 133, "52645729": 133, "2371076": 133, "plot_clf_2classes_poly": 133, "devenu": [133, 194], "vorono\u00ef": 133, "singular": [135, 150], "methodology": 135, "automated": 135, "outli": 135, "y_t": 135, "epsilon_t": [131, 135], "bruit1": 135, "24857848": 135, "14896109": 135, "81023497": 135, "85981186": 135, "04023266": 135, "bruit2": 135, "0004": [135, 150, 174], "00542873": 135, "19959898": 135, "04290419": 135, "18763969": 135, "60007673": 135, "autocorr\u00e9logramm": 135, "_d": 135, "005429": 135, "199599": 135, "042904": 135, "187640": 135, "600077": 135, "tsa": 135, "tsatool": 135, "detrend": 135, "notrend": 135, "438347": 135, "753363": 135, "491601": 135, "736482": 135, "053695": 135, "stattool": 135, "acf": 135, "autor\u00e9gress": 135, "pacf": 135, "pcor": 135, "lagged_t": 135, "lag": 135, "dim": [135, 156], "13700254": 135, "06081016": 135, "89449208": 135, "23733857": 135, "32045675": 135, "vh": 135, "recompos": 135, "reconstruit": 135, "850": 135, "consid\u00e9rent": 135, "off": 135, "ellipticenvelop": 135, "env": 135, "support_fract": 135, "ellipticenvelopeifittedellipticenvelop": 135, "contigu": 135, "incrimin": 135, "outp": 135, "decision_funct": [135, 137, 139, 140, 142], "pca": [136, 186], "preprocessing": [136, 137, 139, 140, 149, 150], "normaliz": [136, 149, 150, 165, 209, 210], "n_component": [136, 186], "pcapc": 136, "explained_variance_ratio_": 136, "louch": 136, "components_": 136, "6497": [136, 149], "443235": 136, "056034": 136, "525319": 136, "744574": 136, "994697": 136, "757804": 136, "035034": 136, "749400": 136, "521855": 136, "002999": 136, "009000": 136, "987110": 136, "038000": 136, "992340": 136, "047000": 136, "118": 136, "994890": 136, "065000": 136, "996990": 136, "611000": 136, "289": 136, "440": 136, "038980": 136, "mean_val": 136, "xn": [136, 149], "napres": 136, "nde": [136, 145], "alcool": [136, 150], "acid": 136, "dioxyd": 136, "semblent": 136, "v3": 136, "lmplot": 136, "hu": [136, 147], "truncat": 136, "fit_reg": 136, "nle": [136, 137, 146], "graphd": 136, "kdeplot": 136, "thresh": 136, "cmx": 136, "d\u00e9grag": 136, "get_cmap": 136, "plasm": 136, "cnorm": 136, "vmin": 136, "vmax": 136, "scalar": 136, "scalarmapp": 136, "to_rgb": 136, "vaudr": 136, "d\u00e9tach": 136, "_logistic": [137, 139, 140], "474": [137, 139, 140], "failed": [137, 139, 140], "lim": [22, 137, 139, 140, 185], "increas": [137, 139, 140], "shown": [137, 139, 140], "logistic": [137, 139, 140, 149], "n_iter_": [137, 139, 140], "_check_optimize_result": [137, 139, 140], "1211": 137, "classes_": [137, 140, 141, 142], "confi": 137, "1389208": 137, "0757083": 137, "6765228": 137, "53844502": 137, "62378271": 137, "71080774": 137, "15300558e": 137, "58469944e": 137, "88519638e": 137, "11480362e": 137, "63369265e": 137, "99536631e": 137, "32066047e": 137, "26793395e": 137, "76234016e": 137, "32376598e": 137, "38738587e": 137, "76126141e": 137, "dfsc": [137, 140], "138921": 137, "075708": 137, "676523": 137, "914141": 137, "994176": 137, "voul": [137, 204], "changeon": 137, "cloch": 137, "dfpr": [137, 140], "n\u00e9chel": [137, 140], "roc_auc_scor": [137, 140, 142], "fpr0": [137, 140], "tpr0": [137, 140], "thresholds0": [137, 140], "pos_label": [137, 140], "drop_intermediat": [137, 140, 142], "1528": 137, "absconc": 137, "dftp": 137, "002488": 137, "999994": 137, "nen": [137, 146], "aucf": [137, 140], "5f": [137, 140], "ncet": 137, "under": 137, "curv": 137, "n1": 137, "yt": 137, "9922904817101114": 137, "fontion": 137, "trapz": 137, "m\u00e9triqu": [137, 147], "recall": 137, "247385": 137, "000000e": 137, "396645": 137, "247537": 137, "998232e": 137, "396841": 137, "discrete_model": 138, "048414": 138, "summary2": [138, 150], "mle": 138, "dependent": [22, 138, 150], "913": 138, "493": 138, "7476": 138, "4872": [138, 150], "1515": 138, "4861": 138, "2717": 138, "llr": 138, "4541": [138, 150], "5981": 138, "7511": 138, "1572": 138, "3716": 138, "9995": 138, "3771": 138, "3306": [138, 150], "4126": 138, "7492": 138, "1280": 138, "5507": 138, "1210": 138, "4616": 138, "9599": 138, "1246": 138, "0600": 138, "0756": 138, "0379": 138, "0069": 138, "2422": 138, "7390": 138, "9560": 138, "2758": [138, 150], "4926": 138, "9854": 138, "0505": 138, "0134": 138, "7724": 138, "0002": [138, 150, 174], "0768": 138, "0243": 138, "0632": 138, "0050": 138, "6896": 138, "0534": 138, "0730": 138, "2093": 138, "9806": 138, "7610": 138, "2610": 138, "7417": 138, "9800": 138, "9204": 138, "6624": 138, "8210": 138, "8918": 138, "0237": 138, "6857": 138, "8983": 138, "8853": 138, "4150": 138, "3656": 138, "0008": 138, "1733": 138, "6567": 138, "x_train2": 138, "11120776": 138, "79383309": 138, "83313405": 138, "89025431": 138, "14615898": 138, "npar": 138, "nlogist": 138, "nselon": 138, "color_train": 139, "color_test": 139, "cal": [131, 139, 142, 143], "accuracy_scor": 139, "4793846153846154": 139, "x_train_whit": 139, "y_train_whit": 139, "x_train_red": 139, "y_train_red": 139, "clr_whit": 139, "clr_red": 139, "x_test_whit": 139, "y_test_whit": 139, "x_test_red": 139, "y_test_red": 139, "acc_whit": 139, "acc_red": 139, "47843775427176566": 139, "5984848484848485": 139, "acc2": 139, "5076923076923077": 139, "sklearnercategory": 139, "opt\u00e9": 139, "pla\u00eet": 139, "cat_col": 139, "baseestimator": [134, 139], "classifiermixin": 139, "colnameind": 139, "_get_cat": 139, "hasattr": [139, 149, 185], "_filter_cat": 139, "sample_weight": [134, 139], "pragm": 139, "xcat": 139, "ycat": 139, "scat": 139, "_any_predict": 139, "notimplementederror": [139, 155], "getattr": [139, 170, 171, 185], "pylint": 139, "disabl": [139, 170, 171, 172, 185], "e1136": 139, "regressor": [139, 149], "accuracy": [131, 139], "_estimator_typ": 139, "scoring": [139, 144], "new_x_train": 139, "x27": [131, 134, 139, 141, 142, 144, 146, 150, 185], "sklearnercategoryinot": 139, "fittedsklearnercategory": 139, "logisticregressionlogisticregress": [139, 141, 142], "new_x_test": 139, "5058461538461538": 139, "colorart": 139, "xart": 139, "yart": 139, "new_x_art": 139, "pred2": 139, "essayson": 139, "acc1": 139, "6098461538461538": 139, "5981538461538461": 139, "randomforestclassifi": [139, 141, 142], "7003076923076923": 139, "7046153846153846": 139, "play": 139, "0x7f1ce528ec20": 139, "pipelineifittedpipelin": 139, "selectkbestselectkbest": 139, "svcsvc": 139, "591782": 140, "745667": 140, "874864": 140, "381441": 140, "017183": 140, "1545": 140, "d\u00e9cidon": 140, "subtil": 140, "list_cl": 140, "pred_": 140, "994822102226496": 140, "9165399409607299": 140, "thi": 140, "dfa": 140, "879005": 140, "250000": 140, "925869": 140, "007364": 140, "913118": 140, "919359": 140, "92586": 140, "932542": 140, "938355": 140, "ndu": [140, 146], "score_ab": 140, "count_sum": 140, "394": 140, "912383": 140, "997475": 140, "395": 140, "204326": 140, "1227": 140, "561302": 140, "999186": 140, "671458": 140, "dfscsumab": 140, "dfscsum": 140, "liblinear": [141, 142], "07692307692308": 141, "332": 141, "dfconf": 141, "onevsrestclassifierifittedonevsrestclassifi": [141, 142], "95384615384615": 141, "onevsoneclassifierifittedonevsoneclassifi": 141, "138461538461534": 141, "524": 141, "decisiontreeclassifierifitteddecisiontreeclassifi": 141, "323076923076925": 141, "decisiontreeclassifierdecisiontreeclassifi": 141, "35384615384615": 141, "58461538461538": 141, "randomforestclassifierifittedrandomforestclassifi": [141, 142], "2923076923077": 141, "randomforestclassifierrandomforestclassifi": [141, 142], "41538461538461": 141, "mlpclassifi": 141, "mlpclassifierifittedmlpclassifi": 141, "800000000000004": 141, "mlpclassifiermlpclassifi": 141, "foudroi": 141, "stackmult": 142, "70769230769231": 142, "339": 142, "198": [142, 186], "527": 142, "rfc": 142, "9846153846154": 142, "rf_train": 142, "rfc_y": 142, "rf_test": 142, "83076923076922": 142, "fpr_lr": 142, "tpr_lr": 142, "th_lr": 142, "fpr_rfc": 142, "tpr_rfc": 142, "th_rfc": 142, "fpr_rfc_y": 142, "tpr_rfc_y": 142, "th_rfc_y": 142, "auc_lr": 142, "auc_rfc": 142, "auc_rfc_y": 142, "7269546464802059": 142, "6626763197852255": 142, "6701197104064432": 142, "rf": [134, 142], "nmodel": 142, "pr\u00e9dicteur": 142, "make_pipelin": [142, 150], "5556820682740744": 142, "7318154142418192": 142, "7349919877544187": 142, "partinent": 142, "rf_train_bin": 142, "y_train_bin": 142, "rf_test_bin": 142, "y_test_bin": 142, "fpr_rfc_bin": 142, "tpr_rfc_bin": 142, "th_rfc_bin": 142, "auc_rfc_bin": 142, "7731918190932655": 142, "stackingclassifi": 142, "ovrlr": 142, "_split": 142, "737": 142, "populated": 142, "member": [142, 191, 192], "less": 142, "n_split": [142, 144, 148], "stackingclassifierifittedstackingclassifi": 142, "final_estimator": 142, "fpr_pip": 142, "tpr_pip": 142, "th_pip": 142, "auc_pip": 142, "7196235911146174": 142, "escamot": 142, "092": [143, 144], "9970": [143, 144], "075": [143, 144], "9980": [143, 144, 150], "exclut": 143, "n_neighbor": [143, 144, 145, 146, 147, 148], "kneighborsregressor": [143, 144, 145, 146, 147, 148, 149], "kneighborsregressorifittedkneighborsregressor": [143, 144, 145, 147, 148], "cross_val_scor": [134, 144, 149], "83897083": 144, "4670711": 144, "59014921": 144, "38119203": 144, "77196458": 144, "make_scor": 144, "mean_squared_error": [134, 144], "21615385": 144, "21230769": 144, "27328714": 144, "14857583": 144, "13702848": 144, "cross_validat": 144, "return_train_scor": [144, 146], "fit_tim": 144, "01611519": 144, "01256323": 144, "01422715": 144, "01552773": 144, "01151872": 144, "score_tim": 144, "0266242": 144, "0449729": 144, "04643941": 144, "03146887": 144, "03442144": 144, "test_r2": 144, "test_e2": 144, "023381240522471147": 144, "\u00e9ton": 144, "r\u00e9execut": 144, "05359981564444394": 144, "02825642": 144, "01596737": 144, "01639652": 144, "01254725": 144, "00996113": 144, "03756237": 144, "05450106": 144, "05501556": 144, "0289607": 144, "0300467": 144, "suspect": 144, "miracul": 144, "stratifiedkfold": 144, "01946974": 144, "01295662": 144, "01164722": 144, "01231718": 144, "01509309": 144, "03926373": 144, "03318691": 144, "03969431": 144, "04624486": 144, "04102969": 144, "07101199": 144, "04884618": 144, "06402385": 144, "06367173": 144, "12013179": 144, "81769231": 144, "80076923": 144, "80908391": 144, "80985373": 144, "85527329": 144, "nn": [144, 145, 171], "6492": 144, "6493": 144, "6494": 144, "6495": 144, "6496": 144, "1599": [144, 150], "1598": 144, "gridsearchcv": [134, 144, 146], "cvgrid": 144, "param_grid": [134, 144, 146], "92053": 144, "response_method": 144, "gridsearchcvifittedgridsearchcv": [134, 144, 146], "kneighborsregressorkneighborsregressor": [144, 146], "cv_results_": [144, 146], "mean_fit_tim": 144, "01401343": 144, "std_fit_tim": 144, "00290775": 144, "mean_score_tim": 144, "03055172": 144, "std_score_tim": 144, "00386653": 144, "split0_test_r2": 144, "03977834": 144, "split1_test_r2": 144, "0196276": 144, "split2_test_r2": 144, "01542904": 144, "split3_test_r2": 144, "05962735": 144, "split4_test_r2": 144, "06669616": 144, "mean_test_r2": 144, "0402317": 144, "std_test_r2": 144, "02057409": 144, "rank_test_r2": 144, "split0_test_e2": 144, "79384615": 144, "split1_test_e2": 144, "77846154": 144, "split2_test_e2": 144, "77213241": 144, "split3_test_e2": 144, "80677444": 144, "split4_test_e2": 144, "81447267": 144, "mean_test_e2": 144, "79313744": 144, "std_test_e2": 144, "01611369": 144, "rank_test_e2": 144, "best_estimator_": [134, 144], "nearestneighbor": 145, "nearestneighborsifittednearestneighbor": 145, "kneighbor": [145, 185], "note_proch": 145, "dif": 145, "ndiff\u00e9rent": 145, "abs_diff": 145, "kde": [145, 147, 149], "ax_marg_y": [145, 147, 149], "rassur": 145, "6152070186239803": 145, "df_al": 146, "fitting": [134, 146], "totalling": [134, 146], "param_n_neighbor": 146, "train_scor": 146, "mean_train_scor": 146, "test_scor": 146, "mean_test_scor": 146, "df_scor": 146, "2763": 147, "4504": 147, "1063": 147, "2238": 147, "6118": 147, "nvaleur": 147, "ax_marg_x": 147, "5452307692307692": 147, "mean_absolute_error": 147, "052827181324763384": 147, "0033815067443303537": 147, "ys": [147, 148, 186], "ys2": [147, 148], "666667": [147, 148], "325153": 147, "1575": 147, "357460": 147, "2146": 147, "321528": 147, "330456": 147, "237179": 147, "263158": 148, "1585": 148, "348896": 148, "2134": 148, "328960": 148, "261": [148, 150], "818": [148, 185], "319071": 148, "142": [148, 150, 172], "359155": 148, "stratifiedshufflespl": 148, "train_index": 148, "test_index": 148, "4352": [148, 150], "2145": 148, "489655": 148, "706": 148, "1432": 148, "493017": 148, "936": 148, "492632": 148, "356": 148, "492393": 148, "496124": 148, "invidivu": 148, "15256811411591387": 148, "yn": 149, "x_train_norm": [149, 150], "x_test_norm": [149, 150], "x_norm": 149, "fit_transform": [149, 150, 186], "regr": 149, "pprint": 149, "_bay": 149, "ardregress": 149, "_hub": 149, "huberregressor": 149, "_bas": [149, 185], "_passive_aggress": 149, "passiveaggressiveregressor": 149, "_quantil": 149, "quantileregressor": 149, "_stochastic_gradient": 149, "sgdregressor": 149, "_theil_sen": 149, "theilsenregressor": 149, "_ransac": 149, "ransacregressor": 149, "_glm": 149, "glm": 149, "poissonregressor": 149, "gammaregressor": 149, "tweedieregressor": 149, "_forest": 149, "extratreesregressor": 149, "_bagging": 149, "baggingregressor": 149, "_gb": 149, "gradientboostingregressor": [131, 149], "_weight_boosting": 149, "adaboostregressor": 149, "_voting": 149, "votingregressor": 149, "_stacking": 149, "stackingregressor": 149, "_hist_gradient_boosting": 149, "gradient_boosting": 149, "histgradientboostingregressor": 149, "_regress": 149, "radiusneighborsregressor": 149, "score_model": 149, "xtr": 149, "xte": 149, "ytr": 149, "yte": 149, "15264869419166682": 149, "0747132999999849": 149, "17989904732301487": 149, "029094200000145065": 149, "06283962040801283": 149, "022322499999972933": 149, "008293681864454783": 149, "019755700000132492": 149, "29442406131949195": 149, "6061727999999675": 149, "09980597599411645": 149, "2597002999996221": 149, "0013198388054543875": 149, "09024569999974119": 149, "00011329963875650328": 149, "02906749999965541": 149, "00012663753861930083": 149, "06156760000021677": 149, "4779574483287953": 149, "056004900000062": 149, "4994834890638471": 149, "7028706000000966": 149, "41813406357742": 149, "2051542999997764": 149, "3223761613299607": 149, "173846099999992": 149, "20700608833439227": 149, "6709999999998217": 149, "4239913847044323": 149, "7730876000000535": 149, "18152755024686895": 149, "06760649999978341": 149, "0004093191012661812": 149, "708230199999889": 149, "19175110270945106": 149, "130972700000257": 149, "294424": 149, "606173": 149, "062840": 149, "022322": 149, "000409": 149, "708230": 149, "000127": 149, "061568": 149, "000113": 149, "029067": 149, "001320": 149, "090246": 149, "008294": 149, "019756": 149, "099806": 149, "259700": 149, "152649": 149, "074713": 149, "179899": 149, "029094": 149, "181528": 149, "067606": 149, "191751": 149, "130973": 149, "207006": 149, "671000": 149, "322376": 149, "173846": 149, "418134": 149, "205154": 149, "423991": 149, "773088": 149, "477957": 149, "056005": 149, "499483": 149, "702871": 149, "ha": [149, 210], "sv": 149, "ransac": 149, "estimator_": 149, "3658125914901369": 149, "score_model_cross": 149, "1799448611096674": 149, "16609433123462292": 149, "20072693380863527": 149, "mas": 149, "16445120603440527": 149, "15765403941480316": 149, "1786143072062636": 149, "435193799999979": 149, "047846299999946496": 149, "8998543024559884": 149, "5295972496836714": 149, "08733290068040933": 149, "13489810000010038": 149, "00973904451751757": 149, "004417086935930126": 149, "01816079178339436": 149, "11661329999969894": 149, "3139016667645712": 149, "41907116748283557": 149, "224530428533247": 149, "356290799999897": 149, "4384892594797405": 149, "400989908758083": 149, "1372714492625668": 149, "0156056000000717": 149, "0011212946218149167": 149, "00022109795646318986": 149, "0020054507493099116": 149, "3450553999996373": 149, "0005558618017731165": 149, "0021320248191363245": 149, "00030404381558213345": 149, "25818170000002283": 149, "0005670558820739524": 149, "002194268482211603": 149, "0003060535183355695": 149, "3232327999999143": 149, "5150920905590446": 149, "48820834539223157": 149, "5338810535848475": 149, "26701920000005": 149, "43686266293982196": 149, "401753167463089": 149, "4758920210408679": 149, "2353933999997935": 149, "18291148330046114": 149, "15479217393907074": 149, "22140473381847336": 149, "640226099999836": 149, "41442261067915653": 149, "3888441812635889": 149, "43299359267487436": 149, "9275103999998464": 149, "1653286657553436": 149, "0875423648134045": 149, "19788204011638": 149, "1673464000000422": 149, "0008592314579911386": 149, "002575734438727606": 149, "00030815848198539886": 149, "3217153999999027": 149, "438489": 149, "400990": 149, "137271": 149, "015606": 149, "899854": 149, "529597": 149, "087333": 149, "134898": 149, "313902": 149, "419071": 149, "224530": 149, "356291": 149, "002576": 149, "000308": 149, "321715": 149, "000567": 149, "002194": 149, "000306": 149, "323233": 149, "000556": 149, "002132": 149, "000304": 149, "258182": 149, "001121": 149, "000221": 149, "002005": 149, "345055": 149, "009739": 149, "004417": 149, "018161": 149, "116613": 149, "164451": 149, "157654": 149, "178614": 149, "435194": 149, "165329": 149, "087542": 149, "197882": 149, "167346": 149, "179945": 149, "166094": 149, "200727": 149, "047846": 149, "182911": 149, "154792": 149, "221405": 149, "640226": 149, "414423": 149, "388844": 149, "432994": 149, "927510": 149, "436863": 149, "401753": 149, "475892": 149, "235393": 149, "515092": 149, "488208": 149, "533881": 149, "267019": 149, "nvalid": 149, "\u00e9vinc": 149, "prendront": 150, "polynomialfeatur": 150, "r2t": 150, "r2e": 150, "tt": 150, "1909065078664849": 150, "16570749381482386": 150, "02195639999990817": 150, "31686272332465504": 150, "2634484656108902": 150, "16658860000006825": 150, "4117084105383497": 150, "446755311176299": 150, "0382120000001578": 150, "5940872457783092": 150, "3926": 150, "677572477097": 150, "8583189999999377": 150, "r2_train": 150, "r2_test": 150, "021956": 150, "190907": 150, "165707": 150, "166589": 150, "316863": 150, "263448": 150, "038212": 150, "411708": 150, "446755": 150, "858319": 150, "594087": 150, "677572": 150, "continuent": 150, "napprentissag": 150, "ntest": 150, "get_xax": [150, 174], "polynomialfeatures__degre": 150, "\u00e9gar": 150, "surpr": 150, "poly": 150, "poly_feat_train": 150, "poly_feat_test": 150, "10768": 150, "5223": 150, "11268": 150, "3493": 150, "5307": 150, "4795": 150, "52557": 150, "874": 150, "2126": 150, "1866": 150, "6100": 150, "4683": 150, "6396": 150, "1996": 150, "4533": 150, "6248": 150, "2438": 150, "1175": 150, "6865": 150, "4924": 150, "4856": 150, "9147": 150, "2593": 150, "4802": 150, "1057": 150, "9383": 150, "413": 150, "8911": 150, "x3": [150, 160], "2205": 150, "9788": 150, "8670": 150, "0620": 150, "2311": 150, "7900": 150, "1457": 150, "7859": 150, "1556": 150, "8763": 150, "8809": 150, "1723": 150, "x5": 150, "1219": 150, "9140": 150, "760": 150, "0849": 150, "6050": 150, "1086": 150, "2710": 150, "0291": 150, "270": 150, "x6": 150, "0684": 150, "8318": 150, "1496": 150, "9873": 150, "x7": 150, "6122": 150, "6785": 150, "9263": 150, "0541": 150, "8085": 150, "0328": 150, "x8": 150, "1621": 150, "721": [150, 174], "4602": 150, "2479": 150, "0246": 150, "3036": 150, "1752": 150, "3890": 150, "x9": 150, "6719": 150, "5043": 150, "6294": 150, "5291": 150, "9104": 150, "5667": 150, "x10": 150, "213": 150, "6188": 150, "172": 150, "6441": 150, "2373": 150, "2160": 150, "0806": 150, "124": [150, 170, 171], "8429": 150, "x11": 150, "274": [150, 185], "6811": 150, "3731": 150, "9381": 150, "4241": 150, "x12": 150, "0924": 150, "1860": 150, "4775": 150, "6331": 150, "4534": 150, "6449": 150, "x13": 150, "0448": 150, "3410": 150, "4266": 150, "1538": 150, "7320": 150, "8216": 150, "x14": 150, "2454": 150, "2389": 150, "8850": 150, "3762": 150, "544": 150, "1614": 150, "205": 150, "6706": 150, "x15": 150, "3959": 150, "0911": 150, "1136": 150, "9096": 150, "7441": 150, "9523": 150, "x16": 150, "4367": 150, "2643": 150, "2290": [150, 187], "8189": 150, "1144": 150, "9447": 150, "1447": 150, "8180": 150, "3943": 150, "8122": 150, "3651": 150, "8421": 150, "x18": 150, "3144": 150, "5557": 150, "5784": 150, "7580": 150, "1291": 150, "1023": 150, "2972": 150, "2161": 150, "8289": 150, "2296": 150, "9691": 150, "7644": 150, "x20": 150, "5729": 150, "0106": 150, "3123": 150, "247": 150, "7314": 150, "774": 150, "8773": 150, "x21": 150, "1261": 150, "0152": 150, "4293": 150, "1530": 150, "0912": 150, "3434": 150, "x22": 150, "4573": 150, "1357": 150, "9202": 150, "153": 150, "6952": 150, "2193": 150, "x23": 150, "1256": 150, "2263": 150, "1979": [150, 204], "4050": 150, "6346": 150, "5257": 150, "5136": 150, "7684": 150, "2624": 150, "3158": 150, "x24": 150, "2503": 150, "6940": 150, "1629": 150, "0043": 150, "5369": 150, "689": 150, "9019": 150, "5697": 150, "2899": 150, "x25": 150, "5840": 150, "4970": 150, "1834": 150, "578": 150, "0621": 150, "1060": 150, "x26": 150, "6503": 150, "3193": 150, "4276": 150, "6479": 150, "5207": 150, "1284": 150, "1880": 150, "8729": 150, "14887": 150, "5116": 150, "4348": 150, "6919": 150, "0071": 150, "8643": 150, "4288": 150, "x28": 150, "9165": 150, "6814": 150, "7199": 150, "3141": 150, "5190": 150, "x29": 150, "5408": 150, "0462": 150, "5170": 150, "0682": 150, "0460": 150, "2956": 150, "15543": 150, "7521": 150, "4727": 150, "6598": 150, "x30": 150, "1591": 150, "6613": 150, "1576": 150, "5785": 150, "0096": 150, "1499": 150, "1559": 150, "4682": 150, "4786": 150, "x31": 150, "3066": 150, "2318": 150, "1347": 150, "2069": 150, "2760": 150, "0229": [150, 174], "5707": 150, "3755": 150, "425": [150, 172], "0882": 150, "x32": 150, "611": 150, "6934": 150, "2814": 150, "3375": 150, "0009": 150, "252": [150, 160], "3778": 150, "0089": 150, "x33": 150, "861": 150, "9664": 150, "2070": 150, "4337": 150, "4163": 150, "6772": 150, "3197": 150, "0336": 150, "4920": 150, "x34": 150, "3877": 150, "8498": 150, "7887": 150, "0737": 150, "644": 150, "2921": 150, "5168": 150, "x35": 150, "8483": 150, "4913": 150, "6547": 150, "3948": 150, "2957": 150, "21319": 150, "3893": 150, "4067": 150, "x36": 150, "5489": 150, "1030": 150, "8116": 150, "0701": 150, "3711": 150, "4689": 150, "x37": 150, "7497": 150, "4947": 150, "6849": 150, "0921": 150, "1819": 150, "650": [150, 168], "6813": 150, "x38": 150, "14067": 150, "7740": 150, "7800": 150, "2113": 150, "8035": 150, "0714": 150, "1224": 150, "2191": 150, "29359": 150, "x39": 150, "5133": 150, "5558": 150, "2077": 150, "6861": 150, "4708": 150, "0135": 150, "9206": 150, "7738": 150, "3378": 150, "x40": 150, "2372": 150, "2746": 150, "8448": 150, "5044": 150, "1325": 150, "5463": 150, "6139": 150, "0647": 150, "x41": 150, "708": 150, "8006": 150, "3385": 150, "9991": 150, "0027": 150, "4687": 150, "1172": 150, "x42": 150, "1293": 150, "1867": 150, "0943": 150, "4875": 150, "6260": 150, "4570": 150, "4908": 150, "2750": 150, "2323": 150, "x43": 150, "4865": 150, "4887": 150, "6027": 150, "0093": 150, "486": 150, "4611": 150, "3456": 150, "5118": 150, "x44": 150, "6328": 150, "0273": 150, "5183": 150, "1290": 150, "4886": 150, "2230": 150, "x45": 150, "8665": 150, "2275": 150, "8200": 150, "8354": 150, "5684": 150, "x46": 150, "1429": 150, "2194": 150, "705": 150, "7754": 150, "0250": 150, "0429": 150, "5757": 150, "8631": 150, "x47": 150, "287": 150, "7160": 150, "0709": 150, "4168": 150, "1566": 150, "685": 150, "8281": 150, "3961": 150, "x48": 150, "189": 150, "7045": 150, "1916": 150, "1279": 150, "2594": 150, "4371": 150, "0282": 150, "x49": 150, "0129": 150, "5540": 150, "9212": 150, "3570": 150, "3477": 150, "3219": 150, "x50": 150, "10142": 150, "2002": 150, "7074": 150, "9790": 150, "4335": 150, "1518": 150, "3728": 150, "0049": 150, "24012": 150, "4054": 150, "x51": 150, "9536": 150, "1123": 150, "6099": 150, "5419": 150, "0857": 150, "447": 150, "1785": 150, "x52": 150, "1197": 150, "2260": 150, "682": [150, 170], "4747": 150, "0795": 150, "7375": 150, "2535": 150, "1896": 150, "x53": 150, "20265": 150, "9335": 150, "23064": 150, "5613": 150, "8787": 150, "3796": 150, "24951": 150, "1898": 150, "65483": 150, "0568": 150, "x54": 150, "12226": 150, "8108": 150, "6517": 150, "5063": 150, "8760": 150, "0607": 150, "25004": 150, "1137": 150, "550": 150, "x55": 150, "3613": 150, "4768": 150, "4978": 150, "7999": 150, "7258": 150, "4680": 150, "13374": 150, "2092": 150, "6147": 150, "2555": 150, "x56": 150, "2196": 150, "0436": 150, "843": 150, "4185": 150, "6037": 150, "0092": 150, "542": [150, 172], "5563": 150, "3849": 150, "5310": 150, "x57": 150, "909": [150, 170], "6884": 150, "1743": 150, "6261": 150, "2067": 150, "8299": 150, "x58": 150, "9437": 150, "6926": 150, "2426": 150, "0012": 150, "0247": 150, "8627": 150, "x59": 150, "2329": 150, "2374": 150, "8416": 150, "0656": 150, "4492": 150, "1133": 150, "9150": 150, "x60": 150, "8185": 150, "9507": 150, "1728": 150, "8628": 150, "5585": 150, "9216": 150, "x61": 150, "9612": 150, "6414": 150, "8610": 150, "5679": 150, "4903": 150, "x62": 150, "9958": 150, "6344": 150, "3310": 150, "8838": 150, "1079": 150, "x63": 150, "915": 150, "2771": 150, "4927": 150, "4901": 150, "6241": 150, "4576": 150, "4197": 150, "2745": 150, "8655": 150, "x64": 150, "856": [150, 185], "3795": 150, "6237": 150, "4183": 150, "1773": 150, "x65": 150, "8750": 150, "1471": 150, "9814": 150, "3264": 150, "518": 150, "2041": 150, "x66": 150, "8040": 150, "154": [131, 150], "5694": 150, "5126": 150, "1304": 150, "8310": 150, "x67": 150, "7613": 150, "8714": 150, "1276": 150, "5998": 150, "9229": 150, "x68": 150, "2377": 150, "5655": 150, "18554": 150, "7387": 150, "1281": 150, "8980": 150, "33998": 150, "2360": 150, "38753": 150, "3671": 150, "x69": 150, "11008": 150, "3563": 150, "10291": 150, "6307": 150, "0696": 150, "2848": 150, "9167": 150, "9622": 150, "31184": 150, "6748": 150, "x70": 150, "6367": 150, "0944": 150, "6065": 150, "2219": 150, "0498": 150, "2939": 150, "18257": 150, "7123": 150, "5523": 150, "5234": 150, "x71": 150, "1700": 150, "944": 150, "6336": 150, "2868": 150, "0223": 150, "4012": 150, "0853": 150, "308": 150, "2546": 150, "x72": 150, "4031": 150, "2392": 150, "0986": 150, "5452": 150, "4741": 150, "1802": 150, "x73": 150, "1604": 150, "8538": 150, "1639": 150, "6859": 150, "3277": 150, "1609": 150, "6830": 150, "4819": 150, "3905": 150, "x74": 150, "766": 150, "9861": 150, "3365": 150, "0761": 150, "0021": 150, "278": [150, 185], "1721": 150, "1255": 150, "8001": 150, "x75": 150, "2563": 150, "1016": 150, "2045": 150, "2530": 150, "2103": 150, "6573": 150, "4261": 150, "2228": 150, "x76": 150, "596": 150, "8511": 150, "7614": 150, "8319": 150, "0046": 150, "6620": 150, "0402": 150, "x77": 150, "1033": 150, "7653": 150, "1865": 150, "5885": 150, "5541": 150, "5795": 150, "4691": 150, "2623": 150, "6442": 150, "655": 150, "012": [150, 170], "119": 150, "141": 150, "712": 150, "4390541685726112": 150, "smallest": [150, 191, 192], "09e": 150, "strong": 150, "get_feature_names_out": 150, "input_featur": 150, "pft": 150, "061316": 150, "003511": 150, "003461": 150, "019779": 150, "000455": 150, "306582": 150, "939526": 150, "009773": 150, "030263": 150, "000096": 150, "000296": 150, "000044": [131, 150], "001315": 150, "000916": 150, "000138": 150, "004070": 150, "000021": [150, 169], "000612": 150, "018090": 150, "035236": 150, "001373": 150, "001922": 150, "065438": 150, "000206": 150, "205924": 150, "974706": 150, "004572": 150, "014552": 150, "000067": [131, 150], "000013": 150, "000192": 150, "000212": 150, "000042": [131, 150], "000613": 150, "000008": 150, "000121": 150, "001772": 150, "042579": 150, "001319": 150, "001919": 150, "101349": 150, "000336": 150, "293852": 150, "947522": 150, "005996": 150, "020210": 150, "000036": [131, 150], "000014": 150, "000345": 150, "000408": 150, "000046": [131, 150, 169], "001163": 150, "000005": 150, "000131": 150, "003314": 150, "053638": 150, "000920": 150, "001456": 150, "037547": 150, "000421": 150, "206890": 150, "973147": 150, "007627": 150, "025210": 150, "000058": 150, "000024": [150, 169], "000549": 150, "000636": 150, "000079": 150, "001816": 150, "000010": 150, "000226": 150, "005188": 150, "071498": 150, "002413": 150, "002949": 150, "010725": 150, "000447": [150, 169], "366428": 150, "920540": 150, "008848": 150, "026812": 150, "000078": 150, "000237": 150, "000981": 150, "000108": 150, "002971": 150, "000016": 150, "000446": 150, "012282": 150, "xnam": 150, "pval": 150, "pvalu": [150, 176], "630773e": 150, "288486e": 150, "462679e": 150, "327338e": 150, "970958e": 150, "905133e": 150, "128466e": 150, "016020e": 150, "289041e": 150, "519337e": 150, "351547e": 150, "721775e": 150, "278805e": 150, "291916e": 150, "249665e": 150, "192719e": 150, "657965e": 150, "010018e": 150, "225201e": 150, "960632e": 150, "109039e": 150, "646809e": 150, "annot": 151, "mypy": 151, "ruff": 151, "0x7fec374f5ed0": 151, "de_autr": 151, "sigma_or_n": [151, 153], "nouvel_ensembl": [151, 153], "rotation1": [151, 161], "rotation2": [151, 161], "test_rotation1": [151, 161], "de0": [151, 161], "test_rotation2": [151, 161], "virtuel": [152, 163], "range_lik": 152, "0x7f1dc597b220": 152, "\u00e9met": 152, "random_generator": 152, "15382301030555623": 152, "8963148242847391": 152, "5960121288362235": 152, "20451752514212185": 152, "8937299506306294": 152, "leave_generator": 152, "textwrap": [152, 154], "add_al": 152, "profondeur_maximal": [152, 154], "pleft": [152, 154], "pright": [152, 154], "bcdefghijkl": 152, "al\u00e9aatoir": 152, "numeros": 152, "3732": 152, "04it": 152, "2136": 152, "80it": 152, "test_compos": 153, "__matmul__": 153, "decompos": 153, "applique_decomposition_identit": 153, "test_decompose1": 153, "test_decompose2": 153, "considered": 153, "profondeur_somme_count": 154, "sleft": 154, "cleft": 154, "sright": 154, "cright": 154, "6666666666666667": 154, "bizarr": [154, 197, 200], "adjoint": [155, 186], "bought": 155, "similarity": 155, "similarit": 155, "addict": 156, "4x4": [156, 201], "creer_jeu": 156, "position_libr": 156, "nombre_aleatoir": 156, "joue_ligne_colon": 156, "lc": 156, "non_null": 156, "non_null2": 156, "joue_coup": 156, "coup_suiv": 156, "c2048": 156, "calcule_scor": 156, "62it": 156, "84it": 156, "coll": [156, 206], "c2048_4": 156, "sharey": 156, "dictionnairr": 157, "846651": 157, "lng": 157, "285811": 157, "autocomplet": 157, "6371": 157, "dlat": 157, "radian": 157, "dlon": 157, "station1": 157, "station2": 157, "emil": 157, "zol": 157, "847030": 157, "295262": 157, "6928550943713419": 157, "rigid": 157, "diff\u00e9": 158, "minis": 158, "2462739999955374e": 158, "0353370000029826e": 158, "81406999999308e": 158, "796050000029936e": 158, "953019999920797e": 158, "313129999987723e": 158, "568269999956101e": 158, "580999999987398e": 158, "447889999933977e": 158, "401670000057492e": 158, "71205999999438e": 158, "6167699999641626e": 158, "fen": 158, "977897000002485e": 158, "178353999994215e": 158, "823300000178278e": 158, "471699999769044e": 158, "712876000006872e": 158, "798504000003959e": 158, "035500000005414e": 158, "195899999918766e": 158, "84480600000461e": 158, "923587000006591e": 158, "347799999479321e": 158, "471000000601634e": 158, "simulation_multinomial": 159, "library": 159, "ale": [159, 204], "430": 159, "pc": 159, "poids_cumul": 159, "poids_cumule_tr": 159, "009419400001206668": 159, "007181299999501789": 159, "010566299999481998": 159, "0066910000023199245": 159, "007558699999208329": 159, "006804499997087987": 159, "poids_tr": 159, "00013789999866276048": 159, "00010370000018156134": 159, "0004912999975204002": 159, "00014940000255592167": 159, "950000170036219e": 159, "0002525000018067658": 159, "nomrbr": 159, "06869539999752305": 159, "00884070000029169": 159, "08114130000103614": 159, "0094169999974838": 159, "06719900000098278": 159, "01211440000042785": 159, "stockag": 159, "pch": 160, "add_patch": 160, "surface_invers": 160, "6325000000000005": 160, "surface_inverse_dicho": 160, "63232421875": 160, "y3": 160, "surface_inv_t": 160, "63234375": 160, "d\u00e9fectu": 160, "surface_inv_math": 160, "6324555320336759": 160, "3675444679663242": 160, "152": [160, 167], "coloriage_diagonal": 160, "concr\u00e9tis": 160, "comprom": [160, 183], "exo_d": 161, "am\u00e8nent": 161, "nouveau_d": 161, "tourne_d": 161, "\u00e9thiqu": [22, 162], "valjean": 162, "coset": 162, "fantin": 162, "marius": 162, "pontmercy": 162, "gavroch": 162, "th\u00e9nardi": 162, "antagon": 162, "javert": 162, "madam": 162, "babet": 162, "claquesous": 162, "montparn": 162, "gueulem": 162, "brujon": 162, "bamatabois": 162, "victurnien": 162, "amis": 162, "enjolr": 162, "combeferr": 162, "courfeyrac": 162, "prouvair": 162, "feuilly": 162, "bahorel": 162, "lesgl": 162, "joly": 162, "grantair": 162, "favourit": 162, "dahli": 162, "z\u00e9phin": 162, "f\u00e9lix": 162, "tholomyes": 162, "listoli": 162, "fameuil": 162, "blachevel": 162, "fauchelevent": 162, "mabeuf": 162, "azelm": 162, "toussaint": 162, "luc": 162, "gillenormand": 162, "\u00e9v\u00eaqu": 162, "myriel": 162, "baptistin": 162, "magloir": 162, "gerv": 162, "congruentiel": 162, "22695477": 162, "c_n": 162, "unsigned": 162, "5381": 162, "ds_legend": 162, "repartit": 162, "sha256": 162, "digest": 162, "d4": 162, "light_hash": 162, "d5": 162, "load_ir": 163, "load_dat": 163, "feature_nam": 163, "fleur": 163, "target_nam": 163, "sepal": 163, "petal": 163, "virginic": 163, "148": [163, 178], "n5": 163, "setos": 163, "n4": 163, "lengt": 163, "florid": 163, "georgi": 163, "alask": 163, "quebec": 163, "versicolor": 163, "ireland": 163, "plat": [163, 203], "flatbuffer": 163, "messagepack": 163, "coloriage_carr": 163, "histogramme_rapid": 163, "dummy": [163, 166], "exercice_json_xml": 163, "exercice_regex": 163, "tableau_contingent": 163, "nbheap": 163, "classes_2048": 163, "profile_gin": 163, "profiling_exampl": 163, "classes_metro": 163, "exercice_p": 163, "code_multinomial": 163, "code_liste_tupl": 163, "tri_nlnd": 163, "structures_donnees_convers": 163, "exercice_serialisation_json": 163, "json_text": 163, "res2": 163, "html_text": 163, "to_html": 163, "thead": 163, "tbody": [163, 174], "df_html": 163, "read_html": 163, "df_locat": 163, "merged": 163, "450": [163, 172, 173, 190], "df_locations2": 163, "dfe": 163, "myzip": 163, "crashed": 163, "executing": 163, "review": 163, "identify": 163, "failur": 163, "href": [163, 174, 204], "aka": 163, "vscodejupyterkernelcrash": 163, "viewoutput": 163, "enregist": 163, "contig\u00fc": 163, "sock": 163, "sotck": 163, "reviendront": 163, "surface_cerl": 164, "surface_cercl": 164, "53981633974483": 164, "estimation_p": 164, "dedans_enti": 164, "surface_cercle_p": 164, "tri_al": 164, "dommag": 164, "tri_alea2": 164, "m\u00e8nen": 164, "tri_alea3": 164, "eval_c": 164, "cs": 164, "ec": [164, 204], "14it": [134, 164], "alentour": 164, "exrp": 165, "unicodedat": 165, "strip_accent": 165, "nfd": [165, 186], "t\u00eatu": 165, "tetu": 165, "text_sans_accent": 165, "extract_words_lettr": 165, "nje": 165, "nqui": 165, "ngolf": 165, "nlanc": 165, "ndan": 165, "npaix": 165, "nque": 165, "nsilenc": 165, "02d": [165, 203], "296": 165, "301": 165, "346": [165, 172], "h\u00e9t\u00e9rogen": 166, "m\u00e9anism": 166, "comp": 166, "wikidat": 166, "magoo": 166, "creator": 166, "millard": 166, "kaufman": 166, "hubley": 166, "cartoon": 166, "aventur": 166, "c\u00e9lebr": 166, "simplejson": 166, "ijson": 166, "wikidatawik": 166, "latest": 166, "lexem": 166, "bz2": 166, "l4": 166, "lemm": 166, "windsurf": 166, "lexicalcategory": 166, "q24905": 166, "q1860": 166, "p5238": 166, "orjson": 166, "mainsnak": 166, "snaktyp": 166, "datavalu": 166, "entity": 166, "3324": 166, "l3324": 166, "wikibas": 166, "entityid": 166, "datatyp": 166, "qualifi": 166, "p1545": 166, "2a1ced1dca90648ea7e306acbadd74fc81a10722": 166, "faad30b0": 166, "421c": 166, "803a": 166, "c1fd": 166, "b9a99a0eb35d": 166, "18537": 166, "l18537": 166, "7241753c62a310cf84895620ea82250dcea65835": 166, "d15285a1": 166, "4880": 166, "7a9b": 166, "bb1f": 166, "85403e1a785": 166, "p5187": 166, "monolingualtext": 166, "d4a63d17": 166, "43e": 166, "749d": 166, "5860": 166, "21b90feb83f7": 166, "windsurfing": 166, "grammaticalfeatur": 166, "q10345583": 166, "f3": 166, "q110786": 166, "q3910936": 166, "q51929074": 166, "f4": 166, "windsurfed": 166, "q1392475": 166, "f5": 166, "q1230649": 166, "f6": 166, "gloss": 166, "planch": [166, 204], "u00e0": 166, "voil": 166, "meluncur": 166, "angin": 166, "zh": 166, "u6ed1": 166, "u6d6a": 166, "u98a8": 166, "u5e06": 166, "hant": 166, "tw": 166, "u00e1": 166, "u00edng": 166, "hong": 166, "u00e2ng": 166, "u0e40": 166, "u0e25": 166, "u0e48": 166, "u0e19": 166, "u0e27": 166, "u0e34": 166, "u0e14": 166, "u0e4c": 166, "u0e0b": 166, "u0e23": 166, "u0e1f": 166, "tg": 166, "u0441": 166, "u0451": 166, "u0440": 166, "u0444": 166, "u0438": 166, "u043d": 166, "u0433": 166, "u0431": 166, "u043e": 166, "u0437": 166, "u0448": 166, "u0430": 166, "u043c": 166, "u043b": 166, "u04e3": 166, "purjelautaill": 166, "p5137": 166, "191051": 166, "q191051": 166, "13e5f498": 166, "4deb": 166, "ea41": 166, "4d60": 166, "02c852b88b4c": 166, "p5972": 166, "l144039": 166, "7218013f": 166, "b84b": 166, "40fa": 166, "b57b": 166, "bc1ba2239bb8": 166, "pageid": 166, "54387040": 166, "lastrevid": 166, "1710596079": 166, "22t19": 166, "34z": 166, "l314": 166, "q1084": 166, "q7026": 166, "p5185": 166, "1775415": 166, "q1775415": 166, "45650151": 166, "4ed8": 166, "025d": 166, "e36ef22e6a2": 166, "q146786": 166, "54387050": 166, "684359491": 166, "24t07": 166, "21z": 166, "abandon": [166, 204], "dict2xml": 166, "lde": 166, "getstat": 166, "et_setstat": 166, "count1": 167, "count2": 167, "count3": 167, "cytoolz": 167, "count4": 167, "swap": 168, "entas": 168, "dessine_t": 168, "_heapify_max_bottom": 168, "_heapify_max_up": 168, "topk_min": 168, "_heapify_max_bottom_posit": 168, "_heapify_max_up_posit": 168, "topk_min_posit": 168, "20001": 168, "div_by_numb": 168, "01it": 168, "deviat": [168, 169], "min_exec": [168, 169], "max_exec": [168, 169], "ttim": [168, 169], "context_siz": [168, 169], "warmup_tim": [168, 169], "001400": 168, "000271": 168, "001090": 168, "001892": 168, "014000": 168, "001138": 168, "002110": 168, "000517": 168, "001622": 168, "003214": 168, "021104": 168, "001633": 168, "001967": 168, "000299": 168, "001747": 168, "002545": 168, "019669": 168, "002969": 168, "002692": 168, "000611": 168, "002081": 168, "003779": 168, "026925": 168, "003983": 168, "4000": 168, "003096": 168, "000276": 168, "002660": 168, "003578": 168, "030960": 168, "003305": 168, "33it": 168, "008493": 168, "001842": 168, "006837": 168, "013038": 168, "084926": 168, "014053": 168, "009114": 168, "002111": 168, "007600": 168, "013480": 168, "091137": 168, "022466": 168, "011651": 168, "003198": 168, "008757": 168, "017215": 168, "116511": 168, "010779": 168, "011374": 168, "001973": 168, "009725": 168, "016044": 168, "113739": 168, "012545": 168, "950": 168, "016104": 168, "003647": 168, "011865": 168, "022728": 168, "161042": 168, "018794": 168, "1100": 168, "_heapify_max_up_position_simpl": 168, "topk_min_position_simpl": 168, "58650968": 169, "72315516": 169, "9137217": 169, "04526746": 169, "70012278": 169, "87604076": 169, "92402115": 169, "36865515": 169, "00362559": 169, "26361505": 169, "pivot_gauss2": 169, "pivot_gauss3": 169, "numpy1": 169, "numpy2": 169, "17it": 169, "000051": [131, 169], "000028": 169, "000125": 169, "000512": 169, "000728": 169, "000045": [131, 169], "000094": [131, 169], "000110": 169, "000197": 169, "001367": 169, "000253": 169, "001134": 169, "000540": 169, "000623": 169, "002258": 169, "011340": 169, "003184": 169, "001312": 169, "000678": 169, "000639": 169, "002858": 169, "013121": 169, "001035": 169, "000375": 169, "000184": 169, "000233": 169, "000818": 169, "003753": 169, "001292": 169, "001557": 169, "001094": 169, "000686": 169, "003803": 169, "015571": 169, "016613": 169, "000404": 169, "000062": 169, "000331": 169, "000553": 169, "004045": 169, "000364": 169, "000471": 169, "000037": [131, 169], "000440": 169, "000545": 169, "004713": 169, "000482": 169, "003798": 169, "001491": 169, "002594": 169, "007715": 169, "037978": 169, "018972": 169, "001324": 169, "000265": 169, "001054": 169, "002030": 169, "013239": 169, "001341": 169, "000820": 169, "000190": 169, "000602": 169, "001140": 169, "008200": 169, "000651": 169, "004260": 169, "001177": 169, "002724": 169, "006471": 169, "042603": 169, "005198": 169, "001690": 169, "000268": 169, "001100": 169, "002116": 169, "016902": 169, "001080": 169, "009320": 169, "002581": 169, "005762": 169, "013509": 169, "093197": 169, "015497": 169, "001664": 169, "000133": 169, "001458": 169, "001827": 169, "016641": 169, "001309": 169, "005314": 169, "001348": 169, "003848": 169, "008252": 169, "053141": 169, "016670": 169, "001629": 169, "000216": 169, "001459": 169, "002045": 169, "016286": 169, "001499": 169, "011036": 169, "003890": 169, "007070": 169, "018254": 169, "110356": 169, "017467": 169, "002637": 169, "000582": 169, "001846": 169, "003606": 169, "026375": 169, "002417": 169, "021563": 169, "003232": 169, "017314": 169, "029488": 169, "215629": 169, "028747": 169, "004673": 169, "001109": 169, "003391": 169, "005935": 169, "046730": 169, "005792": 169, "profilag": 170, "_gini_sort": 170, "_gini_in": 170, "spy": [170, 171], "centiem": 170, "profiler": 170, "sortby": [170, 171], "print_stat": [170, 171, 172, 185], "ordered": [170, 171, 172, 185], "ncall": [170, 171, 172, 185], "tottim": [170, 171, 172, 185], "percall": [170, 171, 172, 185], "cumtim": [170, 171, 172, 185], "venv": [170, 203], "interactiveshel": [170, 171, 185], "3472": [170, 171, 185], "run_cod": [170, 171, 185], "codeop": [170, 171, 185], "__call__": [170, 171, 185], "ipykernel_23329": 170, "1877708867": 170, "1359775409": 170, "contextlib": [170, 171], "traitlet": [170, 171], "692": [170, 171], "__get__": [170, 171], "compilerop": [170, 171, 203], "extra_flag": [170, 171], "3424": [170, 171], "1229": [170, 171], "user_global_n": [170, 171], "_lsprof": [170, 172], "11038": 170, "841": 170, "4034582288": 170, "024": 170, "436": 170, "003": [170, 172, 185], "914": 170, "058": 170, "060": 170, "007": 170, "398": 170, "039": 170, "026": 170, "_gini_final_fast": 170, "gini_fast": 170, "018": 170, "017": 170, "543": 170, "1862792531": 170, "866": 170, "867": 170, "530": 170, "070": 170, "output_html": 170, "_gini_cumsum2": 170, "_gini_cumsum2b": 170, "gini2": 170, "023": 170, "580": 170, "239060152": 170, "926": 170, "898": 170, "905": 170, "057": 170, "040": 170, "042": 170, "908": 170, "649": 170, "651": 170, "_gini_cumsum3b": 170, "total0": 170, "total1": 170, "_gini_cumsum3": 170, "gini3": 170, "022": [170, 172], "1743022160": 170, "059": 170, "064": 170, "921": 170, "699": 170, "028": [170, 172], "077": 170, "upload": 171, "wikimedi": 171, "9f": 171, "convolutionandpooling": 171, "convolve2d": 171, "img": [171, 174], "11111111": 171, "000002": 171, "000004": 171, "convolve_na": 171, "9999995": 171, "000001": 171, "convolve_naive2": 171, "999998": 171, "test_unitair": 171, "devien": 171, "_get_indic": 171, "_is_out": 171, "im2col_na": 171, "kernel_shap": 171, "fill_valu": 171, "output_shap": 171, "middl": 171, "kernel_siz": 171, "data_siz": 171, "i_dat": 171, "i_kernel": 171, "t_dat": 171, "t_kernel": 171, "i_out": 171, "convolve_im2col_na": 171, "conv": 171, "999996": 171, "test_unitaire2": 171, "exec_prefix": 171, "profile_cod": 171, "133426": 171, "847": 171, "424": 171, "ipykernel_8787": 171, "3679460054": 171, "3311625431": 171, "88200": 171, "44100": 171, "006": 171, "fromnumeric": [171, 172, 185], "2979": 171, "_wrapreduct": [171, 172, 185], "dictcomp": [171, 172], "2974": 171, "_prod_dispatch": 171, "profileur": [171, 172], "text_prof": 171, "pre": 171, "00032": 171, "79024": 171, "00211": 171, "78992": 171, "29408": 171, "78693": 171, "00018": 171, "00065": 171, "00448": 171, "00134": 171, "00383": 171, "00025": 171, "ict": 171, "00017": 171, "00052": 171, "unc": 171, "00155": 171, "ufunc": [171, 172, 185], "24745": 171, "40406": 171, "176400": 171, "08453": 171, "07207": 171, "08270": 171, "00021": 171, "00007": 171, "00010": [134, 171], "00037": 171, "00049": 171, "00019": 171, "00087": 171, "176600": 171, "08463": 171, "88300": 171, "07226": 171, "proc\u00e8dent": 171, "interromp": 171, "marqueur": 171, "sampling": [171, 190], "d\u00e9buggag": 171, "im2col_recurs": 171, "im2col_naive_implement": 171, "fall_back_dim": 171, "unfold": 171, "padding": 171, "switch": 171, "k0": 171, "mini_kernel": 171, "mini_shap": 171, "cc2": 171, "new_shap": 171, "resh": 171, "convolve_im2col_recurs": 171, "test_unitaire3": 171, "r\u00e9impl\u00e9ment": 172, "9644453525543213": 172, "sigma2": 172, "001481771469116211": 172, "doprofil": 172, "normpath": [172, 185], "base_prefix": 172, "dump_stat": 172, "10000000": 172, "6027283668518066": 172, "00013383": 172, "_distn_infrastructur": 172, "1958": 172, "_continuous_distn": 172, "361": 172, "_pdf": 172, "_norm_pdf": 172, "093": 172, "_multiarray_umath": 172, "implement_array_funct": 172, "048": 172, "__array_function__": 172, "internal": 172, "function_bas": 172, "1912": [172, 187, 188], "_insert": 172, "_support_mask": 172, "putmask": 172, "021": 172, "559": 172, "argsreduc": 172, "2406": 172, "2307": 172, "604": 172, "broadcast_array": 172, "stride_trick": 172, "480": [172, 175], "546": 172, "340": 172, "_broadcast_to": 172, "_ufunc_config": 172, "seterr": 172, "atleast_1d": 172, "shape_bas": 172, "416": 172, "_broadcast_shap": 172, "geterr": 172, "538": 172, "seterrobj": 172, "geterrobj": 172, "genexpr": 172, "asarray": 172, "1965": 172, "promote_typ": 172, "_argcheck": 172, "_maybe_view_as_subclass": 172, "2302": 172, "_any_dispatch": 172, "multiarray": 172, "1961": 172, "_shape_dispatch": 172, "ndit": 172, "1908": 172, "_place_dispatch": 172, "_get_support": 172, "asanyarray": 172, "_parse_arg": 172, "_atleast_1d_dispatch": 172, "2401": 172, "_all_dispatch": 172, "_broadcast_arrays_dispatch": 172, "1882781982421875": 172, "ipykernel_29119": 172, "200996087": 172, "guis": 172, "fatal": 173, "liste_trie": 173, "recherche_dichotomique_recurs": 173, "parametres": 173, "recherche_dichotomique_recursive2": 173, "pok\u00e9mon": 174, "pokemondb": 174, "demandon": 174, "pok\u00e9dex": 174, "training": [131, 174, 186], "breeding": 174, "databas": 174, "dossi": 174, "bs4": 174, "utilison": 174, "mozill": 174, "req": 174, "pokedex": 174, "header": 174, "beautifulsoup": 174, "lxml": 174, "liste_pokemon": 174, "infocard": 174, "lg": 174, "get_pag": 174, "pokemon_nam": 174, "url_pokemon": 174, "get_cara_pokemon": 174, "defaultdict": 174, "vital": 174, "table_body": 174, "findchildren": 174, "findchild": 174, "gettext": 174, "bulbasaur": 174, "ivysaur": 174, "venusaur": 174, "charmand": 174, "charmeleon": 174, "charizard": 174, "squirtl": 174, "spec": 174, "abilit": 174, "catch": 174, "hp": 174, "attack": 174, "defens": 174, "sp": [174, 186], "atk": 174, "grass": 174, "seed": 174, "kg": 174, "lb": 174, "overgrowchlorophyll": 174, "hidden": 174, "ability": 174, "0226": 174, "gold": 174, "silv": 174, "cryst": 174, "pok\u00e9ball": 174, "medium": 174, "slow": 174, "monst": 174, "femal": 174, "884": 174, "0227": 174, "0228": 174, "fir": 174, "lizard": 174, "blazesolar": 174, "dragon": 174, "flam": 174, "0230": 174, "artwork": 174, "jpg": 174, "out_fil": 174, "copyfileobj": 174, "butterfre": 174, "spearow": 174, "skimag": 174, "imio": 174, "imread": 174, "get_yax": 174, "amus": 175, "gh": 175, "recontruir": 175, "36960": 175, "cpython": 175, "dv": 175, "devrion": 175, "max_j": 175, "r\u00e9present": 175, "arr": [175, 202], "\u00e9norm": 175, "9x8": 175, "amat": 175, "aarr": 175, "00984": 175, "00112": 175, "nb_lin": 175, "nb_col": 175, "asymptot": 176, "evident": 176, "chi2_contingency": 176, "chi2": 176, "168598503892621": 176, "4045712090580829": 176, "nj": 176, "nij": 176, "52941176": 176, "88235294": 176, "58823529": 176, "47058824": 176, "61764706": 176, "16176471": 176, "impens": 177, "unit_test": 177, "valeur_attendu": 177, "tour_prend_piec": 177, "test_tour_prend_piec": 177, "tour_prend_piece_tupl": 177, "test_tour_prend_piece_tupl": 177, "_tour_prend_piec": 177, "colori": 177, "find_neighbour": 177, "echiqui": 177, "coloring": 177, "next_cas": 177, "tour_prend_piece_obstacl": 177, "test_": 177, "assurent": 177, "testent": 177, "pytest": 177, "commencenc": 177, "test_tour_prend_piece_obstacle_except": 177, "sorted_hist": 178, "recontruit": 178, "sorted_en": 178, "sort_with_hist": 178, "sort_with_nohist": 178, "immpl\u00e9ment": 178, "smoothsort": 178, "quoiqu": 178, "sort_with_nohist_nocopy": 178, "tableaux_aleatoir": 178, "enss": 178, "1e10": [178, 188], "nlnn": 178, "6e": 178, "grossi": [178, 209], "403": 178, "1096": 178, "2980": 178, "8103": 178, "22026": 178, "59874": 178, "162754": 178, "442413": 178, "df100": 178, "dfm": 178, "1e9": 178, "z2": [179, 180], "npm": [179, 180], "44444444": 179, "pp": 179, "mp": 179, "lambda_3": 179, "simult": [179, 180], "17179957": 180, "80900898": 180, "53083278": 180, "48698277": 180, "95015277": 180, "66842305": 180, "53400158": 180, "42468545": 180, "41318128": 180, "97269198": 180, "62935172": 180, "0672538": 180, "88952227": 180, "09758362": 180, "36428305": 180, "00968737": 180, "07225686": 180, "0111879": 180, "26264038": 180, "16277675": 180, "05453658": 180, "varvar": 180, "99040557": 180, "31065402": 180, "4426555": 180, "09744081": 180, "13884485": 180, "19784207": 180, "multiply": 180, "95440895": 180, "89026339": 180, "71682496": 180, "91433544e": 180, "55111512e": 180, "77555756e": 180, "44438859e": 180, "60670907e": 180, "88137173e": 180, "square_root_matrix": 180, "30467222": 180, "77731521": 180, "55914512": 180, "95469126": 180, "96344225": 180, "9528626": 180, "33226763e": 180, "06581410e": 180, "44089210e": 180, "59780655": 180, "8510365": 180, "45002008": 180, "24634204": 180, "12707857": 180, "14682284": 180, "homomorph": [181, 182], "pr\u00e9serv": [181, 182], "fully": [181, 182], "encrypt": [181, 182], "keygen": [181, 182], "secret": [181, 182], "pk": [181, 182], "tau": [181, 182], "r_p": [181, 182], "2r": [181, 182], "decrypt": [181, 182], "tutoriel_graph": [183, 184], "xe9cr": [183, 184], "xe0": [183, 184], "minel": [183, 184], "xe9trang": [183, 184], "extr": [183, 184], "xeam": [183, 184], "spanning": [183, 184], "satisf": 183, "laplacien": [183, 184], "construis": [183, 197], "directionnel": 183, "traduisent": 183, "eigen": [183, 184], "eric": 183, "kolaczyk": 183, "phi": 183, "min_": [131, 134, 183, 187, 189, 190], "x_v": 183, "84737386691659533": [183, 184], "95848816613228727": [183, 184], "28893525107454354": [183, 184], "66073249195336492": [183, 184], "60382037086559148": [183, 184], "13747945088383384": [183, 184], "21951613156582261": [183, 184], "040905525433785228": [183, 184], "21613062123493632": [183, 184], "096875623632852625": [183, 184], "99787588721497178": [183, 184], "79337171783327132": [183, 184], "18576957348508683": [183, 184], "78396225027633837": [183, 184], "23875443625588322": [183, 184], "35497638429086975": [183, 184], "8713637939628045": [183, 184], "22983756618811024": [183, 184], "28301724069085921": [183, 184], "99408996134013161": [183, 184], "39792684083973429": [183, 184], "77105362865540716": [183, 184], "75452041353842147": [183, 184], "330325155167562": [183, 184], "24824845436118537": [183, 184], "95998690078041737": [183, 184], "92318434139996397": [183, 184], "38115765401571988": [183, 184], "54660304309415886": [183, 184], "62093667623480242": [183, 184], "58899996464290505": [183, 184], "9017292023892568": [183, 184], "60541336358687847": [183, 184], "28929082523865812": [183, 184], "87925379747840293": [183, 184], "94834058131858756": [183, 184], "61449632813730748": [183, 184], "94264237081849722": [183, 184], "13119804743502139": [183, 184], "44158556198130949": [183, 184], "20660796942108339": [183, 184], "915599021810789": [183, 184], "3097131996826511": [183, 184], "81979953110332837": [183, 184], "89711055197298928": [183, 184], "7298496710091944": [183, 184], "22499060312661545": [183, 184], "072786594549671291": [183, 184], "012604758185058018": [183, 184], "36199484670070914": [183, 184], "92050750708863993": [183, 184], "91447248587261709": [183, 184], "26304069827339327": [183, 184], "026058147250910935": [183, 184], "59289937178711172": [183, 184], "86673111722782969": [183, 184], "70640070176443837": [183, 184], "64096733852134291": [183, 184], "049399266565914535": [183, 184], "54027723332288746": [183, 184], "26450585597978316": [183, 184], "50883097182669357": [183, 184], "91987410679455195": [183, 184], "97753050553942622": [183, 184], "5618293073273094": [183, 184], "27688371997865069": [183, 184], "91241761244784847": [183, 184], "090310675429991605": [183, 184], "90925789663628509": [183, 184], "40628594240956295": [183, 184], "3832814495252409": [183, 184], "66221025722485627": [183, 184], "74928785967005418": [183, 184], "32840192750838815": [183, 184], "25478832731446643": [183, 184], "70269825611412617": [183, 184], "54293534537395793": [183, 184], "87800254191632932": [183, 184], "89603330911109724": [183, 184], "77106655965183546": [183, 184], "29830084404349644": [183, 184], "97117954065316903": [183, 184], "075137754060910056": [183, 184], "086473140735377596": [183, 184], "120307047737505": [183, 184], "073651360408690802": [183, 184], "87835916829742444": [183, 184], "34622147871872355": [183, 184], "20567119579830373": [183, 184], "42658381934346423": [183, 184], "27715586337053655": [183, 184], "87999487046170488": [183, 184], "16364186693234739": [183, 184], "98604111274325335": [183, 184], "31830209002283116": [183, 184], "36372930495109934": [183, 184], "73434680601907532": [183, 184], "65926820980026724": [183, 184], "9830474686174655": [183, 184], "12246834322318068": [183, 184], "0293130665095358": [183, 184], "0529459366329164": [183, 184], "7755737603387041": [183, 184], "2685053357046323": [183, 184], "1926920625846602": [183, 184], "4857321786911326": [183, 184], "1445647965531025": [183, 184], "8943143876324848": [183, 184], "87403644639763023": [183, 184], "6464000746270226": [183, 184], "5545355219233219": [183, 184], "8988261206085766": [183, 184], "0785612031685732": [183, 184], "2948920530351256": [183, 184], "4682717483474708": [183, 184], "2364561845005868": [183, 184], "0695530720860349": [183, 184], "9439062757612424": [183, 184], "9563571060210054": [183, 184], "0678946581365616": [183, 184], "2485209278176157": [183, 184], "6386418932454814": [183, 184], "4800728241977779": [183, 184], "72646452125011518": [183, 184], "8341241854718167": [183, 184], "3482541467971951": [183, 184], "5558692651012178": [183, 184], "5624030818263908": [183, 184], "6768285328272157": [183, 184], "0106699901361971": [183, 184], "9175303893386597": [183, 184], "1087117017596031": [183, 184], "9111941479785823": [183, 184], "70001353796486": [183, 184], "5501953466420737": [183, 184], "8544512068951891": [183, 184], "9246058344257151": [183, 184], "123740240481137": [183, 184], "110657752575519": [183, 184], "0774760107085393": [183, 184], "6547967574269418": [183, 184], "6868873425221045": [183, 184], "9308254017076039": [183, 184], "9448006865754279": [183, 184], "0788555249744247": [183, 184], "396205767032443": [183, 184], "0516249434348621": [183, 184], "42035392996461629": [183, 184], "2989465364173602": [183, 184], "2706795830191275": [183, 184], "651698949077459": [183, 184], "1364194264447973": [183, 184], "3637257964296152": [183, 184], "5082040184760555": [183, 184], "2502121678035314": [183, 184], "5383631321594571": [183, 184], "5274668721202556": [183, 184], "473426056956777": [183, 184], "400114365788911": [183, 184], "0434200740148363": [183, 184], "513062501300436": [183, 184], "718209259961025": [183, 184], "3986743034356737": [183, 184], "0590996420222467": [183, 184], "6632346815268289": [183, 184], "8894243587379433": [183, 184], "2802341564965607": [183, 184], "4921791441653762": [183, 184], "5297912885016269": [183, 184], "5780900056883569": [183, 184], "0634598983096293": [183, 184], "2904478604819776": [183, 184], "0857595813036722": [183, 184], "6366192967000295": [183, 184], "5596385297232223": [183, 184], "3177709282351766": [183, 184], "1361714943468244": [183, 184], "9107871995830976": [183, 184], "7240531749202161": [183, 184], "8033709892679886": [183, 184], "1017624989859351": [183, 184], "54374796617700816": [183, 184], "3715344477591818": [183, 184], "2387553898801391": [183, 184], "8187172884547076": [183, 184], "1522284671097314": [183, 184], "0454193728074506": [183, 184], "1688190599740418": [183, 184], "9848808505730315": [183, 184], "5176013894081675": [183, 184], "1965918931505275": [183, 184], "0248869962483522": [183, 184], "4535361867324776": [183, 184], "4437155145638751": [183, 184], "2171776428648808": [183, 184], "0867326734388021": [183, 184], "5763512667620065": [183, 184], "785293447306691": [183, 184], "2489915323631275": [183, 184], "6589505137265448": [183, 184], "2817385669950028": [183, 184], "0553290947191964": [183, 184], "5481507299407191": [183, 184], "2080477057573553": [183, 184], "2817876881965624": [183, 184], "12512408298772948": [183, 184], "4831125975271719": [183, 184], "7834950195462245": [183, 184], "2064606598908139": [183, 184], "2421411165648886": [183, 184], "3461204499811092": [183, 184], "65966593807378215": [183, 184], "36559473517464181": [183, 184], "9248327086099932": [183, 184], "4223418217602317": [183, 184], "790875007038224": [183, 184], "9026572243192548": [183, 184], "21621909226838504": [183, 184], "16100173690141428": [183, 184], "8875278273011942": [183, 184], "2792213808538602": [183, 184], "9041297697847308": [183, 184], "4298318748123444": [183, 184], "8717874765920124": [183, 184], "2660121035644738": [183, 184], "8922848961161609": [183, 184], "4724681658043082": [183, 184], "8875314666371643": [183, 184], "1337207059785208": [183, 184], "2290596706950154": [183, 184], "0970619686963916": [183, 184], "4188864705446997": [183, 184], "824501293502089": [183, 184], "87811217547665232": [183, 184], "6141377553638456": [183, 184], "4736768016729647": [183, 184], "9646033676482686": [183, 184], "7291507868196327": [183, 184], "6494860793108481": [183, 184], "1744278681124489": [183, 184], "3291564189715617": [183, 184], "1892910878432268": [183, 184], "6260111359196396": [183, 184], "8029748349762125": [183, 184], "1110554486386404": [183, 184], "0087017311510849682": [183, 184], "812034605848817": [183, 184], "8310006567642712": [183, 184], "0643824785110239": [183, 184], "7806635726760689": [183, 184], "8724397920934015": [183, 184], "65927045141188367": [183, 184], "6202135060380289": [183, 184], "18281430910806151": [183, 184], "8134764145891591": [183, 184], "0328054369849538": [183, 184], "0315824591034124": [183, 184], "5339867923196042": [183, 184], "0906912982614791": [183, 184], "8390710019489158": [183, 184], "77019164393866146": [183, 184], "0099320163703895": [183, 184], "2239134319849398": [183, 184], "5227757084315567": [183, 184], "5342615497190861": [183, 184], "5402720724503229": [183, 184], "52313297572359074": [183, 184], "8268409663350287": [183, 184], "0896974241486603": [183, 184], "83931337455192145": [183, 184], "9824769771009292": [183, 184], "8062615072223389": [183, 184], "7151819974072808": [183, 184], "6553638508191835": [183, 184], "94296691141453703": [183, 184], "3332773280899097": [183, 184], "9080659785364102": [183, 184], "8017876981653527": [183, 184], "146797854411842": [183, 184], "4943345068020939": [183, 184], "6135304662636716": [183, 184], "5968234340599352": [183, 184], "2240732422979015": [183, 184], "40050907128273239": [183, 184], "0003615064702411": [183, 184], "3564534485947091": [183, 184], "5251603471425388": [183, 184], "3602495377614252": [183, 184], "70829180528117897": [183, 184], "8705912438690024": [183, 184], "9857439387875215": [183, 184], "3495410597763557": [183, 184], "7415118623160484": [183, 184], "8482449535792851": [183, 184], "1227029816875906": [183, 184], "943690794192229": [183, 184], "5533372938495322": [183, 184], "23654193364300019": [183, 184], "9320538122814632": [183, 184], "27398085527961841": [183, 184], "5379571426787906": [183, 184], "5479478416595258": [183, 184], "9952197756192462": [183, 184], "9519866242123729": [183, 184], "63418929807710789": [183, 184], "9714021509147459": [183, 184], "7514419719026835": [183, 184], "7952656655539831": [183, 184], "8168652955867248": [183, 184], "8059389896821614": [183, 184], "86083201462211": [183, 184], "6763339473293351": [183, 184], "2346287443442741": [183, 184], "0049022214331869": [183, 184], "0159172780756807": [183, 184], "6747832401686313": [183, 184], "9625789720275502": [183, 184], "21332969214064601": [183, 184], "4459656516053521": [183, 184], "8490131071943328": [183, 184], "4887755131556295": [183, 184], "0537691340713213": [183, 184], "1214658457920255": [183, 184], "8180419262808878": [183, 184], "0417225435808637": [183, 184], "4876076903545457": [183, 184], "2056831059665383": [183, 184], "4403227294912879": [183, 184], "29183542445509": [183, 184], "1299087065549616": [183, 184], "6894950904308068": [183, 184], "67877427899602139": [183, 184], "2334935303450196": [183, 184], "66692066781151726": [183, 184], "918359229911677": [183, 184], "43825691963852248": [183, 184], "0912552685819197": [183, 184], "9256467457380193": [183, 184], "9995400634925016": [183, 184], "2633779062253305": [183, 184], "3270510253578853": [183, 184], "8998811026998816": [183, 184], "4372749748248483": [183, 184], "800876689538256": [183, 184], "5720483206059228": [183, 184], "5479241832525954": [183, 184], "5107697954439923": [183, 184], "6063323885377114": [183, 184], "45355690226015": [183, 184], "3924594206301864": [183, 184], "8170391803389006": [183, 184], "3343907023480963": [183, 184], "1592191821861308": [183, 184], "551692003143347": [183, 184], "2147820707711716": [183, 184], "55930561729387951": [183, 184], "2364813901253862": [183, 184], "7059292544869302": [183, 184], "5980046177747229": [183, 184], "0606302788023871": [183, 184], "0235041652892747": [183, 184], "27015781708378661": [183, 184], "4303330714757383": [183, 184], "3989583334332432": [183, 184], "4649562148782955": [183, 184], "3524552397826168": [183, 184], "3322237797463616": [183, 184], "6813558717119386": [183, 184], "3359544685337736": [183, 184], "7104894884469877": [183, 184], "350410042767797": [183, 184], "8412188670946792": [183, 184], "8993273426849919": [183, 184], "5101185505218293": [183, 184], "3563537615645282": [183, 184], "0439247587050282": [183, 184], "3738404946436238": [183, 184], "43277784903448813": [183, 184], "6236691719193734": [183, 184], "8192122194763103": [183, 184], "3000303214498619": [183, 184], "7045156595962521": [183, 184], "2036876689968699": [183, 184], "22379027409222038": [183, 184], "0078193725337679": [183, 184], "33061456656172339": [183, 184], "3173753727230917": [183, 184], "3292728936983247": [183, 184], "17305051546078376": [183, 184], "3708524146324814": [183, 184], "18920570140751003": [183, 184], "7288547711089577": [183, 184], "5559793038807355": [183, 184], "4460955268542377": [183, 184], "65537111745445098": [183, 184], "3024274811626642": [183, 184], "32733974310015845": [183, 184], "6653194005399481": [183, 184], "3495524342659682": [183, 184], "50620561077402126": [183, 184], "6859406925109957": [183, 184], "0042337939426813": [183, 184], "4168309661540643": [183, 184], "3784247121303279": [183, 184], "0873449293614152": [183, 184], "8206900404120345": [183, 184], "3397623772131446": [183, 184], "2347446764630474": [183, 184], "8720948774765485": [183, 184], "6955132035521556": [183, 184], "9472576652843694": [183, 184], "3542922693748149": [183, 184], "030233796538444": [183, 184], "6199282129862145": [183, 184], "7351581782776853": [183, 184], "5709314373179808": [183, 184], "14607908112131446": [183, 184], "79251837326064": [183, 184], "37002429983216167": [183, 184], "3653059393186942": [183, 184], "8616789948811956": [183, 184], "6100436336617339": [183, 184], "8019087210485418": [183, 184], "5911421188072357": [183, 184], "6953052292111459": [183, 184], "3928959775316905": [183, 184], "049532260408768": [183, 184], "9169000088107522": [183, 184], "8042700374731648": [183, 184], "6636201843555991": [183, 184], "2856117402115821": [183, 184], "497386564362329": [183, 184], "1085015582769402": [183, 184], "1635806015318408": [183, 184], "51764720743541925": [183, 184], "3207617687324866": [183, 184], "6552485122750968": [183, 184], "9457154950840061": [183, 184], "4574030967957459": [183, 184], "13220998701481373": [183, 184], "1064026703010086": [183, 184], "6992062016898437": [183, 184], "6218017958370492": [183, 184], "4171784152426357": [183, 184], "1893570148164336": [183, 184], "53987360896641756": [183, 184], "62289304323418893": [183, 184], "6377915319211773": [183, 184], "95656595366184183": [183, 184], "5482370903224183": [183, 184], "6552715153624238": [183, 184], "42419842122106877": [183, 184], "9138981541477369": [183, 184], "5211086418661788": [183, 184], "7643908686171743": [183, 184], "3462875243179644": [183, 184], "4001664954474204": [183, 184], "8715548148469952": [183, 184], "7209034976257116": [183, 184], "3132712976844925": [183, 184], "0077653108424371": [183, 184], "8044349295045858": [183, 184], "7004396541700451": [183, 184], "6313151291578776": [183, 184], "7805282578575432": [183, 184], "3496033840422226": [183, 184], "5149407509344646": [183, 184], "4491799573779538": [183, 184], "4969549443875327": [183, 184], "59052341158001964": [183, 184], "5871839418980924": [183, 184], "8626995345211439": [183, 184], "530084220131168": [183, 184], "73947783901217035": [183, 184], "2278934560638541": [183, 184], "4480933790189707": [183, 184], "6638968948801822": [183, 184], "8603129450393652": [183, 184], "0034748779660814": [183, 184], "3783603559660618": [183, 184], "24711046251746965": [183, 184], "0245225170472958": [183, 184], "75233017871629115": [183, 184], "4003624728787472": [183, 184], "3204808270534789": [183, 184], "8530050107548528": [183, 184], "66555456366565435": [183, 184], "210607962975542": [183, 184], "4312598575388913": [183, 184], "8510534338146063": [183, 184], "0579141292803367": [183, 184], "8599892658343156": [183, 184], "1580465239922022": [183, 184], "6376354853614972": [183, 184], "6525127599513731": [183, 184], "9406618825179196": [183, 184], "3353268107001339": [183, 184], "5193520805659642": [183, 184], "9838132614191322": [183, 184], "5937246171656669": [183, 184], "_i": [183, 184], "nmat": 184, "29862811e": 184, "97516377e": 184, "10328629e": 184, "90790022e": 184, "11774822e": 184, "71706160e": 184, "10657750e": 184, "06987653e": 184, "47893457e": 184, "95288785e": 184, "17873789e": 184, "62159368e": 184, "00171710e": 184, "22716812e": 184, "43721861e": 184, "46689480e": 184, "50739404e": 184, "65758626e": 184, "67080933e": 184, "01271960e": 184, "06246640e": 184, "12023335e": 184, "15823780e": 184, "40007127e": 184, "42330441e": 184, "44200543e": 184, "48046940e": 184, "83472417e": 184, "88760137e": 184, "98652806e": 184, "05062459e": 184, "45716799e": 184, "55952462e": 184, "72589427e": 184, "86383519e": 184, "98776759e": 184, "24048853e": 184, "51749090e": 184, "76260241e": 184, "09890091e": 184, "16973825e": 184, "38422915e": 184, "54406301e": 184, "82908856e": 184, "06195525e": 184, "21987207e": 184, "51026374e": 184, "31385944e": 184, "36832387e": 184, "10194808e": 184, "12706645": 184, "1471807": 184, "11300729": 184, "1497489": 184, "15689742": 184, "15497599": 184, "15887778": 184, "15239956": 184, "1541509": 184, "15434079": 184, "15308929": 184, "14778115": 184, "14353765": 184, "14642567": 184, "13629278": 184, "13739056": 184, "1202737": 184, "15177162": 184, "1510202": 184, "14927889": 184, "15778361": 184, "13734517": 184, "00981551": 184, "12396176": 184, "14384261": 184, "14991691": 184, "0936683": 184, "10998677": 184, "11870976": 184, "16228832": 184, "15880678": 184, "17617328": 184, "12965455": 184, "13772134": 184, "14785981": 184, "13627598": 184, "17093183": 184, "1189228": 184, "10336518": 184, "12629383": 184, "14222274": 184, "13799138": 184, "12981884": 184, "16297189": 184, "15845984": 184, "13077619": 184, "15656133": 184, "16060489": 184, "11805402": 184, "14021942": 184, "createproximitymatrix": 184, "33607823e": 184, "69976843e": 184, "80285954e": 184, "41648335e": 184, "38278275e": 184, "51753802e": 184, "90919719e": 184, "88702158e": 184, "65910722e": 184, "18671103e": 184, "73374647e": 184, "45881912e": 184, "59966914e": 184, "63553433e": 184, "85061645e": 184, "08380506e": 184, "21989770e": 184, "05000993e": 184, "56991352e": 184, "65510715e": 184, "18345495e": 184, "memory_profil": 185, "datax": [185, 186], "datay": [185, 186], "n_clusters_per_class": [185, 186], "62557523": 185, "92972784": 185, "19327029": 185, "01669145": 185, "66440003": 185, "05373302": 185, "09569564": 185, "62733": 185, "05437465": 185, "43404744": 185, "88137987": 185, "1603541": 185, "97569429": 185, "28962313": 185, "06727548": 185, "81364917": 185, "15972723": 185, "99923386": 185, "25393473": 185, "67807834": 185, "74986482": 185, "68848993": 185, "83230911": 185, "15836161": 185, "71428315": 185, "53155132": 185, "49799497": 185, "53866452": 185, "55477724": 185, "79401366": 185, "sklpathf": 185, "sklpath": 185, "448": 185, "ipykernel_4917": 185, "1382514021": 185, "_classif": 185, "738": 185, "_pairwise_distances_reduct": 185, "_dispatch": 185, "_validate_dat": 185, "check_array": 185, "_assert_all_finit": 185, "threadpool_limit": 185, "threadpoolctl": 185, "2177": 185, "458": 185, "414": [185, 187], "813": 185, "num_thread": 185, "is_usable_for": 185, "get_num_thread": 185, "set_num_thread": 185, "ctyp": 185, "_method": 185, "_sum": 185, "1417": 185, "check_is_fitted": 185, "1140": 185, "_wrapfunc": 185, "_set_threadpool_limit": 185, "411": 185, "effective_n_job": 185, "1379": 185, "_is_fitted": 185, "get_active_backend": 185, "_num_sampl": 185, "restore_original_limit": 185, "1017": 185, "pairwise_dist": 185, "what_to_measur": 186, "07576929999959248": 186, "nf_set": 186, "nob": 186, "dt2": 186, "ball_tre": 186, "0035799999996015686": 186, "08653190000040922": 186, "010255199999846809": 186, "11729259999992792": 186, "005994999999529682": 186, "11148469999989175": 186, "004818200000045181": 186, "12828609999996843": 186, "005615799999759474": 186, "0024919999996200204": 186, "04157219999979134": 186, "007431699999870034": 186, "11408440000013798": 186, "0051083999996990315": 186, "3907441999999719": 186, "random_sparse_matrix": 186, "ratio_spars": 186, "nnz": 186, "what_to_measure_spars": 186, "nb_spars": 186, "sparse_ratio": 186, "16139359999942826": 186, "16765100000066": 186, "9546476190476191": 186, "157290099999955": 186, "9173545454545454": 186, "374867700000323": 186, "37886189999972": 186, "7777733333333333": 186, "63584069999979": 186, "mesuron": 186, "what_to_measure_perf": 186, "good": [186, 198], "0014494000006379792": 186, "perf": 186, "0015942999998515006": 186, "0019345000000612345": 186, "002628500000355416": 186, "001998000000639877": 186, "0025021000001288485": 186, "concordent": 186, "revenon": [131, 186], "hyperplan": 186, "inert": 186, "what_to_measure_perf_acp": 186, "acp_dim": 186, "t1o": 186, "t2o": 186, "goodo": 186, "t0": 186, "x_train_pc": 186, "x_test_pc": 186, "002483399999618996": 186, "06338310000046476": 186, "22452249999969354": 186, "p_noacp": 186, "y_noacp": 186, "dt_noacp": 186, "perf_noacp": 186, "dt_train": 186, "dt_predict": 186, "0015590000002703164": 186, "0045598999995490885": 186, "0020978000002287445": 186, "003090600000177801": 186, "10930980000011914": 186, "009109900000112248": 186, "05428739999933896": 186, "13726130000031844": 186, "0553301999998439": 186, "046151300000019546": 186, "eton": 186, "conseerv": 186, "absurd": [187, 188], "contred": 187, "matrix_distance_7398": [187, 188], "boulogn": [187, 188], "billancourt": [187, 188], "beauv": [187, 188], "85597": [187, 188], "courbevoi": [187, 188], "sevran": [187, 188], "26564": [187, 188], "colomb": [187, 188], "alfortvill": [187, 188], "36843": [187, 188], "bagneux": [187, 188], "marcq": [187, 188], "baroeul": [187, 188], "233455": [187, 188], "suresn": [187, 188], "gennevilli": [187, 188], "10443": [187, 188], "charlevill": [187, 188], "mezier": [187, 188], "bordeau": [187, 188], "djikstr": 187, "rentrent": 187, "lou": 187, "t_i": [134, 187, 188], "arrang": 187, "t_n": [187, 188], "t_3": 187, "t_4": 187, "t_": 187, "s_3": 187, "s_4": 187, "s_5": 187, "s_6": 187, "s_7": 187, "sigma_m": 187, "4496565125341727": 187, "6181478314088333": 187, "6472124781567143": 187, "689855001829289": 187, "7069363711449275": 187, "720882923000757": 187, "7315603136077902": 187, "757295341401446": 187, "806174917827697": 187, "8273604346819485": 187, "539691655662206": 187, "5677016209991443": 187, "651632433144162": 187, "6723990573029228": 187, "6967500647083442": 187, "6991707543184964": 187, "7173171973288348": 187, "764722044308385": 187, "789682343736771": 187, "8113678294188096": 187, "8872585832253812": 187, "8910607675180564": 187, "893354126537998": 187, "9435870591562554": 187, "9577834515908243": 187, "caract\u00e8ris": 187, "v_0": 187, "sum_v": 187, "agorithm": 187, "dikjstr": 187, "fe": [187, 204], "1684": 187, "3437": 187, "348": 187, "3980": 187, "698": 187, "7zip": 187, "pysens": 187, "tar": 187, "60050": 187, "2363": 187, "2346": 187, "2025": 187, "2140": 187, "2428": 187, "2201": 187, "2506": 187, "2425": 187, "2557": 187, "vil": 188, "rejoindr": 188, "7888": 188, "m\u00e9zi": 188, "816197": 188, "813197": 188, "795670": 188, "t_j": 188, "t_k": 188, "nec\u00e9ssair": 188, "restreindr": 188, "301415513544109": 188, "graph_notebook_sk": 188, "xymatrix": 188, "tmoertel": 189, "w_": [189, 190], "brib": [189, 190], "prisoner": [189, 190], "royaum": 189, "prison": [189, 190], "vivent": [189, 204], "parlent": 189, "veil": 189, "relach": 189, "x_k": 189, "k_i": 189, "k_a": 189, "k_t": 189, "sol": 190, "inter": 190, "benjamin": 190, "donnot": 190, "new_intervall": 190, "mymax": 190, "oracl": 190, "esoudr": 190, "priso": 190, "groupkfold": 190, "stratified": 190, "codeforc": [191, 192], "483a": [191, 192], "geologist": [191, 192], "sometim": [191, 192], "rainfall": [191, 192], "drainag": [191, 192], "basin": [191, 192], "elev": [191, 192], "rul": [191, 192], "wat": [191, 192], "neighboring": [191, 192], "sink": [191, 192], "west": [191, 192], "south": [191, 192], "drain": [191, 192], "directly": [191, 192], "indirectly": [191, 192], "labeled": [191, 192], "resulting": [191, 192], "lexicographically": [191, 192], "western": [191, 192], "lead": [191, 192], "evil": [191, 192], "leagu": [191, 192], "hors": [191, 192], "recently": [191, 192], "been": [191, 192], "far": [191, 192], "backstabbing": [191, 192], "decided": [191, 192], "department": [191, 192], "separat": [191, 192], "troublesom": [191, 192], "thoroughbred": [191, 192], "isn": [191, 192], "his": [191, 192], "valuabl": [191, 192], "figuring": [191, 192], "himself": [191, 192], "got": [191, 192], "loyal": [191, 192], "henchman": [191, 192], "uva": [191, 192], "10911": [191, 192], "job": [191, 192], "forming": [191, 192], "quiz": [191, 192], "mca": [191, 192], "cpci": [191, 192], "championship": [191, 192], "student": [191, 192], "interested": [191, 192], "participat": [191, 192], "consisting": [191, 192], "memb": [191, 192], "near": [191, 192], "sure": [191, 192], "x_3": [191, 192], "minimized": [191, 192], "adn": 192, "fulkerson": 192, "flot": 192, "enrich": 193, "atout": 193, "tarot": 193, "mesparametr": 193, "pas_gradient": 193, "fonction_any": 193, "pronom": 193, "0x7fb13a470c10": 193, "autre_point": 193, "appliq": 193, "carremag": [193, 194], "rattach": 193, "4031242374328485": 193, "lx": 193, "738793548317167": 193, "000000000010186": 193, "est_nul": 193, "somme_ligne_colonne_diagonal": 194, "coefficient_un": 194, "est_mag": 194, "tous_les_carre_na": 194, "tous_les_carre_naif2": 194, "stop_aft": 194, "tous_les_carres_permut": 194, "firstn": 194, "380064799999673": 194, "tous_les_carres_permutation_ligne12_meme_somm": 194, "435667799996736": 194, "5677748000016436": 194, "tous_les_carr": 194, "version1": 195, "fonction3": 195, "fonction_final": 195, "version2": 195, "tirage_aleatoir": [195, 196], "moyenne_tirag": [195, 196], "tricheur": 195, "piecetruque": [195, 196], "piecetruqueemix": [195, 196], "al\u00e9atoiremnt": 195, "d\u00e9cryptag": [197, 198], "polynom": 197, "2x": 197, "log_bas": 197, "9999999999999996": 197, "965784284662087": 197, "lettre_suiv": [197, 198], "valeur_absolu": 197, "acroym": 197, "compact": [197, 207, 208], "timecomplexity": 197, "pr\u00e9dictibl": 197, "aeco": 197, "eddard": [197, 198], "catelyn": [197, 198], "robb": [197, 198], "sansa": [197, 198], "arya": [197, 198], "brandon": [197, 198], "rickon": [197, 198], "theon": [197, 198], "rorbert": [197, 198], "cersei": [197, 198], "tywin": [197, 198], "jaim": [197, 198], "tyrion": [197, 198], "sha": [197, 198], "bron": [197, 198], "lancel": [197, 198], "joffrey": [197, 198], "sandor": [197, 198], "vary": [197, 198], "renly": [197, 198], "mots_lettre_posit": [197, 198], "dictionnaire_bien_chois": [197, 198], "reformul": 197, "jenesuispascod": [197, 198], "mhqhvxlvsdvfrgh": [197, 198], "dop": [197, 198], "dictionnaire_chois": 198, "dictionair": 198, "unordered_map": 198, "stl": 198, "accessing": 198, "code_cesar": 198, "mschgjlgedgrrrt": 198, "int_a": 199, "6145744834544478": [199, 200], "ave": [200, 204], "2320146802585272": 200, "integrale_precis": 200, "val0": 200, "2196877891927724": 200, "piano": 200, "int2": [200, 203], "integrale_precise_2n": 200, "5000454610560389": 200, "81920": 200, "2169740198498182": 200, "int_0": 200, "xdx": 200, "discontinu": 200, "max_fp": 200, "last_f": 200, "fx": 200, "integrale_precise_derive": 200, "5004995004994989": 200, "integrale_bizarr": 200, "px": 200, "0625": 200, "2857142857142856": 200, "rationnel": 200, "tombent": 200, "integrale_mc": 200, "5443922662659958": 200, "integrale_mc_precis": 200, "moy0": 200, "5001005538840249": 200, "i_n": 200, "16m": 200, "16e4": 200, "500765653300686": 200, "885": 200, "create_gam": 202, "gameover1": 202, "masked_not_equal": 202, "gameov": 202, "gam": 202, "process_lin": 202, "prev": 202, "update_gam": 202, "reversed": 202, "interag": 203, "capteur": 203, "condens": 203, "pyramide_bigarre": 203, "classes_heritage_correct": 203, "lemonde5": [203, 210], "voeux83": [203, 204], "classes_carre_mag": 203, "lemonde3": [203, 210], "blogny1": [203, 210], "blog3": [203, 210], "nytimes5": [203, 210], "classes_carre_magique_correct": 203, "integrale_rectangle_correct": 203, "nytimes2": [203, 210], "voeux05": [203, 204], "module_file_regex": 203, "lemonde1": [203, 210], "nytimes8": [203, 210], "voeux06": [203, 204], "dictionnaire_vigener": 203, "voeux": [203, 204], "lemonde9": [203, 210], "voeux08": [203, 204], "texte_langue_correct": 203, "nytimes1": [203, 210], "voeux01": [203, 204], "premiers_pas_correct": 203, "nytimes9": [203, 210], "voeux74": [203, 204], "j2048": 203, "voeux75": [203, 204], "elpais2": [203, 210], "lequipe1": [203, 210], "voeux94": [203, 204], "lemonde7": [203, 210], "lemonde10": [203, 210], "seance4_excel": [203, 204], "arthur_charpentier2": [203, 209, 210], "afp2": [203, 209, 210], "inconnu2": [203, 210], "pyramide_bigarree_correct": 203, "afp1": [203, 209, 210], "lemonde8": [203, 210], "elpais5": [203, 210], "module_file_regex_correct": 203, "nytimes3": [203, 210], "voeux89": [203, 204], "arthur_charpentier3": [203, 209, 210], "voeux87": [203, 204], "lemonde11": [203, 210], "elpais4": [203, 210], "nytimes7": [203, 210], "lemonde2": [203, 210], "inconnu1": [203, 210], "lequipe2": [203, 210], "premiers_p": 203, "lemonde6": [203, 210], "blog1": [203, 210], "voeux09": [203, 204], "voeux90": [203, 204], "elpais7": [203, 210], "exemple_fichi": 203, "elpais6": [203, 210], "texte_langu": 203, "integrale_rectangl": 203, "voeux07": [203, 204], "classes_heritag": 203, "arthur_charpentier1": [203, 209, 210], "lemonde4": [203, 210], "blog2": [203, 210], "dictionnaire_vigenere_correct": 203, "variable_boucle_test": 203, "nytimes6": [203, 210], "elpais3": [203, 210], "variable_boucle_tests_correct": 203, "j2048_correct": 203, "nytimes4": [203, 210], "voeux79": [203, 204], "elpais1": [203, 210], "pragmat": 203, "reconnu": 203, "exportent": 203, "grop": 203, "volum": 203, "3x3": [203, 204], "gz": 203, "wav": 203, "ogg": 203, "mp4": 203, "vorb": 203, "v\u00f4tr": 203, "5403023058681398": [203, 204], "\u00eate": [203, 204], "fonction_cos_sequent": [203, 204], "dynload": 203, "4161468365471424": [203, 204], "async_helper": 203, "autocall": 203, "builtin_trap": 203, "completerlib": 203, "pr\u00e9ambul": 203, "1903": 203, "1957": 203, "indiff\u00e9rent": 203, "securit": [203, 204], "insecurit": [203, 204], "mako": [203, 204], "templating": [203, 204], "seance4_excel_mat": 204, "6414749515069115": 204, "4096411389655439": 204, "7991926327688407": 204, "9918119068265183": 204, "07379598399157106": 204, "4290244325276996": 204, "9337274118746318": 204, "17483162769873706": 204, "6159652170653446": 204, "4835251137894401": 204, "date1": 204, "2013": 204, "date0": 204, "birth": 204, "weekday": 204, "monmodule2": 204, "monmodule3": 204, "Mes": 204, "compatriot": 204, "peupl": 204, "respir": 204, "rythm": 204, "bat": 204, "coeur": 204, "f\u00eat": 204, "no\u00ebl": 204, "participent": 204, "joi": 204, "retrouvaill": 204, "chaleur": 204, "familial": 204, "amical": 204, "toulous": 204, "\u00e9preuv": 204, "solidar": 204, "amiti": 204, "nation": 204, "vivr": 204, "ignorecas": 204, "soldat": 204, "constru": 204, "victim": 204, "salu": 204, "avancent": 204, "avan": 204, "souffranc": 204, "gouvern": 204, "tristess": 204, "foi": 204, "profon": 204, "craint": 204, "\u00e9prouvent": 204, "angoiss": 204, "\u00e9treint": 204, "peur": 204, "exasper": 204, "entreprendr": 204, "int\u00e9": 204, "fiert": 204, "brutal": 204, "efforc": 204, "agi": 204, "d\u00e9fendr": 204, "enver": 204, "trah": 204, "hypocris": 204, "urg": 204, "leu": 204, "doulour": 204, "cett": 204, "responsab": 204, "prot": 204, "devo": 204, "persuad": 204, "fragil": 204, "r\u00e9form": 204, "p\u00e9nal": 204, "ministr": 204, "fran\u00e7ois": 204, "fillon": 204, "cepen": 204, "hommag": 204, "froid": 204, "partenair": 204, "boulevers": 204, "r\u00e9publ": 204, "redon": 204, "JE": 204, "VOUS": 204, "NE": 204, "ennui": 204, "AI": 204, "dej": 204, "decrit": 204, "ET": 204, "DE": 204, "PAR": 204, "QUE": 204, "MES": 204, "SOIENT": 204, "LES": 204, "AU": 204, "LA": 204, "societ": 204, "francais": 204, "SOIT": 204, "fraternit": 204, "EST": 204, "AUX": 204, "agriculteur": 204, "artisan": 204, "examin": 204, "QU": 204, "EN": 204, "CE": 204, "rol": 204, "LUI": 204, "LE": 204, "OU": 204, "NOUS": 204, "appa": 204, "PAS": 204, "AVEZ": 204, "ILS": 204, "ONT": 204, "recu": 204, "AVEC": 204, "SUIS": 204, "etaient": 204, "couvert": 204, "LEUR": 204, "EUX": 204, "NOS": 204, "departem": 204, "a_l_etrang": 204, "QUI": 204, "malheur": 204, "SONT": 204, "hopital": 204, "egal": 204, "salut": 204, "travailleur": 204, "imm": 204, "chretien": 204, "TU": 204, "SOIES": 204, "UNE": 204, "accueil": 204, "POUR": 204, "president": 204, "grandeu": 204, "ELLE": 204, "SUR": 204, "entent": 204, "ren": 204, "aymon": 204, "SES": 204, "echangent": 204, "conduit": 204, "MON": 204, "SON": 204, "revien": 204, "afriqu": 204, "ME": 204, "soviet": 204, "urss": 204, "UN": 204, "prepar": 204, "av": 204, "UNS": 204, "promet": 204, "fa": 204, "soutiendr": 204, "lass": 204, "\u00e2g\u00e9": 204, "fratern": 204, "ardemment": 204, "\u00e9lect": 204, "pr\u00e9sidentiel": 204, "na\u00eetr": 204, "conf\u00e9der": 204, "dign": 204, "chanti": 204, "tribun": 204, "der": 204, "dois": 204, "redir": 204, "admir": 204, "\u00e9quipag": 204, "r\u00e9confort": 204, "accompl": 204, "qual": 204, "dissoc": 204, "naguer": 204, "gra": 204, "enac": 204, "ins\u00e9cur": 204, "r\u00e9forment": 204, "rvic": 204, "\u00e9nerg": 204, "immigr": 204, "banlieu": 204, "r\u00e9nov": 204, "isra\u00ebl": 204, "palestinien": 204, "patr": 204, "python_": 204, "doctyp": 204, "noj": 204, "enabled": 204, "pinned": 204, "toc": 204, "page_str": 204, "creativecommon": 204, "deed": 204, "af": 204, "programmeertaal": 204, "programmiersprach": 204, "d8": 204, "a8": 204, "a7": 204, "d9": 204, "8a": 204, "86_": 204, "a9_": 204, "a9": 204, "a6": 204, "a5": 204, "ast": 204, "az": 204, "proqraml": 204, "9fd": 204, "b1rma_dil": 204, "azb": 204, "8c": 204, "ul": 204, "endfor": 204, "tpl": 204, "ch\u00f4mag": 205, "incompr\u00e9hensibl": 205, "torchon": 205, "serviet": 205, "fautiv": 206, "premmi": 206, "4037913": 206, "miracl": [207, 208], "verg": [207, 208], "commercial": [207, 208], "acre": [207, 208], "permacultur": [207, 208], "qu\u00e9bec": [207, 208], "biodiversite_tri2": [207, 208], "boul": [207, 208], "pyramide_num2": 208, "scatter_demo": 208, "oeuvr": 209, "litt\u00e9rair": 209, "m\u00e9langent": 209, "\u00e9tiquet": 209, "admetton": 209, "disposon": 209, "infaillibl": 209, "dup": 209, "d\u00e9licat": 210, "read_file_enc": 210, "corbeau": 210, "bec": 210, "ma\u00eetr": 210, "renard": 210, "allech": 210, "Lui": 210, "\u00ee": 210, "histogram2": 210, "007751937984496124": 210, "06976744186046512": 210, "17829457364341086": 210, "03875968992248062": 210, "031007751937984496": 210, "08527131782945736": 210, "023255813953488372": 210, "10077519379844961": 210, "07751937984496124": 210, "05426356589147287": 210, "015503875968992248": 210, "0067247820672478205": 210, "007575757575757576": 210, "007012142979305627": 210, "02588801926550271": 210, "004853022739877981": 210, "010752688172043012": 210, "007556675062972292": 210, "010554089709762533": 210, "029830508474576273": 210, "01349112426035503": 210, "005625270445694505": 210, "005441436539246361": 210, "00224408769204212": 210, "009715025906735751": 210, "0051919661155895615": 210, "00016849199663016007": 210, "010804020100502512": 210, "007139797229758675": 210, "0021551724137931034": 210, "0055272108843537416": 210, "0014691478942213516": 210, "004875076173065204": 210, "0044822949350067235": 210, "007034547444114429": 210, "0020463847203274215": 210, "0034299968818210166": 210, "008162299639202697": 210, "00572041473006793": 210, "005029013539651838": 210, "030130034887408817": 210, "031933508311461065": 210, "02547634339541854": 210, "03934426229508197": 210, "035542582417582416": 210, "030610255410411385": 210, "04194094414143314": 210, "03151779230210603": 210, "03840526700804682": 210, "lemond": 210, "lem": 210, "text_other": 210, "wrap": 210, "boosting": [22, 128], "epkg": [], "lightgtbm": 22, "catboost": 22, "nbl": [], "ml_a_tree_overfitting": [], "ridg": [22, 128], "lasso": [22, 128], "elasticnet": 22, "ridge_lasso": [], "pr\u00e9trait": 22, "load_diabet": [22, 134], "0x7ff53516feb0": [], "max_depth": [131, 134], "gradientboostingregressorifittedgradientboostingregressor": 131, "n_estimator": [131, 134], "estimators_": [131, 134], "init_": 131, "model01": 131, "modelb": 131, "theta_": 131, "theta_t": 131, "g_": 131, "g_t": 131, "f_k": 131, "f_0": 131, "f_m": 131, "gamma_0": 131, "gamma_k": 131, "h_k": 131, "r\u00e9sidus": 131, "gamma_": 131, "h_m": 131, "accro\u00eet": 131, "modelc": 131, "exper": 131, "47it": 131, "6061998151266149": 131, "5241640887093781": 131, "6865162453017377": 131, "5868617679417452": 131, "6643588529036899": 131, "5882688129311655": 131, "r\u00e9gresseur": 131, "19it": 131, "g\u00e9n\u00e9ralis": 131, "40it": 131, "8505309865561821": 131, "7409584480906592": 131, "8372610096704007": 131, "8433616064058848": 131, "8610474948662841": 131, "7463887159097458": 131, "8469931884879516": 131, "8553184433763386": 131, "gbr": 131, "43it": 131, "8595510594071162": 131, "47103349192372335": 131, "6460977028277105": 131, "7953273631823825": 131, "8418307915852581": 131, "4894523688410177": 131, "6494948729040753": 131, "7754015641398699": 131, "squarederror": 131, "8362392926836479": 131, "5284643193472292": 131, "6696397339277518": 131, "7786586369744302": 131, "8866993680319293": 131, "5135892626305283": 131, "6803157400434685": 131, "8171169617436257": 131, "xgb": 131, "37it": [131, 134], "8590132304552919": 131, "7402716733771284": 131, "8482110599066995": 131, "8642576634357626": 131, "8599672573344654": 131, "7367047036233907": 131, "84659652680362": 131, "8606710003826832": 131, "lgbmregressor": 131, "choosing": 131, "wis": 131, "overhead": 131, "000073": 131, "force_row_wis": 131, "enough": 131, "force_col_wis": 131, "155": 131, "276912": 131, "000050": 131, "000069": 131, "344856": 131, "000056": 131, "000035": 131, "231196": 131, "000032": 131, "000049": 131, "434819": 131, "363485": 131, "000038": 131, "646337": 131, "000043": 131, "458236": 131, "000181": 131, "000068": 131, "527945": 131, "000031": 131, "000034": 131, "110538": 131, "000041": 131, "000054": 131, "536138": 131, "000080": 131, "140867": 131, "000060": 131, "416133": 131, "000053": 131, "000055": 131, "396002": 131, "000284": 131, "328942": 131, "560493": 131, "000076": 131, "66it": 131, "000047": 131, "999049": 131, "935543": 131, "000136": 131, "395022": 131, "189666": 131, "98it": 131, "000305": 131, "000033": 131, "000040": 131, "055646": 131, "000039": 131, "000048": 131, "380804": 131, "240350": 131, "63it": 131, "000577": 131, "005265": 131, "258938": 131, "91it": 131, "386138": 131, "8773032128441518": 131, "48214820701023675": 131, "6539572474605444": 131, "7984627882777451": 131, "8555575315832163": 131, "4977691173485087": 131, "6367319006906368": 131, "7683900978469463": 131, "lgb": 131, "95it": 131, "didn": 131, "explicitly": 131, "num_leav": 131, "000063": 131, "156120": 131, "182360": 131, "345161": 131, "20it": 131, "125674": 131, "173663": 131, "88it": 131, "000057": 131, "600185": 131, "499798": 131, "000052": 131, "414976": 131, "56it": [131, 134], "000245": 131, "000071": 131, "525282": 131, "000072": 131, "77it": 131, "312694": 131, "210617": 131, "757290": 131, "15it": 131, "371614": 131, "000059": 131, "379656": 131, "10it": 131, "000856": 131, "051009": 131, "81it": 131, "140242": 131, "000077": 131, "432455": 131, "000070": 131, "000085": 131, "319151": 131, "29it": 131, "163655": 131, "329555": 131, "86it": 131, "444763": 131, "058841": 131, "162133": 131, "433042": 131, "500633": 131, "8384828369380417": 131, "7470535641154521": 131, "8395674441554806": 131, "8460697933405346": 131, "8966181473711606": 131, "7767690018820292": 131, "8808463799894176": 131, "8937462469421166": 131, "catboostregressor": 131, "26it": 131, "8878458732034202": 131, "5106308809971148": 131, "6633876012158881": 131, "7962100349534728": 131, "8702333178716275": 131, "47507766677086194": 131, "632648027686756": 131, "7779024827838191": 131, "97it": 131, "8605624010619503": 131, "7022983070352993": 131, "8366211999791443": 131, "8636015275401271": 131, "8456129223719402": 131, "7027514870740816": 131, "8333140676555679": 131, "8596728951071267": 131, "56507947": 134, "63366763": 134, "67654224": 134, "74727391": 134, "27261232": 134, "79683015": 134, "9985268": 134, "18645867": 134, "50606168": 134, "08885871": 134, "5338804549709038": 134, "inversibl": 134, "nbsphinx": [], "14638204850109837": 134, "5078580798207908": 134, "1546076751624358": 134, "npour": 134, "92288256836204": 134, "468149305335954": 134, "pr\u00e9f\u00e9re": 134, "5109393397213065": 134, "14560512791194": 134, "las": 134, "alf": 134, "nbnull": 134, "533887": 134, "533923": 134, "00500": 134, "533023": 134, "01000": 134, "529573": 134, "01500": 134, "522538": 134, "nbvar": 134, "set_xscal": 134, "contradictoir": 134, "concatenate_predict": 134, "x_train_rf": 134, "x_test_rf": 134, "r2_rf": 134, "436048": 134, "477698": 134, "437957": 134, "453785": 134, "alpha_2": 134, "e_r": 134, "e_l": 134, "xyl1": 134, "xyl2": 134, "xyl3": 134, "lambda1": 134, "lambda2": 134, "train_lasso": 134, "sauc": 134, "regressormixin": 134, "lassorandomforestregressor": 134, "precomput": 134, "warm_start_lasso": 134, "cyclic": 134, "criterion": 134, "squared_error": 134, "min_samples_spl": 134, "min_samples_leaf": 134, "min_weight_fraction_leaf": 134, "max_featur": 134, "max_leaf_nod": 134, "min_impurity_decreas": 134, "oob_scor": 134, "warm_start_rf": 134, "ccp_alph": 134, "max_sampl": 134, "_concatenate_predict": 134, "rf_": 134, "warm_start": 134, "x_rf": 134, "lasso_": 134, "47415783259761723": 134, "26413444": 134, "49396068": 134, "44598638": 134, "52062164": 134, "10872839": 134, "shufflespl": 134, "23637803": 134, "33097263": 134, "35233357": 134, "40361275": 134, "45858455": 134, "lassorandomforestregressorlassorandomforestregressor": 134, "best_params_": 134, "44775063104195545": 134, "optimizedlassorandomforestregressor": 134, "model2": 134, "4731987666983202": 134, "optimzed_rf": 134, "lasso_rf": 134, "st_siz": 134, "1354238": 134, "2979576": 134, "61186": [], "61182": [], "81227": [], "11064": [], "11062": [], "70160": [], "20034": [], "20033": [], "81215": [], "0x7f657301d120": [], "run_python_script_140074686759232": [], "0x7f65af3eb6f0": [], "run_python_script_140073650718016": [], "run_python_script_140074663098816": [], "run_python_script_140073650375552": [], "run_python_script_140074568144192": [], "run_python_script_140074671240512": [], "run_python_script_140074700631488": [], "2642007000004014": [], "0726551000002473": [], "6094550000002528": [], "run_python_script_140074667989760": [], "run_python_script_140074642059392": [], "run_python_script_140074694506560": [], "run_python_script_140074661264192": [], "run_python_script_140074710097664": [], "run_python_script_140074703678784": [], "run_python_script_140074564059328": [], "run_python_script_140074564120384": [], "run_python_script_140074564120512": [], "run_python_script_140074564239232": [], "049003000000084285": [], "04276260000006005": [], "406478": [], "17617": 232, "1706827944": [], "4147284": [], "0x7f65c80cad40": [], "run_python_script_140074610032576": [], "run_python_script_140074609714496": [], "run_python_script_140074613423104": [], "run_python_script_140074613138112": [], "run_python_script_140074613572224": [], "run_python_script_140074612881920": [], "run_python_script_140074612941376": [], "0x7f65acd16050": [], "run_python_script_140074605850560": [], "run_python_script_140074613670016": [], "0x7f65a9cdb1c0": [], "140752": [], "6677732980977309": [], "run_python_script_140074623015424": [], "0x7f65abeb8610": [], "920": [], "755": [], "588": [], "603": [], "74036252591884": [], "61201": 11, "61196": 11, "81313": 11, "11120": 11, "11119": 11, "00004": 11, "70191": 11, "20104": 11, "20102": 11, "81298": 11, "0x7f0e65e391b0": 62, "run_python_script_139700806557760": 69, "0x7f0e9a176500": 69, "run_python_script_139699768984384": 221, "run_python_script_139700639275328": 221, "run_python_script_139699767838208": 221, "run_python_script_139699764859712": 221, "run_python_script_139700790801344": 221, "run_python_script_139700791067008": 221, "9541454000000158": 221, "0536498000001302": 221, "5475835000002007": 221, "run_python_script_139700783900608": 221, "run_python_script_139700761847680": 224, "run_python_script_139700817046592": 224, "run_python_script_139700779343936": 224, "run_python_script_139700829920704": 225, "run_python_script_139700761391744": 225, "run_python_script_139700683177728": 225, "run_python_script_139700682953792": 225, "run_python_script_139700682955520": 225, "run_python_script_139700683131904": 225, "047326999999768304": 230, "04616130000022167": 230, "020132": 232, "1706828286": 232, "027635": 232, "0x7f0ebb196d40": 233, "run_python_script_139700729908928": 235, "run_python_script_139700731631232": 235, "run_python_script_139700733278336": 235, "run_python_script_139700731182208": 235, "run_python_script_139700733372992": 235, "run_python_script_139700734621696": 235, "run_python_script_139700734673856": 235, "0x7f0e99a4d6c0": 235, "run_python_script_139700723832064": 236, "run_python_script_139700735567232": 236, "0x7f0e9cb07b40": 236, "139724": 239, "6670427642719602": 239, "run_python_script_139700741973248": 240, "0x7f0e9c10e4d0": 240, "243": 242, "951": 242, "537": 242, "262": 242, "4903885644761": 242, "nmf": 22, "tsne": 22, "skorch": 22, "latani": 22, "sweeney": 22, "technology": 22, "dictat": 22, "our": 22, "civic": 22, "equality": 22, "opportunity": 22, "holt": 22, "winter": 22, "r\u00e9gim": 22, "kalman": 22, "surv": 22, "anomal": 22, "prophet": 22, "tslearn": 22, "avril": 22, "minuit": 22}, "objects": {"teachpyx.datasets.data_helper": [[3, 0, 1, "", "get_data_folder"]], "teachpyx.datasets": [[3, 0, 1, "", "load_enedis_dataset"], [3, 0, 1, "", "load_wine_dataset"], [3, 0, 1, "", "load_wines_dataset"]], "teachpyx.examples": [[2, 1, 0, "-", "classiques"], [2, 1, 0, "-", "construction_classique"], [6, 1, 0, "-", "numpysex"]], "teachpyx.examples.classiques": [[2, 0, 1, "", "commentaire_accentues"], [2, 0, 1, "", "dictionnaire_modifie_dans_la_boucle"], [2, 0, 1, "", "dix_entiers_carre"], [2, 0, 1, "", "repetition_a_eviter"], [2, 0, 1, "", "str2date"]], "teachpyx.examples.construction_classique": [[2, 0, 1, "", "compte"], [2, 0, 1, "", "construit_matrice_carree"], [2, 0, 1, "", "enumerate_permutations"], [2, 0, 1, "", "enumerate_permutations_recursive"], [2, 0, 1, "", "integrale"], [2, 0, 1, "", "mat2text"], [2, 0, 1, "", "mat2vect"], [2, 0, 1, "", "minindex"], [2, 0, 1, "", "recherche"], [2, 0, 1, "", "recherche_dichotomique"], [2, 0, 1, "", "somme"], [2, 0, 1, "", "text2mat"], [2, 0, 1, "", "triindex"], [2, 0, 1, "", "vect2mat"]], "teachpyx.examples.numpysex": [[6, 0, 1, "", "numpy_matrix2list"], [6, 0, 1, "", "numpy_types"]], "teachpyx.faq": [[4, 1, 0, "-", "faq_exception"], [4, 1, 0, "-", "faq_geo"], [4, 1, 0, "-", "faq_numpy"], [4, 1, 0, "-", "faq_python"]], "teachpyx.faq.faq_exception": [[4, 0, 1, "", "call_stack"]], "teachpyx.faq.faq_geo": [[4, 0, 1, "", "lambert93_to_WGPS"]], "teachpyx.faq.faq_numpy": [[4, 0, 1, "", "to_float32"]], "teachpyx.faq.faq_python": [[4, 2, 1, "", "Distribution"], [4, 3, 1, "", "PQPipError"], [4, 0, 1, "", "class_getitem"], [4, 0, 1, "", "difference_div"], [4, 0, 1, "", "entier_grande_taille"], [4, 0, 1, "", "enumerate_regex_search"], [4, 0, 1, "", "get_day_name"], [4, 0, 1, "", "get_installed_distributions"], [4, 0, 1, "", "get_month_name"], [4, 0, 1, "", "get_package_info"], [4, 0, 1, "", "get_packages_list"], [4, 0, 1, "", "information_about_package"], [4, 0, 1, "", "list_of_installed_packages"], [4, 0, 1, "", "property_example"], [4, 0, 1, "", "python_path"], [4, 0, 1, "", "same_variable"], [4, 0, 1, "", "sortable_class"], [4, 0, 1, "", "stringio"]], "teachpyx.practice": [[7, 1, 0, "-", "rues_paris"], [8, 1, 0, "-", "tsp_bresenham"], [9, 1, 0, "-", "tsp_kohonen"], [10, 1, 0, "-", "tsp_kruskal"]], "teachpyx.practice.rues_paris": [[7, 0, 1, "", "bellman"], [7, 0, 1, "", "connected_components"], [7, 0, 1, "", "distance_haversine"], [7, 0, 1, "", "distance_paris"], [7, 0, 1, "", "euler_path"], [7, 0, 1, "", "eulerien_extension"], [7, 0, 1, "", "get_data"], [7, 0, 1, "", "graph_degree"], [7, 0, 1, "", "kruskal"], [7, 0, 1, "", "possible_edges"]], "teachpyx.practice.tsp_bresenham": [[8, 0, 1, "", "draw_ellipse"], [8, 0, 1, "", "draw_line"], [8, 0, 1, "", "trace_ligne_simple"]], "teachpyx.practice.tsp_kohonen": [[9, 0, 1, "", "ajoute_vecteur"], [9, 0, 1, "", "construit_liste_neurones"], [9, 0, 1, "", "construit_ville"], [9, 0, 1, "", "deplace_neurone"], [9, 0, 1, "", "distance_chemin"], [9, 0, 1, "", "distance_euclidienne_carree"], [9, 0, 1, "", "iteration"], [9, 0, 1, "", "modifie_structure"], [9, 0, 1, "", "moyenne_proximite"], [9, 0, 1, "", "multiplie_vecteur"], [9, 0, 1, "", "poids_attirance"], [9, 0, 1, "", "simulation"], [9, 0, 1, "", "soustrait_vecteur"], [9, 0, 1, "", "vecteur_norme"]], "teachpyx.practice.tsp_kruskal": [[10, 0, 1, "", "amelioration_chemin"], [10, 0, 1, "", "arbre_poids_minimal"], [10, 0, 1, "", "circuit_eulerien"], [10, 0, 1, "", "circuit_hamiltonien"], [10, 0, 1, "", "construit_ville"], [10, 0, 1, "", "dessin_arete_zone"], [10, 0, 1, "", "distance_euclidian"], [10, 0, 1, "", "echange_position"], [10, 0, 1, "", "echange_position_essai"], [10, 0, 1, "", "equation_droite"], [10, 0, 1, "", "evaluation_droite"], [10, 0, 1, "", "intersection_segment"], [10, 0, 1, "", "longueur_chemin"], [10, 0, 1, "", "oppose_vecteur"], [10, 0, 1, "", "repartition_zone"], [10, 0, 1, "", "retournement"], [10, 0, 1, "", "retournement_essai"], [10, 0, 1, "", "simulation"], [10, 0, 1, "", "supprime_croisement"], [10, 0, 1, "", "tsp_kruskal_algorithm"], [10, 0, 1, "", "vecteur_cosinus"], [10, 0, 1, "", "vecteur_norme"], [10, 0, 1, "", "vecteur_points"], [10, 0, 1, "", "vecteur_sinus"], [10, 0, 1, "", "voisinage_zone"], [10, 0, 1, "", "voisinage_zone_xy"]], "teachpyx.tools": [[11, 0, 1, "", "decompress_zip"], [11, 0, 1, "", "download_and_unzip"], [11, 0, 1, "", "draw_diagram"], [11, 1, 0, "-", "profiling"], [11, 0, 1, "", "total_size"]], "teachpyx.tools.display": [[11, 1, 0, "-", "pygame_helper"], [11, 1, 0, "-", "video_helper"]], "teachpyx.tools.display.pygame_helper": [[11, 0, 1, "", "build_diff_image"], [11, 0, 1, "", "display_line"], [11, 0, 1, "", "empty_main_loop"], [11, 0, 1, "", "get_pygame_screen_font"], [11, 0, 1, "", "wait_event"]], "teachpyx.tools.display.video_helper": [[11, 0, 1, "", "get_local_folder"], [11, 0, 1, "", "make_video"]], "teachpyx.tools.graphviz_helper": [[11, 0, 1, "", "draw_graph_graphviz"], [11, 0, 1, "", "run_graphviz"], [11, 0, 1, "", "run_subprocess"]], "teachpyx.tools.profiling": [[11, 2, 1, "", "ProfileNode"], [11, 0, 1, "", "profile"], [11, 0, 1, "", "profile2df"], [11, 0, 1, "", "profile2graph"]], "teachpyx.tools.profiling.ProfileNode": [[11, 4, 1, "", "add_called_by"], [11, 4, 1, "", "add_calls_to"], [11, 4, 1, "", "as_dict"], [11, 4, 1, "", "filter_node_"], [11, 4, 1, "", "get_root"], [11, 5, 1, "", "key"], [11, 4, 1, "", "to_json"], [11, 4, 1, "", "to_text"]], "teachpyx.video.tsp_kohonen_pygame": [[12, 0, 1, "", "pygame_simulation"]], "teachpyx.video.tsp_kruskal_pygame": [[13, 0, 1, "", "pygame_simulation"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:exception", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "function", "Python fonction"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python classe"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python m\u00e9thode"], "5": ["py", "property", "Python propri\u00e9t\u00e9"]}, "titleterms": {"apprendr": 73, "programm": [15, 24, 29, 41, 62, 64, 69, 70, 73, 125, 187, 188, 190, 194, 239], "python": [2, 46, 61, 69, 71, 73, 74, 76, 98, 99, 129, 153, 169, 203, 204, 205, 206, 221, 235, 236, 242, 245], "lectur": [39, 51, 69, 73, 203, 237], "exercic": [33, 41, 50, 51, 53, 54, 61, 62, 73, 87, 88, 94, 97, 108, 110, 111, 112, 119, 120, 121, 123, 124, 129, 132, 164, 165, 170, 181, 182, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 211, 212, 213, 214], "compl": [72, 73], "older": 73, "version": [73, 84, 88, 107, 110, 139, 160, 168, 173, 177], "langag": [69, 71, 124, 129, 221, 235, 236, 245], "structur": [129, 163, 175], "don": [3, 14, 46, 51, 54, 62, 64, 69, 85, 95, 113, 114, 119, 123, 129, 132, 134, 139, 156, 163, 175, 179, 180, 187, 189, 190, 240], "class": [4, 30, 39, 54, 62, 69, 70, 71, 124, 129, 130, 141, 142, 151, 153, 154, 155, 156, 157, 193, 194, 195, 196, 215, 221, 222, 223, 224, 229], "algorithm": [1, 41, 59, 61, 74, 76, 77, 78, 80, 82, 88, 93, 95, 123, 125, 129, 131, 159, 168, 187, 189, 190, 191, 192, 216, 235], "tres": [81, 129], "simpl": [50, 80, 129, 221, 235, 242], "profiling": [11, 15, 129, 170, 171, 172], "outil": [3, 129], "point": [36, 51, 61, 70, 92, 113, 114, 120, 123, 129, 132, 135, 239], "particuli": [36, 53, 129], "enonc": [53, 54, 76, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 94, 97, 100, 101, 102, 103, 104, 105, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 129, 163, 164, 165, 170], "correct": [76, 97, 100, 101, 102, 103, 104, 105, 107, 120, 125, 129, 174, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214], "arbre": [59, 61, 122, 132, 134, 152, 154, 211, 212], "tri": [2, 15, 78, 87, 88, 113, 114, 159, 164, 178, 211, 212, 231], "construct": [5, 106, 107, 122, 195, 211, 221, 229, 230, 231, 235], "list": [4, 32, 33, 41, 68, 69, 70, 71, 122, 158, 175, 197, 211, 213, 221, 229, 235, 236, 237, 239], "al\u00e9atoir": [42, 50, 61, 78, 84, 89, 92, 113, 114, 115, 116, 122, 123, 134, 152, 156, 164, 179, 180, 211], "1": [0, 15, 20, 22, 50, 51, 70, 79, 84, 87, 88, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 121, 123, 124, 132, 156, 164, 165, 169, 170, 175, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 211, 212, 213, 221, 235, 239], "2": [15, 20, 22, 50, 51, 70, 79, 84, 87, 88, 94, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 114, 116, 118, 119, 120, 132, 156, 164, 165, 169, 170, 173, 175, 176, 181, 182, 183, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 212, 213, 221, 239], "recherch": [2, 61, 69, 173, 197, 203, 204, 211, 212, 213, 214, 219, 231], "dichotom": [2, 61, 83, 110, 173, 211, 212, 213, 214, 231], "3": [0, 15, 20, 22, 50, 51, 70, 79, 87, 88, 98, 99, 102, 108, 109, 110, 120, 122, 132, 153, 156, 164, 165, 170, 181, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 211, 212, 213, 214, 239], "4": [0, 15, 20, 22, 35, 50, 51, 56, 70, 87, 88, 98, 99, 107, 108, 109, 120, 156, 165, 170, 181, 182, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 211, 212, 213, 216], "5": [0, 15, 20, 22, 51, 87, 98, 99, 108, 156, 170, 187, 188, 203, 204, 211, 212, 213, 214], "dan": [5, 61, 69, 82, 89, 120, 123, 124, 134, 156, 158, 197, 203, 204, 211, 212, 229, 237], "6": [15, 20, 51, 87, 98, 99, 105, 156, 187, 188, 203, 204, 211, 212, 213, 214], "7": [15, 20, 54, 98, 99, 156, 187, 188, 203, 204, 211, 212, 213, 214], "plus": [4, 14, 42, 56, 61, 62, 71, 77, 81, 82, 83, 87, 88, 90, 91, 93, 99, 115, 116, 120, 121, 123, 143, 145, 154, 166, 170, 177, 178, 183, 184, 185, 186, 187, 188, 193, 194, 199, 200, 212, 213, 214, 225, 237, 242, 244], "d\u00e9tail": [197, 212], "question": [31, 109, 212, 223], "variabl": [14, 61, 64, 68, 69, 70, 99, 179, 180, 197, 213, 214, 234, 235, 236], "boucl": [69, 70, 74, 170, 213, 214, 235, 236], "test": [14, 15, 62, 64, 69, 70, 74, 81, 89, 123, 132, 147, 148, 177, 213, 214, 235], "part": [4, 38, 50, 52, 65, 71, 183, 184, 205, 206, 213, 214], "int": 213, "float": [31, 213], "str": [213, 236], "compact": 213, "ensembl": [158, 178, 213, 236, 244], "non": [163, 213, 214, 235, 236], "aller": [56, 177, 185, 186, 213, 214], "loin": [56, 87, 177, 183, 184, 213, 214], "optimis": [50, 56, 61, 70, 85, 86, 113, 114, 120, 121, 132, 134, 159, 215, 240], "not": [31, 65, 97, 106, 107, 108, 109, 110, 111, 112, 149, 215], "moyen": [51, 56, 113, 114, 115, 116, 154, 215], "La": [30, 53, 54, 61, 83, 135, 187, 200, 208, 215], "berem": 215, "elev": 215, "Une": [54, 95, 99, 135, 154, 156, 157, 159, 171, 177, 215], "barem": 215, "erreur": [41, 54, 69, 85, 215, 224, 225], "d\u00e9monstr": [1, 112, 215], "distanc": [80, 81, 89, 92, 93, 113, 114, 122, 123, 155, 157, 216], "\u00e9dit": [80, 81, 216], "octobr": [101, 115, 116, 117, 118, 123, 216], "mot": [1, 69, 80, 81, 87, 165, 197, 216], "m\u00eam": [2, 54, 56, 80, 81, 82, 120, 123, 168, 203, 216, 231], "longueur": [80, 81, 216], "presqu": 216, "cas": [39, 77, 120, 123, 124, 156, 216, 229, 236, 239], "g\u00e9ner": [39, 50, 84, 132, 152, 162, 216, 227, 235], "co\u00fbt": [1, 41, 113, 114, 120, 123, 158, 168, 197, 216], "levenshtein": 216, "Avec": [51, 123, 216], "align": 216, "Un": [32, 42, 77, 134, 153, 156, 157, 158, 177, 179, 183, 184, 216, 236, 239, 242], "diff\u00e9rent": [2, 4, 69, 71, 80, 81, 123, 132, 216], "accent": [2, 71, 74, 216, 237], "2023": [17, 18, 19, 20, 23, 124, 217], "pivot": [51, 169, 218], "gauss": [169, 218], "pr\u00e9fix": 219, "notebook": [74, 76, 220], "\u00e9crit": [100, 101, 102, 103, 104, 105, 109, 220], "dur": [82, 119, 220], "s\u00e9anc": [15, 20, 22, 97, 127, 220], "pr\u00e9sent": 221, "m\u00e9thod": [69, 70, 87, 124, 157, 193, 194, 195, 199, 200, 221, 229, 233, 236], "attribut": [69, 70, 193, 194, 221, 239], "d\u00e9finit": [62, 69, 70, 181, 182, 221, 235, 236, 239], "d\u00e9clar": [69, 70, 221, 235], "d1": [62, 70, 221, 235, 236, 239], "syntax": [70, 221, 224, 235, 236, 239, 244], "s1": [70, 221, 224, 235, 239], "s2": [70, 221, 224, 235, 239], "instanci": [70, 221], "d2": [70, 221, 235, 236], "instantiaion": [70, 221], "d3": [70, 221, 235, 236], "s3": [70, 221, 235, 239], "s4": [70, 221, 235], "appel": [2, 70, 221, 225, 231, 235], "d4": [70, 221, 235, 236], "s5": [70, 221, 235], "constructeur": [70, 221], "s6": [70, 221, 235], "s7": [70, 221, 235], "apport": 221, "implicit": 221, "commentair": [112, 221, 235, 236], "aid": 221, "inclus": [5, 221], "oper": [6, 35, 49, 50, 51, 53, 69, 70, 120, 153, 157, 158, 193, 194, 221, 235], "s8": [70, 221, 235], "__str__": [70, 221], "iter": [4, 39, 52, 71, 119, 131, 152, 173, 221, 224, 235], "statiqu": [69, 70, 221], "ajout": [14, 106, 132, 156, 177, 221, 235, 237, 239], "d5": [70, 221, 235, 236], "s9": [70, 221, 235], "d6": [70, 221, 235, 236], "s10": [70, 221], "propriet": [4, 70, 71, 221], "s11": [70, 221], "s12": [70, 221], "cop": [41, 69, 221, 236, 237], "instanc": [69, 221], "inclu": 221, "autr": [32, 33, 56, 62, 69, 113, 131, 156, 164, 170, 175, 177, 195, 203, 204, 221, 229, 232, 240], "s13": [70, 221], "__copy__": [70, 221], "dictionnair": [2, 15, 69, 70, 87, 91, 158, 162, 167, 175, 197, 198, 221, 231, 236], "copy": [50, 221], "deepcopy": 221, "fig": [70, 221], "s14": [70, 221], "h\u00e9ritag": [41, 69, 70, 155, 156, 195, 196, 221, 224], "exempl": [24, 25, 29, 50, 56, 70, 131, 132, 139, 153, 172, 221, 224, 235, 236, 237, 239, 244], "autour": [42, 221], "piec": [195, 196, 221], "monnai": 221, "d7": [70, 221, 236], "d8": [70, 221, 236], "surcharg": [70, 221, 235], "s15": [70, 221], "s16": [70, 221], "h\u00e9rit": [70, 221], "sen": [95, 221], "multipl": [65, 120, 181, 182, 221, 236, 244], "fonction": [2, 5, 30, 39, 51, 53, 54, 61, 64, 69, 70, 77, 85, 87, 88, 113, 114, 120, 121, 123, 124, 130, 156, 160, 164, 166, 170, 174, 178, 195, 196, 197, 198, 200, 221, 229, 231, 234, 235, 236, 244], "issubclass": 221, "isinst": 221, "compil": [40, 221, 235], "typ": [4, 6, 53, 54, 69, 70, 71, 221, 224, 225, 236], "classiqu": [2, 5, 91, 221, 229, 230, 231, 235], "deux": [2, 32, 62, 80, 81, 87, 89, 115, 120, 121, 123, 124, 170, 175, 221, 231], "lign": [54, 156, 165, 221, 229], "C": [223, 242], "oblig": 223, "utilis": [16, 64, 69, 87, 88, 123, 155, 164, 165, 170, 195, 197, 198, 223, 224, 229], "except": [69, 70, 177, 224, 225, 226], "princip": 224, "attrap": [70, 224], "tout": [88, 89, 92, 94, 124, 156, 166, 224, 239], "obten": [4, 71, 174, 224], "lanc": [224, 229], "lev": [70, 224], "instruct": [70, 224, 235], "try": 224, "imbriqu": 224, "d\u00e9fin": 224, "propr": [78, 203, 204, 224], "d\u00e9riv": [61, 224], "personnalis": [224, 227, 229], "Les": [4, 39, 62, 69, 71, 88, 95, 135, 187, 208, 224, 229, 235, 244], "valeur": [37, 53, 54, 70, 78, 115, 116, 168, 197, 224, 235], "aberr": [132, 135, 224], "Le": [32, 56, 61, 69, 70, 142, 224, 245], "pieg": 224, "usag": 225, "pil": 225, "call": 225, "stack": 225, "r\u00e9cuper": [4, 51, 54, 71, 85, 225], "messag": [124, 225, 229, 242], "explicit": 225, "convent": 225, "warning": [54, 227], "logging": 227, "intercept": 227, "interfac": [64, 69, 228, 242], "graphiqu": [54, 64, 69, 228, 242], "tkint": 229, "introduct": [15, 74, 77, 229], "objet": [229, 236, 237], "zon": 229, "text": [69, 94, 163, 203, 204, 209, 210, 229, 237], "bouton": 229, "sais": 229, "plusieur": [40, 51, 139, 229, 235, 239], "coch": 229, "rond": 229, "radio": 229, "barr": 229, "d\u00e9fil": 229, "combobox": 229, "canev": 229, "menus": 229, "commun": [87, 229, 239], "disposit": 229, "fen\u00eatr": 229, "emplac": [229, 239], "pack": 229, "grid": 229, "plac": [163, 229], "sous": [4, 16, 71, 83, 229], "even": 229, "principal": 229, "focus": 229, "lorsqu": [123, 229], "press": 229, "associ": 229, "import": [40, 70, 229, 239], "\u00e9ven": [171, 229], "menu": 229, "pr\u00e9d\u00e9fin": 229, "D": [124, 175, 229], "contr\u00f4l": 229, "cr\u00e9": [40, 51, 53, 123, 203, 229], "second": [86, 123, 171, 177, 190, 192, 229], "bo\u00eet": 229, "dialogu": 229, "standard": [56, 229], "compt": 229, "rebour": 229, "s\u00e9quenc": [74, 83, 124, 229, 236], "communiqu": 229, "r\u00e9sultat": [4, 56, 71, 77, 85, 117, 118, 120, 123, 229], "ordereddict": 230, "namedtupl": 230, "count": 230, "dequ": [158, 230], "fr\u00e9quent": [54, 69, 231], "calcul": [2, 33, 41, 49, 50, 53, 64, 69, 77, 78, 79, 83, 85, 89, 90, 91, 94, 120, 121, 122, 123, 155, 164, 176, 179, 180, 199, 200, 209, 210, 231], "somm": [2, 83, 121, 162, 231], "dix": [2, 231], "premi": [2, 14, 54, 85, 86, 88, 95, 124, 131, 154, 159, 162, 168, 190, 191, 192, 205, 206, 231, 242], "entier": [2, 181, 182, 231, 236], "carr": [2, 160, 179, 180, 193, 194, 231], "comptag": [2, 231], "convers": [2, 31, 231, 236], "vecteur": [2, 231], "matric": [2, 48, 53, 61, 78, 84, 91, 95, 115, 116, 120, 123, 156, 175, 179, 180, 231, 236], "cha\u00een": [2, 40, 69, 70, 158, 231, 236], "caracter": [2, 40, 69, 70, 231, 233, 236, 244], "datetim": [2, 231, 232], "comm": [2, 113, 114, 231], "parametr": [2, 56, 62, 69, 70, 85, 86, 113, 114, 132, 146, 231, 235], "minimum": [2, 59, 231], "posit": [2, 56, 70, 156, 231], "index": [2, 50, 51, 53, 54, 231], "gard": [2, 89, 231], "initial": [2, 31, 231], "n\u00e9gat": [56, 70, 231], "evit": [2, 231], "effectu": [2, 120, 231], "fois": [2, 121, 231], "modifi": [2, 69, 70, 123, 231, 235, 236], "parcour": [2, 92, 95, 125, 231], "dat": [4, 51, 71, 76, 232], "format": [163, 166, 191, 192, 203, 232, 236, 237], "encoding": [233, 237], "jeux": [3, 87, 160, 233], "fichi": [4, 51, 61, 69, 71, 74, 203, 204, 209, 210, 233, 237, 239], "d\u00e9faut": [70, 233, 235], "trois": [27, 62, 69, 74, 120, 122, 193, 194, 235], "concept": [74, 235], "comparaison": [33, 83, 235], "possibl": [89, 90, 120, 170, 235], "logiqu": [41, 175, 235], "ecritur": [39, 69, 203, 235, 237], "condens": 235, "tru": 235, "pass": [70, 93, 235], "b1": 235, "whil": [69, 70, 235], "for": [69, 70, 235], "extens": [70, 74, 235, 236, 239], "pilotag": 235, "continu": [61, 235], "break": 235, "fin": [156, 235], "normal": [195, 196, 235], "else": 235, "suppress": [235, 237], "\u00e9l\u00e9ment": [36, 50, 77, 88, 106, 158, 162, 197, 235], "lor": [120, 235], "ordre": [1, 56, 70, 78, 82, 89, 235], "r\u00e9curs": [33, 70, 113, 114, 173, 197, 235], "port": [70, 235], "local": [65, 70, 197, 235], "global": [64, 70, 235, 242], "nombr": [14, 50, 70, 77, 79, 84, 120, 130, 156, 191, 192, 235, 236], "ind\u00e9fin": [70, 235], "simplifi": [168, 235], "lambd": [34, 51, 69, 235], "identif": 235, "dynam": [15, 51, 125, 187, 188, 190, 235], "eval": [235, 236], "exec": 235, "indent": 235, "usuel": 235, "const": [42, 70, 164, 236], "immuabl": [4, 69, 70, 71, 236], "immut": [4, 70, 71, 236], "rien": 236, "r\u00e9el": [85, 236], "bool\u00e9en": 236, "cr\u00e9ation": [52, 54, 156, 179, 180, 236], "manipul": [50, 51, 54, 236, 237], "formatag": 236, "notat": [51, 236], "f": [81, 236], "particul": 236, "r": 236, "tupl": [70, 158, 236], "complex": [236, 237], "byt": 236, "mutabl": [70, 236], "bytearray": 236, "rang": [69, 236], "collag": 236, "zip": [69, 175, 236, 237], "concaten": 236, "dict": 236, "cl\u00e9": [1, 69, 197, 236], "set": [70, 236], "d9": [70, 236], "d10": [70, 236], "frozenset": [70, 236], "datafram": [45, 48, 51, 52, 54, 61, 236], "print": [2, 69, 71, 236], "repr": 236, "inform": [4, 71, 236, 242], "fourn": 236, "affect": 236, "hi\u00e9rarch": 236, "intern": [236, 239], "accentu": 236, "mod": 237, "gestion": [56, 237], "nom": [4, 71, 237, 239], "chemin": [61, 89, 92, 93, 95, 154, 187, 188, 237], "san": [51, 94, 164, 237], "binair": [27, 39, 62, 70, 237, 240], "entr\u00e9": [70, 238, 239], "sort": [51, 238], "modul": [4, 40, 61, 69, 70, 71, 74, 92, 163, 170, 203, 204, 238, 239], "pratiqu": [183, 184, 239], "Ce": 239, "march": [4, 50, 56, 71, 85, 239], "cycliqu": 239, "cour": [56, 70, 239], "ex\u00e9cu": [171, 239], "arborescent": 239, "paquetag": 239, "relat": 239, "extern": 239, "s\u00e9rialis": [15, 39, 40, 166, 240], "json": [39, 40, 163, 166, 240], "chos": [168, 240], "parall\u00e9lis": 241, "thread": 242, "synchronis": 242, "attent": 242, "partag": [69, 242], "fil": [65, 68, 242], "multithreading": 242, "concurrent": 242, "futur": 242, "notion": [50, 166, 197, 242], "problem": [1, 30, 56, 61, 62, 70, 76, 79, 82, 86, 89, 94, 95, 125, 134, 142, 156, 189, 190, 207, 208, 242], "blocag": 242, "async": 242, "await": 242, "asyncio": 242, "gil": [32, 242], "interpret": [94, 242], "lock": 242, "cython": 242, "m\u00e9lang": 242, "jav": 242, "bibliograph": [62, 242], "express": [4, 15, 71, 94, 165, 203, 204, 243, 244], "r\u00e9guli": [4, 15, 71, 94, 165, 203, 204, 243, 244], "a": [4, 31, 65, 68, 71, 120, 124, 125, 156, 160, 244], "quoi": [4, 71, 160, 203, 244], "\u00e7a": [160, 163, 203, 244], "sert": [4, 71, 160, 203, 244], "group": [51, 244], "assembl": 244, "complet": [1, 124, 125, 156, 194, 244], "nomm": 244, "comput": [28, 43, 44, 246], "tim": [28, 43, 44, 246], "chang": [0, 124, 153, 170, 177], "log": 0, "0": [0, 124, 132, 156], "survol": 1, "grandeur": 1, "comprendr": 1, "catalogu": 1, "np": [1, 125], "id\u00e9": [1, 86, 87, 93, 192, 207, 208], "lien": [1, 54], "articl": [1, 23], "livr": 1, "Pour": [1, 56, 177], "entra\u00een": 1, "googl": 1, "recommand": 1, "exampl": [2, 6], "construction_class": 2, "teachpyx": [2, 4, 7, 8, 9, 10, 12, 13], "accept": [2, 71], "Quelle": [2, 4, 71, 170], "entre": [2, 4, 51, 56, 69, 70, 71, 80, 81, 123, 166], "return": [2, 69, 71, 197], "cartograph": 3, "classif": [3, 27, 62, 70, 128, 130, 140, 141, 142], "r\u00e9gress": [3, 50, 62, 70, 128, 131, 134, 137, 138, 150], "faq": [4, 5, 71], "faq_python": 4, "divis": [4, 71], "Quel": [4, 71], "enti": [4, 71], "grand": [4, 14, 71, 77, 83, 87, 154, 185, 186], "tabul": [4, 71], "espac": [4, 61, 71, 94, 123], "comment": [4, 71], "jour": [4, 51, 54, 71], "mois": [4, 71], "install": [4, 67, 71, 74], "pourquoi": [4, 27, 71, 87, 120], "pand": [4, 15, 37, 51, 54, 61, 71, 126], "numpy": [4, 6, 15, 36, 49, 50, 53, 54, 55, 61, 71, 126, 169, 176], "window": [4, 16, 71], "pip": [4, 71], "packag": [4, 68, 71, 74], "\u00e9vit": [4, 71], "sy": [4, 71], "path": [4, 71], "append": [4, 71], "quand": [4, 71, 200], "d\u00e9velopp": [4, 71], "Qu": [4, 71, 195], "sortabl": [4, 71], "stringio": [4, 71], "faq_except": 4, "faq_geo": 4, "geofl": [4, 71], "contiennent": [4, 71], "longitud": [4, 71], "latitud": [4, 71], "faq_numpy": 4, "cod": [5, 17, 30, 69, 96, 106, 110, 112, 124, 170, 197, 198], "librair": [5, 131], "illustr": [5, 156], "solut": [5, 79, 83, 88, 90, 94, 95, 99, 189, 190, 192, 207, 208], "anim": 5, "numpysex": 6, "matrix": [6, 49, 50], "Quels": [6, 71], "support": [6, 71], "practic": [7, 8, 9, 10], "rues_par": 7, "tsp_bresenham": 8, "tsp_kohonen": 9, "tsp_kruskal": [10, 13], "tool": 11, "decompress_zip": 11, "download_and_unzip": 11, "draw_diagram": 11, "draw_graph_graphviz": 11, "total_siz": 11, "run_graphviz": 11, "run_subprocess": 11, "video": [11, 12, 13], "tsp_kohonen_pygam": 12, "assur": 14, "auto": 14, "r\u00e9flex": [14, 42], "apprentissag": [14, 131, 132, 147, 148], "agreg": 14, "g\u00e9ograph": 14, "mod\u00e9lis": [14, 56], "peu": [14, 42, 53, 77, 179, 183, 184], "anonym": 14, "2022": [15, 16, 23, 122, 123], "11": [15, 20, 110], "31": [15, 20], "rappel": [15, 20, 27, 61], "feuill": [15, 20, 22, 51, 154], "rout": [15, 20, 22], "9": [15, 98, 99], "14": [15, 102, 103], "voyageur": [15, 61, 92], "commerc": [15, 42, 61, 92], "21": [15, 112], "28": 15, "graph": [15, 47, 51, 54, 61, 78, 84, 85, 93, 119, 125, 128, 156, 183, 184], "10": [15, 98, 99, 101, 132], "unitair": [15, 69, 81, 123, 177], "12": [15, 16, 113, 114], "webscrapping": 15, "19": 15, "top": [15, 88], "k": [15, 88, 185, 186], "8": [15, 20, 22, 98, 99, 124, 156, 187, 188, 203, 204], "26": [15, 22, 100, 104, 123], "07": 16, "cartopy": [16, 46], "wsl": [16, 21], "08": [17, 18], "03": [17, 22], "jam": 17, "09": [18, 19], "\u00e9nigm": [18, 30, 35], "hermion": 18, "06": 19, "ensa": 19, "2024": [21, 22, 23, 124], "01": [21, 22], "18": 21, "nettoyag": 21, "collect": 23, "p\u00e9riss": 23, "galler": [24, 25, 29], "machin": [24, 25, 60, 62, 76, 98, 99, 128, 164], "learning": [24, 25, 60, 62, 76, 97, 98, 99, 128, 131], "correl": [26, 56, 61, 179, 180], "receiv": 27, "operating": 27, "characteristic": 27, "roc": [27, 137, 140], "courb": [27, 119, 137, 140], "predict_prob": 27, "decision_funct": 27, "precis": 27, "m\u00e9triqu": 27, "f1": [27, 56, 70], "alor": [27, 81], "L": [30, 131], "einstein": 30, "r\u00e9solu": 30, "permut": [30, 89, 92, 151, 153], "rul": 30, "explic": 30, "descript": [30, 56], "probability": 31, "float64": 31, "x": [31, 90, 116, 123, 153], "float32": 31, "interval": 31, "length": 31, "distribu": [31, 51, 53], "an": 31, "answer": 31, "to": [31, 65], "the": [31, 65], "similar": 31, "what": 31, "about": 31, "strict": 31, "comparison": 31, "conclus": [31, 56, 111], "parallel": 32, "sc\u00e9nario": 32, "hypercub": 33, "q1": [33, 38, 53, 54, 78, 80, 82, 85, 89, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 162, 163, 166, 171, 179, 180, 183, 184, 185, 186, 209, 210], "tripl": 33, "q2": [33, 38, 53, 54, 78, 80, 82, 85, 89, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 162, 163, 166, 171, 179, 180, 183, 184, 185, 186, 209, 210], "q3": [33, 38, 53, 54, 78, 80, 85, 89, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 162, 163, 166, 171, 179, 180, 183, 184, 185, 186, 209, 210], "pr\u00e9cis": [33, 41, 77, 199, 200], "q4": [33, 38, 53, 54, 78, 80, 85, 89, 101, 102, 103, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 162, 163, 171, 179, 180, 183, 184, 209, 210], "astuc": [34, 64, 69], "function": [34, 51], "mathador": 35, "impl\u00e9ment": [36, 80, 142, 171, 181, 182, 201, 202], "acced": 36, "groupby": 37, "manqu": [37, 115, 116], "dam": 38, "limit": 39, "rapid": [39, 83, 87, 88, 90, 120, 166, 170, 178, 193, 194, 199, 200], "pickl": [39, 166], "r\u00e9duir": [39, 124], "taill": [39, 77, 123, 124, 177], "protobuf": [40, 163], "schem": 40, "expliqu": [41, 87, 112, 134], "doubl": 41, "voyag": 42, "tsp": [42, 59, 89], "Des": [42, 64, 69, 177], "vill": [42, 89], "tir": [42, 89, 92, 123], "hasard": [42, 176], "crois": [42, 51, 62, 93, 134, 144], "noeud": [42, 93], "d\u00e9part": [42, 54], "trac": [46, 207, 208], "cart": [46, 54, 58, 61], "plotly": 46, "gmap": 46, "bingmap": 46, "geopand": 46, "folium": 46, "openstreetmap": 46, "matriciel": [49, 50, 53, 91], "array": [50, 52, 61], "creation": 50, "datatyp": 50, "dimens": [50, 91, 123, 130, 175, 185, 186], "slicing": 50, "fancy": 50, "indexing": 50, "view": 50, "contr": 50, "shap": 50, "echiqui": 50, "cribl": 50, "erathosthen": 50, "broadcasting": [50, 53], "r\u00e9duct": 50, "algebr": 50, "lin\u00e9air": [50, 83], "statist": 50, "retrouv": [50, 120], "ser": [50, 51, 54, 56, 85, 128, 135], "scipy": [50, 176], "simul": [50, 85, 86, 125, 159, 179, 180], "estim": [50, 77, 85, 86, 119, 134], "maximis": 50, "vraisembl": 50, "r\u00e9f\u00e9rent": [50, 56], "el\u00e9ment": [50, 51], "r\u00e9pons": [50, 51, 53, 54, 78, 80, 82, 85, 87, 88, 89, 99, 162, 163, 164, 165, 170], "\u00e9critur": [51, 163, 177], "symbol": 51, "excel": [51, 163, 203, 204], "filtr": 51, "union": 51, "by": 51, "join": 51, "filt": 51, "merg": 51, "fusion": [51, 54], "tableau": [51, 53, 55, 69, 156, 175, 176], "plot": 51, "nuag": [51, 61, 113, 114], "matplotlib": [51, 61], "mariag": 51, "annex": 51, "\u00e9cart": 51, "mari": 51, "mesur": [52, 87, 91, 123, 185, 186, 200], "vitess": [52, 169], "ma\u00eetris": [53, 54], "slic": 53, "nan": [53, 54], "chi_2": 53, "contingent": [53, 55, 176], "veut": [53, 85, 124], "ident": [53, 77, 123], "million": 53, "dev": 53, "appliqu": [53, 83, 119, 134, 171], "stopcovid": 53, "colon": [54, 99, 115, 156], "ver": 54, "modif": [54, 65], "On": [54, 85, 120, 124], "covid": [54, 85], "r\u00e9gion": [54, 85], "\u00e2ge": [54, 85], "refair": 54, "pr\u00e9c\u00e9dent": [54, 87, 124, 170], "votr": 54, "fair": [54, 123, 193, 194], "diff\u00e9renci": 54, "liss": 54, "tabl": [54, 56, 70, 162], "pet": [54, 88, 177, 178], "apart": [54, 84, 92, 193], "q5": [54, 85, 102, 103, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 162, 163, 171, 183, 184, 209, 210], "strateg": [56, 70, 156, 201, 202], "automat": 56, "trading": [56, 70], "financ": 56, "quelqu": [56, 61, 64, 112, 132, 162], "vocabulair": [56, 84], "financi": 56, "liquid": 56, "figur": [56, 70], "open": [56, 70], "high": [56, 70], "low": [56, 70], "clos": [56, 70], "volum": [56, 70, 121], "f2": [56, 70], "ohlc": [56, 70], "intraday": [56, 70], "f3": [56, 70], "carnet": [56, 70], "tous": [56, 70, 76, 87, 93, 122, 123, 165, 192, 193, 194], "repr\u00e9sent": [56, 70, 154], "rend": [56, 70], "volatil": 56, "mobil": 56, "band": 56, "bolling": 56, "achat": 56, "vent": 56, "levi": 56, "hedg": [56, 70], "fund": [56, 70], "t1": [56, 70], "implant": [56, 70], "2007": [56, 70], "famill": 56, "trend": [56, 70], "following": [56, 70], "f4": [56, 70], "action": [56, 70], "bnp": [56, 70], "mean": [56, 70], "reversing": [56, 70], "revers": [56, 175], "f5": [56, 70], "pair": [56, 70], "f6": [56, 70], "styl": 56, "valu": 56, "growth": 56, "portefeuill": [56, 70], "p1": [56, 62, 70], "horizon": 56, "daily": 56, "analys": [56, 135], "f7": [56, 70], "d\u00e9but": [56, 70], "2003": [56, 70], "mi": [56, 70], "2008": [56, 70], "backtest": 56, "f8": [56, 70], "nav": [56, 70], "variat": [56, 119], "f9": [56, 70], "natur": 56, "f10": [56, 70], "fran\u00e7ais": [56, 70], "t2": [56, 70], "indiqu": [56, 70], "cred": [56, 70], "agricol": [56, 70], "danon": [56, 70], "societ": [56, 70], "g\u00e9n\u00e9ral": [56, 70], "f11": [56, 70], "d\u00e9composit": [56, 153, 156], "deal": [56, 70], "f12": [56, 70], "f13": [56, 70], "imag": [56, 70, 174], "f14": [56, 70], "logn": [56, 70], "court": [56, 61, 70, 93, 97, 99, 153, 187, 188], "diversif": 56, "expos": 57, "circuit": [58, 59, 151, 161], "hamiltonien": [58, 59], "kohonen": 58, "aper\u00e7u": [58, 157], "kruskal": 59, "poid": [59, 159], "minimal": 59, "a1": 59, "eul\u00e9rien": [59, 95], "a2": 59, "a3": 59, "simplif": 59, "a4": 59, "math\u00e9mat": [61, 160, 179], "vectoriel": 61, "produit": [61, 91, 120, 189, 190], "scalair": [61, 189, 190], "norm": [61, 115, 116], "histogramm": [61, 167, 175, 209, 210], "informat": 61, "csv": [61, 163], "hash": [61, 77, 162], "incourtourn": 61, "scik": [61, 132, 134], "learn": [61, 132, 134], "statsmodel": 61, "dessin": [61, 85, 106, 107, 113, 114, 122, 168], "d\u00e9couvert": [62, 130], "final": 62, "proch": [62, 81, 116, 123, 143, 145, 185, 186], "voisin": [62, 143, 145, 185, 186], "\u00e9tap": 62, "r\u00e9current": 62, "train": 62, "valid": [62, 134, 144], "hyp": [62, 146], "bas": [62, 132, 147, 155, 189, 190], "beaucoup": 62, "bruit": [62, 70], "blanc": [62, 70], "p2": [62, 70], "mult": [62, 130, 141, 142], "cheat": [63, 65, 67, 68, 69], "sheet": [63, 65, 67, 68, 69], "conseil": [64, 69], "\u00e9crir": [64, 69, 81, 82, 85, 121, 123, 166], "petit": [64, 69, 77, 85, 121, 164, 203], "Pas": 64, "s\u00e9par": [64, 69, 187, 188, 191, 192], "charg": [64, 69], "truc": [64, 69], "git": 65, "add": 65, "remot": 65, "submodul": 65, "checkout": 65, "specific": 65, "from": 65, "creat": 65, "new": 65, "branch": 65, "push": 65, "repository": 65, "remov": [65, 68], "reset": [65, 67], "updat": 65, "fix": 65, "mov": 65, "rebas": 65, "upsteam": 65, "and": 65, "eras": 65, "history": 65, "clon": 65, "of": 65, "all": [65, 68], "prec": 66, "jenkin": 67, "plugin": 67, "start": 67, "restart": 67, "password": 67, "linux": 68, "classic": 68, "installed": 68, "error": 68, "with": [68, 203], "clean": 68, "temporary": 68, "hard": 68, "driv": 68, "process": 68, "environment": 68, "other": 68, "numer": [69, 77, 117, 118], "enumerat": 69, "map": 69, "yield": 69, "d\u00e9cor": 69, "confus": 69, "guillemet": 69, "initialis": 69, "moteur": 69, "geo": 71, "En": [72, 164], "diagonal": [72, 160], "licens": 75, "examen": 76, "streaming": 77, "bjkst": 77, "distinct": 77, "universal": 77, "hashing": 77, "collis": 77, "temp": [77, 83, 87, 91, 123, 166, 171, 200], "stream": [77, 166], "h_1": 77, "h_2": 77, "\u00e9gal": 77, "o\u00f9": [77, 123], "d\u00e9pend": 77, "epsilon": 77, "compos": [78, 84], "connex": [78, 84], "construir": [78, 87, 203, 204], "adjacent": [78, 84], "symetr": 78, "croiss": 78, "fait": [78, 124], "suiv": [78, 122, 124, 156], "retourn": [78, 92, 120, 121, 123, 124], "fa\u00e7on": [79, 124, 185, 186], "mont": [79, 200], "\u00e9chel": 79, "alambiqu": 80, "pag": [80, 203, 204], "wikipedi": 80, "na\u00efv": [81, 83, 171, 189], "si": [81, 82, 89, 170], "ff": 81, "ph": 81, "person": 81, "sait": 81, "ordonnanc": 82, "d\u00e9termin": [82, 132, 156], "peut": [82, 124, 166, 171], "ex\u00e9cut": 82, "t\u00e2ch": 82, "Et": 82, "li": 84, "puissanc": 84, "trouv": [84, 87, 192, 193, 194, 203, 204], "model": [85, 86, 133, 139], "sird": [85, 86], "q0": 85, "propag": 85, "v\u00e9rifi": [85, 181, 182], "cel": [85, 87], "synthet": 85, "q6": [85, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 162, 163, 179, 180, 183, 184], "cumul": 85, "\u00e9pid\u00e9miolog": 86, "visualis": [86, 92], "suffix": 87, "partagent": 87, "constuir": 87, "assoc": 87, "chaqu": [87, 88, 123], "lettr": [87, 124, 162, 165], "termin": [87, 165], "ci": 87, "pris": 87, "tel": 87, "pouss": 87, "prend": [88, 163], "choix": 88, "s\u00e9lect": [88, 134, 146], "perf_count": 88, "compar": [88, 132, 166, 171], "vitesss": 88, "traveling": 89, "salesman": 89, "chois": 89, "rel": 89, "invers": 89, "am\u00e9lior": [89, 170], "moiti": 89, "plais": 89, "creus": 91, "\u00e9leg": 91, "affich": [92, 154], "tqdm": 92, "d\u00e9cod": 94, "mors": [94, 124], "traduir": 94, "contient": [94, 170], "alphabet": 94, "minimis": 94, "transcript": 94, "ru": [95, 123], "paris": 95, "etap": 95, "bellman": 95, "kruskall": 95, "optimal": [95, 121, 132], "vari": 95, "interd": 95, "gaph": 95, "orient": 95, "windy": 95, "postman": 95, "cass": 96, "vigener": [96, 197, 198], "minut": [97, 127], "machain": 97, "evalu": [98, 99], "ann\u00e9": [98, 99], "2017": [98, 99, 112, 113, 114], "\u00e9nonc": [98, 109], "trait": 99, "sp\u00e9cif": 99, "cat\u00e9goriel": 99, "weekday": 99, "seul": 99, "1a": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "e": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "interrog": [100, 101, 102, 103, 104, 105], "septembr": [100, 104], "2014": [100, 101, 102, 103, 108], "novembr": [102, 103, 105, 106, 107, 119, 120, 121, 124], "2015": [104, 105, 109, 110], "td": [106, 107, 108, 109, 110, 111, 112], "27": [106, 107], "2012": [106, 107], "coloriag": [106, 107, 160], "spiral": [106, 107], "roug": [106, 121], "d\u00e9cembr": [108, 110, 111, 113, 114], "rattrapag": [109, 121, 122], "oral": 109, "lou": 110, "achet": 110, "appart": 110, "q7": [110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 162, 163, 179, 180, 183, 184], "exo": 110, "q8": [110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 179, 180], "q9": [110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 179, 180], "num\u00e9ros": 110, "t\u00e9l\u00e9phon": 110, "16": [22, 111], "2016": 111, "q10": [111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 179, 180], "f\u00e9vri": 112, "\u00e9chantillon": [113, 114, 115, 116], "encor": [113, 114], "seuil": 114, "23": [22, 115, 116], "2018": [115, 116], "m1": [115, 116, 120], "m2": [115, 116, 120], "m3": [115, 116, 120], "r\u00e9p\u00e9tit": [115, 116], "22": [117, 118], "2019": [117, 118], "distance_t": [117, 118], "distance_bord": [117, 118], "table_al": [117, 118], "n_table_al": [117, 118], "table_proch": [117, 118], "distance_n_tables_al": [117, 118], "meilleur_table_al": [117, 118], "plot_tabl": [117, 118], "vorono\u00ef": [117, 118], "kmean": [117, 118], "24": 119, "2020": 119, "gu\u00e9rison": 119, "kaplan": 119, "mei": 119, "publiqu": 119, "apres": 119, "T": 119, "vaccin": 119, "heur": 119, "2021": [120, 121], "lent": 120, "ecrir": [120, 123, 124], "meilleur": 120, "option": 120, "v\u00e9rif": [120, 123], "mesure_temp": 120, "m4": 120, "pench": 120, "N": 120, "combien": [120, 170], "r\u00e9soudr": 120, "remarqu": 120, "15": 121, "air": 121, "surfac": [121, 160, 164], "briqu": 121, "fac": 121, "inclut": 121, "n\u00e9cessair": 121, "coll": 121, "extrem": 121, "bouteil": 121, "litr": 121, "larg": 121, "bleu": 121, "gross": 121, "mar": 122, "segment": 122, "niveau": 122, "Y": 123, "2x2": 123, "indic": [123, 168], "m\u00e9decin": 123, "grill": 123, "10x10": 123, "quadrill": 123, "coordon": [123, 208], "dictionair": 123, "case_grill": 123, "pairwise_dist": 123, "1000x2": 123, "100x2": 123, "faux": 123, "corrig": 123, "d\u00e9codag": 124, "int\u00e9ress": 124, "re\u00e7oit": 124, "correspond": 124, "form": 124, "Il": 124, "faut": 124, "Que": [124, 171], "\u00e9quiprob": 124, "coding": 124, "b": 124, "\u00eatre": 124, "conna\u00eetr": 125, "temporel": 128, "jeu": [130, 134, 139, 151, 156, 161, 177, 179, 180, 201, 202], "mal": 130, "balanc": 130, "\u00e9volu": [130, 178], "varianc": 130, "retour": [130, 160], "derni": [130, 156, 171], "s\u00fbr": 130, "tre": 132, "hyperparametr": 132, "overfitting": 132, "d\u00e9cis": 132, "max_depth": 132, "min_samples_spl": 132, "random": 132, "forest": 132, "n_estimator": 132, "decis": 132, "r\u00e9seau": 132, "neuron": 132, "alpha": 132, "intervall": 132, "confianc": 132, "xgboost": [131, 132], "featur": [133, 185, 186], "singl": 135, "spectrum": 135, "ssa": 135, "articiel": 135, "autocorrel": 135, "pr\u00e9dict": [135, 149], "acp": 136, "project": 136, "logist": [137, 138], "2d": 138, "disjoint": 139, "manuel": 139, "automatis": [139, 142], "articificiel": 139, "stacking": 142, "cross": 144, "\u00e9valu": 145, "d\u00e9coupag": [148, 189, 190], "stratifi": 148, "vin": 149, "polyn\u00f4mial": 150, "pipelin": 150, "d\u00e9": [151, 161], "rotat": [151, 161], "De": 151, "profondeur": [152, 154], "maximal": [152, 154], "transit": 153, "composit": 153, "transposit": 153, "d\u00e9m\u00eal": 153, "jet": 154, "depuis": 154, "racin": [154, 179, 180], "jusqu": 154, "intermed": [154, 183], "is": 154, "product": 155, "2048": [156, 201, 202], "libr": 156, "pourvu": 156, "perdu": 156, "aggreg": 156, "jou": 156, "coup": 156, "sach": 156, "direct": 156, "scor": [156, 209, 210], "fais": 156, "bref": 157, "station": 157, "m\u00e9tro": 157, "insert": 158, "loi": 159, "multinomial": 159, "bootstrap": 159, "colori": 160, "proport": 160, "couvert": 160, "r\u00e9partit": [162, 187], "hashag": 162, "pseudo": 162, "light": 162, "xml": [163, 166], "relir": 163, "essai": 163, "html": 163, "sql": 163, "sas": 163, "trop": 163, "zippon": 163, "inspir": [131, 163], "cercl": 164, "pi": 164, "ni": 164, "aucun": 164, "parfait": 164, "extrair": 165, "remplac": 165, "rim": 165, "elles": 165, "ail": 165, "flux": 166, "lir": [166, 209, 210], "gros": 166, "d\u00e9s\u00e9rialis": 166, "heap": 168, "transform": 168, "tas": 168, "lieu": 168, "gin": 170, "profil": [170, 172], "_gini_final": 170, "savoir": 170, "_gini_cumsum": 170, "convolu": 171, "im2col": 171, "nouveau": 171, "\u00e9xecu": 171, "d\u00e9duir": 171, "profilag": 171, "\u00e9chantillonnag": 171, "pouv": 171, "dir": 171, "bizarrer": 172, "web": 174, "scraping": 174, "pokemon": 174, "caract\u00e9rist": 174, "spars": [175, 185, 186], "m\u00e9moir": [134, 175], "chi": 176, "formul": 176, "obstacl": 177, "\u00e9chiqui": 177, "pr\u00e9vu": 178, "d\u00e9correl": [179, 180], "q11": [179, 180], "q12": [179, 180], "q13": [179, 180], "cryptag": [181, 182], "homomorphic": [181, 182], "craig": [181, 182], "gentry": [181, 182], "stabl": [181, 182], "addit": [181, 182], "impl\u00e9mentent": [181, 182], "spectral": [183, 184], "clustering": [183, 184], "th\u00e9oriqu": 183, "nn": [185, 186], "perform": [185, 186], "imagin": [185, 186], "vit": [185, 186], "observ": 186, "skis": 187, "facult": [187, 188], "prolong": [187, 188], "degr": [187, 188], "facebook": [187, 188], "puzzl": [189, 190, 191, 192], "moin": 189, "recouvr": [189, 190], "soudoi": [189, 190], "prisonni": [189, 190], "intelligent": [189, 190], "approch": 190, "watershed": [191, 192], "bagarreur": [191, 192], "bin\u00f4m": [191, 192], "magiqu": [193, 194], "suit": [193, 194], "truqu": [195, 196], "mer": 195, "mixt": [195, 196], "ordon": 197, "crypt": [197, 198], "d\u00e9crypt": [197, 198], "selon": [197, 198], "int\u00e9gral": [199, 200], "rectangl": [199, 200], "r\u00e9calcitr": 200, "carlo": 200, "arr\u00eat": 200, "gagn": [201, 202], "regl": [201, 202], "rightarrow": [203, 204], "cherch": [203, 204], "motif": [203, 204], "url": [203, 204], "wikip\u00e9di": [203, 204], "subtil": 203, "pyramid": [207, 208], "bigarr": [207, 208], "couleur": 208, "devin": [209, 210], "langu": [209, 210], "normalis": [209, 210], "gradient": 131, "boosting": 131, "rat": 131, "quantil": 131, "learning_rat": 131, "lightgbm": 131, "catboost": 131, "ridg": 134, "lasso": 134, "nouvel": 134, "for\u00eat": 134, "g\u00e9ometr": 134, "nullit": 134, "coefficient": 134, "api": 134, "projet": 22}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Survol algorithmique": [[1, "survol-algorithmique"]], "Ordres de grandeur": [[1, "ordres-de-grandeur"]], "Comprendre le co\u00fbt d\u2019un algorithme": [[1, "comprendre-le-cout-d-un-algorithme"]], "Mot-cl\u00e9": [[1, "mot-cle"]], "Catalogue d\u2019algorithmes": [[1, "catalogue-d-algorithmes"]], "Probl\u00e8mes NP-complets": [[1, "problemes-np-complets"]], "Id\u00e9e pour d\u00e9monstrer qu\u2019un probl\u00e8me est NP-complet": [[1, "idee-pour-demonstrer-qu-un-probleme-est-np-complet"]], "Liens": [[1, "liens"]], "Articles sur des algorithmes": [[1, "articles-sur-des-algorithmes"]], "Livres": [[1, "livres"]], "Pour s\u2019entra\u00eener": [[1, "pour-s-entrainer"]], "Google\u2019s recommandations": [[1, "google-s-recommandations"]], "examples.construction_classique": [[2, "examples-construction-classique"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "Python n\u2019accepte pas les accents": [[2, "indexfaqref-python0"], [71, "index-faqref-0-6"]], "Modifier un dictionnaire en le parcourant": [[2, "indexexref-Base -0"], [231, "index-exref-1-1"]], "Quelle est la diff\u00e9rence entre return et print ?": [[2, "indexfaqref-python1"], [71, "index-faqref-0-10"]], "calcul de la somme des dix premiers entiers au carr\u00e9": [[2, "indexexref-Base0"], [231, "index-exref-0-1"]], "Eviter d\u2019effectuer le m\u00eame appel deux fois": [[2, "indexexref-Base -1"], [231, "index-exref-1-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en datetime": [[2, "indexexref-Base1"], [231, "index-exref-0-4"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "comptage": [[2, "indexexref-Base2"], [231, "index-exref-0-2"]], "fonction comme param\u00e8tre": [[2, "indexexref-Base3"], [231, "index-exref-0-8"]], "conversion d\u2019une matrice en cha\u00eene de caract\u00e8res": [[2, "indexexref-Base4"], [231, "index-exref-0-6"]], "conversion d\u2019une matrice en un vecteur": [[2, "indexexref-Base5"], [231, "index-exref-0-7"]], "minimum avec position": [[2, "indexexref-Base6"], [231, "index-exref-0-9"]], "recherche avec index": [[2, "indexexref-Base7"], [231, "index-exref-0-10"]], "recherche dichotomique": [[2, "indexexref-Base8"], [231, "index-exref-0-11"]], "calcul d\u2019une somme": [[2, "indexexref-Base9"], [231, "index-exref-0-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en matrice": [[2, "indexexref-Base10"], [231, "index-exref-0-5"]], "tri, garder les positions initiales": [[2, "indexexref-Base11"], [231, "index-exref-0-12"]], "conversion d\u2019un vecteur en une matrice": [[2, "indexexref-Base12"], [231, "index-exref-0-3"]], "Jeux de donn\u00e9es": [[3, "jeux-de-donnees"]], "Cartographie": [[3, "cartographie"]], "Classification": [[3, "classification"], [62, "classification"], [128, null]], "Outils": [[3, "outils"], [129, null]], "R\u00e9gression": [[3, "regression"], [62, "regression"], [128, null]], "faq": [[4, "faq"]], "teachpyx.faq.faq_python": [[4, "module-teachpyx.faq.faq_python"]], "Quelle est la diff\u00e9rence entre / et // - division ?": [[4, "indexfaqref-python0"], [71, "index-faqref-0-9"]], "Quel est l\u2019entier le plus grand ?": [[4, "indexfaqref-python1"], [71, "index-faqref-0-8"]], "Tabulations ou espace ?": [[4, "indexfaqref-python2"], [71, "index-faqref-0-14"]], "Comment it\u00e9rer sur les r\u00e9sultats d\u2019une expression r\u00e9guli\u00e8re ?": [[4, "indexfaqref-python3"], [71, "index-faqref-0-2"]], "R\u00e9cup\u00e9rer le nom du jour \u00e0 partir d\u2019une date": [[4, "indexfaqref-python4"], [71, "index-faqref-0-12"]], "R\u00e9cup\u00e9rer le nom du mois \u00e0 partir d\u2019une date": [[4, "indexfaqref-python5"], [71, "index-faqref-0-13"]], "R\u00e9cup\u00e9rer la liste des modules install\u00e9s": [[4, "indexfaqref-python6"], [71, "index-faqref-0-11"]], "Pourquoi l\u2019installation de pandas (ou numpy)\nne marche pas sous Windows avec pip ?": [[4, "indexfaqref-python7"], [71, "index-faqref-0-5"]], "Obtenir des informations sur les packages install\u00e9s": [[4, "indexfaqref-python8"], [71, "index-faqref-0-4"]], "propri\u00e9t\u00e9": [[4, "indexfaqref-python9"], [71, "index-faqref-0-15"]], "Comment \u00e9viter sys.path.append\u2026 quand on d\u00e9veloppe un module ?": [[4, "indexfaqref-python10"], [71, "index-faqref-0-3"]], "Qu\u2019est-ce qu\u2019un type immuable ou immutable ?": [[4, "indexfaqref-python11"], [71, "index-faqref-0-7"]], "Classe sortable": [[4, "indexfaqref-python12"], [71, "index-faqref-0-1"]], "A quoi sert un ``StringIO`` ?": [[4, "indexfaqref-python13"], [71, "index-faqref-0-0"]], "teachpyx.faq.faq_exception": [[4, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_geo": [[4, "module-teachpyx.faq.faq_geo"]], "Les fichiers GEOFLA ne contiennent pas de longitude, latitude ?": [[4, "indexfaqref-geo0"], [71, "index-faqref-2-0"]], "teachpyx.faq.faq_numpy": [[4, "module-teachpyx.faq.faq_numpy"]], "Code inclus dans cette librairie": [[5, "code-inclus-dans-cette-librairie"]], "Constructions classiques": [[5, null], [221, "constructions-classiques"], [229, "constructions-classiques"], [230, "constructions-classiques"], [231, "constructions-classiques"], [235, "constructions-classiques"]], "Fonctions illustrant des solutions": [[5, null]], "Animations": [[5, null]], "FAQ": [[5, null], [71, "faq"]], "examples.numpysex": [[6, "module-teachpyx.examples.numpysex"]], "op\u00e9rations avec numpy.matrix": [[6, "indexexref-numpy0"], [49, "index-exref-0-0"]], "Quels sont les types que numpy supporte ?": [[6, "indexfaqref-numpy0"], [71, "index-faqref-1-0"]], "teachpyx.practice.rues_paris": [[7, "module-teachpyx.practice.rues_paris"]], "teachpyx.practice.tsp_bresenham": [[8, "module-teachpyx.practice.tsp_bresenham"]], "teachpyx.practice.tsp_kohonen": [[9, "module-teachpyx.practice.tsp_kohonen"]], "teachpyx.practice.tsp_kruskal": [[10, "module-teachpyx.practice.tsp_kruskal"]], "tools": [[11, "tools"]], "decompress_zip": [[11, "decompress-zip"]], "download_and_unzip": [[11, "download-and-unzip"]], "draw_diagram": [[11, "draw-diagram"]], "draw_graph_graphviz": [[11, "draw-graph-graphviz"]], "total_size": [[11, "total-size"]], "profiling": [[11, "module-teachpyx.tools.profiling"]], "run_graphviz": [[11, "run-graphviz"]], "run_subprocess": [[11, "run-subprocess"]], "video": [[11, "module-teachpyx.tools.display.pygame_helper"]], "teachpyx.video.tsp_kohonen_pygame": [[12, "teachpyx-video-tsp-kohonen-pygame"]], "teachpyx.video.tsp_kruskal": [[13, "teachpyx-video-tsp-kruskal"]], "Assurance auto": [[14, "assurance-auto"]], "Assurance": [[14, "assurance"]], "Donn\u00e9es": [[14, "donnees"]], "Premier r\u00e9flexe : apprentissage et test": [[14, "premier-reflexe-apprentissage-et-test"]], "Ajout de variables agr\u00e9g\u00e9es": [[14, "ajout-de-variables-agregees"]], "Donn\u00e9es g\u00e9ographiques": [[14, "donnees-geographiques"]], "Grand nombre de variables": [[14, "grand-nombre-de-variables"]], "Mod\u00e9lisation un peu plus anonyme": [[14, "modelisation-un-peu-plus-anonyme"]], "2022-11-31 : rappel feuille de route 2022": [[15, "rappel-feuille-de-route-2022"]], "S\u00e9ance 1 - 7-9 - introduction, dictionnaire": [[15, "seance-1-7-9-introduction-dictionnaire"]], "S\u00e9ance 2 - 14-9 - programmation dynamique, voyageur de commerce": [[15, "seance-2-14-9-programmation-dynamique-voyageur-de-commerce"]], "S\u00e9ance 3 - 21-9 - numpy, pandas": [[15, "seance-3-21-9-numpy-pandas"]], "S\u00e9ance 4 - 28-9 - graphes": [[15, "seance-4-28-9-graphes"]], "S\u00e9ance 5 - 5-10 - s\u00e9rialisation, tests unitaires, profiling": [[15, "seance-5-5-10-serialisation-tests-unitaires-profiling"]], "S\u00e9ance 6 - 12-10 - expressions r\u00e9guli\u00e8res, webscrapping": [[15, "seance-6-12-10-expressions-regulieres-webscrapping"]], "S\u00e9ance 7 - 19-10 - top k, tri": [[15, "seance-7-19-10-top-k-tri"]], "S\u00e9ance 8 - 26-10 - graphes": [[15, "seance-8-26-10-graphes"]], "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)": [[16, "utilisation-de-cartopy-sous-windows-sous-wsl"]], "2023-08-03 : Code Jam": [[17, "code-jam"]], "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne": [[18, "l-enigme-d-hermionne"]], "2023-09-06 : ENSAE": [[19, "ensae"]], "2023-11-31 : rappel feuille de route 2023": [[20, "rappel-feuille-de-route-2023"]], "S\u00e9ance 1": [[20, "seance-1"]], "S\u00e9ance 2": [[20, "seance-2"]], "S\u00e9ance 3": [[20, "seance-3"]], "S\u00e9ance 4": [[20, "seance-4"]], "S\u00e9ance 5": [[20, "seance-5"]], "S\u00e9ance 6": [[20, "seance-6"]], "S\u00e9ance 7": [[20, "seance-7"]], "S\u00e9ance 8": [[20, "seance-8"]], "2024-01-18 : WSL - nettoyage": [[21, "wsl-nettoyage"]], "Collections d\u2019articles p\u00e9rissables": [[23, "collections-d-articles-perissables"]], "2024": [[23, null]], "2023": [[23, null], [217, "id1"]], "2022": [[23, null]], "Gallerie d\u2019exemples": [[24, "gallerie-d-exemples"]], "Gallerie d\u2019exemples sur le machine learning": [[24, "gallerie-d-exemples-sur-le-machine-learning"], [25, "gallerie-d-exemples-sur-le-machine-learning"]], "Gallerie d\u2019exemples sur la programmation": [[24, "gallerie-d-exemples-sur-la-programmation"], [29, "gallerie-d-exemples-sur-la-programmation"]], "Corr\u00e9lations": [[26, "correlations"]], "Receiver Operating Characteristic (ROC)": [[27, "receiver-operating-characteristic-roc"]], "Classification binaire": [[27, "classification-binaire"]], "Trois courbes": [[27, "trois-courbes"]], "predict_proba ou decision_function": [[27, "predict-proba-ou-decision-function"]], "Precision Rappel": [[27, "precision-rappel"]], "M\u00e9trique F1": [[27, "metrique-f1"]], "Pourquoi ROC alors ?": [[27, "pourquoi-roc-alors"]], "Computation times": [[28, "computation-times"], [43, "computation-times"], [44, "computation-times"], [246, "computation-times"]], "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution": [[30, "l-enigme-d-einstein-et-sa-resolution"]], "Fonction permutation": [[30, "fonction-permutation"]], "La classe Rule": [[30, "la-classe-rule"]], "Explicit rules": [[30, "explicit-rules"]], "Description du probl\u00e8me avec ce code": [[30, "description-du-probleme-avec-ce-code"]], "Float Conversion": [[31, "float-conversion"]], "Probability (float64)x == (float32)x": [[31, "probability-float64-x-float32-x"]], "Interval length distribution": [[31, "interval-length-distribution"]], "An answer to the initial question": [[31, "an-answer-to-the-initial-question"]], "An answer to a similar question: what about not strict comparison?": [[31, "an-answer-to-a-similar-question-what-about-not-strict-comparison"]], "Conclusion": [[31, "conclusion"], [56, "conclusion"], [111, "Conclusion"]], "Le GIL": [[32, "le-gil"]], "Deux listes en parallel": [[32, "deux-listes-en-parallel"]], "Un autre sc\u00e9nario": [[32, "un-autre-scenario"]], "Hypercube et autres exercices": [[33, "hypercube-et-autres-exercices"]], "Q1 - triple r\u00e9cursivit\u00e9": [[33, "q1-triple-recursivite"]], "Q2 - comparaison de listes": [[33, "q2-comparaison-de-listes"]], "Q3 - pr\u00e9cision des calculs": [[33, "q3-precision-des-calculs"]], "Q4 - hypercube": [[33, "q4-hypercube"]], "Astuces avec les lambda functions": [[34, "astuces-avec-les-lambda-functions"]], "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations": [[35, "mathador-enigme-a-4-operations"]], "Points d\u2019impl\u00e9mentation avec numpy": [[36, "points-d-implementation-avec-numpy"]], "acc\u00e9der \u00e0 un \u00e9l\u00e9ment en particulier": [[36, "acceder-a-un-element-en-particulier"]], "Pandas et groupby": [[37, "pandas-et-groupby"]], "groupby et valeur manquantes": [[37, "groupby-et-valeur-manquantes"]], "Parties de dames": [[38, "parties-de-dames"]], "Q1": [[38, "q1"], [82, "Q1"], [89, "Q1"], [100, "Q1"], [100, "id1"], [101, "Q1"], [101, "id1"], [102, "Q1"], [102, "id1"], [102, "id6"], [103, "Q1"], [104, "Q1"], [104, "id1"], [105, "Q1"], [105, "id1"], [107, "Q1"], [110, "Q1"], [110, "id1"], [110, "id3"], [111, "Q1"], [112, "Q1"], [119, "Q1"], [179, "Q1"], [180, "Q1"], [183, "Q1"], [183, "id1"], [184, "Q1"], [184, "id1"]], "Q2": [[38, "q2"], [82, "Q2"], [89, "Q2"], [100, "Q2"], [100, "id2"], [101, "Q2"], [101, "id2"], [102, "Q2"], [102, "id2"], [102, "id7"], [103, "Q2"], [104, "Q2"], [104, "id2"], [105, "Q2"], [105, "id2"], [107, "Q2"], [110, "Q2"], [110, "id2"], [110, "id4"], [111, "Q2"], [112, "Q2"], [179, "Q2"], [180, "Q2"], [183, "Q2"], [183, "id2"], [184, "Q2"], [184, "id2"]], "Q3": [[38, "q3"], [89, "Q3"], [100, "Q3"], [100, "id3"], [101, "Q3"], [101, "id3"], [102, "Q3"], [102, "id3"], [102, "id8"], [103, "Q3"], [104, "Q3"], [104, "id3"], [105, "Q3"], [105, "id3"], [107, "Q3"], [110, "Q3"], [111, "Q3"], [112, "Q3"], [179, "Q3"], [180, "Q3"], [183, "Q3"], [184, "Q3"]], "Q4": [[38, "q4"], [89, "Q4"], [101, "Q4"], [101, "id4"], [102, "Q4"], [102, "id4"], [102, "id9"], [103, "Q4"], [110, "Q4"], [111, "Q4"], [111, "id1"], [112, "Q4"], [179, "Q4"], [180, "Q4"], [183, "Q4"], [184, "Q4"]], "S\u00e9rialisation": [[39, "serialisation"], [240, "serialisation"]], "JSON": [[39, "json"], [240, "json"]], "Ecriture (json)": [[39, "ecriture-json"]], "Lecture (json)": [[39, "lecture-json"]], "Limite": [[39, "limite"]], "S\u00e9rialisation rapide": [[39, "serialisation-rapide"]], "Pickle": [[39, "pickle"]], "Ecriture (pickle)": [[39, "ecriture-pickle"]], "Lecture (pickle)": [[39, "lecture-pickle"]], "Les classes": [[39, "les-classes"]], "R\u00e9duire la taille": [[39, "reduire-la-taille"]], "Cas des fonctions": [[39, "cas-des-fonctions"]], "Binaire": [[39, "binaire"], [240, "binaire"]], "Fonction et JSON": [[39, "fonction-et-json"]], "Cas des it\u00e9rateurs": [[39, "cas-des-iterateurs"]], "Cas des g\u00e9n\u00e9rateurs": [[39, "cas-des-generateurs"]], "S\u00e9rialisation avec protobuf": [[40, "serialisation-avec-protobuf"]], "Sch\u00e9ma": [[40, "schema"]], "Compilation": [[40, "compilation"]], "Import du module cr\u00e9\u00e9": [[40, "import-du-module-cree"]], "S\u00e9rialisation en cha\u00eene de caract\u00e8res": [[40, "serialisation-en-chaine-de-caracteres"]], "Plusieurs cha\u00eenes de caract\u00e8res": [[40, "plusieurs-chaines-de-caracteres"]], "S\u00e9rialisation JSON": [[40, "serialisation-json"]], "Exercices expliqu\u00e9s de programmation": [[41, "exercices-expliques-de-programmation"]], "Copie de listes": [[41, "copie-de-listes"]], "Erreur de logique": [[41, "erreur-de-logique"]], "Co\u00fbt d\u2019un algorithme": [[41, "cout-d-un-algorithme"]], "H\u00e9ritage double": [[41, "heritage-double"]], "Pr\u00e9cision des calculs": [[41, "precision-des-calculs"]], "R\u00e9flexions autour du voyage de commerce (TSP)": [[42, "reflexions-autour-du-voyage-de-commerce-tsp"]], "Des villes tir\u00e9es au hasard": [[42, "des-villes-tirees-au-hasard"]], "Croisements": [[42, "croisements"], [93, "Croisements"]], "Noeud de d\u00e9part constant": [[42, "noeud-de-depart-constant"]], "Un peu d\u2019al\u00e9atoire en plus": [[42, "un-peu-d-aleatoire-en-plus"]], "Dataframes": [[45, "dataframes"]], "Tracer une carte en Python": [[46, "Tracer-une-carte-en-Python"]], "donn\u00e9es": [[46, "donn\u00e9es"], [139, "donn\u00e9es"]], "cartopy": [[46, "cartopy"]], "plotly, gmaps, bingmaps": [[46, "plotly,-gmaps,-bingmaps"]], "geopandas": [[46, "geopandas"]], "folium": [[46, "folium"]], "cartopy avec les donn\u00e9es d\u2019OpenStreetMap": [[46, "cartopy-avec-les-donn\u00e9es-d'OpenStreetMap"]], "Graphes": [[47, "graphes"], [125, null], [128, null]], "Matrices et DataFrames": [[48, "matrices-et-dataframes"], [236, "matrices-et-dataframes"]], "Calcul matriciel": [[49, "calcul-matriciel"]], "Calcul Matriciel, Optimisation": [[50, "Calcul-Matriciel,-Optimisation"]], "Numpy arrays": [[50, "Numpy-arrays"]], "Creation d\u2019un array: notion de datatype, et dimensions": [[50, "Creation-d'un-array:-notion-de-datatype,-et-dimensions"]], "Indexation, Slicing, Fancy indexing": [[50, "Indexation,-Slicing,-Fancy-indexing"]], "View contre Copy": [[50, "View-contre-Copy"]], "Manipulation de shape": [[50, "Manipulation-de-shape"]], "Exercice 1 : Echiquier et Crible d\u2019Erathosth\u00e8ne": [[50, "Exercice-1-:-Echiquier-et-Crible-d'Erathosth\u00e8ne"]], "Manipulation et Op\u00e9rations sur les arrays": [[50, "Manipulation-et-Op\u00e9rations-sur-les-arrays"]], "Op\u00e9rations \u00e9l\u00e9ment par \u00e9l\u00e9ment": [[50, "Op\u00e9rations-\u00e9l\u00e9ment-par-\u00e9l\u00e9ment"]], "Broadcasting": [[50, "Broadcasting"]], "R\u00e9ductions": [[50, "R\u00e9ductions"]], "Alg\u00e8bre lin\u00e9aire": [[50, "Alg\u00e8bre-lin\u00e9aire"]], "Exemples simples": [[50, "Exemples-simples"]], "Numpy Matrix": [[50, "Numpy-Matrix"]], "G\u00e9n\u00e9ration de nombres al\u00e9atoires et statistiques": [[50, "G\u00e9n\u00e9ration-de-nombres-al\u00e9atoires-et-statistiques"]], "Exercice 2 : marches al\u00e9atoires": [[50, "Exercice-2-:-marches-al\u00e9atoires"]], "Exercice 3 : retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires": [[50, "Exercice-3-:-retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires"]], "Optimisation avec scipy": [[50, "Optimisation-avec-scipy"]], "Exercice 4 : simulation, r\u00e9gression, estimation par maximisation de la vraisemblance": [[50, "Exercice-4-:-simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance"]], "R\u00e9f\u00e9rences": [[50, "R\u00e9f\u00e9rences"]], "El\u00e9ments de r\u00e9ponses pour les exercices": [[50, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"], [51, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"]], "Exercice 1 (Echiquier et Crible d\u2019Erathosthene)": [[50, "Exercice-1-(Echiquier-et-Crible-d'Erathosthene)"]], "Exercice 2 (marches al\u00e9atoires)": [[50, "Exercice-2-(marches-al\u00e9atoires)"]], "Exercice 3 (retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires)": [[50, "Exercice-3-(retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires)"]], "Exercice 4 (simulation, r\u00e9gression, estimation par maximisation de la vraisemblance)": [[50, "Exercice-4-(simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance)"]], "DataFrame et Graphes": [[51, "DataFrame-et-Graphes"]], "DataFrame": [[51, "DataFrame"], [61, "dataframe"]], "Series": [[51, "Series"]], "DataFrame (pandas)": [[51, "DataFrame-(pandas)"]], "Lecture et \u00e9criture de DataFrame": [[51, "Lecture-et-\u00e9criture-de-DataFrame"]], "DataFrame et Index": [[51, "DataFrame-et-Index"]], "Notation avec le symbole :": [[51, "Notation-avec-le-symbole-:"]], "Exercice 1 : cr\u00e9er un fichier Excel": [[51, "Exercice-1-:-cr\u00e9er-un-fichier-Excel"], [51, "id1"]], "Manipuler un DataFrame": [[51, "Manipuler-un-DataFrame"]], "6 op\u00e9rations : filtrer, union, sort, group by, join, pivot": [[51, "6-op\u00e9rations-:-filtrer,-union,-sort,-group-by,-join,-pivot"]], "filter": [[51, "filter"]], "union": [[51, "union"]], "sort": [[51, "sort"]], "group by": [[51, "group-by"]], "join (merge ou fusion)": [[51, "join-(merge-ou-fusion)"]], "pivot (tableau crois\u00e9 dynamique)": [[51, "pivot-(tableau-crois\u00e9-dynamique)"]], "Lambda fonctions": [[51, "Lambda-fonctions"]], "Exercice 2 : lambda fonction": [[51, "Exercice-2-:-lambda-fonction"]], "Exercice 3 : moyennes par groupes": [[51, "Exercice-3-:-moyennes-par-groupes"], [51, "id2"]], "Avec ou sans index": [[51, "Avec-ou-sans-index"]], "Dates": [[51, "Dates"], [232, "dates"]], "Plot(s)": [[51, "Plot(s)"]], "R\u00e9cup\u00e9ration des donn\u00e9es": [[51, "R\u00e9cup\u00e9ration-des-donn\u00e9es"]], "Exercice 4 : nuage de points": [[51, "Exercice-4-:-nuage-de-points"]], "Exercice 5 : graphe d\u2019une distribution avec pandas": [[51, "Exercice-5-:-graphe-d'une-distribution-avec-pandas"]], "matplotlib": [[51, "matplotlib"], [61, "matplotlib"]], "Exercice 6 : distribution des mariages par jour": [[51, "Exercice-6-:-distribution-des-mariages-par-jour"], [51, "id3"]], "Annexes": [[51, "Annexes"]], "Cr\u00e9er un fichier Excel avec plusieurs feuilles": [[51, "Cr\u00e9er-un-fichier-Excel-avec-plusieurs-feuilles"]], "Exercice 2 : lambda function": [[51, "Exercice-2-:-lambda-function"]], "Exercice 4 : \u00e9cart entre les mari\u00e9s": [[51, "Exercice-4-:-\u00e9cart-entre-les-mari\u00e9s"]], "Exercice 5 : graphe de la distribution avec pandas": [[51, "Exercice-5-:-graphe-de-la-distribution-avec-pandas"]], "Mesures de vitesse sur les dataframes": [[52, "Mesures-de-vitesse-sur-les-dataframes"]], "Cr\u00e9ation d\u2019un dataframe \u00e0 partir d\u2019un it\u00e9rateur": [[52, "Cr\u00e9ation-d'un-dataframe-\u00e0-partir-d'un-it\u00e9rateur"]], "Cr\u00e9ation d\u2019un array \u00e0 partir d\u2019un it\u00e9rateur": [[52, "Cr\u00e9ation-d'un-array-\u00e0-partir-d'un-it\u00e9rateur"]], "Calcul matriciel avec numpy (exercices)": [[53, "Calcul-matriciel-avec-numpy-(exercices)"]], "Enonc\u00e9": [[53, "Enonc\u00e9"], [54, "Enonc\u00e9"], [78, "Enonc\u00e9"], [80, "Enonc\u00e9"], [82, "Enonc\u00e9"], [83, "Enonc\u00e9"], [85, "Enonc\u00e9"], [87, "Enonc\u00e9"], [88, "Enonc\u00e9"], [89, "Enonc\u00e9"], [90, "Enonc\u00e9"], [163, "Enonc\u00e9"], [164, "Enonc\u00e9"], [165, "Enonc\u00e9"], [170, "Enonc\u00e9"]], "La ma\u00eetrise du slice": [[53, "La-ma\u00eetrise-du-slice"]], "La ma\u00eetrise du nan": [[53, "La-ma\u00eetrise-du-nan"], [54, "La-ma\u00eetrise-du-nan"]], "La ma\u00eetrise des types": [[53, "La-ma\u00eetrise-des-types"], [54, "La-ma\u00eetrise-des-types"]], "La ma\u00eetrise du broadcasting": [[53, "La-ma\u00eetrise-du-broadcasting"]], "La ma\u00eetrise des index": [[53, "La-ma\u00eetrise-des-index"], [54, "La-ma\u00eetrise-des-index"]], "La ma\u00eetrise des op\u00e9rations et des fonctions": [[53, "La-ma\u00eetrise-des-op\u00e9rations-et-des-fonctions"]], "Q1 : calculer la valeur du \\chi_2 d\u2019un tableau de contingence": [[53, "Q1-:-calculer-la-valeur-du-\\chi_2-d'un-tableau-de-contingence"], [53, "id1"]], "Q2 : calculer une distribution un peu particuli\u00e8re": [[53, "Q2-:-calculer-une-distribution-un-peu-particuli\u00e8re"], [53, "id2"]], "Q3 : on veut cr\u00e9er une matrice identit\u00e9 un million par un million": [[53, "Q3-:-on-veut-cr\u00e9er-une-matrice-identit\u00e9-un-million-par-un-million"], [53, "id3"]], "Q4 : vous devez cr\u00e9er l\u2019application StopCovid": [[53, "Q4-:-vous-devez-cr\u00e9er-l'application-StopCovid"], [53, "id4"]], "R\u00e9ponses": [[53, "R\u00e9ponses"], [54, "R\u00e9ponses"], [78, "R\u00e9ponses"], [80, "R\u00e9ponses"], [82, "R\u00e9ponses"], [85, "R\u00e9ponses"], [87, "R\u00e9ponses"], [88, "R\u00e9ponses"], [89, "R\u00e9ponses"], [163, "R\u00e9ponses"], [164, "R\u00e9ponses"], [165, "R\u00e9ponses"], [170, "R\u00e9ponses"]], "Manipulation de donn\u00e9es avec pandas (exercices)": [[54, "Manipulation-de-donn\u00e9es-avec-pandas-(exercices)"]], "Cr\u00e9ation d\u2019un dataframe": [[54, "Cr\u00e9ation-d'un-dataframe"]], "La ma\u00eetrise des index des lignes": [[54, "La-ma\u00eetrise-des-index-des-lignes"]], "La ma\u00eetrise des index des colonnes": [[54, "La-ma\u00eetrise-des-index-des-colonnes"]], "Lien vers numpy": [[54, "Lien-vers-numpy"]], "Cr\u00e9ation de colonnes": [[54, "Cr\u00e9ation-de-colonnes"]], "Modifications de valeurs": [[54, "Modifications-de-valeurs"]], "Une erreur ou warning fr\u00e9quent": [[54, "Une-erreur-ou-warning-fr\u00e9quent"]], "La ma\u00eetrise des fonctions": [[54, "La-ma\u00eetrise-des-fonctions"]], "On r\u00e9cup\u00e8re les donn\u00e9es du COVID par r\u00e9gion et par \u00e2ge et premier graphe": [[54, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"], [85, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"]], "Q1 : refaire le graphique pr\u00e9c\u00e9dent pour votre classe d\u2019\u00e2ge": [[54, "Q1-:-refaire-le-graphique-pr\u00e9c\u00e9dent-pour-votre-classe-d'\u00e2ge"], [54, "id1"]], "Q2 : faire de m\u00eame avec les s\u00e9ries diff\u00e9renci\u00e9es": [[54, "Q2-:-faire-de-m\u00eame-avec-les-s\u00e9ries-diff\u00e9renci\u00e9es"], [54, "id2"]], "Q3 : faire de m\u00eame avec des s\u00e9ries liss\u00e9es sur sur 7 jours": [[54, "Q3-:-faire-de-m\u00eame-avec-des-s\u00e9ries-liss\u00e9es-sur-sur-7-jours"], [54, "id3"]], "Q4 : fusion de tables par d\u00e9partements": [[54, "Q4-:-fusion-de-tables-par-d\u00e9partements"], [54, "id4"]], "Petit apart\u00e9": [[54, "Petit-apart\u00e9"]], "Q5 : une carte ?": [[54, "Q5-:-une-carte-?"]], "Numpy et tableau de contingence": [[55, "Numpy-et-tableau-de-contingence"]], "Strat\u00e9gie automatique de trading en finance": [[56, "strategie-automatique-de-trading-en-finance"]], "Quelques r\u00e9f\u00e9rences": [[56, "quelques-references"]], "Vocabulaire financier": [[56, "vocabulaire-financier"]], "March\u00e9s liquides": [[56, "marches-liquides"]], "Description d\u2019une s\u00e9rie financi\u00e8re": [[56, "description-d-une-serie-financiere"]], "Figure F1 : Open-High-Low-Close-Volume": [[56, "indexmathe-Figure0"], [70, "index-mathdef-1-31"]], "Figure F2 : OHLC Intraday": [[56, "indexmathe-Figure1"], [70, "index-mathdef-1-37"]], "Figure F3 : Exemple de carnet d\u2019ordres, tous les ordres ne sont pas repr\u00e9sent\u00e9s.": [[56, "indexmathe-Figure2"], [70, "index-mathdef-1-38"]], "Rendements, Volatilit\u00e9, Corr\u00e9lation": [[56, "rendements-volatilite-correlation"]], "Moyenne mobile, bandes de Bollinger": [[56, "moyenne-mobile-bandes-de-bollinger"]], "Achats, ventes, levier": [[56, "achats-ventes-levier"]], "Hedge Funds": [[56, "hedge-funds"]], "Table T1 : Implantation des Hedge Funds en 2007": [[56, "indexmathe-Table0"], [70, "index-mathdef-4-78"]], "Familles de strat\u00e9gies": [[56, "familles-de-strategies"]], "Trend Following": [[56, "trend-following"]], "Figure F4 : Action BNP et Trend Following": [[56, "indexmathe-Figure3"], [70, "index-mathdef-1-39"]], "Mean Reversing ou Mean Reversion": [[56, "mean-reversing-ou-mean-reversion"]], "Figure F5 : Action BNP et Mean Reversing": [[56, "indexmathe-Figure4"], [70, "index-mathdef-1-40"]], "Pair Trading": [[56, "pair-trading"]], "Figure F6 : Action BNP et pair trading": [[56, "indexmathe-Figure5"], [70, "index-mathdef-1-41"]], "Styles, Value, Growth": [[56, "styles-value-growth"]], "Gestion de portefeuille": [[56, "gestion-de-portefeuille"]], "Probl\u00e8me P1 : optimisation d\u2019un portefeuille": [[56, "indexmathe-Probl\u00e8me0"], [70, "index-mathdef-2-46"]], "Horizon de trading, intraday, daily": [[56, "horizon-de-trading-intraday-daily"]], "Analyse d\u2019une strat\u00e9gie": [[56, "analyse-d-une-strategie"]], "Figure F7 : Le cours de la BNP entre d\u00e9but 2003 et mi 2008": [[56, "indexmathe-Figure6"], [70, "index-mathdef-1-42"]], "Backtest": [[56, "backtest"]], "Figure F8 : NAV": [[56, "indexmathe-Figure7"], [70, "index-mathdef-1-43"]], "Mod\u00e9lisation": [[56, "modelisation"]], "R\u00e9sultats standards": [[56, "resultats-standards"]], "Variation de param\u00e8tres": [[56, "variation-de-parametres"]], "Figure F9 : NAV d\u2019une strat\u00e9gie": [[56, "indexmathe-Figure8"], [70, "index-mathdef-1-44"]], "Autres s\u00e9ries financi\u00e8res de m\u00eame nature": [[56, "autres-series-financieres-de-meme-nature"]], "Figure F10 : 4 actions fran\u00e7aises": [[56, "indexmathe-Figure9"], [70, "index-mathdef-1-32"]], "Table T2 : Indicateurs BNP, Cr\u00e9dit Agricole, Danone, Soci\u00e9t\u00e9 G\u00e9n\u00e9rale": [[56, "indexmathe-Table1"], [70, "index-mathdef-4-79"]], "Figure F11 : Rendement pour 4 actions fran\u00e7aises": [[56, "indexmathe-Figure10"], [70, "index-mathdef-1-33"]], "D\u00e9composition en deals": [[56, "decomposition-en-deals"]], "Figure F12 : Deal": [[56, "indexmathe-Figure11"], [70, "index-mathdef-1-34"]], "Figure F13 : Deal en image": [[56, "indexmathe-Figure12"], [70, "index-mathdef-1-35"]], "Figure F14 : Deal positifs, n\u00e9gatifs, logns, courts": [[56, "indexmathe-Figure13"], [70, "index-mathdef-1-36"]], "Pour aller plus loin": [[56, "pour-aller-plus-loin"], [177, "Pour-aller-plus-loin"]], "Diversification": [[56, "diversification"]], "Expos\u00e9s": [[57, "exposes"]], "Circuit hamiltonien et Kohonen": [[58, "circuit-hamiltonien-et-kohonen"]], "Aper\u00e7u": [[58, "apercu"]], "Cartes de Kohonen": [[58, "cartes-de-kohonen"]], "Circuit hamiltonien et Kruskal": [[59, "circuit-hamiltonien-et-kruskal"]], "Arbre de poids minimal et circuit hamiltonien": [[59, "arbre-de-poids-minimal-et-circuit-hamiltonien"]], "Arbre de poids minimum": [[59, "arbre-de-poids-minimum"]], "Algorithme A1 : Kruskal": [[59, "indexmathe-Algorithme0"]], "Circuit eul\u00e9rien": [[59, "circuit-eulerien"]], "Algorithme A2 : Circuit Eul\u00e9rien": [[59, "indexmathe-Algorithme1"]], "Circuit hamiltonien": [[59, "circuit-hamiltonien"]], "Algorithme A3 : Circuit hamiltonien": [[59, "indexmathe-Algorithme2"]], "Simplification du circuit hamiltonien": [[59, "simplification-du-circuit-hamiltonien"]], "Algorithme A4 : TSP": [[59, "indexmathe-Algorithme3"]], "Machine Learning": [[60, "machine-learning"], [76, "machine-learning"], [128, "machine-learning"], [128, null]], "Quelques rappels": [[61, "quelques-rappels"]], "Rappels math\u00e9matiques": [[61, "rappels-mathematiques"]], "Fonction": [[61, "fonction"]], "Fonction continue": [[61, "fonction-continue"]], "Fonction d\u00e9rivable": [[61, "fonction-derivable"]], "Espace vectoriel": [[61, "espace-vectoriel"]], "Produit scalaire": [[61, "produit-scalaire"]], "Norme": [[61, "norme"]], "Matrice": [[61, "matrice"]], "Probl\u00e8me d\u2019optimisation": [[61, "probleme-d-optimisation"]], "Variable al\u00e9atoire": [[61, "variable-aleatoire"]], "Histogramme": [[61, "histogramme"]], "Corr\u00e9lation": [[61, "correlation"]], "Nuage de points": [[61, "nuage-de-points"]], "Rappels informatiques": [[61, "rappels-informatiques"]], "Le fichier csv": [[61, "le-fichier-csv"]], "Array": [[61, "array"]], "Fonction de hash": [[61, "fonction-de-hash"]], "Arbre": [[61, "arbre"]], "Rappels algorithmiques": [[61, "rappels-algorithmiques"]], "Le plus court chemin dans un graphe": [[61, "le-plus-court-chemin-dans-un-graphe"]], "La recherche dichotomique": [[61, "la-recherche-dichotomique"]], "Le voyageur du commerce": [[61, "le-voyageur-du-commerce"]], "Modules incourtournables en Python": [[61, "modules-incourtournables-en-python"]], "numpy": [[61, "numpy"], [71, "numpy"], [126, null]], "pandas": [[61, "pandas"], [126, null]], "scikit-learn": [[61, "scikit-learn"]], "statsmodels": [[61, "statsmodels"]], "Dessiner des cartes": [[61, "dessiner-des-cartes"]], "Exercices": [[61, "exercices"], [62, "exercices"], [73, null]], "Classification et r\u00e9gression": [[62, "classification-et-regression"]], "D\u00e9couverte du machine learning": [[62, "decouverte-du-machine-learning"]], "Finalit\u00e9": [[62, "finalite"]], "Les donn\u00e9es": [[62, "les-donnees"], [95, "Les-donn\u00e9es"], [187, "Les-donn\u00e9es"]], "Les plus proches voisins": [[62, "les-plus-proches-voisins"]], "Trois \u00e9tapes r\u00e9currentes": [[62, "trois-etapes-recurrentes"]], "Train / test": [[62, "train-test"]], "Validation crois\u00e9e": [[62, "validation-croisee"]], "Hyper-param\u00e8tres": [[62, "hyper-parametres"]], "Deux probl\u00e8mes \u00e0 la base de beaucoup d\u2019autres": [[62, "deux-problemes-a-la-base-de-beaucoup-d-autres"]], "D\u00e9finition D1 : bruit blanc": [[62, "indexmathe-D\u00e9finition0"], [70, "index-mathdef-0-5"]], "Probl\u00e8me P1 : R\u00e9gression": [[62, "indexmathe-Probl\u00e8me0"], [70, "index-mathdef-2-45"]], "Probl\u00e8me P2 : Classification binaire": [[62, "indexmathe-Probl\u00e8me1"], [70, "index-mathdef-2-47"]], "Classification multi-classe": [[62, "classification-multi-classe"], [141, "Classification-multi-classe"]], "Machine learning et programmation": [[62, "machine-learning-et-programmation"]], "Bibliographie": [[62, "bibliographie"], [242, "bibliographie"]], "Cheat Sheets": [[63, "cheat-sheets"]], "Quelques conseils pour \u00e9crire un programme": [[64, "quelques-conseils-pour-ecrire-un-programme"]], "Des petites fonctions": [[64, "des-petites-fonctions"], [69, "des-petites-fonctions"]], "Pas de variables globales": [[64, "pas-de-variables-globales"]], "S\u00e9parer les calculs, le chargement des donn\u00e9es, l\u2019interface graphique": [[64, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"], [69, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"]], "Utiliser des fonctions de tests": [[64, "utiliser-des-fonctions-de-tests"]], "Trucs et astuces": [[64, "trucs-et-astuces"], [69, "trucs-et-astuces"]], "Cheat Sheet on Git": [[65, "cheat-sheet-on-git"]], "Add a remote": [[65, "add-a-remote"]], "Add a submodule": [[65, "add-a-submodule"]], "Checkout a specific file from a remote": [[65, "checkout-a-specific-file-from-a-remote"]], "Create a new local branch": [[65, "create-a-new-local-branch"]], "Create a new remote branch": [[65, "create-a-new-remote-branch"]], "Push modification to remote repository": [[65, "push-modification-to-remote-repository"]], "Remove a submodule": [[65, "remove-a-submodule"]], "Reset a branch": [[65, "reset-a-branch"]], "Reset a submodule": [[65, "reset-a-submodule"]], "Update a branch": [[65, "update-a-branch"]], "Update a submodule": [[65, "update-a-submodule"]], "Update a submodule to the remote branch": [[65, "update-a-submodule-to-the-remote-branch"]], "Fix submodules": [[65, "fix-submodules"]], "Move multiple files": [[65, "move-multiple-files"]], "Rebase a branch to upsteam branch": [[65, "rebase-a-branch-to-upsteam-branch"]], "Rebase a branch to upsteam branch and erase history": [[65, "rebase-a-branch-to-upsteam-branch-and-erase-history"]], "Clone a part of a repository, not all": [[65, "clone-a-part-of-a-repository-not-all"]], "Pr\u00e9cis": [[66, "precis"]], "Cheat Sheet on Jenkins": [[67, "cheat-sheet-on-jenkins"]], "Installation": [[67, "installation"]], "Plugins": [[67, "plugins"]], "Start, Restart": [[67, "start-restart"]], "Reset passwords": [[67, "reset-passwords"]], "Cheat Sheet on Linux": [[68, "cheat-sheet-on-linux"]], "Classic": [[68, "classic"]], "List all installed packages": [[68, "list-all-installed-packages"]], "Remove packages": [[68, "remove-packages"]], "Error with a package": [[68, "error-with-a-package"]], "Clean temporary files": [[68, "clean-temporary-files"]], "Hard drive": [[68, "hard-drive"]], "Processes": [[68, "processes"]], "Environment variable": [[68, "environment-variable"]], "Others": [[68, "others"]], "Cheat sheet: Python": [[69, "cheat-sheet-python"]], "Le langage": [[69, "le-langage"]], "Les variables": [[69, "les-variables"]], "Les types immuables": [[69, "les-types-immuables"]], "Les types modifiables": [[69, "les-types-modifiables"]], "Liste": [[69, "liste"], [229, "liste"], [236, "liste"]], "Dictionnaire": [[69, "dictionnaire"], [236, "dictionnaire"]], "Tableaux num\u00e9riques": [[69, "tableaux-numeriques"]], "Tests et boucles": [[69, "tests-et-boucles"]], "Tests": [[69, "tests"], [235, "tests"]], "for ou while": [[69, "for-ou-while"]], "Fonction enumerate": [[69, "fonction-enumerate"]], "Fonction zip": [[69, "fonction-zip"]], "Fonction map": [[69, "fonction-map"]], "Autres mot-cl\u00e9s": [[69, "autres-mot-cles"]], "Fonctions": [[69, "fonctions"], [197, "Fonctions"], [235, "fonctions"], [244, "fonctions"]], "D\u00e9finition, param\u00e8tres": [[69, "definition-parametres"]], "mot-cl\u00e9 lambda": [[69, "mot-cle-lambda"]], "mot-cl\u00e9 yield": [[69, "mot-cle-yield"]], "Classes": [[69, "classes"], [129, null], [156, "Classes"], [221, "classes"], [222, "classes"]], "D\u00e9claration d\u2019une classe": [[69, "declaration-d-une-classe"]], "Attributs et m\u00e9thodes": [[69, "attributs-et-methodes"]], "M\u00e9thodes statiques": [[69, "methodes-statiques"]], "Op\u00e9rateurs": [[69, "operateurs"], [157, "Op\u00e9rateurs"], [221, "operateurs"]], "Copie d\u2019instances": [[69, "copie-d-instances"], [221, "copie-d-instances"]], "H\u00e9ritage": [[69, "heritage"], [221, "heritage"]], "D\u00e9corateur": [[69, "decorateur"]], "Fichiers": [[69, "fichiers"], [203, "Fichiers"], [233, "fichiers"], [237, "fichiers"]], "Ecriture dans un fichier texte": [[69, "ecriture-dans-un-fichier-texte"]], "Lecture dans un fichier texte": [[69, "lecture-dans-un-fichier-texte"]], "Modules": [[69, "modules"], [203, "Modules"]], "Exceptions": [[69, "exceptions"], [224, "exceptions"], [226, "exceptions"]], "Erreurs, confusions fr\u00e9quentes": [[69, "erreurs-confusions-frequentes"]], "Variables": [[69, "variables"], [236, "variables"]], "Cha\u00eene de caract\u00e8res = tableau de caract\u00e8res": [[69, "chaine-de-caracteres-tableau-de-caracteres"]], "Guillemets ou pas": [[69, "guillemets-ou-pas"]], "Boucles": [[69, "boucles"], [235, "boucles"]], "range ou pas range": [[69, "range-ou-pas-range"]], "Initialisation": [[69, "initialisation"]], "Diff\u00e9rence entre print et return": [[69, "difference-entre-print-et-return"]], "Trois conseils pour \u00e9crire un programme": [[69, "trois-conseils-pour-ecrire-un-programme"]], "Utiliser des tests unitaires": [[69, "utiliser-des-tests-unitaires"]], "Partager du code": [[69, "partager-du-code"]], "Moteurs de recherche": [[69, "moteurs-de-recherche"]], "Syntaxes et d\u00e9finitions": [[70, "syntaxes-et-definitions"]], "D\u00e9finitions": [[70, "definitions"]], "D\u00e9finition D1 : classe": [[70, "index-mathdef-0-6"], [221, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : point d\u2019entr\u00e9e du programme": [[70, "index-mathdef-0-7"], [239, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : test": [[70, "index-mathdef-0-8"], [235, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : variable": [[70, "index-mathdef-0-9"], [236, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D10 : frozenset": [[70, "index-mathdef-0-10"], [236, "indexmathe-D\u00e9finition9"]], "D\u00e9finition D2 : constante": [[70, "index-mathdef-0-11"], [236, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : fonction": [[70, "index-mathdef-0-12"], [235, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : instantiaion": [[70, "index-mathdef-0-13"], [221, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D3 : fonction r\u00e9cursive": [[70, "index-mathdef-0-14"], [235, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : m\u00e9thode": [[70, "index-mathdef-0-15"], [221, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : type immuable (ou immutable)": [[70, "index-mathdef-0-16"], [236, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D4 : attribut": [[70, "index-mathdef-0-17"], [221, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : cha\u00eene de caract\u00e8res": [[70, "index-mathdef-0-18"], [236, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : port\u00e9e d\u2019un variable": [[70, "index-mathdef-0-19"], [235, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D5 : m\u00e9thode statique": [[70, "index-mathdef-0-20"], [221, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : tuple": [[70, "index-mathdef-0-21"], [236, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : variable locale": [[70, "index-mathdef-0-22"], [235, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D6 : attribut statique": [[70, "index-mathdef-0-23"], [221, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : type modifiable (ou mutable)": [[70, "index-mathdef-0-24"], [236, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : variable globale": [[70, "index-mathdef-0-25"], [235, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D7 : h\u00e9ritage": [[70, "index-mathdef-0-26"], [221, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D7 : liste": [[70, "index-mathdef-0-27"], [236, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D8 : dictionnaire": [[70, "index-mathdef-0-28"], [236, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D8 : surcharge": [[70, "index-mathdef-0-29"], [221, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D9 : set": [[70, "index-mathdef-0-30"], [236, "indexmathe-D\u00e9finition8"]], "Figures": [[70, "figures"]], "Probl\u00e8mes": [[70, "problemes"], [76, "problemes"], [76, null]], "Syntaxe": [[70, "syntaxe"], [221, "syntaxe"], [244, "syntaxe"]], "Syntaxe S1 : Attraper une exception": [[70, "index-mathdef-3-48"], [224, "indexmathe-Syntaxe0"]], "Syntaxe S1 : D\u00e9claration d\u2019une classe": [[70, "index-mathdef-3-49"], [221, "indexmathe-Syntaxe0"]], "Syntaxe S1 : Tests": [[70, "index-mathdef-3-50"], [235, "indexmathe-Syntaxe0"]], "Syntaxe S1 : importer un module (1)": [[70, "index-mathdef-3-51"], [239, "indexmathe-Syntaxe0"]], "Syntaxe S10 : D\u00e9claration d\u2019un attribut statique": [[70, "index-mathdef-3-52"], [221, "indexmathe-Syntaxe9"]], "Syntaxe S11 : D\u00e9claration d\u2019une propri\u00e9t\u00e9": [[70, "index-mathdef-3-53"], [221, "indexmathe-Syntaxe10"]], "Syntaxe S12 : D\u00e9claration d\u2019une propri\u00e9t\u00e9 (2)": [[70, "index-mathdef-3-54"], [221, "indexmathe-Syntaxe11"]], "Syntaxe S13 : D\u00e9claration de l\u2019op\u00e9rateur __copy__": [[70, "index-mathdef-3-55"], [221, "indexmathe-Syntaxe12"]], "Syntaxe S14 : D\u00e9claration d\u2019attributs fig\u00e9s": [[70, "index-mathdef-3-56"], [221, "indexmathe-Syntaxe13"]], "Syntaxe S15 : H\u00e9ritage": [[70, "index-mathdef-3-57"], [221, "indexmathe-Syntaxe14"]], "Syntaxe S16 : Surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[70, "index-mathdef-3-58"], [221, "indexmathe-Syntaxe15"]], "Syntaxe S2 : Instanciation d\u2019une classe": [[70, "index-mathdef-3-59"], [221, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Instruction pass": [[70, "index-mathdef-3-60"], [235, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Lever une exception": [[70, "index-mathdef-3-61"], [224, "indexmathe-Syntaxe1"]], "Syntaxe S2 : importer un module (2)": [[70, "index-mathdef-3-62"], [239, "indexmathe-Syntaxe1"]], "Syntaxe S3 : Boucle while": [[70, "index-mathdef-3-63"], [235, "indexmathe-Syntaxe2"]], "Syntaxe S3 : D\u00e9claration d\u2019une m\u00e9thode": [[70, "index-mathdef-3-64"], [221, "indexmathe-Syntaxe2"]], "Syntaxe S3 : importer un module (3)": [[70, "index-mathdef-3-65"], [239, "indexmathe-Syntaxe2"]], "Syntaxe S4 : Appel d\u2019une m\u00e9thode": [[70, "index-mathdef-3-66"], [221, "indexmathe-Syntaxe3"]], "Syntaxe S4 : Boucle for": [[70, "index-mathdef-3-67"], [235, "indexmathe-Syntaxe3"]], "Syntaxe S5 : D\u00e9claration d\u2019un attribut": [[70, "index-mathdef-3-68"], [221, "indexmathe-Syntaxe4"]], "Syntaxe S5 : Liste en extension": [[70, "index-mathdef-3-69"], [235, "indexmathe-Syntaxe4"]], "Syntaxe S6 : D\u00e9claration d\u2019un constructeur": [[70, "index-mathdef-3-70"], [221, "indexmathe-Syntaxe5"]], "Syntaxe S6 : D\u00e9claration d\u2019une fonction": [[70, "index-mathdef-3-71"], [235, "indexmathe-Syntaxe5"]], "Syntaxe S7 : Appel d\u2019un constructeur": [[70, "index-mathdef-3-72"], [221, "indexmathe-Syntaxe6"]], "Syntaxe S7 : Appel d\u2019une fonction": [[70, "index-mathdef-3-73"], [235, "indexmathe-Syntaxe6"]], "Syntaxe S8 : D\u00e9claration de l\u2019op\u00e9rateur __str__": [[70, "index-mathdef-3-74"], [221, "indexmathe-Syntaxe7"]], "Syntaxe S8 : Valeurs par d\u00e9faut": [[70, "index-mathdef-3-75"], [235, "indexmathe-Syntaxe7"]], "Syntaxe S9 : D\u00e9claration d\u2019une m\u00e9thode statique": [[70, "index-mathdef-3-76"], [221, "indexmathe-Syntaxe8"]], "Syntaxe S9 : Nombre ind\u00e9fini de param\u00e8tres": [[70, "index-mathdef-3-77"], [235, "indexmathe-Syntaxe8"]], "Tables": [[70, "tables"]], "Langage Python": [[71, "langage-python"]], "geo": [[71, "geo"]], "En diagonal": [[72, "en-diagonal"]], "Compl\u00e9ments": [[72, null], [73, null]], "Apprendre la programmation avec Python": [[73, "apprendre-la-programmation-avec-python"]], "Lectures": [[73, null]], "Older versions": [[73, "older-versions"]], "Introduction": [[74, "introduction"], [77, "Introduction"], [229, "introduction"]], "Installation de Python": [[74, "installation-de-python"]], "Installation d\u2019extensions ou modules ou packages": [[74, "installation-d-extensions-ou-modules-ou-packages"]], "Accents": [[74, "accents"]], "Trois concepts, s\u00e9quence, test, boucle": [[74, "trois-concepts-sequence-test-boucle"]], "Algorithmes": [[74, "algorithmes"], [76, "algorithmes"], [76, null], [76, null], [125, "algorithmes"]], "Fichier ou notebook": [[74, "fichier-ou-notebook"]], "Tous les notebooks": [[76, "tous-les-notebooks"]], "Python": [[76, "python"], [76, null], [76, null], [169, "Python"]], "Enonc\u00e9 - Correction": [[76, "enonce-correction"]], "Data": [[76, "data"], [76, null]], "Correction d\u2019examens": [[76, "correction-d-examens"]], "Examens": [[76, null]], "machine learning": [[76, null]], "Algorithmes de streaming, BJKST": [[77, "Algorithmes-de-streaming,-BJKST"]], "Estimer le nombre d\u2019\u00e9l\u00e9ments distincts: l\u2019algorithme BJKST": [[77, "Estimer-le-nombre-d'\u00e9l\u00e9ments-distincts:-l'algorithme-BJKST"]], "Universal hashing": [[77, "Universal-hashing"]], "Collisions": [[77, "Collisions"]], "Algorithme BJKST": [[77, "Algorithme-BJKST"]], "R\u00e9sultats num\u00e9riques": [[77, "R\u00e9sultats-num\u00e9riques"]], "Temps de calcul en fonction de la taille du stream": [[77, "Temps-de-calcul-en-fonction-de-la-taille-du-stream"]], "Un peu plus sur la pr\u00e9cision de l\u2019estimateur": [[77, "Un-peu-plus-sur-la-pr\u00e9cision-de-l'estimateur"]], "h_1 et h_2 \u00e9gales \u00e0 l\u2019identit\u00e9": [[77, "h_1-et-h_2-\u00e9gales-\u00e0-l'identit\u00e9"]], "cas o\u00f9 la taille du hash est petite": [[77, "cas-o\u00f9-la-taille-du-hash-est-petite"]], "cas o\u00f9 la taille de hash est plus grande": [[77, "cas-o\u00f9-la-taille-de-hash-est-plus-grande"]], "la taille de hash d\u00e9pend de la pr\u00e9cision \\epsilon": [[77, "la-taille-de-hash-d\u00e9pend-de-la-pr\u00e9cision-\\epsilon"]], "Graphe et Composantes connexes": [[78, "Graphe-et-Composantes-connexes"]], "Q1 : construire une matrice d\u2019adjacence sym\u00e9trique al\u00e9atoire": [[78, "Q1-:-construire-une-matrice-d'adjacence-sym\u00e9trique-al\u00e9atoire"], [78, "id1"]], "Q2 : calculer les valeurs propres et les trier par ordre croissant": [[78, "Q2-:-calculer-les-valeurs-propres-et-les-trier-par-ordre-croissant"], [78, "id2"]], "Q3 : que fait l\u2019algorithme suivant": [[78, "Q3-:-que-fait-l'algorithme-suivant"], [78, "id3"]], "Q4 : construire un algorithme qui retourne les composantes connexes d\u2019un graphe": [[78, "Q4-:-construire-un-algorithme-qui-retourne-les-composantes-connexes-d'un-graphe"], [78, "id4"]], "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.": [[79, "Calculer-le-nombre-de-fa\u00e7ons-de-monter-une-\u00e9chelle."]], "Enonc\u00e9s": [[79, "Enonc\u00e9s"], [94, "Enonc\u00e9s"], [97, "enonces"], [125, null], [129, null]], "Enonc\u00e9 1": [[79, "Enonc\u00e9-1"], [100, "Enonc\u00e9-1"], [101, "Enonc\u00e9-1"], [102, "Enonc\u00e9-1"], [103, "Enonc\u00e9-1"], [104, "Enonc\u00e9-1"], [105, "Enonc\u00e9-1"]], "Enonc\u00e9 2": [[79, "Enonc\u00e9-2"], [100, "Enonc\u00e9-2"], [101, "Enonc\u00e9-2"], [102, "Enonc\u00e9-2"], [104, "Enonc\u00e9-2"], [105, "Enonc\u00e9-2"]], "Enonc\u00e9 3": [[79, "Enonc\u00e9-3"], [102, "Enonc\u00e9-3"]], "Solutions": [[79, "Solutions"], [94, "Solutions"]], "Solution au probl\u00e8me 1": [[79, "Solution-au-probl\u00e8me-1"], [94, "Solution-au-probl\u00e8me-1"]], "Solution au probl\u00e8me 2": [[79, "Solution-au-probl\u00e8me-2"]], "Solution au probl\u00e8me 3": [[79, "Solution-au-probl\u00e8me-3"]], "Distance d\u2019\u00e9dition": [[80, "Distance-d'\u00e9dition"], [81, "Distance-d'\u00e9dition"]], "Q1 : Distance simple entre deux mots de m\u00eame longueur": [[80, "Q1-:-Distance-simple-entre-deux-mots-de-m\u00eame-longueur"], [80, "id1"]], "Q2 : Distance simple entre deux mots de longueur diff\u00e9rente": [[80, "Q2-:-Distance-simple-entre-deux-mots-de-longueur-diff\u00e9rente"], [80, "id2"]], "Q3 : Distance alambiqu\u00e9e\u2026": [[80, "Q3-:-Distance-alambiqu\u00e9e..."], [80, "id3"]], "Q4 : impl\u00e9menter l\u2019algorithme de la page wikipedia": [[80, "Q4-:-impl\u00e9menter-l'algorithme-de-la-page-wikipedia"], [80, "id4"]], "Distance entre deux mots de m\u00eame longueur et tests unitaires": [[81, "Distance-entre-deux-mots-de-m\u00eame-longueur-et-tests-unitaires"]], "Distance na\u00efve": [[81, "Distance-na\u00efve"]], "Distance tr\u00e8s na\u00efve": [[81, "Distance-tr\u00e8s-na\u00efve"]], "Distance entre deux mots de longueur diff\u00e9rente mais pas si diff\u00e9rente": [[81, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente-mais-pas-si-diff\u00e9rente"]], "Distance entre deux mots de longueur diff\u00e9rente": [[81, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente"]], "Test unitaires": [[81, "Test-unitaires"]], "m et n sont tr\u00e8s proches, et alors ?": [[81, "m-et-n-sont-tr\u00e8s-proches,-et-alors-?"]], "ff, f, ph, f\u2026 plus personne ne sait \u00e9crire": [[81, "ff,-f,-ph,-f...-plus-personne-ne-sait-\u00e9crire"]], "Probl\u00e8me d\u2019ordonnancement": [[82, "Probl\u00e8me-d'ordonnancement"]], "Q1 : \u00e9crire un algorithme qui d\u00e9termine dans quel ordre on peut ex\u00e9cuter les t\u00e2ches.": [[82, "Q1-:-\u00e9crire-un-algorithme-qui-d\u00e9termine-dans-quel-ordre-on-peut-ex\u00e9cuter-les-t\u00e2ches."]], "Q2 : Et si les t\u00e2ches n\u2019ont plus la m\u00eame dur\u00e9e ?": [[82, "Q2-:-Et-si-les-t\u00e2ches-n'ont-plus-la-m\u00eame-dur\u00e9e-?"]], "La sous-s\u00e9quence de plus grande somme": [[83, "La-sous-s\u00e9quence-de-plus-grande-somme"]], "Solution na\u00efve": [[83, "Solution-na\u00efve"], [189, "Solution-na\u00efve"]], "Solution plus rapide": [[83, "Solution-plus-rapide"]], "Solution dichotomique": [[83, "Solution-dichotomique"]], "Solution lin\u00e9aire": [[83, "Solution-lin\u00e9aire"]], "Comparaison des temps de calcul": [[83, "Comparaison-des-temps-de-calcul"]], "Application": [[83, "Application"]], "Graphes al\u00e9atoires": [[84, "Graphes-al\u00e9atoires"]], "Graphe al\u00e9atoire - matrice d\u2019adjacence al\u00e9atoire": [[84, "Graphe-al\u00e9atoire---matrice-d'adjacence-al\u00e9atoire"]], "Vocabulaire li\u00e9 aux graphes": [[84, "Vocabulaire-li\u00e9-aux-graphes"]], "Apart\u00e9 : matrice d\u2019adjacence \u00e0 la puissance n": [[84, "Apart\u00e9-:-matrice-d'adjacence-\u00e0-la-puissance-n"]], "Trouver le nombre de composantes connexes": [[84, "Trouver-le-nombre-de-composantes-connexes"]], "G\u00e9n\u00e9ration d\u2019un graphe al\u00e9atoire": [[84, "G\u00e9n\u00e9ration-d'un-graphe-al\u00e9atoire"]], "Version 1": [[84, "Version-1"]], "Version 2": [[84, "Version-2"]], "Simulation COVID": [[85, "Simulation-COVID"]], "Mod\u00e8le SIRD": [[85, "Mod\u00e8le-SIRD"]], "Q0 : une petite fonction pour dessiner": [[85, "Q0-:-une-petite-fonction-pour-dessiner"]], "Q1 : \u00e9crire une fonction qui calcule la propagation": [[85, "Q1-:-\u00e9crire-une-fonction-qui-calcule-la-propagation"]], "Q2 : on veut estimer les param\u00e8tres du mod\u00e8le, une fonction d\u2019erreur ?": [[85, "Q2-:-on-veut-estimer-les-param\u00e8tres-du-mod\u00e8le,-une-fonction-d'erreur-?"]], "Q3 : optimisation": [[85, "Q3-:-optimisation"]], "Q4 : dessiner les r\u00e9sultats": [[85, "Q4-:-dessiner-les-r\u00e9sultats"]], "Q5 : v\u00e9rifier que cela marche sur des donn\u00e9es synth\u00e9tiques": [[85, "Q5-:-v\u00e9rifier-que-cela-marche-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Q6 : sur des donn\u00e9es r\u00e9elles": [[85, "Q6-:-sur-des-donn\u00e9es-r\u00e9elles"], [85, "id1"]], "Q1 : propagation": [[85, "Q1-:-propagation"]], "Q2 : s\u00e9rie cumul\u00e9es et fonction erreur": [[85, "Q2-:-s\u00e9rie-cumul\u00e9es-et-fonction-erreur"]], "Q3, Q4, Q5 : optimisation sur des donn\u00e9es synth\u00e9tiques": [[85, "Q3,-Q4,-Q5-:-optimisation-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)": [[86, "Mod\u00e8le-\u00e9pid\u00e9miologique-(SIRD)"]], "Simulation": [[86, "Simulation"], [125, null]], "Visualisation": [[86, "Visualisation"], [92, "Visualisation"]], "Estimation des param\u00e8tres": [[86, "Estimation-des-param\u00e8tres"]], "Premi\u00e8re id\u00e9e": [[86, "Premi\u00e8re-id\u00e9e"], [192, "Premi\u00e8re-id\u00e9e"]], "Seconde id\u00e9e : probl\u00e8mes d\u2019optimisation": [[86, "Seconde-id\u00e9e-:-probl\u00e8mes-d'optimisation"]], "Jeux de dictionnaires, plus grand suffixe commun": [[87, "Jeux-de-dictionnaires,-plus-grand-suffixe-commun"]], "Exercice 1 : trouver les deux mots qui partagent le plus grand suffixe en commun": [[87, "Exercice-1-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun"], [87, "id1"]], "Exercice 2 : constuire un dictionnaire qui associe \u00e0 chaque lettre tous les mots se terminant par celle-ci": [[87, "Exercice-2-:-constuire-un-dictionnaire-qui-associe-\u00e0-chaque-lettre-tous-les-mots-se-terminant-par-celle-ci"], [87, "id2"]], "Exercice 3 : trouver les deux mots qui partagent le plus grand suffixe en commun en utilisant le dictionnaire pr\u00e9c\u00e9dent": [[87, "Exercice-3-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun-en-utilisant-le-dictionnaire-pr\u00e9c\u00e9dent"], [87, "id3"]], "Exercice 4 : mesurer le temps pris par chaque fonction": [[87, "Exercice-4-:-mesurer-le-temps-pris-par-chaque-fonction"], [87, "id4"]], "Exercice 5 : expliquer pourquoi telle m\u00e9thode est plus rapide.": [[87, "Exercice-5-:-expliquer-pourquoi-telle-m\u00e9thode-est-plus-rapide."], [87, "id5"]], "Exercice 6 : pousser l\u2019id\u00e9e plus loin et construire un trie": [[87, "Exercice-6-:-pousser-l'id\u00e9e-plus-loin-et-construire-un-trie"], [87, "id6"]], "Les k premiers \u00e9l\u00e9ments (top k)": [[88, "Les-k-premiers-\u00e9l\u00e9ments-(top-k)"]], "Exercice 1 : on trie tout et on prend les k plus petit": [[88, "Exercice-1-:-on-trie-tout-et-on-prend-les-k-plus-petit"], [88, "id1"]], "Exercice 2 : version plus rapide au choix": [[88, "Exercice-2-:-version-plus-rapide-au-choix"], [88, "id2"]], "Exercice 3 : algorithme de s\u00e9lection": [[88, "Exercice-3-:-algorithme-de-s\u00e9lection"], [88, "id3"]], "Exercice 4 : utiliser la fonction perf_counter pour comparer les vitessses de chaque solution": [[88, "Exercice-4-:-utiliser-la-fonction-perf_counter-pour-comparer-les-vitessses-de-chaque-solution"], [88, "id4"]], "TSP - Traveling Salesman Problem": [[89, "TSP---Traveling-Salesman-Problem"]], "Q1 : choisir une permutation al\u00e9atoire des villes et calculer la distance du chemin qui les relie dans cet ordre": [[89, "Q1-:-choisir-une-permutation-al\u00e9atoire-des-villes-et-calculer-la-distance-du-chemin-qui-les-relie-dans-cet-ordre"]], "Q2 : tirer deux villes al\u00e9atoirement, les inverser, garder la permutation si elle am\u00e9liore la distance": [[89, "Q2-:-tirer-deux-villes-al\u00e9atoirement,-les-inverser,-garder-la-permutation-si-elle-am\u00e9liore-la-distance"]], "Q3 : choisir deux villes al\u00e9atoirement, permuter une des deux moiti\u00e9s\u2026": [[89, "Q3-:-choisir-deux-villes-al\u00e9atoirement,-permuter-une-des-deux-moiti\u00e9s..."]], "Q4 : tester toutes les permutations possibles\u2026 je plaisante\u2026": [[89, "Q4-:-tester-toutes-les-permutations-possibles...-je-plaisante..."]], "Calculer x**n le plus rapidement possible": [[90, "Calculer-x**n-le-plus-rapidement-possible"]], "Solution": [[90, "Solution"]], "Produit matriciel avec une matrice creuse": [[91, "Produit-matriciel-avec-une-matrice-creuse"]], "Matrice creuse et dictionnaire": [[91, "Matrice-creuse-et-dictionnaire"]], "Calcul de la dimension": [[91, "Calcul-de-la-dimension"]], "Produit matriciel classique": [[91, "Produit-matriciel-classique"]], "Produit matriciel plus \u00e9l\u00e9gant": [[91, "Produit-matriciel-plus-\u00e9l\u00e9gant"]], "Mesure du temps": [[91, "Mesure-du-temps"], [200, "Mesure-du-temps"]], "Dictionnaires de dictionnaires": [[91, "Dictionnaires-de-dictionnaires"]], "Apart\u00e9 sur le voyageur de commerce": [[92, "Apart\u00e9-sur-le-voyageur-de-commerce"]], "Tirer des points al\u00e9atoirement et les afficher": [[92, "Tirer-des-points-al\u00e9atoirement-et-les-afficher"]], "Distance d\u2019un chemin": [[92, "Distance-d'un-chemin"]], "Parcourir toutes les permutations": [[92, "Parcourir-toutes-les-permutations"]], "Module tqdm": [[92, "Module-tqdm"]], "Retournement": [[92, "Retournement"]], "Plus court chemin passant par tous les noeuds d\u2019un graphe": [[93, "Plus-court-chemin-passant-par-tous-les-noeuds-d'un-graphe"]], "Distance": [[93, "Distance"]], "Id\u00e9e d\u2019algorithme": [[93, "Id\u00e9e-d'algorithme"]], "D\u00e9coder du Morse sans espaces": [[94, "D\u00e9coder-du-Morse-sans-espaces"]], "Exercice 1 : Traduire un texte Morse qui ne contient pas d\u2019espace": [[94, "Exercice-1-:-Traduire-un-texte-Morse-qui-ne-contient-pas-d'espace"]], "Exercice 2 : calculer l\u2019alphabet qui minimise une transcription": [[94, "Exercice-2-:-calculer-l'alphabet-qui-minimise-une-transcription"]], "Solution au probl\u00e8me 2 avec des expressions r\u00e9guli\u00e8res": [[94, "Solution-au-probl\u00e8me-2-avec-des-expressions-r\u00e9guli\u00e8res"]], "Solution au probl\u00e8me 2 : toutes les interpr\u00e9tations": [[94, "Solution-au-probl\u00e8me-2-:-toutes-les-interpr\u00e9tations"]], "Parcourir les rues de Paris": [[95, "Parcourir-les-rues-de-Paris"]], "Une premi\u00e8re solution au premier probl\u00e8me": [[95, "Une-premi\u00e8re-solution-au-premier-probl\u00e8me"]], "Etape 1 : la matrice Bellman": [[95, "Etape-1-:-la-matrice-Bellman"]], "Kruskall": [[95, "Kruskall"]], "Chemin Eul\u00e9rien": [[95, "Chemin-Eul\u00e9rien"]], "Algorithme optimal": [[95, "Algorithme-optimal"]], "Variantes": [[95, "Variantes"]], "Sens interdit et gaphe orient\u00e9": [[95, "Sens-interdit-et-gaphe-orient\u00e9"]], "Windy postman problem": [[95, "Windy-postman-problem"]], "Casser le code de Vigen\u00e8re": [[96, "Casser-le-code-de-Vigen\u00e8re"]], "Exercices minut\u00e9s": [[97, "exercices-minutes"]], "S\u00e9ances not\u00e9es": [[97, "seances-notees"]], "Corrections": [[97, "corrections"]], "Exercices courts": [[97, "exercices-courts"]], "S\u00e9ance not\u00e9es machaine learning": [[97, "seance-notees-machaine-learning"]], "Evaluation Python / Machine Learning ann\u00e9e 2017 - \u00e9nonc\u00e9": [[98, "Evaluation-Python-/-Machine-Learning-ann\u00e9e-2017---\u00e9nonc\u00e9"]], "1": [[98, "1"], [99, "1"]], "2": [[98, "2"], [99, "2"]], "3": [[98, "3"], [99, "3"]], "4": [[98, "4"], [99, "4"]], "5": [[98, "5"], [99, "5"]], "6": [[98, "6"], [99, "6"]], "7": [[98, "7"], [99, "7"]], "8": [[98, "8"], [99, "8"]], "9": [[98, "9"], [99, "9"]], "10": [[98, "10"], [99, "10"]], "Evaluation Python / Machine Learning ann\u00e9e 2017 - solution": [[99, "Evaluation-Python-/-Machine-Learning-ann\u00e9e-2017---solution"]], "8 - r\u00e9ponse plus courte": [[99, "8---r\u00e9ponse-plus-courte"]], "Traitement sp\u00e9cifique de la variable cat\u00e9gorielle weekday": [[99, "Traitement-sp\u00e9cifique-de-la-variable-cat\u00e9gorielle-weekday"]], "Une variable cat\u00e9gorielle en une seule colonne ?": [[99, "Une-variable-cat\u00e9gorielle-en-une-seule-colonne-?"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014": [[100, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014": [[101, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-10-octobre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014": [[102, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"], [103, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"]], "Q5": [[102, "Q5"], [102, "id5"], [102, "id10"], [103, "Q5"], [107, "Q5"], [110, "Q5"], [111, "Q5"], [111, "id2"], [112, "Q5"], [183, "Q5"], [184, "Q5"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015": [[104, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2015"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015": [[105, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-6-novembre-2015"]], "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)": [[106, "1A.e---TD-not\u00e9,-27-novembre-2012-(\u00e9l\u00e9ments-de-code-pour-le-coloriage)"]], "construction de la spirale": [[106, "construction-de-la-spirale"], [107, "construction-de-la-spirale"]], "dessin de la spirale": [[106, "dessin-de-la-spirale"], [107, "dessin-de-la-spirale"]], "ajouter du rouge": [[106, "ajouter-du-rouge"]], "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)": [[107, "1A.e---TD-not\u00e9,-27-novembre-2012-(coloriage,-correction)"]], "version 1": [[107, "version-1"], [107, "id1"]], "version 4": [[107, "version-4"], [107, "id2"]], "Q4 : spirale": [[107, "Q4-:-spirale"]], "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014": [[108, "1A.e---TD-not\u00e9,-5-d\u00e9cembre-2014"]], "Exercice 1": [[108, "Exercice-1"], [111, "Exercice-1"], [112, "Exercice-1"], [187, "Exercice-1"], [188, "Exercice-1"], [197, "Exercice-1"], [198, "Exercice-1"], [211, "Exercice-1"], [212, "Exercice-1"]], "Exercice 2": [[108, "Exercice-2"], [111, "Exercice-2"], [119, "Exercice-2"], [187, "Exercice-2"], [188, "Exercice-2"], [198, "Exercice-2"], [211, "Exercice-2"], [212, "Exercice-2"]], "Exercice 3": [[108, "Exercice-3"], [187, "Exercice-3"], [188, "Exercice-3"], [211, "Exercice-3"]], "Exercice 4": [[108, "Exercice-4"], [187, "Exercice-4"], [188, "Exercice-4"], [211, "Exercice-4"], [212, "Exercice-4"]], "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)": [[109, "1A.e---TD-not\u00e9-2015-rattrapage-(\u00e9nonc\u00e9,-\u00e9crit-et-oral)"]], "Question 1": [[109, "Question-1"]], "Question 2": [[109, "Question-2"]], "Question 3": [[109, "Question-3"]], "Question 4": [[109, "Question-4"]], "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015": [[110, "1A.e---TD-not\u00e9,-11-d\u00e9cembre-2015"]], "Exercice 1 : Louer ou acheter un appartement ?": [[110, "Exercice-1-:-Louer-ou-acheter-un-appartement-?"]], "Q6": [[110, "Q6"], [111, "Q6"], [111, "id3"], [112, "Q6"], [179, "Q6"], [180, "Q6"], [183, "Q6"], [184, "Q6"]], "Q7 exo 1": [[110, "Q7-exo-1"]], "Q7 exo 2": [[110, "Q7-exo-2"]], "Q8": [[110, "Q8"], [111, "Q8"], [111, "id5"], [112, "Q8"], [179, "Q8"], [180, "Q8"]], "Q9 version dichotomique de Q4": [[110, "Q9-version-dichotomique-de-Q4"]], "Exercice 2 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[110, "Exercice-2-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "Exercice 3 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[110, "Exercice-3-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016": [[111, "1A.e---TD-not\u00e9,-16-d\u00e9cembre-2016"]], "Q7": [[111, "Q7"], [111, "id4"], [112, "Q7"], [162, "Q7"], [179, "Q7"], [180, "Q7"], [183, "Q7"], [184, "Q7"]], "Q9": [[111, "Q9"], [111, "id6"], [112, "Q9"], [179, "Q9"], [180, "Q9"]], "Q10": [[111, "Q10"], [111, "id7"], [112, "Q10"], [116, "Q10"], [179, "Q10"], [180, "Q10"]], "Q1 - Q2 - Q3": [[111, "Q1---Q2---Q3"]], "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017": [[112, "1A.e---TD-not\u00e9,-21-f\u00e9vrier-2017"]], "Quelques explications et d\u00e9monstrations": [[112, "Quelques-explications-et-d\u00e9monstrations"]], "Quelques commentaires sur le code": [[112, "Quelques-commentaires-sur-le-code"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)": [[113, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(1)"]], "Q1 - \u00e9chantillon al\u00e9atoire": [[113, "Q1---\u00e9chantillon-al\u00e9atoire"], [114, "Q1---\u00e9chantillon-al\u00e9atoire"], [115, "Q1---\u00e9chantillon-al\u00e9atoire"], [116, "Q1---\u00e9chantillon-al\u00e9atoire"]], "Q1 - dessiner le nuage de points - donn\u00e9e": [[113, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"], [114, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"]], "Q2 - tri": [[113, "Q2---tri"], [114, "Q2---tri"]], "Q3 - moyenne": [[113, "Q3---moyenne"], [114, "Q3---moyenne"], [115, "Q3---moyenne"], [116, "Q3---moyenne"]], "Q4 - distance": [[113, "Q4---distance"], [114, "Q4---distance"]], "Q5 - fonction comme param\u00e8tre": [[113, "Q5---fonction-comme-param\u00e8tre"], [114, "Q5---fonction-comme-param\u00e8tre"]], "Q6 - optimiser": [[113, "Q6---optimiser"], [114, "Q6---optimiser"]], "Q7 - optimisation encore": [[113, "Q7---optimisation-encore"], [114, "Q7---optimisation-encore"]], "Q8 - fonction r\u00e9cursive": [[113, "Q8---fonction-r\u00e9cursive"], [114, "Q8---fonction-r\u00e9cursive"]], "Q9 - co\u00fbt": [[113, "Q9---co\u00fbt"]], "Q10 - autre nuage de points": [[113, "Q10---autre-nuage-de-points"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)": [[114, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(2)"]], "Q9 - seuil": [[114, "Q9---seuil"]], "Q10 - co\u00fbt": [[114, "Q10---co\u00fbt"]], "1A.e - Enonc\u00e9 23 octobre 2018 (1)": [[115, "1A.e---Enonc\u00e9-23-octobre-2018-(1)"]], "Q2 - matrice m1": [[115, "Q2---matrice-m1"], [116, "Q2---matrice-m1"]], "Q4 - matrice m2": [[115, "Q4---matrice-m2"], [116, "Q4---matrice-m2"]], "Q5 - matrice m3": [[115, "Q5---matrice-m3"]], "Q6 - norme": [[115, "Q6---norme"]], "Q7 - r\u00e9p\u00e9tition": [[115, "Q7---r\u00e9p\u00e9tition"]], "Q8 - plus de valeurs manquantes": [[115, "Q8---plus-de-valeurs-manquantes"]], "Q9 - 1 valeur manquante ?": [[115, "Q9---1-valeur-manquante-?"]], "Q10 - plus de deux colonnes ?": [[115, "Q10---plus-de-deux-colonnes-?"]], "1A.e - Enonc\u00e9 23 octobre 2018 (2)": [[116, "1A.e---Enonc\u00e9-23-octobre-2018-(2)"]], "Q5 - x le plus proche": [[116, "Q5---x-le-plus-proche"]], "Q6 - matrice m3": [[116, "Q6---matrice-m3"]], "Q7 - norme": [[116, "Q7---norme"]], "Q8 - r\u00e9p\u00e9tition": [[116, "Q8---r\u00e9p\u00e9tition"]], "Q9 - plus de valeurs manquantes": [[116, "Q9---plus-de-valeurs-manquantes"]], "1A.e - Enonc\u00e9 22 octobre 2019 (1)": [[117, "1A.e---Enonc\u00e9-22-octobre-2019-(1)"]], "Q1 - distance_table": [[117, "Q1---distance_table"], [118, "Q1---distance_table"]], "Q2 - distance_bord": [[117, "Q2---distance_bord"], [118, "Q2---distance_bord"]], "Q3 - table_alea": [[117, "Q3---table_alea"], [118, "Q3---table_alea"]], "Q4 - n_table_alea": [[117, "Q4---n_table_alea"], [118, "Q4---n_table_alea"]], "Q5 - table_proches": [[117, "Q5---table_proches"], [118, "Q5---table_proches"]], "Q6 - distance_n_tables_alea": [[117, "Q6---distance_n_tables_alea"], [118, "Q6---distance_n_tables_alea"]], "Q7 - meilleur_table_alea": [[117, "Q7---meilleur_table_alea"], [118, "Q7---meilleur_table_alea"]], "Q8 - r\u00e9sultat num\u00e9rique": [[117, "Q8---r\u00e9sultat-num\u00e9rique"], [118, "Q8---r\u00e9sultat-num\u00e9rique"]], "Q9 - plot_tables": [[117, "Q9---plot_tables"], [118, "Q9---plot_tables"]], "Q10 \u2026": [[117, "Q10-..."], [118, "Q10-..."]], "Q10 - Vorono\u00ef": [[117, "Q10---Vorono\u00ef"], [118, "Q10---Vorono\u00ef"]], "Q10 - KMeans": [[117, "Q10---KMeans"], [118, "Q10---KMeans"]], "1A.e - Enonc\u00e9 22 octobre 2019 (2)": [[118, "1A.e---Enonc\u00e9-22-octobre-2019-(2)"]], "1A - Enonc\u00e9 24 novembre 2020": [[119, "1A---Enonc\u00e9-24-novembre-2020"]], "Exercice 1 : gu\u00e9rison": [[119, "Exercice-1-:-gu\u00e9rison"]], "Q2 : dur\u00e9e de gu\u00e9rison": [[119, "Q2-:-dur\u00e9e-de-gu\u00e9rison"]], "Q3 : estimateur Kaplan-Meier (1)": [[119, "Q3-:-estimateur-Kaplan-Meier-(1)"]], "Q4 : courbe de Kaplan-Meier": [[119, "Q4-:-courbe-de-Kaplan-Meier"]], "Q5 : graphe": [[119, "Q5-:-graphe"]], "Q6 : application aux donn\u00e9es publiques": [[119, "Q6-:-application-aux-donn\u00e9es-publiques"]], "Q1 : t + 1": [[119, "Q1-:-t-+-1"]], "Q2 : apr\u00e8s T it\u00e9ration": [[119, "Q2-:-apr\u00e8s-T-it\u00e9ration"]], "Q3 : vaccin": [[119, "Q3-:-vaccin"]], "Q4 : apr\u00e8s T heures": [[119, "Q4-:-apr\u00e8s-T-heures"]], "Q5 : variation": [[119, "Q5-:-variation"]], "1A - Enonc\u00e9 3 novembre 2021": [[120, "1A---Enonc\u00e9-3-novembre-2021"]], "Exercice 1 : multiplication de matrices": [[120, "Exercice-1-:-multiplication-de-matrices"]], "Q1 : Pourquoi (m1 @ m2) @ m3 est-il plus lent que m1 @ (m2 @ m3) ? (2 points)": [[120, "Q1-:-Pourquoi-(m1-@-m2)-@-m3-est-il-plus-lent-que-m1-@-(m2-@-m3)-?-(2-points)"]], "Q2 : Ecrire une fonction qui calcule le nombre d\u2019operations dans une multiplication de deux matrices (2 points)": [[120, "Q2-:-Ecrire-une-fonction-qui-calcule-le-nombre-d'operations-dans-une-multiplication-de-deux-matrices-(2-points)"]], "Q3 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de deux matrices et la meilleure option (2 points)": [[120, "Q3-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-deux-matrices-et-la-meilleure-option-(2-points)"]], "Q4 : Ecrire une fonction qui effectue le produit de trois matrices le plus rapidement possible (2 points)": [[120, "Q4-:-Ecrire-une-fonction-qui-effectue-le-produit-de-trois-matrices-le-plus-rapidement-possible-(2-points)"]], "Q5 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps (2 points)": [[120, "Q5-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-(2-points)"]], "Q6 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de 4 matrices et la meilleure option (3 points)": [[120, "Q6-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-4-matrices-et-la-meilleure-option-(3-points)"]], "Q7 : Ecrire une fonction qui effectue le produit de 4 matrices le plus rapidement possible (3 points)": [[120, "Q7-:-Ecrire-une-fonction-qui-effectue-le-produit-de-4-matrices-le-plus-rapidement-possible-(3-points)"]], "Q8 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps et la matrice m4. (2 points)": [[120, "Q8-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-et-la-matrice-m4.-(2-points)"]], "Q9 : On se penche sur le cas \u00e0 une multiplication de N matrices, combien y a-t-il de multiplications de 2 matrices ? (2 points)": [[120, "Q9-:-On-se-penche-sur-le-cas-\u00e0-une-multiplication-de-N-matrices,-combien-y-a-t-il-de-multiplications-de-2-matrices-?-(2-points)"]], "Q10 : R\u00e9soudre l\u2019optimisation de multiplication de N matrices.": [[120, "Q10-:-R\u00e9soudre-l'optimisation-de-multiplication-de-N-matrices."]], "Remarques lors de la correction": [[120, "Remarques-lors-de-la-correction"]], "1A - Enonc\u00e9 15 novembre 2021 - rattrapage": [[121, "1A---Enonc\u00e9-15-novembre-2021---rattrapage"]], "Exercice 1 : optimisation de volume": [[121, "Exercice-1-:-optimisation-de-volume"]], "Q1 : \u00e9crire une fonction qui calcule l\u2019aire d\u2019une surface": [[121, "Q1-:-\u00e9crire-une-fonction-qui-calcule-l'aire-d'une-surface"]], "Q2 : \u00e9crire une fonction qui calcule le volume d\u2019une brique": [[121, "Q2-:-\u00e9crire-une-fonction-qui-calcule-le-volume-d'une-brique"]], "Q3 : \u00e9crire une fonction qui retourne la somme des surfaces des faces d\u2019une brique": [[121, "Q3-:-\u00e9crire-une-fonction-qui-retourne-la-somme-des-surfaces-des-faces-d'une-brique"]], "Q4 : la brique optimale": [[121, "Q4-:-la-brique-optimale"]], "Q5 : on inclut la surface n\u00e9cessaire pour coller les extremit\u00e9s": [[121, "Q5-:-on-inclut-la-surface-n\u00e9cessaire-pour-coller-les-extremit\u00e9s"]], "Q6 : une bouteille de deux litres deux fois plus large": [[121, "Q6-:-une-bouteille-de-deux-litres-deux-fois-plus-large"]], "Q7 : petite brique en bleue, grosse brique en rouge": [[121, "Q7-:-petite-brique-en-bleue,-grosse-brique-en-rouge"]], "1A - Enonc\u00e9 3 mars 2022- rattrapage": [[122, "1A---Enonc\u00e9-3-mars-2022--rattrapage"]], "Dessin d\u2019une liste de segments": [[122, "Dessin-d'une-liste-de-segments"]], "Distance d\u2019un segment": [[122, "Distance-d'un-segment"]], "Calcul du segment suivant": [[122, "Calcul-du-segment-suivant"]], "Calcul des trois segments suivants": [[122, "Calcul-des-trois-segments-suivants"]], "Construction de tous les niveaux de l\u2019arbre": [[122, "Construction-de-tous-les-niveaux-de-l'arbre"]], "Construction de trois segments al\u00e9atoires": [[122, "Construction-de-trois-segments-al\u00e9atoires"]], "Construction d\u2019un arbre al\u00e9atoire": [[122, "Construction-d'un-arbre-al\u00e9atoire"]], "1A - Enonc\u00e9 26 octobre 2022": [[123, "1A---Enonc\u00e9-26-octobre-2022"]], "Exercice 1 : calcul de distances": [[123, "Exercice-1-:-calcul-de-distances"]], "Q1 : tirer deux matrices al\u00e9atoires pour X et Y, de tailles diff\u00e9rentes": [[123, "Q1-:-tirer-deux-matrices-al\u00e9atoires-pour-X-et-Y,-de-tailles-diff\u00e9rentes"]], "Q2 : calculer tous les distances entre X et Y": [[123, "Q2-:-calculer-tous-les-distances-entre-X-et-Y"]], "Q3 : \u00e9crire un test unitaire qui v\u00e9rifie le r\u00e9sultat lorsque X est la matrice identit\u00e9 2x2": [[123, "Q3-:-\u00e9crire-un-test-unitaire-qui-v\u00e9rifie-le-r\u00e9sultat-lorsque-X-est-la-matrice-identit\u00e9-2x2"]], "Q4 : quel est le co\u00fbt de l\u2019algorithme en fonction des dimensions de X et Y ?": [[123, "Q4-:-quel-est-le-co\u00fbt-de-l'algorithme-en-fonction-des-dimensions-de-X-et-Y-?"]], "Q5 : Ecrire une fonction qui retourne l\u2019indice du m\u00e9decin le plus proche pour chaque rue": [[123, "Q5-:-Ecrire-une-fonction-qui-retourne-l'indice-du-m\u00e9decin-le-plus-proche-pour-chaque-rue"]], "Q6 : on cr\u00e9e une grille 10x10 pour quadriller l\u2019espace. Ecrire une fonction qui calcule les coordonn\u00e9es de la grille pour un point donn\u00e9.": [[123, "Q6-:-on-cr\u00e9e-une-grille-10x10-pour-quadriller-l'espace.-Ecrire-une-fonction-qui-calcule-les-coordonn\u00e9es-de-la-grille-pour-un-point-donn\u00e9."]], "Q7 : \u00e9crire une fonction qui cr\u00e9\u00e9 un dictionaire { case_grille : indices }.": [[123, "Q7-:-\u00e9crire-une-fonction-qui-cr\u00e9\u00e9-un-dictionaire-{-case_grille-:-indices-}."]], "Q8 : modifier la fonction pairwise_distance pour ne calculer que les distances des points dans la m\u00eame case": [[123, "Q8-:-modifier-la-fonction-pairwise_distance-pour-ne-calculer-que-les-distances-des-points-dans-la-m\u00eame-case"]], "Q9 : Mesurer le temps pour deux matrices 1000x2, 100x2 ?": [[123, "Q9-:-Mesurer-le-temps-pour-deux-matrices-1000x2,-100x2-?"]], "Q10 : le r\u00e9sultat est utilis\u00e9 pour retourner le m\u00e9decin le plus proche ? Avec la seconde fonction, o\u00f9 les r\u00e9sultats sont-ils faux et que faire pour corriger ?": [[123, "Q10-:-le-r\u00e9sultat-est-utilis\u00e9-pour-retourner-le-m\u00e9decin-le-plus-proche-?-Avec-la-seconde-fonction,-o\u00f9-les-r\u00e9sultats-sont-ils-faux-et-que-faire-pour-corriger-?"]], "1A - Enonc\u00e9 8 novembre 2023-2024": [[124, "1A---Enonc\u00e9-8-novembre-2023-2024"]], "Exercice 1 : d\u00e9codage fa\u00e7on Morse": [[124, "Exercice-1-:-d\u00e9codage-fa\u00e7on-Morse"]], "Q1 : Ecrire une fonction qui code une s\u00e9quence de lettres en une s\u00e9quence de 0 et 1.": [[124, "Q1-:-Ecrire-une-fonction-qui-code-une-s\u00e9quence-de-lettres-en-une-s\u00e9quence-de-0-et-1."]], "Q2 : On s\u2019int\u00e9resse au d\u00e9codage d\u2019un message.": [[124, "Q2-:-On-s'int\u00e9resse-au-d\u00e9codage-d'un-message."]], "Q3 : Ecrire une fonction qui re\u00e7oit une s\u00e9quence de 0 et de 1 et retourne la s\u00e9quence de lettres correspondante.": [[124, "Q3-:-Ecrire-une-fonction-qui-re\u00e7oit-une-s\u00e9quence-de-0-et-de-1-et-retourne-la-s\u00e9quence-de-lettres-correspondante."]], "Q4 : On forme une classe avec les deux fonctions pr\u00e9c\u00e9dentes. Il faut compl\u00e9ter le code suivant.": [[124, "Q4-:-On-forme-une-classe-avec-les-deux-fonctions-pr\u00e9c\u00e9dentes.-Il-faut-compl\u00e9ter-le-code-suivant."]], "Q5 : On veut r\u00e9duire la taille du message cod\u00e9.": [[124, "Q5-:-On-veut-r\u00e9duire-la-taille-du-message-cod\u00e9."]], "Q6 : Que fait la fonction suivante ?": [[124, "Q6-:-Que-fait-la-fonction-suivante-?"]], "Q7 : Dans ce langage, les lettres sont toutes \u00e9quiprobables": [[124, "Q7-:-Dans-ce-langage,-les-lettres-sont-toutes-\u00e9quiprobables"]], "Q8 : On change le Coding des lettres A et B": [[124, "Q8-:-On-change-le-Coding-des-lettres-A-et-B"]], "Q9 : Dans le cas pr\u00e9c\u00e9dent, la premi\u00e8re lettre peut \u00eatre soit B soit D.": [[124, "Q9-:-Dans-le-cas-pr\u00e9c\u00e9dent,-la-premi\u00e8re-lettre-peut-\u00eatre-soit-B-soit-D."]], "Q10 : Ecrire une m\u00e9thode\u2026": [[124, "Q10-:-Ecrire-une-m\u00e9thode..."]], "A conna\u00eetre": [[125, null]], "Programmation dynamique": [[125, null]], "Probl\u00e8me NP-complets": [[125, null]], "A parcourir": [[125, null]], "Correction": [[125, null], [129, null], [174, "Correction"]], "Numpy / Pandas": [[126, "numpy-pandas"]], "S\u00e9ances minut\u00e9es": [[127, "seances-minutees"]], "S\u00e9ries Temporelles": [[128, null]], "Exercices sur le langage python": [[129, "exercices-sur-le-langage-python"]], "Structure de donn\u00e9es": [[129, null]], "algorithmes tr\u00e8s simples": [[129, null]], "Profiling": [[129, null], [171, "Profiling"]], "Points particulier du langages": [[129, null]], "Classification multi-classe et jeu mal balanc\u00e9": [[130, "Classification-multi-classe-et-jeu-mal-balanc\u00e9"]], "d\u00e9couverte": [[130, "d\u00e9couverte"]], "\u00e9volution en fonction du nombre de classes": [[130, "\u00e9volution-en-fonction-du-nombre-de-classes"]], "\u00e9volution en fonction de la variance": [[130, "\u00e9volution-en-fonction-de-la-variance"]], "\u00e9volution en fonction de la dimension": [[130, "\u00e9volution-en-fonction-de-la-dimension"]], "retour sur le nombre de classes": [[130, "retour-sur-le-nombre-de-classes"]], "un dernier jeu s\u00fbr": [[130, "un-dernier-jeu-s\u00fbr"]], "Gradient Boosting": [[131, "Gradient-Boosting"]], "Premier exemple": [[131, "Premier-exemple"]], "learning rate et it\u00e9rations": [[131, "learning-rate-et-it\u00e9rations"]], "L\u2019algorithme": [[131, "L'algorithme"]], "Inspiration": [[131, "Inspiration"]], "Algorithme": [[131, "Algorithme"]], "R\u00e9gression quantile": [[131, "R\u00e9gression-quantile"]], "learning_rate et sur-apprentissage": [[131, "learning_rate-et-sur-apprentissage"]], "Gradient Boosting avec d\u2019autres librairies": [[131, "Gradient-Boosting-avec-d'autres-librairies"]], "XGBoost": [[131, "XGBoost"], [132, "XGBoost"]], "LightGbm": [[131, "LightGbm"]], "CatBoost": [[131, "CatBoost"]], "Tree, hyperparam\u00e8tres, overfitting": [[132, "Tree,-hyperparam\u00e8tres,-overfitting"]], "Donn\u00e9es g\u00e9n\u00e9r\u00e9es": [[132, "Donn\u00e9es-g\u00e9n\u00e9r\u00e9es"]], "Diff\u00e9rents arbres de d\u00e9cision": [[132, "Diff\u00e9rents-arbres-de-d\u00e9cision"]], "max_depth": [[132, "max_depth"], [132, "id1"]], "min_samples_split=10": [[132, "min_samples_split=10"], [132, "id2"]], "Random Forest": [[132, "Random-Forest"], [132, "id3"]], "n_estimators": [[132, "n_estimators"]], "Base d\u2019apprentissage et et base de test": [[132, "Base-d'apprentissage-et-et-base-de-test"]], "Decision Tree": [[132, "Decision-Tree"]], "R\u00e9seaux de neurones": [[132, "R\u00e9seaux-de-neurones"]], "R\u00e9seaux de neurones, alpha=0": [[132, "R\u00e9seaux-de-neurones,-alpha=0"]], "Exercice 1 : d\u00e9terminer les param\u00e8tres optimaux pour cet exemple": [[132, "Exercice-1-:-d\u00e9terminer-les-param\u00e8tres-optimaux-pour-cet-exemple"]], "Exercice 2 : ajouter quelques points aberrants": [[132, "Exercice-2-:-ajouter-quelques-points-aberrants"]], "Intervalles de confiance": [[132, "Intervalles-de-confiance"]], "Exercice 3 : optimiser les hyperparam\u00e8tres pour XGBoost et scikit-learn et comparer": [[132, "Exercice-3-:-optimiser-les-hyperparam\u00e8tres-pour-XGBoost-et-scikit-learn-et-comparer"]], "Features ou mod\u00e8le": [[133, "Features-ou-mod\u00e8le"]], "Single Spectrum Analysis (SSA)": [[135, "Single-Spectrum-Analysis-(SSA)"]], "Une s\u00e9rie articielle": [[135, "Une-s\u00e9rie-articielle"]], "Autocorr\u00e9lations": [[135, "Autocorr\u00e9lations"]], "SSA": [[135, "SSA"]], "La pr\u00e9diction": [[135, "La-pr\u00e9diction"]], "Les points aberrants": [[135, "Les-points-aberrants"]], "ACP - projection": [[136, "ACP---projection"]], "R\u00e9gression logistique et courbe ROC": [[137, "R\u00e9gression-logistique-et-courbe-ROC"]], "R\u00e9gression logistique en 2D": [[138, "R\u00e9gression-logistique-en-2D"]], "Plusieurs mod\u00e8les, donn\u00e9es disjointes": [[139, "Plusieurs-mod\u00e8les,-donn\u00e9es-disjointes"]], "version manuelle": [[139, "version-manuelle"]], "Automatisation": [[139, "Automatisation"]], "Exemple sur un jeu articificiel": [[139, "Exemple-sur-un-jeu-articificiel"]], "Classifications et courbes ROC": [[140, "Classifications-et-courbes-ROC"]], "Classification multi-classe et stacking": [[142, "Classification-multi-classe-et-stacking"]], "Le probl\u00e8me": [[142, "Le-probl\u00e8me"]], "Automatisation avec une impl\u00e9mentation": [[142, "Automatisation-avec-une-impl\u00e9mentation"]], "Plus proches voisins": [[143, "Plus-proches-voisins"]], "Validation crois\u00e9e (cross-validation)": [[144, "Validation-crois\u00e9e-(cross-validation)"]], "Plus proches voisins - \u00e9valuation": [[145, "Plus-proches-voisins---\u00e9valuation"]], "S\u00e9lection des hyper-param\u00e8tres": [[146, "S\u00e9lection-des-hyper-param\u00e8tres"]], "Base d\u2019apprentissage et de test": [[147, "Base-d'apprentissage-et-de-test"]], "D\u00e9coupage stratifi\u00e9 apprentissage / test": [[148, "D\u00e9coupage-stratifi\u00e9-apprentissage-/-test"]], "Pr\u00e9diction de la note des vins": [[149, "Pr\u00e9diction-de-la-note-des-vins"]], "R\u00e9gression polyn\u00f4miale et pipeline": [[150, "R\u00e9gression-polyn\u00f4miale-et-pipeline"]], "Jeu de d\u00e9, rotation sur un circuit (classes)": [[151, "Jeu-de-d\u00e9,-rotation-sur-un-circuit-(classes)"]], "De": [[151, "De"]], "Permutation": [[151, "Permutation"]], "It\u00e9rateur": [[152, "It\u00e9rateur"]], "G\u00e9n\u00e9ration d\u2019un arbre al\u00e9atoire": [[152, "G\u00e9n\u00e9ration-d'un-arbre-al\u00e9atoire"]], "Profondeur maximale": [[152, "Profondeur-maximale"]], "Classe Permutation et d\u00e9composition en transitions": [[153, "Classe-Permutation-et-d\u00e9composition-en-transitions"]], "Composition": [[153, "Composition"]], "Op\u00e9rateur == et @": [[153, "Op\u00e9rateur-==-et-@"]], "D\u00e9composition": [[153, "D\u00e9composition"]], "Transposition": [[153, "Transposition"]], "Un exemple court pour d\u00e9m\u00ealer ce qui est chang\u00e9": [[153, "Un-exemple-court-pour-d\u00e9m\u00ealer-ce-qui-est-chang\u00e9"]], "Python 3.x": [[153, "Python-3.x"]], "Une classe pour repr\u00e9senter un arbre": [[154, "Une-classe-pour-repr\u00e9senter-un-arbre"]], "Premier jet": [[154, "Premier-jet"]], "Afficher l\u2019arbre": [[154, "Afficher-l'arbre"]], "Profondeur maximale : le plus grand chemin depuis la racine jusqu\u2019aux feuilles": [[154, "Profondeur-maximale-:-le-plus-grand-chemin-depuis-la-racine-jusqu'aux-feuilles"]], "Profondeur moyenne ?": [[154, "Profondeur-moyenne-?"]], "Interm\u00e8de : is ou == ?": [[154, "Interm\u00e8de-:-is-ou-==-?"]], "Classe, H\u00e9ritage, calcule d\u2019une distance": [[155, "Classe,-H\u00e9ritage,-calcule-d'une-distance"]], "Classe Product": [[155, "Classe-Product"]], "Classe utilisateur": [[155, "Classe-utilisateur"]], "Classe Base": [[155, "Classe-Base"]], "2048 et les classes": [[156, "2048-et-les-classes"]], "D\u00e9composition du probl\u00e8me": [[156, "D\u00e9composition-du-probl\u00e8me"]], "0 - Cr\u00e9ation de la matrice de jeu": [[156, "0---Cr\u00e9ation-de-la-matrice-de-jeu"]], "2 - D\u00e9termination de toutes les cases libres": [[156, "2---D\u00e9termination-de-toutes-les-cases-libres"]], "1 - Ajout d\u2019un nombre al\u00e9atoire dans {2,4} \u00e0 une position al\u00e9atoire pourvu qu\u2019elle soit libre": [[156, "1---Ajout-d'un-nombre-al\u00e9atoire-dans-{2,4}-\u00e0-une-position-al\u00e9atoire-pourvu-qu'elle-soit-libre"]], "3 - A-t-on perdu ?": [[156, "3---A-t-on-perdu-?"]], "5 - Aggr\u00e8ge les nombres dans un tableau que ce soit une ligne ou une colonne": [[156, "5---Aggr\u00e8ge-les-nombres-dans-un-tableau-que-ce-soit-une-ligne-ou-une-colonne"]], "4 - Joue un coup sachant une direction donn\u00e9e": [[156, "4---Joue-un-coup-sachant-une-direction-donn\u00e9e"]], "6 - score": [[156, "6---score"]], "7 - coup suivant": [[156, "7---coup-suivant"]], "8 - la fonction faisant tout": [[156, "8---la-fonction-faisant-tout"]], "Classe compl\u00e8te": [[156, "Classe-compl\u00e8te"]], "Un dernier graphe pour finir": [[156, "Un-dernier-graphe-pour-finir"]], "Une autre strat\u00e9gie pour illustrer l\u2019h\u00e9ritage": [[156, "Une-autre-strat\u00e9gie-pour-illustrer-l'h\u00e9ritage"]], "Un bref aper\u00e7u des classes": [[157, "Un-bref-aper\u00e7u-des-classes"]], "Une station de m\u00e9tro": [[157, "Une-station-de-m\u00e9tro"]], "Une distance": [[157, "Une-distance"]], "M\u00e9thode": [[157, "M\u00e9thode"]], "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations": [[158, "Liste,-tuple,-ensemble,-dictionnaire,-liste-cha\u00een\u00e9e,-co\u00fbt-des-op\u00e9rations"]], "Insertion avec list et deque": [[158, "Insertion-avec-list-et-deque"]], "Un \u00e9l\u00e9ment dans un ensemble": [[158, "Un-\u00e9l\u00e9ment-dans-un-ensemble"]], "Simuler une loi multinomiale": [[159, "Simuler-une-loi-multinomiale"]], "Algorithme de simulation": [[159, "Algorithme-de-simulation"]], "Une premi\u00e8re optimisation : tri des poids": [[159, "Une-premi\u00e8re-optimisation-:-tri-des-poids"]], "Optimisation bootstrap": [[159, "Optimisation-bootstrap"]], "Jeux de coloriage": [[160, "Jeux-de-coloriage"]], "Colorier un carr\u00e9 \u00e0 proportion": [[160, "Colorier-un-carr\u00e9-\u00e0-proportion"]], "Colorier en diagonale": [[160, "Colorier-en-diagonale"]], "Fonction de la surface couverte": [[160, "Fonction-de-la-surface-couverte"]], "Version math\u00e9matique": [[160, "Version-math\u00e9matique"]], "Retour au coloriage": [[160, "Retour-au-coloriage"]], "A quoi \u00e7a sert ?": [[160, "A-quoi-\u00e7a-sert-?"], [244, "a-quoi-ca-sert"]], "Jeu de d\u00e9, rotation sur un circuit": [[161, "Jeu-de-d\u00e9,-rotation-sur-un-circuit"]], "R\u00e9partition, table de hashage": [[162, "R\u00e9partition,-table-de-hashage"]], "Q1 - premi\u00e8re lettre": [[162, "Q1---premi\u00e8re-lettre"]], "Q2 - somme": [[162, "Q2---somme"]], "Q3 - pseudo g\u00e9n\u00e9rateur": [[162, "Q3---pseudo-g\u00e9n\u00e9rateur"]], "Q4 - hash": [[162, "Q4---hash"]], "Q5 - light hash": [[162, "Q5---light-hash"]], "Q6 - r\u00e9partition": [[162, "Q6---r\u00e9partition"]], "Q7 - dictionnaire": [[162, "Q7---dictionnaire"]], "Quelques \u00e9l\u00e9ments de r\u00e9ponses": [[162, "Quelques-\u00e9l\u00e9ments-de-r\u00e9ponses"]], "Premi\u00e8re lettre": [[162, "Premi\u00e8re-lettre"]], "Somme": [[162, "Somme"]], "Pseudo": [[162, "Pseudo"]], "Hash": [[162, "Hash"]], "Light hash": [[162, "Light-hash"]], "JSON - XML": [[163, "JSON---XML"]], "Q1 : \u00e9criture des donn\u00e9es au format CSV": [[163, "Q1-:-\u00e9criture-des-donn\u00e9es-au-format-CSV"], [163, "id1"]], "Q2 : \u00e9criture des donn\u00e9es au format JSON": [[163, "Q2-:-\u00e9criture-des-donn\u00e9es-au-format-JSON"], [163, "id2"]], "Q3 : relire les donn\u00e9es avec le module json": [[163, "Q3-:-relire-les-donn\u00e9es-avec-le-module-json"], [163, "id3"]], "Q4 : essayez avec les format XML (ou HTML), SQL, SAS, Excel\u2026": [[163, "Q4-:-essayez-avec-les-format-XML-(ou-HTML),-SQL,-SAS,-Excel..."], [163, "id4"]], "Q5 : donn\u00e9es non structur\u00e9es": [[163, "Q5-:-donn\u00e9es-non-structur\u00e9es"], [163, "id5"]], "Q6 : le texte, \u00e7a prend trop de place, zippons": [[163, "Q6-:-le-texte,-\u00e7a-prend-trop-de-place,-zippons"], [163, "id6"]], "Q7 : que vous inspire protobuf ?": [[163, "Q7-:-que-vous-inspire-protobuf-?"], [163, "id7"]], "Calculs de surface et autres calculs": [[164, "Calculs-de-surface-et-autres-calculs"]], "Exercice 1 : calcul de la surface d\u2019un cercle": [[164, "Exercice-1-:-calcul-de-la-surface-d'un-cercle"]], "1.1 En utilisant la constante pi": [[164, "1.1-En-utilisant-la-constante-pi"]], "1.2 Sans utiliser pi ni aucune autre fonction": [[164, "1.2-Sans-utiliser-pi-ni-aucune-autre-fonction"]], "Exercice 2 : tri al\u00e9atoire": [[164, "Exercice-2-:-tri-al\u00e9atoire"]], "Exercice 3 : petits calculs parfaits pour une machine": [[164, "Exercice-3-:-petits-calculs-parfaits-pour-une-machine"]], "1.1. calcul de la surface d\u2019un cercle avec pi": [[164, "1.1.-calcul-de-la-surface-d'un-cercle-avec-pi"]], "1.2. calcul de la surface d\u2019un cercle sans pi ou autre fonction": [[164, "1.2.-calcul-de-la-surface-d'un-cercle-sans-pi-ou-autre-fonction"]], "2. tri al\u00e9atoire": [[164, "2.-tri-al\u00e9atoire"]], "3. petits calculs parfaits pour une machine": [[164, "3.-petits-calculs-parfaits-pour-une-machine"]], "Expressions r\u00e9guli\u00e8res": [[165, "Expressions-r\u00e9guli\u00e8res"], [203, "Expressions-r\u00e9guli\u00e8res"], [243, "expressions-regulieres"], [244, "expressions-regulieres"]], "Exercice 1 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots": [[165, "Exercice-1-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots"], [165, "id1"]], "Exercice 2 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots se terminant par la lettre s": [[165, "Exercice-2-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots-se-terminant-par-la-lettre-s"], [165, "id2"]], "Exercice 3 : utiliser les expression r\u00e9guli\u00e8res pour remplacer tous les \u00ab\u00a0de\u00a0\u00bb en 2": [[165, "Exercice-3-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-remplacer-tous-les-%22de%22-en-2"], [165, "id3"]], "Exercice 4 : utiliser les expression r\u00e9guli\u00e8res pour extraire les lignes des rimes en elle ou elles ou aile ou ailes": [[165, "Exercice-4-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-les-lignes-des-rimes-en-elle-ou-elles-ou-aile-ou-ailes"], [165, "id4"]], "S\u00e9rialisation avec JSON, XML, pickle": [[166, "S\u00e9rialisation-avec-JSON,-XML,-pickle"]], "Notion de stream ou flux": [[166, "Notion-de-stream-ou-flux"]], "Q1: quelle est la fonction la plus rapide ?": [[166, "Q1:-quelle-est-la-fonction-la-plus-rapide-?"]], "Format JSON": [[166, "Format-JSON"]], "Q1. lire du json": [[166, "Q1.-lire-du-json"]], "Q2: \u00e9crire du json": [[166, "Q2:-\u00e9crire-du-json"]], "Q3: gros json": [[166, "Q3:-gros-json"]], "XML": [[166, "XML"]], "pickle": [[166, "pickle"]], "Q1: comparer le temps de s\u00e9rialisation entre pickle et json": [[166, "Q1:-comparer-le-temps-de-s\u00e9rialisation-entre-pickle-et-json"]], "Q2: comparer le temps de d\u00e9s\u00e9rialisation entre pickle et json": [[166, "Q2:-comparer-le-temps-de-d\u00e9s\u00e9rialisation-entre-pickle-et-json"]], "Peut-on tout s\u00e9rialiser ?": [[166, "Peut-on-tout-s\u00e9rialiser-?"]], "Histogramme et dictionnaire": [[167, "Histogramme-et-dictionnaire"]], "Heap": [[168, "Heap"]], "Transformer en tas": [[168, "Transformer-en-tas"]], "Dessiner un tas": [[168, "Dessiner-un-tas"]], "Premi\u00e8re version": [[168, "Premi\u00e8re-version"]], "M\u00eame chose avec les indices au lieu des valeurs": [[168, "M\u00eame-chose-avec-les-indices-au-lieu-des-valeurs"]], "Co\u00fbt de l\u2019algorithme": [[168, "Co\u00fbt-de-l'algorithme"]], "Version simplifi\u00e9e": [[168, "Version-simplifi\u00e9e"]], "Pivot de gauss avec numpy": [[169, "Pivot-de-gauss-avec-numpy"]], "Numpy 1": [[169, "Numpy-1"]], "Numpy 2": [[169, "Numpy-2"]], "Vitesse": [[169, "Vitesse"]], "Profiling la fonction Gini": [[170, "Profiling-la-fonction-Gini"]], "Exercice 1 : profiler le code pr\u00e9c\u00e9dent": [[170, "Exercice-1-:-profiler-le-code-pr\u00e9c\u00e9dent"], [170, "id1"]], "Exercice 2 : changer la fonction _gini_final si possible en plus rapide": [[170, "Exercice-2-:-changer-la-fonction-_gini_final-si-possible-en-plus-rapide"], [170, "id2"]], "Exercice 3 : vous am\u00e9liorez la fonction _gini_final, profilez pour savoir de combien ?": [[170, "Exercice-3-:-vous-am\u00e9liorez-la-fonction-_gini_final,-profilez-pour-savoir-de-combien-?"], [170, "id3"]], "Exercice 4 : utiliser d\u2019autres modules de profiling": [[170, "Exercice-4-:-utiliser-d'autres-modules-de-profiling"], [170, "id4"]], "Exercice 5 : la fonction _gini_cumsum contient deux boucles. Quelle est la plus rapide ?": [[170, "Exercice-5-:-la-fonction-_gini_cumsum-contient-deux-boucles.-Quelle-est-la-plus-rapide-?"], [170, "id5"]], "Profiling, application \u00e0 la convolution": [[171, "Profiling,-application-\u00e0-la-convolution"]], "Impl\u00e9mentation na\u00efve": [[171, "Impl\u00e9mentation-na\u00efve"]], "Q1: comparer les temps d\u2019ex\u00e9cution": [[171, "Q1:-comparer-les-temps-d'ex\u00e9cution"]], "Q2: comparer avec une seconde impl\u00e9mentation": [[171, "Q2:-comparer-avec-une-seconde-impl\u00e9mentation"]], "im2col": [[171, "im2col"]], "Q3: comparer \u00e0 nouveau les temps d\u2019\u00e9xecution": [[171, "Q3:-comparer-\u00e0-nouveau-les-temps-d'\u00e9xecution"]], "Q4: que peut-on en d\u00e9duire ?": [[171, "Q4:-que-peut-on-en-d\u00e9duire-?"]], "Profilage : \u00e9v\u00e9nements ou \u00e9chantillonnage": [[171, "Profilage-:-\u00e9v\u00e9nements-ou-\u00e9chantillonnage"]], "Une derni\u00e8re impl\u00e9mentation": [[171, "Une-derni\u00e8re-impl\u00e9mentation"]], "Q5: Que pouvez-vous dire de cette derni\u00e8re impl\u00e9mentation ?": [[171, "Q5:-Que-pouvez-vous-dire-de-cette-derni\u00e8re-impl\u00e9mentation-?"]], "Exemple de profiling": [[172, "Exemple-de-profiling"]], "Bizarrerie": [[172, "Bizarrerie"]], "Profiler": [[172, "Profiler"]], "Recherche dichotomique": [[173, "Recherche-dichotomique"], [211, "Recherche-dichotomique"]], "Version it\u00e9rative": [[173, "Version-it\u00e9rative"]], "Version r\u00e9cursive": [[173, "Version-r\u00e9cursive"]], "Version r\u00e9cursive 2": [[173, "Version-r\u00e9cursive-2"]], "Web-Scraping - pokemon": [[174, "Web-Scraping---pokemon"]], "Fonction pour obtenir les caract\u00e9ristiques de pokemons": [[174, "Fonction-pour-obtenir-les-caract\u00e9ristiques-de-pokemons"]], "les images de pokemon": [[174, "les-images-de-pokemon"]], "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre": [[175, "D'une-structure-de-donn\u00e9es-\u00e0-l'autre"]], "histogramme et dictionnaire": [[175, "histogramme-et-dictionnaire"]], "liste \u00e0 dictionnaire": [[175, "liste-\u00e0-dictionnaire"]], "dictionnaire \u00e0 liste": [[175, "dictionnaire-\u00e0-liste"]], "dictionnaire et deux listes": [[175, "dictionnaire-et-deux-listes"]], "deux listes et dictionnaires": [[175, "deux-listes-et-dictionnaires"]], "zip reverse": [[175, "zip-reverse"]], "matrices et dictionnaires": [[175, "matrices-et-dictionnaires"]], "liste de listes et dictionnaires": [[175, "liste-de-listes-et-dictionnaires"]], "dictionnaires et liste de listes": [[175, "dictionnaires-et-liste-de-listes"]], "matrice sparse": [[175, "matrice-sparse"]], "matrices et tableaux": [[175, "matrices-et-tableaux"]], "2 dimensions logiques, 1 dimension en m\u00e9moire": [[175, "2-dimensions-logiques,-1-dimension-en-m\u00e9moire"]], "du tableau \u00e0 la liste de listes": [[175, "du-tableau-\u00e0-la-liste-de-listes"]], "Calculer un chi 2 sur un tableau de contingence": [[176, "Calculer-un-chi-2-sur-un-tableau-de-contingence"]], "formule": [[176, "formule"]], "tableau au hasard": [[176, "tableau-au-hasard"]], "calcul avec scipy": [[176, "calcul-avec-scipy"]], "calcul avec numpy": [[176, "calcul-avec-numpy"]], "Tests unitaires": [[177, "Tests-unitaires"]], "Un petit jeu": [[177, "Un-petit-jeu"]], "Une autre \u00e9criture": [[177, "Une-autre-\u00e9criture"]], "Des obstacles\u2026": [[177, "Des-obstacles..."]], "Ajouter d\u2019autres tests unitaires pour cette seconde version": [[177, "Ajouter-d'autres-tests-unitaires-pour-cette-seconde-version"]], "Changer la taille de l\u2019\u00e9chiquier": [[177, "Changer-la-taille-de-l'\u00e9chiquier"]], "Tester une exception": [[177, "Tester-une-exception"]], "Tri plus rapide que pr\u00e9vu": [[178, "Tri-plus-rapide-que-pr\u00e9vu"]], "trier un plus petit ensemble": [[178, "trier-un-plus-petit-ensemble"]], "\u00e9volution en fonction de n": [[178, "\u00e9volution-en-fonction-de-n"]], "D\u00e9corr\u00e9lation de variables al\u00e9atoires": [[179, "D\u00e9corr\u00e9lation-de-variables-al\u00e9atoires"]], "Cr\u00e9ation d\u2019un jeu de donn\u00e9es": [[179, "Cr\u00e9ation-d'un-jeu-de-donn\u00e9es"], [180, "Cr\u00e9ation-d'un-jeu-de-donn\u00e9es"]], "Corr\u00e9lation de matrices": [[179, "Corr\u00e9lation-de-matrices"], [180, "Corr\u00e9lation-de-matrices"]], "Un peu de math\u00e9matiques": [[179, "Un-peu-de-math\u00e9matiques"]], "Calcul de la racine carr\u00e9e": [[179, "Calcul-de-la-racine-carr\u00e9e"], [180, "Calcul-de-la-racine-carr\u00e9e"]], "D\u00e9corr\u00e9lation": [[179, "D\u00e9corr\u00e9lation"], [180, "D\u00e9corr\u00e9lation"]], "Simulation de variables corr\u00e9l\u00e9es": [[179, "Simulation-de-variables-corr\u00e9l\u00e9es"], [180, "Simulation-de-variables-corr\u00e9l\u00e9es"]], "Q11": [[179, "Q11"], [180, "Q11"]], "Q12": [[179, "Q12"], [180, "Q12"]], "Q13": [[179, "Q13"], [180, "Q13"]], "D\u00e9corr\u00e9lation de variables al\u00e9atoires - correction": [[180, "D\u00e9corr\u00e9lation-de-variables-al\u00e9atoires---correction"]], "Cryptage homomorphic de Craig Gentry": [[181, "Cryptage-homomorphic-de-Craig-Gentry"]], "D\u00e9finition du cryptage": [[181, "D\u00e9finition-du-cryptage"], [182, "D\u00e9finition-du-cryptage"]], "Exercice 1 : impl\u00e9menter le cryptage": [[181, "Exercice-1-:-impl\u00e9menter-le-cryptage"], [182, "Exercice-1-:-impl\u00e9menter-le-cryptage"]], "Exercice 2 : v\u00e9rifier que le cryptage est stable par addition et multiplication": [[181, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"], [182, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"]], "Exercice 3 : impl\u00e9mententer l\u2019addition enti\u00e8re": [[181, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"], [182, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"]], "Exercice 4 : impl\u00e9menter la multiplication enti\u00e8re": [[181, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"], [182, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"]], "Cryptage homomorphic de Craig Gentry - correction": [[182, "Cryptage-homomorphic-de-Craig-Gentry---correction"]], "Spectral Clustering": [[183, "Spectral-Clustering"]], "Un graphe": [[183, "Un-graphe"], [184, "Un-graphe"]], "Partie 1 : clustering en pratique": [[183, "Partie-1-:-clustering-en-pratique"], [184, "Partie-1-:-clustering-en-pratique"]], "Partie 2 : interm\u00e8de th\u00e9orique": [[183, "Partie-2-:-interm\u00e8de-th\u00e9orique"]], "Partie 3 : un peu plus loin": [[183, "Partie-3-:-un-peu-plus-loin"], [184, "Partie-3-:-un-peu-plus-loin"]], "Spectral Clustering - correction": [[184, "Spectral-Clustering---correction"]], "Plus proches voisins en grande dimension": [[185, "Plus-proches-voisins-en-grande-dimension"]], "Q1 : k-nn : mesurer la performance": [[185, "Q1-:-k-nn-:-mesurer-la-performance"], [186, "Q1-:-k-nn-:-mesurer-la-performance"]], "Q2 : k-nn avec sparse features": [[185, "Q2-:-k-nn-avec-sparse-features"], [186, "Q2-:-k-nn-avec-sparse-features"]], "Q3 : Imaginez une fa\u00e7on d\u2019aller plus vite ?": [[185, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"], [186, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"]], "Plus proches voisins en grande dimension - correction": [[186, "Plus-proches-voisins-en-grande-dimension---correction"]], "dimension": [[186, "dimension"]], "observations": [[186, "observations"]], "Programmation dynamique et plus court chemin": [[187, "Programmation-dynamique-et-plus-court-chemin"]], "Algorithme du plus court chemin": [[187, "Algorithme-du-plus-court-chemin"]], "La r\u00e9partition des skis": [[187, "La-r\u00e9partition-des-skis"]], "Exercice facultatif": [[187, "Exercice-facultatif"], [188, "Exercice-facultatif"]], "Exercice 5": [[187, "Exercice-5"], [188, "Exercice-5"], [211, "Exercice-5"]], "Exercice 6": [[187, "Exercice-6"], [188, "Exercice-6"], [211, "Exercice-6"]], "Exercice 7": [[187, "Exercice-7"], [188, "Exercice-7"], [211, "Exercice-7"], [212, "Exercice-7"]], "Exercice 8": [[187, "Exercice-8"], [188, "Exercice-8"]], "Prolongements : degr\u00e9 de s\u00e9paration sur Facebook": [[187, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"], [188, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"]], "Programmation dynamique et plus court chemin (correction)": [[188, "Programmation-dynamique-et-plus-court-chemin-(correction)"]], "Puzzles algorithmiques (1)": [[189, "Puzzles-algorithmiques-(1)"]], "Produits scalaires": [[189, "Produits-scalaires"], [190, "Produits-scalaires"]], "Solution moins na\u00efve": [[189, "Solution-moins-na\u00efve"]], "Probl\u00e8me de recouvrement": [[189, "Probl\u00e8me-de-recouvrement"], [190, "Probl\u00e8me-de-recouvrement"]], "Soudoyer les prisonniers": [[189, "Soudoyer-les-prisonniers"], [190, "Soudoyer-les-prisonniers"]], "D\u00e9coupage intelligent d\u2019une base de donn\u00e9es": [[189, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"], [190, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"]], "Puzzles algorithmes (1) - correction": [[190, "Puzzles-algorithmes-(1)---correction"]], "Premi\u00e8re solution": [[190, "Premi\u00e8re-solution"]], "Seconde solution": [[190, "Seconde-solution"]], "Approche par programmation dynamique": [[190, "Approche-par-programmation-dynamique"]], "Puzzles algorithmiques (2)": [[191, "Puzzles-algorithmiques-(2)"]], "Exercice 1 : nombres premiers": [[191, "Exercice-1-:-nombres-premiers"], [192, "Exercice-1-:-nombres-premiers"]], "Exercice 2 : watersheds": [[191, "Exercice-2-:-watersheds"], [192, "Exercice-2-:-watersheds"]], "Exercice 3 : s\u00e9paration des bagarreurs": [[191, "Exercice-3-:-s\u00e9paration-des-bagarreurs"], [192, "Exercice-3-:-s\u00e9paration-des-bagarreurs"]], "Exercice 4 : formation de bin\u00f4mes": [[191, "Exercice-4-:-formation-de-bin\u00f4mes"], [192, "Exercice-4-:-formation-de-bin\u00f4mes"]], "Puzzles algorithmes (2) - correction": [[192, "Puzzles-algorithmes-(2)---correction"]], "Seconde id\u00e9e : les trouver tous ?": [[192, "Seconde-id\u00e9e-:-les-trouver-tous-?"]], "solution": [[192, "solution"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique": [[193, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique"]], "Apart\u00e9 sur les classes": [[193, "Apart\u00e9-sur-les-classes"]], "Classes, attributs, op\u00e9rateurs": [[193, "Classes,-attributs,-op\u00e9rateurs"]], "Exercice 1 : carr\u00e9 magique": [[193, "Exercice-1-:-carr\u00e9-magique"], [194, "Exercice-1-:-carr\u00e9-magique"]], "M\u00e9thodes": [[193, "M\u00e9thodes"], [221, "methodes"], [233, "methodes"]], "Exercice 2 : \u00e0 faire \u00e0 trois, carr\u00e9 magique (suite)": [[193, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"], [194, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"]], "Exercice 3 : trouver tous les carr\u00e9s magiques": [[193, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"], [194, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"]], "Exercice 4 : faire plus rapide": [[193, "Exercice-4-:-faire-plus-rapide"], [194, "Exercice-4-:-faire-plus-rapide"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)": [[194, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique-(correction)"]], "Programme complet": [[194, "Programme-complet"]], "Classes, h\u00e9ritage": [[195, "Classes,-h\u00e9ritage"]], "Qu\u2019est-ce que l\u2019h\u00e9ritage ?": [[195, "Qu'est-ce-que-l'h\u00e9ritage-?"]], "Exercice 1 : pi\u00e8ce normale": [[195, "Exercice-1-:-pi\u00e8ce-normale"], [196, "Exercice-1-:-pi\u00e8ce-normale"]], "Exercice 2 : pi\u00e8ce truqu\u00e9e": [[195, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"], [196, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"]], "Utiliser des m\u00e9thodes de la classe m\u00e8re": [[195, "Utiliser-des-m\u00e9thodes-de-la-classe-m\u00e8re"]], "Exercice 3 : Pi\u00e8ce mixte": [[195, "Exercice-3-:-Pi\u00e8ce-mixte"], [196, "Exercice-3-:-Pi\u00e8ce-mixte"]], "Autre construction avec des fonctions": [[195, "Autre-construction-avec-des-fonctions"]], "Exercice 4 : pi\u00e8ce mixte avec des fonctions": [[195, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"], [196, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"]], "Classes, h\u00e9ritage (correction)": [[196, "Classes,-h\u00e9ritage-(correction)"]], "Dictionnaires, fonctions, code de Vigen\u00e8re": [[197, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re"]], "Fonctions dans le d\u00e9tail": [[197, "Fonctions-dans-le-d\u00e9tail"]], "Variable locale": [[197, "Variable-locale"]], "Mot-cl\u00e9 return": [[197, "Mot-cl\u00e9-return"]], "Fonction r\u00e9cursive": [[197, "Fonction-r\u00e9cursive"], [235, "fonction-recursive"]], "Dictionnaires": [[197, "Dictionnaires"]], "cl\u00e9 - valeur": [[197, "cl\u00e9---valeur"]], "notions de co\u00fbt": [[197, "notions-de-co\u00fbt"]], "ordonner les \u00e9l\u00e9ments d\u2019un dictionnaire": [[197, "ordonner-les-\u00e9l\u00e9ments-d'un-dictionnaire"]], "Exercice 2 : recherche dans une liste": [[197, "Exercice-2-:-recherche-dans-une-liste"]], "Exercice 3 : utilisation d\u2019un dictionnaire": [[197, "Exercice-3-:-utilisation-d'un-dictionnaire"], [198, "Exercice-3-:-utilisation-d'un-dictionnaire"]], "Exercice 4 : crypter de d\u00e9crypter selon Vigen\u00e8re": [[197, "Exercice-4-:-crypter-de-d\u00e9crypter-selon-Vigen\u00e8re"]], "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)": [[198, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re-(correction)"]], "Exercice 4 : crypter et d\u00e9crypter selon Vigen\u00e8re": [[198, "Exercice-4-:-crypter-et-d\u00e9crypter-selon-Vigen\u00e8re"]], "Int\u00e9grale et la m\u00e9thode des rectangles": [[199, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles"]], "Calcul de l\u2019int\u00e9grale": [[199, "Calcul-de-l'int\u00e9grale"], [200, "Calcul-de-l'int\u00e9grale"]], "Calcul de pr\u00e9cision": [[199, "Calcul-de-pr\u00e9cision"], [200, "Calcul-de-pr\u00e9cision"]], "Calcul plus rapide": [[199, "Calcul-plus-rapide"], [200, "Calcul-plus-rapide"]], "Int\u00e9grale et la m\u00e9thode des rectangles - correction": [[200, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles---correction"]], "La fonction r\u00e9calcitrante": [[200, "La-fonction-r\u00e9calcitrante"]], "Calcul de Monte Carlo": [[200, "Calcul-de-Monte-Carlo"]], "Quand s\u2019arr\u00eater ?": [[200, "Quand-s'arr\u00eater-?"]], "2048 - strat\u00e9gie gagnante": [[201, "2048---strat\u00e9gie-gagnante"]], "Exercice 1 : impl\u00e9menter les r\u00e8gles du jeu": [[201, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"], [202, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"]], "Exercice 2 : impl\u00e9menter une strat\u00e9gie": [[201, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"], [202, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"]], "2048 - strat\u00e9gie gagnante - correction": [[202, "2048---strat\u00e9gie-gagnante---correction"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res": [[203, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res"]], "Ecriture": [[203, "Ecriture"], [237, "ecriture"]], "Lecture": [[203, "Lecture"], [237, "lecture"]], "with": [[203, "with"]], "\u00e0 quoi \u00e7a sert ?": [[203, "\u00e0-quoi-\u00e7a-sert-?"]], "Exercice 1 : Excel \\rightarrow Python \\rightarrow Excel": [[203, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"], [204, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"]], "Autres formats de fichiers": [[203, "Autres-formats-de-fichiers"]], "Exercice 2 : trouver un module (1)": [[203, "Exercice-2-:-trouver-un-module-(1)"]], "Exercice 3 : trouver un module (2)": [[203, "Exercice-3-:-trouver-un-module-(2)"], [204, "Exercice-3-:-trouver-un-module-(2)"]], "Module qu\u2019on cr\u00e9e soi-m\u00eame": [[203, "Module-qu'on-cr\u00e9e-soi-m\u00eame"]], "Exercice 4 : son propre module": [[203, "Exercice-4-:-son-propre-module"], [204, "Exercice-4-:-son-propre-module"]], "Exercice 5 : chercher un motif dans un texte": [[203, "Exercice-5-:-chercher-un-motif-dans-un-texte"], [204, "Exercice-5-:-chercher-un-motif-dans-un-texte"]], "Exercice 6 : chercher un autre motif dans un texte": [[203, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"], [204, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"]], "Exercice 7 : recherche les urls dans une page wikip\u00e9dia": [[203, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"], [204, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"]], "Exercice 8 : construire un texte \u00e0 motif": [[203, "Exercice-8-:-construire-un-texte-\u00e0-motif"], [204, "Exercice-8-:-construire-un-texte-\u00e0-motif"]], "Petites subtilit\u00e9s avec les expressions r\u00e9guli\u00e8res en Python": [[203, "Petites-subtilit\u00e9s-avec-les-expressions-r\u00e9guli\u00e8res-en-Python"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)": [[204, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res-(correction)"]], "Premiers pas en Python": [[205, "Premiers-pas-en-Python"]], "Partie 1": [[205, "Partie-1"]], "Partie 2": [[205, "Partie-2"], [206, "Partie-2"]], "Partie 3": [[205, "Partie-3"], [206, "Partie-3"]], "Premiers pas en Python (correction)": [[206, "Premiers-pas-en-Python-(correction)"]], "Tracer une pyramide bigarr\u00e9e": [[207, "Tracer-une-pyramide-bigarr\u00e9e"]], "Probl\u00e8me": [[207, "Probl\u00e8me"], [208, "Probl\u00e8me"]], "Id\u00e9e de la solution": [[207, "Id\u00e9e-de-la-solution"], [208, "Id\u00e9e-de-la-solution"]], "Tracer une pyramide bigarr\u00e9e - correction": [[208, "Tracer-une-pyramide-bigarr\u00e9e---correction"]], "Les coordonn\u00e9es": [[208, "Les-coordonn\u00e9es"]], "La couleur": [[208, "La-couleur"]], "Deviner la langue d\u2019un texte": [[209, "Deviner-la-langue-d'un-texte"]], "Q1 : lire un fichier": [[209, "Q1-:-lire-un-fichier"], [210, "Q1-:-lire-un-fichier"]], "Q2 : histogramme": [[209, "Q2-:-histogramme"], [210, "Q2-:-histogramme"]], "Q3 : normalisation": [[209, "Q3-:-normalisation"], [210, "Q3-:-normalisation"]], "Q4 : calcul": [[209, "Q4-:-calcul"], [210, "Q4-:-calcul"]], "Q5 : score": [[209, "Q5-:-score"], [210, "Q5-:-score"]], "Deviner la langue d\u2019un texte (correction)": [[210, "Deviner-la-langue-d'un-texte-(correction)"]], "Arbre et Trie": [[211, "Arbre-et-Trie"]], "Construction d\u2019une liste al\u00e9atoire": [[211, "Construction-d'une-liste-al\u00e9atoire"]], "Trie": [[211, "Trie"]], "Recherche dans un trie": [[211, "Recherche-dans-un-trie"]], "Arbre et Trie (correction)": [[212, "Arbre-et-Trie-(correction)"]], "Exercice 3 : recherche dichotomique": [[212, "Exercice-3-:-recherche-dichotomique"]], "Exercice 5 : trie": [[212, "Exercice-5-:-trie"]], "Exercice 6 : recherche dans un trie": [[212, "Exercice-6-:-recherche-dans-un-trie"]], "Plus en d\u00e9tails": [[212, "Plus-en-d\u00e9tails"]], "Questions": [[212, "Questions"], [223, "questions"]], "Variables, boucles, tests": [[213, "Variables,-boucles,-tests"]], "Partie 1 : variables, int, float, str, list": [[213, "Partie-1-:-variables,-int,-float,-str,-list"]], "Partie 2 : Tests": [[213, "Partie-2-:-Tests"]], "Partie 3 : boucles": [[213, "Partie-3-:-boucles"]], "Partie 4 : les listes compactes, les ensembles": [[213, "Partie-4-:-les-listes-compactes,-les-ensembles"]], "Partie 5 : recherche non dichotomique (exercice)": [[213, "Partie-5-:-recherche-non-dichotomique-(exercice)"], [214, "Partie-5-:-recherche-non-dichotomique-(exercice)"]], "Partie 6 : Recherche dichotomique": [[213, "Partie-6-:-Recherche-dichotomique"]], "Partie 7 : pour aller plus loin": [[213, "Partie-7-:-pour-aller-plus-loin"]], "Variables, boucles, tests (correction)": [[214, "Variables,-boucles,-tests-(correction)"]], "Partie 3 : boucles (exercice)": [[214, "Partie-3-:-boucles-(exercice)"]], "Partie 6 : recherche dichotomique (exercice)": [[214, "Partie-6-:-recherche-dichotomique-(exercice)"]], "Partie 7 : pour aller plus loin (exercice)": [[214, "Partie-7-:-pour-aller-plus-loin-(exercice)"]], "Optimiser la note moyenne": [[215, "Optimiser-la-note-moyenne"]], "La classe Bereme": [[215, "La-classe-Bereme"]], "La classe Eleve": [[215, "La-classe-Eleve"]], "Une classe": [[215, "Une-classe"]], "Une bar\u00e8me optimis\u00e9": [[215, "Une-bar\u00e8me-optimis\u00e9"]], "Une erreur": [[215, "Une-erreur"]], "D\u00e9monstration": [[215, "D\u00e9monstration"]], "Distance d\u2019\u00e9dition (4 octobre)": [[216, "Distance-d'\u00e9dition-(4-octobre)"]], "distance avec des mots de m\u00eame longueur": [[216, "distance-avec-des-mots-de-m\u00eame-longueur"]], "Distance avec des mots presque de m\u00eame longueur": [[216, "Distance-avec-des-mots-presque-de-m\u00eame-longueur"]], "Cas g\u00e9n\u00e9rique": [[216, "Cas-g\u00e9n\u00e9rique"]], "Co\u00fbt algorithmique": [[216, "Co\u00fbt-algorithmique"]], "Distance de Levenshtein": [[216, "Distance-de-Levenshtein"]], "Avec alignement": [[216, "Avec-alignement"]], "Un co\u00fbt diff\u00e9rent pour les accents": [[216, "Un-co\u00fbt-diff\u00e9rent-pour-les-accents"]], "Pivot de Gauss": [[218, "Pivot-de-Gauss"]], "Recherche de pr\u00e9fixes": [[219, "Recherche-de-pr\u00e9fixes"]], "Notebooks \u00e9crits durant les s\u00e9ances": [[220, "notebooks-ecrits-durant-les-seances"]], "Pr\u00e9sentation des classes : m\u00e9thodes et attributs": [[221, "presentation-des-classes-methodes-et-attributs"]], "D\u00e9finition, d\u00e9claration": [[221, "definition-declaration"]], "Attributs": [[221, "attributs"]], "Constructeur": [[221, "constructeur"]], "Apport du langage python": [[221, "apport-du-langage-python"]], "Liste des attributs": [[221, "liste-des-attributs"]], "Attributs implicites": [[221, "attributs-implicites"]], "Commentaires, aide": [[221, "commentaires-aide"]], "Classe incluse": [[221, "classe-incluse"]], "It\u00e9rateurs": [[221, "iterateurs"], [235, "iterateurs"]], "M\u00e9thodes, attributs statiques et ajout de m\u00e9thodes": [[221, "methodes-attributs-statiques-et-ajout-de-methodes"]], "M\u00e9thode statique": [[221, "methode-statique"]], "Attributs statiques": [[221, "attributs-statiques"]], "Ajout de m\u00e9thodes": [[221, "ajout-de-methodes"]], "Propri\u00e9t\u00e9s": [[221, "proprietes"]], "Copie d\u2019instance de classe simple": [[221, "copie-d-instance-de-classe-simple"]], "Copie d\u2019instance de classes incluant d\u2019autres classes": [[221, "copie-d-instance-de-classes-incluant-d-autres-classes"]], "Listes et dictionnaires": [[221, "listes-et-dictionnaires"]], "copy et deepcopy": [[221, "copy-et-deepcopy"]], "Attributs fig\u00e9s": [[221, "attributs-figes"]], "Exemple autour de pi\u00e8ces de monnaie": [[221, "exemple-autour-de-pieces-de-monnaie"]], "Sens de l\u2019h\u00e9ritage (2)": [[221, "sens-de-l-heritage-2"]], "H\u00e9ritage multiple": [[221, "heritage-multiple"]], "Fonctions issubclass et isinstance": [[221, "fonctions-issubclass-et-isinstance"]], "Compilation de classes": [[221, "compilation-de-classes"]], "Surcharge d\u2019op\u00e9rateur sur des types": [[221, "surcharge-d-operateur-sur-des-types"]], "Sens de l\u2019h\u00e9ritage (1)": [[221, "sens-de-l-heritage-1"]], "Deux lign\u00e9es d\u2019h\u00e9ritages": [[221, "deux-lignees-d-heritages"]], "C\u2019est oblig\u00e9 d\u2019utiliser les classes ?": [[223, "c-est-oblige-d-utiliser-les-classes"]], "Principe des exceptions": [[224, "principe-des-exceptions"]], "Attraper toutes les erreurs": [[224, "attraper-toutes-les-erreurs"]], "Obtenir le type d\u2019erreur, attraper un type d\u2019exception": [[224, "obtenir-le-type-d-erreur-attraper-un-type-d-exception"]], "Lancer une exception": [[224, "lancer-une-exception"]], "H\u00e9ritage et exception": [[224, "heritage-et-exception"]], "Instructions try, except imbriqu\u00e9es": [[224, "instructions-try-except-imbriquees"]], "D\u00e9finir ses propres exceptions": [[224, "definir-ses-propres-exceptions"]], "D\u00e9river une classe d\u2019exception": [[224, "deriver-une-classe-d-exception"]], "Personnalisation d\u2019une classe d\u2019exception": [[224, "personnalisation-d-une-classe-d-exception"]], "Exemples d\u2019utilisation des exceptions": [[224, "exemples-d-utilisation-des-exceptions"]], "Les it\u00e9rateurs": [[224, "les-iterateurs"]], "Exception ou valeur aberrante": [[224, "exception-ou-valeur-aberrante"]], "Le pi\u00e8ge des exceptions": [[224, "le-piege-des-exceptions"]], "Usage": [[225, "usage"]], "Pile d\u2019appel ou call stack": [[225, "pile-d-appel-ou-call-stack"]], "R\u00e9cup\u00e9ration de la pile d\u2019appel": [[225, "recuperation-de-la-pile-d-appel"]], "Message d\u2019erreur plus explicite": [[225, "message-d-erreur-plus-explicite"]], "Type d\u2019exception": [[225, "type-d-exception"]], "Conventions": [[225, "conventions"]], "Warning et logging": [[227, "warning-et-logging"]], "Warnings": [[227, "warnings"]], "G\u00e9n\u00e9rer un warning": [[227, "generer-un-warning"]], "Intercepter un warning": [[227, "intercepter-un-warning"]], "Warning personnalis\u00e9": [[227, "warning-personnalise"]], "Logging": [[227, "logging"]], "Interfaces graphiques": [[228, "interfaces-graphiques"]], "tkinter": [[229, "tkinter"]], "Les objets": [[229, "les-objets"]], "Zone de texte": [[229, "zone-de-texte"]], "Bouton": [[229, "bouton"]], "Zone de saisie": [[229, "zone-de-saisie"]], "Zone de saisie \u00e0 plusieurs lignes": [[229, "zone-de-saisie-a-plusieurs-lignes"]], "Case \u00e0 cocher": [[229, "case-a-cocher"]], "Case ronde ou bouton radio": [[229, "case-ronde-ou-bouton-radio"]], "Liste avec barre de d\u00e9filement, Combobox": [[229, "liste-avec-barre-de-defilement-combobox"]], "Canevas": [[229, "canevas"]], "Menus": [[229, "menus"]], "M\u00e9thodes communes": [[229, "methodes-communes"]], "Disposition des objets dans une fen\u00eatre": [[229, "disposition-des-objets-dans-une-fenetre"]], "Emplacements": [[229, "emplacements"]], "M\u00e9thode pack": [[229, "methode-pack"]], "M\u00e9thode grid": [[229, "methode-grid"]], "M\u00e9thode place": [[229, "methode-place"]], "Sous-fen\u00eatre": [[229, "sous-fenetre"]], "Ev\u00e9nements": [[229, "evenements"]], "Fen\u00eatre principale": [[229, "fenetre-principale"]], "Focus": [[229, "focus"]], "Lancer une fonction lorsqu\u2019un bouton est press\u00e9": [[229, "lancer-une-fonction-lorsqu-un-bouton-est-presse"]], "Associer n\u2019importe quel \u00e9v\u00e9nement \u00e0 un objet": [[229, "associer-n-importe-quel-evenement-a-un-objet"]], "Menu": [[229, "menu"]], "Fonctions pr\u00e9d\u00e9finies": [[229, "fonctions-predefinies"]], "D\u2019autres fen\u00eatres et contr\u00f4les": [[229, "d-autres-fenetres-et-controles"]], "Cr\u00e9er une seconde bo\u00eete de dialogues": [[229, "creer-une-seconde-boite-de-dialogues"]], "Fen\u00eatres standard": [[229, "fenetres-standard"]], "Compte \u00e0 rebours": [[229, "compte-a-rebours"]], "Contr\u00f4les personnalis\u00e9s : utilisation des classes": [[229, "controles-personnalises-utilisation-des-classes"]], "Fen\u00eatres personnalis\u00e9es : utilisation des classes": [[229, "fenetres-personnalisees-utilisation-des-classes"]], "S\u00e9quence d\u2019\u00e9v\u00e9nements": [[229, "sequence-d-evenements"]], "Communiquer un r\u00e9sultat par message": [[229, "communiquer-un-resultat-par-message"]], "OrderedDict": [[230, "ordereddict"]], "namedtuple": [[230, "namedtuple"]], "Counter": [[230, "counter"]], "deque": [[230, "deque"]], "Constructions fr\u00e9quentes": [[231, "constructions-frequentes"]], "Constructions n\u00e9gatives": [[231, "constructions-negatives"]], "datetime": [[232, "datetime"]], "Autres formats de date": [[232, "autres-formats-de-date"]], "Encoding et jeux de caract\u00e8res": [[233, "encoding-et-jeux-de-caracteres"]], "Jeux de caract\u00e8res": [[233, "jeux-de-caracteres"]], "Encodings par d\u00e9faut": [[233, "encodings-par-defaut"]], "Variables et fonctions": [[234, "variables-et-fonctions"]], "Syntaxe du langage Python (boucles, tests, fonctions)": [[235, "syntaxe-du-langage-python-boucles-tests-fonctions"]], "Les trois concepts des algorithmes": [[235, "les-trois-concepts-des-algorithmes"]], "D\u00e9finition et syntaxe": [[235, "definition-et-syntaxe"]], "Comparaisons possibles": [[235, "comparaisons-possibles"]], "Op\u00e9rateurs logiques": [[235, "operateurs-logiques"]], "Ecriture condens\u00e9e (test)": [[235, "ecriture-condensee-test"]], "Exemple (test)": [[235, "exemple-test"]], "None, True et 1": [[235, "none-true-et-1"]], "Passer, instruction pass": [[235, "passer-instruction-pass"]], "Boucle B1 : test": [[235, "indexmathe-Boucle0"]], "Boucle while": [[235, "boucle-while"]], "Boucle for": [[235, "boucle-for"]], "Listes, boucle for, liste en extension": [[235, "listes-boucle-for-liste-en-extension"]], "Plusieurs variables de boucles": [[235, "plusieurs-variables-de-boucles"]], "Ecriture condens\u00e9e (for)": [[235, "ecriture-condensee-for"]], "Pilotage d\u2019une boucle : continue": [[235, "pilotage-d-une-boucle-continue"]], "Pilotage d\u2019une boucle : break": [[235, "pilotage-d-une-boucle-break"]], "Fin normale d\u2019une boucle : else": [[235, "fin-normale-d-une-boucle-else"]], "Suppression ou ajout d\u2019\u00e9l\u00e9ments lors d\u2019une boucle": [[235, "suppression-ou-ajout-d-elements-lors-d-une-boucle"]], "D\u00e9finition, syntaxe": [[235, "definition-syntaxe"]], "Exemple (for)": [[235, "exemple-for"]], "Param\u00e8tres avec des valeurs par d\u00e9faut": [[235, "parametres-avec-des-valeurs-par-defaut"]], "Ordre des param\u00e8tres": [[235, "ordre-des-parametres"]], "Surcharge de fonction": [[235, "surcharge-de-fonction"]], "Commentaires": [[235, "commentaires"]], "Param\u00e8tres modifiables": [[235, "parametres-modifiables"]], "Port\u00e9e des variables, des param\u00e8tres": [[235, "portee-des-variables-des-parametres"]], "Port\u00e9e des fonctions": [[235, "portee-des-fonctions"]], "Nombre de param\u00e8tres variable": [[235, "nombre-de-parametres-variable"]], "Ecriture simplifi\u00e9e pour des fonctions simples : lambda": [[235, "ecriture-simplifiee-pour-des-fonctions-simples-lambda"]], "Fonctions g\u00e9n\u00e9rateur": [[235, "fonctions-generateur"]], "Identificateur appelable": [[235, "identificateur-appelable"]], "Compilation dynamique (eval)": [[235, "compilation-dynamique-eval"]], "Compilation dynamique (compile, exec)": [[235, "compilation-dynamique-compile-exec"]], "Indentation": [[235, "indentation"]], "Fonctions usuelles": [[235, "fonctions-usuelles"]], "Types et variables du langage python": [[236, "types-et-variables-du-langage-python"]], "Types immuables (ou immutable)": [[236, "types-immuables-ou-immutable"]], "Type \u00ab\u00a0rien\u00a0\u00bb ou None": [[236, "type-rien-ou-none"]], "Nombres r\u00e9els et entiers": [[236, "nombres-reels-et-entiers"]], "Bool\u00e9en": [[236, "booleen"]], "Cha\u00eene de caract\u00e8res": [[236, "chaine-de-caracteres"]], "Cr\u00e9ation d\u2019une cha\u00eene de caract\u00e8res - str": [[236, "creation-d-une-chaine-de-caracteres-str"]], "Manipulation d\u2019une cha\u00eene de caract\u00e8res": [[236, "manipulation-d-une-chaine-de-caracteres"]], "Formatage d\u2019une cha\u00eene de caract\u00e8res": [[236, "formatage-d-une-chaine-de-caracteres"]], "Syntaxe %": [[236, "syntaxe"]], "M\u00e9thode format": [[236, "methode-format"]], "Notation f{}": [[236, "notation-f"]], "Un cas particuler %r ou {!r}": [[236, "un-cas-particuler-r-ou-r"]], "tuple": [[236, "tuple"]], "Nombres complexes": [[236, "nombres-complexes"]], "bytes": [[236, "bytes"]], "Types modifiables ou mutable": [[236, "types-modifiables-ou-mutable"]], "bytearray": [[236, "bytearray"]], "D\u00e9finition et m\u00e9thodes (list)": [[236, "definition-et-methodes-list"]], "Exemples (list)": [[236, "exemples-list"]], "Fonction range": [[236, "fonction-range"]], "Boucles et listes": [[236, "boucles-et-listes"]], "Collage de s\u00e9quences, fonction zip": [[236, "collage-de-sequences-fonction-zip"]], "Concat\u00e9nation de cha\u00eene de caract\u00e8res": [[236, "concatenation-de-chaine-de-caracteres"]], "Copie": [[236, "copie"]], "D\u00e9finition et m\u00e9thodes (dict)": [[236, "definition-et-methodes-dict"]], "Exemples (dict)": [[236, "exemples-dict"]], "Copie (dict)": [[236, "copie-dict"]], "Cl\u00e9s de type modifiable": [[236, "cles-de-type-modifiable"]], "Ensemble ou set": [[236, "ensemble-ou-set"]], "Extensions": [[236, "extensions"]], "Fonction print, repr et conversion en cha\u00eene de caract\u00e8res": [[236, "fonction-print-repr-et-conversion-en-chaine-de-caracteres"]], "Fonction eval": [[236, "eval-fonction-chapitre-deux"]], "Informations fournies par python": [[236, "informations-fournies-par-python"]], "Affectations multiples": [[236, "affectations-multiples"]], "Hi\u00e9rarchie des objets": [[236, "hierarchie-des-objets"]], "Objets internes": [[236, "objets-internes"]], "Commentaires accentu\u00e9s": [[236, "commentaires-accentues"]], "Format texte": [[237, "format-texte"]], "Ecriture en mode \u00ab\u00a0ajout\u00a0\u00bb": [[237, "ecriture-en-mode-ajout"]], "Encoding et les accents": [[237, "encoding-et-les-accents"]], "Fichiers zip": [[237, "fichiers-zip"]], "Lecture (zip)": [[237, "lecture-zip"]], "Ecriture (zip)": [[237, "ecriture-zip"]], "Manipulation de fichiers": [[237, "manipulation-de-fichiers"]], "Gestion des noms de chemins": [[237, "gestion-des-noms-de-chemins"]], "Copie, suppression": [[237, "copie-suppression"]], "Liste de fichiers": [[237, "liste-de-fichiers"]], "Sans format ou format binaire": [[237, "sans-format-ou-format-binaire"]], "Ecriture dans un fichier binaire": [[237, "ecriture-dans-un-fichier-binaire"]], "Lecture d\u2019un fichier binaire": [[237, "lecture-d-un-fichier-binaire"]], "Exemple fichier binaire": [[237, "exemple-fichier-binaire"]], "Objets plus complexes": [[237, "objets-plus-complexes"]], "Entr\u00e9es, Sorties, Modules": [[238, "entrees-sorties-modules"]], "Module ou extension": [[239, "module-ou-extension"]], "Un module": [[239, "un-module"]], "Exemple": [[239, "exemple"]], "Importer un module": [[239, "importer-un-module"]], "Nom d\u2019un module": [[239, "nom-d-un-module"]], "Modules et fichiers": [[239, "modules-et-fichiers"]], "Emplacement d\u2019un module": [[239, "emplacement-d-un-module"]], "Attributs communs \u00e0 tout module": [[239, "attributs-communs-a-tout-module"]], "Cas pratiques": [[239, "cas-pratiques"]], "Ce qui ne marche pas : les import cycliques": [[239, "ce-qui-ne-marche-pas-les-import-cycliques"]], "Ajouter un module en cours d\u2019ex\u00e9cution": [[239, "ajouter-un-module-en-cours-d-execution"]], "Liste des modules import\u00e9s": [[239, "liste-des-modules-importes"]], "Plusieurs modules et fichiers": [[239, "plusieurs-modules-et-fichiers"]], "Arborescence de modules, paquetage": [[239, "arborescence-de-modules-paquetage"]], "Import relatif": [[239, "import-relatif"]], "Modules internes": [[239, "modules-internes"]], "Modules externes": [[239, "modules-externes"]], "Optimisation": [[240, "optimisation"]], "S\u00e9rialiser autre chose que des donn\u00e9es": [[240, "serialiser-autre-chose-que-des-donnees"]], "Parall\u00e9lisation": [[241, "parallelisation"]], "Threads": [[242, "threads"]], "Premier thread": [[242, "premier-thread"]], "Synchronisation": [[242, "synchronisation"]], "Attente": [[242, "attente"]], "Partage d\u2019informations": [[242, "partage-d-informations"]], "Interface graphique": [[242, "interface-graphique"]], "Files de messages": [[242, "files-de-messages"]], "Multithreading plus simple": [[242, "multithreading-plus-simple"]], "concurrent.futures": [[242, "concurrent-futures"]], "Notion de futures": [[242, "notion-de-futures"]], "Un probl\u00e8me de blocage": [[242, "un-probleme-de-blocage"]], "async - await - asyncio": [[242, "async-await-asyncio"]], "GIL - Global Interpreter Lock": [[242, "gil-global-interpreter-lock"]], "cython : un m\u00e9lange de python et C": [[242, "cython-un-melange-de-python-et-c"]], "C#, Java": [[242, "c-java"]], "Les ensembles de caract\u00e8res": [[244, "les-ensembles-de-caracteres"]], "Les multiplicateurs": [[244, "les-multiplicateurs"]], "Groupes": [[244, "groupes"]], "Assembler les caract\u00e8res": [[244, "assembler-les-caracteres"]], "Exemple plus complet": [[244, "exemple-plus-complet"]], "Groupes nomm\u00e9s": [[244, "groupes-nommes"]], "Le langage Python": [[245, "le-langage-python"]], "2024-03-01 : feuille de route 2024": [[22, "feuille-de-route-2024"]], "S\u00e9ance 1 (26/1)": [[22, "seance-1-26-1"]], "S\u00e9ance 2 (2/2)": [[22, "seance-2-2-2"]], "S\u00e9ance 3 (8/2)": [[22, "seance-3-8-2"]], "S\u00e9ance 4 (16/2)": [[22, "seance-4-16-2"]], "S\u00e9ance 5 (23/2)": [[22, "seance-5-23-2"]], "Projets": [[22, "projets"]], "R\u00e9gression Ridge, Lasso et nouvel estimateur": [[134, "R\u00e9gression-Ridge,-Lasso-et-nouvel-estimateur"]], "Un jeu de donn\u00e9es pour un probl\u00e8me de r\u00e9gression": [[134, "Un-jeu-de-donn\u00e9es-pour-un-probl\u00e8me-de-r\u00e9gression"]], "R\u00e9gression Ridge": [[134, "R\u00e9gression-Ridge"]], "R\u00e9gression Lasso": [[134, "R\u00e9gression-Lasso"]], "Application \u00e0 la s\u00e9lection d\u2019arbre d\u2019une for\u00eat al\u00e9atoire": [[134, "Application-\u00e0-la-s\u00e9lection-d'arbre-d'une-for\u00eat-al\u00e9atoire"]], "Explication g\u00e9om\u00e9trique de la nullit\u00e9 des coefficients dans une r\u00e9gression Lasso": [[134, "Explication-g\u00e9om\u00e9trique-de-la-nullit\u00e9-des-coefficients-dans-une-r\u00e9gression-Lasso"]], "Validation crois\u00e9e et API scikit-learn": [[134, "Validation-crois\u00e9e-et-API-scikit-learn"]], "Optimisation m\u00e9moire": [[134, "Optimisation-m\u00e9moire"]], "Change Logs": [[0, "change-logs"]], "0.5.0": [[0, "id1"]], "0.4.0": [[0, "id2"]], "0.3.1": [[0, "id3"]], "License": [[75, "license"]]}, "indexentries": {"algorithme": [[1, "index-0"], [59, "indexmathe-Algorithme0"], [59, "indexmathe-Algorithme1"], [59, "indexmathe-Algorithme2"], [59, "indexmathe-Algorithme3"]], "culture": [[1, "index-0"]], "culture algorithmique": [[1, "index-0"]], "commentaire_accentues() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.commentaire_accentues"]], "compte() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.compte"]], "construit_matrice_carree() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.construit_matrice_carree"]], "dictionnaire_modifie_dans_la_boucle() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dictionnaire_modifie_dans_la_boucle"]], "dix_entiers_carre() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dix_entiers_carre"]], "enumerate_permutations() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations"]], "enumerate_permutations_recursive() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations_recursive"]], "integrale() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.integrale"]], "mat2text() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2text"]], "mat2vect() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2vect"]], "minindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.minindex"]], "module": [[2, "module-teachpyx.examples.classiques"], [2, "module-teachpyx.examples.construction_classique"], [4, "module-teachpyx.faq.faq_exception"], [4, "module-teachpyx.faq.faq_geo"], [4, "module-teachpyx.faq.faq_numpy"], [4, "module-teachpyx.faq.faq_python"], [6, "module-teachpyx.examples.numpysex"], [7, "module-teachpyx.practice.rues_paris"], [8, "module-teachpyx.practice.tsp_bresenham"], [9, "module-teachpyx.practice.tsp_kohonen"], [10, "module-teachpyx.practice.tsp_kruskal"], [11, "module-teachpyx.tools.display.pygame_helper"], [11, "module-teachpyx.tools.display.video_helper"], [11, "module-teachpyx.tools.profiling"], [239, "index-0"]], "recherche() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche"]], "recherche_dichotomique() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche_dichotomique"]], "repetition_a_eviter() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.repetition_a_eviter"]], "somme() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.somme"]], "str2date() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.str2date"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "text2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.text2mat"]], "triindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.triindex"]], "vect2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.vect2mat"]], "get_data_folder() (dans le module teachpyx.datasets.data_helper)": [[3, "teachpyx.datasets.data_helper.get_data_folder"]], "load_enedis_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_enedis_dataset"]], "load_wine_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_wine_dataset"]], "load_wines_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_wines_dataset"]], "distribution (classe dans teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.Distribution"]], "pqpiperror": [[4, "teachpyx.faq.faq_python.PQPipError"]], "call_stack() (dans le module teachpyx.faq.faq_exception)": [[4, "teachpyx.faq.faq_exception.call_stack"]], "class_getitem() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.class_getitem"]], "difference_div() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.difference_div"]], "entier_grande_taille() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.entier_grande_taille"]], "enumerate_regex_search() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.enumerate_regex_search"]], "get_day_name() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_day_name"]], "get_installed_distributions() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_installed_distributions"]], "get_month_name() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_month_name"]], "get_package_info() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_package_info"]], "get_packages_list() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_packages_list"]], "information_about_package() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.information_about_package"]], "lambert93_to_wgps() (dans le module teachpyx.faq.faq_geo)": [[4, "teachpyx.faq.faq_geo.lambert93_to_WGPS"]], "list_of_installed_packages() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.list_of_installed_packages"]], "property_example() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.property_example"]], "python_path() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.python_path"]], "same_variable() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.same_variable"]], "sortable_class() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.sortable_class"]], "stringio() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.stringio"]], "teachpyx.faq.faq_exception": [[4, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_geo": [[4, "module-teachpyx.faq.faq_geo"]], "teachpyx.faq.faq_numpy": [[4, "module-teachpyx.faq.faq_numpy"]], "teachpyx.faq.faq_python": [[4, "module-teachpyx.faq.faq_python"]], "to_float32() (dans le module teachpyx.faq.faq_numpy)": [[4, "teachpyx.faq.faq_numpy.to_float32"]], "numpy_matrix2list() (dans le module teachpyx.examples.numpysex)": [[6, "teachpyx.examples.numpysex.numpy_matrix2list"]], "numpy_types() (dans le module teachpyx.examples.numpysex)": [[6, "teachpyx.examples.numpysex.numpy_types"]], "teachpyx.examples.numpysex": [[6, "module-teachpyx.examples.numpysex"]], "bellman() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.bellman"]], "connected_components() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.connected_components"]], "distance_haversine() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.distance_haversine"]], "distance_paris() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.distance_paris"]], "euler_path() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.euler_path"]], "eulerien_extension() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.eulerien_extension"]], "get_data() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.get_data"]], "graph_degree() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.graph_degree"]], "kruskal() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.kruskal"]], "possible_edges() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.possible_edges"]], "teachpyx.practice.rues_paris": [[7, "module-teachpyx.practice.rues_paris"]], "draw_ellipse() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.draw_ellipse"]], "draw_line() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.draw_line"]], "teachpyx.practice.tsp_bresenham": [[8, "module-teachpyx.practice.tsp_bresenham"]], "trace_ligne_simple() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.trace_ligne_simple"]], "ajoute_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.ajoute_vecteur"]], "construit_liste_neurones() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.construit_liste_neurones"]], "construit_ville() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.construit_ville"]], "deplace_neurone() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.deplace_neurone"]], "distance_chemin() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.distance_chemin"]], "distance_euclidienne_carree() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.distance_euclidienne_carree"]], "iteration() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.iteration"]], "modifie_structure() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.modifie_structure"]], "moyenne_proximite() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.moyenne_proximite"]], "multiplie_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.multiplie_vecteur"]], "poids_attirance() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.poids_attirance"]], "simulation() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.simulation"]], "soustrait_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.soustrait_vecteur"]], "teachpyx.practice.tsp_kohonen": [[9, "module-teachpyx.practice.tsp_kohonen"]], "vecteur_norme() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.vecteur_norme"]], "amelioration_chemin() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.amelioration_chemin"]], "arbre_poids_minimal() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.arbre_poids_minimal"]], "circuit_eulerien() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.circuit_eulerien"]], "circuit_hamiltonien() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.circuit_hamiltonien"]], "construit_ville() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.construit_ville"]], "dessin_arete_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.dessin_arete_zone"]], "distance_euclidian() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.distance_euclidian"]], "echange_position() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.echange_position"]], "echange_position_essai() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.echange_position_essai"]], "equation_droite() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.equation_droite"]], "evaluation_droite() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.evaluation_droite"]], "intersection_segment() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.intersection_segment"]], "longueur_chemin() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.longueur_chemin"]], "oppose_vecteur() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.oppose_vecteur"]], "repartition_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.repartition_zone"]], "retournement() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.retournement"]], "retournement_essai() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.retournement_essai"]], "simulation() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.simulation"]], "supprime_croisement() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.supprime_croisement"]], "teachpyx.practice.tsp_kruskal": [[10, "module-teachpyx.practice.tsp_kruskal"]], "tsp_kruskal_algorithm() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.tsp_kruskal_algorithm"]], "vecteur_cosinus() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_cosinus"]], "vecteur_norme() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_norme"]], "vecteur_points() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_points"]], "vecteur_sinus() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_sinus"]], "voisinage_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.voisinage_zone"]], "voisinage_zone_xy() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.voisinage_zone_xy"]], "profilenode (classe dans teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.ProfileNode"]], "add_called_by() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.add_called_by"]], "add_calls_to() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.add_calls_to"]], "as_dict() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.as_dict"]], "build_diff_image() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.build_diff_image"]], "decompress_zip() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.decompress_zip"]], "display_line() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.display_line"]], "download_and_unzip() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.download_and_unzip"]], "draw_diagram() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.draw_diagram"]], "draw_graph_graphviz() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.draw_graph_graphviz"]], "empty_main_loop() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.empty_main_loop"]], "filter_node_() (m\u00e9thode statique teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.filter_node_"]], "get_local_folder() (dans le module teachpyx.tools.display.video_helper)": [[11, "teachpyx.tools.display.video_helper.get_local_folder"]], "get_pygame_screen_font() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.get_pygame_screen_font"]], "get_root() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.get_root"]], "key (propri\u00e9t\u00e9 teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.key"]], "make_video() (dans le module teachpyx.tools.display.video_helper)": [[11, "teachpyx.tools.display.video_helper.make_video"]], "profile() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile"]], "profile2df() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile2df"]], "profile2graph() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile2graph"]], "run_graphviz() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.run_graphviz"]], "run_subprocess() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.run_subprocess"]], "teachpyx.tools.display.pygame_helper": [[11, "module-teachpyx.tools.display.pygame_helper"]], "teachpyx.tools.display.video_helper": [[11, "module-teachpyx.tools.display.video_helper"]], "teachpyx.tools.profiling": [[11, "module-teachpyx.tools.profiling"]], "to_json() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.to_json"]], "to_text() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.to_text"]], "total_size() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.total_size"]], "wait_event() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.wait_event"]], "pygame_simulation() (dans le module teachpyx.video.tsp_kohonen_pygame)": [[12, "teachpyx.video.tsp_kohonen_pygame.pygame_simulation"]], "pygame_simulation() (dans le module teachpyx.video.tsp_kruskal_pygame)": [[13, "teachpyx.video.tsp_kruskal_pygame.pygame_simulation"]], "ubuntu": [[16, "index-0"]], "wsl": [[16, "index-0"]], "cartopy": [[16, "index-0"]], "code jam": [[17, "index-0"]], "harry potter": [[18, "index-0"]], "hermionne": [[18, "index-0"]], "\u00e9nigme": [[18, "index-0"]], "dataframe": [[48, "index-0"], [61, "index-10"]], "matrice": [[48, "index-0"], [61, "index-6"]], "cr\u00e9dit agricole": [[56, "indexmathe-Table1"]], "danone": [[56, "indexmathe-Table1"]], "figure": [[56, "indexmathe-Figure0"], [56, "indexmathe-Figure1"], [56, "indexmathe-Figure10"], [56, "indexmathe-Figure11"], [56, "indexmathe-Figure12"], [56, "indexmathe-Figure13"], [56, "indexmathe-Figure2"], [56, "indexmathe-Figure3"], [56, "indexmathe-Figure4"], [56, "indexmathe-Figure5"], [56, "indexmathe-Figure6"], [56, "indexmathe-Figure7"], [56, "indexmathe-Figure8"], [56, "indexmathe-Figure9"]], "figure f1 : open-high-low-close-volume": [[56, "indexmathe-Figure0"]], "figure f10 : 4 actions fran\u00e7aises": [[56, "indexmathe-Figure9"]], "figure f11 : rendement pour 4 actions fran\u00e7aises": [[56, "indexmathe-Figure10"]], "figure f12 : deal": [[56, "indexmathe-Figure11"]], "figure f13 : deal en image": [[56, "indexmathe-Figure12"]], "figure f14 : deal positifs": [[56, "indexmathe-Figure13"]], "figure f2 : ohlc intraday": [[56, "indexmathe-Figure1"]], "figure f3 : exemple de carnet d'ordres": [[56, "indexmathe-Figure2"]], "figure f4 : action bnp et trend following": [[56, "indexmathe-Figure3"]], "figure f5 : action bnp et mean reversing": [[56, "indexmathe-Figure4"]], "figure f6 : action bnp et pair trading": [[56, "indexmathe-Figure5"]], "figure f7 : le cours de la bnp entre d\u00e9but 2003 et mi 2008": [[56, "indexmathe-Figure6"]], "figure f8 : nav": [[56, "indexmathe-Figure7"]], "figure f9 : nav d'une strat\u00e9gie": [[56, "indexmathe-Figure8"]], "probl\u00e8me": [[56, "indexmathe-Probl\u00e8me0"], [62, "indexmathe-Probl\u00e8me0"], [62, "indexmathe-Probl\u00e8me1"]], "probl\u00e8me p1 : optimisation d'un portefeuille": [[56, "indexmathe-Probl\u00e8me0"]], "soci\u00e9t\u00e9 g\u00e9n\u00e9rale": [[56, "indexmathe-Table1"]], "table": [[56, "indexmathe-Table0"], [56, "indexmathe-Table1"]], "table t1 : implantation des hedge funds en 2007": [[56, "indexmathe-Table0"]], "table t2 : indicateurs bnp": [[56, "indexmathe-Table1"]], "courts": [[56, "indexmathe-Figure13"]], "finance": [[56, "index-0"]], "logns": [[56, "indexmathe-Figure13"]], "n\u00e9gatifs": [[56, "indexmathe-Figure13"]], "strading": [[56, "index-0"]], "strat\u00e9gie": [[56, "index-0"]], "tous les ordres ne sont pas repr\u00e9sent\u00e9s.": [[56, "indexmathe-Figure2"]], "algorithme a1 : kruskal": [[59, "indexmathe-Algorithme0"]], "algorithme a2 : circuit eul\u00e9rien": [[59, "indexmathe-Algorithme1"]], "algorithme a3 : circuit hamiltonien": [[59, "indexmathe-Algorithme2"]], "algorithme a4 : tsp": [[59, "indexmathe-Algorithme3"]], "dijkstra": [[61, "index-14"]], "arbre": [[61, "index-13"]], "array": [[61, "index-11"]], "corr\u00e9lation": [[61, "index-9"]], "distance": [[61, "index-5"]], "espace vectoriel": [[61, "index-3"]], "fonction": [[61, "index-0"]], "fonction continue": [[61, "index-1"]], "fonction de hash": [[61, "index-12"]], "fonction d\u00e9rivable": [[61, "index-2"]], "graphe": [[61, "index-13"]], "hash": [[61, "index-12"]], "histogramme": [[61, "index-8"]], "k-d tree": [[61, "index-15"]], "matplotlib": [[61, "index-19"]], "norme": [[61, "index-5"]], "numpy": [[61, "index-17"]], "pandas": [[61, "index-18"]], "plot": [[61, "index-19"]], "plus court chemin dans un graphe": [[61, "index-14"]], "probl\u00e8me d'optimisation": [[61, "index-7"]], "produit scalaire": [[61, "index-4"]], "recherche dichotomique": [[61, "index-15"]], "scikit-learn": [[61, "index-20"]], "seaborn": [[61, "index-19"]], "statsmodels": [[61, "index-21"]], "travelling salesman problem (tsp)": [[61, "index-16"]], "voyageur du commerce": [[61, "index-16"]], "d\u00e9finition": [[62, "indexmathe-D\u00e9finition0"], [221, "indexmathe-D\u00e9finition0"], [221, "indexmathe-D\u00e9finition1"], [221, "indexmathe-D\u00e9finition2"], [221, "indexmathe-D\u00e9finition3"], [221, "indexmathe-D\u00e9finition4"], [221, "indexmathe-D\u00e9finition5"], [221, "indexmathe-D\u00e9finition6"], [221, "indexmathe-D\u00e9finition7"], [235, "indexmathe-D\u00e9finition0"], [235, "indexmathe-D\u00e9finition1"], [235, "indexmathe-D\u00e9finition2"], [235, "indexmathe-D\u00e9finition3"], [235, "indexmathe-D\u00e9finition4"], [235, "indexmathe-D\u00e9finition5"], [236, "indexmathe-D\u00e9finition0"], [236, "indexmathe-D\u00e9finition1"], [236, "indexmathe-D\u00e9finition2"], [236, "indexmathe-D\u00e9finition3"], [236, "indexmathe-D\u00e9finition4"], [236, "indexmathe-D\u00e9finition5"], [236, "indexmathe-D\u00e9finition6"], [236, "indexmathe-D\u00e9finition7"], [236, "indexmathe-D\u00e9finition8"], [236, "indexmathe-D\u00e9finition9"], [239, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d1 : bruit blanc": [[62, "indexmathe-D\u00e9finition0"]], "kullbak-leiber": [[62, "index-6"]], "probl\u00e8me p1 : r\u00e9gression": [[62, "indexmathe-Probl\u00e8me0"]], "probl\u00e8me p2 : classification binaire": [[62, "indexmathe-Probl\u00e8me1"]], "ball tree": [[62, "index-1"]], "bases d'apprentissage et de test": [[62, "index-2"]], "cross-validation": [[62, "index-3"]], "fonction de co\u00fbt": [[62, "index-6"]], "hyper-param\u00e8tre": [[62, "index-4"]], "imbalanced": [[62, "index-7"]], "log-loss": [[62, "index-6"]], "loi logistique": [[62, "index-5"]], "plus proches voisins": [[62, "index-0"]], "r\u00e9gression logistique": [[62, "index-5"]], "train_test_split": [[62, "index-2"]], "validation crois\u00e9e": [[62, "index-3"]], "cheat sheet": [[63, "index-0"], [69, "index-0"]], "conseil": [[64, "index-0"]], "boucle": [[74, "index-0"], [235, "indexmathe-Boucle0"], [235, "index-3"]], "s\u00e9quence": [[74, "index-0"]], "test": [[74, "index-0"], [235, "index-0"]], "d\u00e9finition d1 : classe": [[221, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : instantiaion": [[221, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : m\u00e9thode": [[221, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : attribut": [[221, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : m\u00e9thode statique": [[221, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : attribut statique": [[221, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : h\u00e9ritage": [[221, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : surcharge": [[221, "indexmathe-D\u00e9finition7"]], "syntaxe": [[221, "indexmathe-Syntaxe0"], [221, "indexmathe-Syntaxe1"], [221, "indexmathe-Syntaxe10"], [221, "indexmathe-Syntaxe11"], [221, "indexmathe-Syntaxe12"], [221, "indexmathe-Syntaxe13"], [221, "indexmathe-Syntaxe14"], [221, "indexmathe-Syntaxe15"], [221, "indexmathe-Syntaxe2"], [221, "indexmathe-Syntaxe3"], [221, "indexmathe-Syntaxe4"], [221, "indexmathe-Syntaxe5"], [221, "indexmathe-Syntaxe6"], [221, "indexmathe-Syntaxe7"], [221, "indexmathe-Syntaxe8"], [221, "indexmathe-Syntaxe9"], [224, "indexmathe-Syntaxe0"], [224, "indexmathe-Syntaxe1"], [235, "indexmathe-Syntaxe0"], [235, "indexmathe-Syntaxe1"], [235, "indexmathe-Syntaxe2"], [235, "indexmathe-Syntaxe3"], [235, "indexmathe-Syntaxe4"], [235, "indexmathe-Syntaxe5"], [235, "indexmathe-Syntaxe6"], [235, "indexmathe-Syntaxe7"], [235, "indexmathe-Syntaxe8"], [239, "indexmathe-Syntaxe0"], [239, "indexmathe-Syntaxe1"], [239, "indexmathe-Syntaxe2"]], "syntaxe s1 : d\u00e9claration d'une classe": [[221, "indexmathe-Syntaxe0"]], "syntaxe s10 : d\u00e9claration d'un attribut statique": [[221, "indexmathe-Syntaxe9"]], "syntaxe s11 : d\u00e9claration d'une propri\u00e9t\u00e9": [[221, "indexmathe-Syntaxe10"]], "syntaxe s12 : d\u00e9claration d'une propri\u00e9t\u00e9 (2)": [[221, "indexmathe-Syntaxe11"]], "syntaxe s13 : d\u00e9claration de l'op\u00e9rateur __copy__": [[221, "indexmathe-Syntaxe12"]], "syntaxe s14 : d\u00e9claration d'attributs fig\u00e9s": [[221, "indexmathe-Syntaxe13"]], "syntaxe s15 : h\u00e9ritage": [[221, "indexmathe-Syntaxe14"]], "syntaxe s16 : surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[221, "indexmathe-Syntaxe15"]], "syntaxe s2 : instanciation d'une classe": [[221, "indexmathe-Syntaxe1"]], "syntaxe s3 : d\u00e9claration d'une m\u00e9thode": [[221, "indexmathe-Syntaxe2"]], "syntaxe s4 : appel d'une m\u00e9thode": [[221, "indexmathe-Syntaxe3"]], "syntaxe s5 : d\u00e9claration d'un attribut": [[221, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'un constructeur": [[221, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'un constructeur": [[221, "indexmathe-Syntaxe6"]], "syntaxe s8 : d\u00e9claration de l'op\u00e9rateur __str__": [[221, "indexmathe-Syntaxe7"]], "syntaxe s9 : d\u00e9claration d'une m\u00e9thode statique": [[221, "indexmathe-Syntaxe8"]], "__copy__": [[221, "index-13"]], "__dict__": [[221, "index-6"]], "class": [[221, "index-0"]], "commentaire": [[221, "index-7"], [235, "index-10"], [236, "index-3"], [236, "index-54"]], "constructeur": [[221, "index-4"]], "copy": [[221, "index-13"], [221, "index-15"], [236, "index-41"], [236, "index-45"]], "deepcopy": [[221, "index-15"], [236, "index-41"]], "def": [[221, "index-3"]], "destructeur": [[221, "index-5"]], "dir": [[221, "index-8"]], "garbage collector": [[221, "index-14"], [224, "index-13"]], "help": [[221, "index-7"]], "h\u00e9ritage": [[221, "index-17"], [224, "index-9"]], "instance": [[221, "index-2"]], "issubclass": [[221, "index-18"]], "m\u00e9thode statique": [[221, "index-11"]], "op\u00e9rateur retourn\u00e9": [[221, "index-9"]], "pass": [[221, "index-1"], [235, "index-2"]], "propri\u00e9t\u00e9": [[221, "index-12"]], "self": [[221, "index-3"]], "s\u00e9rialisation": [[221, "index-16"], [237, "index-5"], [240, "index-0"]], "yield": [[221, "index-10"], [235, "index-14"]], "attribut": [[223, "index-0"]], "attributeerror": [[224, "index-5"]], "importerror": [[224, "index-5"]], "indentationerror": [[224, "index-4"]], "indexerror": [[224, "index-6"]], "keyerror": [[224, "index-6"]], "nameerror": [[224, "index-5"]], "oserror": [[224, "index-7"]], "syntaxerror": [[224, "index-4"]], "syntaxe s1 : attraper une exception": [[224, "indexmathe-Syntaxe0"]], "syntaxe s2 : lever une exception": [[224, "indexmathe-Syntaxe1"]], "typeerror": [[224, "index-6"]], "unicodeerror": [[224, "index-7"]], "valueerror": [[224, "index-6"]], "__str__": [[224, "index-10"]], "as": [[224, "index-3"]], "context manager": [[224, "index-14"]], "division par z\u00e9ro": [[224, "index-0"]], "except": [[224, "index-2"]], "exception": [[224, "index-0"]], "it\u00e9rateur": [[224, "index-11"], [235, "index-14"], [235, "index-6"]], "pile d'appels": [[224, "index-1"]], "pile d'ex\u00e9cution": [[224, "index-1"]], "raise": [[224, "index-8"]], "try": [[224, "index-2"]], "valeur aberrante": [[224, "index-12"]], "test unitaire": [[227, "index-1"]], "warning": [[227, "index-0"]], "checkbutton": [[229, "index-5"]], "entry": [[229, "index-1"], [229, "index-3"]], "intvar": [[229, "index-6"]], "listbox": [[229, "index-7"]], "radiobutton": [[229, "index-6"]], "text": [[229, "index-4"]], "bouton": [[229, "index-2"]], "bouton radio": [[229, "index-6"]], "case \u00e0 cocher": [[229, "index-5"]], "compte \u00e0 rebours": [[229, "index-8"]], "widget": [[229, "index-0"]], "zone de saisie": [[229, "index-3"]], "zone de saisie \u00e0 plusieurs lignes": [[229, "index-4"]], "zone de texte": [[229, "index-1"]], "jeux de caract\u00e8res": [[233, "index-0"]], ":": [[235, "index-0"], [235, "index-3"]], "boucle b1 : test": [[235, "indexmathe-Boucle0"]], "d\u00e9finition d1 : test": [[235, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : fonction": [[235, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : fonction r\u00e9cursive": [[235, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : port\u00e9e d'un variable": [[235, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : variable locale": [[235, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : variable globale": [[235, "indexmathe-D\u00e9finition5"]], "stopiteration": [[235, "index-6"]], "syntaxe s1 : tests": [[235, "indexmathe-Syntaxe0"]], "syntaxe s2 : instruction pass": [[235, "indexmathe-Syntaxe1"]], "syntaxe s3 : boucle while": [[235, "indexmathe-Syntaxe2"]], "syntaxe s4 : boucle for": [[235, "indexmathe-Syntaxe3"]], "syntaxe s5 : liste en extension": [[235, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'une fonction": [[235, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'une fonction": [[235, "indexmathe-Syntaxe6"]], "syntaxe s8 : valeurs par d\u00e9faut": [[235, "indexmathe-Syntaxe7"]], "syntaxe s9 : nombre ind\u00e9fini de param\u00e8tres": [[235, "indexmathe-Syntaxe8"]], "affectations multiples": [[235, "index-7"]], "boucle infinie": [[235, "index-4"]], "break": [[235, "index-9"]], "compile": [[235, "index-16"]], "continue": [[235, "index-8"]], "elif": [[235, "index-0"]], "else": [[235, "index-0"]], "enumerate": [[235, "index-21"]], "eval": [[235, "index-15"], [236, "index-49"]], "exec": [[235, "index-16"]], "fonction r\u00e9cursive": [[235, "index-12"]], "for": [[235, "index-3"], [235, "index-5"]], "g\u00e9n\u00e9rateur": [[235, "index-14"]], "if": [[235, "index-0"]], "in": [[235, "index-3"], [236, "index-15"], [236, "index-25"], [236, "index-35"], [236, "index-44"]], "indentation": [[235, "index-17"]], "lambda": [[235, "index-13"]], "map": [[235, "index-18"]], "passage par adresse": [[235, "index-11"]], "priorit\u00e9 des op\u00e9rateurs": [[235, "index-1"], [236, "index-10"]], "r\u00e9cursivit\u00e9": [[235, "index-12"]], "sorted": [[235, "index-20"]], "while": [[235, "index-3"]], "zip": [[235, "index-19"], [236, "index-39"]], "\"": [[236, "index-17"]], "\"\"\"": [[236, "index-17"]], "#": [[236, "index-54"]], "%": [[236, "index-22"], [236, "index-8"]], "%d": [[236, "index-22"]], "%f": [[236, "index-22"]], "%s": [[236, "index-22"]], "&": [[236, "index-47"], [236, "index-8"]], "'": [[236, "index-17"]], "'''": [[236, "index-17"]], "*": [[236, "index-20"], [236, "index-25"], [236, "index-35"], [236, "index-8"]], "**": [[236, "index-8"]], "*=": [[236, "index-20"], [236, "index-25"], [236, "index-35"], [236, "index-8"]], "+": [[236, "index-20"], [236, "index-25"], [236, "index-35"], [236, "index-8"]], "+=": [[236, "index-20"], [236, "index-25"], [236, "index-35"], [236, "index-8"]], "-": [[236, "index-8"]], "-=": [[236, "index-8"]], "/": [[236, "index-8"]], "//": [[236, "index-11"]], "/=": [[236, "index-8"]], "<": [[236, "index-14"]], "<<": [[236, "index-8"]], "<=": [[236, "index-14"]], "=": [[236, "index-14"], [236, "index-52"]], "==": [[236, "index-14"]], ">": [[236, "index-14"]], ">=": [[236, "index-14"]], ">>": [[236, "index-8"]], "d\u00e9finition d1 : variable": [[236, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d10 : frozenset": [[236, "indexmathe-D\u00e9finition9"]], "d\u00e9finition d2 : constante": [[236, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : type immuable (ou immutable)": [[236, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : cha\u00eene de caract\u00e8res": [[236, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : tuple": [[236, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : type modifiable (ou mutable)": [[236, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : liste": [[236, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : dictionnaire": [[236, "indexmathe-D\u00e9finition7"]], "d\u00e9finition d9 : set": [[236, "indexmathe-D\u00e9finition8"]], "false": [[236, "index-12"]], "none": [[236, "index-6"]], "true": [[236, "index-12"]], "[:]": [[236, "index-20"], [236, "index-25"], [236, "index-35"], [236, "index-44"]], "[]": [[236, "index-20"], [236, "index-25"], [236, "index-35"], [236, "index-44"]], "\\": [[236, "index-17"], [236, "index-4"]], "\\%": [[236, "index-18"]], "\\\\": [[236, "index-18"]], "\\n": [[236, "index-18"]], "\\r": [[236, "index-18"]], "\\t": [[236, "index-18"]], "__builtins__": [[236, "index-50"]], "__doc__": [[236, "index-50"]], "__file__": [[236, "index-50"]], "__name__": [[236, "index-50"]], "affectation multiple": [[236, "index-52"]], "and": [[236, "index-13"]], "append": [[236, "index-35"]], "arrondi": [[236, "index-9"]], "b\"\"": [[236, "index-29"]], "b''": [[236, "index-29"]], "backslash": [[236, "index-4"]], "bool": [[236, "index-12"]], "bytearray": [[236, "index-33"]], "bytes": [[236, "index-27"]], "cha\u00eene de caract\u00e8res": [[236, "index-16"]], "cl\u00e9": [[236, "index-43"]], "comparaison": [[236, "index-14"]], "complex": [[236, "index-26"]], "concat\u00e9nation": [[236, "index-40"]], "constante": [[236, "index-2"]], "conversion": [[236, "index-9"]], "copie": [[236, "index-41"], [236, "index-45"]], "count": [[236, "index-21"], [236, "index-28"]], "decode": [[236, "index-30"]], "del": [[236, "index-44"]], "dict": [[236, "index-42"]], "dictionnaire": [[236, "index-42"]], "division enti\u00e8re": [[236, "index-11"]], "divmod": [[236, "index-53"]], "encode": [[236, "index-30"]], "endswith": [[236, "index-21"], [236, "index-28"]], "entier": [[236, "index-7"]], "extend": [[236, "index-35"]], "extra caract\u00e8re": [[236, "index-18"]], "find": [[236, "index-21"], [236, "index-28"]], "float": [[236, "index-7"]], "format": [[236, "index-23"]], "formattage": [[236, "index-22"]], "formmattage": [[236, "index-23"]], "fromhex": [[236, "index-29"]], "frozen set": [[236, "index-47"]], "get": [[236, "index-44"]], "getsizeof": [[236, "index-32"]], "id": [[236, "index-46"]], "identificateur": [[236, "index-1"]], "immuable": [[236, "index-5"]], "immutable": [[236, "index-5"]], "index": [[236, "index-35"]], "insert": [[236, "index-35"]], "int": [[236, "index-7"]], "is": [[236, "index-15"]], "items": [[236, "index-44"]], "join": [[236, "index-21"], [236, "index-28"]], "keys": [[236, "index-44"]], "len": [[236, "index-35"], [236, "index-44"]], "list": [[236, "index-34"]], "liste": [[236, "index-34"]], "liste en extension": [[236, "index-38"]], "lower": [[236, "index-21"]], "max": [[236, "index-35"], [236, "index-44"]], "min": [[236, "index-35"], [236, "index-44"]], "modifiable": [[236, "index-31"]], "mutable": [[236, "index-31"]], "not": [[236, "index-13"], [236, "index-35"]], "op\u00e9rateur": [[236, "index-13"], [236, "index-14"], [236, "index-15"], [236, "index-20"], [236, "index-25"], [236, "index-35"], [236, "index-8"]], "or": [[236, "index-13"]], "pop": [[236, "index-35"], [236, "index-44"]], "print": [[236, "index-48"]], "r\"\"": [[236, "index-19"]], "r''": [[236, "index-19"]], "range": [[236, "index-37"]], "replace": [[236, "index-28"]], "repr": [[236, "index-48"]], "reverse": [[236, "index-35"]], "r\u00e9el": [[236, "index-7"]], "set": [[236, "index-47"]], "sort": [[236, "index-35"], [236, "index-36"]], "split": [[236, "index-21"], [236, "index-28"]], "startswith": [[236, "index-21"], [236, "index-28"]], "str": [[236, "index-16"]], "string": [[236, "index-16"]], "tuple": [[236, "index-24"]], "type": [[236, "index-1"], [236, "index-51"]], "type modifiable": [[236, "index-31"]], "type mutable": [[236, "index-31"]], "upper": [[236, "index-21"]], "valeur": [[236, "index-43"]], "values": [[236, "index-44"]], "variable": [[236, "index-0"]], "|": [[236, "index-8"]], "encoding": [[237, "index-3"]], "fichier": [[237, "index-0"]], "format binaire": [[237, "index-4"]], "format texte": [[237, "index-1"]], "ressource": [[237, "index-2"]], "d\u00e9finition d1 : point d'entr\u00e9e du programme": [[239, "indexmathe-D\u00e9finition0"]], "syntaxe s1 : importer un module (1)": [[239, "indexmathe-Syntaxe0"]], "syntaxe s2 : importer un module (2)": [[239, "indexmathe-Syntaxe1"]], "syntaxe s3 : importer un module (3)": [[239, "indexmathe-Syntaxe2"]], "import": [[239, "index-2"]], "point d'entr\u00e9e": [[239, "index-1"]], "py": [[239, "index-3"]], "pyc": [[239, "index-3"]], "protobuf": [[240, "index-1"]], "gil": [[241, "index-0"]], "global lock interpreter": [[241, "index-0"]], "asyncio": [[241, "index-1"]], "gevent": [[241, "index-1"]], "uvloop": [[241, "index-1"]], "event": [[242, "index-2"]], "lock": [[242, "index-3"]], "futures": [[242, "index-5"]], "parall\u00e9lisation": [[242, "index-0"]], "promesses": [[242, "index-5"]], "promises": [[242, "index-5"]], "queue": [[242, "index-4"]], "sleep": [[242, "index-1"]], "synchronisation": [[242, "index-0"]], "thread": [[242, "index-0"]], "t\u00e2ches": [[242, "index-5"]], "verrou": [[242, "index-3"]]}})