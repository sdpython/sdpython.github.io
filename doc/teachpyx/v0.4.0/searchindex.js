Search.setIndex({"docnames": ["CHANGELOGS", "algorithm_culture", "api/classique", "api/datasets", "api/faqs", "api/index", "api/numpysex", "api/practice/rues_paris", "api/practice/tsp_bresenham", "api/practice/tsp_kohonen", "api/practice/tsp_kruskal", "api/tools", "api/video/tsp_kohonen", "api/video/tsp_kruskal", "articles/2022/2022-01-01-assurance", "articles/2022/2022-11-31-route2022", "articles/2022/2022-12-07-cartopy", "articles/2023/2023-08-03-code-jam", "articles/2023/2023-08-09-hermionne", "articles/2023/2023-09-06-ensae", "articles/2023/2023-11-31-route2023", "articles/2024/2024-01-18-wsl", "articles/2024/2024-03-01-route2024", "articles/index", "auto_examples/index", "auto_examples/ml/index", "auto_examples/ml/plot_correlations", "auto_examples/ml/plot_roc", "auto_examples/ml/sg_execution_times", "auto_examples/prog/index", "auto_examples/prog/plot_einstein_riddle", "auto_examples/prog/plot_float_and_double_rouding", "auto_examples/prog/plot_gil_example", "auto_examples/prog/plot_hypercube", "auto_examples/prog/plot_lambda_function", "auto_examples/prog/plot_matador", "auto_examples/prog/plot_numpy_tricks", "auto_examples/prog/plot_pandas_groupby", "auto_examples/prog/plot_partie_dame", "auto_examples/prog/plot_serialisation_examples", "auto_examples/prog/plot_serialisation_protobuf", "auto_examples/prog/plot_tarabiscote", "auto_examples/prog/plot_tsp", "auto_examples/prog/sg_execution_times", "auto_examples/sg_execution_times", "c_data/dataframes", "c_data/enedis_cartes", "c_data/graphes", "c_data/index", "c_data/matrices", "c_data/nb_array", "c_data/nb_dataframe", "c_data/nb_dataframe_matrix_speed", "c_data/nb_numpy", "c_data/nb_pandas", "c_data/numpy_broadcast", "c_expose/finance/finance_autostrat", "c_expose/index", "c_expose/tsp/tsp_kohonen", "c_expose/tsp/tsp_kruskal", "c_ml/index", "c_ml/rappel", "c_ml/regclass", "c_resume/cheat_sheet", "c_resume/conseil_programmes", "c_resume/git", "c_resume/index", "c_resume/jenkins", "c_resume/linux", "c_resume/python_sheet", "i_ex", "i_faq", "i_index", "index", "introduction", "license", "notebook_gallery", "practice/algo-base/BJKST", "practice/algo-base/exercice_compose_connexe", "practice/algo-base/exercice_echelle", "practice/algo-base/exercice_edit_distance", "practice/algo-base/exercice_editdist", "practice/algo-base/exercice_ordonnancement", "practice/algo-base/exercice_plus_grande_somme", "practice/algo-base/exercice_random_graph", "practice/algo-base/exercice_simulation_covid", "practice/algo-base/exercice_simulation_covid_simple", "practice/algo-base/exercice_suffix", "practice/algo-base/exercice_topk", "practice/algo-base/exercice_tsp", "practice/algo-base/exercice_xn", "practice/algo-base/matrix_dictionary", "practice/algo-base/tsp_aparte", "practice/algo-base/tsp_simplifie", "practice/algo-compose/exercice_morse", "practice/algo-compose/paris_parcours", "practice/algo-compose/vigenere", "practice/exams", "practice/exams/interro_rapide_20_minutes_2014_09", "practice/exams/interro_rapide_20_minutes_2014_10", "practice/exams/interro_rapide_20_minutes_2014_11", "practice/exams/interro_rapide_20_minutes_2014_12", "practice/exams/interro_rapide_20_minutes_2015_09", "practice/exams/interro_rapide_20_minutes_2015_11", "practice/exams/td_note_2013_bout_de_code_coloriage", "practice/exams/td_note_2013_coloriage_correction", "practice/exams/td_note_2015", "practice/exams/td_note_2015_rattrapage_enonce", "practice/exams/td_note_2016", "practice/exams/td_note_2017", "practice/exams/td_note_2017_2", "practice/exams/td_note_2018_1", "practice/exams/td_note_2018_2", "practice/exams/td_note_2019_1", "practice/exams/td_note_2019_2", "practice/exams/td_note_2020_1", "practice/exams/td_note_2020_2", "practice/exams/td_note_2021", "practice/exams/td_note_2022", "practice/exams/td_note_2022_rattrapage", "practice/exams/td_note_2022_rattrapage2", "practice/exams/td_note_2023", "practice/exams/td_note_2023-2024", "practice/index_algo", "practice/index_data", "practice/index_exam", "practice/index_ml", "practice/index_python", "practice/ml/artificiel_multiclass", "practice/ml/ml_features_model", "practice/ml/timeseries_ssa", "practice/ml/wines_acp", "practice/ml/winesc_color", "practice/ml/winesc_color_line", "practice/ml/winesc_color_linear", "practice/ml/winesc_color_roc", "practice/ml/winesc_multi", "practice/ml/winesc_multi_stacking", "practice/ml/winesr_knn", "practice/ml/winesr_knn_cross_val", "practice/ml/winesr_knn_eval", "practice/ml/winesr_knn_hyper", "practice/ml/winesr_knn_split", "practice/ml/winesr_knn_split_strat", "practice/ml/winesr_reg", "practice/ml/winesr_reg_poly", "practice/py-base/classe_de", "practice/py-base/classe_iterateur", "practice/py-base/classe_permutation", "practice/py-base/classe_tree", "practice/py-base/classe_user_p", "practice/py-base/classes_2048", "practice/py-base/classes_metro", "practice/py-base/code_liste_tuple", "practice/py-base/code_multinomial", "practice/py-base/coloriage_carre", "practice/py-base/de_rotation", "practice/py-base/exercice_hash", "practice/py-base/exercice_json_xml", "practice/py-base/exercice_pi", "practice/py-base/exercice_regex", "practice/py-base/exercice_serialisation_json", "practice/py-base/histogramme_rapide", "practice/py-base/nbheap", "practice/py-base/pivot_gauss", "practice/py-base/profile_gini", "practice/py-base/profiling_conv", "practice/py-base/profiling_example", "practice/py-base/recherche_dichotomique", "practice/py-base/scrapping", "practice/py-base/structures_donnees_conversion", "practice/py-base/tableau_contingence", "practice/py-base/tests_unitaires", "practice/py-base/tri_nlnd", "practice/tds-algo/decorrelation", "practice/tds-algo/decorrelation_correction", "practice/tds-algo/gentry_integer_encryption", "practice/tds-algo/gentry_integer_encryption_correction", "practice/tds-algo/graph_spectral_clustering", "practice/tds-algo/graph_spectral_clustering_correction", "practice/tds-algo/knn_high_dimension", "practice/tds-algo/knn_high_dimension_correction", "practice/tds-algo/plus_court_chemin", "practice/tds-algo/plus_court_chemin_correction", "practice/tds-algo/puzzle_algo_1", "practice/tds-algo/puzzle_algo_1_correction", "practice/tds-algo/puzzle_algo_2", "practice/tds-algo/puzzle_algo_2_correction", "practice/tds-base/classes_carre_magique", "practice/tds-base/classes_carre_magique_correction", "practice/tds-base/classes_heritage", "practice/tds-base/classes_heritage_correction", "practice/tds-base/dictionnaire_vigenere", "practice/tds-base/dictionnaire_vigenere_correction", "practice/tds-base/integrale_rectangle", "practice/tds-base/integrale_rectangle_correction", "practice/tds-base/j2048", "practice/tds-base/j2048_correction", "practice/tds-base/module_file_regex", "practice/tds-base/module_file_regex_correction", "practice/tds-base/premiers_pas", "practice/tds-base/premiers_pas_correction", "practice/tds-base/pyramide_bigarree", "practice/tds-base/pyramide_bigarree_correction", "practice/tds-base/texte_langue", "practice/tds-base/texte_langue_correction", "practice/tds-base/trie", "practice/tds-base/trie_correction", "practice/tds-base/variable_boucle_tests", "practice/tds-base/variable_boucle_tests_correction", "practice/years/2023/bareme_note_optimisation", "practice/years/2023/editdist", "practice/years/2023/index", "practice/years/2023/pivot_gauss", "practice/years/2023/prefix_search", "practice/years/index", "py/c_classes/classes", "py/c_classes/index", "py/c_classes/questions", "py/c_exception/exception", "py/c_exception/exception_ext", "py/c_exception/index", "py/c_exception/warning", "py/c_gui/index", "py/c_gui/tkinter", "py/c_lang/collections", "py/c_lang/constructions", "py/c_lang/dates", "py/c_lang/encoding", "py/c_lang/index", "py/c_lang/syntaxe", "py/c_lang/types", "py/c_module/files", "py/c_module/index", "py/c_module/module", "py/c_module/serialization", "py/c_parallelisation/index", "py/c_parallelisation/thread", "py/c_regex/index", "py/c_regex/regex", "py/index", "sg_execution_times"], "filenames": ["CHANGELOGS.rst", "algorithm_culture.rst", "api/classique.rst", "api/datasets.rst", "api/faqs.rst", "api/index.rst", "api/numpysex.rst", "api/practice/rues_paris.rst", "api/practice/tsp_bresenham.rst", "api/practice/tsp_kohonen.rst", "api/practice/tsp_kruskal.rst", "api/tools.rst", "api/video/tsp_kohonen.rst", "api/video/tsp_kruskal.rst", "articles/2022/2022-01-01-assurance.rst", "articles/2022/2022-11-31-route2022.rst", "articles/2022/2022-12-07-cartopy.rst", "articles/2023/2023-08-03-code-jam.rst", "articles/2023/2023-08-09-hermionne.rst", "articles/2023/2023-09-06-ensae.rst", "articles/2023/2023-11-31-route2023.rst", "articles/2024/2024-01-18-wsl.rst", "articles/2024/2024-03-01-route2024.rst", "articles/index.rst", "auto_examples/index.rst", "auto_examples/ml/index.rst", "auto_examples/ml/plot_correlations.rst", "auto_examples/ml/plot_roc.rst", "auto_examples/ml/sg_execution_times.rst", "auto_examples/prog/index.rst", "auto_examples/prog/plot_einstein_riddle.rst", "auto_examples/prog/plot_float_and_double_rouding.rst", "auto_examples/prog/plot_gil_example.rst", "auto_examples/prog/plot_hypercube.rst", "auto_examples/prog/plot_lambda_function.rst", "auto_examples/prog/plot_matador.rst", "auto_examples/prog/plot_numpy_tricks.rst", "auto_examples/prog/plot_pandas_groupby.rst", "auto_examples/prog/plot_partie_dame.rst", "auto_examples/prog/plot_serialisation_examples.rst", "auto_examples/prog/plot_serialisation_protobuf.rst", "auto_examples/prog/plot_tarabiscote.rst", "auto_examples/prog/plot_tsp.rst", "auto_examples/prog/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "c_data/dataframes.rst", "c_data/enedis_cartes.ipynb", "c_data/graphes.rst", "c_data/index.rst", "c_data/matrices.rst", "c_data/nb_array.ipynb", "c_data/nb_dataframe.ipynb", "c_data/nb_dataframe_matrix_speed.ipynb", "c_data/nb_numpy.ipynb", "c_data/nb_pandas.ipynb", "c_data/numpy_broadcast.ipynb", "c_expose/finance/finance_autostrat.rst", "c_expose/index.rst", "c_expose/tsp/tsp_kohonen.rst", "c_expose/tsp/tsp_kruskal.rst", "c_ml/index.rst", "c_ml/rappel.rst", "c_ml/regclass.rst", "c_resume/cheat_sheet.rst", "c_resume/conseil_programmes.rst", "c_resume/git.rst", "c_resume/index.rst", "c_resume/jenkins.rst", "c_resume/linux.rst", "c_resume/python_sheet.rst", "i_ex.rst", "i_faq.rst", "i_index.rst", "index.rst", "introduction.rst", "license.rst", "notebook_gallery.rst", "practice/algo-base/BJKST.ipynb", "practice/algo-base/exercice_compose_connexe.ipynb", "practice/algo-base/exercice_echelle.ipynb", "practice/algo-base/exercice_edit_distance.ipynb", "practice/algo-base/exercice_editdist.ipynb", "practice/algo-base/exercice_ordonnancement.ipynb", "practice/algo-base/exercice_plus_grande_somme.ipynb", "practice/algo-base/exercice_random_graph.ipynb", "practice/algo-base/exercice_simulation_covid.ipynb", "practice/algo-base/exercice_simulation_covid_simple.ipynb", "practice/algo-base/exercice_suffix.ipynb", "practice/algo-base/exercice_topk.ipynb", "practice/algo-base/exercice_tsp.ipynb", "practice/algo-base/exercice_xn.ipynb", "practice/algo-base/matrix_dictionary.ipynb", "practice/algo-base/tsp_aparte.ipynb", "practice/algo-base/tsp_simplifie.ipynb", "practice/algo-compose/exercice_morse.ipynb", "practice/algo-compose/paris_parcours.ipynb", "practice/algo-compose/vigenere.ipynb", "practice/exams.rst", "practice/exams/interro_rapide_20_minutes_2014_09.ipynb", "practice/exams/interro_rapide_20_minutes_2014_10.ipynb", "practice/exams/interro_rapide_20_minutes_2014_11.ipynb", "practice/exams/interro_rapide_20_minutes_2014_12.ipynb", "practice/exams/interro_rapide_20_minutes_2015_09.ipynb", "practice/exams/interro_rapide_20_minutes_2015_11.ipynb", "practice/exams/td_note_2013_bout_de_code_coloriage.ipynb", "practice/exams/td_note_2013_coloriage_correction.ipynb", "practice/exams/td_note_2015.ipynb", "practice/exams/td_note_2015_rattrapage_enonce.ipynb", "practice/exams/td_note_2016.ipynb", "practice/exams/td_note_2017.ipynb", "practice/exams/td_note_2017_2.ipynb", "practice/exams/td_note_2018_1.ipynb", "practice/exams/td_note_2018_2.ipynb", "practice/exams/td_note_2019_1.ipynb", "practice/exams/td_note_2019_2.ipynb", "practice/exams/td_note_2020_1.ipynb", "practice/exams/td_note_2020_2.ipynb", "practice/exams/td_note_2021.ipynb", "practice/exams/td_note_2022.ipynb", "practice/exams/td_note_2022_rattrapage.ipynb", "practice/exams/td_note_2022_rattrapage2.ipynb", "practice/exams/td_note_2023.ipynb", "practice/exams/td_note_2023-2024.ipynb", "practice/index_algo.rst", "practice/index_data.rst", "practice/index_exam.rst", "practice/index_ml.rst", "practice/index_python.rst", "practice/ml/artificiel_multiclass.ipynb", "practice/ml/ml_features_model.ipynb", "practice/ml/timeseries_ssa.ipynb", "practice/ml/wines_acp.ipynb", "practice/ml/winesc_color.ipynb", "practice/ml/winesc_color_line.ipynb", "practice/ml/winesc_color_linear.ipynb", "practice/ml/winesc_color_roc.ipynb", "practice/ml/winesc_multi.ipynb", "practice/ml/winesc_multi_stacking.ipynb", "practice/ml/winesr_knn.ipynb", "practice/ml/winesr_knn_cross_val.ipynb", "practice/ml/winesr_knn_eval.ipynb", "practice/ml/winesr_knn_hyper.ipynb", "practice/ml/winesr_knn_split.ipynb", "practice/ml/winesr_knn_split_strat.ipynb", "practice/ml/winesr_reg.ipynb", "practice/ml/winesr_reg_poly.ipynb", "practice/py-base/classe_de.ipynb", "practice/py-base/classe_iterateur.ipynb", "practice/py-base/classe_permutation.ipynb", "practice/py-base/classe_tree.ipynb", "practice/py-base/classe_user_p.ipynb", "practice/py-base/classes_2048.ipynb", "practice/py-base/classes_metro.ipynb", "practice/py-base/code_liste_tuple.ipynb", "practice/py-base/code_multinomial.ipynb", "practice/py-base/coloriage_carre.ipynb", "practice/py-base/de_rotation.ipynb", "practice/py-base/exercice_hash.ipynb", "practice/py-base/exercice_json_xml.ipynb", "practice/py-base/exercice_pi.ipynb", "practice/py-base/exercice_regex.ipynb", "practice/py-base/exercice_serialisation_json.ipynb", "practice/py-base/histogramme_rapide.ipynb", "practice/py-base/nbheap.ipynb", "practice/py-base/pivot_gauss.ipynb", "practice/py-base/profile_gini.ipynb", "practice/py-base/profiling_conv.ipynb", "practice/py-base/profiling_example.ipynb", "practice/py-base/recherche_dichotomique.ipynb", "practice/py-base/scrapping.ipynb", "practice/py-base/structures_donnees_conversion.ipynb", "practice/py-base/tableau_contingence.ipynb", "practice/py-base/tests_unitaires.ipynb", "practice/py-base/tri_nlnd.ipynb", "practice/tds-algo/decorrelation.ipynb", "practice/tds-algo/decorrelation_correction.ipynb", "practice/tds-algo/gentry_integer_encryption.ipynb", "practice/tds-algo/gentry_integer_encryption_correction.ipynb", "practice/tds-algo/graph_spectral_clustering.ipynb", "practice/tds-algo/graph_spectral_clustering_correction.ipynb", "practice/tds-algo/knn_high_dimension.ipynb", "practice/tds-algo/knn_high_dimension_correction.ipynb", "practice/tds-algo/plus_court_chemin.ipynb", "practice/tds-algo/plus_court_chemin_correction.ipynb", "practice/tds-algo/puzzle_algo_1.ipynb", "practice/tds-algo/puzzle_algo_1_correction.ipynb", "practice/tds-algo/puzzle_algo_2.ipynb", "practice/tds-algo/puzzle_algo_2_correction.ipynb", "practice/tds-base/classes_carre_magique.ipynb", "practice/tds-base/classes_carre_magique_correction.ipynb", "practice/tds-base/classes_heritage.ipynb", "practice/tds-base/classes_heritage_correction.ipynb", "practice/tds-base/dictionnaire_vigenere.ipynb", "practice/tds-base/dictionnaire_vigenere_correction.ipynb", "practice/tds-base/integrale_rectangle.ipynb", "practice/tds-base/integrale_rectangle_correction.ipynb", "practice/tds-base/j2048.ipynb", "practice/tds-base/j2048_correction.ipynb", "practice/tds-base/module_file_regex.ipynb", "practice/tds-base/module_file_regex_correction.ipynb", "practice/tds-base/premiers_pas.ipynb", "practice/tds-base/premiers_pas_correction.ipynb", "practice/tds-base/pyramide_bigarree.ipynb", "practice/tds-base/pyramide_bigarree_correction.ipynb", "practice/tds-base/texte_langue.ipynb", "practice/tds-base/texte_langue_correction.ipynb", "practice/tds-base/trie.ipynb", "practice/tds-base/trie_correction.ipynb", "practice/tds-base/variable_boucle_tests.ipynb", "practice/tds-base/variable_boucle_tests_correction.ipynb", "practice/years/2023/bareme_note_optimisation.ipynb", "practice/years/2023/editdist.ipynb", "practice/years/2023/index.rst", "practice/years/2023/pivot_gauss.ipynb", "practice/years/2023/prefix_search.ipynb", "practice/years/index.rst", "py/c_classes/classes.rst", "py/c_classes/index.rst", "py/c_classes/questions.rst", "py/c_exception/exception.rst", "py/c_exception/exception_ext.rst", "py/c_exception/index.rst", "py/c_exception/warning.rst", "py/c_gui/index.rst", "py/c_gui/tkinter.rst", "py/c_lang/collections.rst", "py/c_lang/constructions.rst", "py/c_lang/dates.rst", "py/c_lang/encoding.rst", "py/c_lang/index.rst", "py/c_lang/syntaxe.rst", "py/c_lang/types.rst", "py/c_module/files.rst", "py/c_module/index.rst", "py/c_module/module.rst", "py/c_module/serialization.rst", "py/c_parallelisation/index.rst", "py/c_parallelisation/thread.rst", "py/c_regex/index.rst", "py/c_regex/regex.rst", "py/index.rst", "sg_execution_times.rst"], "titles": ["Change Logs", "Survol algorithmique", "examples.construction_classique", "Jeux de donn\u00e9es", "faq", "Code inclus dans cette librairie", "examples.numpysex", "teachpyx.practice.rues_paris", "teachpyx.practice.tsp_bresenham", "teachpyx.practice.tsp_kohonen", "teachpyx.practice.tsp_kruskal", "tools", "teachpyx.video.tsp_kohonen_pygame", "teachpyx.video.tsp_kruskal", "Assurance auto", "2022-11-31 : rappel feuille de route 2022", "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)", "2023-08-03 : Code Jam", "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne", "2023-09-06 : ENSAE", "2023-11-31 : rappel feuille de route 2023", "2024-01-18 : WSL - nettoyage", "2024-03-01 : feuille de route 2024", "Collections d\u2019articles p\u00e9rissables", "Gallerie d\u2019exemples", "Gallerie d\u2019exemples sur le machine learning", "Corr\u00e9lations", "Receiver Operating Characteristic (ROC)", "Computation times", "Gallerie d\u2019exemples sur la programmation", "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution", "Float Conversion", "Le GIL", "Hypercube et autres exercices", "Astuces avec les lambda functions", "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations", "Points d\u2019impl\u00e9mentation avec numpy", "Pandas et groupby", "Parties de dames", "S\u00e9rialisation", "S\u00e9rialisation avec protobuf", "Exercices expliqu\u00e9s de programmation", "R\u00e9flexions autour du voyage de commerce (TSP)", "Computation times", "Computation times", "Dataframes", "Tracer une carte en Python", "Graphes", "Matrices et DataFrames", "Calcul matriciel", "Calcul Matriciel, Optimisation", "DataFrame et Graphes", "Mesures de vitesse sur les dataframes", "Calcul matriciel avec numpy (exercices)", "Manipulation de donn\u00e9es avec pandas (exercices)", "Numpy et tableau de contingence", "Strat\u00e9gie automatique de trading en finance", "Expos\u00e9s", "Circuit hamiltonien et Kohonen", "Circuit hamiltonien et Kruskal", "Machine Learning", "Quelques rappels", "Classification et r\u00e9gression", "Cheat Sheets", "Quelques conseils pour \u00e9crire un programme", "Cheat Sheet on Git", "Pr\u00e9cis", "Cheat Sheet on Jenkins", "Cheat Sheet on Linux", "Cheat sheet: Python", "Syntaxes et d\u00e9finitions", "FAQ", "En diagonal", "Apprendre la programmation avec Python", "Introduction", "License", "Tous les notebooks", "Algorithmes de streaming, BJKST", "Graphe et Composantes connexes", "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.", "Distance d\u2019\u00e9dition", "Distance entre deux mots de m\u00eame longueur et tests unitaires", "Probl\u00e8me d\u2019ordonnancement", "La sous-s\u00e9quence de plus grande somme", "Graphes al\u00e9atoires", "Simulation COVID", "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)", "Jeux de dictionnaires, plus grand suffixe commun", "Les k premiers \u00e9l\u00e9ments (top k)", "TSP - Traveling Salesman Problem", "Calculer x**n le plus rapidement possible", "Produit matriciel avec une matrice creuse", "Apart\u00e9 sur le voyageur de commerce", "Plus court chemin passant par tous les noeuds d\u2019un graphe", "D\u00e9coder du Morse sans espaces", "Parcourir les rues de Paris", "Casser le code de Vigen\u00e8re", "Exercices minut\u00e9s", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015", "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015", "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)", "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)", "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014", "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)", "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015", "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016", "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)", "1A.e - Enonc\u00e9 23 octobre 2018 (1)", "1A.e - Enonc\u00e9 23 octobre 2018 (2)", "1A.e - Enonc\u00e9 22 octobre 2019 (1)", "1A.e - Enonc\u00e9 22 octobre 2019 (2)", "1A - Enonc\u00e9 24 novembre 2020", "1A - Enonc\u00e9 3 novembre 2021", "1A - Enonc\u00e9 15 novembre 2021 - rattrapage", "1A - Enonc\u00e9 3 mars 2022- rattrapage", "1A - Enonc\u00e9 26 octobre 2022", "1A - Enonc\u00e9 8 novembre 2023-2024", "Algorithmes", "Numpy / Pandas", "S\u00e9ances minut\u00e9es", "Machine Learning", "Exercices sur le langage python", "Classification multi-classe et jeu mal balanc\u00e9", "Features ou mod\u00e8le", "Single Spectrum Analysis (SSA)", "ACP - projection", "R\u00e9gression logistique et courbe ROC", "R\u00e9gression logistique en 2D", "Plusieurs mod\u00e8les, donn\u00e9es disjointes", "Classifications et courbes ROC", "Classification multi-classe", "Classification multi-classe et stacking", "Plus proches voisins", "Validation crois\u00e9e (cross-validation)", "Plus proches voisins - \u00e9valuation", "S\u00e9lection des hyper-param\u00e8tres", "Base d\u2019apprentissage et de test", "D\u00e9coupage stratifi\u00e9 apprentissage / test", "Pr\u00e9diction de la note des vins", "R\u00e9gression polyn\u00f4miale et pipeline", "Jeu de d\u00e9, rotation sur un circuit (classes)", "It\u00e9rateur", "Classe Permutation et d\u00e9composition en transitions", "Une classe pour repr\u00e9senter un arbre", "Classe, H\u00e9ritage, calcule d\u2019une distance", "2048 et les classes", "Un bref aper\u00e7u des classes", "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations", "Simuler une loi multinomiale", "Jeux de coloriage", "Jeu de d\u00e9, rotation sur un circuit", "R\u00e9partition, table de hashage", "JSON - XML", "Calculs de surface et autres calculs", "Expressions r\u00e9guli\u00e8res", "S\u00e9rialisation avec JSON, XML, pickle", "Histogramme et dictionnaire", "Heap", "Pivot de gauss avec numpy", "Profiling la fonction Gini", "Profiling, application \u00e0 la convolution", "Exemple de profiling", "Recherche dichotomique", "Web-Scraping - pokemon", "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre", "Calculer un chi 2 sur un tableau de contingence", "Tests unitaires", "Tri plus rapide que pr\u00e9vu", "D\u00e9corr\u00e9lation de variables al\u00e9atoires", "D\u00e9corr\u00e9lation de variables al\u00e9atoires - correction", "Cryptage homomorphic de Craig Gentry", "Cryptage homomorphic de Craig Gentry - correction", "Spectral Clustering", "Spectral Clustering - correction", "Plus proches voisins en grande dimension", "Plus proches voisins en grande dimension - correction", "Programmation dynamique et plus court chemin", "Programmation dynamique et plus court chemin (correction)", "Puzzles algorithmiques (1)", "Puzzles algorithmes (1) - correction", "Puzzles algorithmiques (2)", "Puzzles algorithmes (2) - correction", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)", "Classes, h\u00e9ritage", "Classes, h\u00e9ritage (correction)", "Dictionnaires, fonctions, code de Vigen\u00e8re", "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)", "Int\u00e9grale et la m\u00e9thode des rectangles", "Int\u00e9grale et la m\u00e9thode des rectangles - correction", "2048 - strat\u00e9gie gagnante", "2048 - strat\u00e9gie gagnante - correction", "Modules, fichiers, expressions r\u00e9guli\u00e8res", "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)", "Premiers pas en Python", "Premiers pas en Python (correction)", "Tracer une pyramide bigarr\u00e9e", "Tracer une pyramide bigarr\u00e9e - correction", "Deviner la langue d\u2019un texte", "Deviner la langue d\u2019un texte (correction)", "Arbre et Trie", "Arbre et Trie (correction)", "Variables, boucles, tests", "Variables, boucles, tests (correction)", "Optimiser la note moyenne", "Distance d\u2019\u00e9dition (4 octobre)", "2023", "Pivot de Gauss", "Recherche de pr\u00e9fixes", "Notebooks \u00e9crits durant les s\u00e9ances", "Classes", "Classes", "Questions", "Exceptions", "Usage", "Exceptions", "Warning et logging", "Interfaces graphiques", "tkinter", "Constructions classiques", "Constructions classiques", "Dates", "Encoding et jeux de caract\u00e8res", "Variables et fonctions", "Syntaxe du langage Python (boucles, tests, fonctions)", "Types et variables du langage python", "Fichiers", "Entr\u00e9es, Sorties, Modules", "Module ou extension", "S\u00e9rialisation", "Parall\u00e9lisation", "Threads", "Expressions r\u00e9guli\u00e8res", "Expressions r\u00e9guli\u00e8res", "Le langage Python", "Computation times"], "terms": {"55": [0, 33, 46, 50, 51, 54, 79, 95, 109, 110, 119, 136, 145, 151, 195, 201, 205, 231], "add": [0, 11, 40, 51, 67, 77, 94, 109, 150, 224], "one": [0, 1, 4, 6, 10, 11, 49, 50, 51, 53, 109, 110, 128, 134, 142, 166, 167, 186, 187, 224], "map": [0, 2, 32, 46, 58, 103, 162, 173, 186, 187, 193, 207, 224, 226, 230, 237], "54": [0, 50, 51, 54, 56, 95, 110, 136, 137, 138, 139, 151, 205, 216], "content": [0, 11, 40, 54, 59, 62, 69, 108, 199, 220, 232], "for": [0, 1, 2, 4, 11, 16, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 50, 51, 52, 54, 55, 56, 58, 64, 65, 66, 67, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 219, 220, 222, 224, 225, 226, 227, 231, 232, 234, 237, 239, 241], "machin": [0, 1, 6, 14, 19, 22, 53, 56, 58, 61, 71, 72, 73, 74, 88, 92, 129, 155, 158, 166, 207, 237], "learning": [0, 1, 6, 14, 19, 22, 50, 56, 61, 71, 72, 73, 88, 129, 166, 207], "47": [0, 46, 50, 51, 54, 110, 136, 145, 151, 166, 173, 178, 179, 180, 195, 230, 239], "helper": 0, "to": [0, 1, 4, 6, 10, 11, 13, 16, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 53, 54, 56, 67, 68, 71, 75, 85, 95, 102, 109, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 158, 160, 166, 180, 186, 187, 193, 206, 216, 219, 220, 224, 230, 231, 232, 234, 239], "creat": [0, 4, 11, 46, 50, 56, 71], "a": [0, 1, 2, 6, 8, 9, 10, 11, 14, 18, 20, 27, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 69, 70, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 214, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238], "video": [0, 5, 72], "24": [0, 30, 36, 46, 50, 51, 52, 53, 54, 55, 56, 69, 77, 83, 84, 85, 88, 96, 97, 99, 100, 106, 108, 110, 111, 115, 116, 118, 122, 130, 132, 133, 134, 135, 136, 142, 144, 145, 158, 166, 170, 175, 178, 179, 188, 192, 195, 198, 199, 207, 208, 227], "25": [0, 9, 11, 12, 26, 30, 41, 50, 51, 53, 54, 62, 77, 78, 84, 85, 88, 93, 95, 96, 100, 106, 108, 109, 111, 115, 116, 118, 122, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 144, 145, 158, 159, 166, 167, 170, 171, 178, 179, 188, 192, 195, 198, 199, 201, 206, 207, 208, 216, 220, 227], "26": [0, 46, 50, 51, 53, 54, 55, 56, 69, 77, 84, 85, 88, 89, 94, 95, 96, 97, 99, 100, 106, 108, 114, 115, 116, 118, 122, 128, 130, 132, 134, 136, 138, 139, 144, 145, 147, 157, 158, 166, 170, 173, 178, 179, 188, 192, 193, 195, 198, 205, 206, 207, 214, 216, 220, 227], "27": [0, 2, 46, 50, 51, 53, 54, 55, 77, 84, 88, 95, 97, 100, 106, 110, 113, 115, 116, 117, 118, 122, 130, 132, 134, 136, 145, 147, 158, 166, 170, 178, 179, 188, 192, 195, 198, 207, 216, 226, 227], "28": [0, 35, 46, 50, 51, 53, 54, 55, 62, 69, 77, 84, 88, 93, 95, 100, 106, 113, 115, 116, 117, 118, 132, 134, 136, 138, 139, 141, 145, 147, 158, 161, 166, 169, 178, 179, 181, 188, 192, 195, 198, 199, 201, 207, 227], "29": [0, 46, 50, 51, 53, 54, 55, 77, 84, 93, 95, 100, 106, 108, 115, 117, 118, 131, 132, 136, 145, 147, 158, 166, 178, 179, 188, 192, 198, 199, 207, 227, 230], "30": [0, 30, 36, 42, 50, 51, 53, 54, 56, 77, 84, 85, 95, 96, 100, 106, 108, 109, 117, 118, 128, 129, 130, 131, 134, 136, 144, 145, 147, 150, 155, 158, 164, 166, 178, 179, 180, 192, 198, 199, 205, 207, 208, 224, 227, 231, 239], "31": [0, 19, 23, 36, 46, 50, 51, 53, 54, 56, 70, 77, 93, 95, 100, 106, 114, 117, 118, 128, 134, 137, 141, 144, 145, 147, 158, 165, 166, 178, 179, 192, 195, 199, 207, 208, 216, 227, 230], "32": [0, 2, 31, 36, 50, 51, 53, 54, 77, 83, 84, 90, 93, 95, 100, 106, 133, 136, 137, 144, 145, 147, 151, 157, 158, 166, 167, 170, 178, 179, 199, 208, 226, 231, 232], "33": [0, 36, 46, 50, 51, 53, 54, 83, 100, 106, 114, 120, 133, 134, 137, 143, 144, 145, 147, 157, 158, 166, 178, 179, 192, 195, 208], "34": [0, 26, 36, 46, 50, 51, 53, 54, 56, 62, 70, 79, 84, 87, 93, 95, 100, 102, 106, 108, 119, 128, 134, 138, 139, 144, 158, 160, 161, 166, 178, 179, 183, 192, 199, 205, 208, 216], "35": [0, 46, 50, 51, 53, 54, 56, 70, 71, 77, 95, 100, 106, 122, 128, 134, 141, 144, 145, 147, 151, 154, 166, 173, 178, 179, 192, 199, 205], "36": [0, 31, 46, 50, 51, 54, 55, 56, 95, 106, 114, 122, 137, 166, 178, 179, 192, 199, 201, 213, 227, 231], "ajout": [0, 2, 4, 7, 9, 10, 33, 41, 46, 50, 51, 53, 56, 59, 62, 69, 70, 71, 74, 81, 83, 85, 88, 95, 98, 99, 100, 101, 102, 105, 106, 108, 109, 111, 113, 114, 115, 116, 118, 120, 129, 134, 137, 145, 146, 153, 158, 161, 166, 168, 170, 173, 188, 189, 191, 193, 197, 198, 200, 201, 205, 207, 208, 217, 218, 219, 220, 224, 227, 231, 235, 237, 239], "exercic": [0, 1, 17, 19, 24, 29, 38, 43, 45, 48, 49, 55, 90, 107, 123, 125, 161, 169, 202, 203, 216, 230, 241], "exist": [0, 1, 2, 4, 10, 14, 30, 38, 39, 40, 42, 50, 51, 53, 54, 56, 58, 59, 61, 62, 64, 69, 70, 71, 74, 78, 83, 84, 85, 89, 90, 92, 95, 103, 121, 146, 147, 148, 150, 161, 166, 170, 171, 173, 178, 179, 182, 183, 185, 186, 187, 188, 192, 198, 199, 201, 207, 208, 214, 216, 219, 220, 224, 226, 228, 230, 231, 232, 234, 235, 236, 237], "22": [0, 16, 30, 36, 46, 50, 51, 52, 53, 54, 55, 77, 84, 85, 88, 95, 97, 100, 103, 106, 108, 109, 110, 111, 114, 117, 118, 122, 128, 132, 134, 135, 136, 141, 144, 145, 158, 166, 169, 170, 171, 175, 178, 179, 181, 188, 192, 195, 198, 207, 208, 220, 227, 231, 237, 239], "exempl": [0, 2, 4, 27, 30, 33, 40, 41, 42, 51, 58, 59, 60, 61, 62, 64, 69, 71, 72, 73, 74, 77, 81, 86, 94, 96, 99, 102, 103, 106, 108, 111, 112, 115, 116, 121, 127, 128, 129, 132, 138, 140, 143, 144, 147, 153, 157, 165, 169, 170, 172, 173, 174, 182, 184, 187, 188, 190, 192, 194, 198, 199, 202, 203, 206, 207, 208, 210, 220, 221, 224, 225, 226, 227, 228, 235, 237], "mathador": [0, 24, 29, 43, 127, 241], "21": [0, 1, 30, 31, 36, 46, 50, 51, 53, 54, 77, 79, 84, 85, 88, 93, 97, 100, 102, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 128, 132, 135, 136, 137, 142, 143, 144, 145, 154, 155, 158, 164, 165, 166, 170, 175, 178, 179, 181, 188, 192, 195, 198, 201, 207, 208, 227, 230, 237, 239], "refactoring": 0, "L": [1, 2, 4, 10, 14, 16, 18, 21, 24, 29, 33, 38, 40, 41, 43, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 64, 68, 69, 71, 73, 74, 77, 78, 79, 83, 84, 85, 86, 87, 88, 90, 94, 95, 100, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 130, 131, 134, 141, 144, 146, 147, 148, 149, 152, 154, 155, 157, 161, 166, 168, 172, 173, 174, 175, 179, 181, 182, 183, 187, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 216, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 237, 239, 241], "part": [1, 2, 6, 10, 14, 20, 24, 27, 29, 30, 33, 35, 41, 42, 43, 45, 46, 49, 51, 56, 59, 61, 62, 64, 69, 70, 74, 77, 83, 84, 85, 86, 87, 88, 89, 95, 100, 107, 108, 109, 111, 112, 114, 115, 116, 117, 121, 127, 130, 131, 132, 133, 134, 147, 150, 151, 154, 161, 165, 166, 168, 170, 172, 173, 174, 175, 181, 182, 184, 185, 186, 187, 190, 191, 192, 195, 197, 198, 199, 204, 205, 206, 207, 210, 216, 219, 220, 224, 226, 227, 230, 231, 232, 234, 235, 237, 239, 241], "math\u00e9mat": [1, 2, 19, 51, 60, 62, 69, 74, 85, 100, 132, 149, 161, 175, 216, 226, 230, 231, 234], "On": [1, 2, 4, 7, 14, 27, 30, 32, 33, 34, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 168, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 218, 219, 220, 222, 224, 225, 226, 227, 230, 231, 232, 234, 235, 237, 239], "toujour": [1, 2, 4, 6, 14, 27, 33, 39, 42, 50, 51, 53, 56, 58, 59, 60, 62, 64, 69, 70, 71, 74, 77, 79, 81, 84, 85, 87, 88, 95, 98, 101, 108, 118, 119, 128, 129, 132, 135, 147, 149, 150, 152, 155, 161, 165, 168, 170, 178, 181, 188, 190, 192, 193, 198, 199, 204, 205, 207, 214, 216, 218, 219, 220, 224, 226, 230, 231, 232, 234, 237, 239], "\u00e9tat": [1, 4, 51, 61, 71, 91, 101, 107, 108, 155, 200, 224, 230, 237], "initial": [1, 7, 42, 50, 51, 56, 59, 62, 77, 88, 95, 108, 129, 131, 156, 161, 166, 170, 173, 184, 193, 198, 207, 214, 220, 232, 234], "arriv": [1, 2, 27, 30, 51, 56, 59, 79, 83, 85, 95, 100, 137, 147, 199, 200, 216, 219, 220, 224, 226, 230, 231, 232, 237], "apres": [1, 2, 7, 14, 27, 30, 32, 38, 41, 42, 51, 52, 56, 58, 59, 61, 64, 69, 71, 84, 88, 91, 93, 94, 100, 101, 106, 107, 108, 113, 114, 115, 116, 118, 141, 157, 159, 161, 178, 179, 182, 190, 192, 198, 199, 207, 210, 216, 220, 224, 230, 231, 232, 234, 237, 239], "ser": [1, 2, 4, 14, 33, 38, 39, 46, 59, 60, 61, 62, 69, 70, 71, 77, 81, 83, 88, 93, 94, 95, 100, 106, 108, 109, 117, 121, 132, 134, 137, 143, 148, 157, 168, 178, 179, 183, 188, 193, 195, 199, 200, 204, 206, 207, 208, 216, 219, 220, 222, 224, 226, 230, 231, 232, 234, 237], "oper": [1, 2, 4, 19, 24, 29, 31, 41, 43, 54, 56, 59, 61, 71, 99, 102, 106, 121, 127, 129, 150, 166, 170, 173, 176, 177, 199, 200, 201, 207, 208, 217, 219, 224, 226, 227, 231, 232, 235, 241], "connu": [1, 50, 56, 58, 61, 62, 74, 77, 83, 84, 85, 95, 138, 172, 193, 208, 216, 224, 230, 232], "final": [1, 51, 52, 54, 56, 58, 69, 77, 91, 106, 109, 110, 134, 137, 144, 151, 166, 169, 170, 206, 216, 222, 230, 231, 234, 237, 239], "Cette": [1, 2, 4, 21, 41, 51, 56, 58, 59, 61, 62, 69, 70, 71, 74, 77, 80, 85, 91, 94, 95, 96, 99, 100, 101, 108, 129, 132, 144, 146, 148, 154, 157, 159, 163, 166, 170, 174, 190, 199, 204, 206, 207, 210, 216, 219, 220, 224, 225, 226, 228, 230, 231, 232, 234, 235, 236, 237], "d\u00e9pend": [1, 14, 33, 41, 51, 56, 58, 59, 62, 69, 74, 82, 85, 87, 91, 101, 108, 128, 130, 134, 154, 155, 157, 159, 161, 170, 181, 188, 192, 193, 207, 208, 216, 222, 227, 230, 231, 234, 237], "Elle": [1, 2, 4, 27, 40, 53, 54, 56, 61, 64, 69, 70, 71, 74, 79, 83, 95, 98, 110, 122, 129, 132, 147, 154, 161, 163, 166, 167, 170, 182, 185, 190, 192, 195, 216, 224, 230, 232, 234, 235, 237, 239], "peut": [1, 2, 4, 6, 7, 10, 14, 18, 27, 30, 33, 38, 39, 40, 41, 42, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 79, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 99, 100, 102, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 128, 129, 130, 131, 132, 135, 137, 139, 140, 141, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 165, 168, 170, 171, 172, 173, 174, 178, 179, 182, 183, 185, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 206, 207, 208, 214, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 237, 239], "inclur": [1, 39, 46, 69, 83, 166, 216, 218, 224, 230, 231, 234, 239], "al\u00e9atoir": [1, 3, 9, 10, 27, 33, 49, 51, 53, 56, 58, 59, 62, 70, 77, 83, 85, 88, 91, 93, 107, 110, 115, 116, 122, 123, 139, 143, 154, 171, 176, 177, 178, 181, 182, 195, 197, 198, 216, 234, 237], "parl": [1, 42, 50, 56, 60, 94, 130, 147, 199, 235], "lorsqu": [1, 2, 4, 9, 14, 27, 33, 38, 39, 41, 42, 50, 51, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 80, 81, 82, 88, 89, 90, 94, 98, 100, 106, 108, 110, 111, 122, 128, 129, 143, 147, 148, 150, 152, 154, 161, 166, 167, 168, 170, 178, 179, 183, 188, 189, 190, 192, 198, 200, 204, 206, 207, 208, 209, 214, 216, 219, 220, 222, 226, 228, 230, 231, 232, 234, 235, 237, 239], "d\u00e9montr": [1, 41, 61, 132, 182], "s\u00e9quenc": [1, 33, 61, 77, 78, 80, 84, 94, 123, 161, 173, 176, 177, 182, 187, 198, 205, 208, 228, 230, 235, 237, 239], "produit": [1, 2, 4, 6, 10, 39, 42, 46, 49, 50, 56, 60, 69, 71, 78, 100, 101, 103, 111, 112, 113, 114, 123, 128, 129, 137, 144, 145, 146, 148, 150, 166, 190, 191, 201, 208, 216, 218, 219, 220, 222, 224, 226, 230, 232, 235, 237], "men": [1, 41, 56, 60, 108, 111, 112, 157, 199, 216, 224, 237], "souhait": [1, 2, 4, 14, 33, 34, 38, 50, 51, 56, 62, 69, 71, 79, 81, 83, 84, 88, 95, 103, 106, 108, 110, 111, 112, 119, 121, 129, 132, 139, 148, 151, 155, 157, 165, 172, 178, 182, 184, 185, 188, 190, 192, 195, 196, 198, 199, 208, 216, 220, 222, 224, 226, 230, 231, 232, 234], "Il": [1, 2, 4, 14, 16, 17, 18, 21, 30, 33, 35, 37, 38, 39, 40, 41, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 130, 131, 132, 134, 137, 139, 140, 145, 146, 147, 149, 153, 155, 156, 157, 160, 161, 165, 166, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 219, 220, 222, 224, 225, 226, 228, 230, 231, 232, 234, 235, 236, 237, 239], "grand": [1, 7, 10, 15, 17, 18, 33, 41, 42, 46, 50, 51, 53, 54, 56, 58, 59, 61, 62, 64, 69, 74, 78, 79, 85, 88, 89, 91, 93, 95, 96, 100, 101, 106, 107, 108, 109, 111, 112, 116, 119, 121, 122, 123, 129, 130, 131, 132, 144, 145, 148, 153, 154, 160, 163, 165, 166, 170, 178, 193, 195, 198, 199, 208, 210, 214, 216, 218, 219, 224, 228, 230, 231, 232, 234, 237, 239], "variet": [1, 54, 198], "d\u00e9j\u00e0": [1, 42, 50, 51, 56, 59, 62, 69, 70, 74, 84, 88, 94, 95, 113, 114, 118, 173, 192, 198, 199, 207, 208, 216, 219, 230, 231, 232, 234, 235, 237, 239], "r\u00e9solus": [1, 224], "util": [1, 33, 41, 50, 51, 56, 58, 63, 64, 69, 81, 85, 88, 92, 110, 121, 123, 129, 146, 149, 160, 180, 190, 192, 198, 216, 219, 222, 224, 230, 231, 232, 237], "conna\u00eetr": [1, 2, 4, 14, 52, 61, 69, 71, 79, 91, 95, 119, 214, 216, 224, 225, 226, 231, 232, 239], "C": [1, 2, 4, 6, 11, 14, 18, 21, 27, 32, 35, 39, 40, 41, 42, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 74, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 100, 103, 106, 108, 109, 111, 114, 115, 116, 119, 121, 122, 129, 131, 132, 134, 137, 138, 139, 140, 146, 147, 148, 149, 154, 155, 157, 158, 159, 161, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 188, 192, 193, 195, 197, 198, 199, 204, 206, 207, 208, 210, 214, 216, 217, 219, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 239], "aut": [1, 9, 56, 59, 60, 61, 69, 81, 84, 99, 106, 110, 111, 119, 129, 145, 183, 188, 190, 192, 193, 216, 224, 230, 231, 232, 237], "outil": [1, 5, 14, 46, 56, 60, 69, 74, 78, 146, 158, 166, 180, 198, 199, 216, 219], "disponibl": [1, 16, 39, 51, 53, 54, 56, 62, 69, 73, 74, 95, 109, 117, 129, 132, 153, 199, 216, 224, 231, 234], "cr\u00e9": [1, 4, 6, 14, 32, 36, 39, 41, 49, 50, 52, 54, 56, 61, 69, 70, 71, 74, 78, 82, 84, 85, 91, 95, 98, 100, 106, 115, 116, 122, 130, 137, 145, 147, 148, 150, 151, 170, 172, 173, 174, 175, 178, 180, 181, 182, 188, 190, 192, 193, 197, 199, 205, 207, 208, 216, 219, 222, 230, 231, 232, 237], "propr": [1, 4, 39, 41, 46, 50, 53, 54, 56, 69, 70, 71, 84, 94, 130, 131, 150, 174, 175, 178, 179, 216, 221, 222, 224, 230, 231, 235, 237], "Qu": [1, 42, 95, 154, 172, 180, 195, 207, 208], "raison": [1, 6, 14, 33, 42, 54, 56, 61, 62, 64, 69, 71, 93, 98, 100, 103, 106, 108, 121, 132, 139, 142, 181, 183, 188, 199, 204, 208, 216, 224, 230], "fair": [1, 2, 4, 14, 27, 39, 40, 41, 46, 48, 50, 51, 53, 56, 58, 59, 61, 62, 64, 69, 70, 71, 74, 77, 78, 79, 81, 82, 85, 86, 88, 89, 91, 94, 95, 97, 103, 108, 109, 111, 112, 113, 114, 118, 131, 134, 137, 138, 144, 146, 148, 152, 154, 155, 160, 161, 165, 166, 170, 171, 173, 181, 182, 185, 190, 195, 197, 198, 199, 200, 201, 205, 207, 208, 211, 216, 219, 220, 224, 226, 227, 228, 230, 231, 232, 234, 236, 237, 239], "suppos": [1, 2, 7, 8, 10, 14, 27, 38, 54, 56, 58, 59, 61, 62, 69, 74, 79, 82, 83, 85, 88, 89, 94, 95, 96, 99, 106, 108, 109, 110, 111, 112, 117, 118, 119, 121, 122, 134, 135, 155, 159, 168, 170, 172, 173, 182, 183, 184, 190, 193, 195, 207, 216, 224, 226, 230, 231, 232, 237], "dispos": [1, 14, 56, 62, 69, 95, 106, 108, 109, 110, 115, 116, 121, 129, 165, 182, 184, 188, 214, 216, 220, 224, 231, 232, 234], "seul": [1, 2, 10, 14, 16, 18, 30, 33, 38, 50, 51, 52, 53, 54, 56, 59, 60, 62, 69, 74, 77, 78, 84, 85, 87, 88, 92, 94, 95, 100, 103, 110, 113, 114, 117, 121, 131, 137, 147, 149, 154, 158, 159, 161, 170, 174, 178, 179, 181, 184, 188, 189, 190, 192, 193, 198, 199, 200, 207, 208, 210, 216, 219, 224, 226, 228, 230, 231, 232, 234, 235, 237, 239], "La": [1, 2, 4, 9, 10, 12, 13, 14, 16, 27, 33, 34, 38, 39, 41, 42, 46, 48, 50, 51, 52, 56, 58, 59, 62, 64, 69, 70, 71, 74, 77, 79, 80, 81, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 150, 151, 152, 154, 156, 158, 159, 160, 161, 163, 165, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 183, 188, 189, 190, 192, 194, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 211, 213, 214, 216, 219, 220, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239], "m\u00e9moir": [1, 4, 6, 39, 50, 53, 54, 61, 71, 77, 79, 158, 161, 198, 206, 216, 224, 225, 228, 230, 231, 232, 235], "plus": [1, 2, 6, 9, 10, 15, 16, 17, 18, 19, 27, 30, 32, 33, 34, 35, 37, 38, 39, 41, 46, 50, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 69, 70, 73, 74, 78, 79, 80, 84, 85, 86, 89, 94, 95, 96, 98, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 115, 116, 117, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 141, 142, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 166, 167, 170, 174, 176, 177, 184, 190, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 216, 218, 219, 221, 222, 224, 225, 226, 228, 230, 231, 234, 235, 236], "Le": [1, 2, 3, 4, 6, 14, 19, 20, 24, 27, 29, 30, 33, 34, 38, 39, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 58, 59, 60, 62, 64, 66, 71, 73, 74, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 92, 94, 95, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 121, 123, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 218, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239, 241], "temp": [1, 2, 4, 14, 17, 32, 39, 41, 42, 46, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 70, 71, 74, 82, 84, 85, 92, 93, 95, 99, 100, 103, 105, 108, 110, 111, 112, 118, 129, 130, 137, 144, 145, 153, 155, 158, 162, 165, 167, 170, 173, 178, 180, 181, 187, 188, 189, 196, 197, 199, 200, 203, 206, 207, 208, 210, 214, 216, 219, 224, 226, 230, 231, 232, 234, 235, 237, 239], "calcul": [1, 4, 6, 7, 9, 10, 14, 15, 19, 27, 32, 34, 42, 48, 51, 54, 55, 56, 61, 62, 66, 70, 71, 74, 80, 81, 82, 84, 86, 87, 88, 93, 95, 96, 98, 99, 100, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 127, 129, 130, 132, 137, 140, 145, 147, 149, 154, 155, 157, 161, 165, 166, 167, 170, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 192, 198, 200, 201, 206, 216, 218, 219, 224, 227, 230, 231, 232, 234, 236, 237], "leqsl": [1, 31, 61, 62, 79, 83, 99, 110, 159, 178, 182, 183, 184, 185, 186, 187, 195], "10": [1, 2, 4, 6, 7, 10, 11, 13, 14, 16, 30, 31, 33, 36, 37, 38, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 64, 68, 69, 70, 71, 74, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 192, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 219, 220, 224, 225, 226, 227, 230, 231, 232, 234, 237, 239], "o": [1, 2, 6, 11, 35, 39, 41, 42, 46, 49, 51, 53, 59, 61, 67, 81, 83, 87, 88, 89, 92, 93, 94, 98, 99, 100, 106, 109, 111, 112, 115, 116, 118, 121, 129, 134, 145, 154, 160, 163, 168, 173, 176, 177, 181, 182, 193, 195, 199, 205, 207, 209, 211, 214, 216, 224, 230, 231, 235], "2": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 18, 22, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 69, 71, 77, 78, 80, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 95, 96, 97, 101, 104, 105, 110, 111, 113, 115, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 166, 167, 169, 172, 173, 174, 175, 179, 180, 181, 184, 185, 194, 195, 202, 203, 204, 205, 209, 210, 211, 213, 214, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 237, 239], "15": [1, 11, 27, 33, 41, 42, 50, 51, 53, 54, 56, 77, 81, 83, 84, 85, 87, 88, 91, 93, 94, 95, 97, 99, 100, 101, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 128, 130, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 151, 154, 155, 158, 162, 164, 165, 166, 169, 170, 173, 175, 178, 179, 181, 182, 183, 188, 192, 195, 199, 201, 203, 205, 207, 208, 209, 216, 224, 227, 237, 239, 241], "3": [1, 2, 4, 6, 11, 16, 18, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 52, 53, 54, 55, 56, 59, 62, 69, 71, 73, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 180, 181, 184, 185, 194, 195, 197, 202, 203, 204, 205, 210, 211, 213, 214, 216, 218, 219, 222, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 239], "7": [1, 2, 4, 11, 18, 26, 31, 34, 37, 41, 42, 46, 50, 51, 52, 53, 55, 56, 62, 64, 68, 69, 71, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 188, 189, 190, 193, 195, 197, 201, 204, 205, 210, 211, 214, 216, 220, 225, 226, 227, 230, 231, 232, 237, 239], "ln": [1, 41, 50, 51, 56, 61, 62, 83, 85, 87, 88, 98, 106, 111, 112, 154, 163, 173, 207, 216], "8": [1, 2, 26, 27, 31, 33, 40, 41, 42, 46, 50, 51, 52, 53, 54, 55, 56, 62, 69, 71, 74, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 178, 179, 180, 181, 188, 189, 195, 197, 201, 205, 206, 208, 209, 210, 211, 214, 216, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 237, 239], "nombreux": [1, 30, 50, 51, 56, 59, 61, 62, 69, 70, 74, 77, 78, 85, 142, 148, 166, 188, 198, 216, 224, 230, 232, 234], "non": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 19, 30, 31, 32, 33, 35, 36, 38, 39, 46, 50, 51, 53, 56, 57, 58, 59, 61, 62, 69, 71, 74, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 99, 100, 101, 106, 111, 112, 113, 114, 115, 116, 118, 119, 122, 129, 132, 134, 135, 137, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 161, 167, 170, 171, 172, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 195, 198, 199, 207, 210, 211, 214, 216, 218, 219, 220, 222, 224, 225, 226, 232, 234, 235, 237, 239], "d\u00e9compos": [1, 2, 41, 52, 56, 59, 70, 90, 108, 130, 148, 188, 193, 226], "comm": [1, 4, 14, 16, 17, 21, 30, 33, 38, 39, 41, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 69, 70, 71, 73, 74, 80, 81, 82, 83, 84, 85, 86, 90, 91, 93, 94, 95, 98, 99, 100, 101, 102, 106, 108, 109, 110, 113, 114, 115, 116, 118, 121, 130, 131, 132, 134, 137, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 170, 171, 174, 178, 181, 182, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 207, 208, 209, 214, 216, 218, 219, 220, 222, 224, 225, 227, 228, 230, 231, 232, 234, 235, 237, 239], "suit": [1, 2, 14, 20, 33, 34, 41, 50, 51, 54, 56, 59, 61, 62, 69, 70, 74, 77, 79, 81, 82, 84, 86, 89, 94, 95, 100, 101, 102, 108, 110, 111, 112, 113, 114, 118, 122, 130, 140, 152, 154, 157, 159, 166, 167, 168, 171, 174, 178, 182, 192, 195, 198, 207, 209, 216, 219, 220, 222, 224, 226, 228, 230, 231, 232, 234, 235, 237, 239], "alpha": [1, 7, 9, 12, 27, 50, 54, 56, 59, 70, 78, 94, 109, 113, 114, 115, 116, 132, 135, 183, 202, 203], "bet": [1, 9, 12, 50, 54, 56, 62, 70, 85, 86, 110, 234], "1": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 65, 68, 69, 71, 73, 74, 77, 78, 80, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 96, 97, 104, 112, 114, 116, 120, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 180, 181, 194, 195, 201, 202, 203, 204, 205, 209, 210, 211, 213, 214, 218, 219, 220, 222, 224, 225, 226, 227, 228, 231, 232, 235, 237, 239], "chaqu": [1, 2, 4, 7, 10, 14, 27, 30, 32, 33, 34, 38, 41, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 81, 82, 83, 84, 85, 86, 89, 93, 94, 95, 96, 99, 100, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 128, 130, 131, 132, 134, 137, 145, 147, 148, 154, 157, 158, 160, 161, 165, 166, 167, 168, 174, 175, 176, 177, 178, 182, 183, 184, 188, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 214, 216, 218, 219, 220, 222, 224, 225, 226, 228, 230, 231, 232, 234, 237, 239], "term": [1, 33, 56, 61, 69, 70, 83, 113, 114, 122, 151, 173, 181, 216, 230, 231, 232, 235, 237, 239], "correspond": [1, 4, 14, 50, 51, 56, 62, 69, 70, 71, 77, 78, 83, 85, 100, 101, 106, 108, 109, 111, 112, 130, 145, 168, 174, 182, 183, 198, 206, 208, 210, 216, 219, 220, 224, 227, 228, 230, 231, 232, 234, 239], "in": [1, 2, 3, 4, 10, 11, 24, 27, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 46, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 64, 65, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 219, 220, 222, 224, 225, 226, 227, 230, 231, 232, 234, 236, 237, 239], "mathbb": [1, 27, 31, 50, 77, 109, 110, 111, 112, 113, 114, 132, 159, 176, 177, 184, 195], "N": [1, 41, 42, 44, 50, 51, 53, 55, 56, 58, 59, 62, 70, 77, 78, 81, 84, 85, 86, 87, 94, 99, 100, 106, 113, 114, 115, 116, 117, 121, 128, 130, 153, 154, 155, 159, 171, 174, 175, 182, 183, 184, 186, 187, 193, 195, 199, 200, 207, 210, 214, 224, 230], "probem": 1, "combinatoir": [1, 58, 182], "r\u00e9sum": [1, 2, 51, 56, 61, 62, 69, 70, 108, 216, 219, 226, 230, 231, 237, 239], "quadrat": [1, 56, 61, 62, 110, 183], "cel": [1, 2, 4, 6, 10, 14, 16, 27, 30, 32, 33, 34, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 81, 82, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 105, 106, 108, 109, 111, 112, 113, 114, 118, 119, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 154, 155, 156, 158, 161, 162, 165, 166, 169, 170, 173, 174, 175, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 197, 198, 199, 200, 203, 204, 206, 207, 208, 209, 216, 218, 219, 220, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 237, 239], "d\u00fb": [1, 56, 98, 132, 139], "programm": [1, 2, 4, 19, 22, 30, 33, 35, 38, 40, 42, 43, 50, 51, 56, 61, 66, 71, 72, 74, 81, 83, 85, 94, 98, 99, 100, 101, 102, 103, 106, 109, 111, 112, 119, 127, 152, 153, 155, 165, 166, 167, 170, 172, 174, 175, 188, 192, 198, 199, 200, 201, 204, 207, 208, 209, 210, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 235, 237, 239, 241], "dynam": [1, 19, 61, 83, 85, 94, 210, 216, 231], "dan": [1, 2, 4, 7, 9, 10, 14, 18, 19, 21, 27, 30, 33, 34, 38, 39, 40, 41, 42, 46, 50, 51, 53, 56, 58, 59, 60, 62, 64, 70, 71, 72, 73, 74, 77, 78, 81, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 123, 128, 129, 130, 132, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 188, 190, 193, 195, 196, 197, 200, 201, 202, 203, 204, 208, 209, 210, 214, 216, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 234, 235, 237, 239], "plupart": [1, 2, 4, 14, 51, 56, 61, 71, 95, 99, 110, 140, 158, 161, 168, 188, 190, 195, 204, 207, 208, 216, 219, 220, 222, 224, 226, 231, 232, 234, 237], "cas": [1, 2, 4, 30, 33, 34, 38, 40, 41, 42, 50, 51, 53, 56, 58, 59, 61, 62, 69, 70, 71, 74, 81, 83, 84, 85, 88, 91, 93, 94, 95, 96, 100, 103, 106, 107, 108, 109, 110, 111, 113, 114, 117, 119, 129, 134, 137, 138, 144, 145, 148, 149, 154, 159, 166, 167, 168, 170, 172, 173, 176, 177, 178, 180, 182, 183, 186, 187, 188, 190, 192, 193, 195, 196, 197, 198, 199, 201, 207, 208, 210, 216, 219, 220, 226, 230, 232, 233, 235, 237, 239], "obtient": [1, 6, 49, 50, 56, 59, 79, 106, 110, 111, 112, 113, 114, 118, 139, 145, 193, 207, 216, 227, 230], "avoir": [1, 2, 14, 30, 38, 51, 56, 59, 61, 62, 64, 69, 70, 71, 74, 78, 82, 85, 94, 95, 100, 108, 113, 117, 154, 157, 158, 182, 190, 192, 193, 199, 200, 204, 206, 207, 216, 219, 220, 222, 224, 226, 230, 231, 232, 234, 235, 237], "transform": [1, 2, 4, 6, 46, 49, 53, 59, 62, 71, 84, 85, 86, 87, 91, 94, 99, 108, 109, 110, 112, 131, 144, 145, 157, 166, 170, 181, 197, 213, 226, 228, 230, 232], "form": [1, 2, 8, 14, 30, 33, 38, 50, 51, 52, 54, 56, 58, 59, 61, 62, 69, 74, 82, 99, 104, 105, 115, 116, 119, 158, 161, 170, 182, 183, 184, 186, 187, 188, 198, 199, 216, 219, 222, 224, 230, 231, 232, 234, 235, 237, 239], "r\u00e9current": [1, 33, 56, 59, 79, 83, 84, 88, 106, 118, 122, 158, 182, 216, 224], "\u00e9crit": [1, 4, 33, 41, 42, 46, 50, 58, 61, 62, 64, 69, 71, 73, 74, 93, 97, 110, 111, 112, 113, 122, 147, 148, 152, 155, 157, 161, 165, 172, 190, 197, 198, 200, 204, 207, 208, 216, 219, 222, 224, 225, 228, 230, 231, 232, 234, 235, 237, 239], "faut": [1, 2, 4, 9, 14, 30, 33, 35, 38, 39, 40, 41, 46, 50, 51, 53, 54, 56, 59, 60, 61, 62, 64, 69, 70, 71, 73, 74, 77, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 99, 100, 102, 106, 108, 111, 112, 113, 114, 117, 119, 121, 129, 131, 134, 136, 144, 145, 148, 149, 150, 152, 153, 156, 157, 160, 161, 165, 166, 168, 169, 170, 172, 173, 176, 177, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 216, 219, 222, 224, 225, 226, 228, 230, 231, 232, 234, 235, 237, 239], "solut": [1, 9, 30, 34, 35, 38, 41, 42, 50, 51, 54, 56, 58, 59, 61, 64, 69, 86, 89, 92, 93, 103, 106, 107, 108, 110, 113, 115, 116, 118, 119, 122, 123, 129, 155, 156, 160, 161, 182, 183, 189, 190, 216, 219, 224, 230, 231, 232, 235, 237], "\u00e9l\u00e9ment": [1, 2, 4, 6, 10, 15, 19, 33, 39, 41, 46, 49, 51, 53, 60, 61, 62, 64, 69, 70, 71, 78, 83, 84, 87, 97, 99, 100, 101, 103, 106, 110, 111, 112, 123, 132, 139, 143, 146, 147, 148, 161, 163, 165, 168, 169, 170, 172, 173, 181, 189, 193, 197, 198, 200, 207, 208, 209, 216, 219, 220, 224, 225, 226, 231, 232, 234, 235, 237, 239], "sach": [1, 10, 30, 56, 62, 94, 193, 216, 239], "conna\u00eet": [1, 14, 52, 61, 62, 74, 85, 88, 115, 116, 205, 216, 230, 234], "0": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 69, 70, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 219, 220, 222, 224, 225, 226, 227, 230, 231, 232, 234, 235, 237, 239, 241], "dichotom": [1, 19, 88, 90, 95, 111, 113, 114, 127, 157, 193, 214, 230], "coup": [1, 2, 51, 56, 70, 80, 83, 91, 95, 108, 111, 112, 131, 172, 178, 179, 190, 197, 199, 224, 226, 231], "deux": [1, 4, 6, 7, 9, 10, 14, 17, 18, 20, 27, 30, 33, 36, 38, 39, 40, 41, 42, 46, 48, 50, 51, 53, 54, 56, 58, 59, 60, 61, 69, 70, 71, 74, 77, 78, 79, 82, 83, 84, 85, 88, 91, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 116, 123, 128, 129, 131, 132, 133, 135, 137, 139, 140, 142, 143, 145, 148, 149, 150, 151, 153, 154, 156, 158, 159, 163, 166, 168, 171, 172, 173, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 218, 219, 222, 224, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239], "iter": [1, 2, 5, 7, 9, 10, 11, 12, 20, 33, 42, 45, 50, 58, 59, 69, 83, 84, 86, 88, 89, 90, 91, 95, 99, 102, 111, 112, 115, 116, 127, 128, 132, 133, 134, 135, 148, 149, 167, 182, 183, 188, 195, 197, 201, 208, 209, 211, 217, 226, 231, 235, 237], "tabl": [1, 14, 15, 51, 72, 94, 106, 115, 116, 127, 155, 158, 169, 171, 192, 193, 198, 207, 216, 224, 230, 231, 234], "hashag": [1, 15, 77, 127, 192, 193], "D\u00e8s": [1, 2, 71], "sort": [1, 2, 4, 9, 11, 14, 31, 38, 50, 53, 54, 56, 58, 59, 61, 62, 68, 69, 71, 74, 78, 81, 83, 85, 86, 88, 91, 94, 95, 98, 100, 106, 108, 109, 111, 112, 115, 116, 117, 123, 132, 137, 141, 146, 147, 150, 154, 159, 166, 173, 179, 182, 183, 184, 188, 192, 195, 199, 201, 207, 209, 210, 214, 216, 219, 222, 224, 226, 228, 230, 231, 232, 234, 237, 240], "puissanc": [1, 19, 69, 90, 106, 219, 230, 231, 237], "entier": [1, 4, 6, 33, 38, 50, 51, 53, 54, 59, 62, 64, 69, 71, 74, 77, 78, 82, 83, 87, 88, 98, 100, 106, 111, 112, 147, 154, 168, 185, 186, 187, 192, 200, 201, 207, 216, 218, 219, 224, 225, 227, 229, 230, 232], "attendr": [1, 32, 56, 59, 70, 224, 237], "trivial": [1, 79], "tel": [1, 2, 14, 19, 39, 46, 51, 56, 58, 59, 61, 62, 69, 78, 83, 84, 86, 95, 108, 109, 110, 111, 112, 148, 154, 159, 160, 161, 173, 174, 175, 176, 177, 178, 182, 183, 184, 186, 187, 190, 192, 195, 198, 199, 201, 204, 216, 224, 226, 230, 231, 232, 234, 236, 239], "strassen": [1, 216], "multipl": [1, 6, 7, 9, 14, 41, 49, 50, 56, 59, 61, 64, 69, 85, 96, 98, 100, 106, 108, 109, 159, 195, 207, 218, 230], "matric": [1, 6, 15, 27, 39, 41, 49, 50, 51, 54, 56, 70, 71, 73, 82, 85, 99, 104, 105, 106, 109, 110, 117, 123, 130, 132, 136, 137, 161, 166, 167, 171, 178, 182, 183, 197, 198, 199, 213, 216, 229, 232], "807": [1, 216], "celui": [1, 2, 4, 27, 30, 32, 34, 38, 39, 41, 42, 51, 56, 58, 59, 61, 62, 69, 71, 74, 94, 95, 108, 110, 111, 112, 129, 135, 137, 138, 148, 149, 169, 170, 182, 183, 188, 198, 199, 204, 207, 208, 210, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 237, 239], "marco": 1, "bodrato": 1, "lik": [1, 11, 31], "matrix": [1, 26, 30, 53, 91, 134, 145, 174, 175, 179], "suited": 1, "squaring": 1, "and": [1, 4, 10, 11, 27, 30, 31, 33, 38, 39, 46, 51, 56, 68, 69, 71, 75, 77, 78, 79, 80, 84, 85, 87, 88, 95, 100, 103, 104, 105, 106, 108, 111, 112, 130, 134, 140, 142, 144, 146, 151, 154, 156, 159, 163, 164, 166, 172, 186, 187, 188, 189, 193, 198, 205, 211, 216, 220, 224, 230, 231, 232, 234, 235, 237], "high": 1, "pow": [1, 169], "comput": [1, 7, 166, 180], "minimal": [1, 10, 50, 56, 61, 83, 95, 106, 119, 146], "tri": [1, 11, 12, 13, 19, 41, 51, 53, 56, 59, 61, 69, 74, 94, 95, 98, 106, 110, 113, 114, 127, 139, 144, 157, 163, 168, 182, 183, 192, 193, 208, 209, 210, 214, 222, 230, 231], "g\u00e9ner": [1, 27, 40, 49, 51, 52, 53, 54, 69, 77, 99, 109, 110, 111, 112, 113, 114, 117, 154, 158, 174, 175, 178, 197, 198, 204, 216, 219, 220, 224, 231, 234, 235, 237], "dir": [1, 2, 4, 14, 27, 33, 39, 41, 56, 58, 60, 61, 62, 69, 71, 74, 77, 83, 87, 88, 94, 95, 99, 102, 103, 108, 113, 114, 128, 131, 132, 135, 140, 141, 150, 159, 160, 170, 178, 179, 180, 181, 183, 188, 198, 199, 200, 204, 207, 208, 209, 210, 216, 220, 224, 228, 230, 231, 232, 234, 237, 239], "san": [1, 2, 14, 33, 35, 38, 41, 46, 50, 53, 54, 55, 56, 60, 61, 62, 69, 70, 74, 77, 81, 84, 88, 89, 91, 93, 96, 98, 99, 103, 106, 113, 114, 117, 118, 121, 123, 129, 130, 131, 136, 142, 146, 147, 155, 170, 171, 172, 181, 182, 190, 192, 199, 200, 204, 216, 219, 220, 222, 224, 226, 230, 231, 233, 234, 235, 236, 237, 239], "hypothes": [1, 59, 62, 182], "don": [1, 2, 4, 5, 7, 15, 19, 22, 26, 27, 30, 34, 38, 39, 40, 41, 42, 45, 47, 48, 50, 52, 56, 60, 61, 66, 68, 70, 71, 72, 74, 77, 83, 84, 86, 87, 94, 98, 102, 104, 106, 108, 109, 114, 115, 116, 118, 122, 126, 128, 129, 130, 131, 137, 139, 142, 144, 145, 148, 152, 156, 161, 166, 173, 178, 180, 181, 188, 192, 193, 198, 199, 200, 205, 206, 207, 208, 210, 214, 216, 218, 219, 220, 224, 226, 227, 230, 231, 232, 233, 234, 237, 239], "En": [1, 2, 20, 27, 32, 41, 46, 49, 50, 51, 52, 56, 58, 59, 61, 69, 70, 73, 74, 77, 83, 84, 90, 93, 94, 101, 103, 106, 108, 110, 150, 152, 154, 158, 160, 161, 167, 178, 182, 183, 184, 189, 195, 199, 200, 207, 208, 214, 216, 219, 220, 222, 224, 226, 230, 231, 232, 234, 237], "revanch": [1, 59, 69, 84, 117, 161, 200, 216, 219, 224, 230, 232, 237], "o\u00f9": [1, 2, 4, 9, 12, 13, 14, 17, 27, 50, 51, 52, 54, 56, 58, 59, 60, 61, 62, 69, 70, 71, 74, 78, 79, 81, 82, 83, 84, 87, 88, 95, 99, 101, 102, 108, 110, 111, 112, 113, 114, 119, 130, 132, 134, 137, 146, 147, 157, 158, 168, 173, 178, 180, 181, 182, 184, 185, 188, 193, 195, 198, 199, 200, 207, 208, 209, 210, 214, 216, 219, 222, 224, 226, 228, 230, 231, 232, 234, 235, 237, 239], "issu": [1, 31, 51, 54, 56, 62, 70, 80, 84, 108, 117, 144, 161, 182, 220, 232], "ensembl": [1, 2, 7, 8, 9, 10, 14, 27, 30, 38, 39, 50, 51, 52, 56, 58, 59, 61, 62, 69, 70, 74, 77, 78, 80, 83, 84, 85, 87, 88, 89, 95, 99, 101, 109, 110, 111, 112, 113, 114, 115, 116, 119, 127, 129, 130, 134, 136, 137, 144, 146, 147, 148, 154, 158, 163, 170, 174, 175, 176, 177, 178, 179, 182, 184, 185, 188, 189, 192, 195, 198, 201, 206, 216, 219, 220, 224, 225, 226, 228, 230, 232, 234, 235], "fin": [1, 2, 4, 10, 14, 20, 33, 40, 50, 51, 52, 56, 60, 61, 69, 70, 71, 74, 77, 81, 82, 87, 88, 89, 93, 95, 102, 106, 108, 113, 114, 130, 139, 148, 149, 153, 154, 155, 159, 160, 161, 167, 168, 200, 201, 207, 208, 209, 216, 224, 226, 231, 232, 234, 237, 239], "cardinal": [1, 59, 77], "meilleur": [1, 2, 27, 42, 51, 56, 59, 61, 62, 70, 77, 79, 81, 82, 83, 89, 92, 93, 95, 106, 108, 109, 113, 114, 115, 116, 119, 128, 135, 139, 145, 151, 159, 182, 183, 199, 204, 207, 216, 231, 232], "revient": [1, 14, 30, 33, 34, 56, 70, 95, 98, 100, 111, 146, 148, 156, 161, 173, 182, 193, 216, 231, 232, 235, 237], "histogramm": [1, 27, 51, 56, 70, 109, 111, 112, 127, 140, 173], "inf\u00e9rieur": [1, 2, 32, 33, 50, 56, 58, 70, 78, 84, 88, 95, 100, 108, 109, 110, 132, 144, 145, 168, 195, 208, 226, 230, 231], "inf": [1, 50, 88, 132, 140, 142], "blog": [1, 21, 23, 56], "fast": [1, 31, 51, 236], "interesect": 1, "of": [1, 4, 6, 7, 10, 11, 13, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 50, 51, 52, 53, 54, 56, 58, 59, 68, 71, 75, 83, 85, 91, 93, 100, 102, 103, 108, 111, 112, 114, 118, 121, 132, 134, 135, 141, 145, 155, 158, 161, 162, 163, 165, 166, 167, 173, 178, 180, 181, 186, 187, 189, 193, 195, 205, 207, 216, 220, 224, 226, 230, 234, 235], "sorted": [1, 2, 84, 94, 95, 110, 131, 134, 144, 154, 165, 173, 198, 205, 207, 208, 214, 226, 230], "list": [1, 2, 6, 7, 8, 9, 10, 11, 14, 19, 30, 34, 38, 39, 42, 50, 51, 52, 54, 56, 59, 60, 61, 64, 67, 77, 78, 83, 84, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 115, 118, 122, 127, 128, 129, 132, 135, 136, 141, 143, 144, 146, 147, 148, 154, 156, 161, 162, 163, 165, 167, 168, 169, 173, 179, 182, 183, 184, 186, 187, 188, 189, 193, 195, 197, 198, 199, 205, 207, 209, 210, 214, 219, 220, 225, 226, 227, 235, 237, 239], "using": [1, 11, 30, 54, 224, 237], "sse": 1, "instruct": [1, 2, 4, 16, 46, 51, 54, 65, 69, 71, 74, 83, 98, 100, 101, 111, 112, 150, 166, 170, 174, 192, 198, 200, 201, 206, 207, 208, 216, 222, 224, 226, 228, 231, 232, 234, 237], "simpl": [1, 2, 4, 10, 14, 30, 34, 35, 41, 51, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 74, 77, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 106, 108, 109, 113, 114, 116, 128, 129, 131, 134, 138, 145, 148, 158, 161, 163, 167, 168, 170, 178, 180, 181, 182, 188, 189, 192, 195, 196, 197, 198, 199, 200, 204, 206, 207, 210, 219, 222, 224, 226, 231, 232, 234, 235, 236, 239], "intersect": [1, 10, 46, 59, 184, 231], "montr": [1, 27, 41, 50, 52, 56, 59, 61, 62, 69, 70, 79, 81, 83, 87, 94, 110, 113, 114, 137, 152, 167, 174, 178, 183, 186, 187, 188, 190, 192, 199, 207, 209, 216, 219, 224, 225, 228, 230, 231, 232, 234, 237, 239], "comment": [1, 14, 19, 30, 38, 39, 46, 50, 51, 52, 54, 56, 61, 62, 64, 77, 82, 84, 85, 87, 91, 94, 95, 103, 111, 112, 114, 118, 132, 135, 139, 140, 141, 158, 159, 161, 163, 166, 171, 180, 188, 189, 190, 192, 196, 197, 204, 207, 216, 220, 224, 228, 230, 231, 232, 234, 235, 237, 239], "optimis": [1, 20, 21, 40, 48, 49, 53, 58, 59, 62, 77, 88, 92, 93, 94, 110, 121, 122, 129, 161, 165, 166, 167, 173, 182, 188, 189, 212, 215, 225, 231, 233], "impl\u00e9ment": [1, 2, 4, 6, 7, 10, 24, 29, 33, 42, 43, 50, 53, 54, 59, 61, 62, 71, 74, 81, 88, 91, 95, 106, 107, 111, 112, 113, 114, 124, 128, 134, 139, 144, 148, 149, 153, 154, 157, 159, 162, 164, 167, 168, 170, 173, 178, 179, 190, 205, 206, 207, 210, 214, 216, 222, 226, 230, 231, 234, 236, 237, 241], "introduis": 1, "notion": [1, 4, 14, 19, 56, 60, 61, 71, 77, 79, 83, 94, 110, 231], "partit": [1, 68, 231], "peu": [1, 4, 39, 46, 50, 51, 54, 56, 58, 59, 61, 62, 69, 70, 71, 73, 74, 78, 81, 82, 84, 86, 87, 88, 91, 95, 100, 101, 103, 106, 109, 115, 116, 117, 118, 128, 129, 134, 136, 137, 139, 141, 142, 143, 144, 145, 148, 150, 154, 155, 157, 161, 163, 165, 168, 170, 180, 181, 188, 192, 194, 199, 205, 214, 216, 219, 222, 224, 230, 231, 232, 234, 235, 237], "parall\u00e9lis": [1, 134, 237, 240], "object": [1, 4, 11, 26, 27, 30, 31, 33, 38, 39, 42, 51, 54, 56, 60, 62, 69, 70, 71, 85, 94, 95, 99, 100, 102, 120, 146, 147, 148, 149, 161, 165, 166, 167, 180, 182, 183, 188, 192, 204, 206, 207, 216, 224, 230, 231, 234, 235, 237, 239], "tous": [1, 2, 4, 7, 10, 30, 32, 33, 34, 38, 41, 42, 50, 51, 53, 58, 59, 61, 62, 69, 71, 72, 74, 77, 78, 81, 83, 84, 86, 88, 94, 95, 99, 106, 108, 111, 112, 118, 119, 123, 129, 130, 131, 137, 138, 140, 144, 147, 148, 149, 153, 165, 172, 182, 184, 185, 192, 193, 198, 199, 209, 216, 219, 224, 226, 227, 230, 231, 232, 234, 235, 237, 239], "lesquel": [1, 33, 50, 51, 56, 59, 62, 81, 84, 95, 144, 173, 186, 187, 216, 230, 232], "con\u00e7us": [1, 234], "distanc": [1, 7, 9, 10, 12, 13, 15, 19, 20, 42, 53, 56, 58, 61, 62, 86, 95, 96, 106, 113, 114, 115, 116, 123, 127, 132, 140, 178, 179, 181, 182, 183, 185, 186, 187, 212, 215], "\u00e9dit": [1, 15, 19, 20, 61, 123, 185, 212, 215], "sert": [1, 2, 14, 34, 41, 46, 48, 50, 54, 56, 69, 70, 86, 95, 98, 119, 121, 148, 164, 171, 188, 190, 192, 193, 195, 199, 200, 206, 216, 218, 219, 224, 230, 231, 232, 237, 238], "entre": [1, 6, 8, 9, 10, 14, 20, 27, 38, 48, 50, 54, 58, 59, 61, 62, 77, 78, 84, 86, 87, 88, 89, 94, 95, 96, 103, 106, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 123, 128, 129, 132, 135, 140, 142, 143, 144, 147, 150, 155, 163, 170, 178, 179, 181, 182, 183, 186, 187, 189, 192, 195, 196, 198, 199, 200, 201, 208, 216, 219, 224, 226, 227, 230, 231, 232, 234, 235, 237, 239], "utilis": [1, 2, 4, 6, 8, 10, 14, 20, 21, 23, 27, 30, 34, 35, 38, 39, 41, 46, 50, 51, 53, 54, 56, 58, 59, 61, 62, 66, 70, 71, 74, 77, 78, 81, 85, 91, 94, 95, 98, 99, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 118, 119, 122, 123, 129, 130, 131, 132, 139, 141, 142, 143, 145, 146, 147, 149, 154, 157, 158, 161, 163, 166, 167, 169, 170, 172, 173, 174, 175, 181, 182, 185, 188, 189, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 214, 216, 217, 220, 221, 222, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239], "trouv": [1, 2, 4, 14, 18, 27, 30, 35, 41, 42, 50, 53, 54, 56, 60, 61, 62, 64, 69, 71, 74, 83, 86, 88, 89, 92, 94, 95, 96, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 129, 133, 154, 155, 160, 168, 181, 183, 184, 185, 186, 192, 202, 203, 207, 208, 209, 216, 224, 226, 227, 230, 231, 232, 234, 237, 239], "proch": [1, 9, 10, 39, 56, 58, 59, 61, 70, 77, 89, 108, 109, 115, 116, 123, 126, 129, 130, 136, 139, 141, 150, 174, 175, 182, 199, 207, 216, 224, 225, 231, 232, 235], "autr": [1, 2, 4, 14, 15, 16, 18, 20, 24, 27, 29, 30, 38, 39, 40, 41, 42, 43, 46, 48, 50, 51, 53, 54, 58, 59, 61, 64, 66, 70, 71, 74, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 93, 94, 95, 96, 98, 99, 100, 102, 106, 109, 110, 112, 113, 114, 115, 116, 118, 121, 122, 123, 127, 129, 131, 132, 134, 136, 139, 140, 142, 144, 145, 146, 148, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 167, 173, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 200, 201, 204, 205, 207, 208, 209, 210, 211, 218, 219, 220, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241], "condit": [1, 33, 50, 51, 54, 59, 69, 70, 75, 77, 100, 101, 140, 145, 163, 182, 192, 195, 208, 216, 224, 230, 231, 232, 234, 237], "sim": [1, 33, 50, 56, 62, 70, 83, 85, 86, 122, 130, 176, 177, 193, 195, 209, 216], "4": [1, 2, 4, 6, 9, 11, 12, 24, 26, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 52, 53, 54, 55, 62, 69, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 184, 185, 194, 195, 196, 197, 200, 201, 202, 203, 205, 209, 210, 212, 213, 214, 215, 216, 219, 222, 224, 225, 226, 227, 230, 231, 232, 234, 236, 237, 239, 241], "Que": [1, 41, 50, 51, 87, 100, 101, 102, 103, 110, 160, 167, 174, 180, 182, 198, 204, 208], "quand": [1, 2, 14, 34, 50, 51, 52, 56, 60, 61, 69, 70, 74, 81, 87, 91, 108, 109, 117, 119, 132, 147, 158, 159, 167, 172, 178, 179, 180, 184, 199, 205, 207, 209, 219, 226, 231, 237], "milliard": [1, 77], "Ce": [1, 2, 4, 14, 19, 27, 32, 33, 41, 42, 46, 50, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 73, 74, 77, 83, 85, 87, 89, 92, 93, 94, 95, 98, 101, 106, 108, 109, 113, 114, 117, 118, 119, 121, 123, 130, 132, 140, 145, 146, 147, 148, 149, 154, 155, 159, 170, 174, 181, 182, 183, 185, 192, 193, 195, 198, 199, 204, 205, 207, 208, 210, 216, 219, 220, 224, 225, 226, 227, 228, 230, 231, 232, 237, 239], "facil": [1, 30, 33, 38, 39, 42, 51, 54, 56, 58, 60, 61, 62, 64, 69, 70, 73, 74, 77, 84, 93, 95, 106, 119, 144, 155, 157, 161, 162, 163, 165, 166, 173, 182, 183, 216, 224, 228, 230, 231, 232, 234, 235, 237, 239], "si": [1, 2, 4, 6, 7, 8, 9, 10, 14, 19, 27, 32, 33, 34, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 79, 80, 83, 84, 85, 87, 88, 90, 91, 93, 95, 96, 98, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 131, 132, 135, 137, 139, 140, 142, 143, 145, 147, 148, 150, 154, 159, 161, 166, 170, 171, 172, 174, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 197, 198, 199, 200, 201, 207, 208, 209, 210, 216, 219, 220, 222, 224, 226, 228, 230, 231, 232, 234, 235, 237, 239], "repr\u00e9sent": [1, 2, 6, 20, 27, 33, 38, 41, 50, 51, 53, 58, 59, 61, 62, 71, 82, 84, 85, 87, 91, 94, 95, 99, 104, 105, 115, 116, 122, 127, 130, 131, 136, 137, 142, 143, 156, 161, 163, 170, 174, 175, 183, 193, 199, 205, 206, 207, 216, 218, 224, 226, 228, 230, 231, 232, 235], "vecteur": [1, 9, 10, 53, 56, 58, 59, 61, 69, 70, 78, 109, 110, 113, 114, 115, 116, 130, 154, 167, 170, 174, 175, 178, 179, 181, 216, 231], "voir": [1, 2, 4, 13, 16, 19, 20, 27, 30, 33, 39, 42, 46, 50, 51, 56, 58, 61, 62, 69, 71, 74, 77, 82, 87, 88, 89, 94, 95, 96, 109, 111, 112, 113, 114, 129, 130, 142, 144, 147, 148, 151, 154, 157, 159, 170, 174, 175, 178, 179, 185, 188, 193, 196, 198, 199, 200, 206, 207, 208, 211, 216, 222, 224, 226, 230, 231, 232, 235, 237], "word2vec": 1, "auto": [1, 23, 115, 116, 129], "encoder": [1, 232], "veut": [1, 2, 4, 14, 39, 46, 50, 51, 54, 56, 61, 64, 69, 71, 73, 79, 81, 83, 84, 87, 95, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 129, 130, 135, 148, 150, 151, 153, 160, 170, 172, 174, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 192, 195, 197, 199, 200, 204, 205, 206, 208, 209, 219, 226, 231, 234, 237, 239], "compar": [1, 2, 31, 32, 33, 50, 51, 52, 53, 56, 59, 61, 62, 69, 74, 81, 85, 87, 95, 108, 113, 114, 137, 138, 144, 145, 150, 151, 153, 156, 165, 168, 171, 173, 174, 181, 195, 204, 207, 208, 216, 219, 224, 226, 230, 231, 232], "model": [1, 14, 22, 27, 50, 54, 56, 58, 61, 62, 70, 84, 88, 108, 109, 123, 126, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 181, 231], "ranking": [1, 22], "pouvoir": [1, 4, 7, 56, 61, 62, 71, 77, 81, 88, 94, 119, 134, 149, 161, 165, 182, 188, 190, 197, 199, 200, 208, 216, 224, 230, 231, 232, 235, 237], "visuel": [1, 4, 42, 56, 61, 71, 87, 224], "r\u00e9sultat": [1, 2, 7, 14, 27, 33, 34, 36, 38, 41, 42, 50, 51, 53, 54, 59, 60, 61, 62, 64, 69, 70, 74, 79, 81, 82, 84, 87, 88, 93, 100, 101, 104, 105, 106, 109, 111, 112, 113, 117, 135, 137, 138, 139, 142, 144, 145, 146, 147, 154, 157, 159, 161, 165, 166, 168, 172, 174, 175, 176, 177, 178, 179, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 206, 207, 208, 209, 214, 216, 219, 222, 226, 230, 231, 232, 234, 235, 237, 239], "Quel": [1, 41, 60, 99, 111, 112, 122, 178, 179, 198], "mieux": [1, 2, 14, 15, 35, 41, 42, 52, 56, 60, 61, 64, 69, 85, 88, 91, 93, 94, 109, 111, 112, 114, 121, 128, 129, 131, 134, 136, 137, 143, 145, 147, 155, 158, 161, 163, 165, 198, 200, 210, 216, 224, 226, 234, 235, 237], "affich": [1, 2, 4, 7, 11, 41, 50, 51, 56, 69, 70, 71, 74, 81, 83, 84, 95, 100, 101, 109, 118, 136, 147, 159, 188, 198, 199, 200, 207, 208, 209, 216, 219, 222, 224, 226, 227, 228, 230, 231, 232, 234, 237, 239], "moteur": [1, 51, 63, 64, 109, 198, 224, 232], "recherch": [1, 5, 10, 19, 20, 38, 51, 56, 58, 60, 62, 63, 64, 83, 88, 89, 94, 95, 108, 109, 111, 114, 127, 141, 148, 157, 160, 183, 193, 210, 212, 215, 219, 224, 230, 231, 232, 239], "oeil": [1, 50, 51, 56, 231], "humain": [1, 56, 61, 200, 237], "sais": [1, 14, 61, 94, 199, 230, 232], "rapid": [1, 2, 4, 33, 38, 40, 41, 50, 51, 53, 56, 58, 59, 61, 69, 71, 74, 77, 84, 91, 95, 108, 111, 112, 113, 114, 121, 123, 127, 153, 154, 155, 159, 162, 166, 168, 172, 192, 193, 198, 199, 205, 206, 216, 222, 224, 226, 231, 234, 235, 236, 237], "diff\u00e9rent": [1, 14, 18, 27, 30, 33, 38, 39, 42, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 64, 70, 78, 79, 87, 88, 93, 94, 106, 108, 111, 112, 114, 116, 117, 118, 123, 128, 131, 134, 135, 136, 137, 139, 140, 142, 144, 145, 152, 153, 154, 157, 160, 162, 170, 182, 183, 188, 189, 192, 195, 198, 200, 201, 206, 207, 208, 210, 214, 216, 219, 224, 225, 226, 227, 228, 230, 231, 232, 234, 236, 237, 239], "tout": [1, 2, 4, 7, 11, 14, 18, 21, 27, 30, 33, 35, 38, 39, 41, 42, 46, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 69, 70, 71, 74, 77, 78, 80, 81, 82, 83, 85, 86, 87, 91, 93, 95, 96, 98, 103, 106, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 129, 132, 134, 137, 138, 141, 143, 146, 147, 148, 154, 156, 157, 158, 159, 163, 167, 169, 170, 172, 173, 174, 178, 179, 181, 182, 183, 184, 185, 188, 189, 192, 193, 195, 198, 199, 200, 203, 204, 210, 213, 214, 216, 220, 222, 224, 226, 228, 230, 231, 232, 235, 237, 239], "fusion": [1, 19, 56, 62, 88, 106, 158, 173], "algo": 1, "bucket": 1, "bull": 1, "complex": [1, 4, 30, 56, 59, 69, 71, 74, 77, 81, 95, 129, 161, 198, 200, 216, 224, 230, 234, 235], "lempel": 1, "ziv": 1, "python": [1, 3, 4, 6, 16, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 53, 65, 66, 68, 70, 72, 88, 98, 99, 102, 103, 106, 109, 110, 111, 112, 146, 147, 150, 151, 152, 153, 154, 157, 160, 161, 165, 166, 168, 169, 170, 171, 172, 173, 188, 189, 190, 193, 205, 207, 208, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 232, 234, 235, 236, 239], "implement": [1, 59, 166, 193], "kullback": [1, 62], "leibl": 1, "divergent": 1, "kl": [1, 61], "ucb": 1, "index": [1, 10, 52, 62, 69, 85, 87, 88, 100, 102, 103, 117, 121, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 145, 153, 158, 161, 164, 192, 199, 206, 207, 216, 219, 230, 231, 234], "matriciel": [1, 6, 15, 33, 48, 61, 118, 123, 166, 174, 175], "winograd": 1, "minimum": [1, 42, 50, 53, 61, 79, 81, 83, 84, 98, 110, 115, 116, 117, 121, 178, 179, 184, 185], "filtering": 1, "convolu": [1, 15, 127], "im2col": 1, "r\u00e9arrang": 1, "divis": [1, 2, 14, 41, 50, 51, 56, 59, 69, 77, 78, 83, 96, 100, 108, 110, 113, 114, 142, 143, 149, 159, 165, 168, 176, 177, 184, 192, 194, 209, 218, 219, 230, 231], "reign": 1, "branch": [1, 207], "bound": [1, 50, 224], "the": [1, 3, 4, 6, 7, 10, 11, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 53, 54, 56, 58, 59, 67, 68, 71, 75, 77, 81, 85, 93, 94, 104, 105, 108, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 158, 160, 165, 166, 173, 176, 177, 180, 184, 185, 186, 187, 216, 220, 224, 234, 237], "ultimat": 1, "planar": 1, "convex": [1, 56, 110], "hull": [1, 56], "relectur": [1, 39, 74, 216, 232, 235], "kirkpatrick": 1, "seidel": 1, "prun": [1, 111, 112], "search": [1, 4, 11, 67, 71, 234, 239], "an": [1, 4, 7, 11, 14, 51, 53, 56, 59, 61, 68, 70, 74, 75, 93, 108, 109, 186, 187, 199, 220, 224, 230, 237], "finding": [1, 50], "point": [1, 2, 8, 9, 10, 12, 24, 27, 29, 33, 41, 42, 43, 46, 50, 56, 58, 59, 62, 69, 83, 86, 94, 95, 109, 110, 113, 114, 115, 116, 124, 128, 131, 132, 134, 142, 144, 159, 166, 178, 179, 181, 188, 195, 198, 199, 200, 205, 207, 208, 210, 216, 220, 224, 226, 230, 231, 232, 237, 239, 241], "set": [1, 4, 11, 30, 51, 54, 62, 69, 71, 77, 78, 84, 87, 94, 105, 122, 131, 134, 146, 153, 156, 172, 208, 216, 220, 224, 225, 230, 237], "d\u00e9termin": [1, 2, 7, 9, 33, 38, 41, 50, 56, 58, 59, 60, 61, 62, 69, 95, 96, 108, 109, 110, 111, 112, 118, 132, 165, 178, 179, 182, 198, 199, 200, 204, 208, 216, 222, 224, 226, 230, 231, 234, 237, 239], "envelopp": 1, "h": [1, 11, 33, 39, 51, 56, 59, 61, 65, 68, 77, 87, 94, 109, 113, 114, 115, 116, 117, 122, 130, 147, 151, 157, 161, 193, 195, 205, 216, 224, 225, 227, 231, 232, 235, 237], "nombr": [1, 2, 4, 6, 7, 9, 10, 12, 17, 33, 34, 35, 41, 42, 49, 51, 52, 53, 56, 58, 59, 61, 62, 64, 69, 71, 74, 78, 80, 81, 83, 85, 87, 88, 89, 90, 91, 93, 95, 96, 99, 100, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 123, 129, 132, 138, 139, 141, 145, 147, 149, 153, 154, 157, 158, 160, 161, 162, 163, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 188, 189, 192, 193, 195, 197, 198, 200, 201, 204, 206, 207, 208, 209, 210, 214, 216, 219, 222, 224, 226, 227, 228, 229, 232, 234, 235, 237, 239], "segment": [1, 10, 58, 59, 62, 83, 89, 95, 139, 184, 194, 216], "court": [1, 4, 9, 10, 14, 15, 19, 33, 39, 42, 51, 58, 59, 71, 78, 80, 81, 85, 89, 94, 95, 102, 103, 106, 122, 123, 125, 155, 172, 173, 198, 204, 216, 230, 231, 232], "chemin": [1, 4, 9, 10, 15, 19, 42, 58, 59, 71, 78, 79, 84, 94, 106, 123, 147, 166, 178, 179, 195, 198, 206, 207, 220, 224, 234], "graph": [1, 7, 10, 11, 14, 19, 20, 27, 42, 45, 48, 50, 56, 58, 59, 62, 70, 77, 82, 87, 94, 95, 106, 131, 140, 144, 147, 149, 166, 182, 187, 203, 207, 216, 224], "ordonnanc": [1, 15, 123], "permut": [1, 2, 3, 18, 20, 35, 41, 42, 58, 59, 61, 62, 81, 88, 93, 108, 109, 119, 127, 144, 159, 183, 184, 185, 189, 192, 198, 210, 219], "sattolo": 1, "voyageur": [1, 19, 20, 42, 58, 59, 89, 123], "commerc": [1, 19, 20, 24, 29, 43, 58, 59, 77, 89, 123, 241], "hamiltonien": [1, 10, 13, 20, 42, 57], "lir": [1, 2, 4, 6, 51, 52, 53, 56, 59, 60, 61, 62, 69, 71, 73, 78, 108, 160, 165, 170, 182, 193, 198, 199, 216, 219, 220, 222, 224, 226, 228, 230, 231, 232, 234, 235], "larg": [1, 22, 42, 58, 59, 68, 77], "scal": [1, 59, 132, 133, 134, 135, 145], "traveling": [1, 15, 58, 59, 123], "salesman": [1, 15, 20, 58, 59, 61, 92, 123], "tourn": [1, 41, 56, 58, 88, 146, 156, 192, 207, 237], "v\u00e9hicul": 1, "extens": [1, 7, 16, 48, 53, 61, 80, 84, 95, 110, 161, 198, 205, 216, 224, 229, 232, 233, 239], "affect": [1, 2, 41, 50, 56, 59, 62, 69, 74, 81, 89, 157, 192, 201, 207, 208, 216, 219, 224, 226, 230, 234, 237], "m\u00e9thod": [1, 2, 4, 19, 38, 41, 50, 51, 52, 56, 58, 59, 61, 62, 71, 77, 86, 88, 91, 96, 99, 100, 102, 109, 113, 114, 127, 130, 137, 146, 148, 150, 151, 154, 161, 166, 170, 174, 175, 178, 179, 180, 181, 187, 193, 198, 199, 206, 217, 218, 219, 226, 229, 230, 232, 234, 237, 239], "hongrois": [1, 187], "arbre": [1, 10, 19, 84, 87, 94, 106, 127, 129, 136, 157, 163, 205], "poid": [1, 7, 9, 10, 56, 60, 61, 95, 110, 216], "miminum": [1, 79], "kruskal": [1, 5, 7, 10, 13, 19, 20, 57, 95], "bor\u016fvk": 1, "sac": 1, "dos": 1, "structur": [1, 2, 4, 9, 11, 33, 51, 53, 54, 56, 61, 69, 71, 84, 87, 95, 163, 188, 192, 193, 198, 206, 207, 214, 216, 226, 231, 232, 234], "cha\u00een": [1, 51, 54, 61, 80, 98, 99, 100, 102, 108, 127, 146, 161, 182, 188, 192, 198, 200, 201, 204, 205, 207, 208, 210, 216, 219, 224, 225, 228, 229, 230, 232, 234, 235, 237, 239], "def": [1, 2, 4, 10, 11, 30, 31, 32, 33, 34, 38, 39, 41, 42, 46, 50, 51, 52, 53, 61, 64, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 134, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 179, 181, 185, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 204, 205, 206, 207, 210, 211, 213, 214, 216, 218, 219, 220, 222, 224, 225, 226, 230, 231, 232, 234, 235, 237, 239], "hachag": [1, 51, 77, 207], "distribu": [1, 4, 5, 16, 27, 50, 56, 61, 62, 70, 71, 74, 77, 84, 132, 135, 140, 142, 143, 154, 157, 159, 170, 171, 173, 182, 224, 237], "suffix": [1, 15, 123, 231], "tre": [1, 30, 61, 62, 65, 128, 134, 136, 178, 179, 193, 199, 216], "b": [1, 2, 4, 8, 10, 11, 27, 30, 34, 35, 37, 39, 40, 41, 50, 51, 55, 56, 59, 65, 69, 70, 71, 74, 77, 79, 80, 81, 85, 86, 87, 88, 89, 94, 95, 99, 100, 101, 102, 106, 109, 110, 115, 116, 119, 120, 135, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 160, 168, 170, 174, 182, 183, 185, 186, 187, 192, 193, 194, 195, 199, 205, 207, 208, 209, 210, 211, 214, 216, 219, 224, 225, 226, 230, 231, 232, 234, 235, 237, 239], "x": [1, 2, 4, 8, 9, 10, 11, 27, 33, 34, 39, 41, 42, 50, 51, 53, 56, 58, 59, 61, 62, 69, 70, 71, 77, 78, 83, 85, 87, 91, 94, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 123, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 154, 155, 157, 162, 163, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 188, 192, 194, 195, 198, 199, 200, 202, 203, 205, 207, 208, 209, 216, 219, 224, 226, 230, 231, 232, 234, 237, 239], "tas": [1, 88, 158], "heap": [1, 88, 127], "fibonacc": [1, 79], "judy": 1, "array": [1, 27, 31, 36, 39, 41, 45, 49, 53, 54, 55, 56, 58, 59, 62, 69, 70, 77, 78, 82, 83, 84, 85, 86, 88, 92, 93, 101, 109, 110, 113, 114, 115, 116, 117, 121, 129, 130, 132, 133, 134, 135, 137, 138, 139, 151, 154, 155, 164, 166, 167, 170, 171, 174, 175, 178, 179, 180, 182, 183, 186, 187, 195, 197, 210, 213, 235, 237], "sit": [1, 3, 4, 16, 19, 22, 40, 46, 51, 53, 56, 58, 62, 71, 73, 74, 86, 96, 117, 129, 140, 142, 165, 167, 169, 180, 184, 185, 186, 187, 198, 203, 204, 207, 220, 222, 227, 231, 234, 239], "mapping": [1, 51, 109, 122], "int": [1, 4, 7, 9, 10, 11, 13, 31, 33, 38, 46, 50, 51, 53, 69, 71, 77, 84, 87, 91, 100, 102, 104, 105, 108, 111, 112, 117, 134, 139, 146, 148, 151, 155, 156, 157, 173, 194, 195, 197, 198, 199, 201, 216, 219, 230, 231, 235, 237], "efficac": [1, 2, 27, 36, 38, 50, 56, 61, 62, 84, 87, 88, 91, 94, 95, 100, 106, 122, 151, 158, 173, 216, 225, 226, 230, 235, 237], "traditionnel": [1, 73], "propriet": [1, 61, 69, 78, 84, 181, 182, 190, 195, 207], "cach": [1, 4, 41, 51, 52, 58, 64, 67, 68, 69, 71, 111, 112, 118, 207, 216, 218, 230, 231], "processeur": [1, 53, 166, 230, 237], "compos": [1, 14, 15, 19, 35, 56, 58, 59, 62, 69, 95, 123, 131, 132, 133, 138, 148, 166, 178, 179, 224, 230, 231, 234], "connex": [1, 7, 15, 19, 56, 59, 95, 123, 178, 179, 222], "parcour": [1, 10, 30, 33, 42, 51, 59, 61, 69, 77, 83, 87, 89, 91, 96, 98, 99, 106, 121, 129, 149, 161, 170, 188, 189, 192, 195, 206, 207, 208, 216, 219, 230, 231, 237], "profondeur": [1, 56, 106], "largeur": [1, 56, 70, 84, 106, 119, 170, 224], "orient": [1, 10, 59, 69, 78, 84, 158, 231], "acycl": [1, 106], "degr": [1, 7, 59, 78, 84, 95, 145, 171, 178, 192, 230], "floyd": [1, 187], "flukerson": 1, "cut": [1, 68, 107], "maximum": [1, 6, 9, 10, 12, 49, 50, 53, 56, 69, 70, 82, 83, 94, 96, 108, 110, 117, 121, 137, 151], "bi": [1, 50, 56, 187, 199, 216, 224], "pagerank": 1, "appari": [1, 9, 51, 95, 183, 187], "edmond": [1, 95], "blossum": 1, "hopcroft": [1, 187], "karp": [1, 187], "blossom": [1, 187], "5": [1, 2, 4, 6, 7, 9, 10, 11, 12, 26, 27, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 46, 49, 50, 52, 53, 54, 55, 56, 61, 62, 69, 70, 71, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 188, 189, 190, 192, 193, 195, 197, 200, 201, 202, 203, 204, 205, 210, 211, 213, 214, 216, 218, 219, 224, 225, 226, 227, 230, 231, 232, 234, 237, 239], "couplag": [1, 95, 187], "gal": 1, "shapley": 1, "mariag": [1, 115, 116], "stabl": [1, 50, 54, 56, 67, 70, 129, 132, 134, 135], "robinson": 1, "fould": 1, "robustess": [1, 56], "r\u00e9seau": [1, 62, 77, 84, 129, 182], "quantifying": 1, "robustness": 1, "metro": [1, 54, 56], "network": [1, 94, 178], "d\u00e9tect": [1, 41, 56, 69, 130, 171, 173, 199, 205, 216, 219, 220, 224, 227, 230, 239], "motif": [1, 160, 202, 203], "fr\u00e9quent": [1, 2, 9, 39, 51, 56, 58, 63, 66, 77, 88, 94, 96, 118, 129, 161, 166, 170, 192, 198, 204, 216, 219, 224, 228, 229, 230, 231, 232, 235, 237], "fp": [1, 11], "growth": [1, 169], "text": [1, 2, 4, 11, 30, 33, 35, 42, 51, 54, 56, 58, 59, 61, 62, 64, 70, 71, 74, 77, 82, 87, 96, 109, 110, 122, 127, 128, 130, 131, 132, 140, 144, 160, 161, 165, 166, 178, 179, 190, 192, 195, 200, 206, 208, 219, 220, 226, 228, 230, 231, 233, 234, 235, 237, 239], "knuth": 1, "morr": 1, "pratt": 1, "rabin": 1, "jaccard": 1, "gramm": 1, "aho": 1, "corasick": 1, "auss": [1, 2, 4, 10, 14, 19, 20, 27, 30, 33, 34, 39, 40, 41, 42, 46, 50, 51, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 74, 81, 84, 85, 88, 94, 95, 113, 114, 115, 118, 119, 129, 130, 132, 139, 148, 154, 157, 159, 165, 166, 167, 170, 172, 174, 175, 178, 182, 183, 192, 195, 199, 201, 204, 206, 207, 208, 214, 216, 219, 220, 222, 224, 226, 230, 231, 232, 234, 235, 237, 239], "commentz": 1, "walt": 1, "burrow": 1, "wheel": [1, 16, 224], "aprior": 1, "apprentissag": [1, 27, 62, 126, 128, 129, 134, 137, 139, 141, 144, 145, 181, 184, 224], "regl": [1, 30, 53, 56, 59, 60, 61, 69, 81, 182, 195, 198, 199, 216, 220, 222, 224, 230, 231, 232], "associ": [1, 2, 3, 10, 14, 30, 51, 53, 56, 59, 61, 62, 69, 70, 74, 78, 87, 91, 100, 109, 115, 116, 134, 166, 170, 178, 179, 183, 192, 195, 201, 207, 210, 216, 219, 225, 226, 227, 230, 231, 232, 234, 237, 239], "boi": 1, "moor": 1, "string": [1, 11, 40, 50, 51, 69, 70, 160, 161, 167, 186, 187, 198, 224, 230, 231, 232, 234], "simplex": 1, "lin\u00e9air": [1, 49, 56, 61, 62, 77, 88, 109, 110, 111, 112, 113, 114, 128, 129, 134, 144, 145, 157, 163, 173, 174, 175, 181, 224, 234], "thes": [1, 11, 186, 187, 224], "neld": [1, 50], "mead": [1, 50], "codag": 1, "huffman": [1, 94], "lz77": 1, "lz78": 1, "bootstrap": 1, "intervall": [1, 2, 31, 33, 53, 56, 61, 62, 69, 70, 83, 85, 95, 110, 111, 112, 113, 154, 176, 177, 184, 185, 194, 195, 226, 234, 237], "confianc": [1, 56, 132, 195], "filtr": [1, 7, 144, 165, 232, 239], "bloom": 1, "woodbury": 1, "identity": [1, 53, 121, 213], "blockwis": 1, "invers": [1, 6, 10, 30, 39, 41, 42, 49, 50, 51, 56, 59, 69, 70, 77, 85, 108, 118, 122, 136, 148, 161, 170, 174, 189, 198, 199, 203, 216, 219, 224, 228, 231, 232, 235, 237], "toom": 1, "cook": 1, "canopy": 1, "clustering": [1, 14, 22, 58, 61, 123], "lru": 1, "last": [1, 2, 4, 51, 64, 65, 69, 71, 88, 89, 91, 99, 100, 102, 103, 108, 113, 183, 216, 219, 220, 224, 226, 230, 231, 239], "recent": [1, 2, 4, 51, 64, 69, 71, 99, 100, 102, 103, 108, 183, 216, 219, 220, 224, 226, 230, 231, 239], "used": [1, 4, 11, 30, 234], "yield": [1, 39, 52, 99, 147, 169, 173, 216, 230], "m\u00e9mo\u00efz": 1, "fonction": [1, 4, 7, 10, 14, 19, 27, 32, 33, 34, 38, 40, 41, 42, 50, 52, 56, 58, 62, 66, 71, 74, 78, 79, 80, 81, 83, 86, 89, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 127, 129, 132, 134, 135, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 154, 157, 160, 163, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 194, 197, 198, 204, 205, 206, 207, 208, 210, 211, 213, 214, 218, 219, 220, 222, 225, 227, 228, 232, 234, 235, 237, 240], "fonctionnel": [1, 38, 69, 74, 216], "r\u00e9curs": [1, 2, 30, 69, 79, 80, 81, 83, 106, 118, 130, 161, 182, 185, 214, 231, 232, 237], "kahan": 1, "summat": [1, 186, 187], "probabil": [1, 159], "probabilistic": 1, "dat": [1, 2, 3, 7, 14, 37, 39, 40, 46, 50, 54, 56, 62, 70, 72, 77, 85, 86, 117, 131, 132, 133, 134, 135, 140, 145, 158, 160, 161, 164, 166, 169, 178, 193, 198, 199, 216, 224, 229, 231, 232, 234, 235, 239], "web": [1, 2, 15, 22, 69, 71, 74, 127, 198, 199, 222, 227, 235, 236], "analytic": 1, "mining": 1, "compress": [1, 78, 94, 161, 198, 206, 232], "lzfse": 1, "lzma": 1, "squash": 1, "benchmark": [1, 50], "inspir": [1, 30, 33, 50, 56, 59, 62, 84, 94, 95, 106, 110, 115, 116, 134, 143, 154, 157, 172, 182, 185, 199, 202, 203], "quantiqu": [1, 19, 74], "quantum": 1, "inspired": [1, 4], "classical": 1, "recommend": 1, "system": [1, 4, 46, 50, 51, 56, 71, 78, 83, 85, 94, 109, 110, 176, 177, 227, 228, 231, 232, 234, 237, 239], "beaucoup": [1, 6, 7, 14, 18, 30, 33, 51, 53, 56, 58, 59, 60, 61, 69, 70, 71, 73, 74, 81, 84, 87, 91, 100, 101, 106, 108, 112, 114, 128, 131, 144, 153, 154, 166, 170, 173, 182, 188, 189, 192, 193, 198, 199, 200, 205, 216, 218, 224, 228, 231, 232, 235, 237, 239], "projet": [1, 46, 54, 56, 58, 62, 130, 131, 188, 218, 234], "thealgorithm": 1, "modul": [1, 2, 6, 11, 12, 13, 14, 32, 33, 39, 46, 49, 50, 51, 59, 62, 64, 65, 66, 95, 99, 100, 102, 103, 108, 109, 110, 111, 112, 127, 132, 134, 135, 142, 146, 153, 154, 157, 160, 161, 166, 169, 170, 172, 174, 175, 178, 180, 182, 183, 205, 206, 216, 219, 220, 222, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 239, 240], "classiqu": [1, 6, 49, 50, 55, 56, 58, 71, 88, 89, 94, 119, 198, 208, 217, 223, 229], "binair": [1, 56, 69, 77, 84, 90, 109, 111, 119, 137, 149, 161, 163, 181, 199, 207, 231, 233], "mersen": 1, "heapsort": 1, "distingu": [1, 4, 51, 56, 69, 71, 84, 95, 152, 192, 198, 204, 216, 230, 231], "trois": [1, 2, 18, 30, 38, 41, 46, 51, 56, 58, 59, 61, 66, 70, 83, 87, 91, 94, 96, 106, 144, 145, 148, 150, 152, 156, 168, 174, 175, 186, 187, 190, 192, 198, 199, 200, 203, 206, 208, 216, 219, 224, 226, 229, 231, 232, 234, 237, 239], "class": [1, 11, 15, 19, 20, 27, 41, 46, 50, 51, 56, 58, 66, 74, 85, 98, 106, 126, 129, 131, 132, 134, 135, 142, 143, 144, 147, 157, 158, 161, 169, 170, 178, 179, 180, 182, 183, 199, 206, 207, 208, 222, 225, 227, 228, 230, 231, 232, 234, 235, 237, 239, 240], "p": [1, 9, 10, 11, 27, 30, 31, 33, 40, 56, 59, 62, 65, 68, 69, 77, 84, 87, 88, 92, 93, 94, 96, 106, 108, 113, 114, 117, 121, 133, 145, 146, 148, 150, 151, 153, 154, 157, 161, 165, 166, 167, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 199, 205, 208, 210, 211, 213, 214, 216, 225, 230, 232, 239], "Un": [1, 4, 7, 15, 27, 30, 33, 35, 38, 40, 41, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 69, 70, 71, 78, 82, 87, 96, 99, 108, 109, 111, 112, 113, 114, 115, 116, 127, 128, 129, 132, 137, 142, 146, 147, 150, 160, 161, 163, 170, 176, 177, 184, 188, 192, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 210, 214, 216, 222, 224, 228, 230, 232, 233, 235], "appartient": [1, 38, 58, 59, 83, 84, 110, 154, 166, 170, 178, 179, 206, 216, 224, 230, 231, 239], "\u00eatre": [1, 2, 4, 14, 30, 39, 41, 42, 50, 51, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 81, 84, 85, 91, 93, 94, 95, 96, 100, 106, 108, 110, 111, 112, 113, 114, 117, 118, 128, 129, 130, 131, 132, 135, 139, 140, 142, 144, 146, 147, 148, 150, 160, 161, 163, 165, 166, 168, 170, 171, 172, 174, 182, 183, 184, 188, 192, 193, 194, 198, 199, 204, 205, 206, 207, 208, 216, 219, 222, 224, 226, 228, 230, 231, 232, 234, 237, 239], "d\u00e9cid": [1, 33, 56, 69, 81, 94, 95, 118, 199, 219], "polyn\u00f4mial": [1, 42, 58, 61, 62, 92, 126, 129, 182, 187], "d\u00e9cis": [1, 27, 56, 60, 61, 62, 70, 129, 135, 136, 137, 207], "turing": 1, "polynomial": [1, 95, 178], "rapport": [1, 30, 46, 56, 58, 70, 74, 77, 95, 111, 112, 114, 118, 132, 165, 173, 181, 190, 216, 218, 224, 230, 236, 237], "taill": [1, 9, 10, 12, 13, 41, 50, 51, 52, 53, 59, 61, 69, 74, 87, 88, 94, 96, 106, 110, 111, 112, 115, 116, 117, 157, 159, 163, 170, 173, 182, 183, 184, 195, 206, 207, 208, 209, 210, 216, 224, 230, 231, 232, 235, 237], "entr\u00e9": [1, 4, 38, 49, 50, 71, 73, 77, 117, 146, 148, 157, 172, 192, 198, 199, 208, 216, 219, 220, 224, 226, 228, 230, 240], "impliqu": [1, 32, 39, 50, 53, 56, 69, 70, 85, 98, 114, 142, 154, 216, 224, 230, 232], "possibl": [1, 2, 4, 6, 7, 17, 30, 33, 37, 39, 41, 42, 50, 51, 54, 56, 58, 59, 61, 62, 69, 70, 71, 74, 78, 79, 80, 83, 84, 85, 86, 94, 95, 101, 108, 114, 115, 116, 117, 121, 123, 142, 151, 155, 158, 159, 161, 170, 176, 177, 178, 179, 181, 182, 183, 186, 187, 189, 190, 192, 198, 199, 200, 204, 205, 206, 207, 210, 216, 219, 220, 222, 224, 226, 228, 231, 232, 234, 235, 237, 239], "v\u00e9rifi": [1, 7, 14, 33, 38, 41, 46, 54, 56, 59, 61, 62, 64, 69, 70, 74, 77, 81, 83, 84, 93, 94, 98, 100, 110, 111, 112, 113, 114, 119, 132, 134, 137, 146, 148, 149, 160, 170, 174, 175, 178, 189, 197, 206, 210, 222, 224, 230, 231, 232, 234, 237, 239], "admet": [1, 61, 110, 195], "capabl": [1, 33, 60, 92, 148, 178, 204, 216, 224, 232, 234, 237], "pr\u00e9cis": [1, 4, 27, 40, 50, 51, 52, 56, 69, 70, 71, 74, 82, 108, 110, 113, 114, 118, 128, 132, 138, 154, 159, 188, 199, 200, 206, 216, 219, 220, 224, 228, 230, 231, 232, 234, 235, 237, 239], "r\u00e9duct": [1, 53, 120], "f": [1, 2, 4, 9, 11, 12, 31, 34, 39, 40, 46, 50, 51, 54, 59, 61, 62, 65, 69, 70, 71, 77, 79, 82, 83, 87, 89, 94, 95, 100, 101, 104, 105, 108, 110, 111, 112, 122, 134, 145, 146, 147, 148, 150, 154, 156, 157, 161, 166, 172, 182, 188, 192, 193, 194, 195, 198, 199, 201, 205, 207, 208, 210, 213, 216, 219, 220, 224, 226, 228, 230, 232, 234, 237, 239], "bpp": 1, "objet": [1, 2, 4, 19, 30, 32, 36, 50, 51, 56, 61, 69, 70, 71, 148, 150, 152, 161, 169, 170, 188, 190, 192, 193, 205, 207, 216, 219, 223, 225, 226, 227, 230, 234, 235, 237, 239], "th\u00e9or": [1, 62, 216], "informat": [1, 30, 41, 56, 69, 152, 161, 188, 195, 216, 218, 228, 230, 232], "th\u00e9oriqu": [1, 14, 56, 70, 77, 147, 207], "d\u00e9fin": [1, 4, 7, 9, 10, 30, 33, 34, 38, 41, 50, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 78, 82, 84, 111, 113, 114, 130, 146, 148, 150, 152, 154, 161, 174, 178, 182, 188, 192, 198, 199, 205, 206, 207, 208, 216, 220, 221, 222, 224, 228, 230, 231, 232, 234, 235, 237, 239], "acronym": [1, 192], "vient": [1, 21, 41, 56, 83, 93, 94, 95, 103, 144, 153, 154, 168, 188, 191, 200, 216, 224, 230, 232], "bounded": 1, "error": [1, 40, 85, 145, 220], "tim": [1, 4, 11, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 56, 58, 59, 71, 77, 84, 87, 88, 90, 91, 93, 118, 128, 139, 141, 144, 145, 153, 154, 165, 166, 167, 171, 173, 174, 175, 178, 180, 181, 186, 187, 189, 193, 205, 206, 207, 216, 224, 227, 234, 237], "encor": [1, 4, 9, 14, 20, 34, 38, 41, 50, 51, 56, 58, 59, 62, 69, 71, 74, 77, 81, 83, 86, 87, 88, 91, 95, 96, 102, 103, 113, 114, 121, 122, 137, 146, 148, 156, 165, 182, 183, 184, 188, 189, 199, 203, 204, 207, 216, 218, 222, 225, 230, 231, 232, 234, 237, 239], "irr\u00e9solu": 1, "Une": [1, 2, 4, 14, 30, 33, 34, 38, 51, 56, 59, 60, 61, 62, 69, 70, 71, 74, 77, 79, 80, 82, 86, 88, 89, 91, 94, 100, 106, 108, 113, 114, 115, 116, 122, 127, 142, 146, 155, 159, 162, 170, 181, 185, 188, 190, 192, 195, 200, 201, 206, 216, 219, 224, 226, 227, 230, 231, 232, 234, 235, 237, 239], "preuv": 1, "cour": [1, 14, 51, 58, 59, 60, 62, 69, 84, 85, 90, 117, 153, 171, 198, 207, 219, 224, 230, 231, 232, 237], "logiqu": [1, 30, 51, 69, 70, 147, 198, 218, 224, 231, 235], "423": 1, "m\u00eam": [1, 4, 6, 10, 14, 18, 20, 27, 30, 32, 33, 34, 36, 38, 39, 41, 42, 50, 51, 53, 58, 59, 61, 62, 64, 69, 70, 71, 74, 79, 84, 85, 87, 88, 92, 93, 95, 96, 98, 100, 106, 108, 109, 111, 112, 114, 115, 116, 117, 122, 123, 130, 131, 134, 135, 139, 140, 141, 143, 144, 147, 148, 149, 150, 152, 153, 154, 158, 160, 161, 165, 166, 167, 168, 169, 170, 172, 173, 178, 181, 182, 183, 188, 189, 190, 192, 193, 195, 197, 199, 200, 201, 205, 206, 207, 208, 210, 213, 214, 216, 219, 220, 224, 227, 228, 230, 231, 232, 234, 235, 237, 239], "r\u00e9duir": [1, 14, 34, 51, 56, 59, 69, 74, 144, 203, 208, 231, 232, 235], "fa\u00e7on": [1, 2, 4, 7, 14, 18, 30, 33, 39, 40, 42, 46, 50, 51, 53, 56, 57, 58, 59, 60, 61, 62, 71, 73, 74, 78, 81, 83, 84, 85, 88, 90, 91, 95, 99, 102, 103, 109, 110, 111, 113, 115, 116, 118, 120, 121, 123, 129, 130, 131, 132, 135, 139, 144, 147, 148, 150, 152, 153, 154, 155, 157, 158, 161, 165, 166, 170, 171, 178, 182, 188, 192, 198, 199, 204, 205, 206, 209, 214, 216, 219, 220, 224, 226, 228, 230, 231, 232, 234, 236, 237], "dont": [1, 2, 4, 14, 27, 30, 38, 41, 46, 51, 52, 53, 56, 59, 60, 61, 62, 69, 70, 71, 77, 83, 84, 99, 113, 114, 115, 116, 119, 145, 146, 148, 157, 168, 170, 172, 182, 184, 195, 199, 204, 205, 206, 207, 216, 219, 220, 224, 226, 228, 230, 231, 232, 234, 237, 239], "cherch": [1, 2, 4, 33, 38, 50, 51, 52, 54, 56, 59, 61, 62, 69, 71, 74, 83, 86, 88, 94, 95, 96, 106, 108, 109, 110, 113, 114, 115, 116, 119, 121, 129, 134, 136, 137, 138, 142, 148, 151, 154, 159, 165, 168, 169, 172, 174, 175, 176, 177, 178, 182, 185, 186, 187, 192, 194, 201, 204, 208, 209, 210, 214, 216, 218, 219, 224, 226, 230, 231, 234, 239], "puiss": [1, 30, 62, 108, 134, 184, 198, 199, 216, 224], "r\u00e9ciproqu": [1, 2, 38, 69, 108, 155, 161, 192, 216, 224, 228, 230, 231, 232, 235], "premi": [1, 4, 6, 7, 15, 18, 19, 27, 30, 33, 34, 38, 41, 42, 46, 49, 50, 51, 53, 56, 58, 59, 61, 62, 69, 70, 71, 74, 77, 79, 80, 81, 82, 83, 84, 87, 89, 91, 94, 96, 98, 99, 100, 102, 103, 106, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 123, 127, 128, 130, 131, 132, 133, 135, 137, 138, 139, 147, 148, 150, 152, 155, 156, 158, 161, 165, 168, 170, 173, 174, 175, 178, 179, 181, 182, 183, 189, 190, 192, 197, 198, 199, 203, 204, 206, 207, 208, 209, 214, 216, 219, 220, 222, 224, 228, 230, 231, 232, 234, 235, 236, 239], "lequel": [1, 4, 7, 51, 58, 69, 71, 74, 77, 79, 82, 93, 95, 101, 128, 182, 183, 187, 192, 193, 216, 225, 228, 230, 231, 232, 234, 237], "compl\u00e9tud": 1, "th\u00e9orem": [1, 60, 61, 132, 148, 195], "stephen": [1, 56], "sat": 1, "\u00e9quivalent": [1, 2, 30, 33, 34, 38, 42, 51, 56, 69, 110, 136, 137, 147, 153, 156, 181, 183, 184, 185, 186, 187, 188, 198, 207, 216, 219, 224, 226, 230, 231, 232, 236, 239], "pr\u00e9sentent": [1, 56, 161, 198, 224, 232], "sous": [1, 2, 8, 10, 14, 23, 27, 38, 46, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 69, 70, 74, 77, 78, 80, 87, 95, 96, 99, 104, 105, 123, 129, 132, 142, 143, 158, 161, 170, 182, 183, 184, 188, 198, 199, 208, 216, 219, 222, 230, 231, 232, 234, 235, 237, 239], "or": [1, 2, 4, 11, 27, 30, 40, 41, 42, 46, 50, 54, 56, 69, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 96, 99, 100, 102, 106, 110, 111, 112, 113, 114, 119, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 156, 158, 166, 172, 180, 184, 185, 186, 187, 190, 191, 195, 210, 211, 213, 219, 224, 226, 230, 231, 234, 235, 239], "acc": [1, 56, 59, 62, 70], "v\u00e9rif": [1, 33, 38, 41, 50, 51, 56, 59, 61, 62, 64, 69, 74, 77, 78, 80, 81, 82, 85, 91, 94, 95, 98, 99, 100, 106, 108, 109, 111, 112, 113, 132, 146, 148, 150, 154, 163, 170, 174, 175, 182, 195, 197, 198, 207, 209, 213, 216, 220, 224, 230, 231, 234, 237, 239], "claus": [1, 30, 208, 219, 230], "vee_k": 1, "y_": [1, 31, 61, 62, 70, 130], "1k": [1, 61], "wedg": 1, "n_k": 1, "k": [1, 2, 6, 7, 10, 33, 38, 39, 46, 49, 50, 51, 52, 58, 59, 61, 62, 69, 77, 79, 83, 84, 85, 87, 90, 91, 94, 95, 96, 99, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 128, 129, 130, 132, 134, 135, 137, 139, 141, 147, 148, 154, 155, 163, 164, 166, 170, 173, 179, 183, 184, 185, 192, 193, 195, 205, 206, 207, 209, 213, 214, 216, 226, 230, 231, 239], "ik": [1, 42, 84], "x_i": [1, 50, 61, 62, 77, 109, 110, 111, 112, 113, 114, 132, 176, 177, 178, 179, 181, 195], "neg": [1, 51], "pass": [1, 2, 4, 10, 14, 19, 32, 33, 35, 37, 38, 39, 41, 42, 50, 51, 54, 56, 58, 59, 60, 61, 62, 69, 71, 78, 83, 85, 88, 89, 95, 100, 108, 111, 112, 113, 122, 123, 129, 134, 135, 138, 147, 148, 155, 158, 160, 165, 166, 167, 169, 170, 172, 180, 181, 182, 185, 188, 189, 190, 191, 192, 195, 197, 198, 199, 200, 207, 208, 209, 214, 216, 219, 222, 224, 226, 228, 231, 232, 234, 235, 236, 237, 239], "\u00e9valu": [1, 14, 22, 27, 41, 50, 56, 62, 97, 126, 128, 135, 139, 142, 230, 231], "sup\u00e9rieur": [1, 2, 27, 56, 70, 74, 84, 88, 95, 108, 109, 110, 112, 113, 114, 135, 168, 208, 213, 224, 226, 230, 231, 232], "certain": [1, 4, 9, 14, 39, 42, 46, 51, 53, 54, 56, 57, 58, 59, 62, 64, 69, 70, 71, 74, 77, 83, 99, 108, 147, 149, 153, 168, 169, 182, 188, 190, 195, 198, 199, 204, 214, 216, 218, 219, 222, 224, 227, 230, 231, 232, 234, 235, 237, 239], "seuil": [1, 7, 27, 56, 77, 95, 132, 135], "wikip\u00e9di": [1, 51, 80, 161, 202, 203], "version": [1, 2, 4, 16, 37, 39, 40, 41, 42, 50, 51, 54, 56, 61, 65, 68, 69, 70, 71, 74, 80, 83, 91, 94, 106, 111, 112, 140, 142, 154, 161, 162, 165, 166, 189, 190, 195, 199, 201, 205, 208, 210, 216, 224, 225, 226, 228, 230, 231, 232, 234, 237, 239], "fran\u00e7ais": [1, 60, 61, 62], "concept": [1, 41, 56, 61, 69, 188, 216, 218, 224, 229, 237], "statist": [1, 14, 49, 51, 56, 61, 62, 70, 84, 129, 139, 165, 166, 171, 205], "introduct": [1, 46, 51, 56, 73, 85, 223], "\u00e9chantillon": [1, 50, 51, 62, 70, 93, 95, 174, 175, 182], "markov": [1, 58, 61, 210], "central": [1, 2, 195, 226], "flow": [1, 186, 187], "blossom5": 1, "matching": 1, "local": [1, 3, 4, 11, 21, 34, 46, 56, 61, 68, 69, 140, 141, 142, 166, 169, 180, 216, 220, 228, 232, 235, 237], "max": [1, 6, 10, 31, 49, 50, 51, 53, 54, 56, 62, 69, 70, 77, 81, 82, 83, 85, 87, 89, 91, 95, 110, 113, 114, 116, 121, 129, 131, 135, 137, 139, 140, 144, 146, 147, 149, 151, 159, 163, 170, 178, 179, 185, 189, 195, 207, 208, 216, 230, 231, 239], "smoothed": 1, "expand": [1, 224], "geometric": 1, "embedding": 1, "partitioning": 1, "partitionning": 1, "read": [1, 31, 39, 40, 51, 54, 68, 96, 161, 169, 198, 199, 205, 220, 228, 232, 235, 237, 239], "optimized": 1, "period": 1, "order": [1, 30, 50, 56, 113, 161, 186, 187, 216, 219], "preserving": 1, "recurs": [1, 30, 65, 111, 112, 166, 192], "gram": 1, "hashing": [1, 61], "is": [1, 4, 10, 11, 27, 30, 31, 33, 39, 46, 50, 53, 54, 65, 75, 80, 81, 83, 85, 86, 87, 88, 89, 93, 94, 99, 100, 103, 110, 111, 112, 113, 114, 118, 119, 122, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 155, 160, 166, 172, 180, 183, 185, 186, 187, 195, 207, 210, 211, 214, 216, 224, 230, 231, 234, 235, 237, 239], "pairwis": [1, 121], "independent": 1, "at": [1, 4, 11, 26, 27, 30, 39, 42, 50, 51, 56, 62, 69, 77, 99, 104, 105, 111, 112, 118, 134, 146, 147, 186, 187, 188, 199, 224, 228, 230, 231, 235], "best": [1, 30, 83, 85, 87, 92, 108, 114, 115, 116, 160, 183, 185, 211], "hash": [1, 161, 193], "featur": [1, 46, 62, 126, 138, 145, 199], "classif": [1, 5, 14, 22, 60, 129, 132, 181, 204], "malwar": 1, "detect": [1, 54, 130, 199, 205], "computing": 1, "deriv": 1, "tensor": 1, "express": [1, 10, 41, 50, 51, 69, 70, 75, 106, 110, 127, 146, 149, 155, 170, 182, 216, 230, 231, 232, 234, 240], "prec": [1, 27, 41, 46, 50, 56, 61, 73, 79, 83, 99, 100, 106, 108, 170, 182, 192, 194, 195, 220, 222, 224, 228, 230, 231, 239], "op\u00e9rationnel": [1, 4, 71, 210], "robert": 1, "faur": 1, "bernard": [1, 199], "lemair": 1, "christoph": 1, "picouleau": 1, "programming": [1, 17, 184], "pearl": 1, "jon": 1, "bentley": 1, "3rd": [1, 56], "edit": [1, 4, 56, 62, 67, 81, 224], "thom": 1, "cormen": 1, "charl": [1, 96, 152], "e": [1, 6, 11, 27, 33, 38, 39, 40, 41, 49, 50, 51, 53, 54, 56, 59, 62, 69, 77, 80, 87, 88, 94, 95, 96, 97, 117, 120, 122, 137, 144, 146, 147, 149, 157, 160, 169, 170, 173, 178, 179, 182, 183, 184, 192, 193, 197, 199, 200, 201, 204, 205, 208, 210, 214, 216, 219, 220, 224, 225, 230, 231, 232, 234, 235, 237, 239], "leiserson": 1, "ronald": 1, "rivest": 1, "clifford": 1, "stein": 1, "128": [1, 83, 90, 106, 151, 220], "compr": [1, 2, 53, 56, 69, 71, 132, 137, 189, 190, 192, 199, 207, 216, 224, 230, 231, 239], "cod": [1, 2, 4, 6, 11, 16, 19, 23, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 51, 53, 54, 58, 60, 62, 64, 70, 71, 72, 73, 74, 77, 81, 89, 94, 95, 97, 99, 100, 101, 103, 109, 111, 112, 113, 114, 118, 119, 123, 127, 128, 139, 146, 147, 148, 150, 156, 157, 158, 161, 166, 167, 170, 176, 177, 180, 184, 185, 186, 187, 188, 190, 198, 199, 200, 206, 207, 208, 216, 218, 219, 220, 222, 224, 226, 228, 230, 231, 232, 234, 235, 237], "vi": [1, 2, 4, 14, 16, 39, 46, 50, 51, 56, 61, 62, 70, 71, 81, 108, 153, 184, 198, 199, 216, 224, 230, 232, 235, 237], "accompagn": [1, 4, 56, 70, 71], "r\u00e9pertoir": [1, 4, 7, 12, 13, 69, 71, 172, 198, 224, 232, 234, 239], "github": [1, 7, 19, 22, 27, 39, 46, 50, 51, 52, 53, 54, 55, 64, 65, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 220, 224, 234], "tryalgo": 1, "document": [1, 27, 50, 51, 52, 54, 61, 75, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 170, 180, 198, 216, 219, 224, 228, 231, 234, 237], "r\u00e9solu": [1, 18, 24, 29, 43, 46, 56, 84, 94, 123, 158, 231, 241], "Des": [1, 19, 56, 62, 66, 74, 231], "appliqu": [1, 2, 7, 15, 27, 39, 41, 51, 56, 58, 60, 61, 62, 69, 70, 74, 77, 80, 81, 85, 89, 93, 94, 108, 109, 118, 127, 129, 130, 134, 136, 144, 146, 147, 148, 152, 156, 160, 161, 165, 171, 174, 178, 179, 182, 188, 198, 204, 206, 208, 209, 213, 216, 219, 220, 224, 226, 230, 231, 232, 234, 235, 237, 239], "efficient": [1, 53, 56, 95], "practical": 1, "preconditioning": 1, "solving": 1, "laplacian": 1, "survey": 1, "driven": [1, 56, 70], "dictionary": [1, 2, 4, 7, 11, 95, 216, 224, 226, 231, 234], "based": [1, 11, 58, 85, 186, 187], "method": [1, 11, 30, 50, 54, 56, 133, 134, 165, 166, 167, 180, 216, 219, 220, 224, 231, 234], "3d": [1, 50], "modeling": [1, 56], "project": [1, 4, 46, 50, 58, 62, 71, 126, 129], "eul": [1, 50, 95], "archiv": 1, "jam": [1, 9, 14, 23, 27, 42, 50, 54, 56, 59, 60, 61, 69, 83, 99, 100, 107, 108, 154, 161, 184, 185, 186, 187, 192, 199, 216, 219, 220, 224, 230, 231, 237, 239], "2020": [1, 54, 85, 97], "2019": [1, 97], "2018": [1, 97, 161], "2017": [1, 61, 97, 227], "earli": 1, "leetcod": 1, "comp\u00e9tit": [1, 56], "recensent": [1, 117], "plusieur": [1, 4, 14, 30, 33, 42, 46, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 69, 70, 71, 74, 77, 78, 82, 93, 109, 110, 112, 113, 114, 115, 116, 119, 123, 126, 128, 137, 139, 144, 145, 151, 162, 165, 172, 182, 183, 185, 187, 188, 190, 195, 197, 198, 199, 205, 206, 208, 216, 219, 228, 231, 232, 233, 236, 237, 239], "ci": [1, 2, 16, 27, 39, 42, 50, 53, 54, 56, 58, 59, 61, 62, 69, 71, 74, 77, 80, 82, 86, 88, 94, 100, 106, 108, 110, 111, 112, 117, 119, 132, 137, 139, 144, 148, 150, 155, 161, 169, 170, 173, 181, 182, 188, 198, 200, 204, 207, 216, 219, 220, 222, 224, 225, 226, 227, 230, 231, 232, 234, 235, 237, 239], "southwestern": 1, "europ": [1, 46, 199], "regional": 1, "contest": 1, "swerc": 1, "pr\u00e9c\u00e9dent": [1, 15, 19, 20, 38, 50, 51, 56, 58, 59, 62, 69, 70, 79, 80, 81, 82, 83, 84, 86, 88, 89, 95, 106, 108, 109, 110, 111, 112, 113, 114, 119, 129, 151, 154, 156, 159, 170, 172, 174, 175, 178, 181, 185, 190, 192, 193, 194, 198, 201, 203, 207, 208, 216, 219, 220, 224, 228, 230, 231, 232, 234, 237, 239], "acm": 1, "icpc": 1, "liv": 1, "castor": 1, "jeun": [1, 178, 179, 199], "coding": [1, 2, 71, 74, 198, 199, 224, 228, 231], "you": [1, 11, 31, 46, 65, 186, 187, 216], "should": [1, 31, 166], "know": [1, 6, 30], "least": [1, 30, 110, 118, 137], "languag": [1, 22, 54, 82, 87, 161, 199, 205, 207, 231, 235], "really": 1, "wel": [1, 11], "it": [1, 11, 31, 39, 42, 50, 65, 85, 92, 95, 110, 115, 116, 128, 186, 187, 216, 224, 230], "preferably": 1, "be": [1, 2, 4, 10, 11, 30, 46, 50, 54, 65, 75, 85, 134, 140, 142, 166, 186, 187, 199, 214, 224, 226, 230], "jav": [1, 67], "ok": [1, 31, 216, 224, 230], "too": [1, 65, 144, 186, 187, 230], "sinc": [1, 65, 186, 187], "pretty": 1, "similar": 1, "will": [1, 11, 46, 65, 85, 140, 142, 186, 187, 224], "expected": [1, 31, 84, 85, 134, 142, 144, 146, 171, 230], "writ": [1, 31, 40, 51, 54, 69, 158, 161, 198, 199, 205, 219, 220, 232], "som": [1, 30, 31, 58, 65, 134], "your": [1, 65], "interview": [1, 56], "amount": 1, "detail": [1, 2, 71, 74, 158, 224, 231], "about": [1, 2, 4, 6, 14, 41, 56, 59, 60, 69, 81, 84, 106, 109, 148, 156, 182, 186, 187, 224, 226, 231, 235, 237], "favorit": 1, "sorting": [1, 231], "how": [1, 4, 31, 50, 51, 71, 109, 186, 187, 193, 220, 231], "do": [1, 11, 16, 40, 50, 65, 68, 75, 99, 100, 186, 187, 199, 216, 220, 230, 231], "bubbl": 1, "log": [1, 50, 62, 65, 67, 73, 77, 85, 99, 109, 132, 133, 135, 145, 147, 158, 173, 192, 195, 199, 207, 209, 220, 222, 232, 234, 237], "two": [1, 10, 11, 12, 13, 30, 31, 50, 51, 56, 85, 118, 186, 187], "say": 1, "quick": [1, 50], "merg": [1, 54, 65, 75, 158], "can": [1, 2, 4, 11, 31, 39, 46, 50, 65, 71, 102, 220, 224, 225, 226], "highly": 1, "useful": [1, 11], "situat": [1, 56, 216, 218, 230, 237], "wher": [1, 4, 13, 50, 51, 186, 187, 224], "impractical": 1, "so": [1, 10, 31, 75, 85, 186, 187], "tak": [1, 10, 53], "look": [1, 11, 50], "hashtabl": 1, "arguably": 1, "singl": [1, 54, 126], "most": [1, 2, 4, 51, 64, 69, 71, 99, 100, 102, 103, 108, 183, 186, 187, 216, 219, 220, 224, 226, 230, 231, 234, 239], "import": [1, 2, 4, 6, 11, 12, 13, 14, 26, 27, 30, 31, 32, 35, 36, 37, 39, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 65, 68, 69, 71, 74, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 219, 220, 222, 225, 226, 227, 228, 230, 231, 232, 235, 237, 239], "known": 1, "mankind": 1, "absolutely": 1, "they": [1, 56, 65, 224, 234], "work": [1, 40], "able": 1, "only": [1, 4, 10, 11, 134, 137, 234], "spac": [1, 10, 77, 140, 144, 166], "basic": [1, 6, 71], "construct": [1, 52, 56, 59, 61, 84, 110, 165, 179, 182, 198, 199, 207, 217, 223, 229, 231, 237, 239], "traversal": 1, "manipul": [1, 15, 19, 32, 33, 41, 45, 46, 48, 49, 56, 61, 69, 70, 74, 161, 188, 198, 208, 216, 219, 228, 230, 233, 234], "familiariz": 1, "yourself": 1, "with": [1, 2, 4, 11, 27, 30, 31, 32, 40, 50, 51, 54, 69, 71, 75, 77, 96, 110, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 158, 161, 166, 169, 180, 181, 182, 186, 187, 199, 205, 219, 220, 222, 224, 228, 230, 231, 232, 237], "binary": [1, 67, 232], "ary": 1, "familiar": 1, "typ": [1, 2, 30, 38, 39, 40, 46, 50, 51, 52, 56, 58, 59, 61, 64, 65, 66, 68, 77, 84, 99, 100, 103, 108, 134, 140, 146, 148, 150, 152, 153, 158, 161, 165, 166, 167, 169, 170, 183, 187, 188, 190, 192, 193, 198, 200, 201, 207, 208, 217, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 235, 237, 239], "balanced": 1, "wheth": [1, 75, 224], "red": [1, 11, 26, 46, 54, 62, 77, 104, 105, 131, 132, 133, 134, 135, 138, 139, 151, 169, 224], "black": [1, 11, 46, 144, 146, 224], "splay": 1, "avl": [1, 193], "implemented": [1, 134], "understand": 1, "treetraversal": 1, "bf": 1, "df": [1, 11, 26, 31, 37, 46, 51, 52, 54, 62, 68, 78, 85, 86, 88, 91, 108, 113, 114, 117, 128, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 157, 158, 163, 164, 169, 173, 178, 179, 182, 183, 199, 231], "different": [1, 4, 11, 30, 31, 51, 110, 111, 112, 134, 186, 187, 234], "between": [1, 10, 11, 12, 13, 31, 186, 187, 234], "inord": 1, "postord": 1, "preord": 1, "are": [1, 30, 31, 50, 65, 132, 145, 166, 186, 187, 224, 231, 234], "ther": [1, 30, 65, 145, 186, 187], "way": [1, 4, 7, 50, 51, 71, 160, 186, 187], "represent": [1, 11, 27, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 161, 180], "memory": [1, 11, 68, 224], "pointer": 1, "adjacency": 1, "each": [1, 10, 11, 30, 50, 51, 52, 53, 83, 85, 91, 93, 111, 112, 114, 121, 134, 141, 155, 161, 162, 163, 173, 180, 186, 187, 189, 195, 205, 207, 224], "pros": 1, "con": [1, 56, 84, 199], "breadth": 1, "first": [1, 11, 50, 163, 186, 187, 224], "depth": [1, 87], "their": [1, 4, 11, 186, 187], "computational": 1, "complexity": [1, 193, 207], "tradeoff": 1, "them": [1, 4, 11, 30, 53, 56, 234], "real": 1, "if": [1, 2, 4, 11, 27, 30, 31, 33, 35, 38, 39, 40, 41, 42, 46, 51, 59, 64, 65, 68, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 128, 130, 131, 132, 134, 135, 136, 144, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 205, 207, 208, 209, 210, 211, 213, 214, 216, 219, 220, 224, 226, 230, 231, 232, 234, 235, 237, 239], "get": [1, 2, 4, 39, 40, 46, 50, 51, 67, 68, 69, 81, 91, 94, 95, 100, 109, 162, 165, 166, 169, 170, 173, 183, 189, 192, 193, 205, 216, 224, 226, 230, 231, 235, 237], "chanc": [1, 59, 61, 96, 117, 134, 142, 143, 161, 199, 234], "try": [1, 27, 33, 35, 38, 39, 40, 46, 50, 51, 53, 54, 69, 70, 80, 99, 103, 108, 110, 117, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 180, 183, 197, 199, 200, 216, 220, 225, 230, 231, 235, 239], "study": [1, 31], "up": [1, 31, 51, 69], "fanci": 1, "such": [1, 4, 40, 186, 187, 239], "dijkstr": [1, 61], "other": [1, 11, 75, 205, 224], "many": [1, 30, 31, 50, 85, 166, 186, 187, 230], "especially": 1, "famous": 1, "knapsack": 1, "recogniz": 1, "when": [1, 7, 11, 16, 186, 187, 224], "ask": 1, "disguis": 1, "find": [1, 10, 11, 30, 31, 68, 69, 96, 169, 207, 231, 239], "out": [1, 11, 31, 40, 51, 65, 75, 100, 102, 103, 130, 186, 187, 216, 220, 230], "whatnp": 1, "mean": [1, 50, 51, 52, 53, 54, 77, 83, 85, 86, 91, 93, 110, 111, 112, 113, 114, 115, 116, 117, 121, 129, 131, 134, 135, 136, 137, 142, 144, 155, 161, 162, 163, 167, 173, 180, 189, 195, 205, 207, 210, 216], "mathematic": 1, "interviewer": 1, "discret": [1, 58, 62, 109, 133], "math": [1, 14, 30, 41, 50, 51, 98, 99, 104, 105, 115, 120, 129, 152, 159, 161, 173, 179, 182, 192, 194, 195, 198, 199, 201, 207, 209, 216, 220, 230, 234, 237], "question": [1, 27, 30, 41, 50, 51, 53, 56, 61, 69, 74, 83, 86, 88, 89, 94, 95, 98, 99, 101, 106, 108, 109, 111, 113, 114, 115, 116, 118, 129, 158, 169, 174, 194, 200, 208, 210, 216, 217, 224, 230, 237], "this": [1, 3, 4, 11, 27, 30, 31, 65, 75, 81, 93, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 180, 186, 187, 224, 230, 234, 237], "mor": [1, 6, 53, 56, 158], "prevalent": 1, "than": [1, 30, 31, 50, 56, 93, 137, 173, 186, 187], "compan": 1, "becaus": 1, "counting": 1, "probability": 1, "101": [1, 50, 54, 122, 135], "surround": 1, "us": 1, "spend": [1, 186, 187], "befor": [1, 11, 30, 56, 140, 142, 207], "refreshing": 1, "teaching": 1, "essential": 1, "combinatoric": 1, "choos": [1, 186, 187], "ilk": 1, "operating": [1, 24, 25, 28, 126, 140, 142, 241], "process": [1, 4, 11, 239], "thread": [1, 32, 64, 224, 234, 236], "concurrency": 1, "lock": [1, 32, 224, 236], "mutex": 1, "semaphor": [1, 237], "monitor": 1, "knowabout": 1, "deadlock": 1, "livelock": 1, "avoid": [1, 30, 95, 239], "what": [1, 4, 16, 50, 71, 160, 186, 187, 224, 234], "resourc": [1, 85, 224], "need": [1, 11, 31, 65], "context": [1, 219, 220, 230, 237], "switching": 1, "initiated": 1, "by": [1, 4, 10, 11, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 56, 69, 165, 166, 167, 180, 186, 187, 199, 219, 224, 234], "underlying": 1, "hardwar": 1, "littl": [1, 6], "scheduling": 1, "world": [1, 46, 51, 69], "rapidly": 1, "moving": [1, 56], "toward": 1, "mult": [1, 56, 70, 126], "cor": [1, 51, 54, 61, 65, 83, 110, 129, 130, 165, 166, 167, 175, 180, 185, 198, 220], "fundamental": 1, "modern": 1, "inform": [1, 2, 7, 14, 27, 30, 38, 39, 40, 41, 46, 51, 56, 61, 62, 69, 70, 74, 78, 81, 96, 113, 114, 129, 132, 138, 146, 158, 161, 166, 169, 170, 198, 201, 216, 219, 220, 222, 224, 226, 228, 230, 232, 234, 235, 239], "design": [1, 61, 134, 145, 216, 237], "distributed": [1, 56], "parallel": [1, 82, 113, 114, 170, 180, 224, 236, 237], "commentaire_accentu": [2, 5, 71], "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 56, 62, 64, 67, 69, 70, 71, 73, 220, 224, 230, 234], "aid": [2, 27, 38, 42, 50, 56, 59, 69, 77, 82, 87, 88, 94, 110, 129, 135, 155, 166, 174, 175, 178, 198, 199, 202, 203, 204, 207, 219, 224, 230, 231, 232, 234, 237, 239], "contient": [2, 10, 18, 33, 38, 41, 50, 51, 53, 54, 56, 59, 61, 69, 70, 73, 78, 79, 83, 95, 98, 100, 103, 106, 108, 121, 143, 161, 170, 173, 178, 179, 182, 183, 188, 189, 190, 193, 198, 200, 204, 205, 208, 216, 219, 220, 224, 226, 228, 230, 231, 232, 234, 237, 239], "assur": [2, 23, 50, 56, 62, 69, 74, 79, 95, 108, 144, 157, 166, 172, 178, 210, 224, 234, 235, 237], "langag": [2, 4, 6, 19, 38, 39, 41, 48, 50, 51, 53, 54, 61, 66, 70, 72, 73, 74, 87, 88, 98, 99, 109, 111, 112, 148, 152, 154, 161, 165, 166, 170, 172, 188, 189, 190, 198, 199, 200, 205, 208, 217, 218, 219, 220, 222, 224, 225, 226, 229, 232, 234, 235, 236, 237, 239], "con\u00e7u": [2, 71, 74, 144, 232, 234], "anglais": [2, 4, 30, 53, 56, 58, 60, 61, 62, 70, 71, 78, 84, 92, 145, 161, 165, 178, 204, 205, 206, 228, 231, 232, 235, 239], "fait": [2, 4, 14, 17, 21, 27, 30, 32, 35, 38, 39, 41, 42, 50, 51, 53, 56, 58, 59, 60, 61, 62, 69, 70, 71, 73, 74, 77, 79, 80, 82, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 117, 119, 121, 135, 139, 140, 141, 142, 144, 145, 146, 148, 149, 152, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 167, 168, 170, 174, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 198, 199, 200, 203, 206, 207, 208, 216, 219, 224, 226, 227, 230, 231, 232, 234, 235, 237], "alphabet": [2, 41, 71, 87, 96, 101, 192, 207, 214, 230], "ponctuat": [2, 71], "compris": [2, 38, 61, 71, 147, 231, 239], "d\u00e9clench": [2, 4, 50, 69, 71, 100, 103, 108, 112, 150, 192, 201, 209, 216, 219, 222, 224, 230, 231, 237], "erreur": [2, 4, 39, 42, 50, 51, 53, 56, 58, 59, 62, 64, 66, 70, 71, 74, 77, 81, 93, 98, 100, 101, 102, 103, 108, 109, 110, 111, 113, 114, 118, 132, 137, 140, 141, 142, 144, 146, 148, 152, 171, 172, 174, 175, 182, 192, 195, 200, 201, 208, 209, 216, 221, 222, 224, 226, 228, 230, 231], "fil": [2, 4, 11, 28, 40, 43, 44, 64, 67, 69, 71, 74, 75, 102, 108, 147, 149, 182, 207, 210, 216, 219, 220, 224, 226, 230, 231, 232, 234, 236, 239, 241], "faq_cvxopt": [2, 71], "py": [2, 4, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 50, 53, 54, 64, 69, 71, 74, 84, 85, 106, 132, 134, 135, 137, 140, 142, 165, 166, 167, 180, 195, 198, 199, 203, 220, 224, 226, 230, 231, 232, 234, 241], "lin": [2, 4, 11, 27, 42, 49, 50, 51, 59, 64, 69, 71, 74, 99, 102, 105, 111, 112, 161, 165, 183, 197, 207, 216, 219, 220, 222, 224, 226, 230, 231, 232, 234, 239], "syntaxerror": [2, 69, 71, 74, 102, 219, 230, 231], "utf": [2, 51, 54, 71, 74, 96, 157, 161, 198, 199, 205, 220, 224, 228, 231, 232], "starting": [2, 71, 231], "\u00e8": [2, 71, 87, 205], "but": [2, 14, 30, 31, 41, 50, 59, 62, 71, 74, 75, 134, 166, 224, 231], "no": [2, 11, 31, 40, 51, 59, 65, 71, 74, 75, 100, 132, 133, 134, 135, 145, 160, 181, 183, 199, 216, 224, 231, 239], "encoding": [2, 51, 54, 69, 71, 74, 109, 161, 198, 199, 205, 220, 229, 231], "declared": [2, 71, 74, 231], "see": [2, 7, 10, 11, 12, 13, 50, 65, 71, 74, 96, 166, 224, 226, 231], "http": [2, 4, 7, 30, 46, 50, 51, 54, 65, 67, 71, 74, 82, 85, 87, 95, 96, 110, 117, 129, 132, 134, 135, 154, 158, 161, 166, 169, 182, 183, 198, 199, 204, 205, 207, 231], "org": [2, 4, 27, 30, 50, 54, 71, 74, 82, 87, 110, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 166, 180, 199, 231], "dev": [2, 19, 50, 51, 52, 56, 65, 71, 83, 91, 93, 94, 110, 111, 112, 114, 121, 155, 161, 162, 163, 173, 180, 189, 195, 199, 205, 207, 224, 231, 234], "pep": [2, 50, 71, 74, 110, 231], "0263": [2, 71, 74, 231], "Pour": [2, 4, 12, 13, 14, 16, 27, 30, 33, 38, 39, 40, 41, 42, 50, 51, 52, 53, 58, 59, 61, 62, 64, 69, 71, 74, 77, 78, 79, 81, 83, 84, 85, 89, 91, 94, 95, 96, 98, 99, 100, 103, 106, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 128, 129, 132, 139, 141, 142, 144, 145, 148, 151, 154, 155, 160, 161, 165, 167, 169, 170, 173, 174, 176, 177, 178, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 197, 198, 199, 200, 201, 204, 207, 208, 210, 216, 219, 220, 224, 226, 228, 230, 231, 232, 234, 235, 237, 239], "r\u00e9soudr": [2, 18, 50, 56, 58, 61, 62, 71, 85, 88, 95, 106, 178, 182, 187, 216, 231, 237], "interpr\u00e9teur": [2, 4, 32, 69, 70, 71, 74, 88, 146, 151, 166, 201, 216, 219, 220, 230, 231, 234], "peuvent": [2, 39, 51, 56, 58, 59, 61, 64, 69, 70, 71, 74, 77, 95, 100, 113, 114, 122, 146, 161, 182, 184, 192, 208, 216, 219, 224, 226, 228, 230, 231, 232, 234, 237], "appara\u00eetr": [2, 27, 40, 69, 71, 95, 163, 216, 224, 230, 231, 232], "\u00e9crir": [2, 4, 33, 34, 38, 41, 51, 53, 55, 61, 62, 66, 71, 74, 77, 83, 90, 91, 94, 95, 102, 107, 108, 113, 114, 115, 116, 122, 134, 148, 152, 153, 157, 159, 162, 170, 171, 174, 182, 188, 189, 190, 192, 194, 195, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 216, 220, 224, 226, 228, 230, 231, 232, 234, 235, 237, 239], "lign": [2, 4, 6, 8, 11, 17, 27, 38, 39, 41, 46, 49, 50, 51, 52, 53, 61, 69, 71, 74, 77, 78, 82, 83, 84, 87, 91, 94, 95, 100, 102, 103, 105, 106, 108, 110, 113, 114, 118, 121, 129, 146, 147, 158, 161, 165, 166, 170, 174, 175, 182, 184, 188, 189, 192, 193, 197, 198, 199, 200, 201, 208, 209, 213, 219, 220, 225, 226, 228, 230, 231, 232, 234, 237, 239], "latin": [2, 71, 199, 205, 214, 228, 231], "Ou": [2, 23, 34, 51, 69, 71, 85, 102, 103, 110, 122, 130, 139, 148, 158, 188, 224, 230, 231, 232], "chinois": [2, 71, 95, 205], "\u00e9diteur": [2, 4, 71, 74, 228, 231, 232], "scit": [2, 4, 71], "window": [2, 10, 23, 54, 69, 74, 224, 228, 231, 232], "conseil": [2, 50, 51, 56, 58, 66, 71, 95, 109, 190, 199, 216, 226, 230, 231, 234, 237, 239], "ferm": [2, 50, 56, 69, 71, 119, 198, 202, 203, 219, 220, 232], "fichi": [2, 21, 40, 54, 66, 85, 127, 158, 161, 172, 182, 183, 216, 219, 220, 224, 226, 227, 229, 230, 231, 233, 237, 239], "puis": [2, 4, 10, 16, 20, 36, 42, 51, 52, 53, 54, 56, 58, 59, 69, 70, 71, 74, 77, 81, 85, 86, 89, 95, 96, 99, 106, 111, 112, 113, 115, 116, 117, 130, 137, 147, 148, 151, 154, 159, 164, 173, 192, 193, 195, 198, 207, 209, 211, 216, 222, 224, 226, 230, 231, 232, 234, 235, 237, 239], "r\u00e9ouvr": [2, 71, 232], "trait": [2, 4, 10, 14, 38, 41, 51, 56, 58, 61, 62, 70, 71, 77, 83, 94, 108, 111, 160, 173, 182, 193, 199, 219, 224, 230, 231, 232, 236, 237, 239], "encodag": [2, 71, 219, 228], "norm": [2, 9, 10, 62, 69, 71, 131, 144, 145, 159, 167, 188, 205, 216], "internet": [2, 4, 39, 51, 56, 69, 71, 73, 74, 77, 94, 95, 161, 169, 198, 199, 204, 220, 224, 231, 232, 234, 235, 237], "pourquoi": [2, 6, 14, 33, 41, 50, 54, 56, 59, 69, 77, 81, 83, 85, 88, 94, 95, 100, 102, 103, 113, 114, 129, 135, 155, 161, 170, 188, 192, 198, 200, 207, 213, 216, 219, 224, 230, 231, 232, 234, 237, 239], "pr\u00e9fer": [2, 4, 27, 39, 41, 56, 59, 60, 62, 69, 71, 74, 99, 106, 108, 132, 170, 204, 216, 219, 220, 222, 224, 226, 230, 231, 232, 234, 235], "partag": [2, 50, 51, 59, 64, 70, 71, 74, 81, 87, 140, 216, 224], "pag": [2, 4, 27, 50, 51, 53, 54, 61, 69, 71, 74, 95, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 157, 161, 165, 169, 180, 192, 193, 202, 203, 204, 207, 230, 231, 234, 236, 237, 239], "dictionnaire_modifie_dans_la_boucl": [2, 5, 226], "boucl": [2, 19, 32, 33, 38, 41, 42, 51, 53, 55, 64, 66, 83, 84, 87, 88, 91, 93, 95, 98, 99, 100, 101, 102, 103, 106, 108, 111, 112, 127, 141, 154, 159, 171, 189, 200, 206, 211, 216, 219, 220, 222, 224, 226, 229, 237], "parcourt": [2, 39, 42, 59, 69, 83, 87, 88, 93, 95, 100, 101, 189, 224, 226, 230, 232], "\u00e9vit": [2, 14, 38, 42, 52, 53, 54, 56, 59, 64, 69, 83, 84, 89, 91, 94, 95, 98, 100, 106, 108, 110, 113, 115, 116, 151, 156, 174, 178, 185, 188, 192, 195, 199, 203, 207, 216, 224, 226, 227, 228, 230, 231, 232, 234, 235, 237, 239], "contain": [2, 10, 11, 30, 118, 150, 188, 193, 224, 226], "supprim": [2, 4, 9, 10, 21, 51, 54, 58, 59, 69, 71, 84, 95, 100, 178, 179, 182, 198, 208, 216, 220, 222, 224, 226, 230, 231, 232, 234, 237], "ancien": [2, 190, 199, 216, 224, 226], "d\u00e9but": [2, 4, 51, 53, 54, 64, 69, 71, 82, 84, 95, 108, 134, 139, 153, 161, 167, 168, 207, 216, 224, 225, 226, 230, 231, 234, 237, 239], "rang": [2, 10, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 50, 51, 52, 54, 55, 56, 61, 64, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 132, 134, 135, 141, 144, 145, 146, 147, 148, 151, 153, 154, 155, 156, 159, 162, 163, 164, 165, 166, 167, 170, 171, 173, 175, 179, 181, 182, 183, 185, 188, 189, 190, 191, 195, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 213, 214, 216, 219, 220, 224, 225, 226, 230, 232, 234, 237], "v": [2, 9, 46, 50, 51, 56, 59, 62, 70, 78, 87, 91, 94, 95, 99, 101, 109, 112, 113, 119, 122, 128, 147, 148, 149, 163, 168, 170, 173, 174, 175, 178, 179, 182, 183, 184, 185, 190, 191, 192, 193, 199, 205, 207, 208, 209, 210, 213, 216, 219, 224, 226, 230, 239], "item": [2, 11, 69, 87, 91, 94, 95, 99, 100, 101, 106, 109, 121, 122, 128, 144, 157, 158, 161, 162, 166, 167, 169, 170, 173, 179, 192, 205, 207, 214, 216, 225, 226, 231], "del": [2, 39, 69, 85, 88, 100, 103, 115, 166, 172, 198, 208, 216, 226, 230, 231, 232], "pr\u00e9viennent": [2, 226], "intervient": [2, 27, 41, 56, 61, 77, 219, 226, 230, 235], "tard": [2, 56, 62, 64, 69, 77, 93, 204, 219, 222, 224, 226, 230, 231, 237], "valeur": [2, 7, 10, 33, 34, 41, 50, 51, 56, 58, 61, 62, 64, 69, 74, 77, 83, 85, 86, 87, 91, 99, 100, 101, 102, 106, 108, 109, 110, 111, 112, 116, 117, 130, 131, 135, 141, 142, 144, 145, 154, 164, 165, 167, 170, 173, 174, 175, 176, 177, 178, 179, 182, 190, 193, 194, 195, 198, 199, 200, 201, 204, 205, 207, 208, 209, 216, 224, 225, 226, 227, 228, 231, 232, 234], "numer": [2, 4, 33, 41, 48, 50, 51, 56, 60, 70, 71, 74, 101, 108, 109, 113, 114, 138, 154, 167, 172, 174, 175, 178, 182, 188, 195, 198, 204, 208, 216, 226, 230, 231, 232, 235, 236, 239], "inattendu": [2, 198, 220, 226, 230], "traceback": [2, 4, 51, 64, 69, 71, 99, 100, 102, 103, 108, 183, 216, 219, 220, 224, 226, 230, 231, 239], "call": [2, 4, 11, 51, 56, 64, 69, 71, 99, 100, 102, 103, 108, 165, 166, 167, 180, 183, 216, 219, 221, 224, 226, 230, 231, 239], "session1": [2, 226], "176": [2, 55, 108, 145, 151, 226], "liste_modifie_dans_la_boucl": [2, 226], "169": [2, 85, 136, 145, 220, 226], "runtimeerror": [2, 95, 118, 134, 226, 231], "changed": [2, 95, 226, 231], "siz": [2, 9, 10, 11, 12, 13, 40, 42, 50, 68, 77, 78, 82, 86, 95, 110, 113, 114, 130, 144, 163, 202, 203, 224, 226, 231, 232], "during": [2, 95, 226, 231], "stock": [2, 12, 13, 39, 53, 54, 56, 70, 74, 77, 119, 147, 153, 158, 165, 170, 192, 193, 200, 218, 226, 231, 232, 235, 239], "ensuit": [2, 30, 38, 46, 50, 51, 54, 56, 59, 60, 70, 74, 88, 89, 93, 95, 156, 157, 158, 165, 168, 174, 188, 192, 195, 204, 214, 216, 218, 219, 224, 226, 230, 231, 235, 237, 239], "rem": [2, 167, 226], "append": [2, 30, 31, 32, 33, 35, 40, 50, 54, 69, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 108, 109, 113, 114, 115, 116, 117, 121, 122, 128, 130, 134, 135, 141, 144, 145, 147, 148, 149, 150, 151, 153, 154, 158, 159, 163, 164, 166, 167, 169, 170, 172, 173, 181, 183, 185, 189, 190, 191, 193, 197, 198, 202, 203, 207, 208, 211, 216, 224, 225, 226, 230, 231, 232, 234, 237, 239], "r": [2, 4, 10, 22, 27, 30, 33, 39, 40, 42, 46, 50, 51, 54, 56, 58, 61, 62, 67, 68, 69, 70, 71, 77, 81, 83, 84, 85, 86, 87, 88, 90, 93, 94, 96, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 133, 139, 141, 144, 145, 146, 156, 158, 159, 161, 166, 167, 176, 177, 182, 183, 185, 186, 187, 193, 198, 199, 201, 202, 203, 205, 207, 208, 214, 216, 220, 224, 226, 228, 230, 232, 234, 235, 237, 239], "autoris": [2, 94, 112, 148, 199, 216, 224, 226, 227, 230, 232, 234, 237], "absten": [2, 226], "ains": [2, 51, 56, 59, 69, 77, 98, 102, 106, 114, 147, 157, 181, 201, 209, 216, 219, 220, 224, 226, 230, 231, 232, 237], "habitud": [2, 14, 74, 199, 226, 230], "serv": [2, 39, 50, 51, 54, 56, 69, 70, 85, 93, 108, 109, 111, 112, 163, 174, 192, 199, 216, 224, 226, 230, 231, 232, 239], "dix_entiers_carr": [2, 5, 71, 226], "renvoi": [2, 3, 4, 6, 7, 9, 10, 11, 13, 50, 51, 77, 101, 207, 216, 224], "r\u00e9el": [2, 4, 41, 53, 56, 62, 64, 69, 70, 71, 77, 108, 158, 170, 188, 208, 209, 216, 227, 229, 230, 232, 235], "standard": [2, 4, 19, 38, 39, 50, 51, 68, 69, 71, 145, 161, 188, 193, 198, 207, 216, 219, 225, 228, 230, 232, 234, 237], "moment": [2, 14, 34, 50, 52, 56, 62, 71, 74, 82, 108, 138, 140, 146, 147, 149, 155, 161, 195, 199, 200, 207, 208, 216, 224, 228, 230, 231, 232, 237], "impact": [2, 11, 14, 56, 59, 69, 70, 71, 74, 145, 230, 231], "d\u00e9roul": [2, 51, 60, 71, 94, 224, 230, 232], "mot": [2, 20, 34, 51, 58, 63, 71, 94, 96, 99, 102, 103, 106, 123, 147, 157, 190, 193, 198, 199, 200, 204, 206, 207, 214, 216, 219, 224, 226, 230, 231, 232, 234, 237, 239], "cl\u00e9": [2, 33, 34, 38, 51, 54, 58, 63, 70, 71, 91, 95, 96, 99, 100, 101, 109, 147, 152, 170, 172, 176, 177, 190, 193, 198, 200, 204, 207, 216, 219, 226, 230, 232, 234, 237, 239], "rencontr": [2, 69, 71, 145, 192, 216, 219, 230, 232, 234], "commenc": [2, 4, 12, 13, 14, 27, 30, 33, 50, 56, 60, 61, 62, 69, 70, 71, 74, 79, 81, 82, 93, 94, 95, 98, 101, 108, 109, 117, 118, 122, 142, 156, 170, 185, 192, 195, 198, 199, 204, 208, 209, 214, 224, 230, 231, 232, 237, 239], "quitt": [2, 56, 71, 199, 204, 209, 230], "transmet": [2, 71], "modif": [2, 9, 10, 41, 42, 50, 51, 56, 58, 59, 64, 69, 71, 74, 78, 80, 85, 89, 95, 100, 106, 113, 114, 160, 163, 190, 192, 193, 207, 216, 224, 227, 230, 231, 232, 234, 237], "votr": [2, 4, 33, 71, 74, 103, 108, 110, 114, 122, 153, 172, 174, 175, 188, 199, 204, 232, 234, 235], "algorithm": [2, 7, 8, 10, 17, 19, 20, 30, 33, 38, 42, 56, 58, 62, 69, 71, 72, 73, 81, 83, 84, 89, 92, 94, 96, 99, 100, 106, 108, 110, 111, 112, 115, 116, 118, 120, 129, 148, 157, 159, 166, 168, 172, 173, 178, 179, 180, 181, 183, 190, 195, 206, 208, 209, 210, 216, 219, 226, 229, 239], "sp\u00e9cif": [2, 41, 50, 51, 69, 71, 117, 122, 188, 216, 224, 225, 228, 232, 234, 235, 236], "diff\u00e8rent": [2, 226], "mani": [2, 4, 27, 30, 41, 50, 51, 56, 58, 59, 61, 69, 70, 71, 77, 129, 136, 141, 148, 162, 182, 201, 216, 219, 220, 224, 226, 228, 230, 231, 232, 235, 237], "i": [2, 6, 10, 27, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 68, 69, 70, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 134, 135, 138, 140, 144, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 219, 220, 222, 224, 225, 226, 230, 231, 232, 234, 237], "11": [2, 4, 11, 19, 23, 26, 30, 31, 36, 41, 42, 46, 50, 51, 52, 54, 56, 61, 62, 67, 68, 69, 71, 74, 77, 78, 79, 81, 83, 85, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 150, 151, 155, 158, 159, 163, 164, 165, 166, 170, 171, 173, 175, 178, 179, 181, 183, 193, 195, 198, 199, 201, 205, 207, 208, 211, 216, 219, 220, 226, 227, 230, 231], "D": [2, 11, 14, 41, 52, 56, 62, 77, 79, 84, 85, 86, 94, 101, 107, 127, 129, 146, 147, 149, 153, 157, 176, 177, 178, 185, 193, 199, 225, 226, 231, 232, 234, 235, 239], "abreg": [2, 16, 69, 201, 226, 231], "sum": [2, 6, 31, 37, 49, 50, 51, 53, 54, 55, 64, 69, 78, 82, 83, 84, 85, 86, 89, 93, 95, 98, 99, 100, 102, 109, 110, 111, 112, 117, 121, 150, 154, 159, 166, 171, 179, 180, 181, 189, 190, 191, 192, 201, 205, 210, 226, 230, 231, 239], "repetition_a_evit": [2, 5, 226], "a_evit": 2, "fals": [2, 3, 4, 7, 10, 11, 12, 13, 27, 30, 37, 38, 40, 50, 51, 53, 54, 67, 69, 71, 78, 81, 82, 84, 85, 89, 91, 96, 98, 117, 118, 131, 132, 135, 137, 139, 142, 143, 145, 149, 150, 151, 156, 158, 159, 166, 169, 172, 188, 189, 193, 207, 216, 219, 224, 230, 231, 237], "r\u00e9p\u00e9tit": [2, 83, 94, 96, 200, 208, 230, 231, 232, 234, 237], "varianc": [2, 41, 56, 62, 84, 100, 109, 110, 113, 114, 131, 174, 175, 195, 226], "observ": [2, 14, 27, 42, 51, 56, 60, 61, 62, 70, 85, 86, 109, 110, 111, 112, 129, 130, 131, 133, 144, 145, 154, 171, 173, 180, 184, 185, 203, 208, 224, 226, 237], "moyen": [2, 4, 9, 14, 20, 27, 32, 39, 41, 46, 50, 54, 62, 69, 70, 71, 77, 83, 85, 86, 100, 108, 109, 110, 122, 129, 131, 132, 134, 142, 144, 170, 174, 175, 181, 184, 190, 191, 194, 195, 200, 203, 207, 209, 212, 215, 216, 224, 226, 230, 232, 234, 239], "len": [2, 10, 30, 31, 33, 38, 40, 41, 42, 46, 50, 51, 69, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 118, 122, 129, 130, 132, 134, 136, 140, 143, 148, 150, 151, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 172, 173, 179, 181, 183, 189, 190, 191, 192, 193, 197, 198, 207, 208, 209, 210, 211, 213, 214, 216, 222, 224, 226, 228, 230, 231, 232, 234, 239], "variance_a_evit": [2, 226], "ob": [2, 78, 86, 88, 91, 93, 109, 151, 158, 172, 226], "passag": [2, 41, 50, 56, 69, 100, 153, 154, 182, 208, 213, 226, 228, 230, 231, 232], "rien": [2, 4, 18, 32, 42, 46, 51, 56, 60, 62, 69, 71, 98, 108, 113, 114, 121, 129, 134, 135, 137, 142, 146, 152, 159, 169, 188, 198, 199, 208, 216, 218, 224, 226, 230, 232, 234, 237], "chang": [2, 4, 7, 10, 11, 14, 27, 34, 42, 50, 51, 53, 54, 56, 59, 61, 62, 67, 69, 71, 73, 74, 77, 78, 82, 84, 86, 88, 89, 95, 109, 113, 114, 117, 121, 134, 135, 146, 154, 169, 182, 189, 190, 193, 199, 203, 207, 209, 216, 222, 224, 225, 226, 228, 230, 231, 232, 237], "vaut": [2, 38, 52, 56, 61, 62, 64, 69, 85, 91, 100, 101, 102, 109, 110, 149, 158, 161, 188, 192, 208, 209, 216, 224, 226, 230, 231, 234, 235, 237], "variabl": [2, 4, 27, 34, 38, 41, 50, 51, 53, 56, 59, 62, 65, 66, 71, 74, 77, 84, 98, 100, 101, 103, 108, 109, 113, 114, 123, 127, 128, 129, 131, 133, 138, 141, 143, 145, 146, 147, 150, 152, 153, 154, 158, 159, 165, 170, 171, 184, 188, 189, 193, 195, 198, 200, 201, 207, 216, 218, 219, 220, 224, 226, 228, 232, 234, 235, 237, 240], "moy": [2, 109, 195, 230], "co\u00fbt": [2, 6, 33, 38, 42, 51, 56, 58, 59, 61, 62, 71, 81, 83, 87, 88, 90, 91, 95, 98, 99, 100, 106, 113, 114, 127, 154, 168, 170, 173, 181, 182, 183, 193, 206, 207, 208, 209, 214, 216], "alor": [2, 4, 10, 14, 33, 41, 50, 51, 56, 58, 59, 61, 62, 69, 70, 71, 74, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 94, 95, 98, 108, 109, 110, 129, 139, 145, 163, 166, 170, 173, 174, 178, 182, 185, 186, 187, 193, 195, 197, 199, 207, 216, 219, 220, 224, 226, 230, 231, 232, 234, 237], "endroit": [2, 61, 69, 74, 95, 111, 158, 216, 220, 222, 224, 228, 230, 231, 232, 234, 237], "survient": [2, 56, 108, 130, 216, 219, 220, 224, 230, 231, 237], "suiv": [2, 4, 7, 14, 19, 30, 33, 41, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 69, 71, 74, 79, 83, 85, 87, 91, 94, 95, 96, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 123, 127, 129, 130, 134, 147, 148, 154, 159, 160, 161, 165, 166, 168, 170, 172, 173, 174, 175, 178, 179, 182, 183, 184, 185, 186, 187, 190, 192, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239], "major": [2, 53, 59, 144, 170, 195, 207, 218], "argument": [2, 4, 34, 37, 50, 51, 56, 69, 99, 111, 112, 172, 174, 186, 187, 190, 191, 204, 216, 219, 224, 230, 231, 232, 234, 237], "retourn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 33, 36, 41, 42, 49, 50, 51, 52, 56, 58, 59, 61, 62, 64, 69, 70, 71, 79, 81, 83, 88, 89, 91, 93, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 134, 139, 146, 147, 148, 157, 163, 168, 170, 172, 174, 175, 185, 187, 190, 192, 193, 203, 204, 206, 208, 210, 214, 216, 219, 220, 224, 225, 226, 227, 228, 230, 231, 232, 237, 239], "quelqu": [2, 4, 6, 14, 21, 22, 30, 36, 41, 42, 49, 50, 51, 53, 58, 59, 60, 62, 66, 69, 71, 74, 77, 81, 84, 85, 87, 88, 89, 91, 94, 95, 98, 99, 100, 101, 103, 106, 109, 111, 115, 116, 119, 123, 129, 130, 132, 139, 141, 145, 148, 155, 156, 160, 161, 166, 172, 174, 178, 179, 192, 197, 198, 199, 200, 208, 216, 219, 224, 226, 227, 230, 231, 232, 234, 237], "chos": [2, 14, 21, 39, 41, 42, 51, 56, 60, 61, 62, 69, 74, 87, 88, 89, 94, 95, 98, 99, 101, 109, 118, 122, 148, 152, 161, 166, 167, 170, 190, 195, 197, 198, 199, 200, 207, 216, 218, 219, 224, 227, 230, 231, 232, 233, 234, 237], "tru": [2, 4, 10, 11, 26, 27, 30, 31, 38, 40, 46, 50, 51, 53, 54, 56, 65, 67, 69, 71, 77, 78, 81, 82, 84, 85, 88, 89, 91, 94, 95, 96, 98, 108, 115, 116, 117, 118, 131, 132, 134, 135, 139, 140, 141, 142, 144, 146, 148, 149, 150, 151, 154, 156, 159, 163, 166, 169, 172, 179, 185, 188, 189, 192, 193, 197, 198, 199, 205, 207, 208, 216, 219, 222, 224, 231, 232, 237], "leaf": [2, 84], "guess": [2, 134], "str2dat": [2, 5, 226], "fmt": [2, 11, 237], "Y": [2, 10, 14, 27, 38, 50, 56, 61, 62, 70, 94, 108, 109, 110, 111, 112, 113, 114, 129, 130, 155, 165, 198, 199, 224, 226, 227, 231], "convert": [2, 4, 6, 11, 39, 46, 51, 52, 53, 54, 61, 62, 69, 71, 102, 108, 109, 117, 129, 140, 142, 146, 161, 166, 182, 192, 198, 199, 201, 216, 219, 226, 227, 228, 230, 231, 232, 234, 235], "format": [2, 4, 11, 19, 31, 39, 46, 50, 51, 54, 61, 69, 77, 79, 83, 85, 90, 91, 94, 108, 109, 134, 144, 163, 169, 174, 175, 181, 188, 199, 207, 208, 216, 219, 222, 224, 226, 228, 229, 233, 234, 235, 237, 239], "genr": [2, 14, 56, 199, 216, 226, 230, 239], "souvent": [2, 4, 14, 27, 41, 46, 50, 51, 52, 54, 56, 58, 60, 61, 62, 64, 69, 71, 73, 74, 77, 81, 84, 88, 100, 103, 108, 110, 113, 114, 123, 132, 149, 151, 152, 155, 165, 166, 168, 172, 188, 192, 198, 200, 207, 208, 214, 216, 219, 220, 222, 224, 225, 226, 230, 231, 232, 234, 235, 237, 239], "pein": [2, 98, 199, 209, 226], "retrouv": [2, 14, 17, 51, 52, 54, 56, 58, 60, 61, 85, 86, 88, 96, 109, 111, 139, 165, 170, 185, 192, 193, 198, 206, 207, 208, 216, 224, 226, 230, 231, 232, 237, 239], "besoin": [2, 4, 14, 27, 39, 41, 46, 50, 51, 55, 56, 61, 69, 71, 74, 88, 91, 95, 106, 108, 118, 148, 163, 170, 188, 192, 199, 200, 216, 220, 222, 226, 228, 231, 232, 234, 235, 237], "strftim": [2, 4, 71, 226, 227], "dt": [2, 4, 71, 85, 86, 91, 117, 128, 181, 207, 226], "strptim": [2, 51, 226], "16": [2, 4, 30, 41, 42, 46, 50, 51, 52, 53, 54, 56, 69, 71, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 97, 99, 100, 101, 103, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 128, 130, 132, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 148, 151, 154, 155, 157, 158, 164, 165, 166, 170, 175, 178, 179, 181, 188, 189, 195, 197, 198, 199, 201, 203, 207, 208, 209, 216, 226, 227, 228, 230, 231], "01": [2, 11, 23, 33, 41, 43, 50, 51, 54, 77, 78, 95, 109, 110, 113, 114, 122, 128, 132, 133, 145, 159, 175, 179, 198, 226, 227, 231, 237, 241], "2014": [2, 51, 97, 186, 187, 226], "compt": [2, 4, 5, 9, 14, 33, 37, 41, 51, 56, 58, 59, 60, 61, 70, 71, 81, 82, 83, 85, 95, 96, 99, 100, 108, 109, 111, 112, 113, 114, 117, 118, 119, 142, 143, 149, 159, 162, 165, 170, 172, 188, 192, 198, 199, 200, 204, 207, 216, 222, 225, 226, 230, 231, 232, 234, 237, 239], "li": [2, 21, 27, 30, 33, 41, 59, 61, 69, 83, 85, 100, 129, 153, 168, 170, 175, 179, 199, 208, 216, 218, 224, 226, 230, 231, 232, 234, 235, 239], "occurrent": [2, 33, 69, 96, 204, 226, 231], "tableau": [2, 33, 36, 38, 41, 48, 49, 52, 56, 61, 70, 78, 82, 84, 88, 98, 102, 106, 111, 114, 127, 132, 148, 153, 156, 159, 161, 163, 165, 169, 173, 182, 183, 184, 185, 188, 189, 193, 197, 207, 208, 209, 219, 226, 231, 232, 237, 239], "Par": [2, 4, 33, 41, 42, 50, 51, 54, 56, 58, 59, 61, 69, 71, 74, 83, 84, 96, 98, 99, 100, 108, 110, 118, 150, 173, 179, 182, 198, 207, 208, 209, 216, 219, 224, 226, 228, 230, 231, 232, 237, 239], "pourr": [2, 14, 42, 50, 51, 54, 56, 59, 60, 62, 70, 82, 83, 86, 87, 88, 89, 94, 95, 100, 108, 111, 112, 118, 128, 134, 140, 146, 151, 157, 160, 161, 172, 182, 193, 194, 198, 199, 204, 207, 210, 216, 219, 220, 222, 224, 226, 230, 231, 232, 237], "popular": [2, 226, 234], "discour": [2, 198, 199, 226], "polit": [2, 56, 226], "\u00e9tendu": [2, 58, 224, 226, 230], "vocabulair": [2, 62, 150, 188, 226], "not": [2, 3, 4, 11, 15, 19, 20, 27, 30, 33, 39, 41, 50, 51, 56, 58, 60, 61, 62, 66, 68, 69, 75, 77, 78, 81, 84, 85, 87, 89, 91, 95, 99, 100, 101, 103, 118, 121, 122, 125, 126, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 149, 151, 157, 166, 171, 174, 178, 179, 182, 183, 184, 186, 187, 189, 194, 195, 198, 199, 205, 207, 209, 212, 214, 215, 216, 219, 220, 224, 226, 230, 231, 232, 235, 237, 239], "else": [2, 4, 27, 30, 31, 33, 39, 40, 46, 69, 70, 71, 74, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 130, 132, 134, 135, 144, 146, 147, 148, 149, 150, 151, 155, 157, 159, 162, 163, 166, 168, 170, 172, 179, 181, 183, 185, 188, 189, 190, 191, 192, 195, 197, 200, 205, 207, 208, 209, 210, 211, 214, 216, 219, 220, 224, 226, 231, 232, 234, 235], "appropri": [2, 61, 69, 216, 226], "puisqu": [2, 14, 36, 50, 54, 56, 59, 61, 62, 85, 88, 91, 93, 94, 95, 98, 100, 101, 106, 113, 140, 141, 154, 159, 165, 166, 173, 192, 195, 209, 216, 219, 224, 226, 230, 231, 237], "faudr": [2, 4, 14, 41, 51, 53, 56, 60, 61, 62, 69, 70, 71, 78, 85, 86, 88, 94, 101, 108, 113, 114, 115, 116, 117, 118, 121, 134, 135, 137, 142, 147, 148, 160, 161, 182, 192, 204, 216, 224, 226, 230, 231, 234, 237, 239], "ceux": [2, 4, 27, 30, 50, 52, 53, 56, 61, 62, 69, 70, 71, 73, 74, 81, 85, 95, 103, 118, 132, 137, 139, 140, 141, 165, 182, 188, 199, 200, 216, 219, 224, 226, 230, 231, 232, 234, 235, 237, 239], "immuabl": [2, 52, 153, 192, 207, 208, 225, 226, 229, 230, 232], "illustr": [2, 50, 51, 56, 59, 61, 128, 129, 130, 168, 192, 207, 216, 224, 226, 231, 232, 234, 239], "mat": [2, 6, 36, 39, 49, 53, 69, 78, 81, 82, 84, 91, 99, 103, 104, 105, 106, 107, 113, 114, 150, 170, 174, 175, 179, 181, 189, 198, 199, 216, 226, 232, 235], "str": [2, 4, 7, 10, 11, 30, 35, 69, 71, 92, 100, 102, 108, 128, 131, 134, 137, 146, 147, 148, 149, 157, 161, 189, 197, 198, 199, 201, 207, 216, 219, 224, 226, 228, 230, 232, 234, 235, 237, 239], "tupl": [2, 4, 7, 8, 9, 10, 11, 13, 30, 33, 46, 50, 51, 52, 61, 69, 71, 94, 95, 100, 118, 121, 127, 166, 170, 172, 178, 192, 198, 208, 216, 225, 226, 230, 232], "Les": [2, 6, 10, 14, 15, 17, 18, 19, 26, 30, 32, 34, 36, 37, 38, 41, 46, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 66, 70, 74, 77, 78, 84, 85, 87, 91, 92, 94, 96, 102, 108, 110, 115, 116, 117, 118, 121, 122, 123, 127, 129, 131, 132, 135, 138, 139, 140, 148, 150, 152, 157, 160, 161, 165, 166, 169, 170, 172, 173, 178, 183, 184, 188, 192, 193, 195, 196, 198, 199, 200, 201, 202, 205, 206, 207, 208, 216, 218, 222, 223, 226, 228, 229, 231, 232, 234, 235, 237], "why": [2, 226], "key": [2, 5, 11, 27, 51, 67, 69, 94, 95, 118, 121, 157, 170, 183, 185, 224, 226, 230, 231], "\u00e9gal": [2, 4, 6, 10, 14, 33, 41, 42, 46, 49, 50, 51, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 78, 81, 83, 84, 85, 86, 94, 95, 102, 108, 109, 110, 111, 112, 118, 119, 121, 122, 130, 131, 132, 139, 142, 143, 148, 149, 152, 159, 161, 163, 165, 166, 168, 169, 170, 174, 175, 176, 177, 184, 188, 193, 195, 199, 207, 208, 216, 222, 224, 225, 226, 230, 231, 232, 234, 237, 239], "vouloir": [2, 99, 199, 224, 226], "m\u00e9moris": [2, 14, 41, 69, 79, 100, 101, 138, 185, 188, 207, 216, 220, 222, 224, 226, 237, 239], "ident": [2, 10, 18, 36, 54, 56, 59, 61, 62, 69, 74, 79, 87, 88, 89, 95, 108, 113, 118, 139, 143, 146, 148, 151, 157, 165, 170, 174, 175, 192, 196, 197, 216, 219, 224, 226, 228, 230, 231, 232, 234, 239], "doit": [2, 4, 7, 41, 51, 54, 56, 58, 59, 62, 64, 69, 70, 71, 74, 77, 81, 85, 95, 99, 108, 109, 112, 113, 114, 115, 116, 118, 134, 137, 139, 144, 146, 150, 161, 170, 172, 176, 177, 182, 185, 188, 190, 193, 200, 208, 216, 219, 224, 226, 228, 230, 231, 232, 234, 235, 239], "enumerat": [2, 27, 78, 83, 84, 85, 88, 95, 96, 99, 102, 106, 108, 109, 113, 115, 116, 131, 135, 144, 146, 148, 150, 158, 160, 161, 163, 169, 170, 179, 183, 192, 193, 199, 208, 209, 210, 214, 220, 222, 225, 226, 230, 232], "S": [2, 33, 51, 56, 69, 70, 77, 85, 86, 94, 95, 106, 108, 113, 119, 168, 176, 177, 178, 182, 193, 197, 208, 216, 219, 224, 226, 227, 230, 231, 234, 239], "suff": [2, 4, 16, 38, 41, 56, 60, 61, 62, 69, 70, 71, 74, 79, 83, 85, 88, 90, 95, 98, 100, 101, 106, 108, 109, 110, 111, 113, 114, 118, 119, 129, 147, 154, 183, 188, 189, 193, 195, 200, 207, 208, 216, 224, 226, 228, 230, 231, 234, 237, 239], "just": [2, 4, 11, 30, 39, 42, 50, 56, 62, 70, 71, 83, 91, 111, 113, 122, 138, 139, 148, 159, 166, 178, 190, 210, 218, 219, 226, 230, 231], "\u00e9critur": [2, 4, 6, 33, 36, 39, 40, 48, 49, 50, 61, 69, 71, 90, 119, 148, 152, 161, 170, 190, 198, 201, 208, 216, 218, 219, 226, 230, 231, 232, 234, 235, 239], "construit_matrice_carre": [2, 5], "construit": [2, 7, 10, 14, 41, 51, 56, 59, 62, 69, 70, 78, 80, 83, 87, 95, 99, 104, 105, 106, 109, 114, 128, 132, 134, 137, 146, 159, 174, 175, 178, 179, 184, 185, 199, 206, 207, 216, 224, 230, 231, 232, 237], "rempl": [2, 77, 103, 107, 182, 183, 192, 208, 232, 234, 239], "z\u00e9ro": [2, 41, 50, 51, 69, 77, 83, 209, 219, 224, 231], "dimens": [2, 14, 33, 38, 41, 51, 53, 54, 58, 61, 62, 69, 84, 110, 113, 119, 123, 129, 130, 134, 166, 168, 171, 178, 188, 203, 216, 224, 231, 232], "enumerate_permut": [2, 5], "enumer": 2, "enumerate_permutations_recurs": [2, 5], "integral": [2, 5, 195, 226], "int\u00e9gral": [2, 4, 69, 71, 108, 127, 234, 237, 239], "rienmann": [2, 195], "born": [2, 56, 70, 95, 195], "recevoir": [2, 108, 198, 216, 219, 224, 226, 230], "inclut": [2, 41, 46, 69, 70, 83, 111, 112, 185, 188, 216, 219, 226, 230, 231, 232, 234, 237], "calcul_n_valeur": [2, 216, 226], "prend": [2, 4, 41, 46, 51, 56, 60, 61, 62, 70, 71, 77, 79, 81, 85, 92, 93, 95, 99, 102, 105, 108, 113, 114, 115, 116, 137, 148, 152, 154, 157, 162, 165, 170, 171, 172, 174, 183, 203, 204, 216, 224, 226, 230, 231, 232], "fonction_carr": [2, 226], "fonction_cub": [2, 226], "ex\u00e9cut": [2, 4, 34, 40, 41, 56, 64, 69, 70, 71, 74, 95, 99, 100, 111, 112, 134, 146, 147, 151, 165, 166, 172, 199, 200, 206, 207, 208, 216, 219, 220, 222, 224, 226, 230, 231, 232, 234, 237], "re": [2, 10, 30, 32, 35, 39, 40, 54, 78, 85, 87, 88, 91, 92, 94, 98, 99, 105, 106, 108, 109, 110, 113, 114, 117, 118, 120, 121, 122, 128, 130, 133, 134, 139, 141, 142, 144, 158, 160, 163, 164, 166, 167, 173, 180, 185, 189, 193, 197, 198, 199, 205, 207, 211, 216, 226, 231, 232, 234, 235, 237, 239], "l1": [2, 4, 41, 61, 71, 208, 216, 226, 230, 231], "9": [2, 9, 12, 26, 30, 31, 33, 41, 42, 46, 50, 51, 53, 54, 55, 56, 59, 61, 62, 69, 71, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 150, 151, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 175, 178, 179, 181, 183, 188, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 219, 220, 225, 226, 227, 230, 231, 237, 239], "l2": [2, 4, 41, 61, 69, 71, 106, 208, 216, 226, 230, 231], "mat2text": [2, 5, 226], "sep_row": 2, "sep_col": 2, "fn": [2, 7, 11, 69, 96, 166, 226], "text2mat": [2, 5, 226], "s\u00e9par": [2, 27, 56, 61, 62, 66, 83, 94, 111, 112, 129, 147, 170, 184, 198, 201, 202, 203, 204, 205, 224, 226, 230, 231, 232, 239], "colon": [2, 6, 14, 49, 51, 53, 61, 69, 91, 110, 114, 138, 158, 170, 178, 182, 188, 197, 198, 216, 224, 226, 232, 239], "case11": [2, 226], "case12": [2, 226], "case13": [2, 226], "case21": [2, 226], "case22": [2, 226], "case23": [2, 226], "join": [2, 30, 35, 50, 54, 69, 82, 87, 94, 96, 102, 103, 122, 146, 147, 148, 149, 160, 163, 165, 167, 180, 189, 193, 198, 199, 206, 207, 211, 220, 226, 230, 231, 232, 234, 239], "mat2vect": [2, 5, 226], "vect2mat": [2, 5, 226], "car": [2, 4, 27, 32, 33, 34, 39, 41, 42, 50, 51, 52, 53, 56, 60, 62, 69, 70, 71, 74, 77, 79, 81, 83, 84, 86, 87, 88, 91, 93, 94, 95, 99, 100, 102, 105, 106, 108, 109, 111, 112, 113, 114, 116, 118, 121, 128, 141, 144, 145, 146, 148, 150, 154, 155, 159, 161, 166, 170, 173, 181, 183, 192, 195, 198, 200, 201, 203, 207, 208, 214, 216, 218, 219, 220, 222, 224, 226, 228, 230, 231, 232, 234, 235, 237], "donc": [2, 14, 32, 33, 38, 41, 42, 50, 51, 53, 54, 56, 58, 59, 61, 69, 70, 77, 78, 84, 85, 86, 87, 88, 95, 96, 100, 106, 108, 110, 111, 117, 118, 119, 122, 134, 148, 149, 150, 156, 159, 169, 178, 181, 182, 183, 184, 185, 195, 198, 199, 205, 206, 207, 209, 210, 211, 216, 219, 225, 226, 230, 231, 232, 234, 235, 237, 239], "indic": [2, 7, 9, 10, 33, 38, 42, 50, 51, 54, 56, 58, 64, 69, 70, 83, 88, 91, 93, 95, 98, 102, 103, 106, 115, 116, 132, 134, 169, 170, 203, 207, 208, 213, 216, 219, 220, 224, 225, 226, 230, 231, 239], "bien": [2, 4, 16, 27, 32, 38, 41, 50, 54, 56, 60, 61, 62, 70, 71, 74, 77, 79, 80, 81, 82, 84, 88, 89, 93, 94, 95, 98, 108, 111, 112, 113, 115, 116, 117, 129, 132, 135, 138, 139, 142, 149, 152, 154, 156, 158, 159, 165, 169, 170, 172, 174, 182, 188, 199, 200, 201, 203, 205, 207, 216, 219, 220, 222, 224, 226, 230, 231, 232], "s\u00fbr": [2, 14, 27, 41, 42, 61, 62, 81, 85, 88, 91, 93, 95, 103, 108, 132, 139, 143, 183, 188, 209, 226, 231, 232], "const": [2, 4, 32, 34, 50, 53, 56, 59, 71, 85, 109, 128, 142, 145, 181, 188, 195, 216, 226, 227, 237], "Vous": [2, 50, 51, 53, 61, 88, 94, 165, 178, 182, 193, 198, 199, 206, 226], "pouv": [2, 50, 53, 94, 108, 111, 112, 118, 165, 182, 193, 199, 204, 206, 226], "reduc": [2, 30, 154, 166, 167, 180, 226], "from": [2, 4, 11, 12, 13, 26, 27, 28, 30, 32, 35, 39, 40, 43, 44, 46, 50, 51, 53, 54, 56, 62, 68, 69, 70, 75, 78, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 99, 104, 105, 108, 110, 113, 115, 116, 117, 118, 120, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 178, 179, 180, 181, 182, 183, 185, 186, 187, 192, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 213, 216, 220, 225, 226, 230, 232, 234, 235, 239, 241], "functool": [2, 154, 226], "lambd": [2, 11, 24, 29, 41, 43, 50, 83, 103, 109, 118, 127, 162, 164, 165, 174, 176, 177, 185, 190, 191, 194, 195, 226, 234, 241], "minindex": [2, 5, 226], "min": [2, 31, 42, 50, 51, 56, 62, 69, 70, 78, 80, 81, 83, 84, 88, 89, 91, 98, 104, 108, 109, 110, 113, 114, 118, 121, 129, 131, 135, 139, 140, 144, 146, 150, 172, 182, 183, 185, 189, 211, 214, 226, 230, 231], "minium": [2, 226], "r\u00e9flex": [2, 24, 29, 43, 123, 198, 204, 222, 226, 231, 241], "recod": [2, 226], "conserv": [2, 4, 34, 39, 50, 51, 56, 59, 70, 71, 79, 91, 94, 106, 111, 143, 149, 170, 181, 185, 198, 206, 208, 209, 216, 225, 226, 230, 231, 232, 235], "434": [2, 167, 226], "43": [2, 36, 46, 50, 51, 54, 95, 108, 110, 112, 113, 145, 160, 166, 169, 178, 179, 192, 205, 216, 226, 230], "6436": [2, 226], "Mais": [2, 14, 41, 42, 46, 51, 53, 61, 62, 69, 81, 83, 86, 87, 91, 93, 94, 95, 96, 99, 100, 102, 121, 132, 134, 135, 139, 145, 146, 147, 148, 152, 168, 170, 173, 182, 192, 198, 203, 204, 210, 213, 216, 220, 226, 231, 237, 239], "astuc": [2, 4, 21, 24, 29, 43, 53, 66, 71, 82, 83, 127, 149, 199, 226, 234, 237, 241], "obten": [2, 40, 41, 46, 50, 51, 56, 58, 59, 69, 83, 88, 91, 129, 134, 155, 159, 163, 174, 178, 182, 183, 189, 192, 195, 198, 204, 216, 224, 226, 228, 230, 231, 232, 239], "reprogramm": [2, 224, 226], "chois": [2, 7, 9, 10, 41, 42, 46, 50, 51, 53, 56, 58, 59, 61, 62, 64, 69, 70, 74, 77, 84, 85, 88, 94, 95, 107, 109, 113, 114, 115, 116, 118, 119, 129, 131, 141, 142, 144, 147, 149, 151, 153, 156, 159, 171, 174, 175, 176, 177, 182, 183, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 216, 220, 224, 226, 230, 231, 232, 235, 239], "coupl": [2, 14, 38, 50, 56, 59, 61, 69, 70, 77, 78, 91, 106, 113, 114, 159, 165, 170, 192, 193, 208, 216, 219, 224, 226, 230, 231, 237, 239], "d\u00e9parteg": [2, 226], "exaequo": [2, 226], "45": [2, 46, 50, 51, 54, 84, 95, 121, 128, 141, 143, 144, 145, 150, 160, 166, 169, 178, 179, 201, 205, 226, 230], "56": [2, 26, 50, 51, 54, 62, 95, 109, 110, 113, 114, 128, 131, 138, 139, 145, 190, 205, 216, 226, 239], "permet": [2, 4, 10, 14, 18, 33, 38, 40, 41, 42, 48, 50, 51, 53, 54, 56, 58, 59, 61, 62, 69, 71, 74, 77, 79, 80, 81, 87, 89, 96, 100, 108, 109, 110, 111, 112, 115, 116, 146, 147, 148, 152, 154, 158, 161, 165, 166, 170, 171, 174, 182, 188, 189, 190, 192, 193, 194, 198, 199, 200, 206, 208, 214, 216, 218, 219, 220, 222, 224, 226, 227, 228, 230, 231, 232, 234, 235, 237, 239], "\u00e7a": [2, 35, 46, 53, 61, 87, 89, 91, 92, 93, 134, 135, 152, 166, 188, 192, 193, 206, 218, 226, 228, 238], "pris": [2, 37, 38, 56, 59, 61, 83, 178, 179, 195, 199, 200, 204, 206, 207, 222, 224, 226, 232], "aucun": [2, 8, 38, 39, 53, 56, 58, 60, 69, 70, 74, 77, 78, 81, 82, 84, 91, 94, 100, 108, 117, 134, 140, 182, 183, 198, 199, 216, 219, 220, 224, 226, 230, 231, 232, 234], "bout": [2, 56, 69, 73, 74, 83, 87, 106, 108, 147, 170, 195, 197, 198, 207, 219, 225, 226, 231], "pr\u00e9senc": [2, 51, 74, 204, 216, 226, 231, 234, 239], "second": [2, 4, 6, 7, 11, 19, 20, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 51, 53, 56, 58, 59, 60, 61, 62, 69, 70, 71, 74, 77, 79, 80, 81, 82, 83, 84, 87, 88, 91, 94, 95, 100, 106, 108, 109, 113, 114, 116, 118, 122, 129, 131, 132, 135, 139, 147, 148, 151, 152, 154, 156, 165, 167, 168, 178, 179, 180, 181, 183, 189, 190, 192, 195, 197, 198, 199, 200, 201, 207, 208, 216, 219, 220, 226, 227, 230, 231, 232, 234, 235, 237, 239], "probabl": [2, 14, 50, 52, 56, 59, 61, 62, 77, 78, 88, 96, 114, 117, 118, 122, 129, 130, 132, 135, 139, 144, 154, 159, 166, 190, 207, 216, 226], "faibl": [2, 14, 56, 77, 78, 88, 95, 128, 144, 173, 226], "recherche_dichotom": [2, 5, 158, 168, 226], "id\u00e9": [2, 14, 33, 56, 58, 59, 61, 62, 77, 78, 79, 81, 82, 83, 88, 90, 95, 106, 108, 115, 116, 120, 121, 130, 137, 154, 155, 161, 166, 172, 173, 181, 182, 204, 210, 214, 224, 226, 232], "\u00e9limin": [2, 18, 30, 94, 208, 226, 239], "moiti": [2, 42, 59, 77, 81, 119, 168, 208, 209, 226], "whil": [2, 30, 31, 33, 40, 42, 59, 68, 77, 78, 79, 82, 84, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 101, 105, 106, 108, 113, 114, 115, 122, 148, 151, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 168, 172, 183, 185, 189, 195, 197, 207, 208, 209, 211, 213, 216, 226, 231, 237, 239], "elif": [2, 4, 33, 69, 70, 71, 83, 84, 87, 101, 106, 109, 111, 112, 115, 116, 118, 134, 136, 146, 148, 151, 163, 168, 197, 207, 208, 209, 211, 216, 224, 226, 230], "interven": [2, 59, 95, 118, 154, 216, 224, 226, 232, 237], "addit": [2, 41, 61, 69, 94, 95, 100, 108, 159, 188, 200, 208, 216, 226, 230, 231], "schem": [2, 59, 69, 99, 193, 216, 219, 224, 226, 230, 232, 235, 237], "initialis": [2, 7, 50, 53, 58, 59, 74, 77, 89, 146, 182, 185, 188, 207, 216, 226, 230, 231], "6456": [2, 226], "6933": [2, 226], "integr": [2, 4, 19, 56, 71, 172, 194, 195, 219, 226, 230, 231, 236, 237], "sen": [2, 7, 10, 14, 41, 42, 50, 53, 56, 59, 61, 69, 70, 83, 87, 88, 99, 102, 132, 150, 153, 156, 161, 199, 219, 224, 226, 227, 230, 232], "Et": [2, 4, 14, 27, 33, 34, 39, 40, 42, 46, 51, 52, 53, 60, 61, 69, 71, 74, 81, 84, 85, 88, 91, 93, 100, 108, 113, 114, 115, 116, 118, 128, 134, 135, 136, 139, 147, 150, 151, 152, 155, 156, 159, 161, 168, 170, 171, 178, 179, 188, 193, 194, 196, 199, 203, 206, 218, 219, 222, 224, 225, 226, 230, 232, 234, 235, 237], "gr\u00e2c": [2, 56, 61, 62, 69, 74, 115, 116, 216, 224, 226, 231, 232, 234, 235, 239], "s1": [2, 132, 152, 161, 226], "s2": [2, 51, 69, 132, 152, 226, 231, 232], "s3": [2, 46, 226], "avantag": [2, 59, 62, 139, 199, 214, 216, 224, 226, 230, 231, 232], "derni": [2, 14, 27, 37, 38, 42, 46, 51, 54, 56, 59, 61, 62, 69, 70, 74, 83, 85, 87, 89, 91, 94, 95, 96, 98, 99, 102, 103, 106, 108, 113, 114, 115, 116, 137, 149, 157, 162, 182, 185, 190, 192, 193, 198, 206, 207, 208, 216, 219, 220, 224, 226, 230, 231, 232, 234, 236, 237], "elles": [2, 3, 4, 9, 10, 34, 38, 39, 48, 50, 54, 56, 58, 59, 61, 62, 69, 70, 71, 74, 82, 85, 87, 93, 95, 115, 116, 117, 118, 119, 132, 181, 182, 192, 198, 199, 216, 218, 219, 224, 226, 230, 231, 232, 234, 237, 239], "\u00e9vitent": [2, 226], "cr\u00e9ation": [2, 45, 50, 51, 69, 70, 84, 95, 147, 190, 192, 198, 208, 216, 224, 226, 230, 232, 234, 237], "interm\u00e9diair": [2, 36, 59, 61, 69, 101, 102, 192, 193, 201, 219, 222, 226, 230, 231, 232, 235, 237], "prendr": [2, 14, 32, 38, 41, 51, 53, 56, 59, 62, 74, 77, 82, 85, 88, 95, 106, 142, 157, 165, 172, 182, 192, 194, 198, 199, 204, 206, 210, 216, 226, 230, 231, 234, 239], "laquel": [2, 27, 50, 53, 56, 59, 60, 70, 74, 78, 95, 100, 101, 108, 119, 151, 165, 183, 190, 195, 207, 208, 210, 216, 224, 226, 230, 231, 237], "volumin": [2, 56, 226, 231], "suivent": [2, 56, 58, 61, 62, 69, 85, 135, 198, 199, 219, 224, 226, 230, 231, 232, 234, 239], "permettent": [2, 14, 51, 56, 62, 64, 69, 70, 74, 77, 108, 146, 150, 152, 166, 188, 198, 199, 208, 216, 218, 219, 222, 224, 226, 230, 231, 232, 234, 237, 239], "proced": [2, 56, 59, 62, 69, 154, 158, 161, 168, 208, 210, 216, 224, 226, 232, 234, 237], "r\u00e9cuper": [2, 26, 40, 46, 50, 53, 69, 70, 95, 96, 101, 117, 144, 161, 169, 182, 183, 198, 199, 219, 221, 224, 225, 226, 227, 228, 230, 231, 232, 239], "depuis": [2, 4, 10, 21, 33, 37, 40, 50, 51, 53, 54, 56, 61, 62, 69, 70, 71, 96, 117, 169, 182, 183, 188, 192, 206, 216, 219, 224, 225, 226, 227, 228, 232, 234, 235, 237], "proven": [2, 4, 56, 71, 224, 226, 237], "tableur": [2, 226, 232], "d\u00e9composit": [2, 20, 41, 50, 77, 127, 174, 226], "split": [2, 10, 11, 46, 51, 69, 87, 143, 157, 160, 165, 180, 182, 186, 187, 198, 199, 207, 224, 226, 231, 232, 234, 239], "tres": [2, 4, 14, 16, 35, 38, 39, 41, 42, 46, 50, 51, 54, 56, 59, 60, 61, 62, 63, 64, 69, 70, 71, 77, 78, 87, 88, 89, 91, 92, 93, 95, 96, 99, 106, 109, 115, 116, 118, 121, 122, 129, 131, 132, 134, 136, 139, 140, 142, 144, 145, 146, 149, 151, 158, 161, 166, 168, 170, 172, 173, 181, 182, 189, 192, 198, 199, 200, 206, 207, 208, 214, 216, 219, 222, 224, 225, 226, 230, 231, 232, 234, 235], "travaill": [2, 50, 74, 108, 172, 199, 219, 226], "pand": [2, 3, 19, 22, 24, 29, 30, 31, 43, 45, 48, 50, 52, 73, 78, 85, 86, 88, 91, 109, 113, 114, 117, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 151, 157, 158, 163, 164, 169, 173, 178, 179, 182, 183, 199, 226, 231, 241], "robust": [2, 14, 56, 62, 70, 139, 207, 226], "consider": [2, 3, 4, 14, 33, 38, 41, 50, 51, 54, 56, 58, 59, 61, 62, 64, 69, 71, 79, 81, 83, 95, 99, 100, 108, 110, 111, 114, 115, 116, 118, 119, 129, 144, 149, 163, 166, 170, 172, 183, 184, 185, 188, 192, 200, 204, 216, 218, 220, 224, 226, 230, 231, 234, 237, 239], "to_csv": [2, 51, 117, 158, 199, 226], "read_csv": [2, 30, 51, 54, 85, 117, 158, 182, 183, 199, 226], "direct": [2, 4, 38, 50, 51, 56, 69, 74, 79, 84, 85, 95, 106, 107, 109, 132, 166, 172, 186, 187, 188, 196, 197, 204, 207, 208, 216, 219, 220, 226, 230, 231, 232], "enregistr": [2, 40, 51, 53, 60, 69, 83, 138, 158, 166, 169, 198, 199, 216, 226, 232, 234, 239], "excel": [2, 19, 69, 74, 226, 232], "read_excel": [2, 54, 158, 226], "to_excel": [2, 51, 158, 226], "triindex": [2, 5, 226], "quicksort": [2, 226], "consist": [2, 14, 18, 27, 34, 35, 42, 46, 51, 56, 58, 59, 61, 62, 69, 70, 74, 79, 82, 83, 85, 89, 90, 94, 95, 106, 108, 109, 110, 115, 116, 130, 132, 148, 154, 161, 168, 174, 175, 182, 192, 195, 199, 204, 207, 208, 216, 224, 226, 230, 231, 232, 234, 235, 237, 239], "pet": [2, 4, 6, 14, 15, 33, 35, 37, 41, 50, 53, 56, 61, 69, 71, 77, 78, 81, 83, 85, 87, 93, 95, 96, 98, 100, 106, 108, 113, 118, 119, 129, 134, 157, 160, 161, 171, 182, 190, 195, 200, 205, 214, 219, 226, 230, 231], "\u00e9chang": [2, 32, 56, 59, 60, 91, 106, 148, 161, 198, 216, 224, 226, 231, 232, 237], "plac": [2, 6, 8, 9, 10, 30, 56, 58, 69, 71, 74, 94, 95, 106, 108, 111, 112, 134, 148, 151, 167, 170, 172, 182, 199, 205, 208, 216, 226, 230, 231, 232, 234, 237, 239], "recomment": [2, 27, 53, 62, 113, 130, 139, 180, 181, 199, 205, 226, 237], "proc\u00e9dur": [2, 199, 226, 234], "troisiem": [2, 46, 53, 56, 59, 69, 74, 81, 88, 106, 122, 131, 168, 189, 192, 198, 216, 219, 224, 226, 230, 231, 232, 237, 239], "jusqu": [2, 18, 30, 33, 42, 55, 56, 58, 59, 61, 69, 70, 74, 77, 81, 85, 87, 88, 95, 99, 100, 108, 130, 147, 148, 184, 195, 206, 211, 216, 219, 220, 224, 225, 226, 230, 231, 232, 237], "6": [2, 4, 7, 11, 16, 18, 26, 27, 34, 35, 39, 41, 42, 46, 49, 50, 52, 53, 54, 55, 56, 62, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 184, 187, 188, 189, 190, 191, 192, 193, 195, 197, 201, 210, 211, 214, 216, 218, 222, 224, 226, 227, 228, 230, 231, 237, 239], "exclu": [2, 33, 42, 69, 74, 98, 111, 112, 153, 201, 208, 224, 226, 230, 231], "pos": [2, 30, 41, 56, 59, 74, 86, 91, 94, 100, 106, 107, 109, 110, 113, 114, 115, 116, 118, 129, 130, 151, 157, 158, 163, 170, 179, 183, 189, 207, 214, 216, 218, 224, 226, 232, 239], "ech": [2, 106, 226], "selon": [2, 10, 14, 27, 50, 51, 54, 56, 59, 61, 69, 70, 74, 85, 88, 95, 99, 111, 112, 113, 115, 116, 121, 131, 133, 134, 139, 144, 151, 163, 166, 174, 175, 176, 177, 178, 179, 181, 188, 198, 206, 208, 216, 219, 224, 226, 228, 230, 231, 232, 239], "timsort": [2, 173, 226], "parfois": [2, 30, 34, 39, 50, 54, 56, 60, 61, 62, 69, 70, 74, 81, 108, 117, 136, 148, 157, 178, 179, 180, 182, 190, 207, 216, 219, 220, 222, 224, 225, 226, 228, 230, 231, 232, 234, 235, 237], "amen": [2, 62, 95, 226], "parc": [2, 4, 27, 38, 39, 51, 59, 64, 69, 71, 74, 85, 88, 100, 128, 134, 178, 188, 189, 199, 216, 219, 226, 230, 231], "moin": [2, 4, 6, 9, 14, 21, 27, 33, 41, 46, 51, 56, 59, 61, 62, 69, 70, 71, 74, 77, 79, 84, 85, 87, 89, 91, 97, 99, 108, 113, 114, 118, 121, 129, 134, 135, 141, 142, 143, 154, 155, 158, 159, 161, 165, 166, 168, 170, 173, 178, 185, 188, 189, 190, 192, 198, 206, 216, 219, 220, 222, 224, 226, 227, 228, 230, 231, 232, 237, 239], "applic": [2, 33, 59, 216, 218, 226, 232], "tab": [2, 41, 98, 102, 106, 163, 226], "zero": [2, 31, 50, 69, 77, 219, 224, 226, 231], "trop": [2, 7, 9, 10, 14, 33, 38, 46, 50, 51, 54, 56, 58, 59, 60, 61, 69, 74, 77, 81, 85, 88, 91, 93, 95, 105, 108, 116, 118, 131, 145, 165, 166, 167, 178, 179, 188, 198, 210, 219, 226, 230, 231, 232, 234, 235, 237], "succinct": [2, 226], "tab_posit": [2, 226], "vect": [2, 226], "ncol": [2, 113, 226], "teachpyx": [3, 5, 6, 11, 19, 26, 27, 39, 46, 49, 51, 54, 58, 62, 71, 72, 73, 74, 95, 96, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 161, 163, 164, 166, 170, 178, 179, 182, 183, 198, 199, 204, 205, 226, 232], "dataset": [3, 26, 27, 46, 54, 62, 85, 117, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 180, 181], "load_enedis_dataset": [3, 5, 46], "datafram": [3, 11, 15, 31, 37, 73, 78, 85, 86, 88, 91, 109, 113, 114, 117, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 151, 157, 158, 161, 163, 164, 169, 173, 178, 179, 229], "extrait": [3, 6, 10, 19, 36, 49, 50, 51, 54, 56, 61, 69, 70, 96, 178, 200, 216, 230, 232, 239], "ened": [3, 46], "product": [3, 220], "\u00e9lectr": [3, 60], "annuel": [3, 14, 46, 56, 108], "fili": [3, 46], "maill": 3, "commun": [3, 15, 46, 50, 51, 53, 56, 81, 96, 123, 132, 150, 204, 216, 230, 231, 232, 235, 237], "jeu": [3, 20, 26, 30, 38, 51, 62, 74, 86, 93, 107, 126, 127, 131, 145, 181, 188, 224, 228], "propos": [3, 4, 6, 17, 20, 27, 38, 41, 46, 51, 53, 56, 58, 59, 61, 62, 71, 78, 85, 88, 94, 95, 97, 100, 106, 107, 108, 113, 114, 115, 116, 118, 121, 123, 142, 153, 154, 156, 158, 161, 165, 171, 174, 175, 176, 177, 181, 182, 186, 187, 189, 190, 198, 199, 200, 205, 206, 208, 216, 218, 219, 220, 224, 225, 230, 231, 232, 234, 236, 237], "ann\u00e9": [3, 14, 15, 19, 20, 46, 51, 56, 74, 108, 117, 198, 199, 218, 237, 239], "2015": [3, 97, 98], "2016": [3, 4, 46, 71, 75, 97], "notebook": [3, 16, 19, 20, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 50, 51, 52, 53, 54, 55, 62, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 224, 235, 237], "trac": [3, 4, 8, 41, 47, 48, 51, 54, 60, 61, 71, 85, 95, 118, 127, 131, 133, 135, 137, 151, 178, 179, 205, 216, 220, 222, 232], "cart": [3, 4, 47, 48, 71, 188, 230], "load_wines_dataset": [3, 5, 26, 62, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "download": [3, 11, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 51], "bool": [3, 4, 7, 10, 11, 13, 50, 51, 69, 71, 146, 156, 225, 230], "shuffl": [3, 42, 139, 141, 173, 199], "win": [3, 62, 224, 237], "quality": [3, 26, 62, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "pr\u00e9dict": [3, 14, 27, 62, 85, 88, 109, 126, 134, 138, 140, 141, 142, 145, 180, 181], "vinsn": 3, "parametr": [3, 4, 6, 7, 9, 10, 11, 12, 13, 38, 41, 50, 51, 58, 59, 64, 81, 84, 95, 104, 105, 108, 110, 115, 116, 117, 118, 120, 126, 138, 146, 148, 152, 188, 190, 192, 199, 216, 218, 219, 224, 228, 231, 232, 234, 237, 239], "t\u00e9l\u00e9charg": [3, 4, 7, 46, 62, 69, 71, 74, 161, 169, 198, 199, 204], "cop": [3, 4, 50, 51, 54, 70, 71, 75, 77, 78, 89, 98, 99, 156, 207, 208, 217, 230, 234, 235], "data_help": [3, 182, 183, 198, 199, 204, 205], "get_data_fold": [3, 5], "return": [3, 4, 6, 10, 11, 30, 31, 32, 33, 34, 38, 39, 41, 42, 46, 50, 51, 52, 53, 64, 70, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 134, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 179, 181, 185, 188, 189, 190, 191, 193, 195, 197, 198, 199, 204, 205, 206, 207, 210, 211, 213, 214, 216, 218, 219, 220, 224, 225, 226, 230, 231, 232, 234, 235, 237, 239], "fold": [3, 11, 12, 13, 65, 68, 141, 232], "including": [3, 75], "packag": [3, 16, 19, 21, 22, 40, 46, 53, 140, 142, 165, 166, 167, 180, 198, 220, 224, 234, 236, 237], "load_wine_dataset": [3, 5], "logist": [3, 62, 126, 128, 129, 136, 137], "courb": [3, 51, 56, 59, 62, 70, 83, 85, 126, 128, 137, 194, 224], "rocn": 3, "dist": [4, 9, 51, 56, 84, 89, 92, 115, 116, 121, 140, 166, 180, 182, 183, 211, 232], "common": [4, 30, 166, 231, 234], "interfac": [4, 41, 50, 66, 71, 74, 134, 216, 224, 230, 234, 236, 240], "old": [4, 69, 231], "except": [4, 33, 35, 38, 39, 40, 46, 50, 51, 53, 54, 56, 60, 64, 66, 74, 79, 80, 96, 99, 100, 103, 106, 108, 109, 110, 112, 113, 114, 117, 134, 137, 143, 144, 146, 150, 161, 170, 183, 192, 197, 199, 200, 201, 216, 222, 224, 225, 230, 231, 232, 234, 235, 237, 239, 240], "pqpiperror": [4, 5], "arg": [4, 11, 50, 62, 88, 89, 109, 110, 134, 182, 216, 220], "any": [4, 10, 11, 50, 75, 167, 216, 230], "raised": [4, 220], "following": [4, 11, 31, 50, 65, 75, 186, 187, 220, 224], "function": [4, 7, 10, 11, 13, 24, 29, 39, 43, 50, 62, 69, 127, 133, 134, 157, 165, 166, 167, 180, 193, 220, 224, 228, 230, 234, 237, 239, 241], "class_getitem": [4, 5], "show": [4, 11, 26, 27, 50, 71, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180], "enabl": [4, 165, 166, 167, 180], "instanc": [4, 11, 51, 58, 70, 71, 98, 148, 150, 152, 188, 217, 219, 224, 225, 230, 231, 234, 235, 237], "through": [4, 10], "__class_getitem__": [4, 216], "difference_div": [4, 5, 71], "quotient": [4, 71], "div1": [4, 71], "div2": [4, 71], "div3": [4, 71], "div4": [4, 71], "print": [4, 6, 11, 26, 27, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 62, 65, 68, 70, 74, 77, 79, 80, 81, 82, 83, 84, 87, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 114, 115, 116, 117, 118, 132, 137, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 160, 161, 163, 165, 166, 167, 169, 174, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 205, 207, 208, 209, 210, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 230, 232, 234, 235, 237, 239], "rest": [4, 14, 30, 38, 39, 42, 53, 56, 59, 62, 69, 70, 71, 80, 84, 88, 89, 91, 95, 96, 100, 101, 108, 113, 121, 130, 137, 139, 140, 146, 149, 160, 161, 170, 176, 177, 178, 192, 195, 197, 198, 199, 206, 207, 216, 219, 222, 224, 230, 231, 232, 235, 237], "obtenu": [4, 27, 42, 50, 56, 59, 62, 69, 70, 71, 83, 86, 93, 108, 112, 137, 156, 157, 195, 206, 216, 232, 234], "entier_grande_taill": [4, 5, 71], "maxint": [4, 71], "new": [4, 11, 30, 51, 56, 69, 71, 205, 231], "De": [4, 14, 30, 56, 62, 71, 78, 85, 95, 118, 139, 150, 154, 157, 178, 188, 192, 198, 201, 216, 220, 224, 230, 231, 232, 234, 237], "getrandb": [4, 71], "random": [4, 31, 42, 50, 51, 52, 53, 71, 77, 78, 83, 84, 85, 86, 88, 89, 91, 92, 93, 95, 100, 103, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 128, 129, 130, 132, 134, 137, 138, 141, 144, 147, 151, 154, 159, 162, 163, 164, 173, 174, 175, 181, 182, 183, 190, 191, 195, 197, 199, 206, 207, 209, 210, 216, 225, 234, 237], "getrandbit": [4, 71], "2048": [4, 61, 71, 83, 99, 107, 127, 198], "Qui": [4, 30, 71, 87, 160], "2882159224557107513165483098383814837021447484558010147211921": [4, 71], "304219017212673656549681269862792029": [4, 71], "font": [4, 11, 30, 32, 50, 56, 59, 60, 69, 71, 81, 84, 113, 114, 198, 199, 216, 219, 224, 230, 231, 232, 237], "huit": [4, 71, 95, 231, 232, 239], "octet": [4, 6, 41, 71, 158, 161, 170, 199, 205, 228, 231, 232, 235], "Au": [4, 32, 34, 50, 51, 56, 58, 71, 83, 84, 111, 134, 188, 216, 231, 234, 237], "del\u00e0": [4, 7, 51, 58, 71, 77, 108, 132, 145, 182, 237], "librair": [4, 6, 39, 48, 50, 53, 54, 58, 64, 71, 72, 145, 157, 161, 167, 172, 220, 231, 236], "gmpy2": [4, 71], "recommand": [4, 51, 52, 69, 71, 74, 78, 97, 108, 129, 170, 199, 216, 219, 224, 234], "20": [4, 7, 10, 11, 13, 27, 30, 36, 37, 39, 42, 46, 50, 51, 53, 54, 56, 61, 70, 71, 77, 84, 85, 86, 88, 89, 93, 95, 99, 100, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155, 158, 159, 163, 164, 166, 169, 170, 171, 178, 179, 181, 184, 188, 192, 194, 195, 198, 206, 207, 208, 209, 224, 227, 230, 231, 235, 237, 239], "40": [4, 30, 36, 38, 39, 50, 51, 54, 56, 71, 77, 88, 95, 108, 114, 117, 120, 128, 133, 136, 137, 141, 144, 145, 150, 164, 166, 170, 178, 179, 195, 224, 235, 239], "chiffr": [4, 33, 35, 56, 60, 69, 70, 71, 94, 96, 107, 108, 139, 188, 189, 196, 198, 219, 231, 239], "overview": [4, 71, 224], "remplac": [4, 33, 50, 69, 71, 78, 83, 95, 100, 101, 106, 108, 113, 114, 130, 151, 172, 174, 188, 190, 192, 196, 198, 199, 208, 216, 218, 224, 230, 231, 232, 237, 239], "editeur": [4, 71], "bougent": [4, 58, 71, 156], "essentiel": [4, 56, 59, 69, 71, 190, 230, 234, 237], "m\u00e9lang": [4, 14, 71, 115, 116, 139, 160, 216, 230], "aller": [4, 33, 41, 50, 61, 71, 79, 83, 87, 98, 128, 129, 161, 165, 189, 193, 194, 195, 198, 230], "menu": [4, 71, 199], "option": [4, 11, 16, 50, 51, 54, 56, 61, 65, 71, 74, 80, 84, 92, 94, 106, 113, 115, 116, 122, 132, 134, 135, 140, 142, 151, 155, 161, 169, 188, 216, 224, 231, 234, 239], "indent": [4, 69, 71, 147, 149, 201, 216, 219, 229], "setting": [4, 67, 71], "similair": [4, 51, 52, 54, 56, 61, 62, 70, 71, 95, 182, 216, 230, 231, 237, 239], "enumerate_regex_search": [4, 5, 71], "exp": [4, 35, 50, 71, 94, 99, 167, 173, 179, 198, 199, 234, 239], "occurent": [4, 69, 162, 231], "pars": [4, 40, 220, 232], "findit": [4, 71, 94, 160, 198], "found": [4, 30, 51, 71, 122, 198], "get_day_nam": [4, 5, 71], "day": [4, 56, 85, 199, 227], "nam": [4, 11, 30, 40, 46, 51, 54, 68, 70, 71, 100, 103, 144, 145, 152, 164, 169, 182, 183, 216, 220, 230, 231, 234, 237], "giv": 4, "datatim": 4, "month": 4, "datetim": [4, 51, 71, 85, 95, 199, 229, 231, 234], "friday": [4, 71], "get_installed_distribu": [4, 5], "local_only": 4, "skip": [4, 95, 144], "include_edit": 4, "editables_only": 4, "user_only": 4, "use_cmd": 4, "installed": 4, "default": [4, 11, 39, 40, 65, 69, 134, 224, 230, 234, 235, 239], "current": [4, 84, 113, 133, 158, 186, 187, 234], "virtualenv": 4, "low": [4, 27, 31, 69, 87, 129, 157, 186, 187, 231, 239], "ignor": [4, 128, 129, 144, 199, 222, 228, 230], "compat": 4, "stdlib_pkg": 4, "report": 4, "user": [4, 21, 67, 68, 150, 169, 224, 231], "directory": [4, 40, 234, 239], "use": [4, 11, 30, 31, 40, 50, 75, 234], "updated": [4, 65], "get_month_nam": [4, 5, 71], "january": [4, 71], "get_package_info": [4, 5], "start": [4, 11, 17, 69, 77, 160, 165, 198, 231, 237], "end": [4, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 56, 58, 59, 61, 62, 69, 70, 81, 83, 85, 101, 109, 110, 122, 132, 141, 160, 174, 178, 179, 182, 183, 195, 198, 220, 224, 231, 237, 239], "retriev": [4, 68], "he": [4, 186, 187], "all": [4, 10, 11, 24, 30, 50, 75, 166, 167, 186, 187, 207, 216, 234, 239, 241], "get_packages_list": [4, 5], "dictionar": [4, 11], "information_about_packag": [4, 5, 71], "nouveau": [4, 54, 56, 62, 69, 71, 81, 85, 140, 147, 151, 152, 157, 161, 173, 182, 192, 198, 199, 206, 207, 216, 218, 224, 231, 232], "main": [4, 7, 11, 51, 54, 65, 69, 71, 95, 96, 117, 158, 161, 182, 183, 198, 199, 204, 205, 220, 237], "lent": [4, 41, 50, 58, 59, 60, 61, 71, 91, 99, 148, 161, 165, 166, 167, 178, 179, 181, 225, 231, 235], "incluent": [4, 69, 71, 231, 234], "matplotlib": [4, 22, 27, 31, 42, 46, 50, 53, 54, 66, 71, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 104, 105, 108, 111, 112, 113, 114, 115, 116, 117, 120, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 154, 155, 157, 159, 163, 164, 169, 173, 181, 195, 199, 202, 203, 205], "scipy": [4, 49, 53, 61, 66, 71, 89, 115, 116, 121, 154, 166, 167, 181, 188, 234], "scik": [4, 22, 62, 71, 129, 132, 134, 135, 137, 139, 142, 144, 172, 222, 236], "learn": [4, 22, 62, 71, 129, 132, 134, 135, 137, 139, 142, 144, 172, 222, 236], "linux": [4, 16, 40, 63, 66, 71, 74, 182, 224, 228, 231, 232], "compil": [4, 71, 94, 165, 166, 170, 198, 199, 217, 219, 231, 234, 239], "met": [4, 38, 58, 59, 61, 71, 103, 111, 112, 118, 146, 170, 189, 216, 224, 230], "implicit": [4, 27, 51, 69, 71, 119, 150, 151, 161, 198, 207, 230, 231, 232], "contribu": [4, 71, 145, 199, 234], "d\u00e9faut": [4, 16, 34, 50, 51, 54, 56, 69, 71, 74, 98, 99, 110, 139, 150, 166, 192, 208, 209, 216, 224, 229, 231, 232, 234, 235, 237, 239], "attent": [4, 14, 16, 32, 42, 50, 56, 69, 71, 85, 95, 169, 199, 210, 219, 228, 230, 234], "exact": [4, 51, 69, 71, 87, 108, 139, 155, 166, 187, 193, 216, 224, 230], "compiling": [4, 71], "anacond": [4, 16, 19, 71, 74], "pr\u00e9compil": [4, 71, 234], "cond": [4, 70, 71, 74, 199, 230], "module_compil": [4, 71], "list_of_installed_packag": [4, 5, 71], "licens": [4, 71, 73, 199], "summary": [4, 71], "powerful": [4, 71], "analys": [4, 58, 62, 68, 70, 71, 77, 85, 109, 126, 129, 131, 178, 231], "statistic": [4, 11, 71, 145], "hom": [4, 39, 40, 46, 71, 132, 134, 135, 137, 140, 142, 165, 180, 198, 220], "pydat": [4, 54, 71], "author": [4, 71, 75], "development": [4, 16, 71], "team": [4, 71, 186, 187], "email": [4, 40, 64, 69, 71, 232], "googlegroup": [4, 71], "com": [4, 7, 40, 46, 51, 54, 65, 71, 85, 95, 96, 117, 161, 182, 183, 198, 199, 204, 205, 207, 232, 239], "bsd": [4, 71], "locat": [4, 7, 46, 71, 158, 186, 187, 210], "python35_x64": [4, 71], "lib": [4, 46, 53, 67, 68, 71, 140, 142, 165, 166, 167, 180, 198, 220, 224], "requir": [4, 10, 65, 71], "dateutil": [4, 71, 85], "pytz": [4, 71], "freez": [4, 71], "r\u00e9pliqu": [4, 69, 71, 100], "environ": [4, 33, 50, 56, 59, 71, 74, 95, 99, 121, 231, 234], "docutil": [4, 71, 220], "jinja2": [4, 71, 198, 199], "markupsaf": [4, 71], "19": [4, 30, 41, 42, 46, 50, 51, 53, 54, 56, 71, 77, 82, 83, 84, 85, 88, 95, 100, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 128, 130, 131, 132, 135, 136, 137, 140, 141, 142, 144, 145, 154, 155, 158, 164, 165, 166, 167, 168, 169, 170, 173, 178, 179, 181, 188, 192, 195, 198, 199, 201, 208, 209, 216, 227, 230, 231, 239], "pygment": [4, 71], "sphinx": [4, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 71, 216, 220], "txt": [4, 51, 65, 69, 71, 96, 182, 183, 198, 199, 204, 205, 219, 220, 228, 231, 232], "property_exampl": [4, 5, 71], "property": [4, 11, 30, 69, 70, 71, 161, 216, 224], "appel": [4, 32, 33, 38, 39, 41, 50, 53, 54, 56, 58, 61, 62, 69, 71, 81, 84, 88, 93, 95, 96, 99, 112, 118, 132, 134, 138, 139, 142, 148, 150, 151, 152, 165, 166, 167, 178, 182, 184, 188, 190, 192, 195, 198, 199, 207, 208, 210, 218, 219, 221, 222, 224, 227, 228, 231, 232, 234, 236, 237, 239], "attribut": [4, 11, 19, 30, 39, 41, 50, 71, 100, 127, 146, 150, 152, 217, 218, 219, 224, 225, 232, 235, 237, 239], "classeavecproperty": [4, 71], "__init__": [4, 30, 39, 41, 46, 69, 70, 71, 122, 134, 146, 147, 148, 149, 150, 151, 152, 165, 166, 167, 180, 188, 189, 190, 207, 210, 216, 218, 219, 220, 224, 232, 234, 235, 237], "self": [4, 30, 39, 41, 46, 53, 58, 69, 70, 71, 122, 134, 146, 147, 148, 149, 150, 151, 152, 188, 189, 190, 191, 207, 210, 216, 218, 219, 220, 224, 231, 232, 234, 235, 237], "_x": [4, 71, 216], "_y": [4, 71, 216], "norm2": [4, 71], "impossibl": [4, 30, 38, 39, 41, 42, 56, 61, 62, 70, 71, 78, 84, 85, 91, 96, 100, 143, 192, 216, 222, 230, 231, 232, 234, 235], "\u00e9criv": [4, 41, 71, 100, 166, 190, 192, 224, 231], "455": [4, 71, 180], "attributeerror": [4, 71, 100, 216, 219, 225], "python_path": [4, 5, 71], "pr\u00e9sent": [4, 7, 33, 34, 50, 51, 56, 58, 59, 61, 69, 70, 71, 77, 85, 88, 93, 109, 110, 121, 123, 129, 148, 149, 157, 158, 169, 172, 182, 192, 198, 199, 204, 208, 217, 219, 222, 224, 230, 231, 232, 234, 237, 239], "introduit": [4, 50, 51, 69, 71, 110, 130, 137, 148, 192, 230, 234], "avant": [4, 12, 13, 14, 30, 41, 51, 53, 54, 56, 58, 59, 61, 62, 69, 70, 71, 83, 84, 91, 93, 95, 99, 108, 113, 114, 160, 161, 182, 184, 192, 197, 198, 199, 200, 206, 207, 210, 216, 219, 224, 230, 231, 232, 234, 237], "fais": [4, 50, 51, 62, 71, 88, 205, 216, 230, 231, 237], "moncod": [4, 71], "monmodul": [4, 71, 198], "src": [4, 71, 82, 87], "petit": [4, 18, 33, 51, 56, 59, 60, 61, 66, 71, 82, 86, 87, 88, 95, 106, 108, 132, 163, 170, 178, 190, 194, 199, 202, 203, 204, 214, 224, 230, 231, 234, 239], "fois": [4, 6, 10, 14, 27, 30, 33, 39, 50, 53, 56, 58, 59, 60, 61, 62, 64, 69, 71, 74, 77, 80, 82, 83, 84, 86, 87, 88, 93, 94, 95, 96, 98, 99, 100, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 121, 130, 134, 135, 139, 140, 143, 145, 147, 148, 153, 154, 155, 156, 165, 170, 173, 183, 185, 188, 189, 192, 193, 195, 197, 198, 199, 200, 206, 207, 208, 216, 218, 219, 222, 224, 225, 230, 231, 232, 234, 235, 236, 237, 239], "barb": [4, 71], "ailleur": [4, 50, 56, 61, 71, 74, 95, 147, 159, 207, 222, 230], "pythonpath": [4, 71], "same_vari": [4, 5, 71], "dit": [4, 10, 33, 38, 42, 51, 56, 58, 61, 69, 70, 77, 84, 85, 95, 96, 109, 110, 132, 137, 142, 145, 170, 178, 179, 188, 192, 195, 199, 216, 219, 224, 230, 231, 232, 237], "modifi": [4, 41, 50, 51, 54, 56, 64, 66, 71, 83, 85, 89, 95, 98, 100, 103, 106, 107, 108, 110, 111, 113, 118, 119, 129, 153, 156, 161, 170, 172, 190, 198, 200, 207, 208, 216, 218, 219, 220, 222, 224, 227, 229, 232, 234, 235, 237], "concern": [4, 27, 51, 56, 59, 69, 71, 74, 199, 216, 219, 224, 228, 230, 231, 232, 237, 239], "principal": [4, 41, 46, 53, 54, 56, 58, 61, 62, 69, 71, 73, 74, 131, 170, 181, 192, 198, 200, 222, 231, 232, 234, 235, 237, 239], "float": [4, 7, 8, 9, 10, 11, 24, 29, 41, 43, 46, 50, 52, 53, 55, 69, 71, 96, 113, 123, 146, 150, 166, 170, 182, 195, 198, 199, 219, 230, 231, 234, 239, 241], "effectu": [4, 10, 33, 38, 39, 41, 50, 51, 53, 54, 56, 58, 69, 71, 83, 88, 106, 108, 109, 115, 116, 170, 176, 177, 182, 184, 189, 193, 199, 206, 207, 211, 216, 219, 224, 228, 230, 231, 232, 234, 235, 237, 239], "dictionnair": [4, 33, 38, 39, 51, 54, 61, 71, 78, 94, 98, 99, 100, 101, 103, 106, 109, 122, 123, 127, 152, 161, 178, 182, 188, 204, 205, 206, 207, 218, 219, 225, 230, 232, 234, 235, 237, 239], "mutabl": [4, 71, 207, 208, 229], "d\u00e9sign": [4, 38, 41, 50, 51, 53, 54, 56, 58, 59, 62, 69, 70, 71, 110, 132, 147, 153, 158, 161, 168, 178, 188, 200, 207, 216, 224, 228, 230, 231, 234, 237, 239], "emplac": [4, 71, 115, 116], "accessibl": [4, 46, 56, 70, 71, 117, 183, 198, 216, 224, 230, 231, 232, 234], "paur": [4, 71], "identifi": [4, 14, 53, 56, 69, 71, 150, 207, 224, 230, 231], "_immutable_": [4, 71], "_mutable_": [4, 71], "effet": [4, 38, 56, 59, 62, 71, 77, 89, 108, 111, 130, 139, 154, 207, 216, 224, 230, 231, 232, 234], "copi": [4, 54, 69, 71, 99, 113, 114, 151, 216, 231, 232], "explicit": [4, 30, 41, 50, 55, 62, 69, 70, 71, 98, 99, 118, 148, 161, 208, 216, 218, 219, 221, 224, 230, 231, 234, 237], "demand": [4, 14, 27, 58, 60, 64, 69, 71, 74, 98, 99, 109, 145, 199, 207, 208, 216, 224, 231, 239], "sequenc": [4, 11, 71, 224, 231], "d\u00e9taill": [4, 46, 54, 61, 71, 95, 219], "parm": [4, 9, 14, 27, 30, 38, 50, 56, 59, 62, 71, 88, 99, 109, 117, 132, 141, 151, 156, 157, 182, 183, 192, 198, 216, 230, 231, 232, 234], "byt": [4, 71, 198, 220, 228, 232, 235], "frozenset": [4, 11, 71, 153], "dict": [4, 7, 10, 11, 27, 31, 39, 46, 54, 69, 71, 77, 78, 85, 86, 87, 88, 94, 103, 109, 113, 114, 117, 120, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 164, 166, 167, 169, 170, 173, 193, 216, 225, 230, 235], "bytearray": [4, 71], "rendr": [4, 14, 41, 71, 87, 95, 199, 224, 230], "__slots__": [4, 70, 71, 216, 231], "mak": [4, 11, 71, 186, 187], "surcharg": [4, 50, 69, 71, 148, 150, 190, 217, 232, 237], "__getattr__": [4, 71, 180], "__getattribute__": [4, 71, 216], "__setattr__": [4, 71, 216], "enfin": [4, 50, 56, 71, 96, 118, 159, 178, 199, 216, 224], "imbriquent": [4, 71], "uns": [4, 32, 56, 71, 74, 84, 161, 199, 224, 232, 239], "deepcopy": [4, 30, 69, 71, 231], "recop": [4, 50, 71, 168, 208, 216, 231], "uniqu": [4, 7, 14, 32, 50, 51, 53, 54, 61, 69, 70, 71, 82, 84, 94, 99, 118, 134, 146, 153, 158, 184, 186, 187, 188, 189, 193, 204, 208, 209, 216, 219, 224, 228, 230, 231, 232, 235, 237], "copy": [4, 30, 41, 42, 46, 51, 54, 62, 69, 71, 75, 77, 78, 84, 85, 88, 89, 94, 95, 98, 106, 110, 111, 113, 114, 115, 117, 132, 133, 145, 148, 156, 157, 159, 164, 173, 174, 179, 210, 213, 230, 231, 232, 234, 237], "inclus": [4, 10, 38, 42, 50, 58, 59, 69, 71, 72, 95, 103, 178, 198, 219, 224, 230, 231, 232, 239], "appliquent": [4, 56, 69, 71, 173, 218, 224, 231, 239], "sortable_class": [4, 5, 71], "cl": [4, 11, 30, 39, 70, 122, 128, 173, 216, 235], "prononc": [4, 62, 71, 206], "o1": [4, 71, 216], "o2": [4, 71, 216], "macl": [4, 71], "__lt__": [4, 71, 216], "autre_inst": [4, 71], "jenesaisp": [4, 71], "jenesaispas2": [4, 71], "teturn": 4, "io": [4, 19, 22, 30, 39, 40, 46, 51, 67, 71, 82, 87, 158, 161, 165, 166, 167, 169, 180, 220, 232, 235, 239], "disqu": [4, 61, 71, 74, 150, 161, 198, 199, 232, 234], "dur": [4, 14, 50, 51, 54, 56, 61, 70, 71, 73, 85, 108, 118, 161, 198, 199, 227, 231, 232, 234, 237, 239], "ordin": [4, 18, 33, 41, 56, 61, 69, 70, 71, 74, 110, 140, 161, 200, 220, 228, 231, 232, 234, 237], "automatis": [4, 60, 71, 74, 141, 200], "processur": [4, 71], "r\u00e9pet": [4, 38, 50, 62, 64, 69, 71, 74, 96, 100, 108, 113, 114, 115, 116, 182, 183, 188, 197, 198, 199, 200, 208, 216, 230, 232], "processus_quotidien": [4, 71], "nom_fichi": [4, 71, 232], "nb": [4, 9, 10, 12, 13, 30, 32, 46, 50, 51, 52, 71, 79, 84, 89, 91, 95, 100, 104, 105, 106, 113, 114, 146, 151, 195, 216, 224, 230, 234], "open": [4, 19, 40, 46, 50, 51, 54, 64, 69, 71, 161, 169, 182, 198, 199, 205, 219, 220, 228, 232, 237, 239], "recopi": [4, 36, 52, 64, 69, 71, 161, 192, 207, 216, 230, 231, 232, 234], "gigaoctet": [4, 71], "apercevoir": [4, 71, 230], "corrompu": [4, 71], "perdu": [4, 32, 56, 69, 71, 170, 180, 198, 199, 201, 219, 232, 237], "heur": [4, 51, 56, 70, 71, 97, 199, 227, 234], "aur": [4, 38, 42, 50, 51, 56, 61, 62, 69, 71, 87, 95, 111, 115, 116, 132, 146, 187, 198, 199, 216, 219, 231, 232, 234], "voulu": [4, 71, 79, 103], "d\u00e8s": [4, 14, 56, 60, 61, 64, 69, 71, 74, 106, 108, 134, 146, 148, 182, 190, 195, 199, 216, 219, 224, 231, 232], "invent": [4, 61, 71], "stream": [4, 71, 165, 166, 167, 169, 180, 232], "flux": [4, 71, 77, 78], "data_stream": [4, 71], "__file__": [4, 71, 166, 167, 180, 231, 234, 239], "ligne1": [4, 71], "nligne2": [4, 71], "st": [4, 30, 69, 71, 94, 117, 161, 227, 228, 231], "call_stack": [4, 5], "lambert93_to_wgp": [4, 5, 46, 71], "lambert": [4, 46, 71], "lambertn": 4, "coordinat": [4, 10, 231], "given": [4, 134, 186, 187, 230], "93": [4, 46, 54, 71, 77, 93, 114, 118, 162, 180], "ign": 4, "east": [4, 186, 187], "north": [4, 46, 186, 187], "lam93tolatlon": 4, "coordon": [4, 7, 8, 10, 14, 38, 46, 53, 54, 58, 59, 60, 61, 71, 91, 95, 99, 114, 115, 116, 131, 181, 188, 216, 219, 224, 230], "contenu": [4, 38, 41, 56, 69, 70, 71, 73, 150, 169, 198, 199, 209, 216, 224, 230, 231, 232, 234], "exprim": [4, 30, 41, 56, 59, 61, 70, 71, 178, 181, 182, 199, 224], "coniqu": [4, 71], "cartopy": [4, 23, 47, 71], "conformal": [4, 71], "to_float32": [4, 5], "exampl": [5, 11, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 65, 68, 71, 72, 79, 96, 119, 146, 208, 224, 226, 241], "construction_class": [5, 72, 226], "somm": [5, 6, 14, 31, 32, 33, 41, 49, 50, 51, 56, 59, 64, 69, 74, 78, 79, 80, 84, 85, 95, 99, 100, 102, 108, 111, 112, 123, 146, 149, 170, 178, 181, 188, 189, 193, 194, 195, 196, 199, 200, 201, 218, 230, 231, 234, 237, 239], "jeux": [5, 15, 51, 54, 62, 72, 74, 85, 95, 123, 127, 128, 137, 180, 181, 229, 237], "cartograph": [5, 46], "r\u00e9gress": [5, 22, 60, 109, 110, 111, 128, 129, 134, 136, 137, 142, 144], "tool": [5, 72, 163, 166, 170, 178, 179, 182, 183, 198, 199, 204, 205], "decompress_zip": 5, "download_and_unzip": [5, 182, 183, 198, 199, 204, 205], "draw_diagram": [5, 163], "draw_graph_graphviz": [5, 178, 179], "total_siz": [5, 170], "profiling": [5, 180], "profilenod": [5, 11], "add_called_by": [5, 11], "add_calls_to": [5, 11], "as_dict": [5, 11], "filter_node_": [5, 11], "get_root": [5, 11], "to_json": [5, 11, 158], "to_text": [5, 11, 166], "profil": [5, 11, 56, 166, 180, 234], "profile2df": [5, 11], "profile2graph": [5, 11, 166], "run_graphviz": 5, "run_subprocess": 5, "build_diff_imag": [5, 11], "display_lin": [5, 11], "empty_main_loop": [5, 11], "get_pygame_screen_font": [5, 11], "wait_event": [5, 11], "get_local_fold": [5, 11], "make_video": [5, 11], "practic": [5, 12, 58, 72, 95, 184, 186, 187], "rues_par": [5, 72, 95], "bellman": [5, 7, 182], "connected_component": [5, 7], "distance_haversin": [5, 7, 95, 152], "distance_par": [5, 7], "euler_path": [5, 7, 95], "eulerien_extens": [5, 7, 95], "get_dat": [5, 7, 95], "graph_degre": [5, 7], "possible_edg": [5, 7], "tsp_bresenham": [5, 72], "draw_ellips": [5, 8], "draw_lin": [5, 8], "trace_ligne_simpl": [5, 8], "tsp_kohonen": [5, 12, 58, 72], "ajoute_vecteur": [5, 9], "construit_liste_neuron": [5, 9], "construit_vill": [5, 9, 10], "deplace_neuron": [5, 9], "distance_chemin": [5, 9, 92], "distance_euclidienne_carre": [5, 9], "modifie_structur": [5, 9], "moyenne_proximit": [5, 9], "multiplie_vecteur": [5, 9], "poids_attir": [5, 9], "simul": [5, 9, 10, 12, 13, 56, 109, 117, 127, 130, 176, 177, 197, 216, 230, 234, 237], "soustrait_vecteur": [5, 9], "vecteur_norm": [5, 9, 10], "tsp_kruskal": [5, 59, 72], "amelioration_chemin": [5, 10], "arbre_poids_minimal": [5, 10], "circuit_eulerien": [5, 10], "circuit_hamiltonien": [5, 10], "dessin_arete_zon": [5, 10], "distance_euclidian": [5, 10], "echange_posit": [5, 10], "echange_position_ess": [5, 10], "equation_droit": [5, 10], "evaluation_droit": [5, 10], "intersection_segment": [5, 10], "longueur_chemin": [5, 10], "oppose_vecteur": [5, 10], "repartition_zon": [5, 10], "retournement_ess": [5, 10], "supprime_crois": [5, 10], "tsp_kruskal_algorithm": [5, 10, 13], "vecteur_cosinus": [5, 10], "vecteur_point": [5, 10], "vecteur_sinus": [5, 10], "voisinage_zon": [5, 10], "voisinage_zone_xy": [5, 10], "tsp_kohonen_pygam": [5, 72], "pygame_simul": [5, 12, 13], "numpysex": [5, 49, 71, 72], "numpy_matrix2list": [5, 6, 49], "numpy_typ": [5, 6, 71], "faq_python": [5, 71], "stringio": [5, 30, 39, 158, 161, 165, 166, 167, 180, 235], "faq_except": 5, "faq_geo": [5, 71], "faq_numpy": 5, "voic": [6, 17, 38, 41, 49, 50, 51, 54, 61, 69, 103, 108, 135, 153, 168, 178, 207, 216, 224, 230, 231, 232, 234, 237], "np": [6, 19, 42, 49, 50, 55, 58, 61, 92, 95, 113, 114, 129, 130, 150, 167, 174, 175, 178, 211, 213], "shap": [6, 31, 36, 49, 51, 53, 54, 55, 78, 82, 84, 85, 86, 88, 89, 92, 93, 109, 110, 113, 114, 117, 118, 121, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142, 143, 144, 151, 158, 159, 164, 166, 167, 169, 171, 172, 174, 175, 181, 182, 197, 213, 237], "iv": [6, 49], "10x10": [6, 49, 50], "diag": [6, 49, 50, 110, 130, 174, 175], "diagonal": [6, 38, 41, 49, 50, 56, 70, 73, 74, 78, 110, 132, 174, 175, 183, 188], "dd": [6, 49, 85, 86, 207], "transpos": [6, 49, 50, 51, 53, 56, 61, 110, 166, 174, 175, 216, 224], "mx": [6, 49, 111, 112], "diagflat": [6, 49], "bool\u00e9en": [6, 38, 49, 50, 51, 62, 69, 224, 230], "avail": [6, 11], "bit": [6, 77, 122, 176, 177, 231, 232], "thos": 6, "programmeur": [6, 69, 71, 216, 218, 224, 228, 232], "cherchent": [6, 56, 59, 71], "possed": [6, 50, 56, 58, 59, 69, 71, 91, 96, 108, 199, 206, 216, 219, 224, 231, 237], "255": [6, 71, 216], "uint8": [6, 71], "expliqu": [6, 24, 29, 33, 43, 54, 56, 58, 70, 71, 88, 94, 108, 111, 112, 119, 127, 131, 139, 142, 144, 170, 173, 195, 207, 216, 219, 230, 231, 232, 241], "float32": [6, 41, 54, 71, 166], "plut\u00f4t": [6, 14, 34, 50, 51, 54, 56, 58, 60, 61, 62, 64, 69, 70, 71, 74, 84, 85, 99, 100, 106, 108, 113, 114, 118, 121, 129, 135, 138, 144, 146, 154, 165, 170, 173, 204, 205, 206, 208, 216, 219, 220, 224, 230, 231, 232, 235, 237], "float64": [6, 50, 51, 53, 54, 71, 85, 145, 213, 237], "doubl": [6, 31, 56, 61, 70, 71, 95, 99, 100, 103, 106, 118, 208, 224, 231, 232, 239], "prennent": [6, 56, 61, 71, 74, 138, 158, 230], "co\u00fbteux": [6, 56, 59, 62, 71, 153, 165, 166, 184, 216, 231, 232], "gpu": [6, 50, 71], "explaining": [6, 71], "fp64": [6, 71], "perform": [6, 14, 27, 52, 53, 56, 59, 62, 71, 77, 83, 128, 131, 132, 134, 135, 137, 139, 141, 145, 155, 193, 194, 196, 225, 232, 237], "gpus": [6, 71], "edge": [7, 11, 78, 84, 95, 106, 179, 182, 183], "max_it": [7, 9, 10, 12, 13, 85, 115, 116, 132, 134, 135, 136, 137], "allow": [7, 51, 224], "callabl": [7, 10, 11, 230], "init": [7, 65, 67, 95, 115, 116], "verbos": [7, 9, 10, 11, 13, 81, 95, 115, 116, 118, 141, 156], "ford": [7, 95, 182], "noeud": [7, 10, 59, 78, 84, 87, 94, 95, 106, 123, 147, 149, 178, 179, 182, 206, 207], "maximal": [7, 50, 56, 61, 83, 101, 108, 141, 170, 178, 187, 193, 195, 206, 207, 237], "envisag": [7, 38, 56, 59, 95, 108, 118, 183, 187, 224, 232], "liaison": 7, "continu": [7, 19, 30, 50, 56, 58, 69, 74, 81, 82, 84, 85, 87, 88, 91, 94, 95, 106, 109, 113, 114, 115, 116, 119, 121, 122, 144, 148, 157, 172, 182, 195, 197, 199, 207, 208, 209, 213, 214, 219, 220, 222, 239], "ex\u00e9cu": [7, 34, 56, 59, 69, 70, 74, 95, 102, 108, 118, 139, 147, 165, 173, 192, 198, 206, 207, 208, 210, 216, 219, 220, 222, 224, 230, 231, 232, 237], "progres": 7, "arc": [7, 10, 42, 59, 78, 84, 95, 106, 178, 179, 230], "connected": [7, 10], "component": [7, 10, 234], "vertex": [7, 84], "id": [7, 40, 77, 82, 87, 161, 224, 230, 231], "lat1": [7, 152], "lng1": [7, 152], "lat2": [7, 152], "lng2": [7, 152], "haversin": [7, 95], "formul": [7, 50, 53, 74, 79, 109, 112, 119, 132, 168], "euclidien": [7, 9, 61, 178, 179], "approch": [7, 14, 33, 41, 42, 59, 61, 62, 85, 95, 108, 110, 123, 129, 137, 159, 178, 182, 187, 239], "paris": [7, 51, 56, 108, 123], "added_edg": [7, 95], "eulerian": [7, 95], "path": [7, 10, 21, 30, 40, 65, 68, 94, 95, 166, 167, 180, 198, 220, 224, 232, 234], "we": [7, 11, 30, 31, 50, 95, 234], "assum": [7, 11, 145, 199], "every": [7, 11, 51, 65, 186, 187], "has": [7, 11, 31, 65, 100, 110, 118, 134, 137, 186, 187, 216, 224], "even": [7, 223], "degre": [7, 84, 145, 171, 230], "added": [7, 65, 95], "typing": 7, "eul\u00e9rien": [7, 10], "coefficient": [7, 10, 50, 53, 56, 78, 84, 91, 95, 99, 108, 109, 110, 130, 132, 170, 181, 189, 192, 216], "max_segment": [7, 95], "longu": [7, 10, 33, 56, 59, 60, 61, 62, 70, 80, 81, 82, 94, 95, 108, 118, 119, 195, 198, 216, 230, 231, 234, 235], "avanc": [7, 18, 60, 61, 77, 84, 199, 207, 224, 230, 231], "url": [7, 11, 46, 54, 85, 95, 96, 161, 169, 182, 183, 204, 205], "sdpython": [7, 19, 22, 51, 54, 65, 82, 87, 95, 96, 117, 161, 182, 183, 198, 199, 204, 205], "raw": [7, 11, 51, 54, 85, 95, 96, 117, 161, 169, 182, 183, 198, 199, 204, 205], "_dat": [7, 51, 54, 95, 96, 117, 161, 182, 183, 198, 199, 204, 205], "paris_54000": [7, 95], "zip": [7, 11, 24, 35, 46, 51, 80, 84, 95, 103, 109, 111, 112, 117, 128, 158, 166, 182, 183, 198, 199, 204, 205, 230, 233, 234, 237], "dest": [7, 11], "timeout": [7, 11, 67, 237], "keep": [7, 11, 95], "ru": [7, 123], "rightarrow": [7, 51, 59, 61, 95, 99, 102, 103, 110, 159], "cec": [7, 12, 13, 39, 41, 52, 56, 58, 59, 62, 69, 70, 74, 77, 83, 98, 100, 101, 103, 119, 121, 129, 130, 148, 156, 170, 198, 206, 207, 210, 216, 219, 222, 224, 230, 231, 232, 239], "test": [7, 11, 19, 20, 22, 27, 30, 38, 41, 50, 51, 56, 59, 61, 66, 83, 85, 91, 95, 98, 99, 102, 108, 117, 123, 126, 127, 134, 139, 141, 144, 145, 148, 159, 166, 171, 182, 184, 189, 193, 197, 200, 205, 210, 216, 220, 222, 229, 231, 232, 234], "estabishing": 7, "connect": [7, 10, 19, 59, 69, 75, 84, 93, 106, 224, 232], "gard": [7, 18, 51, 53, 54, 56, 69, 79, 83, 88, 91, 93, 95, 96, 106, 111, 112, 113, 114, 118, 119, 133, 145, 160, 161, 179, 220, 234, 237], "sinon": [7, 10, 50, 59, 62, 69, 70, 74, 78, 83, 84, 88, 89, 96, 98, 101, 105, 106, 108, 109, 118, 135, 159, 168, 178, 179, 182, 192, 195, 197, 209, 224, 230, 231, 234, 237, 239], "1000": [7, 9, 10, 30, 31, 40, 46, 50, 51, 53, 54, 56, 69, 77, 78, 85, 88, 93, 99, 105, 108, 110, 111, 112, 113, 114, 121, 122, 129, 130, 132, 153, 154, 159, 162, 163, 165, 170, 181, 188, 192, 198, 199, 206, 207, 224, 230, 231, 232], "construir": [7, 14, 41, 46, 50, 51, 53, 56, 58, 59, 62, 69, 70, 79, 83, 89, 94, 95, 99, 109, 115, 116, 120, 121, 123, 129, 166, 174, 175, 181, 182, 195, 204, 206, 207, 214, 216, 224, 227, 230, 231, 239], "uple": [7, 38, 69, 219, 227, 231, 239], "conten": [7, 50, 51, 58, 69, 70, 74, 119, 161, 174, 175, 185, 188, 200, 216, 219, 224, 230, 231, 232, 239], "v1": [7, 89, 91, 95, 106, 131, 182, 183, 208, 231], "v2": [7, 89, 91, 95, 106, 131, 182, 183, 208, 231], "p1": [7, 9, 10, 11, 30, 69, 132, 148, 150, 179, 183, 188, 232], "p2": [7, 9, 10, 11, 30, 69, 132, 148, 150, 179, 183, 188, 216, 232], "ressembl": [7, 12, 13, 21, 51, 58, 60, 61, 62, 77, 81, 101, 106, 131, 203, 208, 216, 232, 235], "threshold": [7, 132, 135, 166], "vol": [7, 95], "oiseau": [7, 30, 95], "duquel": [7, 132], "symetr": [7, 51, 69, 82, 84, 95, 98, 174, 192], "inclu": [7, 69, 70, 83, 91, 192, 198, 227, 230, 231, 232, 234], "xc": 8, "yc": 8, "dessin": [8, 26, 46, 62, 82, 87, 89, 93, 129, 178, 179, 202, 203, 224], "ellips": 8, "centr": [8, 14, 30, 115, 116, 224, 230], "dem": [8, 95, 100, 116, 142, 149], "axe": [8, 10, 31, 51, 56, 70, 85, 104, 105, 130, 131, 178, 179, 194, 224], "horizontal": [8, 10, 50, 56, 70, 77, 183, 224], "vertical": [8, 10, 50, 56, 70, 224], "\u00e9quat": [8, 10, 41, 85, 109, 110, 231], "x\u00b2": 8, "a\u00b2": 8, "y\u00b2": 8, "b\u00b2": 8, "origin": [8, 50, 65, 82, 129, 227], "tangent": [8, 230], "x0": [8, 42, 50, 133], "y0": [8, 42, 133], "frac": [8, 27, 33, 41, 50, 53, 55, 56, 58, 59, 61, 62, 77, 83, 85, 86, 88, 98, 99, 100, 101, 108, 109, 110, 112, 113, 114, 122, 130, 159, 171, 174, 175, 176, 177, 178, 181, 184, 194, 195, 203, 209, 211, 216], "x_0": [8, 46, 176, 177], "y_0": [8, 46], "bresenham": 8, "x1": [8, 31, 42, 50, 100, 115, 116, 120, 129, 133, 145, 172], "y1": [8, 42, 100, 115, 116, 120, 129, 133, 172], "x2": [8, 31, 50, 61, 100, 111, 112, 115, 116, 120, 129, 130, 145, 155, 172, 174, 175, 192], "y2": [8, 100, 111, 112, 115, 116, 120, 129, 155, 172, 174, 175], "contraint": [8, 56, 58, 59, 70, 77, 94, 95, 161, 163, 189, 190, 216, 230, 237], "pixel": [8, 224], "vill": [9, 10, 14, 51, 58, 59, 61, 93, 95, 182, 183], "neuron": [9, 58, 62, 129], "\u00e9cran": [9, 10, 11, 12, 13, 69, 74, 198, 224, 231, 232], "700": [9, 10, 13, 114], "tir": [9, 10, 37, 50, 51, 53, 56, 58, 61, 84, 85, 86, 88, 93, 103, 109, 113, 114, 115, 116, 138, 147, 154, 159, 170, 176, 177, 184, 185, 186, 187, 195, 197, 202, 203, 210, 234, 237], "carr": [9, 10, 38, 41, 50, 59, 61, 69, 107, 108, 109, 111, 112, 116, 119, 127, 159, 170, 171, 178, 181, 198, 199, 200, 201, 208, 213, 216, 230, 231, 234], "dist_w": 9, "forc": [9, 42, 50, 56, 65, 83, 95, 111, 147, 159, 183, 199, 224, 230, 231, 232, 234], "d\u00e9plac": [9, 10, 38, 59, 88, 101, 111, 168, 207, 209, 224, 232], "voisin": [9, 10, 30, 38, 58, 59, 61, 106, 115, 116, 121, 123, 126, 129, 139, 141, 184, 224], "attir": [9, 58], "incr\u00e9ment": [9, 77, 84, 200, 216], "compte_v": 9, "compte_n": 9, "nb_sel": 9, "solliqu": 9, "scalair": [9, 10, 50, 51], "attract": 9, "ver": [9, 41, 56, 58, 61, 69, 70, 77, 84, 87, 106, 108, 110, 113, 114, 139, 159, 195, 200, 216, 219, 224, 228, 230, 231, 232, 237], "800": [9, 10, 12, 13, 59, 114, 130, 163], "500": [9, 10, 12, 13, 59, 74, 77, 95, 113, 114, 128, 129, 151, 158, 163, 181, 185], "200": [9, 12, 51, 56, 77, 88, 95, 114, 115, 116, 128, 136, 145, 155, 158, 166, 168, 170, 173, 181, 196, 197, 207, 224], "tour": [9, 12, 37, 89, 95, 147, 156, 172, 188, 224, 230, 234], "dist_ratio": [9, 12], "75": [9, 12, 26, 51, 56, 70, 77, 131, 135, 171, 181, 182, 183, 239], "12000": [9, 12], "99": [9, 12, 38, 41, 50, 51, 54, 77, 91, 113, 117, 121, 151, 173, 205, 216, 230], "tirag": [9, 50, 53, 77, 84, 115, 116, 117, 139, 154, 159, 190, 191, 216], "ratio": [9, 12, 31, 56, 70, 77, 85, 91, 113, 114, 142, 143, 159, 181, 207], "soustr": 9, "taille_zon": 10, "am\u00e9lior": [10, 14, 42, 53, 56, 58, 59, 61, 62, 70, 81, 94, 137, 143, 181, 185, 216, 220, 230, 234], "croisent": [10, 42, 58, 89], "quadrillag": [10, 115, 116], "zon": [10, 13, 14, 27, 56, 59, 60, 70, 115, 116, 131, 132, 230, 237], "longueur": [10, 20, 33, 41, 42, 50, 51, 56, 58, 59, 69, 83, 84, 87, 94, 95, 96, 100, 102, 108, 119, 120, 122, 123, 161, 170, 182, 189, 193, 206, 207, 208, 214, 228, 230, 231, 232, 237], "c\u00f4t": [10, 14, 30, 41, 56, 61, 62, 74, 88, 95, 111, 112, 116, 119, 121, 159, 170, 203, 216], "zone_taill": 10, "d\u00e9coup": [10, 14, 27, 62, 69, 83, 88, 94, 139, 160, 165, 182, 224, 230, 231, 232, 239], "imag": [10, 11, 12, 13, 21, 46, 51, 59, 62, 83, 94, 95, 104, 105, 108, 129, 137, 139, 156, 158, 166, 168, 178, 179, 183, 185, 194, 195, 196, 197, 199, 202, 203, 206, 207, 209, 224, 237, 239], "which": [10, 11, 30, 31, 65, 137, 224], "element": [10, 30, 51, 85, 118, 147, 168, 207, 214, 216, 220], "sublist": 10, "neighbor": [10, 30, 62, 121, 129, 138, 139, 140, 141, 142, 143, 144, 180, 181, 186, 187], "nod": [10, 11, 84, 147], "that": [10, 11, 31, 50, 65, 93, 145, 166, 186, 187, 234], "whol": 10, "circuit": [10, 13, 20, 42, 57, 93, 95, 127], "tand": [10, 33, 69, 216, 224, 230, 231, 232, 234], "march": [10, 16, 38, 41, 42, 51, 61, 70, 81, 84, 93, 94, 96, 110, 111, 115, 116, 122, 129, 132, 134, 139, 140, 155, 158, 205, 211, 216, 230, 231, 237], "confondu": [10, 135], "ar\u00eat": [10, 59, 95], "sommet": [10, 58, 59, 178], "sortent": 10, "pres": [10, 38, 50, 54, 61, 108, 116, 121, 129, 136, 142, 143, 155, 157, 163, 175, 194, 198, 205, 207, 216, 219, 224, 230, 231], "euclien": 10, "regard": [10, 51, 56, 61, 69, 77, 79, 84, 85, 87, 95, 108, 121, 131, 132, 136, 137, 138, 140, 142, 165, 167, 170, 173, 189, 193, 198, 200, 205, 224], "neglige": 10, "1e": [10, 41, 78, 108, 155, 164, 195], "05": [10, 27, 36, 39, 41, 50, 51, 56, 69, 77, 85, 88, 130, 145, 151, 154, 161, 207, 227, 239], "echang": [10, 163], "ka": 10, "kb": 10, "inser": [10, 46, 51, 58, 59, 69, 81, 88, 89, 103, 119, 147, 166, 182, 208, 216, 219, 222, 224, 225, 228, 230, 231, 234, 237, 239], "droit": [10, 51, 56, 59, 61, 62, 69, 70, 77, 83, 88, 95, 133, 147, 149, 151, 159, 184, 199, 200, 224, 230, 231, 232, 234], "ax": [10, 27, 31, 46, 50, 51, 54, 77, 78, 84, 85, 86, 88, 89, 91, 92, 93, 95, 104, 105, 113, 114, 115, 116, 117, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 144, 145, 151, 155, 157, 169, 181, 195, 202, 203, 205], "p3": [10, 69, 150, 188, 216], "p4": [10, 117], "vec": [10, 179], "oppos": [10, 30, 50, 56, 78, 146, 156, 230], "ask_zon": 10, "r\u00e9part": [10, 14, 56, 59, 64, 69, 85, 95, 108, 157, 198, 234], "z": [10, 50, 51, 59, 69, 77, 87, 94, 102, 109, 129, 133, 157, 160, 174, 175, 176, 177, 192, 193, 200, 216, 230, 231, 239], "zx": 10, "zy": 10, "absciss": [10, 27, 51, 56, 70, 114, 151, 194, 216], "ordon": [10, 30, 51, 74, 113, 114, 151, 182, 206, 216, 230], "suppl\u00e9mentair": [10, 39, 41, 50, 56, 69, 100, 130, 216, 219, 224, 231, 234, 237], "judici": [10, 56, 70, 232], "length": [10, 13, 158, 239], "simplif": [10, 69, 152, 218], "numb": [10, 11, 13, 30, 31, 32, 36, 39, 40, 50, 52, 121, 132, 134, 135, 163, 164, 181, 224, 225, 230, 237], "cit": [10, 13, 46, 51, 56, 61, 69, 74, 85, 93, 108, 230, 231, 237], "crois": [10, 59, 89, 126, 134, 136, 137, 141, 144, 145, 198, 199, 207], "shortest": 10, "going": 10, "dimensional": [10, 186, 187], "2d": [10, 46, 50, 62, 126, 160], "plan": [10, 19, 46, 51, 56, 58, 59, 178, 179, 188], "into": [10, 11, 65, 68, 186, 187], "squar": [10, 50, 101, 110], "sub": [10, 11, 51, 69, 88, 131, 160, 231, 239], "enlev": [10, 39, 51, 59, 64, 69, 74, 77, 93, 95, 96, 102, 105, 108, 116, 130, 142, 151, 178, 190, 198, 222, 224, 231, 232, 234, 235], "vec1": 10, "vec2": 10, "cosinus": [10, 98], "sinus": 10, "vectoriel": [10, 110, 130], "zmax": 10, "filenam": [11, 51, 165, 166, 167, 180, 199, 204, 205, 220, 222, 232], "unzip": [11, 51], "destin": [11, 41, 56, 118, 237], "verbosity": [11, 13], "decompressed": 11, "display": [11, 12, 13, 30, 51, 82, 83, 87, 94, 95, 108, 129, 137, 139, 156, 165, 166, 168, 178, 179, 183, 185, 194, 195, 196, 197, 202, 203, 206, 207, 209], "progress": [11, 84, 85, 199], "unzipped": 11, "blockdiag": [11, 163], "pillow": 11, "draw": [11, 31, 84, 95, 120, 154, 157], "definit": 11, "valu": [11, 31, 46, 50, 51, 54, 69, 77, 85, 88, 94, 95, 113, 117, 130, 132, 133, 134, 135, 140, 142, 143, 145, 161, 164, 166, 170, 172, 178, 182, 183, 199, 205, 207, 214, 224, 230, 231, 232], "additional": [11, 224], "g": [11, 50, 59, 61, 69, 84, 87, 94, 95, 121, 122, 132, 140, 147, 157, 165, 178, 181, 185, 199, 205, 216, 224, 231, 234, 239], "graphviz_help": [11, 178, 179], "vertic": [11, 78, 95, 106], "engin": [11, 158], "dot": [11, 50, 53, 82, 87, 110, 237], "graphviz": [11, 82, 87], "below": [11, 166], "output": [11, 50, 68, 134, 219], "neato": 11, "gv": 11, "label": [11, 27, 31, 54, 77, 83, 87, 91, 95, 115, 117, 128, 130, 131, 132, 133, 134, 135, 136, 137, 143, 144, 145, 151, 155, 181, 186, 187, 205, 224, 230, 237], "color": [11, 26, 27, 30, 42, 46, 59, 62, 77, 104, 105, 109, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 155, 202, 203], "image_nam": 11, "png": [11, 51, 62, 83, 94, 95, 108, 129, 137, 139, 156, 168, 178, 179, 183, 185, 194, 195, 196, 197, 198, 202, 203, 206, 207, 209, 239], "handler": 11, "approximat": [11, 31], "footprint": 11, "measur": 11, "recursivity": 11, "purpos": [11, 75], "total": [11, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 56, 59, 68, 77, 83, 85, 93, 132, 134, 135, 141, 151, 165, 231, 241], "automatically": 11, "builtin": [11, 165, 166, 167, 180, 216, 224, 230, 234], "container": [11, 134, 153, 193, 207, 231], "subcl": 11, "dequ": [11, 229], "iterat": 11, "over": [11, 50, 56, 176, 177, 197], "somecontainerclass": 11, "othercontainerclass": 11, "get_el": 11, "getsizeof": [11, 170, 231], "func_nam": 11, "nc1": 11, "nc2": 11, "tin": [11, 166], "tall": 11, "spent": 11, "pnod": 11, "called": [11, 186, 187, 224], "time_el": 11, "filter_nod": 11, "sort_key": 11, "sortkey": [11, 165, 166], "render": 11, "result": [11, 30, 31, 93, 145, 148, 166, 220, 237], "interpreted": 11, "then": [11, 30, 65, 68, 186, 187, 234], "loaded": 11, "remov": [11, 67, 69, 77, 84, 160, 231, 232], "built": [11, 165, 166, 167, 180, 220, 230, 234], "small": [11, 22, 56], "row": [11, 30, 31, 38, 50, 51, 54, 82, 87, 113, 114, 128, 131, 134, 144, 145, 147, 149, 163, 169, 170, 182, 183, 186, 187, 189, 198, 199, 207, 224], "static": 11, "info": [11, 65, 68, 81, 82, 87, 158, 180, 232, 237, 239], "filter": 11, "displayed": 11, "overwrit": 11, "held": 11, "boolean": [11, 50, 51, 224], "forget": 11, "root": [11, 50, 87, 147, 163, 175, 207, 224, 230, 237], "as_str": 11, "kwarg": [11, 134], "json": [11, 15, 19, 127, 198, 233], "dump": [11, 39, 161, 232, 235], "fct_width": [11, 166], "60": [11, 30, 46, 50, 51, 54, 55, 62, 77, 85, 108, 128, 130, 138, 139, 145, 151, 164, 169, 199, 205, 224, 239], "fct": [11, 31, 34, 88, 111, 112, 118, 134, 157], "cumul": [11, 50, 51, 83, 117, 154, 165, 166, 167, 180], "rootrem": 11, "as_df": 11, "return_result": 11, "execu": [11, 28, 43, 44, 67, 241], "pstat": [11, 165, 166, 167, 180], "stat": [11, 39, 46, 50, 85, 148, 161, 165, 166, 167, 169, 171, 180, 220, 224, 234, 235, 237], "sort_stat": [11, 165, 166, 167, 180], "posit": [11, 27, 30, 33, 42, 46, 50, 51, 53, 54, 59, 60, 61, 62, 69, 74, 81, 83, 84, 85, 88, 96, 106, 107, 113, 114, 117, 118, 132, 135, 145, 146, 148, 152, 156, 163, 168, 174, 178, 179, 192, 193, 198, 202, 203, 206, 207, 208, 209, 210, 211, 214, 216, 219, 220, 224, 230, 231, 239], "parameter": [11, 141], "cprofil": [11, 165, 166, 167, 180], "hir": [11, 62], "pdf": [11, 62, 167, 232], "clean_text": 11, "logf": [11, 30], "clean": [11, 166], "logging": [11, 221, 237], "onnx_array_ap": 11, "bench_ortmodule_nn_gpu6": 11, "prof": [11, 167], "pd": [11, 140, 142, 169], "pyinstru": [11, 165], "nic": [11, 51], "stack": [11, 50, 51, 94, 221], "sam": [11, 30, 31, 50, 51, 186, 187], "replicat": 11, "produced": 11, "her": [11, 30, 158, 216, 224, 234], "fct0": 11, "sleep": [11, 32, 118, 237], "fct1": 11, "fct2": 11, "fct3": 11, "fct4": 11, "00003": 11, "61117": [], "61114": [], "00001": 11, "81157": [], "11033": [], "11032": [], "70123": [], "00006": [], "20037": [], "20031": [], "50085": 31, "81145": [], "run": [11, 50, 51, 52, 53, 83, 91, 93, 111, 112, 114, 121, 155, 161, 162, 163, 173, 180, 189, 195, 205, 207, 220, 224, 237], "cwd": 11, "pygame_help": 11, "pygam": [11, 12, 13], "screen": [11, 224], "maxw": 11, "seq1": 11, "seq2": 11, "diff": [11, 54, 77, 86, 113, 114, 117, 140, 142, 173, 232, 237], "bar": [11, 51, 61, 62, 130, 131, 154, 157, 178, 184], "prev_bar": 11, "build": [11, 67, 172, 220], "distinct": [11, 34, 51, 56, 62, 78, 84, 109, 111, 112, 146, 154, 173, 207, 225, 231], "surfac": [11, 41, 46, 95, 105, 108, 127], "height": [11, 169, 224], "width": [11, 95, 129, 137, 139, 158, 178, 179, 185, 195, 196, 197, 224, 230], "cannot": [11, 39, 53, 134], "sequencematch": 11, "font_small": 11, "font_half": 11, "associated": [11, 75], "previous": [11, 158, 224], "blu": [11, 30, 54, 77, 104, 105, 116, 131, 155, 169, 224], "deleted": 11, "green": 11, "vert": [11, 30, 54, 56, 59, 62, 70, 87, 109, 110, 159, 160, 181, 195], "yellow": [11, 169], "pictur": 11, "kind": [11, 51, 75, 85, 130, 131, 133, 135, 140, 142, 144, 151], "averag": [11, 56, 163, 164], "suggest": [11, 87, 94], "mov": [11, 224], "defin": [11, 30, 31, 77], "circl": [11, 115, 182], "msg": [11, 232], "event": [11, 56, 70, 75, 224, 237], "loop": [11, 50, 51, 52, 53, 64, 83, 84, 88, 91, 92, 93, 108, 111, 112, 114, 121, 155, 161, 162, 163, 173, 180, 189, 195, 205, 207, 237], "mous": [11, 224], "click": [11, 158], "program": [11, 234], "halt": 11, "anoth": [11, 65, 68], "again": [11, 67, 81], "quit": [11, 224], "flag": [11, 12, 13, 239], "initializ": 11, "set_mod": [11, 12, 13], "thre": [11, 51], "3h": [11, 117], "5h": 11, "leav": [11, 147, 224, 234], "still": 11, "opened": 11, "generat": [11, 30, 134], "warning": [11, 46, 84, 128, 129, 137, 144, 172, 180, 221, 239], "paramet": [11, 85, 86, 224], "working": [11, 51], "seen": 11, "wait": [11, 40, 108, 237], "video_help": 11, "file_or_fold": 11, "temp_video": 11, "outvid": 11, "is_color": 11, "xvid": 11, "opencv": 11, "fram": [11, 224], "per": [11, 30, 40, 50, 51, 52, 53, 56, 83, 91, 93, 108, 111, 112, 114, 121, 155, 161, 162, 163, 173, 180, 189, 195, 199, 205, 207], "fourcc": 11, "videowrit": 11, "rel": [11, 56, 59, 62, 70, 84, 216], "hav": [11, 50, 54, 134, 186, 187, 224], "resiz": [11, 52, 175, 181, 224], "adding": 11, "first_click": [12, 13], "See": [12, 54], "attend": [12, 13, 56, 64, 69, 204, 224, 232, 237, 239], "pression": [12, 13, 107, 224, 237], "clic": [12, 13, 224, 237], "sour": [12, 13, 224, 237], "delay": [12, 13, 54, 108, 117], "lanc": [12, 13, 21, 32, 69, 70, 87, 95, 160, 220, 222, 232, 237], "tsp_kruskal_pygam": 13, "sav": [13, 14], "J": [14, 16, 35, 42, 62, 81, 94, 95, 98, 122, 134, 147, 151, 157, 171, 178, 179, 198, 199], "avou": 14, "allait": 14, "s\u00e9anc": [14, 19, 50, 61, 73, 190, 198, 206], "pr\u00e9dir": [14, 61, 62, 109, 129, 130, 132, 133, 134, 136, 137, 138, 139], "racont": [14, 61], "avion": [14, 56, 74, 199], "avon": [14, 91, 170, 174, 183, 199, 224], "\u00e9tudi": [14, 56, 60, 61, 96, 101, 109, 157, 167, 204, 207, 210], "problem": [14, 15, 19, 20, 27, 33, 35, 41, 42, 46, 50, 58, 59, 69, 72, 74, 81, 83, 84, 85, 87, 91, 92, 101, 102, 106, 107, 108, 110, 113, 114, 117, 119, 121, 129, 131, 145, 155, 157, 158, 161, 168, 178, 179, 181, 182, 186, 187, 188, 192, 198, 200, 204, 205, 206, 209, 210, 216, 219, 220, 222, 224, 227, 228, 231, 232, 235, 239], "int\u00e9ress": [14, 30, 33, 46, 50, 52, 56, 59, 61, 62, 69, 77, 86, 88, 106, 107, 142, 154, 155, 195, 224, 230, 231, 232, 234, 239], "compagn": [14, 56], "r\u00e9pons": [14, 27, 38, 41, 45, 49, 62, 69, 79, 99, 108, 109, 111, 112, 113, 114, 118, 123, 132, 137, 142, 156, 178, 185, 187, 189, 207, 209, 210, 224, 230, 232], "client": [14, 51, 199, 216], "risqu": [14, 51, 56, 70, 137, 178, 179, 219], "assez": [14, 17, 34, 50, 51, 56, 60, 61, 62, 69, 70, 77, 79, 88, 91, 95, 101, 109, 119, 129, 131, 132, 137, 151, 161, 162, 163, 168, 180, 181, 194, 196, 197, 216, 224, 227, 232, 234, 235], "flou": 14, "n\u00e9cessit": [14, 41, 56, 69, 74, 98, 113, 128, 183, 201, 216, 224, 232], "\u00e9clairc": 14, "aiment": [14, 74, 145], "impr\u00e9cis": 14, "quantifi": [14, 122], "Je": [14, 27, 30, 50, 54, 56, 60, 62, 81, 87, 94, 95, 101, 130, 132, 155, 158, 160, 178, 179, 198, 199, 203, 207, 237], "dis": [14, 54, 96, 199], "vrai": [14, 16, 41, 50, 56, 62, 69, 77, 81, 83, 85, 86, 91, 94, 95, 98, 108, 132, 143, 147, 148, 159, 163, 181, 192, 195, 199, 206, 216, 224, 230, 231, 232, 235], "vais": [14, 199], "Nous": [14, 61, 77, 110, 112, 139, 169, 170, 183, 224, 231], "perm": [14, 33, 51, 62, 74, 75, 83, 88, 89, 92, 96, 148, 166, 210, 218], "r\u00eav": 14, "chauffeur": 14, "disparaissent": [14, 144], "mutualis": 14, "cons\u00e9quent": [14, 33, 41, 42, 50, 56, 59, 69, 83, 96, 108, 188, 207, 209, 216, 219, 224, 230, 231, 234, 237, 239], "financi": [14, 70, 108], "accident": [14, 199], "vivon": [14, 199], "\u00e9conom": [14, 19, 56, 108], "quas": [14, 56, 60, 61, 73, 74, 79, 89, 103, 111, 112, 121, 131, 139, 164, 198, 231], "argent": [14, 56, 108], "d\u00e9pens": [14, 108, 185], "estim": [14, 33, 56, 60, 62, 96, 108, 130, 131, 137, 140, 142, 144, 159, 195, 204, 207, 216, 234], "sinistr": 14, "facteur": [14, 56, 144, 171, 207], "\u00e2ge": [14, 51, 77, 227], "marqu": [14, 56, 94, 231, 237], "voitur": [14, 95], "mesur": [14, 32, 38, 39, 45, 48, 56, 61, 62, 77, 83, 88, 93, 108, 118, 132, 138, 157, 162, 165, 166, 167, 170, 173, 184, 189, 196, 199, 206, 207, 224, 234, 237, 239], "person": [14, 30, 40, 56, 61, 64, 69, 74, 75, 78, 85, 108, 117, 199, 225, 227, 231, 234, 235], "bas": [14, 19, 20, 27, 30, 33, 39, 50, 53, 56, 60, 61, 74, 77, 83, 88, 107, 113, 114, 123, 126, 129, 130, 134, 138, 139, 140, 141, 143, 144, 145, 151, 158, 161, 166, 169, 180, 181, 192, 206, 210, 216, 219, 224, 225, 230, 231, 232, 234, 237], "sembl": [14, 38, 54, 56, 70, 77, 78, 84, 114, 190], "manqu": [14, 38, 51, 53, 54, 56, 69, 85, 95, 100, 167, 200, 201, 230, 231], "souv": [14, 165], "long": [14, 31, 32, 34, 46, 51, 53, 56, 59, 61, 69, 70, 83, 87, 89, 93, 94, 95, 100, 129, 144, 147, 155, 157, 161, 166, 170, 173, 183, 189, 198, 204, 207, 224, 231, 232, 237], "organis": [14, 17, 56, 60, 69, 152, 163, 199, 216, 218, 224, 232, 234], "kilom\u00e9trag": 14, "adress": [14, 54, 56, 73, 74, 85, 199, 224, 228, 230], "longitud": [14, 46, 54, 95, 231], "lattitud": 14, "quarti": 14, "anonymis": 14, "dout": [14, 35, 42, 50, 56, 60, 61, 62, 69, 70, 89, 106, 113, 114, 118, 121, 131, 136, 199, 204, 224, 230, 231], "r\u00e9duit": [14, 21, 50, 53, 62, 69, 70, 81, 96, 106, 113, 114, 118, 129, 168, 181, 189, 204, 224, 230], "mont": [14, 35, 56, 61, 108, 123, 234], "souhaiton": [14, 205], "null": [14, 30, 56, 62, 78, 99, 108, 113, 114, 133, 164, 174, 175, 178, 181, 182, 195, 219, 231, 232, 234], "semain": [14, 51, 54, 74, 198, 227], "horizon": [14, 130], "difficil": [14, 56, 61, 62, 69, 74, 115, 116, 128, 140, 181, 199, 201, 222, 230, 231, 237], "fix": [14, 27, 34, 46, 56, 58, 61, 69, 77, 84, 108, 128, 154, 170, 180, 192, 193, 218, 230, 231], "tendanc": [14, 42, 56, 70, 130], "surapprentissag": 14, "possibil": [14, 30, 38, 50, 59, 61, 62, 69, 94, 119, 152, 188, 206, 216, 224, 230, 231, 234], "temporel": [14, 50, 130], "futur": [14, 32, 56, 140, 142, 234], "para\u00eet": [14, 41, 56, 59, 70, 94, 137, 141, 142, 145, 151, 165, 170, 173, 204, 207, 216, 218, 230, 232, 234, 239], "adapt": [14, 41, 46, 51, 58, 91, 161, 173, 206, 214, 216, 237], "vu": [14, 50, 54, 62, 85, 94, 144, 152, 170, 182, 199, 216, 224, 231], "incap": [14, 62], "nouvel": [14, 50, 51, 54, 56, 62, 69, 74, 77, 81, 89, 94, 117, 145, 150, 184, 192, 199, 207, 216, 224, 230, 232, 234, 237], "temorel": 14, "\u00e9volu": [14, 33, 50, 56, 59, 60, 69, 70, 74, 77, 81, 85, 88, 180, 222, 224, 230, 231, 232, 237, 239], "exclur": [14, 119], "taux": [14, 56, 78, 85, 108, 128, 132, 137, 166, 200, 210, 232], "chacun": [14, 18, 27, 30, 38, 41, 50, 51, 56, 58, 80, 119, 122, 137, 154, 169, 184, 199, 204, 216, 224, 230, 231, 234, 237, 239], "pertinent": [14, 27, 56, 59, 62, 77, 132, 135, 140, 141, 150], "aper\u00e7oit": [14, 99, 167, 182, 231], "absolu": [14, 56, 61, 110, 111, 112, 116, 135, 142, 224, 230, 232], "intuit": [14, 42, 54, 61, 62, 81, 106, 147, 210, 216], "r\u00e9gion": [14, 46], "pay": [14, 46, 51, 56, 61, 108, 199], "propic": 14, "improb": [14, 53, 113], "correl": [14, 24, 25, 28, 54, 70, 113, 114, 126, 140, 145, 241], "latitud": [14, 46, 54, 95, 231], "conduir": [14, 199], "nord": 14, "sud": [14, 202, 203], "franc": [14, 46, 51, 53, 54, 56, 60, 61, 70, 85, 96, 108, 121, 163, 199, 204, 205, 228, 231, 232], "regroup": [14, 30, 50, 53, 56, 58, 69, 89, 188, 216, 218, 219, 224, 230, 231, 232, 234, 235], "habit": [14, 30], "dens": 14, "constraindr": 14, "milli": [14, 59, 61, 62, 172], "ascend": 14, "hi\u00e9rarch": 14, "000": [14, 28, 33, 43, 44, 50, 51, 53, 68, 83, 93, 109, 121, 122, 128, 145, 155, 161, 162, 165, 166, 167, 173, 180, 195, 205, 231, 241], "clusteris": [14, 178, 179], "cluster": [14, 115, 116], "num\u00e9ro": [14, 30, 78, 84, 108, 109, 188, 216, 224, 231, 239], "clust": [14, 115, 116], "cat\u00e9goriel": [14, 109], "onehotencod": 14, "dep": [14, 50, 51, 54, 56, 59, 70, 108, 112], "acp": [14, 58, 62, 126, 130, 181], "indiqu": [14, 38, 39, 46, 50, 51, 54, 61, 62, 69, 74, 82, 83, 101, 108, 118, 128, 132, 134, 142, 144, 146, 161, 184, 195, 198, 201, 204, 209, 216, 219, 222, 224, 230, 231, 232, 234, 235, 237], "interpret": [14, 32, 51, 62, 81, 129, 139, 165, 166, 200, 208, 216, 219, 230, 231, 236], "fort": [14, 51, 56, 61, 69, 70, 96, 118, 121, 141, 181, 188, 199, 232], "l\u00e0": [14, 51, 53, 54, 56, 62, 64, 69, 85, 88, 95, 110, 115, 116, 149, 210, 216, 220], "personnalis": [14, 51], "requiert": [14, 16, 51, 64, 77, 113, 114, 224], "sensibl": [14, 56, 61, 139, 141, 142, 207], "group": [14, 56, 62, 87, 94, 96, 108, 129, 148, 157, 160, 169, 186, 187, 198, 224, 230], "individus": 14, "fr\u00e9quenc": [14, 33, 56, 77, 96, 170, 192, 204, 205, 224, 237], "particuli": [14, 46, 50, 51, 56, 59, 62, 69, 77, 84, 88, 94, 131, 139, 142, 145, 146, 161, 167, 173, 199, 204, 207, 216, 219, 220, 222, 224, 225, 230, 231, 232, 237], "personnel": [14, 50, 169], "r\u00e9partit": [15, 51, 56, 61, 70, 115, 116, 127, 135, 139, 142, 143, 154], "bref": [15, 53, 85, 127, 134, 181], "aper\u00e7u": [15, 41, 61, 127], "appr\u00e9hend": [15, 56, 62], "autour": [15, 20, 24, 29, 33, 37, 41, 43, 56, 58, 69, 70, 81, 86, 87, 95, 107, 123, 132, 141, 160, 198, 208, 230, 237, 241], "tsp": [15, 20, 24, 29, 43, 58, 61, 123, 241], "correct": [15, 42, 46, 50, 69, 72, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 132, 134, 142, 172, 216, 219, 230, 231, 232], "xml": [15, 19, 67, 69, 127, 198, 232, 234, 235], "scraping": [15, 127], "pokemon": [15, 127], "r\u00e9vis": 15, "pr\u00e9vis": [15, 234], "td": [15, 19, 20, 61, 86, 97, 158, 169, 174, 206], "\u00e9nonc": [15, 19, 41, 51, 78, 79, 95, 97, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 118, 123, 127, 161, 179, 186, 187, 191, 193, 199, 207], "minut": [15, 19, 20, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 56, 73, 81, 95, 239], "install": [16, 40, 46, 51, 54, 69, 132, 134, 135, 137, 165, 198, 199, 219, 222, 224, 234], "gageur": 16, "archived": 16, "unofficial": 16, "binar": 16, "maintenu": [16, 74, 234], "veux": [16, 199], "comprendr": [16, 51, 56, 60, 61, 69, 81, 85, 108, 129, 147, 166, 170, 189, 198, 200, 207, 210, 216, 219, 222, 224, 230, 231, 232], "travail": [16, 64, 69, 74, 82, 224], "ingrat": 16, "permen": 16, "gohlk": 16, "servic": [16, 56, 67, 199, 216, 235], "shut": 16, "down": [16, 186, 187], "viabl": 16, "ubuntu": [16, 40], "subsystem": 16, "ca": [16, 42, 46, 53, 56, 61, 70, 80, 81, 85, 91, 94, 95, 135, 139, 140, 152, 155, 158, 161, 170, 203, 205, 207, 224, 234], "d\u00e9marr": [16, 82, 237], "serveur": [16, 74, 232, 236], "jupyt": [16, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 74, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 158, 180], "notebookapp": 16, "token": 16, "password": 16, "acced": [16, 38, 69, 74, 77, 86, 99, 161, 192, 207, 216, 219, 224, 225, 231, 232, 235], "navig": [16, 74, 234], "visual": [16, 19, 74], "studio": [16, 19, 74], "remot": 16, "noyau": 16, "04": [16, 50, 51, 62, 77, 85, 95, 132, 138, 139, 145, 169, 173, 239], "googl": [17, 40, 64, 69, 95, 107, 184, 185, 186, 187], "concour": 17, "passion": [17, 199], "d\u00e9veloppeur": [17, 42, 220, 222], "complet": [17, 19, 33, 42, 50, 56, 58, 59, 61, 69, 74, 85, 92, 94, 95, 109, 113, 114, 134, 144, 145, 148, 174, 175, 178, 192, 198, 206, 208, 216, 219, 224, 230, 231, 232], "sujet": [17, 19, 52, 56, 57, 61, 73, 81, 94, 95, 101, 108, 150, 155, 230, 231, 232], "kick": 17, "logic": [17, 184], "personnag": [18, 157], "r\u00e9soud": [18, 30, 61, 109, 110], "tom": [18, 30, 56], "harry": [18, 30, 56], "pott": [18, 30], "fiol": 18, "poison": [18, 169], "vin": [18, 60, 62, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "orti": 18, "recul": [18, 178, 179], "imm\u00e9diat": [18, 21, 56, 69, 111, 219, 222, 232], "gauch": [18, 30, 38, 51, 56, 61, 70, 83, 88, 147, 149, 151, 224, 231, 232, 234], "contenus": [18, 204, 231], "ni": [18, 69, 70, 146, 148, 160, 171, 199, 216, 224, 228, 230, 231, 239], "enjeu": [18, 74, 235], "insurmont": 18, "einstein": [18, 24, 29, 43, 123, 241], "ma\u00eetris": [19, 74, 224, 230], "h\u00e9ritag": [19, 20, 127, 148, 217, 218], "numpy": [19, 20, 22, 24, 27, 29, 31, 39, 41, 43, 48, 51, 52, 66, 69, 72, 73, 77, 78, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 104, 105, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 127, 128, 129, 130, 134, 135, 136, 137, 140, 141, 142, 144, 150, 151, 154, 155, 159, 161, 163, 166, 167, 170, 172, 174, 175, 178, 179, 180, 181, 197, 198, 210, 211, 213, 231, 235, 237, 241], "broadcasting": 19, "html": [19, 27, 50, 54, 69, 82, 87, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 165, 166, 169, 180, 198, 199, 216, 232, 234, 235], "csv": [19, 54, 85, 117, 198, 199, 232, 234], "unitair": [19, 20, 22, 123, 127, 166, 222, 234], "unittest": [19, 172, 234], "git": [19, 63, 66, 232], "pull": [19, 65], "request": [19, 51, 96, 161, 169, 199], "abord": [19, 33, 40, 41, 46, 51, 53, 54, 56, 59, 62, 69, 70, 74, 77, 78, 79, 82, 83, 84, 85, 91, 92, 94, 95, 98, 106, 111, 112, 123, 134, 137, 154, 160, 167, 173, 182, 188, 192, 193, 199, 204, 205, 216, 230, 231, 232, 234, 236, 237, 239], "Elles": [19, 50, 54, 56, 60, 61, 69, 70, 74, 146, 165, 188, 198, 216, 224, 231, 234], "evalu": [19, 59, 62], "ressourc": [19, 74, 220, 232, 237], "doc": [19, 50, 54, 70, 82, 87, 154, 216], "algortihm": 19, "examen": [19, 61, 72, 97, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 210], "2022": [19, 54, 85, 97, 161], "aspect": [19, 56, 88, 129, 153, 188, 224, 237], "r\u00e9uss": [19, 51, 64, 69, 81, 113, 114, 173, 174], "getting": 19, "started": 19, "cheat": [19, 66], "sheet": [19, 51, 66], "minicond": [19, 74], "mamb": 19, "logiciel": [19, 51, 56, 69, 158, 198], "ing\u00e9nier": 19, "produir": [19, 56, 102, 216, 219], "fiabl": [19, 77, 85, 144, 172, 206, 234], "collabor": 19, "demain": [19, 60, 199, 200], "intelligent": [19, 56, 73], "artificiel": [19, 27, 54, 56, 73, 115, 116, 117, 128, 134, 137], "nvidi": 19, "hi": 19, "rappel": [19, 22, 23, 50, 60, 64, 69, 85, 95, 101, 119, 132, 174, 175, 178, 199, 224, 230, 231], "feuill": [19, 23, 30, 69, 84, 147, 206, 232], "rout": [19, 23, 54, 56, 89, 95, 182, 207], "_l": [20, 22], "d\u00e9": [20, 127], "rotat": [20, 127, 144, 205], "transit": [20, 127, 237], "broadcast": [20, 50], "pivot": [20, 54, 88, 127, 142, 143, 199, 212, 215], "gauss": [20, 109, 127, 129, 174, 175, 182, 183, 212, 215], "rechech": 20, "pr\u00e9fix": [20, 87, 94, 199, 212, 215, 219, 231, 232, 234], "variat": [20, 70, 129], "travelling": [20, 61, 92], "kohonen": [20, 57], "1h30": 20, "enonc": [20, 45, 49, 72], "09": [23, 30, 31, 41, 50, 51, 77, 85, 95, 132, 145, 163, 179, 237, 239], "06": [23, 41, 50, 51, 77, 85, 108, 145, 153, 227, 231, 232], "ensa": [23, 61, 95], "08": [23, 30, 31, 41, 50, 51, 54, 77, 85, 95, 145, 153, 161, 163, 179, 198, 237, 239], "\u00e9nigm": [23, 24, 29, 43, 61, 123, 127, 241], "hermion": [23, 30], "03": [23, 51, 54, 77, 78, 85, 92, 110, 117, 145, 151, 155, 159, 169, 175, 195, 239, 241], "12": [23, 27, 30, 35, 36, 41, 42, 46, 50, 51, 52, 53, 54, 56, 61, 62, 69, 77, 79, 81, 83, 84, 85, 86, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 144, 145, 150, 151, 154, 155, 158, 159, 162, 163, 164, 165, 166, 169, 170, 171, 173, 175, 178, 179, 181, 183, 189, 198, 199, 201, 203, 207, 208, 216, 227, 230, 231, 237], "07": [23, 31, 41, 51, 53, 54, 56, 77, 85, 95, 151, 153, 164, 169, 179, 231], "wsl": 23, "receiv": [24, 25, 28, 126, 241], "characteristic": [24, 25, 28, 126, 241], "roc": [22, 24, 25, 28, 62, 126, 137, 241], "groupby": [24, 29, 43, 51, 54, 117, 124, 139, 142, 143, 162, 241], "gil": [24, 29, 43, 127, 236, 241], "convers": [24, 29, 33, 39, 43, 53, 69, 117, 123, 146, 161, 198, 199, 216, 219, 227, 230, 232, 235, 241], "dam": [24, 29, 43, 127, 216, 241], "s\u00e9rialis": [24, 29, 43, 127, 158, 216, 231, 232, 233, 234, 241], "protobuf": [24, 29, 43, 235, 241], "hypercub": [24, 29, 43, 123, 230, 241], "voyag": [24, 29, 43, 123, 182, 241], "auto_examples_python": 24, "auto_examples_jupyt": 24, "gallery": [24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "generated": [24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 154, 224], "go": [26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 53, 161], "full": [21, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 53, 166, 169, 180, 230, 237], "seaborn": [26, 61, 131, 140, 142, 144], "clustermap": 26, "head": [26, 30, 31, 46, 51, 52, 54, 62, 65, 68, 86, 88, 117, 130, 132, 135, 138, 139, 142, 145, 151, 158, 163, 169, 182, 183, 199], "T": [26, 27, 41, 46, 50, 51, 53, 54, 62, 68, 69, 78, 84, 85, 88, 94, 109, 110, 113, 114, 131, 135, 157, 159, 163, 168, 171, 197, 219], "fixed_acidity": [26, 62, 133, 138, 139, 145], "volatile_acidity": [26, 62, 133, 138, 139, 145], "88": [26, 55, 56, 62, 77, 95, 110, 117, 138, 139, 159, 162, 199, 216, 224], "citric_acid": [26, 62, 133, 138, 139, 145], "residual_sugar": [26, 62, 131, 133, 138, 139, 145], "chlorid": [26, 62, 131, 133, 138, 139, 145], "076": [26, 62, 138, 139, 165], "098": [26, 62, 138, 139], "free_sulfur_dioxid": [26, 62, 131, 133, 138, 139, 145], "total_sulfur_dioxid": [26, 62, 131, 133, 138, 139, 145], "67": [26, 50, 54, 56, 62, 70, 77, 100, 108, 117, 138, 139, 230], "density": [26, 62, 131, 133, 138, 139, 145, 167], "9978": [26, 62, 138, 139], "9968": [26, 62, 138, 139], "ph": [26, 62, 131, 133, 138, 139, 145, 161], "51": [26, 50, 51, 54, 62, 95, 110, 128, 138, 139, 141, 143, 145, 155, 160, 205], "sulphat": [26, 62, 133, 138, 139, 145], "68": [26, 50, 54, 62, 77, 108, 111, 137, 138, 139, 171, 216], "alcohol": [26, 62, 133, 138, 139, 145], "corr": [26, 54, 113, 114], "numeric_only": 26, "cent": [26, 54, 64, 69, 216], "cmap": [26, 50, 129, 131], "vlag": 26, "linewidth": [26, 85, 129, 144], "figsiz": [26, 27, 46, 50, 51, 54, 78, 84, 85, 86, 88, 89, 92, 93, 95, 113, 114, 115, 116, 117, 120, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 144, 145, 151, 154, 155, 157, 169, 181, 203, 205], "plt": [26, 27, 31, 42, 46, 50, 51, 53, 54, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 104, 105, 111, 112, 113, 114, 115, 116, 117, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 144, 145, 147, 151, 154, 155, 157, 159, 163, 169, 181, 195, 202, 203, 205], "clustergrid": 26, "0x7f8889b4b520": 26, "running": [26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "script": [26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 82, 87, 234], "505": [26, 145], "plot_correl": [26, 28, 241], "ipynb": [26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 158, 198], "nuag": [27, 58, 109, 113, 114, 128, 129, 134, 181, 205], "Cet": [27, 50, 56, 59, 60, 108, 109, 110, 150, 173, 202, 203, 207, 209, 216, 219, 224, 230, 232, 234], "sklearn": [27, 62, 115, 116, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 180, 181], "metric": [27, 132, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 180], "f1_scor": 27, "precision_recall_curv": [27, 132], "roc_curv": [27, 132, 135, 137], "confusion_matrix": [27, 132, 136, 137], "linear_model": [27, 128, 129, 132, 133, 134, 135, 136, 137, 144, 145], "logisticregress": [27, 128, 129, 132, 133, 134, 135, 136, 137], "model_select": [27, 128, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 181], "train_test_spl": [27, 128, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 181], "make_classif": [27, 62, 134, 180, 181], "pyplot": [27, 31, 42, 46, 50, 51, 53, 54, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 104, 105, 111, 112, 113, 114, 115, 116, 117, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 144, 145, 147, 151, 154, 155, 157, 159, 163, 169, 181, 195, 202, 203, 205], "ext_test_cas": [27, 144, 163, 164], "unit_test_going": [27, 144], "n_sampl": [27, 50], "10000": [27, 50, 52, 85, 88, 93, 99, 100, 108, 114, 120, 154, 159, 163, 173, 180, 181, 206, 207, 225], "100": [27, 30, 31, 32, 33, 36, 39, 40, 50, 51, 53, 54, 56, 66, 77, 78, 83, 84, 85, 86, 87, 88, 91, 95, 99, 100, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 122, 128, 129, 130, 131, 132, 135, 136, 137, 139, 141, 147, 151, 153, 154, 155, 159, 161, 163, 164, 166, 168, 169, 173, 175, 181, 188, 190, 191, 195, 205, 206, 207, 210, 216, 224, 225, 230, 231, 237], "n_featur": [27, 128, 180, 181], "n_class": [27, 180, 181], "n_repeated": 27, "n_redund": [27, 62, 134], "fig": [27, 46, 50, 54, 78, 85, 86, 88, 89, 92, 93, 95, 113, 114, 115, 116, 117, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 144, 145, 151, 155, 157, 169, 181, 195, 202, 203, 205, 217, 235], "figur": [27, 46, 50, 58, 59, 72, 154, 156, 168, 183, 188, 216, 224, 234, 237], "subplot": [27, 46, 50, 54, 77, 78, 84, 85, 86, 88, 89, 92, 93, 95, 104, 105, 113, 114, 115, 116, 117, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 144, 145, 151, 155, 157, 169, 181, 195, 202, 203, 205], "plot": [27, 31, 42, 45, 46, 50, 53, 54, 77, 78, 83, 85, 86, 88, 89, 91, 92, 93, 95, 104, 105, 111, 112, 113, 114, 115, 116, 117, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 144, 145, 147, 151, 155, 157, 159, 163, 164, 173, 178, 179, 181, 195, 205], "line2d": [27, 42, 111, 112], "0x7f88864f7670": [], "train": [27, 74, 136, 141, 142, 143, 146, 166, 207, 220, 230, 231], "x_train": [27, 128, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 181], "x_test": [27, 128, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 181], "y_train": [27, 128, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 181], "y_test": [27, 128, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 181], "apprend": [27, 61, 62, 134, 137, 142], "logreg": 27, "fit": [27, 50, 61, 62, 115, 116, 117, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 181], "environment": [27, 65, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180], "pleas": [27, 85, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 158, 180], "rerun": [27, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180], "trust": [27, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180], "unabl": [27, 40, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180, 220, 239], "rend": [27, 69, 108, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180, 198, 199, 216, 225, 230], "loading": [27, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180], "nbview": [27, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180], "nbsp": [27, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180], "logisticregressionifittedlogisticregress": [27, 129, 132, 133, 134, 135, 136], "pred": [27, 109, 115, 116, 129, 132, 134, 135, 141, 144, 185, 211], "y_pred": 27, "predict": [27, 61, 62, 115, 116, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 180, 181], "confus": [27, 66, 81, 94, 128, 132, 136, 137, 216, 230], "conf": [27, 132, 136], "scind": [27, 69, 224, 232], "scor": [27, 62, 128, 132, 134, 135, 137, 139], "valid": [27, 33, 56, 69, 77, 126, 132, 134, 136, 137, 141, 144, 146, 166, 172, 173, 180, 188, 216, 224, 230, 231, 232, 239], "n\u00e9cessair": [27, 32, 38, 41, 50, 51, 56, 59, 61, 62, 69, 70, 74, 83, 87, 88, 89, 95, 98, 100, 108, 110, 113, 114, 140, 163, 165, 167, 172, 174, 183, 195, 199, 208, 210, 216, 219, 220, 222, 224, 230, 231, 232, 234, 235, 237], "choix": [27, 33, 56, 94, 95, 113, 118, 129, 130, 149, 182, 183, 199, 204, 208, 216, 230, 231, 235], "r\u00e9pondr": [27, 88, 94, 108, 118, 161], "fpr_cl": 27, "tpr_cl": 27, "y_prob": 27, "_": [27, 30, 40, 42, 46, 50, 62, 70, 77, 81, 84, 95, 109, 110, 111, 112, 113, 114, 128, 132, 134, 135, 137, 159, 176, 177, 179, 181, 198, 205, 207, 218, 239], "ravel": [27, 78, 86, 89, 110, 113, 114, 117, 121, 129, 134, 135, 136, 137, 140, 167, 197], "prob_pred": 27, "lw": [27, 50, 117, 120, 133, 144], "navy": 27, "linestyl": [27, 46, 77], "xlim": 27, "ylim": [27, 144], "xlabel": [27, 31, 77, 178, 179, 205], "proport": [27, 78, 132], "mal": [27, 56, 62, 85, 89, 94, 95, 106, 126, 169, 219, 230, 237], "ylabel": [27, 77, 178, 179, 205], "titl": [27, 50, 54, 77, 78, 83, 85, 88, 129, 131, 151, 161, 163, 164, 220, 224, 230, 239], "legend": [27, 51, 54, 77, 83, 85, 91, 115, 117, 128, 130, 131, 132, 133, 134, 135, 137, 144, 145, 155, 157, 181, 205, 230], "loc": [27, 51, 54, 77, 131, 135, 158, 216, 219, 220, 230, 231], "right": [27, 31, 41, 50, 51, 53, 56, 59, 62, 65, 70, 75, 77, 83, 88, 101, 108, 110, 118, 147, 149, 158, 163, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 194, 195, 205, 211, 224, 231], "0x7f8886317430": [], "sugger": [27, 56, 106, 108, 109, 113, 114, 122, 131, 158, 170, 176, 177, 178, 179, 181, 182, 183, 193, 204, 224, 231], "optimal": [27, 42, 56, 58, 59, 74, 92, 93, 110, 111, 112, 118, 123, 129, 141, 182, 183, 187], "pren": [27, 53, 56, 95, 110, 137, 199, 224], "monoton": 27, "vstack": [27, 50, 53, 115, 116, 128, 134, 166], "0x7f88861ca020": [], "reten": [27, 50, 56, 69, 198, 225, 231, 232, 234, 237], "d\u00e9finit": [27, 59, 60, 72, 86, 110, 192, 208, 224, 237, 239], "rat": [27, 61, 132, 169], "fpr": [27, 132, 135], "tpr": [27, 132, 135], "docu": [27, 51, 56, 58, 69, 73, 74, 82, 87, 198, 199, 204, 220, 232, 234, 237], "rapp": 27, "0x7f8886237460": [], "ponder": [27, 51, 110], "y_scor": 27, "precd": 27, "rappd": 27, "seuild": 27, "f1d": 27, "set_titl": [27, 46, 50, 51, 77, 89, 92, 95, 113, 114, 115, 116, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 144, 145, 155], "0x7f8886135690": [], "graphiqu": [27, 42, 51, 56, 58, 61, 66, 74, 85, 95, 133, 140, 202, 204, 205, 216, 224, 230, 234, 236, 240], "compr\u00e9hensibl": [27, 227], "air": [27, 36, 41, 42, 128, 130, 132, 140, 145, 159, 194, 199], "auc": [27, 132, 135], "reli": [27, 38, 42, 56, 58, 59, 61, 62, 69, 73, 78, 84, 89, 94, 95, 117, 132, 178, 179, 183, 216, 224, 230, 234, 237], "s_f": 27, "s_t": [27, 85], "hist": [27, 31, 51, 53, 84, 132, 135, 140, 142, 162, 170, 173, 204, 205], "prob": [27, 109, 130, 132, 134, 135, 137, 145, 173], "bin": [27, 31, 51, 77, 132, 135, 140, 142, 231, 232], "600": [27, 114, 128, 136], "250": [27, 77, 88, 115, 181], "0x7f8885ec2440": [], "pointill": [27, 224], "d\u00e9lim": [27, 194], "ajust": [27, 56, 95], "haut": [27, 38, 39, 53, 56, 88, 113, 119, 151, 192, 207, 219, 224, 230, 239], "bleu": [27, 30, 62, 87, 93, 109, 160, 224], "roug": [27, 30, 54, 56, 60, 61, 62, 70, 77, 87, 93, 109, 131, 132, 133, 134, 135, 139, 160, 195, 207, 224], "Ces": [27, 39, 51, 53, 56, 58, 59, 61, 62, 64, 69, 70, 74, 83, 95, 97, 166, 182, 198, 199, 204, 208, 216, 224, 225, 228, 230, 231, 234, 235, 237, 239], "quantit": [27, 41, 56, 61, 62, 70, 110, 112, 185, 204, 210], "bon": [27, 30, 41, 53, 54, 56, 61, 62, 77, 91, 95, 96, 106, 111, 113, 114, 115, 116, 129, 131, 132, 135, 140, 142, 190, 198, 199, 202, 203, 204, 207, 210, 232], "mauvais": [27, 56, 70, 74, 77, 132, 151, 219, 230], "constitu": [27, 56, 58, 64, 69, 83, 91, 94, 108, 130, 132, 190, 230, 235], "var": [27, 50, 53, 54, 56, 61, 67, 68, 82, 87, 111, 134, 173, 175, 230, 232], "046": [], "plot_roc": [27, 28, 241], "00": [28, 43, 44, 50, 56, 62, 69, 70, 78, 84, 85, 88, 92, 95, 109, 110, 117, 122, 128, 132, 133, 138, 139, 145, 147, 151, 159, 163, 164, 169, 175, 179, 199, 241], "02": [28, 50, 51, 56, 77, 78, 88, 108, 109, 132, 145, 179, 198, 241], "551": [], "auto_exampl": [28, 43, 44], "ml": [28, 52, 241], "mem": [28, 43, 44, 96, 241], "mb": [28, 43, 44, 83, 241], "impl\u00e9mentatin": 30, "reproduis": [30, 237], "cinq": [30, 41, 56, 62, 70, 74, 94, 139, 154, 159, 192, 224, 231, 234], "maison": [30, 61], "couleur": [30, 38, 62, 109, 131, 132, 133, 134, 135, 138, 139, 188, 202, 216, 224], "vit": [30, 35, 41, 56, 74, 83, 87, 88, 89, 106, 121, 128, 168, 172, 189, 193, 194, 199, 224, 234], "national": [30, 51, 169], "boit": 30, "boisson": 30, "fum": 30, "cigar": 30, "animal": [30, 87, 160], "domest": 30, "su\u00e9dois": 30, "chien": 30, "danois": 30, "th\u00e9": 30, "blanch": [30, 62, 195], "propri\u00e9tair": 30, "caf": [30, 56], "pall": 30, "mall": 30, "jaun": [30, 62, 224], "dunhill": 30, "lait": [30, 119], "norv\u00e9gien": 30, "homm": [30, 94, 199], "blend": 30, "chat": 30, "cheval": 30, "mast": [30, 65, 85, 224], "bier": 30, "allemand": 30, "princ": 30, "eau": [30, 186, 187], "poisson": [30, 60, 61], "essais": [30, 42, 58, 115, 116, 237], "papi": [30, 73], "reconstitu": 30, "d\u00e9duct": 30, "puzzl": [30, 60, 123, 130], "configur": [30, 92, 117, 216, 224, 235], "piec": [30, 130, 172, 184, 185, 232], "bord": [30, 38, 111, 115, 116, 158, 224], "embo\u00eet": 30, "ecrir": [30, 51, 98, 99, 102, 103, 106, 108, 109, 110, 111, 112, 115, 116, 157, 172, 174, 175, 178, 179, 182, 190, 194, 198, 200, 201, 204, 232, 237], "combinaison": [30, 51, 56, 59, 94, 129, 174, 175, 230], "notr": [30, 42, 56, 59, 61, 70, 109, 113, 117, 129, 138, 144, 151, 180, 185, 188, 199], "d\u00e9crit": [30, 56, 70, 88, 95, 130, 150, 182, 192, 216, 219, 224, 230, 231, 234, 239], "compatibil": 30, "cat\u00e9gor": [30, 56, 84, 85, 109, 134, 231, 232], "exclus": [30, 56, 67, 216, 231], "compatibl": [30, 40, 237], "incompatibl": 30, "r\u00e9sult": [30, 51, 56, 69, 224, 231], "Avec": [30, 33, 38, 50, 54, 55, 56, 69, 74, 95, 113, 122, 131, 137, 158, 166, 171, 176, 177, 184, 188, 198, 199, 207, 208, 224, 228, 230, 231, 239], "2023": [30, 54, 69, 85, 95, 97, 117, 215], "\u00e9numer": [30, 50, 147, 182, 201], "cont": [30, 89, 117, 199], "break": [30, 40, 69, 84, 94, 95, 104, 105, 108, 113, 155, 158, 161, 163, 169, 172, 185, 197, 208, 209, 210, 216, 224, 232, 234], "constraint": 30, "described": 30, "enigm": 30, "gener": 30, "triplet": [30, 33], "category": [30, 129, 134, 150, 160, 222], "__str__": [30, 69, 146, 147, 148, 149, 188, 189, 207, 210, 219, 232, 234], "__dict__": [30, 39, 69, 216, 224, 232, 234, 235], "al": [30, 96, 199], "260": [30, 128, 145], "combin": [30, 51, 56, 89, 197, 204], "cl1": [30, 230], "cl2": [30, 230], "nothing": 30, "everything": 30, "concaten": [30, 41, 50, 51, 54, 69, 207, 224], "param": [30, 70, 85, 96, 139, 166, 216, 224], "incompatibility": 30, "propert": [30, 69, 224], "compatibility": 30, "combine_cross_set": 30, "set1": 30, "set2": 30, "ruleposit": 30, "overrid": 30, "ruleequivalent": 30, "equivalent": [30, 50, 166], "rulevoisin": 30, "ruleav": 30, "ruleensembl": 30, "categor": [30, 134, 199], "tl": 30, "ttcouleur": 30, "blanc": [30, 38, 69, 87, 131, 132, 133, 134, 135, 139, 160, 216, 231], "ttnationalit": 30, "norvegien": 30, "suedois": 30, "ttboisson": 30, "ttcigar": 30, "bluemast": 30, "ttanimal": 30, "gar": 30, "constituent": [30, 232], "pr\u00e9dicat": 30, "fr": [30, 51, 54, 85, 86, 94, 117, 161, 199, 216], "wikipedi": [30, 50, 54, 61, 95, 161, 166, 171, 199], "wik": [30, 199], "calcul_des_pr": 30, "c3": [30, 51, 52, 81, 189, 216], "a9dicat": 30, "solv": [30, 50, 128, 132, 134, 135, 136, 137, 185], "Soit": [30, 42, 51, 59, 95, 111, 112, 156, 178, 179, 182, 207], "appara\u00eet": [30, 33, 54, 56, 69, 84, 145, 153, 190, 196, 198, 199, 200, 216, 222, 224, 230, 231, 232, 234, 235], "incompatibil": 30, "apparaissent": [30, 58, 61, 69, 93, 131, 205, 207, 224, 230, 231, 232, 234], "describ": [30, 51, 131, 135], "defined": [30, 100, 103, 183, 216, 224, 230, 234], "abov": [30, 75, 220], "count": [30, 51, 69, 77, 84, 131, 135, 142, 143, 149, 154, 162, 170, 197, 205, 229, 231, 239], "hous": [30, 186, 187], "to_datafram": 30, "sr": 30, "eploring": 30, "deepness": 30, "empty": [30, 53, 85, 109, 110, 115, 116, 121, 150, 166, 237], "beginning": 30, "recursively": 30, "must": [30, 50, 65, 118, 134, 224, 234], "solved": 30, "unless": 30, "looking": 30, "possibilit": [30, 119], "much": [30, 186, 187], "research": 30, "could": [30, 50, 85, 93], "represented": 30, "creating": 30, "check": [30, 31, 65], "bringing": 30, "back": [30, 51, 85, 166], "14": [30, 33, 36, 41, 42, 46, 50, 51, 52, 53, 54, 56, 61, 70, 77, 78, 79, 81, 84, 85, 87, 88, 91, 94, 95, 97, 99, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 141, 142, 144, 145, 150, 151, 154, 155, 158, 162, 163, 164, 166, 170, 171, 173, 175, 178, 179, 181, 183, 184, 189, 192, 195, 199, 200, 201, 203, 207, 208, 227, 230, 234, 239], "50": [30, 31, 46, 50, 51, 53, 54, 56, 70, 77, 83, 88, 100, 109, 112, 113, 115, 116, 121, 128, 131, 132, 133, 135, 141, 155, 156, 159, 160, 164, 166, 169, 179, 180, 181, 186, 187, 199, 205, 224, 230], "70": [30, 46, 50, 54, 62, 77, 83, 110, 117, 138, 139, 164, 167], "80": [30, 77, 84, 95, 117, 155, 159, 164, 169, 170, 173, 224, 230, 231], "90": [30, 31, 54, 77, 85, 95, 117, 121, 142, 159, 162, 199], "110": [30, 33, 46, 52, 54, 56, 122, 128, 145, 162, 180], "120": [30, 46, 56, 85, 155, 170, 224], "130": [30, 165, 166], "625": 30, "plot_einstein_riddl": [30, 40, 43, 241], "cam": 31, "longrightarrow": [31, 58, 59, 62, 70], "hold": 31, "let": [31, 50, 94, 122, 186, 187], "evaluat": [31, 176, 177], "equal": [31, 46], "rnd": [31, 53, 78, 85, 113, 114, 117, 120, 130, 141, 144, 154, 159, 163, 181, 216, 225], "100000000": 31, "dtyp": [31, 50, 51, 53, 54, 55, 77, 84, 85, 117, 121, 139, 145, 150, 151, 166, 182, 183, 197, 213], "rnd32": 31, "astyp": [31, 50, 53, 54, 84, 117, 159, 166, 237], "very": 31, "revers": [31, 42, 69, 94, 148, 154, 183, 185, 211, 230, 231], "rnd32b": 31, "delt": [31, 41, 51, 77, 81, 85, 108, 110, 224], "9802321277472288e": [], "9802321610539195e": [], "2304242402727539e": [], "9999999918788068": [], "50077": 31, "49673": 31, "50187": 31, "49916": 31, "50119": 31, "49943": [], "49836": 31, "50147": [], "49716": [], "50214": 31, "49857": [], "49756": 31, "50317": [], "50188": 31, "49884": [], "50337": [], "49914": 31, "49961": 31, "50003": [], "49750": [], "50056": 31, "50276": 31, "50176": 31, "50001": 31, "50075": 31, "49999": 31, "49868": 31, "50352": [], "49880": [], "49879": 31, "49707": 31, "49856": [], "49850": [], "50124": 31, "50088": 31, "49963": 31, "50278": [], "50195": [], "50313": [], "49883": [], "50393": [], "50107": 31, "49871": 31, "50029": [], "50116": [], "49668": [], "49390": [], "50110": 31, "50510": [], "50005": [], "50071": [], "50207": [], "49951": 31, "49666": [], "50059": [], "50284": 31, "50581": [], "50324": [], "50133": 31, "49731": 31, "50013": 31, "50120": 31, "49878": [], "50205": 31, "49682": [], "49720": [], "50260": [], "49902": 31, "50291": 31, "49978": [], "50098": [], "49977": [], "49735": 31, "50371": [], "49706": [], "50101": [], "49782": [], "50027": 31, "50455": [], "50283": [], "50117": [], "50095": [], "49785": [], "49532": [], "49965": 31, "50150": 31, "49705": [], "50134": 31, "50092": [], "49994": [], "50246": 31, "50165": 31, "50243": [], "50456": [], "50405": [], "49801": [], "49937": 31, "49839": 31, "50065": 31, "49929": [], "49875": [], "49554": [], "50208": 31, "49942": [], "49915": 31, "49765": 31, "49990": [], "49886": 31, "49698": 31, "50115": 31, "50015": [], "49656": [], "49861": 31, "50184": [], "49610": [], "49774": [], "50196": 31, "49606": 31, "50354": [], "49826": 31, "50305": [], "49797": [], "49829": [], "50180": [], "49605": 31, "49947": 31, "50237": [], "50040": 31, "49862": 31, "49896": 31, "49676": [], "50158": [], "50451": 31, "49817": [], "49940": 31, "49980": [], "49909": [], "50322": 31, "49885": 31, "49954": [], "50279": [], "50076": [], "49918": [], "50094": 31, "49985": [], "49616": [], "50253": [], "50026": 31, "50173": 31, "49729": 31, "49816": 31, "50011": 31, "49781": 31, "49542": [], "49944": [], "49824": [], "49991": [], "49671": [], "49893": 31, "50261": [], "49810": [], "49684": [], "49898": [], "49881": 31, "50146": [], "50035": [], "50017": 31, "49815": 31, "49796": 31, "49803": 31, "50343": [], "49845": 31, "49870": 31, "50048": [], "49537": [], "49443": [], "50290": [], "49973": 31, "50222": 31, "49920": [], "50019": [], "49520": [], "50128": [], "50303": [], "49899": [], "50087": 31, "49928": [], "49908": [], "49974": 31, "49683": 31, "49607": [], "49833": 31, "49727": [], "50086": [], "49647": [], "50009": 31, "49982": 31, "49764": 31, "49853": 31, "49975": 31, "49917": 31, "50392": [], "50430": 31, "50194": 31, "50139": [], "50000": [99, 135], "50051": 31, "50281": [], "49695": [], "50008": [], "49779": [], "50193": [], "50025": [], "50262": [], "50060": 31, "99791": [], "100138": [], "100114": [], "100440": [], "99760": [], "99533": [], "99561": [], "99705": [], "100612": [], "101023": [], "99740": [], "99732": [], "99813": [], "100107": [], "99312": [], "99914": [], "99675": [], "99818": [], "100257": [], "99272": [], "99995": 31, "100108": [], "99882": 31, "100011": [], "100019": [], "100057": [], "100318": [], "100091": [], "100406": [], "99651": [], "100288": [], "100210": [], "99667": [], "99610": [], "100134": 31, "100173": [], "100154": 31, "99679": [], "100174": [], "100132": [], "100280": 31, "99921": [], "99978": 99, "100285": [], "100330": [], "100305": [], "99718": [], "99993": [], "100090": [], "100699": [], "99807": [], "99671": 31, "99778": [], "100051": [], "100133": 31, "100396": [], "100175": [], "100528": [], "100127": [], "99834": [], "100399": [], "99761": [], "99723": [], "99630": [], "100468": [], "100558": [], "99861": 31, "100125": 31, "99563": [], "100512": [], "99672": [], "99918": [], "100109": 31, "100470": [], "100017": 31, "100303": [], "99945": [], "100050": 31, "99742": 31, "100425": [], "100139": [], "100316": [], "100567": [], "100032": [], "100038": [], "99976": [], "99737": [], "99832": [], "99673": [], "100146": [], "99823": [], "100007": [], "99730": 31, "99669": [], "100643": [], "99795": [], "100245": 31, "100376": 31, "99755": [], "99951": 31, "100040": [], "99709": 31, "99518": [], "99937": [], "99866": 31, "99785": [], "99708": [], "100188": [], "100093": 31, "99800": [], "100607": [], "100634": [], "100610": [], "100106": [], "99973": [], "149222": [], "150154": [], "150329": [], "149474": [], "149686": [], "150695": [], "149865": [], "151164": [], "150298": [], "149818": [], "150215": [], "150134": 31, "150076": [], "149725": [], "150141": [], "149707": [], "150575": [], "150165": [], "149795": [], "149570": [], "149558": [], "149509": [], "149428": [], "149466": [], "149752": [], "149763": 31, "149788": [], "150403": 31, "150086": [], "150237": [], "149597": [], "149687": [], "150483": [], "149517": [], "150119": [], "149779": [], "150002": [], "150259": [], "149913": [], "149566": 31, "150476": [], "150475": [], "150202": 31, "150538": [], "150771": [], "149821": [], "150168": [], "149898": [], "150138": [], "149497": [], "149852": 31, "150582": [], "149877": 31, "149809": 31, "150277": [], "150024": 31, "150015": [], "150222": [], "150461": [], "174520": [], "199630": 31, "199485": [], "200140": [], "199974": [], "199099": [], "199289": [], "199865": [], "199854": [], "200503": [], "199933": [], "200187": [], "199843": [], "199875": [], "199632": [], "199884": [], "199800": [], "199579": [], "199917": [], "200073": [], "200262": [], "199977": [], "199727": [], "199756": [], "200377": [], "199806": 31, "199856": [], "200697": [], "199351": [], "200607": [], "213103": [], "250057": [], "250601": [], "250450": [], "249030": [], "250785": [], "249899": [], "249132": [], "249616": [], "249114": [], "249801": [], "249928": [], "249345": [], "250513": [], "249609": [], "249553": [], "281355": [], "299911": [], "299924": [], "300999": [], "300193": [], "301001": [], "300929": [], "300078": [], "341682": [], "349720": [], "349772": [], "350147": [], "394660": [], "399716": [], "447326": [], "547097": [], "547512": [], "446020": [], "399458": [], "394410": [], "349714": [], "349075": [], "350012": [], "340303": [], "299562": [], "299896": [], "300316": [], "299800": [], "300304": [], "299008": [], "300341": [], "280108": [], "249591": [], "250242": 31, "250026": [], "250164": [], "250006": [], "249900": [], "250059": [], "250387": [], "250167": [], "249087": [], "249859": [], "250045": [], "250787": [], "250122": [], "250453": [], "212554": [], "199326": 31, "199145": [], "200346": [], "199946": [], "199366": [], "200081": [], "200597": [], "199407": [], "201004": [], "199774": [], "200825": [], "198968": [], "200449": [], "199446": [], "200147": [], "200016": [], "199954": [], "199132": [], "200574": [], "199556": [], "200021": [], "200253": [], "201025": [], "199952": 31, "199362": [], "199597": 31, "200175": [], "200526": [], "200445": [], "174765": [], "150470": [], "149691": 31, "150604": [], "150063": [], "149851": [], "150039": [], "150088": [], "150353": 31, "150164": [], "149089": [], "149977": [], "149894": [], "149782": [], "150467": [], "149455": [], "150190": [], "149770": [], "150720": [], "149496": [], "149747": [], "149575": [], "149567": [], "149481": [], "149976": [], "149784": [], "149914": [], "149800": [], "150246": 31, "150252": [], "149473": [], "150297": [], "150839": [], "149193": [], "149823": [], "150325": [], "150120": [], "149908": 31, "150234": [], "149612": [], "149745": 31, "150266": [], "150053": [], "149790": [], "150419": [], "149762": [], "148681": [], "150863": [], "150084": [], "149921": [], "149108": [], "150149": [], "150047": [], "149938": [], "150201": [], "149589": [], "150358": [], "149900": [], "149766": [], "149801": [], "149543": [], "100149": [], "100194": [], "99838": [], "99806": [], "99788": [], "100041": 31, "100211": [], "100049": 31, "99684": 31, "100410": [], "99501": [], "100018": [], "99966": [], "100644": [], "99867": [], "99661": [], "99902": 31, "99645": [], "100185": [], "100006": [], "99985": [], "100213": [], "100300": [], "100004": [], "99873": [], "100126": 31, "100662": [], "99907": [], "99962": [], "99896": [], "100343": [], "99551": [], "99678": [], "99805": [], "100349": [], "100137": [], "100385": [], "99523": [], "100443": [], "99743": [], "100301": 31, "100392": [], "99320": [], "100144": 31, "100192": [], "100272": [], "100484": [], "100070": [], "100325": [], "100215": [], "99762": [], "100005": [], "100069": 31, "99862": [], "99575": [], "100085": [], "100542": [], "100095": 31, "100196": [], "99712": [], "99974": [], "100264": [], "100168": 31, "100054": [], "100180": [], "99981": [], "99822": [], "100161": [], "99860": [], "99972": 31, "99988": [], "100251": 31, "99930": [], "100531": [], "99792": [], "100058": [], "100025": [], "100202": [], "100635": [], "100320": [], "99556": [], "99655": [], "99783": [], "99856": 31, "99617": 31, "99889": [], "100187": 31, "100097": [], "99904": [], "99891": [], "100071": [], "100076": [], "100099": [], "100479": [], "99729": [], "100391": 31, "99586": [], "99923": 31, "50093": 31, "50528": [], "50096": 31, "50183": 31, "50306": [], "50297": [], "49852": 31, "50435": [], "49970": [], "49775": [], "50273": [], "50113": [], "50186": [], "50275": [], "49925": [], "49819": [], "49688": [], "49657": [], "50181": [], "49838": 31, "49923": 31, "49865": 31, "50066": 31, "50355": [], "49971": [], "49669": [], "49863": 31, "50300": 31, "50199": 31, "50325": [], "49984": 31, "49913": 31, "50318": 31, "49728": [], "50486": [], "49855": [], "50235": 31, "50321": 31, "50081": [], "50310": [], "50097": [], "49721": [], "50169": 31, "50314": [], "49895": 31, "50388": 31, "49930": [], "49794": [], "49935": 31, "49932": [], "50148": [], "50012": 31, "50020": [], "49813": 31, "49907": [], "49820": 31, "50361": [], "50334": 31, "50157": 31, "49834": [], "50049": [], "49588": [], "49934": 31, "50227": [], "49874": 31, "50232": [], "49958": [], "50010": 31, "50230": [], "49746": 31, "49725": [], "49939": [], "50171": 31, "50384": [], "50197": [], "50156": 31, "50512": [], "50036": 31, "49841": [], "50137": 31, "49987": [], "49788": [], "50326": 31, "50135": 31, "49887": 31, "49822": 31, "49405": [], "49911": 31, "50569": [], "49921": [], "49498": 31, "50365": [], "50457": [], "50198": [], "49877": [], "50161": [], "50256": [], "49823": 31, "50145": 31, "49897": [], "50006": [], "50525": [], "50345": [], "50342": [], "50070": [11, 31], "50032": [], "49522": [], "49831": [], "49876": 31, "50257": 31, "49637": 31, "50206": [], "50041": 31, "49956": [], "50472": [], "49343": [], "49723": 31, "50213": 31, "49802": 31, "50265": [], "50045": 31, "50448": [], "50357": [], "49983": [], "49747": [], "49585": [], "50033": [], "50164": 31, "50159": 31, "49846": 31, "50062": 31, "49888": 31, "50185": [], "49906": 31, "49737": [], "49654": [], "50212": 31, "50129": [], "50351": [], "50202": 31, "50089": 31, "50014": [], "50272": [], "50155": [], "50103": 31, "50210": [], "49783": [], "50102": [], "50002": [], "49919": 31, "49678": [], "49290": [], "50126": 31, "49733": 31, "50178": 31, "50046": 31, "49760": 31, "50082": 31, "49792": 31, "98023213e": [], "97427166e": [], "96831120e": [], "96831123e": [], "97427170e": [], "98023216e": [], "barcontain": 31, "artist": [31, 239], "finally": [31, 230], "numper": 31, "remain": 31, "100000": [31, 32, 50, 51, 52, 85, 88, 99, 104, 105, 131, 132, 153, 154, 165, 170, 206, 207, 232, 234, 237], "randint": [31, 42, 50, 51, 53, 77, 83, 84, 89, 91, 95, 100, 103, 106, 109, 110, 113, 114, 115, 116, 130, 132, 138, 147, 151, 154, 159, 162, 173, 190, 191, 197, 206, 207, 209, 210, 216, 225, 237], "d32": 31, "d64": 31, "rais": [31, 64, 69, 70, 80, 91, 96, 108, 117, 118, 134, 144, 146, 148, 150, 166, 172, 197, 211, 213, 216, 219, 220, 230, 239], "imagin": [31, 56, 59, 60, 61, 86, 111, 112, 151, 157, 183, 184, 195, 196, 197], "now": [31, 95, 227, 231], "want": [31, 50, 186, 187], "converted": 31, "find_interval": 31, "dx": [31, 92, 93, 115, 116, 165, 170, 179, 194], "ab": [31, 33, 50, 56, 61, 77, 78, 81, 104, 110, 111, 112, 114, 116, 118, 135, 140, 142, 145, 150, 155, 164, 183, 188, 195, 198, 199, 216, 218, 230, 231], "usually": 31, "zeros": [31, 36, 50, 53, 55, 77, 81, 84, 85, 86, 109, 113, 114, 117, 129, 130, 151, 166, 167, 172, 179, 197, 211], "2000": [31, 78, 85, 128, 130, 163, 165, 181, 237, 239], "902177131426653e": [], "9604642110855366e": [], "126": 50, "235": [108, 111, 133], "519": [31, 145], "1008": [53, 117], "90217713e": [], "22053418e": [], "41204658e": [], "60355899e": [], "79507140e": [], "98658381e": [], "17809621e": [], "36960862e": [], "56112103e": [], "07526334e": [], "19441458e": [], "31356582e": [], "43271707e": [], "55186831e": [], "67101955e": [], "79017079e": [], "90932203e": [], "02847327e": [], "14762451e": [], "26677575e": [], "38592699e": [], "50507823e": [], "62422947e": [], "74338071e": [], "86253195e": [], "98168319e": [], "10083443e": [], "21998568e": [], "33913692e": [], "45828816e": [], "57743940e": [], "69659064e": [], "81574188e": [], "93489312e": [], "05404436e": [], "17319560e": [], "29234684e": [], "41149808e": [], "53064932e": [], "64980056e": [], "76895180e": [], "88810304e": [], "00725429e": [], "12640553e": [], "24555677e": [], "36470801e": [], "48385925e": [], "60301049e": [], "72216173e": [], "84131297e": [], "96046421e": [], "something": [31, 198, 204, 239], "ql": 31, "9527662799041536e": [], "estimat": [31, 77], "left": [31, 41, 50, 51, 53, 56, 59, 62, 70, 83, 88, 101, 108, 110, 118, 131, 144, 147, 149, 163, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 194, 195, 211, 224, 230, 231], "x_": [31, 56, 61, 62, 70, 85, 157, 176, 177, 195], "64": [31, 50, 51, 77, 83, 90, 95, 106, 108, 117, 137, 143, 151, 164, 169, 232], "inf_strict": 31, "f1": [31, 68, 132, 161, 232, 237], "f2": [31, 161, 232, 237, 239], "count_event": 31, "di": [31, 69, 84, 85, 86, 216], "1001": [31, 50, 99, 122, 195], "357489651913738e": [], "611": 145, "979": [], "190": [31, 108], "1310255931817892e": [], "810": [54, 117], "290": 31, "7263022211722046e": [], "878": [], "996": [31, 53, 112, 128], "390": 31, "32157884916262e": [], "911": 50, "1003": [31, 117, 118], "490": 31, "9168554771530353e": [], "919": [50, 165], "978": [31, 54], "590": 31, "5121321051434506e": [], "947": 50, "690": [31, 142], "107408733133866e": [], "958": 31, "1013": [31, 99], "790": 31, "7026853611242814e": [], "990": 31, "1026": 31, "890": [31, 117, 231], "297961989114697e": [], "944": 145, "980": [31, 237], "893238617105112e": [], "956": 31, "989": 31, "952766e": [], "019685": [], "1016": 145, "190553e": [], "051417": [], "953": [50, 167], "785830e": [], "058223": [], "381107e": [], "063508": [], "992": 31, "976383e": [], "085914": [], "logx": [31, 88], "inf_equal": 31, "df2": [31, 54, 117, 128, 151, 158], "1040": [], "1025": 31, "1015": 31, "940": 31, "966": [31, 117, 237], "983": [31, 50], "1024": [99, 147], "985": [31, 35], "999": [31, 41, 168, 230], "971": [50, 145], "997": [50, 53, 112, 118], "sup_strict": 31, "df3": [31, 128, 158], "614": [], "1004": 31, "995": [31, 53], "870": [], "905": 165, "908": 165, "977": 50, "930": 31, "994": 31, "954": 31, "984": [31, 77], "1021": [], "972": 31, "038105": [], "032417": [], "1018": 31, "054601": [], "069601": [], "074540": [], "1033": 145, "sup_equal": 31, "df4": [31, 128], "1011": [31, 231], "982": 31, "981": 31, "998": [31, 112], "1029": [], "1002": [31, 54, 105], "988": 128, "inf_strict_neg": 31, "dfn": 31, "991": [31, 50], "975": [31, 133, 145, 167], "1010": [54, 145], "1019": [], "957": 31, "As": [31, 65, 186, 187], "soon": 31, "rounded": 31, "inequality": 31, "howev": 31, "handl": 31, "templat": [31, 199], "inequalit": 31, "easi": 31, "articl": [21, 31, 50, 56, 58, 70, 73, 85, 94, 95, 176, 177, 198, 202, 203, 204, 205, 216, 237], "according": 31, "processing": [31, 236], "cost": [31, 118, 211], "versus": [31, 54], "plot_float_and_double_rouding": [31, 40, 43, 241], "global": [32, 33, 36, 38, 39, 40, 56, 66, 69, 100, 121, 144, 166, 216, 224, 236], "verrou": [32, 237], "auquel": [32, 56, 69, 153, 154, 166, 168, 224, 231, 234], "proteg": [32, 69, 70, 219, 237], "contr": [32, 56, 62, 86, 95, 161, 219, 237], "acces": [32, 33, 39, 40, 54, 69, 70, 157, 193, 207, 216, 220, 224, 230, 232, 234, 237], "concurrentiel": [32, 237], "timeit": [32, 36, 39, 40, 50, 51, 52, 53, 83, 91, 93, 108, 111, 112, 114, 121, 155, 157, 161, 162, 163, 166, 173, 180, 189, 195, 205, 206, 207, 225], "concurrent": 32, "threadpoolexecutor": [32, 237], "create_list": 32, "5017731000007188": 32, "run2": 32, "max_worker": [32, 237], "executor": [32, 237], "0972130999998626": 32, "synchronis": [32, 227, 236], "termin": [32, 59, 69, 83, 93, 106, 170, 192, 197, 198, 220, 224, 230, 231, 232, 237], "mettr": [32, 50, 56, 69, 111, 113, 114, 134, 139, 154, 157, 183, 224, 230, 239], "jour": [32, 56, 58, 59, 70, 74, 78, 85, 86, 87, 96, 106, 111, 112, 117, 118, 128, 160, 182, 183, 184, 197, 198, 199, 216, 224, 227, 231, 232, 234, 239], "impos": [32, 40, 42, 51, 56, 161, 216, 224, 231, 235], "mis": [32, 41, 56, 62, 69, 74, 78, 83, 106, 111, 132, 144, 182, 197, 201, 216, 224, 231, 232, 234], "lieu": [32, 33, 41, 51, 56, 59, 70, 79, 84, 121, 128, 148, 188, 207, 216, 224, 230, 234, 237, 239], "va": [32, 42, 46, 50, 56, 61, 62, 69, 74, 89, 95, 96, 98, 108, 110, 111, 113, 140, 144, 156, 182, 185, 189, 198, 199, 206, 209, 216, 222, 224, 230, 231, 232, 234, 237], "009": [32, 165], "9519763000007515": 32, "run3": 32, "001": [32, 33, 41, 85, 120, 122, 165, 166, 180, 188, 237], "3304714000005333": 32, "signific": 32, "887": [32, 50], "plot_gil_exampl": [32, 40, 43, 241], "r\u00e9\u00e9crir": [33, 51, 64, 74, 118, 146, 190, 192, 216, 220], "u": [33, 39, 59, 65, 77, 87, 94, 96, 130, 150, 160, 168, 199, 205, 235], "compteur": [33, 159], "u_st": 33, "u_non_recurs": 33, "u0": 33, "u1": [33, 150], "u2": [33, 150], "\u00e8me": [33, 231], "arr\u00eat": [33, 56, 69, 112, 118, 129, 154, 159, 165, 192, 198, 209, 219, 222, 230, 237], "compare_l": 33, "q": [33, 56, 58, 67, 84, 87, 94, 106, 117, 176, 177, 184, 185, 199, 211], "g\u00e9ometr": [33, 59, 99, 100, 155], "sum_": [33, 50, 51, 53, 55, 56, 58, 59, 61, 62, 70, 77, 83, 98, 99, 100, 109, 110, 111, 112, 113, 114, 132, 159, 171, 176, 177, 178, 179, 181, 182, 183, 184, 185, 194, 195, 200, 201], "infty": [33, 58, 59, 99, 149, 182], "convergent": [33, 50, 58, 59, 89, 101, 128, 129], "infin": [33, 61, 73, 84, 88, 108, 130, 182, 208, 220, 230, 239], "outr": [33, 56, 69, 199, 224], "suite_geometrique_1": 33, "1075": 33, "informaticien": [33, 56, 218], "exp\u00e9riment": 33, "suite_geometrique_2": 33, "yold": 33, "reper": [33, 46, 59, 96, 118, 130, 202, 203, 231], "17": [33, 35, 41, 42, 46, 50, 51, 53, 54, 77, 82, 84, 85, 88, 91, 93, 94, 95, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 144, 145, 151, 154, 155, 158, 164, 166, 167, 170, 171, 175, 178, 179, 181, 182, 188, 195, 198, 201, 203, 207, 208, 216, 220, 224, 227, 230, 231, 237], "mainten": [33, 39, 41, 42, 48, 51, 59, 61, 62, 74, 81, 85, 87, 91, 93, 95, 110, 122, 131, 134, 135, 140, 142, 146, 150, 156, 163, 166, 178, 179, 184, 188, 190, 192, 195, 199, 200, 208, 214, 216, 224, 231, 237], "agit": [33, 50, 51, 56, 58, 59, 61, 62, 69, 70, 85, 89, 95, 106, 144, 161, 166, 200, 201, 202, 203, 204, 207, 216, 224, 230, 231, 232, 235, 237], "savoir": [33, 38, 42, 50, 51, 54, 56, 61, 62, 69, 73, 85, 90, 97, 101, 106, 108, 145, 146, 155, 166, 172, 180, 192, 200, 204, 205, 207, 209, 216, 219, 224, 230, 231, 232, 237], "approxim": [33, 41, 54, 62, 69, 70, 85, 95, 109, 110, 112, 121, 194, 195], "devient": [33, 46, 56, 59, 60, 62, 77, 83, 100, 122, 170, 181, 207, 216, 224, 230, 231, 234, 235, 237, 239], "nul": [33, 53, 56, 62, 69, 78, 84, 91, 100, 113, 165, 170, 181, 197, 207, 219, 231], "1055": [33, 145], "toutefois": [33, 56, 58, 59, 62, 170, 207, 216, 220, 224, 230, 231], "indispens": [33, 69, 172, 188, 199, 206, 216, 222, 230], "loin": [33, 46, 61, 62, 94, 95, 129, 141, 166, 216, 230, 231, 232], "remarqu": [33, 50, 56, 62, 69, 84, 94, 95, 98, 106, 108, 110, 113, 114, 156, 216, 230, 231, 235, 237], "addition": [33, 56, 100, 108, 151, 230], "s_n": 33, "croiss": [33, 51, 53, 56, 59, 69, 83, 87, 95, 108, 110, 111, 112, 144, 154, 155, 157, 182, 183, 192, 210, 216, 230, 231], "u_i": [33, 195], "u_n": [33, 101, 216], "d\u00e9croiss": [33, 41, 56, 58, 59, 69, 77, 87, 88, 110, 192, 195, 231], "chercheur": [33, 74], "success": [33, 50, 58, 62, 87, 195, 216, 224, 230, 231, 234], "01100111": 33, "011": [33, 122, 165, 167], "111": [33, 46, 53, 54, 95], "hyper_cube_l": 33, "hyper_cube_dico": 33, "ind": [33, 46, 121, 134, 166, 199], "cle": [33, 69, 87, 96, 170, 192, 193], "hyper_cub": 33, "Sur": [33, 56, 59, 70, 91, 98, 129, 137], "port": [33, 41, 51, 54, 62, 69, 73, 192, 198, 216, 234, 237], "prior": [33, 34, 56, 59, 62, 69, 88, 91, 109, 129, 140, 170, 195, 216, 234], "occurrence2": 33, "uplet": [33, 56], "recevr": [33, 58, 216], "curios": [33, 60], "occurrence3": 33, "hyper_cube_liste2": 33, "m2": [33, 41, 80, 81, 87, 91, 106, 111, 112, 117, 210, 211, 216, 224, 237], "occurrence4": 33, "hyper_cube_liste3": 33, "occurrence5": 33, "013": [33, 37, 165, 167], "plot_hypercub": [33, 40, 43, 241], "esthet": 34, "twoarg": 34, "onearg": 34, "retard": [34, 56, 74, 234], "fcts_a": 34, "fcts_b": 34, "partagent": [34, 51, 224], "004": [34, 36, 165], "plot_lambda_funct": [34, 40, 43, 241], "itertool": [35, 92, 93, 189], "op": [35, 231], "parenthes": [35, 69, 192, 198, 201, 216, 219, 230, 231, 239], "pn": 35, "po": 35, "eval": [35, 52], "zerodivisionerror": [35, 69, 219], "plot_matador": [35, 40, 43, 241], "13": [36, 41, 42, 43, 46, 50, 51, 52, 53, 54, 56, 61, 70, 71, 77, 79, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 99, 100, 101, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 128, 129, 130, 132, 133, 135, 136, 137, 139, 141, 144, 145, 148, 150, 151, 154, 155, 158, 163, 164, 165, 166, 169, 170, 173, 175, 178, 179, 181, 183, 195, 199, 201, 205, 207, 208, 216, 220, 224, 227, 230, 237], "23": [36, 40, 50, 51, 53, 54, 56, 70, 77, 84, 85, 88, 93, 95, 97, 100, 106, 108, 109, 111, 115, 116, 117, 118, 121, 122, 128, 130, 132, 133, 134, 135, 136, 137, 141, 144, 145, 158, 166, 167, 170, 178, 179, 184, 188, 192, 195, 198, 205, 207, 208, 227, 230, 231, 237], "41": [36, 46, 50, 51, 54, 84, 121, 128, 131, 144, 166, 169, 178, 179, 192, 205, 216, 230, 231], "42": [36, 46, 50, 51, 54, 56, 62, 70, 85, 95, 106, 128, 133, 134, 136, 137, 145, 166, 178, 179, 192, 205, 216, 231], "44": [36, 46, 50, 51, 54, 56, 70, 95, 110, 114, 144, 160, 166, 178, 179, 180, 205, 216], "1400001060101204e": 36, "9200000173877925e": 36, "n\u00e9anmoin": [36, 56, 58, 60, 62, 69, 74, 91, 95, 121, 137, 145, 146, 165, 190, 207, 216, 219, 224, 225, 230, 231, 234, 235], "temporair": [36, 56, 70, 231], "plot_numpy_trick": [36, 40, 43, 241], "nan": [37, 50, 51, 85, 113, 114, 117, 132, 140, 142, 161, 164, 199], "disparu": 37, "comport": [37, 56, 62, 69, 77, 85, 111, 182, 216, 224, 231, 232], "attendu": [37, 42, 50, 62, 64, 69, 106, 108, 118, 121, 142, 144, 154, 163, 165, 230, 237], "corrig": [37, 41, 42, 58, 59, 61, 64, 69, 85, 100, 103, 117, 170, 200, 201, 220, 222], "dropn": 37, "plot_pandas_groupby": [37, 40, 43, 241], "quar": 38, "pion": 38, "vingt": [38, 56], "noir": [38, 58, 59, 87, 160, 195, 207, 216, 224], "39": [38, 46, 50, 51, 53, 54, 77, 81, 86, 87, 91, 94, 95, 96, 99, 100, 101, 102, 103, 106, 108, 109, 114, 115, 116, 120, 121, 122, 128, 139, 140, 142, 144, 146, 152, 157, 158, 160, 161, 165, 166, 167, 169, 170, 171, 178, 179, 180, 181, 182, 183, 192, 193, 198, 199, 204, 205, 207, 208, 211, 214], "dami": 38, "enti": [38, 50, 51, 53, 56, 69, 74, 77, 79, 90, 100, 146, 148, 154, 168, 176, 177, 185, 188, 201, 208, 216, 219, 224, 230, 231, 232, 235, 237], "vitess": [38, 45, 48, 56, 58, 59, 60, 188, 235], "utilisent": [38, 50, 53, 56, 61, 69, 188, 193, 218, 231, 237], "pratiqu": [38, 50, 56, 61, 74, 77, 94, 137, 207, 208, 222, 224, 225, 227, 230, 231, 233, 239], "voisinag": [38, 58, 115, 116], "quatr": [38, 41, 51, 56, 59, 69, 70, 85, 96, 100, 107, 156, 157, 166, 172, 192, 199, 200, 216, 219, 230, 231, 232, 236, 237, 239], "coin": [38, 224], "libr": [38, 117], "contiennent": [38, 46, 51, 56, 59, 70, 138, 169, 178, 207, 216, 225, 230, 231, 232, 234, 235, 237, 239], "sait": [38, 41, 51, 61, 74, 83, 88, 94, 95, 108, 113, 114, 115, 116, 117, 142, 146, 148, 150, 155, 166, 182, 195, 198, 201, 208, 219, 220, 230, 231, 237], "revu": [38, 58, 83, 185, 209, 236], "occup": [38, 61, 106, 184, 224, 228, 232, 237], "assembl": [38, 56, 70, 74, 130, 173, 208, 232], "num\u00e9rot": [38, 84, 156, 184, 203, 207], "Quels": [38, 50, 182], "d\u00e9sir": [38, 41, 81, 190, 199, 216, 219, 224, 230, 231, 232, 234], "dix": [38, 56, 74, 77, 118, 200, 204, 210, 216, 230, 231], "vid": [38, 51, 52, 69, 83, 89, 106, 107, 111, 184, 192, 196, 197, 208, 216, 224, 230, 231, 232, 234], "adversair": 38, "pion_prendr": 38, "advers": 38, "\u00e9chou": [38, 81, 112, 134, 216, 219, 234], "pion_prendre_dict": 38, "damier_dict": 38, "laiss": [38, 42, 56, 61, 69, 81, 94, 95, 108, 113, 114, 149, 199, 203, 207, 224, 231], "restent": [38, 54, 216], "\u00e9chiqui": [38, 50], "pion_prendre_list": 38, "damier_list": 38, "extend": [38, 69, 95, 102, 106, 120, 207, 231, 232], "hor": [38, 101, 115, 116, 155, 188, 216], "devr": [38, 42, 50, 56, 61, 62, 74, 87, 95, 101, 128, 155, 205, 207, 210, 216, 228, 230, 231, 237], "pion_prendre_bord": 38, "accept": [38, 51, 56, 69, 110, 142, 181, 190, 216, 224, 230, 231, 232, 239], "n\u00e9gat": [38, 41, 62, 83, 100, 108, 117, 135, 142, 144, 178, 179, 219, 229, 230, 231, 239], "005": [38, 166, 167], "plot_partie_dam": [38, 40, 43, 241], "explor": [39, 42, 58, 95, 106, 155, 216, 232], "notemm": 39, "api": [39, 46, 62, 134, 222, 235, 237], "bytesio": [39, 40, 235], "ujson": [39, 161], "cloudpickl": [39, 161], "record": [39, 51, 56, 158, 222, 235], "nom": [21, 39, 46, 50, 51, 54, 56, 58, 69, 70, 74, 83, 95, 98, 132, 136, 145, 152, 157, 158, 161, 169, 172, 192, 198, 199, 205, 208, 216, 219, 224, 225, 230, 231, 235, 237, 239], "xavi": [39, 51, 73, 75, 94, 208, 230, 235, 239], "pr\u00e9nom": [39, 51, 69, 101, 157, 193, 230, 232, 235], "age": [39, 227, 235], "buff": [39, 40, 158, 232, 235], "seq": [39, 198, 199, 235], "getvalu": [39, 40, 158, 161, 165, 166, 167, 180, 235], "pr": [39, 62, 165, 166, 167, 180, 199, 235], "u00e9nom": [39, 235], "load": [39, 51, 158, 232, 235], "ndarray": [39, 166, 167, 180, 235], "serializ": [39, 235], "att": [39, 235], "jsonencod": [39, 235], "myencod": [39, 235], "classnam": [39, 235], "__class__": [39, 69, 216, 219, 235], "__name__": [39, 64, 69, 88, 144, 198, 199, 216, 224, 231, 234, 235], "jsondecod": [39, 235], "mydecod": [39, 235], "decod": [39, 96, 122, 161, 193, 199, 205, 220, 228, 231, 235], "dec": [39, 56, 95, 148, 235], "isinst": [39, 87, 134, 146, 148, 166, 167, 180, 208, 219, 230, 235], "obj": [39, 69, 216, 219, 220, 224, 230, 231, 235], "__main__": [39, 64, 69, 146, 188, 198, 199, 216, 220, 224, 230, 231, 234], "0x7f87ddae8340": 39, "altern": [39, 50, 56, 132, 134, 135, 154, 224, 232, 235], "002849399999831803": 39, "00033690000054775737": 39, "0005795999986730749": 39, "0003201000017725164": 39, "creation": [39, 224], "570000080799218e": 39, "lu": [39, 50, 69, 94, 205, 228, 232], "x80": [39, 235], "x04": [39, 235], "x95f": [39, 235], "x00": [39, 235], "x94": [39, 235], "x8c": [39, 235], "x07record": [39, 235], "x03nom": [39, 235], "x06xavi": [39, 235], "x07pr": [39, 235], "xc3": [39, 235], "xa9nom": [39, 235], "x94h": [39, 235], "x05": [39, 235], "x08langag": [39, 235], "x03c": [39, 235], "x03ag": [39, 235], "x94k": [39, 235], "x06python": [39, 235], "x0bk": [39, 235], "x14ueu": [39, 235], "x95": 39, "x08__main__": 39, "x01a": 39, "x93": 39, "x81": 39, "x03att": 39, "x01r": 39, "x94sb": 39, "0x7f8889b4b940": 39, "duppliqu": 39, "surtout": [39, 56, 61, 62, 73, 87, 88, 106, 154, 170, 216, 230, 231], "voluminu": 39, "att1": [39, 69, 235], "att2": [39, 69, 235], "x01b": 39, "x04att1": 39, "x04att2": 39, "x06ub": 39, "eviton": 39, "__getstate__": [39, 232, 235], "__setstate__": [39, 232, 235], "setattr": [39, 235], "0x7f88877b2dd0": 39, "000416300001234049": 39, "00032219999957305845": 39, "habituel": 39, "niveau": [39, 46, 53, 56, 77, 84, 88, 129, 166, 207, 216, 224, 225, 230, 232, 237], "comparaison": [39, 53, 62, 69, 91, 131, 137, 144, 151, 161, 208, 216, 227, 231], "pr\u00e9visibl": 39, "acc\u00e9ler": [39, 40, 41, 51, 59, 61, 62, 89, 165, 166, 180, 181, 193, 214, 231, 236], "protocol": [39, 234], "highest_protocol": 39, "0003802999999606982": 39, "tent": [39, 56, 87, 112, 137, 150, 160, 237], "myfunc": 39, "x01x": 39, "x01f": 39, "x06myfunc": 39, "x94u": 39, "0x7f8885f8b130": 39, "contourn": [39, 56, 95, 96, 139, 224, 235], "obstacl": [39, 56, 96, 129, 235], "x02": 39, "x17cloudpickl": 39, "x0e_make_funct": 39, "x03": 39, "r_builtin_typ": 39, "x08codetyp": 39, "x85": 39, "x94r": 39, "x01k": 39, "x00k": 39, "x02kcc": 39, "x08": 39, "x00d": 39, "x01": 39, "x17": [39, 145], "x94nk": 39, "x86": 39, "x8co": 39, "xadupr": [39, 46, 132, 134, 135, 137, 140, 142, 165, 180, 198, 220], "_doc": [39, 65], "prog": [39, 43, 241], "plot_serialisation_exampl": [39, 40, 43, 241], "x94m": 39, "x97": 39, "x01c": 39, "x0b__package__": 39, "x08__name__": 39, "x94unnnt": 39, "x1ccloudpickl": 39, "cloudpickle_fast": 39, "x12_function_setstat": 39, "x19": [39, 145], "x16h": 39, "x0f": 39, "x0c__qualname__": 39, "x0f__annotations__": 39, "x0e__kwdefaults__": 39, "x94n": 39, "x0c__defaults__": 39, "n__module__": 39, "x07__doc__": 39, "x0b__closure__": 39, "x17_cloudpickle_submodul": 39, "x0b__globals__": 39, "x86r0u": 39, "0x7f8885f895a0": 39, "typeerror": [39, 50, 99, 100, 102, 103, 108, 146, 148, 166, 216, 219, 230, 231], "0x7f8885f8a560": 39, "fonctionnent": [39, 54, 61, 64, 69, 74, 123, 127, 198, 219, 224], "ens": [39, 41, 110, 148, 163, 170, 173, 216, 225, 230], "x953": 39, "x02it": 39, "x08builtin": 39, "x04it": 39, "x02e": 39, "x00bu": 39, "list_iterator": 39, "0x7f8889b4b7c0": 39, "Ils": [39, 56, 62, 70, 74, 123, 158, 161, 172, 199, 207, 216, 219, 222, 225, 228, 231, 232, 237], "ensgen": 39, "generator": [39, 69, 99, 147], "030": [39, 165], "lectur": [40, 50, 52, 54, 62, 66, 95, 160, 161, 234, 235, 237], "d\u00e9s\u00e9rialis": [40, 235], "r\u00e9alis": [40, 53, 54, 56, 58, 84, 108, 151, 155, 188, 207, 216, 224], "strict": [40, 185, 201, 228, 235], "protoc": 40, "messag": [40, 50, 64, 69, 70, 74, 96, 119, 192, 193, 198, 199, 216, 219, 221, 222, 230, 231, 232, 236], "contrair": [40, 46, 56, 58, 70, 74, 79, 81, 113, 114, 170, 187, 192, 216, 219, 224, 230, 231, 232, 234, 237], "gp": 40, "__version__": [40, 65, 68], "tutorial": [40, 66], "os": [40, 158, 166, 167, 169, 180, 198, 220, 224, 232, 234, 239], "sy": [40, 69, 109, 165, 166, 167, 170, 198, 220, 225, 228, 231, 234, 237], "struct": [40, 232], "sphinx_runpython": [40, 69, 216, 220, 230, 235], "runpython": [40, 69, 216, 220, 230, 235], "run_cmd": 40, "json_format": 40, "messagetojson": 40, "parsejson": 40, "syntax": [40, 41, 50, 51, 69, 72, 102, 160, 198, 200, 201, 208, 218, 224, 229, 232, 235, 238], "proto2": 40, "optional": 40, "int32": [40, 54, 84, 117, 139], "enum": 40, "phonetyp": 40, "mobil": [40, 70], "phonenumb": 40, "repeated": 40, "phon": 40, "addressbook": 40, "peopl": 40, "debian": [40, 67], "apt": [40, 67, 68, 224], "proto": 40, "w": [40, 46, 54, 61, 69, 78, 94, 109, 110, 158, 161, 182, 183, 184, 185, 193, 198, 199, 204, 205, 220, 222, 224, 232, 237, 239], "cmd": [40, 68, 220, 224], "python_out": 40, "err": [40, 85, 133, 145, 220, 228], "use_protoc": 40, "filenotfounderror": [40, 220, 239], "errno": [40, 239], "listd": [40, 158, 169, 198, 224, 232], "plot_tarabiscot": [40, 41, 43, 241], "plot_serialisation_protobuf": [40, 43, 241], "plot_tsp": [40, 42, 43, 241], "schema_pb2": 40, "missing": [40, 51, 134, 230], "utlis": 40, "noq": 40, "e402": 40, "1234": 40, "john": [40, 56, 161], "jdo": 40, "555": 40, "4321": 40, "serializetostring": 40, "fromstring": 40, "parsefromstring": 40, "db": [40, 199], "5678": 40, "johnet": 40, "doet": 40, "jtdoet": 40, "example2": 40, "777": 40, "bytesiz": 40, "pack": [40, 230, 232, 237], "db2": 40, "bsiz": 40, "unpack": [40, 230, 232], "js": [40, 82, 87], "055": 40, "cens": [41, 117, 200, 219], "effect": [41, 56, 59, 207, 216, 224, 225, 230], "identif": [41, 56, 69, 70, 85, 173, 216, 224, 231, 234], "Ici": [41, 69, 118, 134, 148, 152, 230, 231, 237], "d\u00e9signent": [41, 110, 150, 216], "fall": [41, 61, 103, 113, 114, 118, 166, 199], "escompt": 41, "mi": [41, 144], "ordre": [41, 42, 50, 51, 53, 58, 59, 61, 69, 87, 88, 91, 93, 95, 101, 106, 110, 111, 112, 118, 128, 139, 144, 145, 148, 151, 157, 170, 182, 183, 184, 187, 190, 192, 207, 208, 210, 216, 225, 231, 237], "lor": [41, 42, 50, 51, 54, 56, 61, 62, 69, 70, 74, 77, 83, 90, 95, 108, 123, 129, 134, 137, 148, 161, 183, 188, 192, 198, 199, 206, 214, 216, 218, 219, 222, 224, 231, 232, 234, 235, 237, 239], "quant": [41, 56, 62, 69, 146, 216, 230], "pieg": [41, 50], "entrer": [41, 224, 237], "3n": [41, 101], "exigent": [41, 56], "rar": [41, 56, 64, 69, 74, 172, 198, 199, 216, 224, 228, 231, 232], "exig": [41, 77], "con\u00e7oit": [41, 95, 216, 237], "debug": [41, 220, 237], "\u00e9tap": [41, 51, 56, 58, 59, 69, 85, 87, 89, 95, 105, 110, 164, 168, 174, 175, 182, 183, 188, 224, 231, 232, 235, 239], "releas": [41, 222, 237], "\u00f4t\u00e9": [41, 87, 94, 108], "devenus": [41, 61], "inutil": [41, 60, 64, 69, 91, 98, 121, 189, 190, 222, 230, 237], "invisibl": [41, 224], "favoris": [41, 56], "multitud": [41, 224], "rectangl": [41, 59, 116, 127, 155, 216, 224], "h\u00e9rit": [41, 69, 122, 150, 151, 219, 222, 224, 230], "red\u00e9fin": [41, 69, 70, 150, 161, 188, 216, 219], "losang": 41, "Est": [41, 42, 50, 61, 84, 108, 157, 166, 174, 175, 178, 182, 189, 210], "introduir": [41, 51, 201, 218, 224, 230, 237], "princip": [41, 50, 56, 62, 77, 85, 216, 221, 224, 232, 239], "angle": [41, 57, 58, 59, 61, 120, 123, 224], "paraiss": 41, "g\u00e9n\u00e9ral": [41, 51, 52, 59, 61, 62, 69, 74, 111, 121, 129, 135, 137, 173, 182, 199, 204, 208, 214, 216, 219, 220, 224, 230, 231, 235, 237], "afin": [41, 56, 58, 59, 61, 62, 69, 108, 111, 112, 119, 185, 199, 206, 208, 216, 219, 224, 228, 230, 231, 232, 237, 239], "b\u00e9n\u00e9fici": 41, "contien": [41, 204, 216, 219, 234], "thet": [41, 50, 62, 70, 230], "cos": [41, 61, 98, 104, 105, 115, 120, 129, 152, 192, 194, 195, 198, 199, 216, 234], "sin": [41, 98, 104, 105, 115, 120, 129, 152, 186, 187, 216], "183676841431136": 41, "fill": [41, 116, 131, 166, 216, 224], "sens": [41, 161], "emploi": [41, 199, 216, 224, 230, 231], "31622776601683794": 41, "03162277660168379": 41, "9999": [41, 117], "0001": [41, 85, 110, 115, 116, 122, 145, 169], "99999": 41, "0031622776601683794": 41, "999999": [41, 166], "0000000000000002e": 41, "9999999": 41, "000316227766016838": 41, "99999999": 41, "999999999": 41, "0000000000000003e": 41, "1622776601683795e": 41, "9999999999": [41, 216], "99999999999": 41, "1622776601683796e": 41, "999999999999": 41, "9999999999999": 41, "1622776601683797e": 41, "99999999999999": 41, "0000000000000001e": 41, "999999999999999": 41, "162277660168379e": 41, "9999999999999999": [41, 216], "18": [23, 41, 42, 46, 50, 51, 52, 53, 54, 71, 77, 82, 84, 85, 87, 88, 91, 93, 95, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 128, 130, 131, 132, 135, 136, 137, 139, 140, 142, 144, 145, 146, 154, 155, 158, 164, 166, 169, 170, 178, 179, 181, 186, 187, 188, 189, 192, 195, 198, 199, 201, 203, 207, 208, 209, 216, 226, 227, 239], "signif": [41, 50, 51, 53, 56, 58, 59, 61, 69, 70, 82, 95, 108, 114, 121, 130, 136, 139, 165, 188, 198, 199, 200, 208, 216, 218, 219, 224, 225, 227, 230, 231, 232, 237, 239], "8999999985098839": 41, "3162277683729184": 41, "9900000002235174": 41, "0999999988824129": 41, "9990000000689179": 41, "0009999999": 41, "03162277551199656": 41, "9999000000098022": 41, "999999e": 41, "009999999509891484": 41, "9999900000011621": 41, "0031622774764217087": 41, "9999990000001162": 41, "0009999999418942008": 41, "999999900000013": 41, "0003162277453952373": 41, "999999990000001": 41, "999999525523424e": 41, "9999999990000001": 41, "162277439909038e": 41, "99999937286775e": 41, "162277516708525e": 41, "999999437919884e": 41, "162277525279896e": 41, "999999488741863e": 41, "162277498494361e": 41, "999999422567411e": 41, "162277503725911e": 41, "999999712080637e": 41, "1622776099917643e": 41, "matrice_carree_2": 41, "determin": [41, 96], "m1": [41, 80, 81, 85, 87, 91, 106, 111, 112, 210, 211, 224], "fauss": [41, 91, 166, 186, 187, 210, 230], "M": [41, 50, 51, 55, 56, 61, 78, 94, 108, 109, 110, 112, 113, 114, 117, 121, 157, 171, 174, 175, 178, 179, 182, 184, 189, 193, 195, 199, 205, 213, 224, 227, 231, 239], "begin": [41, 50, 56, 58, 59, 61, 62, 70, 83, 85, 101, 109, 110, 118, 132, 144, 145, 174, 178, 179, 182, 183, 195, 216, 220], "cc": [41, 81, 113, 114, 166], "det": [41, 50], "tr": [41, 68, 145, 148, 158, 169], "lambda_1": [41, 174], "lambda_2": [41, 174, 178], "v\u00e9rifient": [41, 56, 58, 113, 114, 203, 207, 239], "lll": [41, 58, 59], "discrimin": [41, 129, 204], "polyn\u00f4m": [41, 62, 145, 192], "sqrt": [41, 50, 56, 61, 111, 112, 152, 174, 178, 195, 203, 216, 230, 234, 237], "valeurs_propr": 41, "9999990000110609": 41, "000000999988939": 41, "m_2": [41, 113, 114], "_2": [41, 61], "99999999900000002828": 41, "000000001": 41, "Quelles": [41, 119, 182], "diagonalis": [41, 174, 216], "faux": [41, 50, 61, 132, 135, 186, 187, 216, 219, 230], "014": 41, "0x7f87dde1b820": 42, "\u00e9loign": [42, 50, 54, 56, 58, 115, 116, 121], "0x7f87ddd9cf70": 42, "constat": [42, 199], "d\u00e9duit": [42, 90, 113, 163, 195], "d\u00e9crois": 42, "milieu": [42, 61, 83, 110, 168, 207, 208, 209], "diminu": [42, 51, 56, 59, 77, 128, 182], "pair": [42, 51, 53, 59, 61, 62, 69, 84, 87, 89, 95, 101, 106, 110, 115, 116, 121, 123, 127, 130, 176, 177, 182, 183, 210, 216, 224, 231], "dessous": [42, 54, 56, 62, 69, 100, 139, 148, 173, 216, 224, 227, 231, 237], "505907269186013": 42, "d0": [42, 85, 93], "ordre2": 42, "xo": 42, "yo": [42, 239], "691942421153962": 42, "1903892598312495": 42, "0x7f87dde1af50": 42, "voil\u00e0": [42, 93, 198, 199], "supposon": [42, 56, 62, 83, 190], "faison": 42, "oublion": [42, 199], "078025608783923": 42, "6771876900613591": 42, "1391250768731818": 42, "1046501462201344": 42, "0784484090749775": 42, "0x7f87ddd3e8f0": 42, "concord": 42, "oubl": [42, 200, 201, 230], "d\u00e9liber": 42, "bouclag": 42, "gagn": [42, 56, 61, 69, 70, 127, 141, 166, 208, 225, 231, 235, 237], "boug": [42, 111, 115, 116, 196, 224], "weight": [42, 169], "bold": 42, "181581748314381": 42, "5243392021523936": 42, "4158660324899728": 42, "7332034403329302": 42, "2868319034555752": 42, "pourt": [42, 50, 56, 170, 195, 198, 206, 210, 216, 219], "tort": [42, 75, 132, 198], "empress": 42, "443079572694948": 42, "523338179940478": 42, "3819249081186789": 42, "194186815206845": 42, "1883320298224307": 42, "0767649820540774": 42, "16329823208868144": 42, "016637088361759367": 42, "Pas": [42, 66, 81, 85, 88, 89, 136, 144, 163, 188], "parf": [42, 46, 93, 112], "conform": [42, 239], "mien": [42, 199], "inchang": [42, 216, 230, 231, 237], "parfait": [42, 56, 61, 77, 87, 230, 231], "voit": [42, 50, 51, 56, 69, 70, 77, 94, 113, 114, 118, 141, 142, 143, 145, 153, 154, 188, 219, 239], "circonst": [42, 198], "aurion": 42, "al\u00e9": [42, 115, 116], "permutation_rnd": 42, "4489424506049406": 42, "6524839602002874": 42, "5691003846597402": 42, "4629741018183848": 42, "aberr": [42, 56, 85, 110, 121, 144], "syst\u00e9mat": [42, 56], "9657797307374083": 42, "8005404539463572": 42, "2436614330765459": 42, "15328048902852542": 42, "027303437404047504": 42, "recommenc": [42, 78, 89, 111, 112, 113, 114, 144, 145, 147, 176, 177], "minit": 42, "n_permut": 42, "bordr": 42, "1380905804644303": 42, "0971799688330344": 42, "096552604587197": 42, "0873102647994237": 42, "6066673059897301": 42, "29070487509552667": 42, "502": 42, "37": [50, 51, 54, 77, 94, 95, 108, 114, 142, 147, 151, 166, 178, 179, 180, 189, 192, 199, 205, 227, 230, 231, 237], "637": [], "annex": [45, 234], "el\u00e9ment": [45, 49, 185, 187], "statiqu": [46, 217], "basemap": 46, "surcouch": 46, "anim": 46, "pygal": 46, "ipyleaflet": 46, "g\u00e9ograph": [46, 58, 95], "pyproj": 46, "fronti": [46, 62, 115, 116, 121, 129, 132, 133, 135], "fleuv": 46, "etat": [46, 56, 237], "unis": [46, 56], "d\u00e9part": [46, 51, 53, 58, 59, 79, 83, 84, 86, 90, 95, 173, 182, 188, 216, 224, 237], "difficult": [46, 77, 95, 129, 199], "charg": [46, 55, 56, 66, 75, 198, 206, 220, 224, 231], "fou": [46, 53], "lisibl": [46, 51, 85, 140, 145, 148, 188, 208, 222, 224, 225, 230, 231, 232, 234, 235], "inlin": [46, 50, 51, 53, 54, 77, 78, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 95, 104, 105, 108, 111, 112, 113, 114, 115, 116, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 155, 157, 159, 163, 164, 173, 181, 195, 199, 202, 203, 205, 220], "ponteil": 46, "varredd": 46, "66145": 46, "77483": 46, "epci": 46, "cu": 46, "perpignan": 46, "m\u00e9diterran": 46, "pmcu": 46, "meau": 46, "200027183": 46, "247700628": 46, "pyren": 46, "oriental": 46, "sein": [46, 56, 69, 74, 84, 216, 224, 231, 235, 237], "marn": 46, "66": [46, 50, 77, 91, 120, 128, 137, 145, 161, 192, 216], "77": [46, 77, 85, 95, 110, 112, 117, 131], "occitan": 46, "\u00eele": 46, "76": [46, 62, 77, 113, 138, 139, 145, 159, 220], "domain": [46, 56, 58, 60, 61, 77, 220], "tension": 46, "bt": 46, "gt": [46, 50, 51, 77, 83, 87, 94, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 134, 144, 146, 147, 158, 161, 165, 166, 167, 178, 179, 180, 183, 188, 199, 208], "kva": 46, "lt": [46, 50, 51, 77, 78, 84, 85, 88, 95, 99, 100, 102, 103, 104, 105, 108, 111, 112, 128, 134, 144, 146, 147, 151, 158, 159, 161, 163, 164, 165, 166, 167, 178, 179, 180, 183, 188, 199, 208], "photovolta": 46, "73": [46, 50, 54, 77, 95, 117, 161, 199, 230], "energ": 46, "mwh": 46, "10728": 46, "620366": 46, "41684": 46, "eolien": 46, "hydraul": 46, "bio": 46, "cog\u00e9ner": 46, "geo": [46, 69, 72], "6323626522": 46, "82631103755": 46, "49": [46, 50, 51, 54, 113, 117, 145, 166, 169, 178, 179, 230], "0059497861": 46, "92725176893": 46, "826311": 46, "927252": 46, "lat": [46, 152], "632363": 46, "00595": 46, "anc\u00eatr": [46, 70, 216], "terr": [46, 199], "sph\u00e9riqu": 46, "localis": [46, 56, 70, 158], "wgs_84": 46, "inse": [46, 51], "epsg": 46, "2154": [46, 220], "proj": [46, 131], "cr": 46, "ccr": 46, "cfeatur": 46, "add_subplot": [46, 50], "platecarre": 46, "set_extent": 46, "52": [46, 50, 51, 54, 113, 114, 117, 133, 136, 169, 216, 231], "add_featur": 46, "ocean": 46, "coastlin": 46, "border": 46, "python3": [46, 68, 140, 142, 165, 166, 180, 198, 220, 224], "241": [46, 50, 108], "downloadwarning": 46, "downloading": 46, "naturalearth": 46, "amazonaw": 46, "10m_physical": 46, "ne_10m_ocean": 46, "warn": [46, 84, 137, 222, 239], "ne_10m_coastlin": 46, "10m_cultural": 46, "ne_10m_admin_0_boundary_lines_land": 46, "with_scal": 46, "10m": 46, "50m": 46, "110m": 46, "river": 46, "50m_physical": 46, "ne_50m_ocean": 46, "ne_50m_coastlin": 46, "ne_50m_rivers_lake_centerlin": 46, "50m_cultural": 46, "ne_50m_admin_0_boundary_lines_land": 46, "from_cr": 46, "4326": 46, "latidud": 46, "6634541": 46, "621546051": 46, "1633374": 46, "3871915536": 46, "6723037": 46, "367738617": 46, "4228679": 46, "19768552": 46, "lamb_x": 46, "lamb_y": 46, "glob": [46, 158, 216, 219, 220, 230, 231, 232, 234, 239], "parse_option_pyproj": 46, "strip": [46, 69, 182, 198, 199, 232], "valueerror": [46, 50, 53, 80, 134, 137, 166, 172, 211, 213, 219, 220, 230, 231], "mycr": 46, "proj4_param": 46, "sup": [46, 85, 88, 148, 190, 195], "cliqu": [46, 224, 237], "lcc": 46, "lat_1": 46, "lat_2": 46, "lat_0": 46, "46": [46, 50, 51, 52, 53, 54, 91, 108, 136, 160, 166, 178, 179, 205, 216], "lon_0": 46, "700000": 46, "6600000": 46, "ellp": 46, "grs80": 46, "unit": [46, 51, 108, 199], "no_def": 46, "Ne": [46, 82, 91], "lambert93": 46, "proj4_list": 46, "crs_lambert93": 46, "36954": 46, "1181938": 46, "6133555": 46, "7233428": 46, "oubli": [46, 51, 83, 113, 114, 168, 178, 179, 198, 208, 209, 216, 230, 232, 234, 237], "authentifi": 46, "populair": [46, 61, 196, 197], "gpd": 46, "read_fil": [46, 204, 205], "get_path": 46, "naturalearth_cit": 46, "tmp": [46, 50, 54, 68, 84, 85, 165, 166, 167, 180], "ipykernel_25365": 46, "1282256058": 46, "futurewarning": [46, 140, 142], "deprecated": [46, 140, 142, 222], "removed": [46, 65, 77, 140, 142], "original": [46, 49, 54, 61, 70, 71, 95, 113, 114, 170, 220, 226, 239], "www": [46, 51, 54, 85, 110, 117], "naturalearthdat": 46, "cultural": 46, "vector": [46, 178, 199], "geometry": [46, 224], "vatican": 46, "city": 46, "45339": 46, "90328": 46, "marino": 46, "44177": 46, "93610": 46, "vaduz": 46, "51667": 46, "13372": 46, "lobamb": 46, "20000": [46, 99, 108], "46667": 46, "luxembourg": [46, 56, 70], "13000": 46, "61166": 46, "naturalearth_lowr": 46, "913829029": 46, "pop_est": 46, "continent": 46, "iso_a3": 46, "gdp_md_est": 46, "889953": 46, "oceani": 46, "fij": 46, "fji": 46, "5496": 46, "multipolygon": 46, "180": [46, 54, 85, 108, 128, 165, 166], "00000": [46, 51], "06713": 46, "58005463": 46, "afric": 46, "tanzani": 46, "tza": 46, "63177": 46, "polygon": [46, 155], "90371": 46, "95000": 46, "07262": 46, "05982": 46, "603253": 46, "sahar": 46, "esh": 46, "907": [46, 50], "66559": 46, "65643": 46, "66512": 46, "58948": 46, "37589262": 46, "americ": 46, "canad": 46, "1736425": 46, "122": 46, "84000": 46, "9742": 46, "328239523": 46, "united": 46, "usa": [46, 51, 56, 70], "21433226": 46, "0000": [46, 51, 122, 133, 145], "set_aspect": 46, "whit": [46, 131, 132, 133, 134, 135, 139, 166], "edgecolor": 46, "mark": 46, "markersiz": 46, "restreint": [46, 161], "m\u00e9tropol": [46, 199], "shapely": 46, "144373535": 46, "russi": 46, "rus": [46, 53], "1699876": 46, "67591": 46, "64149": 46, "68201": 46, "5347896": 46, "norway": 46, "nor": 46, "403336": 46, "39955": 46, "69": [46, 50, 51, 54, 77, 136, 145, 167, 216], "15692": 46, "59193": 46, "67059887": 46, "fra": [46, 199], "2715518": 46, "65823": 46, "20196": 46, "09928": 46, "10285453": 46, "sweden": 46, "swe": 46, "530883": 46, "46827": 46, "59": [46, 50, 51, 54, 62, 95, 136, 145, 160, 191, 205, 230], "43239": 46, "30037": 46, "11793": 46, "9466856": 46, "belarus": 46, "blr": 46, "63080": 46, "22951": 46, "91834": 46, "37157": 46, "67009": 46, "lon": 46, "itertupl": [46, 131, 144], "geodatafram": 46, "82631": 46, "63236": 46, "92725": 46, "21389": 46, "46046": 46, "97421": 46, "12047": 46, "08532": 46, "48": [46, 50, 51, 52, 54, 55, 56, 95, 113, 117, 152, 160, 165, 166, 173, 178, 179, 205, 216], "61706": 46, "map_osm": 46, "85": [46, 77, 84, 114, 117, 121, 128, 162, 199, 216], "add_child": [46, 207], "regularpolygonmark": 46, "popup": 46, "fill_color": 46, "132b5e": 46, "radius": [46, 152], "d\u00e9tail": [46, 61, 77, 81, 111, 112, 113, 114, 128, 144, 145, 158, 216, 224, 231], "img_til": 46, "osm": 46, "imagery": 46, "add_imag": 46, "plotly": 47, "gmap": 47, "bingmap": 47, "geopand": 47, "folium": 47, "openstreetmap": [47, 54], "incontourn": [48, 53, 54, 61, 231], "tant": [48, 51, 58, 59, 61, 69, 78, 84, 89, 111, 112, 152, 182, 207, 216, 230, 231, 232, 234, 237], "simplifient": [48, 61], "contingent": [48, 49, 127], "algebr": 49, "r\u00e9f\u00e9rent": [49, 58, 69, 216, 219, 230, 231, 232, 234, 237], "raccourc": [49, 59, 69, 170, 216, 231], "docstring": [49, 71, 226], "d\u00e9di": [50, 58, 74, 172], "aven": [50, 235], "deep": [50, 73, 166], "\u00e9merg": [50, 237], "offrant": 50, "vari": [50, 56, 61, 69, 88, 116, 119, 161, 182, 210, 216, 231, 232], "cpu": [22, 50], "pytorch": [22, 50], "\u00e9mergent": 50, "usag": [50, 51, 61, 62, 69, 74, 77, 91, 149, 161, 171, 198, 199, 200, 216, 221, 225, 231, 232, 236, 237], "standardis": 50, "presqu": [50, 62, 79, 95, 111, 132, 137, 139, 153, 175, 181, 182, 192, 224, 230, 232, 237], "convent": [50, 51, 53, 54, 61, 69, 81, 149, 152, 188, 198, 199, 208, 219, 221, 231], "etc": [50, 67, 77, 184, 234], "ndim": 50, "int64": [50, 51, 53, 54, 117, 121, 159, 166], "s\u00e9lection": [50, 51, 54, 56, 77, 224, 232], "automat": [50, 51, 57, 62, 69, 113, 169, 198, 199, 204, 216, 224, 231, 232], "allez": [50, 88], "jet": [50, 51, 80, 95], "bb": [50, 80], "assign": [50, 51, 109, 234], "cast": 50, "casting": 50, "aa": [50, 80, 199, 207, 211, 225, 239], "dimmensionnel": 50, "aplat": 50, "1d": 50, "transposed": 50, "flatten": [50, 166], "flattened": 50, "multidimensionnel": [50, 109], "mask": [50, 51], "extrair": [50, 51, 59, 83, 87, 239], "\u00e9lement": [50, 51, 77, 148, 159], "ar": [50, 170, 183, 199], "arang": [50, 77, 78, 84, 88, 113, 114, 119, 121, 130, 134, 155, 166], "idx": 50, "idx_bool": 50, "did": [50, 216], "match": [50, 62, 198, 216, 220, 230, 239], "indexed": 50, "along": 50, "corresponding": [50, 65], "essai": [50, 53, 59, 61, 62, 69, 74, 85, 86, 95, 110, 121, 129, 141, 151, 160, 161, 166, 208, 219, 220, 224, 228, 231, 232, 237], "list_python": 50, "integer": [50, 176, 177], "slic": [50, 54], "cr\u00e9on": 50, "step": [50, 62, 108, 134, 169], "flott": 50, "shallow": 50, "fourn": [50, 51, 56, 69, 95, 227, 234], "pi": [50, 51, 69, 88, 104, 105, 106, 115, 116, 120, 129, 161, 167, 216, 234], "14159265": 50, "indirect": [50, 216, 219], "linspac": [50, 129], "subsidiair": 50, "quoi": [50, 51, 56, 61, 69, 77, 81, 100, 109, 150, 161, 174, 188, 192, 193, 206, 238], "71828183": 50, "silenci": [50, 60, 222], "vicieux": 50, "r\u00e2l": 50, "habitu": [50, 56], "naturel": [50, 170], "coh\u00e9rent": [50, 69], "nuit": [50, 56, 74, 199], "notanumb": 50, "slice_of_d": 50, "nslice_of_d": 50, "nd": 50, "fancy_indexed_subarray": 50, "nfancy_indexed_subarray": 50, "reshap": [50, 53, 109, 110, 121, 128, 129, 164, 166, 167, 171], "fortran": [50, 53, 61, 154], "column": [50, 51, 52, 54, 67, 85, 86, 109, 113, 114, 117, 128, 131, 132, 134, 135, 136, 137, 142, 143, 145, 157, 158, 164, 169, 173, 178, 179, 199, 224], "connaissent": [50, 199], "matlab": 50, "jok": 50, "infer": [50, 85, 189], "zeros_lik": 50, "ones_lik": 50, "concatenat": [50, 51, 77], "gmat": 50, "axis": [50, 51, 53, 54, 55, 84, 85, 86, 88, 89, 93, 110, 113, 114, 121, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 171, 210], "hstack": [50, 53, 109, 128, 134, 181], "8x8": [50, 172], "til": [50, 107], "extract": [50, 208], "ccccc": 50, "ccc": [50, 61], "routin": [50, 234], "d\u00e9clar": [50, 51, 199, 231, 237], "allon": [50, 59, 62, 112, 139, 199, 224], "arithmet": 50, "effectuent": [50, 69, 230], "adopt": 50, "36787944": 50, "3890561": 50, "08553692": 50, "59815003": 50, "provoqu": [50, 51, 56, 64, 69, 74, 100, 102, 103, 192, 200, 220, 222, 230, 231, 234], "ipykernel_4567": 50, "2601360242": 50, "runtimewarning": 50, "divid": [50, 186, 187], "encountered": 50, "33333333": 50, "operand": [50, 69, 100, 110, 216], "togeth": [50, 186, 187], "sep": [50, 51, 54, 69, 85, 117, 182, 183, 231, 234, 239], "dupliqu": [50, 58, 158, 224], "newax": [50, 134, 166], "38": [50, 51, 54, 102, 109, 114, 122, 145, 166, 178, 179, 192, 199, 216], "existent": [50, 69, 74, 77, 84, 149, 187, 192, 199, 216, 230, 231, 232], "unes": [50, 58, 69, 82, 85, 103, 115, 116, 145, 216, 219, 224, 230, 231], "op\u00e8rent": 50, "\u00e9ventail": 50, "qr": 50, "svd": [50, 130], "commen\u00e7on": 50, "triangulair": [50, 84, 213], "tril": 50, "whatsnew": 50, "465": 50, "dedicated": 50, "infix": 50, "operator": [50, 51, 216, 230], "linalg": [50, 78, 109, 110, 130, 174, 175, 179], "inv_a": 50, "inv": [50, 109, 110, 174, 175], "equat": 50, "eig": [50, 78, 131, 174, 175, 179], "eigresult": 50, "eigenvalu": [50, 145], "eigenvector": 50, "00000000e": [50, 110, 175], "93038066e": 50, "22044605e": 50, "eigval": 50, "sp\u00e9cialis": [50, 56, 232], "traver": [50, 216, 224, 230, 232], "pens": [50, 54, 61, 62, 74, 77, 101, 134, 168, 178, 192, 198, 199, 204, 216, 231, 239], "virgul": [50, 69, 231, 232], "indiquent": 50, "symbol": [50, 69, 100, 110, 192, 198, 199, 205, 216, 230, 231, 232, 234, 237, 239], "81": [50, 77, 114, 220], "96": [50, 53, 77, 117, 159, 173, 180, 192, 195, 237], "102": [50, 53, 110, 145, 165, 166, 184], "150": [50, 85, 88, 111, 115, 116, 117, 141, 145, 159, 161, 163, 216], "priorit": [50, 69, 230, 231], "l\u00e9ger": [50, 51, 79, 80, 95, 134], "53": [50, 51, 54, 95, 105, 136, 142, 155, 160, 173, 180, 205, 230], "rank": [50, 161], "matrix_rank": 50, "000000000000016": 50, "77475828e": 50, "10542736e": 50, "88178420e": [50, 175], "66453526e": 50, "77635684e": [50, 109, 175], "apport": [50, 108, 134, 217, 237], "natif": 50, "referent": [50, 154, 216, 224, 234], "randomnumpy": 50, "4x3": 50, "gaussien": [50, 130, 174, 175], "randn": [50, 53, 86, 93, 118, 163, 237], "normal": [50, 56, 61, 62, 113, 114, 115, 116, 130, 140, 141, 161, 174, 175, 195, 216, 218, 224, 234, 237], "78986084": 50, "56625033": 50, "50288104": 50, "17435748": 50, "99013306": 50, "07810937": 50, "5082934": 50, "08166826": 50, "04530213": 50, "01406781": 50, "38415054": 50, "05907499": 50, "convaincr": [50, 77, 100, 160, 199, 207, 237], "pur": [50, 154], "1e6": [50, 121, 216], "normalvariat": 50, "691": 50, "ms": [50, 51, 52, 77, 83, 91, 93, 108, 111, 112, 114, 121, 158, 161, 163, 173, 180, 189, 195, 207], "std": [50, 51, 52, 53, 83, 91, 93, 111, 112, 114, 121, 128, 131, 133, 135, 145, 155, 161, 162, 163, 173, 180, 189, 195, 205, 207, 237], "\u00e9quiprob": [50, 62], "racin": [50, 84, 147, 206, 207, 208, 230, 231, 234], "instant": [50, 56, 77, 85, 95, 220, 231], "amplitud": [50, 131], "atteint": [50, 56, 77], "combien": [50, 51, 54, 79, 100, 108, 115, 116, 119, 140, 172, 192, 199], "argmax": [50, 53, 180], "cumsum": [50, 51, 54, 135, 154], "optimiz": [21, 50, 56, 111, 112, 133, 188, 210], "panel": [50, 51], "ad\u00e9quat": [50, 53, 56, 230, 232], "viv": [50, 199], "tutoriel": [50, 51], "mathematical": 50, "minim": 50, "ga\u00ebl": [50, 62], "varoqual": [50, 62], "r\u00e9cent": [50, 56, 199, 224, 230, 234, 236, 237], "solver": 50, "normalis": [50, 131, 144, 145], "minimis": [50, 56, 62, 70, 80, 95, 109, 110, 119, 178, 182, 185, 216], "minimiz": [50, 188], "minimize_scalar": 50, "obtiendr": [50, 62], "optimizeresult": 50, "d\u00e9velopp": [50, 56, 59, 81, 146, 222, 224, 231, 234, 235, 236], "toolbox": 50, "clair": [50, 61, 69, 93, 95, 101, 139], "rafraich": 50, "bowl_peak": 50, "57": [50, 51, 54, 95, 113, 121, 162, 191, 205, 216], "galler": [50, 51, 72, 241], "contour3d_demo3": 50, "58": [50, 51, 95, 110, 111, 128, 137, 138, 139, 151, 160, 169, 205], "mpl_toolkit": 50, "mplot3d": 50, "axes3d": 50, "cm": [50, 61, 129, 131, 158], "colormap": [50, 224], "min_val": 50, "max_val": 50, "x_ax": 50, "y_ax": 50, "meshgrid": [50, 129], "xy": [50, 77, 109, 110, 111, 112, 140, 144], "get_test_dat": 50, "plot_surfac": 50, "rstrid": 50, "cstrid": 50, "cset": 50, "contour": [50, 54, 129], "zdir": 50, "offset": 50, "coolwarm": [50, 129], "set_xlabel": [50, 51, 132, 155, 181, 205], "set_xlim": [50, 104, 105, 115, 116, 120], "set_ylabel": [50, 132, 141, 155, 181, 205], "set_ylim": [50, 104, 105, 115, 116, 120, 140, 144, 145], "set_zlabel": 50, "set_zlim": 50, "fun": 50, "cg": 50, "bfg": 50, "powel": 50, "cobyl": 50, "optim_r": 50, "nmethod": 50, "terminated": [50, 133], "successfully": [50, 133], "status": [50, 132, 134, 135], "4052368582391728": 50, "690e": 50, "446e": 50, "nit": 50, "nfev": 50, "final_simplex": 50, "691e": 50, "814e": 50, "011e": 50, "052e": 50, "40523687026669025": 50, "670e": 50, "jac": 50, "863e": 50, "000e": 50, "njev": 50, "40523687025688715": 50, "451e": 50, "083e": 50, "hess_inv": 50, "287e": 50, "836e": 50, "154e": 50, "direc": 50, "854e": 50, "4052368678399868": 50, "892e": 50, "maxcv": 50, "norm_of_projected_gradient_": 50, "_pgtol": 50, "4052368702662145": 50, "828e": 50, "360e": 50, "2x2": 50, "lbfgsinvhessproduct": 50, "4052": 50, "669": 50, "gradient": [50, 56, 61, 62], "optimum": [50, 141], "reposent": 50, "relanc": [50, 58, 94, 96, 199], "anneal": 50, "m\u00e9taheurist": 50, "61": [50, 51, 54, 77, 95, 112, 117, 121, 140, 162, 205, 216, 230], "797": 50, "\u00b5": [50, 51, 52, 53, 83, 91, 93, 111, 112, 114, 121, 155, 161, 162, 163, 173, 195, 205], "91": [50, 77, 162, 180], "87": [50, 52, 77, 117, 133, 163, 169, 173, 199], "771": 50, "369": 50, "616": [50, 77], "vraissembl": 50, "rescaled": 50, "62": [50, 51, 54, 110, 117, 136, 155, 169, 190, 205], "shifted_scaled_bowlpeak": 50, "05000000677266441": 50, "500e": 50, "229e": 50, "918e": 50, "635e": 50, "407e": 50, "579e": 50, "174e": 50, "72": [31, 50, 54, 77, 93, 151, 166, 216], "hessien": 50, "x_1": [50, 61, 62, 70, 110, 129, 178, 179, 186, 187, 230], "x_2": [50, 129, 178, 179, 186, 187], "epsilon": [50, 56, 58, 61, 109, 110, 113, 114], "mathcal": [50, 77, 176, 177], "moindr": [50, 56, 58, 108, 152, 178, 179, 224], "ordinair": [50, 69, 237], "mco": 50, "hat": [50, 62, 109, 234], "densit": [50, 77, 131, 144], "mu": [50, 85, 86, 117], "sigm": [50, 56, 62, 70, 146, 148, 182, 183, 184, 185], "overlin": [50, 56], "equiv": [50, 59], "exercis": [50, 66], "auteur": [50, 74, 103, 232, 239], "partiel": [50, 130], "63": [50, 51, 56, 70, 77, 111, 151, 169, 198, 230, 239], "exo1": 50, "chess": 50, "chess2": 50, "exo1b": 50, "idx_row": 50, "idx_col": 50, "wrong": 50, "also": [50, 65, 132, 134, 135, 224], "broadcasted": 50, "ix_": 50, "65": [50, 77, 96, 110, 117, 131, 138, 139, 145, 151, 169, 173, 192, 193], "exo1c": 50, "is_prim": [50, 237], "71": [50, 54, 77, 106, 117, 121, 143, 151, 166, 180, 216, 230], "79": [50, 54, 77, 114, 117, 121, 145, 163, 173, 230], "83": [50, 77, 113, 114, 145, 169, 180, 230], "89": [50, 54, 77, 79, 95, 117, 119, 137, 173, 180, 216, 230], "97": [50, 54, 77, 91, 95, 96, 101, 117, 118, 159, 162, 192, 206, 207, 230], "103": 50, "107": [27, 28, 50, 182, 241], "109": [50, 53, 54, 95, 175], "113": [50, 95, 110, 165, 167], "127": 50, "131": [50, 167], "137": 50, "139": [50, 145, 154, 155, 165, 166, 180], "149": [50, 145, 158], "151": [50, 117, 128, 141, 145], "157": 50, "163": [50, 54, 142, 145, 155], "167": 50, "173": [50, 108, 110], "179": [50, 108], "181": [50, 180], "191": [50, 108, 145], "193": [50, 51, 108], "197": [50, 85, 108, 155], "199": [50, 54, 108, 154], "211": 50, "223": [50, 241], "227": [50, 92, 95, 108], "229": [50, 108], "233": [50, 79, 108, 145, 200, 220], "239": [50, 108, 180, 224], "251": [50, 51, 91, 159], "257": [50, 195], "263": [50, 145], "269": [50, 195], "271": 50, "277": 50, "281": 50, "283": 50, "293": [50, 220], "307": [50, 145], "311": 50, "313": [50, 145, 220], "317": [50, 99, 145], "331": [50, 145], "337": 50, "347": [50, 51], "349": 50, "353": 50, "359": [50, 51], "367": 50, "373": [50, 54], "379": 50, "383": 50, "389": 50, "397": 50, "401": 50, "409": 50, "419": 50, "421": 50, "431": [50, 220], "433": 50, "439": 50, "443": [50, 121], "449": 50, "457": [50, 166], "461": [50, 165], "463": 50, "467": 50, "479": 50, "487": 50, "491": 50, "499": [50, 113, 114], "503": [50, 111], "509": [50, 91, 180], "521": 50, "523": 50, "541": [50, 136, 145], "547": 50, "557": 50, "563": [50, 142], "569": 50, "571": 50, "577": [50, 175], "587": [50, 232], "593": 50, "599": 50, "601": 50, "607": 50, "613": 50, "617": 50, "619": 50, "631": 50, "641": 50, "643": [50, 145], "647": 50, "653": 50, "659": 50, "661": [50, 145], "673": 50, "677": 50, "683": 50, "701": [50, 54, 165], "709": 50, "719": [50, 54, 145], "727": 50, "733": 50, "739": [50, 54, 165], "743": 50, "751": 50, "757": [50, 145], "761": [50, 54], "769": [50, 54, 145], "773": 50, "787": [50, 112], "809": 50, "811": [50, 142], "821": 50, "823": 50, "827": [50, 145], "829": 50, "839": 50, "853": [50, 237], "857": 50, "859": 50, "863": 50, "877": [50, 165], "881": 50, "883": [50, 85], "929": 50, "937": 50, "941": [50, 130, 167], "967": [31, 50], "barr": [50, 56, 70, 85, 94, 95, 102, 159], "961": [31, 50, 237], "n_walk": 50, "n_step": 50, "walk": [50, 87, 232, 239], "few": 50, "evolv": 50, "rms_posit": 50, "highest": 50, "lowest": [50, 186, 187], "wand": 50, "furth": [50, 158, 224], "hits_the_bound": 50, "2f": [50, 69, 77, 83, 92, 95, 231], "among": 50, "beyond": 50, "hit": 50, "first_hit": 50, "crossing": 50, "d\u00e9riv": [50, 56, 85, 108, 109, 110, 195, 216, 237], "derive": 50, "2n": [50, 59, 90, 99, 186, 187, 195], "x1_x2_ep": 50, "beta_hat": 50, "coef": [50, 133, 145, 164, 189, 216], "9970383": 50, "99521061": 50, "99634679": 50, "log_likelihood": 50, "sigma_squar": 50, "neg_log_likelihood_vectoriel": 50, "theta0": 50, "8178268765388288": 50, "984e": 50, "395e": 50, "985e": 50, "818e": 50, "ind\u00e9pend": [50, 56, 64, 69, 70, 77, 84, 88, 156, 171, 174, 175, 230, 235, 237], "9844993574269878": 50, "952430926826533": 50, "recet": 51, "cookbook": 51, "fen\u00eatr": [51, 184, 223, 230, 231, 237], "extern": [51, 198, 233], "spyd": 51, "sql": [22, 51, 54], "million": [51, 91], "decr": [51, 53, 56, 59, 61, 78, 80, 95, 109, 110, 168, 216, 224, 228, 230, 231, 234, 237, 239], "gros": [51, 56, 61, 85, 158, 232], "mo": [51, 74, 106, 199, 230], "patient": 51, "astuci": 51, "sqllit": 51, "streaming": [51, 123], "ipython": [51, 82, 83, 87, 94, 95, 99, 100, 102, 103, 108, 129, 137, 139, 156, 165, 166, 168, 178, 179, 180, 183, 185, 194, 195, 196, 197, 198, 202, 203, 206, 207, 209], "td2df": 51, "pr\u00e9vu": [51, 60, 127, 216, 219, 224, 232], "bloc": [51, 200, 201, 218, 224, 230], "uni": [51, 128, 199], "dimensionnel": 51, "hello": [51, 69], "missing1": 51, "missing2": 51, "city2cp_dict": 51, "paris14": 51, "75014": 51, "paris18": 51, "75018": 51, "malakoff": 51, "92240": 51, "6300": [51, 145], "lien": [51, 61, 62, 66, 84, 85, 132, 198, 216, 224, 232], "isnull": [51, 113], "notnull": 51, "cities_list": 51, "paris12": 51, "vanv": 51, "cities2": 51, "\u00e9ventuel": [51, 56, 118, 199], "75012": 51, "92": [51, 77, 95, 145, 162, 173], "align": [51, 158, 201, 224, 230, 231], "paris13": 51, "184480": 51, "12600": 51, "150028": 51, "150036": [31, 51], "additionnent": 51, "nomm": [51, 54, 61, 69, 74, 84, 200, 207, 208, 216, 230, 231, 237], "postal": 51, "collect": [51, 70, 73, 84, 85, 153, 154, 162, 169, 170, 198, 205, 216, 225, 231], "apparent": [51, 173, 208, 224, 231], "prix": [51, 56, 70, 108, 150], "220": [51, 55, 56, 93, 108, 128, 169], "devis": [51, 56], "euros": [51, 56, 70, 108], "221": [51, 53, 155, 195], "aujourd": [51, 56, 60, 61, 64, 69, 74, 77, 92, 198, 234], "hui": [51, 56, 60, 61, 64, 69, 74, 77, 92, 198, 234], "ger": [51, 56, 61, 94, 107, 134, 143, 167, 219, 224, 228, 231, 232, 234, 237, 239], "section": [51, 57, 67, 216, 219, 220, 224, 230, 232, 237], "briev": 51, "reprend": [51, 56, 59, 80, 87, 89, 129, 148, 165, 190, 207, 216, 219, 224, 230, 231], "obligatoir": [51, 69, 74, 190, 208, 216, 218, 230], "accent": [51, 108, 160, 182, 219, 231], "xlsx": [51, 158], "special": 51, "bash": [51, 68], "command": [21, 51, 65, 68, 74, 158, 172, 182, 206, 224, 230, 231, 232, 237], "caracter": [51, 54, 61, 62, 71, 74, 80, 81, 94, 96, 98, 99, 100, 102, 108, 146, 160, 161, 182, 188, 192, 198, 199, 200, 201, 204, 205, 207, 208, 214, 216, 219, 220, 224, 229, 230, 232, 234, 235, 237], "tail": [51, 54, 68, 85, 113, 114, 117, 135, 139, 158], "df_marathon": 51, "marathon": 51, "anne": [51, 199], "2011": [51, 74, 145], "7589": 51, "2010": [51, 199, 239], "7601": 51, "2009": [51, 74, 186, 187, 199], "7547": 51, "2008": [51, 184, 185], "7600": 51, "2007": 51, "7637": 51, "000000": [51, 54, 128, 131, 132, 135, 143, 216, 230], "1989": 51, "754875": 51, "7933": 51, "660167": 51, "028545": 51, "385": 51, "289830": 51, "1947": 51, "7382": 51, "1981": [51, 199], "7698": 51, "1991": 51, "7820": 51, "2001": [51, 56, 163, 199], "8046": 51, "500000": [51, 135, 143, 216, 230, 231], "10028": 51, "iloc": [51, 54, 85, 113, 117, 131, 133, 134, 138, 141, 143], "set_index": [51, 54, 85, 88, 113, 114, 145, 157, 163], "dfi": [51, 54, 139], "r\u00e9fer": [51, 69], "dupr": [51, 67, 73, 75, 230, 231, 235], "arrond": [51, 100, 230, 231], "cl\u00e9menc": 51, "reset_index": [51, 54, 117, 134, 135, 139, 141, 144, 145], "drop": [51, 54, 85, 88, 108, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "inplac": 51, "dfi2": 51, "plag": [51, 130], "urllib": [51, 96, 161, 169, 199, 234], "2006": 51, "7683": 51, "2005": [51, 56], "renomm": [51, 54, 218, 232], "year": [51, 56], "donnees_enquete_2003_televis": 51, "poidslog": 51, "individuel": 51, "relat": [51, 54, 56, 77, 78, 85, 109, 110, 117, 195, 224, 231, 232, 237], "poidsf": 51, "clt1freq": 51, "t\u00e9l\u00e9vis": 51, "clt2freq": 51, "mois": [51, 56, 74, 85, 108, 227, 239], "renseign": [51, 69, 113, 114, 185, 216, 231, 237], "sauv": [51, 199, 232], "isnan": [51, 53, 113, 114, 134], "apply": [51, 173], "filln": [51, 54], "n_1": 51, "n_2": 51, "sas": 51, "boston": 51, "fukuok": 51, "chicago": 51, "stockolm": 51, "york": [51, 56, 205], "london": 51, "berlin": 51, "amsterdam": 51, "1948": 51, "1949": [51, 161], "1950": 51, "1951": [51, 145], "1952": 51, "1953": 51, "1954": 51, "1955": 51, "1956": 51, "chaining": 51, "indexing": [51, 53, 54, 99], "selecting": 51, "subset": [51, 59, 176, 177], "1971": [51, 145, 239], "112": 51, "7971": 51, "204": [51, 108], "8574": 51, "285": 51, "8325": 51, "query": 51, "concat": [51, 54, 85, 134, 135, 139, 142, 143], "concat_lign": 51, "718": 51, "concat_col": 51, "sort_valu": [51, 113, 114, 134, 135, 144, 157], "ascending": [51, 135], "7418": 51, "325": [51, 220], "202": [51, 108], "7480": 51, "276": 51, "8047": 51, "caract\u00e9rist": [51, 56, 74, 165, 224], "top": [51, 65, 68, 123, 186, 187, 224], "customis": 51, "gr": [51, 94, 117, 147, 166, 239], "generic": 51, "dataframegroupby": 51, "0x7fd034df94b0": 51, "sort_index": 51, "37916": 51, "68673": 51, "7583": 51, "200000": [51, 85, 207], "7630": 51, "333333": 51, "7652": 51, "555556": 51, "mention": [51, 216, 219, 220, 224, 231], "aggreg": [51, 54, 85, 154], "max_enti": 51, "agg": [51, 154], "8134": 51, "7968": 51, "nsmallest": 51, "171": [51, 108, 143, 145, 180], "170": [51, 108, 145, 162, 216], "324": [51, 145], "357": 51, "74": [51, 77, 95, 117, 145, 155, 189, 216], "234": [51, 108, 220, 231], "222": [51, 108, 109], "248": [51, 117], "7544": 51, "7578": 51, "7439": 51, "7552": 51, "7541": 51, "1999": 51, "7542": [51, 145], "7518": 51, "7570": 51, "7510": 51, "7663": 51, "7681": 51, "1983": 51, "7897": 51, "1986": [51, 239], "7953": 51, "inner": 51, "merging": 51, "joining": 51, "jointur": 51, "patat": 51, "correspondent": [51, 56, 188, 195, 231, 239], "germany": 51, "uk": 51, "dfavecpay": 51, "left_on": [51, 54, 158], "right_on": [51, 54, 158], "192": [51, 95, 128], "joindr": 51, "c_1": [51, 58, 176, 177], "c_2": 51, "c_3": 51, "respect": [51, 77, 113, 114, 163, 190, 199, 216, 230, 231], "a_i": [51, 154, 184], "b_i": [51, 184, 210], "c_i": [51, 58, 84], "contiendr": [51, 69, 182, 216, 219, 231, 232, 234], "a1": [51, 77, 120, 189, 216], "b1": [51, 77, 189, 199, 224], "c1": [51, 52, 80, 81, 106, 128, 189, 211, 216, 231], "b2": [51, 77, 189, 224], "c2": [51, 52, 80, 81, 106, 116, 128, 189, 211, 216, 231], "a2": [51, 77, 120, 189, 216], "c4": [51, 52, 81, 199], "b3": [51, 189, 224], "c5": [51, 52, 199], "pivot_t": [51, 54], "reshaping": 51, "piv": [51, 142, 143, 164], "1967": 51, "1968": [51, 95], "1969": 51, "1987": 51, "1988": 51, "syntactic": 51, "sugar": 51, "2em": [51, 99], "four": 51, "riemann": 51, "3328334999999999": 51, "na\u00efv": [51, 194, 198], "mn": [51, 89, 160], "\u00e9vident": [51, 56, 58, 59, 70, 83, 88, 93, 95, 101, 113, 137, 163, 165, 204, 205, 216, 224, 230, 232, 234, 239], "klib": 51, "appui": [51, 56, 64, 69, 139, 200, 222, 224], "magic": 51, "cellul": [51, 53, 184, 185, 198, 208], "big_df": 51, "cle1": [51, 69, 99, 231], "cle2": [51, 69, 99, 231], "784": 51, "310": 51, "gain": [51, 56, 59, 70, 121, 122, 137, 151, 214, 234], "compliqu": [51, 56, 60, 61, 62, 82, 85, 88, 134, 145, 219, 235, 237, 239], "aaa": [51, 80, 94, 102, 207, 239], "mm": [51, 56, 239], "jj": [51, 239], "hh": 51, "ss": 51, "timedelt": [51, 85, 227], "recr\u00e9": [51, 95, 230, 231, 234], "1900": [51, 143], "total_second": 51, "naissanc": [51, 87, 160, 161, 227, 239], "d\u00e9ces": [51, 54, 85], "2012": [51, 56, 97], "zipfil": [51, 158, 232, 234], "download_and_sav": 51, "root_url": 51, "respons": [51, 56, 169, 199], "urlopen": [51, 96, 161, 169, 199], "timeouterror": 51, "urlerror": 51, "badstatuslin": 51, "teachdat": 51, "naissance_deces_mariag": 51, "wb": [51, 169, 199, 232], "outfil": 51, "extractall": 51, "etatcivil2012_mar2012_dbas": 51, "etatcivil2012_nais2012_dbas": 51, "etatcivil2012_dec2012_dbas": 51, "2407910": 51, "dbfread": 51, "dbf": 51, "dbase2df": 51, "dbase_filenam": 51, "cp437": 51, "df_civil": 51, "mar2012": 51, "utf8": [51, 69, 199], "modulenotfounderror": [51, 183], "named": [51, 183, 224], "sp\u00e9cial": [51, 53, 56, 74, 148, 231, 232, 239], "accentu": [51, 74, 199, 229], "r\u00e9pandu": [51, 56, 69, 161, 198, 216, 230], "lit": [51, 69, 74, 82, 87, 146, 161, 232, 237], "vardf": 51, "varlist_mariag": 51, "libel": 51, "amar": 51, "char": [51, 157, 211, 224], "anaisf": 51, "\u00e9pous": 51, "anaish": 51, "\u00e9poux": 51, "depdom": 51, "domicil": [51, 117], "depmar": 51, "depnaisf": 51, "depnaish": 51, "etamatf": 51, "matrimonial": 51, "ant\u00e9rieur": 51, "etamath": 51, "indnatf": 51, "indnath": 51, "jsemain": 51, "mmar": 51, "nbenfcom": 51, "enfant": [51, 148, 199], "tucom": 51, "tranch": 51, "tudom": 51, "urbain": 51, "mar": [51, 56, 70, 97, 128], "femm": [51, 178, 179, 198, 199], "etant": [51, 56, 77, 130, 216, 219, 231, 234], "heatmap": [51, 140], "visualiz": 51, "titr": [51, 74, 77, 85, 158, 199, 224, 237, 239], "grill": [51, 53, 107, 196, 224], "grid": [51, 141], "superpos": [51, 85], "as_index": [51, 142, 143], "fontsiz": 51, "set_visibl": [51, 145, 169], "l\u00e9gend": [51, 224, 237], "requ\u00eat": [51, 69, 109, 232], "excelwrit": 51, "existing": [51, 68], "workbook": 51, "df1000": 51, "ton_example100": 51, "clos": [51, 69, 198, 219, 220, 232, 239], "poidlog": 51, "unnamed": 51, "889422": 51, "4766": 51, "865201": 51, "310209": 51, "12381": 51, "589746": 51, "740070": 51, "14685": 51, "431344": 51, "775545": 51, "9516": 51, "049939": 51, "732512": 51, "3925": 51, "907588": 51, "8403": 51, "7386": 51, "8397": 51, "502091": 51, "2690": 51, "961176": 51, "8398": 51, "306852": 51, "1644": 51, "574141": 51, "8399": 51, "501181": 51, "13405": 51, "104689": 51, "8400": 51, "382758": 51, "7410": 51, "905653": 51, "8401": 51, "343340": 51, "1840": [51, 145], "132652": 51, "obtenus": [51, 52, 56, 59, 62, 95, 139, 205, 207], "select": [51, 68, 224], "echantillon": 51, "830": 51, "7883": 51, "371429": 51, "7922": 51, "315789": 51, "7891": 51, "061224": 51, "7815": 51, "909091": 51, "8075": 51, "187500": 51, "secondes_x": 51, "secondes_y": 51, "7937": 51, "028571": 51, "7466": 51, "8053": 51, "7871": 51, "7599": 51, "7661": 51, "7744": 51, "8456": 51, "7672": [51, 145], "7665": 51, "7585": 51, "7515": 51, "7723": 51, "8163": 51, "7568": 51, "7722": 51, "7755": 51, "7508": 51, "7704": 51, "7519": 51, "7694": 51, "pivmean": 51, "7695": 51, "161290": 51, "7928": 51, "560976": 51, "8133": 51, "393939": 51, "1612903225805": 51, "909090909091": 51, "371428571429": 51, "061224489796": 51, "315789473684": 51, "5609756097565": 51, "028571428571": 51, "1875": 51, "393939393939": 51, "courus": 51, "16129": 51, "246123": 51, "1982": 51, "1984": 51, "1992": 51, "1985": 51, "84": [51, 52, 54, 77, 117, 181, 199, 216], "1963": 51, "ageh": 51, "agef": 51, "scatt": [51, 54, 115, 116, 129, 131, 133, 135, 140, 144, 151, 178, 179, 202, 203, 205], "hexbin": 51, "differencehf": 51, "dissem": 51, "repsem": 51, "secondary_y": 51, "fonctionnal": [53, 198, 216, 222, 224, 231, 232, 234, 239], "basiqu": 53, "blas": 53, "assembleur": 53, "peaufin": 53, "gr\u00e9": 53, "mat\u00e9riel": 53, "r\u00e9ag": [53, 56, 70, 224, 237], "integ": 53, "matint": 53, "540": [52, 53], "ns": [53, 54, 113, 114, 155, 161, 173, 195, 205], "matintf": 53, "549": [53, 145], "1005": [31, 53], "1006": 53, "1007": [31, 53], "1009": [31, 53], "106": [52, 53, 85], "95": [53, 61, 77, 110, 117, 120, 159, 162, 195], "108": 53, "multipli": [53, 56, 58, 91, 95, 145, 227, 231], "valent": [53, 122], "rand": [53, 78, 85, 89, 110, 117, 121, 159, 164, 181], "squeez": 53, "expend_dim": 53, "argmin": [53, 89, 114, 121], "prod": [53, 166], "commm": 53, "chisquar": 53, "p_": [53, 58], "o_": 53, "ij": [53, 55, 56, 78, 84, 171, 178, 179], "histogram": [53, 173, 204, 205], "empir": [53, 56, 70], "plein": [53, 60, 85, 86, 87, 91, 94, 118, 147, 160, 173, 188, 199, 224, 232, 237], "r\u00e9flech": [53, 74, 199], "csr_matrix": [53, 181], "re\u00e7oit": [52, 53, 56, 70, 74, 192, 216, 230, 231, 237], "t\u00e9l\u00e9phon": [53, 60, 232], "portabl": [53, 234], "contact": 53, "chi_squar": 53, "pis": [53, 161], "keepdim": [53, 55], "pj": 53, "pispj": 53, "chi": [53, 127], "5798254016266716": 53, "98556467": 53, "47377301": 53, "77148185": 53, "26135908": 53, "27373018": 53, "0240458": 53, "55360714": 53, "3575369": 53, "71740732": 53, "3260206": 53, "876020129318981": 53, "plusieurs_tirag": 53, "99594032": 53, "67914189": 53, "98105965": 53, "93181536": 53, "86827764": 53, "5000": [53, 77, 96, 163, 165, 181], "407": [53, 205], "785": 53, "1273": 53, "2135": 53, "437878": 53, "49408914": 53, "55030028": 53, "60651142": 53, "66272256": 53, "7189337": 53, "77514485": 53, "83135599": 53, "88756713": 53, "94377827": 53, "99998941": 53, "tient": [52, 53, 54, 56, 85, 106, 111, 113, 114, 117, 161, 216, 224, 230], "sauf": [53, 61, 69, 95, 142, 143, 184, 195, 216, 234, 237, 239], "gross": [21, 53], "creus": [53, 54, 113, 114, 123], "spars": [53, 65, 91], "concret": [53, 61, 216, 219, 231, 237], "ide": 53, "1000000": [53, 153, 209, 216, 234], "setdiag": 53, "python395_x64": 53, "_index": 53, "125": [53, 195, 216], "sparseefficiencywarning": 53, "changing": 53, "sparsity": 53, "expens": 53, "lil_matrix": 53, "_set_arrayxarray": 53, "territoir": 53, "export": [54, 234], "col1": 54, "col2": 54, "schtroumph": 54, "schtroumphet": 54, "offre": [54, 56, 199, 216, 230, 231], "impress": [54, 129, 198], "souven": [54, 63, 94, 112, 199, 230], "particular": [54, 70, 75, 186, 187, 216, 231, 232], "potentiel": [54, 88, 111], "sup055": 54, "notat": [54, 55, 59, 61, 69, 90, 118, 171, 201, 230], "df1": 54, "col3": 54, "ipykernel_5653": 54, "164517544": 54, "settingwithcopywarning": 54, "trying": 54, "row_index": 54, "col_index": 54, "instead": [54, 140, 142], "caveat": 54, "user_guid": 54, "returning": 54, "view": [54, 158], "avert": [54, 231], "stipul": [54, 108, 224, 234], "dispara\u00eetr": [54, 170, 222, 224], "cr\u00e9ent": [54, 224], "congestion": 54, "utilitair": 54, "isna": [54, 85], "to_datetim": [54, 85, 117], "isin": [54, 85], "filt": [54, 69, 165, 232], "quantil": [54, 110, 111, 121], "hospitali": [54, 117], "\u00e9pidem": [54, 78, 85, 86, 117], "gouv": [54, 85, 86, 117], "63352e38": [54, 117], "d353": [54, 117], "4b54": [54, 117], "bfd1": [54, 117], "f1b3ee1cabd7": [54, 117], "08c18e08": 54, "6780": 54, "452d": 54, "9b8c": 54, "ae244ad529b3": 54, "reg": [54, 94, 134, 144, 199, 230], "cl_age90": 54, "hosp": [54, 117], "hospconv": 54, "ssr_usld": 54, "rad": [54, 117], "dc": [54, 117], "219577": 54, "94": [52, 54, 77, 85, 117, 119, 151], "387": [54, 85], "219578": 54, "536": [54, 145], "219579": 54, "129": [54, 143, 154], "219580": 54, "888": [54, 145, 224], "219581": 54, "388": [54, 128], "121": [54, 165], "datetime64": 54, "agg_par_jour": 54, "26110": 54, "1452": 54, "14586": 54, "9311": 54, "1717663": 54, "271176": 54, "26239": 54, "1435": 54, "14707": 54, "9336": 54, "1718630": 54, "271254": 54, "26255": 54, "1465": [54, 145], "14704": 54, "9323": 54, "763": 54, "1719634": 54, "271322": 54, "26253": 54, "1460": 54, "14680": 54, "9344": 54, "1720370": 54, "271394": 54, "26174": 54, "1413": 54, "14658": 54, "9354": 54, "749": 54, "1721380": 54, "271456": 54, "evolu": [54, 85, 113, 114, 132, 135, 141], "hospitalis": [54, 85], "\u00e9chel": [54, 85, 123, 131, 135], "logarithm": [54, 56, 61, 85, 99, 132, 135, 168, 173, 192, 207, 219], "logy": [54, 85, 88], "covid49": 54, "agg_par_jour49": 54, "372": [54, 128, 163], "57846": 54, "1554": 54, "377": [54, 79], "184": [54, 136, 137, 170], "57859": 54, "374": [54, 147], "177": [54, 108, 154, 167], "57877": 54, "375": [54, 145], "175": [52, 54], "57889": 54, "57900": 54, "nag": 54, "736": [54, 117], "rolling": [54, 85], "roll": [54, 56], "857143": 54, "142857": 54, "571429": 54, "428571": [54, 143], "gen": [54, 56, 81, 85], "h\u00f4pital": [54, 85], "gu\u00e9rison": [54, 85], "r\u00e9anim": 54, "d\u00e9cal": [54, 69, 130, 168, 192, 203, 230, 231], "pic": [54, 56, 70, 130], "714286": 54, "285714": [54, 128], "data_last": 54, "ts": [54, 227], "dclag": 54, "shift": [54, 224], "realag": 54, "ts_cor": 54, "corr_dc": 54, "corr_r": 54, "m\u00e9dical": [54, 61], "sir": [54, 85], "sex": 54, "338240": 54, "976": [54, 128], "1766": 54, "338241": 54, "338242": 54, "338243": 54, "338244": 54, "4acad602": 54, "d8b1": 54, "4516": 54, "bc71": 54, "7d5574d5f33e": 54, "iso": [54, 199], "8859": [54, 199], "1911493942": 54, "dtypewarning": 54, "mixed": 54, "specify": [54, 85], "low_memory": 54, "extract_dat": [54, 85], "depart": 54, "region": [54, 85, 186, 187], "libelle_reg": 54, "libelle_dep": 54, "tx_incid": 54, "taux_occupation_sa": 54, "tx_pos": 54, "tx_incid_couleur": 54, "r_couleur": 54, "taux_occupation_sae_couleur": 54, "tx_pos_couleur": 54, "nb_orang": 54, "nb_roug": 54, "90390": 54, "provenc": 54, "alpe": 54, "c\u00e3": 54, "azur": 54, "vauclus": 54, "721489": 54, "orang": [54, 111], "90391": 54, "719256": 54, "90392": 54, "524887": 54, "90393": 54, "566028": 54, "90394": 54, "570747": 54, "chardet": [54, 199, 205], "covid19": [54, 85], "rb": [54, 199, 205, 232], "confident": [54, 199, 205], "issus": [54, 69], "barycentr": [54, 58, 216], "departement_french_2018": 54, "spher": [54, 95], "dep_pos": 54, "code_inse": 54, "nuts3": 54, "surf_km2": 54, "deplong": 54, "deplat": 54, "morbihan": 54, "fr524": 54, "6870": 54, "812320": 54, "846846": 54, "98": [54, 77, 83, 114, 117, 154, 159, 162, 173, 192], "doub": 54, "fr431": 54, "5256": 54, "362722": 54, "165964": 54, "jur": 54, "fr432": 54, "5049": 54, "697361": 54, "729368": 54, "ardech": 54, "fr712": 54, "5566": 54, "425582": 54, "752771": 54, "fr812": 54, "5875": 54, "179861": 54, "993601": 54, "last_extract_dat": 54, "indic_last": 54, "ain": 54, "348764": 54, "099799": 54, "alli": [54, 59], "187644": 54, "393637": 54, "cantal": 54, "669045": 54, "051247": 54, "dr\u00f4m": 54, "167364": 54, "685239": 54, "018230": 54, "090620": 54, "dordogn": 54, "741203": 54, "104948": 54, "girond": 54, "575870": 54, "823614": 54, "land": [54, 186, 187, 239], "783793": 54, "965855": 54, "lot": [54, 186, 187], "garon": 54, "460747": 54, "367964": 54, "bigr1": 54, "bigr2": 54, "SAE": 54, "arden": 54, "640751": 54, "616226": 54, "chi_2": [55, 171], "suivr": [55, 56, 61, 118, 148, 150, 207, 216, 224, 230, 232], "m_": [55, 61, 78, 109, 118, 171, 178, 179], "forall": [55, 56, 58, 61, 62, 70, 85, 171, 182, 183, 195], "bullet": [55, 171], "sum_j": [55, 84, 171, 181], "n_": [55, 171], "n2": [55, 83, 132, 153], "03061224": 55, "95408163": 55, "93877551": 55, "92346939": 55, "8877551": 55, "83163265": 55, "7755102": 55, "71938776": 55, "132": [55, 165], "r\u00f4l": [56, 58, 84, 131, 222, 230, 231, 239], "trad": 56, "concevoir": [56, 58, 192, 216, 224, 232, 237], "sc\u00e9nario": 56, "rendu": 56, "vont": [56, 61, 69, 131, 150, 207, 216, 232, 237], "ultra": 56, "verizon": 56, "speed": [56, 169], "auror": 56, "financial": 56, "market": [56, 70], "cme": 56, "techniqu": [56, 58, 121, 154, 166, 234], "renaiss": 56, "soin": [56, 60, 113, 114, 115, 116, 206, 224], "bug": [56, 69, 219], "extr\u00eam": [56, 61, 62, 121], "imper": [56, 74, 216], "frequency": 56, "manuel": [56, 232], "servent": [56, 62, 81, 192, 208, 224, 228, 230, 232, 239], "\u00e9lev": [56, 70, 95, 98, 108, 113, 114, 117, 128, 144, 157, 188, 189], "invest": [56, 60, 108], "limit": [56, 61, 75, 84, 121, 189, 195, 224, 231, 237], "cess": [56, 199, 216, 230, 232, 237], "paragraph": [56, 58, 59, 69, 70, 160, 216, 219, 224, 230, 231, 232, 234, 236, 237, 239], "livr": [56, 60, 69, 73, 74, 123, 150, 178, 232], "d\u00e9criv": [56, 59, 158, 231], "mond": [56, 70, 74, 87, 160, 199, 200, 205, 231, 235], "succint": 56, "pr\u00e9tend": 56, "reflet": 56, "exhaust": [56, 57, 129, 216, 224, 230, 231, 232], "bibl": 56, "actif": [56, 184, 237], "hull2011": 56, "paul": 56, "wilmott": 56, "wilmott2008": 56, "cinqu": 56, "conclut": 56, "r\u00e9dact": 56, "cv": [56, 139, 141, 144], "entretien": [56, 61, 90, 123], "vivac": 56, "esprit": [56, 108, 157, 199], "candidat": [56, 141, 199], "intitul": [56, 224], "privat": 56, "equity": [56, 70], "frer": 56, "ennem": 56, "bertrand": 56, "jacquillat": 56, "jacquillat2008": [56, 70], "recueil": 56, "mondial": [56, 61], "pench": [56, 81, 84, 117, 218, 227], "r\u00e9gul": 56, "activ": [56, 222, 224, 237], "tier": [56, 108, 140], "\u00e9tabl": [56, 199], "ile": [56, 70], "cayman": [56, 70], "rocchichristiaens2007": 56, "personnal": 56, "histoir": [56, 60, 111, 159, 206], "henry2008": 56, "Ayant": 56, "pu": [56, 79, 199, 219], "cris": [56, 70], "subprim": [56, 70], "d\u00e9march": 56, "valabl": [56, 69, 230, 231], "surveil": 56, "kaggl": 56, "challeng": 56, "winton": 56, "particip": [56, 95], "explicitent": 56, "winn": 56, "2nd": 56, "nim": 56, "shahbaz": 56, "chahhou": 56, "mohamed": 56, "d\u00e9couvr": [56, 69, 102, 109, 165, 183, 184, 206, 232, 237], "disert": 56, "mendrik": 56, "ramarlin": 56, "publient": 56, "post": 56, "mortem": 56, "pr\u00e9f\u00e9rent": [56, 58, 171, 216, 230, 231], "marcher": 56, "int\u00e9ret": [56, 108], "limitent": 56, "jacent": [56, 158], "vendeur": 56, "acheteur": 56, "ult\u00e9rieur": [56, 69, 216, 231], "matur": [56, 61], "achet": [56, 70, 129, 150], "p\u00e9trol": 56, "engag": [56, 199], "contrat": 56, "transact": 56, "clor": 56, "contract": [56, 75, 108], "caus": [56, 74, 128, 158, 219, 220, 222, 231], "sp\u00e9cul": 56, "ouvert": [56, 219, 232], "pari": 56, "euro": [56, 199], "dollar": 56, "int\u00e9r\u00eat": [56, 62, 69, 87, 108, 118, 154, 188, 199, 216, 231, 232], "vendr": [56, 70], "big": [56, 77, 91], "cap": [56, 108, 176, 177, 214], "mid": [56, 70], "capitalis": 56, "boursi": 56, "secteur": 56, "momentan": [56, 219], "quotidien": [56, 70, 73], "journ": [56, 61, 70, 232], "vingtain": [56, 95], "p\u00e9riod": [56, 83, 85, 199], "soir": [56, 95, 199], "europ\u00e9en": [56, 70], "am\u00e9ricain": [56, 70], "acteur": 56, "attendent": 56, "annonc": 56, "baiss": [56, 141], "satisfact": [56, 95], "m\u00e9nag": 56, "uen": [56, 106], "le\u00e7on": 56, "vagu": [56, 70], "paus": [56, 70, 94], "d\u00e9jeun": [56, 70], "ouvertur": [56, 69, 70, 198, 232], "tomb": [56, 61, 70, 108, 115, 116, 159, 196, 197, 203, 209, 216, 224], "13h30": [56, 70], "organ": [56, 199], "b\u00e2t": [56, 237], "n\u00e9cessitent": [56, 231, 234], "tick": 56, "prochain": [56, 88, 108, 129, 199, 222, 224, 230], "bruit": [56, 86, 109, 110, 130, 181], "r\u00e9percut": [56, 230], "assoc": [56, 59, 61, 69, 84, 95, 102, 192, 219, 224, 230, 231, 237], "intent": [56, 150], "\u00e9cart": [56, 113, 114, 115, 116, 237], "bid": 56, "offer": 56, "spread": 56, "augment": [56, 59, 62, 77, 88, 95, 108, 113, 114, 141, 145, 170, 180, 181, 231, 237], "nettoi": [56, 69, 130, 166, 216, 232], "vend": 56, "cher": [56, 199], "hyp": [56, 126], "agiss": [56, 62], "suffis": [56, 59, 70, 95, 96, 108, 195, 205, 216, 220, 230], "millisecond": [56, 224, 227, 237], "retour": [56, 110, 134, 231, 239], "bours": 56, "banqu": [56, 70, 108, 216], "cac": 56, "x_t": [56, 85], "_t": [56, 184], "journali": 56, "eqnarray": 56, "r_t": [56, 85], "r_": [56, 70], "manipulent": [56, 146, 216, 218, 228, 232], "annualis": 56, "longleftrightarrow": [56, 110, 183], "045": 56, "excellent": [56, 220, 224], "graduel": 56, "pa": [56, 58, 59, 61, 62, 70, 199], "esp": [56, 62, 70, 234], "sum_1": 56, "r_i": 56, "\u00e9ven": [56, 88, 222, 227, 231, 237], "bancair": 56, "proxim": [56, 58, 61], "rho": [56, 61, 176, 177, 230], "r_1": 56, "r_2": 56, "sigma_1": 56, "sigma_2": 56, "1t": 56, "cro": [56, 58, 62], "\u00e9coul": [56, 119, 186, 187, 227, 234], "gliss": 56, "visualis": [56, 61, 84, 132, 135, 207, 230], "gomm": [56, 88], "MA": 56, "d\u00e9centr": 56, "d\u00e9gag": 56, "pr\u00e9voit": [56, 219, 224], "enserrent": 56, "tub": 56, "interval": [56, 195], "couloir": 56, "trader": 56, "o_t": 56, "h_t": 56, "l_t": 56, "c_t": [56, 176, 177], "exponentiel": [56, 61, 117, 231], "accord": 56, "mme_": 56, "mme": [56, 157], "ema": 56, "exponential": [56, 117], "tr_t": 56, "c_": [56, 58, 129], "intra": 56, "semblabl": [56, 129, 224, 231, 239], "r\u00e9activ": [56, 224, 237], "macd": 56, "macd_": 56, "ema_m": 56, "ema_n": 56, "sign": [56, 70, 115, 116, 198, 216, 218, 230, 232], "parabolic": 56, "sar": 56, "stop": [56, 132, 134, 135, 165], "ep": [56, 77], "cro\u00eet": 56, "haussi": 56, "baissi": [56, 70], "situ": [56, 59, 121, 141, 159, 230, 232], "actuel": [56, 74, 89, 94, 111, 112, 216, 227, 237], "dessus": [56, 59, 86, 108, 110, 117, 132, 148, 150, 161, 182, 188, 200, 224, 230, 231, 234, 237], "rsi": 56, "strength": 56, "indicator": 56, "mouv": [56, 224], "u_t": 56, "d_t": [56, 85], "emu_n": 56, "emd_n": 56, "rs_n": 56, "rsi_n": 56, "rachet": 56, "emprunt": [56, 79, 108], "brok": 56, "interd": 56, "d\u00e9couvert": [56, 85, 218], "attrap": [56, 146, 220, 224], "frequ": 56, "fond": [56, 199, 224], "leverag": 56, "anglic": 56, "essort": 56, "f\u00e9d\u00e9ral": 56, "dang": 56, "pert": [56, 83], "ouvr": [56, 69, 232, 239], "discuss": [56, 224], "proposent": [56, 58, 129, 153, 188, 198, 216, 224, 232], "majoritair": [56, 91, 204, 218], "favorisent": 56, "lipp": [56, 70], "british": [56, 70], "virgin": [56, 70], "island": [56, 70], "bermud": [56, 70], "irland": [56, 70], "baham": [56, 70], "guernsey": [56, 70], "antill": [56, 70, 199], "n\u00e9erlandais": [56, 70], "short": [56, 70], "commodity": [56, 70], "advisor": [56, 70], "cta": [56, 70], "fixed": [56, 70], "incom": [56, 70], "arbitrag": [56, 70], "emerging": [56, 70], "macro": [56, 70], "neutral": [56, 70], "vendeux": [56, 70], "\u00e9tendr": [56, 62, 110, 113, 224, 232], "exposit": 56, "focalis": 56, "actual": 56, "mouvement": 56, "essayent": [56, 166], "anticip": [56, 84], "acquisit": 56, "publiqu": [56, 176, 177, 234], "opa": 56, "livraison": 56, "a380": 56, "rentr": [56, 61, 166, 199, 224], "r\u00e9ussit": 56, "connaiss": [56, 60, 61, 62, 74, 96, 129, 184, 230, 234], "bilan": 56, "mati": [56, 119], "commodit": 56, "pr\u00e9dilect": 56, "concernent": [56, 237], "bl\u00e9": 56, "cac40": 56, "promess": [56, 237], "brent": 56, "crud": 56, "oil": 56, "merchantil": 56, "exchang": 56, "nymex": 56, "aug08": 56, "ao\u00fbt": [56, 70, 227], "pai": [56, 108, 230], "affirm": [56, 62, 185, 199], "investisseur": 56, "fass": [56, 74, 111, 112, 132, 199], "tenu": [56, 74, 224], "vers": 56, "forfaitair": 56, "marg": [56, 195, 198], "chambr": 56, "compens": 56, "pali": [56, 70], "ach\u00e8tent": 56, "entendu": 56, "vendent": 56, "pr\u00eat": [56, 61, 108, 237], "jou": [56, 62, 131, 190, 197, 198, 199, 230, 237], "hauss": 56, "pr\u00e9voir": [56, 62, 69, 144, 224, 231], "croissanc": [56, 70], "couvr": [56, 184, 185, 234], "exerc": [56, 61], "confer": 56, "b\u00e9n\u00e9fic": [56, 198], "put": [56, 237], "souhaitent": [56, 74, 231], "regardent": 56, "track": [56, 239], "capac": [56, 74, 144], "synonym": [56, 230], "incertitud": [56, 195], "absenc": [56, 239], "capt": 56, "appuient": [56, 74, 157], "\u00e9mettric": 56, "affair": [56, 70, 148], "constuir": [56, 182, 231], "licenci": 56, "d\u00e9pr\u00e9ci": 56, "entra\u00een": [56, 70, 129, 199, 231], "justif": [56, 95, 108], "corrigent": 56, "int\u00e8grent": 56, "profit": 56, "impass": [56, 95, 137], "errat": 56, "passager": 56, "compr\u00e9hens": [56, 182, 216, 231], "cadr": [56, 69, 199, 230], "longtemp": [56, 61, 118], "annul": [56, 89, 109, 110, 224], "revendr": [56, 70], "avers": 56, "d\u00e9conseil": [56, 74, 198, 230, 231, 232, 234], "fac": [56, 146, 156, 182, 199, 216], "touch": [56, 60, 107, 195, 224, 230, 237], "expert": [56, 62, 230], "\u00e9voqu": [56, 168, 219], "susceptibl": [56, 59, 184, 216, 219, 224, 231, 234, 239], "trentain": [56, 62], "immiscent": 56, "mun": [56, 69, 184, 224, 230], "m\u00e9can": [56, 69, 161, 207, 208, 216, 219, 220, 224, 232, 237], "descend": [56, 61, 216], "stopp": 56, "rapproch": [56, 58, 77, 115, 116, 193, 230], "diminuent": 56, "oscill": 56, "\u00e9quilibr": [56, 61, 199, 207], "perdr": [56, 87, 180, 199, 220], "contrarian": 56, "consensus": 56, "\u00e9tud": [52, 56, 83, 108, 231, 235], "apparten": [56, 62, 78, 84, 152, 216, 231], "rebond": 56, "reviennent": [56, 95, 224], "net": [56, 69, 70, 78, 94, 129, 132, 139, 169, 230, 231, 235], "d\u00e9grad": [56, 70], "kerviel": [56, 70], "janvi": [56, 70], "auparav": [56, 70, 86], "simultan": [56, 224, 230, 231, 237], "d\u00e9crivent": [56, 224, 230], "sant": 56, "entrepris": [56, 199, 231], "cot": 56, "oblig": [56, 62, 152, 199, 216, 217], "r\u00e9guli": [56, 98, 123, 127, 193, 219, 224, 232, 234, 240], "perspect": 56, "centain": [56, 58, 59, 61, 232], "earning": 56, "interest": 56, "tax": [56, 239], "depreci": 56, "amortiz": 56, "ebitd": 56, "revenus": 56, "imp\u00f4t": 56, "dotat": 56, "amort": 56, "provis": 56, "shar": 56, "mbox": 56, "outstanding": 56, "pric": 56, "sal": 56, "revenu": 56, "dividend": 56, "payout": 56, "dpr": 56, "annual": 56, "i_t": [56, 85], "infegal": [56, 62, 70, 234], "extrem": [56, 59, 61, 78, 84, 95, 111, 216], "rebalancing": 56, "guid": [56, 87, 216], "grandeur": [56, 61, 109, 128, 145, 184, 199], "incontest": 56, "markowitz": 56, "re\u00e7ut": 56, "nobel": 56, "traval": [56, 58], "1990": 56, "repos": [56, 77, 87, 232], "sigma_": [56, 70], "alpha_": [56, 70, 109], "alpha_1": [56, 70], "alpha_n": [56, 70], "rho_": 56, "alpha_j": 56, "sigma_j": 56, "covari": [56, 109, 130, 145, 174, 175], "ll": [56, 59, 62, 70, 83, 101, 133, 178, 179, 182, 195, 216, 231], "underset": [56, 62, 70, 195], "supegal": [56, 58, 70], "maximis": [56, 59, 62, 70, 111, 112, 151], "contrain": [56, 70], "assoupl": 56, "r\u00e9solvent": [56, 216], "lagrang": 56, "s\u00e9quentiel": [56, 77, 161], "inegl": 56, "boyd": 56, "admm": 56, "boyd2012": 56, "statistical": [56, 178], "alternating": 56, "cvxgen": 56, "p_i": [56, 58, 62, 159], "cl\u00f4tur": 56, "expriment": [56, 227], "oe": 56, "uvre": 56, "\u00e9paul": 56, "chevron": 56, "contr\u00f4l": [56, 228, 232], "pend": [56, 69, 85, 167, 199, 219, 222, 224, 230, 237], "7822": 56, "7823": 56, "7818": 56, "7819": 56, "1130": 56, "7830": 56, "1543": 56, "7827": 56, "7824": 56, "1244": [56, 145], "7825": 56, "216": [56, 159], "7828": 56, "7833": 56, "640": 56, "7829": 56, "7831": 56, "478": [56, 109], "7821": [56, 145], "716": 56, "7834": 56, "7826": 56, "681": 56, "24h": 56, "immobil": 56, "fermetur": [56, 69, 232], "fur": [52, 56, 62, 234, 239], "informatisent": 56, "ten": [56, 70, 82, 95, 108, 112, 119, 153, 205, 206, 216, 230, 232], "histor": [56, 69, 70, 199], "exploit": [56, 87, 224, 227, 228, 232, 234, 237], "incoh\u00e9rent": [56, 146], "mulitpl": 56, "redescend": 56, "franch": 56, "remont": [56, 79, 219], "inefficac": 56, "dizain": [56, 59, 61], "vendu": [56, 70], "hauteur": [56, 70, 119, 195, 203, 224], "six": [56, 58, 199, 231, 239], "absent": [56, 136, 230], "impr\u00e9vu": 56, "d\u00e9cevoir": 56, "cascad": 56, "vigil": 56, "remettr": 56, "qualit": [56, 60, 62, 77, 134, 138, 140, 143, 145], "\u00e9prouv": [56, 199], "d\u00e9pass": [56, 108, 196, 197], "cert": 56, "permettr": [56, 69, 183, 199, 216, 231, 232, 237], "asset": 56, "tiennent": 56, "frais": 56, "r\u00e9invest": 56, "r\u00e9alit": [56, 199, 216, 230], "Cee": 56, "\u00e9cueil": 56, "in\u00e9vit": [56, 224, 237], "doivent": [56, 69, 70, 172, 188, 192, 216, 224, 230, 231, 234, 239], "connus": [56, 61, 62, 85, 88, 123, 142, 182, 216], "malgr": [56, 60, 144, 161, 220, 230, 231], "avis": [56, 77, 103, 108], "attribu": [56, 216, 230, 231], "slippag": 56, "surviennent": [56, 219, 222, 228], "d\u00e9calag": [56, 96, 192, 199, 230, 231], "d\u00e9faveur": 56, "fraction": 56, "pourcent": 56, "diziem": [56, 237], "n\u00e9glig": 56, "surestim": 56, "donnent": [56, 61, 62, 231], "observent": 56, "d\u00e9cro\u00eetr": [56, 59, 108, 141], "p\u00e9nalis": 56, "davantag": [56, 58, 219, 231], "proportionnel": [56, 59, 77, 91, 154], "sharp": [56, 70], "ref": [56, 59, 132, 134, 135, 139], "finance_rendemnt_anne": 56, "caution": 56, "partiquent": 56, "empruntent": 56, "tripl": [56, 159, 224], "g\u00e8rent": 56, "gratuit": 56, "retranch": [56, 111], "drawdown": [56, 70, 83], "succed": 56, "roul": 56, "reproduisent": [56, 192], "criter": [56, 84, 209, 234], "risk": 56, "repr\u00e9sentent": [56, 59, 61], "pir": [56, 77, 83, 88, 98, 163], "lendemain": 56, "mauv": [56, 62, 70, 132, 139, 140, 145, 230], "Leur": [56, 69, 216, 231], "82": [56, 77, 93, 169], "vraisembl": [56, 62, 85], "r\u00e9percuss": [56, 230], "exp\u00e9rient": [56, 59, 157, 188, 216, 230, 231], "obtien": [56, 70], "passent": [56, 70, 117, 198, 216], "montrent": [56, 70], "confirm": [56, 77, 207], "d\u00e9correl": [56, 61, 113, 114, 123], "permettront": 56, "sc\u00e9nar": [52, 56], "banquair": [56, 70], "alimentair": [56, 70], "autocorrel": [56, 70], "sg": [56, 70], "homogen": [56, 70, 142], "mitig": [56, 70], "perd": [56, 60, 70, 108, 166, 167, 170, 181, 190, 225, 231], "tend": [56, 61, 70, 113, 114, 195], "t_1": [56, 182], "t_2": [56, 182], "p_1": [56, 58, 182], "p_2": [56, 182], "flech": [56, 59, 70], "superposent": [56, 70, 132], "d_i": [56, 178, 179], "potters2005": [56, 70], "diff\u00e9renc": [56, 234], "reconna\u00eet": 56, "bouchaud": [56, 70], "potter": [56, 70], "troisem": [56, 70], "interrog": [56, 62, 97, 216], "Ses": [56, 87, 160], "reproduir": [56, 74, 207], "t\u00f4t": [56, 112, 154, 222], "in\u00e9gal": 56, "coupur": [56, 69, 70, 80, 111, 112, 231], "envisage": [56, 70, 88], "os\u00e9": [56, 70], "ambiti": [56, 234], "alter": [56, 216, 231, 234], "sc\u00e9narios": 56, "volontair": [56, 108, 220], "exager": [56, 237], "visent": 56, "sall": [56, 115, 116], "voi": [56, 61, 157, 194], "sytem": 56, "agent": [56, 169], "micro\u00e9conom": 56, "montent": 56, "baissent": 56, "rentabl": 56, "suppl\u00e9ent": 56, "accel": 56, "capturent": 56, "impr\u00e9visibl": [56, 101, 231, 237], "maximisent": 56, "regularized": 56, "wahlberg": 56, "annergren": 56, "wang": 56, "proceeding": 56, "16th": 56, "ifac": 56, "symposium": 56, "july": 56, "g\u00e9rard": 56, "henry": 56, "eyroll": 56, "pearson": [56, 61], "educ": 56, "puf": 56, "follower": 56, "los": 56, "often": 56, "marc": 56, "jean": [56, 101, 157], "philipp": 56, "r\u00e9f\u00e9renc": [56, 170, 216], "econpaper": 56, "arxiv": 56, "michel": [56, 108, 152], "rocch": 56, "arnaud": 56, "christiaen": 56, "sef": 56, "willmott": 56, "abordent": 57, "strateg": [57, 61, 62, 84, 108, 127, 128, 136, 236, 239], "trading": [57, 83], "financ": 57, "travevelling": 58, "magasin": [58, 60, 182], "probl\u00e9mat": [58, 118, 216], "plannif": 58, "t\u00e2ch": [58, 74, 132, 152, 206, 230, 231, 237, 239], "cepend": [58, 69, 88, 207, 231, 232], "pr\u00e9par": [58, 193, 199], "jouent": [58, 84, 231, 239], "300": [58, 59, 88, 114, 115, 116, 139, 145, 158, 161, 167, 180, 199, 202, 203, 224], "cercl": [58, 62, 115, 116, 129, 224], "converg": [58, 77, 108, 110, 132, 134, 135, 159, 195], "sued": 58, "diver": 58, "vast": 58, "backbon": 58, "heuristic": [58, 59], "espac": [58, 62, 69, 77, 81, 96, 108, 110, 123, 128, 130, 168, 170, 180, 182, 201, 216, 224, 225, 230, 231, 235, 239], "puissent": [58, 232], "organized": 58, "citeindex": 58, "koivisto1999": 58, "vesanto2000": 58, "divers": [58, 77, 232], "reconnaiss": [58, 199], "parol": 58, "d\u00e9form": 58, "mod\u00e9lis": [58, 62, 78, 216], "torsion": 58, "ressemblent": [58, 140], "papillon": 58, "organizing": 58, "agrand": [52, 58], "rejoint": [58, 95], "v_1": [58, 59, 184, 185, 230], "v_n": [58, 59, 184, 185], "p_l": 58, "mod": [21, 58, 69, 77, 111, 132, 134, 140, 142, 157, 166, 176, 177, 198, 216, 219, 230, 237], "c_l": 58, "longleftarrow": [58, 59], "allant": [58, 59, 69, 74, 147, 230], "v_i": [58, 59, 78, 210], "eta": [58, 61, 176, 177], "rcl": [58, 61, 62, 83, 132, 174, 178, 183], "epsilon_0": 58, "d_0": [58, 85], "eta_0": 58, "d\u00e9pendr": [58, 141, 206], "d\u00e9pendent": [58, 59, 74, 82, 206, 230], "suppress": [58, 69, 216], "insert": [58, 69, 88, 95, 166, 208, 224, 225, 231], "maillag": 58, "vid\u00e9o": [58, 59, 198], "esper": [59, 84, 95, 199], "ud": 59, "redond": [59, 182, 216], "d\u00e9barrass": [59, 111, 112], "e_1": [59, 110], "e_n": 59, "emptyset": 59, "quad": 59, "e_i": [59, 78, 79], "neq": [59, 62, 70, 178, 179, 182], "cup": 59, "foreach": [59, 65], "Son": [59, 61, 77, 87, 154, 210, 216, 224, 230, 232], "majeur": [59, 69, 111, 112, 161, 181], "quadrill": 59, "30000": [59, 99, 173], "algo_kruskal_tsp": 59, "3000": [59, 163, 165], "reven": [59, 83, 95, 129, 204, 224, 230, 234], "composent": 59, "trigonometr": 59, "confondus": 59, "ch": [59, 224, 237], "parcouru": [59, 84, 95, 230], "visit": [59, 129, 216, 230, 237], "parcourus": [59, 87], "quelconqu": [59, 69, 109, 111, 138, 146, 183, 230, 231], "appartien": [59, 83], "poursuit": [59, 85, 199, 219, 230], "imperfect": 59, "morceau": [59, 230, 231, 239], "kernighan": 59, "portion": [59, 69, 70, 75, 192, 219, 230, 234, 237], "notin": [59, 62, 110], "v_": [59, 184, 185], "d\u00e9cro\u00eet": [59, 85, 128, 141], "v_j": [59, 78, 210], "v_k": 59, "pr\u00e9c\u00e8dent": [59, 69], "d\u00e9terminent": 59, "resteindr": 59, "concentr": [59, 62, 129, 165], "r\u00e9sorb": 59, "inconv\u00e9nient": [59, 62, 91, 152, 161, 189, 207, 216, 224, 237], "a\u00b5": 59, "lieux": 59, "recens": [59, 69, 96, 216, 225, 228, 231, 234], "travers": [59, 87, 95, 160, 172], "extr\u00e9mit": 59, "ext\u00e9rieur": [59, 69, 192, 216, 224, 230, 231, 236], "libert": [59, 171, 199, 237], "etap": [59, 84, 164, 182], "1500": [59, 137], "scienc": 60, "d\u00e9marrag": 60, "lecteur": 60, "comprend": [60, 64, 69, 146, 207], "d\u00e9monstr": [60, 69, 182], "fidel": 60, "enseign": [60, 61], "plais": 60, "professeur": [60, 210], "digress": 60, "m\u00ealent": 60, "soulign": [60, 69, 70, 216, 231], "assist": 60, "chapitr": [60, 216, 219, 224, 225, 230, 231, 232, 234, 237], "d\u00e9battr": [60, 199], "supposit": 60, "appr\u00e9ci": [60, 62], "tradit": 60, "motiv": [60, 77], "sanction": 60, "aveugl": 60, "invari": [60, 69, 216], "vois": [60, 88, 103], "agenc": [60, 61], "terrain": 60, "r\u00e9sist": 60, "nait": 60, "d\u00e9crir": [60, 188, 200], "ph\u00e9nomen": 60, "bocal": 60, "enivr": 60, "bient\u00f4t": [60, 237], "datascient": 60, "phras": 60, "concis": [60, 231], "charm": 60, "scientif": [60, 224], "d\u00e9duir": [60, 85, 182], "vif": [60, 61], "nourr": 60, "d\u00e9press": 60, "frapp": [60, 199], "clavi": [60, 224, 230], "fascin": 60, "langu": [60, 122, 127, 214, 219, 228], "limpid": 60, "jogging": 60, "menac": 60, "s\u00e9cur": [60, 74, 199], "militair": 60, "bo\u00eet": 60, "tourment": [60, 199], "laisson": 60, "partout": [60, 195, 204, 230], "ustensil": 60, "journal": [60, 205], "intim": 60, "passon": 60, "tripot": 60, "disposit": [60, 62, 223, 232, 234, 237], "v\u00e9rit": [61, 62, 117, 199], "expos": [61, 73, 222, 224], "symbolis": 61, "purist": 61, "diront": 61, "trompeur": [61, 116], "r\u00e9vel": 61, "confondr": [61, 69, 100, 102, 151, 231], "pr\u00e9cieux": [61, 220], "h\u00e9sit": [61, 62, 69, 200], "iri": 61, "t\u00eat": [61, 69, 149, 224], "\u00e9crivent": [61, 172, 232], "x_n": [61, 62, 70, 110, 157, 178, 186, 187, 230], "bilin\u00e9air": 61, "y_i": [61, 62, 77, 109, 110, 111, 112, 113, 114, 132], "simplifi": [61, 62, 69, 74, 81, 94, 103, 148, 164, 218], "_1": 61, "viennent": [61, 147, 182, 237], "beaoucoup": 61, "interviennent": [61, 88, 219, 228], "minuscul": [61, 69, 70, 231, 232], "majuscul": [61, 69, 70, 103, 231, 232], "lettr": [61, 69, 70, 74, 94, 96, 99, 101, 102, 108, 192, 193, 198, 204, 205, 206, 207, 208, 214, 224, 231, 239], "grecqu": 61, "r\u00e9flexion": 61, "min_w": 61, "newton": 61, "synth\u00e9tis": 61, "biolog": 61, "ami": [61, 157], "r\u00e9cit": 61, "endort": 61, "paress": [61, 99], "hasard": [61, 62, 80, 86, 88, 89, 93, 106, 115, 116, 132, 142, 151, 197, 210, 234, 237], "loi": [61, 62, 84, 88, 108, 109, 111, 112, 113, 114, 117, 121, 127, 171, 174, 175, 176, 177, 195, 198], "uniform": [61, 62, 77, 109, 111, 112, 115, 116, 121, 122, 154, 157, 195, 198], "chapeau": 61, "fabriqu": [61, 134, 140], "ampoul": 61, "vision": [61, 182], "y_1": [61, 112], "y_n": [61, 62], "varient": [61, 231], "r\u00e9su": 61, "spearman": 61, "rg_x": 61, "rg_y": 61, "traduct": [61, 234], "volont": 61, "gamm": [61, 176, 177], "ampleur": 61, "math\u00e9maticien": [61, 95], "guerr": 61, "reconstruir": [61, 161], "aimon": 61, "prou": 61, "litt\u00e9ral": [61, 231], "crypt": [61, 96, 176, 177], "uniformis": 61, "garant": [61, 70, 77, 87, 108, 199, 231], "illustrent": [61, 123], "mard": 61, "d\u00e9cembr": [61, 97, 199], "\u00e9col": [61, 74], "dispens": [61, 188], "lyc": [61, 199], "cultur": [61, 62, 74], "auxquel": [61, 74, 87, 199], "quadrupl": [61, 239], "x4": [61, 145], "viterb": 61, "levenstein": [61, 80, 81, 187], "exeric": 61, "embauch": [61, 90, 123], "d\u00e9nomin": [61, 132], "apprendr": [61, 62, 144, 199], "Sa": [61, 224, 230], "plair": 61, "statisticien": 61, "pyramid": [61, 81, 127], "bigarr": [61, 127], "spectral": [61, 123], "manil": 63, "jenkin": [63, 66, 232], "r\u00e9utilis": [64, 69, 74, 82, 218, 224, 230], "vglob": 64, "un_calcul": 64, "contors": 64, "bouton": [64, 69, 237], "somme_doubl": [64, 69], "test_somme_doubl": [64, 69], "quiconqu": [64, 69], "bing": [64, 69], "envois": [64, 69], "remote_nam": 65, "url_repo": 65, "upstream_dmlc": 65, "dmlc": 65, "xgboost": 65, "repo": 65, "branchpy": 65, "machinelearning": 65, "cscod": 65, "patch": [65, 115, 116, 155], "ish": 65, "pathspec": 65, "includ": 65, "predictor": 65, "new_branch": 65, "upstream": 65, "rm": [65, 68, 108], "localpath": 65, "hard": 65, "included": [65, 75], "mad": 65, "fetch": 65, "banch": 65, "insid": 65, "sync": 65, "assuming": 65, "reposity": 65, "ongoing": 65, "away": 65, "retain": 65, "may": [65, 230], "seem": 65, "renamed": 65, "renaming": 65, "own": 65, "moved": 65, "delet": [65, 224], "tagged": 65, "declar": 65, "onnx": 65, "extended": 65, "config": [65, 67, 224, 237], "sparsecheckout": 65, "echo": [65, 67, 68], "_unittest": 65, "pyproject": [65, 232], "toml": [65, 232], "cominf": 65, "stor": [65, 68], "onnx_extended": [65, 68], "tag": [65, 239], "thistag": 65, "truc": 66, "crash": 66, "cours": [66, 234, 237], "programmer": 66, "openjdk": 67, "jdk": 67, "wget": 67, "pkg": [67, 68], "sudo": [67, 224], "sh": [67, 68], "deb": 67, "updat": [67, 69, 82, 94, 95, 157, 164, 231, 232], "purg": [67, 68], "nano": 67, "chown": 67, "consol": 67, "next": [67, 165, 186, 187, 207, 216, 219, 230], "collapsing": 67, "usesecurity": 67, "security": 67, "ls": 68, "cd": 68, "pattern": [68, 216, 224, 239], "autoremov": 68, "aptitud": 68, "dpkg": 68, "xarg": 68, "fi": [68, 161, 224, 232], "files0": 68, "sed": 68, "rn": 68, "causing": 68, "mtim": 68, "exec": [68, 165, 180, 216, 219, 220, 231, 234], "fuser": 68, "ncdu": 68, "sfdisk": 68, "lht": 68, "human": 68, "readabl": 68, "shc": 68, "heavy": 68, "folder": 68, "rh": 68, "kill": 68, "pid": 68, "eo": 68, "envvar": 68, "execut": [68, 207, 234], "suffisent": [69, 216], "jun": 69, "gcc": 69, "derri": [69, 77], "commentair": [69, 173, 201, 219, 228, 229, 237], "commencent": [69, 157, 172, 231, 232, 234], "help": [69, 165, 166, 190, 216, 219, 224, 230, 234], "encadr": [69, 113, 216, 231], "\u00e9tal": 69, "sphinx_runpython_extens": [69, 216, 220, 230, 235], "douteux": 69, "incorrect": [69, 102, 216], "\u00e9tend": [69, 224, 231, 232], "\u00e9cras": [69, 232], "apostroph": [69, 231], "guill": 69, "crochet": [69, 163, 231, 239], "usuel": [69, 229], "145": [52, 69, 85, 143, 145, 158], "\u00e9quivaut": [69, 198, 231], "idem": [69, 224], "upper": [69, 96, 103, 131, 157, 185, 231], "isalph": [69, 231], "isdig": [69, 219, 231], "replac": [69, 82, 87, 96, 99, 113, 128, 145, 166, 167, 169, 180, 199, 224, 231, 234, 239], "optionnel": [69, 224, 231], "maxspl": [69, 231, 239], "d\u00e9limiteur": [69, 230, 231], "agglutin": [69, 231], "facult": [69, 70, 210, 216, 219, 230, 231, 239], "affichag": [69, 102, 146, 164, 166, 208, 216, 219, 224, 230, 231, 232, 237], "tronqu": [69, 219, 231], "d\u00e9cimal": [69, 227, 230, 231, 232], "123456789": [69, 231], "2e": 69, "14159": 69, "14e": 69, "support": [69, 74, 99, 100, 225, 231, 237, 239], "iem": [69, 231], "2k": [69, 195, 231], "3k": [69, 231], "pop": [69, 88, 231], "\u00e9changent": [69, 224, 235], "s\u00e9lect": [62, 69, 95, 126, 224, 231], "valeur1": [69, 99, 231], "valeur2": [69, 70, 99, 216, 231], "superflu": [69, 219, 231], "clear": [69, 231, 237], "d2": [69, 80, 93, 106, 111, 113, 114, 157, 183], "d1": [69, 80, 106, 111], "setdefault": [69, 231], "popitem": 69, "contrepart": [69, 70, 216, 231], "encha\u00eenent": 69, "syumbol": 69, "xrang": 69, "li2": 69, "random_matrix": [69, 91], "__enter__": [69, 165, 166, 167, 180], "__exit__": [69, 165, 166, 167, 180], "acceptent": [69, 137, 216, 231], "exemple_fonct": [69, 70, 234], "r1": [69, 111, 112, 121], "r2": [69, 111, 112, 115, 121, 139, 141, 142, 144], "re\u00e7oivent": [69, 224, 230], "follow": [69, 230], "int\u00e9rieur": [69, 70, 188, 192, 216, 219, 224, 230, 231, 232, 237, 239], "r\u00e9percu": 69, "d\u00e9clin": 69, "iterate_double_on_list": 69, "run_python_script_140224195665216": [], "0x7f887d4e1770": [], "ma_cl": 69, "att3": 69, "att4": 69, "constructeur": [69, 146, 148, 150, 188, 217, 219, 224, 232, 237], "calcule4": 69, "pr\u00e9ced": [69, 83, 207, 216, 218, 230, 231, 232, 239], "staticmethod": [69, 70, 216], "calcule_static": 69, "terminent": [69, 82, 231], "__": 69, "__add__": [69, 188, 189, 216], "soustract": [69, 188, 216, 227, 230, 231], "__cmp__": [69, 216], "ma_classe2": 69, "mer": [69, 87, 160, 199, 237], "makebold": 69, "wrapped": 69, "makeitalic": 69, "membr": [69, 182, 216], "_p": 69, "val": [69, 170, 179, 195], "p_get": 69, "p_set": 69, "tabul": [69, 155, 224, 231, 232, 239], "sp\u00e9cifi": [69, 219, 222, 224, 228, 230, 231], "readlin": [69, 182, 198, 199, 232, 239], "backslash": 69, "marquent": [69, 232], "nettoyag": [23, 69, 232], "l_net": [69, 232], "balis": 69, "htmlpars": 69, "sax": [69, 234], "descript": [69, 95], "d\u00e9limit": [69, 232], "hugo": [69, 232], "victor": [69, 232], "miser": [69, 232], "kessel": [69, 232], "joseph": [69, 232], "lion": [69, 232], "woolf": [69, 232], "virgini": [69, 232], "mr": [69, 157, 161, 232], "dalloway": [69, 232], "calvino": [69, 232], "italo": [69, 232], "baron": [69, 232], "perch": [69, 205, 232], "geometr": 69, "deuxiem": [69, 95, 195, 207], "pseudonym": 69, "rattrap": [69, 219], "agir": [69, 219], "exc": [69, 219, 220], "rapportent": 69, "insoup\u00e7on": [69, 219], "imbriqu": [69, 99, 103, 104, 105, 206, 230, 231], "aucunchiffr": [69, 219], "123a": [69, 219], "__doc__": [69, 216, 219, 231, 234], "runpythonerror": [69, 216, 219, 220, 230, 231, 239], "stdin": [69, 216, 239], "invalid": [69, 102], "abcdefghijklmnopqrstuvwxyz": [69, 157], "ef": 69, "entour": [69, 117, 224, 231], "r\u00e9sid": [69, 232], "calcul1": 69, "calcul2": 69, "calcul3": 69, "calculx": 69, "transm": [69, 94, 188, 230], "transmettr": [69, 158, 222, 230, 232, 235, 237], "calcul4": 69, "essay": [52, 69, 79, 96, 102, 108, 115, 116, 134, 139, 195, 205, 216, 219, 231, 237, 239], "ported": 69, "nonetyp": [69, 100], "dropbox": 69, "skydriv": 69, "googledr": 69, "propag": [69, 78, 117], "svn": 69, "tortoisesvn": 69, "caract\u00e9ris": [70, 231], "diff\u00e9renci": [70, 231], "poss\u00e8dent": [70, 216, 224, 231, 234, 237], "corp": [70, 216, 230], "privil\u00e9gi": [70, 199, 216, 231], "comportent": [70, 216, 230], "recouvr": [70, 115, 116, 230], "duplicat": [70, 71], "implic": 70, "target": [70, 71, 158], "volatil": [70, 139], "achat": [70, 129, 150, 199], "conclus": [52, 70, 113, 114, 167], "band": 70, "bolling": 70, "vent": 70, "type_exception_1": [70, 219], "type_exception_": [70, 219], "type_exception_j": [70, 219], "type_exception_n": [70, 219], "apparu": [70, 118, 219, 231, 237], "nom_cl": [70, 216], "condition1": [70, 230], "instruction1": [70, 230], "instruction2": [70, 230], "instruction3": [70, 230], "instruction4": [70, 230], "importlib": [70, 234], "module_exempl": [70, 234], "exemple_vari": [70, 234], "reload": [70, 230, 234], "nom_class": [70, 216], "attribut_stat": [70, 216], "nom_method": [70, 216], "attribut_statique2": [70, 216], "nom_methode_st": [70, 216], "attribut_statique3": [70, 216], "valeur3": [70, 216], "nom_propriet": [70, 216], "fget": [70, 216], "fset": [70, 216], "fdel": [70, 216], "fget_vari": [70, 216], "fset_vari": [70, 216], "attribut_1": [70, 216], "attribut_n": [70, 216], "nom_ancetr": [70, 216], "nom_autre_method": [70, 216], "chez": [70, 86, 103, 199, 216], "exception_typ": [70, 219], "ali": [70, 198, 234], "exemple_cl": [70, 216, 234], "param_1": [70, 216, 230], "param_n": [70, 216, 230], "d\u00e9commmand": [70, 234], "valeur_1": [70, 216, 230], "valeur_n": [70, 216, 230], "nom_attribut": [70, 216], "fonction_nom": [70, 230], "par_1": [70, 230], "par_n": [70, 230], "instruction_1": [70, 230], "instruction_n": [70, 230], "res_1": [70, 230], "res_n": [70, 230], "valeur_2": [70, 230], "param_2": [70, 230], "explic": 71, "faq": 72, "picor": 73, "savent": [73, 200], "p\u00e9riss": 73, "survol": 73, "langgag": 73, "transcript": [74, 216], "d\u00e9butent": [74, 103], "macos": 74, "alleg": 74, "officiel": [74, 198, 239], "gourmand": [74, 77, 232], "d\u00e9fault": [74, 170], "horm": [74, 216, 230, 232], "heureux": [74, 199], "pyp": [74, 234], "florileg": 74, "awesom": [74, 85], "pip": [74, 137, 145], "anglophon": [74, 219], "apparit": [74, 122, 154, 216, 234], "ascii": [74, 220, 228, 231, 232], "charact": [74, 224], "xe9": [74, 178, 179, 231], "pourront": 74, "soulev": 74, "r\u00e9serv": [74, 198], "h\u00f4tel": 74, "vieillot": 74, "obsolet": 74, "lisibil": [74, 224], "autorisent": 74, "publi": 74, "enhanc": 74, "proposal": 74, "calendri": [74, 227, 234], "assemblag": [62, 74, 161, 208, 216, 224, 235, 237], "encha\u00een": [74, 197, 208, 230, 231, 237], "relev": [74, 199], "immens": [74, 77], "manquent": 74, "qualif": 74, "cursus": 74, "scolair": 74, "intemporel": 74, "couvrent": 74, "mail": [74, 232], "serr": 74, "exit": 74, "vis": [74, 209, 232], "copyright": 75, "2024": [75, 97, 133, 145, 227, 231, 237], "permiss": [75, 220, 239], "hereby": 75, "granted": 75, "fre": 75, "obtaining": 75, "softwar": 75, "deal": [75, 186, 187], "without": [75, 224], "restrict": [75, 220], "modify": 75, "publish": [75, 220], "distribut": 75, "sublicens": 75, "sel": [75, 224], "whom": 75, "furnished": 75, "subject": [75, 186, 187, 232], "notic": 75, "shall": 75, "substantial": 75, "provided": 75, "AS": 75, "warranty": 75, "implied": 75, "limited": 75, "warrant": 75, "merchantability": 75, "fitness": 75, "noninfring": 75, "holder": 75, "liabl": 75, "claim": [75, 161], "damag": 75, "liability": 75, "action": [75, 224, 237], "otherwis": [75, 186, 187], "arising": 75, "dealing": 75, "social": [77, 84, 182, 199], "connexion": 77, "lourd": [77, 168], "86": [77, 108, 114, 117, 121, 162, 199, 220, 231], "facebook": 77, "formel": [77, 218], "consid\u00e9ron": 77, "univer": 77, "s_1": [77, 182], "s_2": [77, 182], "ldot": 77, "s_m": [77, 182, 183], "noton": 77, "satisfair": 77, "actualis": 77, "toler": 77, "do\u00eet": 77, "lvert": 77, "rvert": 77, "leq": 77, "geq": 77, "m\u00e9dian": [77, 110], "pr\u00e9senton": 77, "correspondr": [77, 130, 204, 239], "famill": [77, 157, 199], "universel": 77, "mapsto": 77, "h_": 77, "mathrm": 77, "prenon": [77, 188], "arbitrair": 77, "4294967291": 77, "tiron": 77, "sampl": [77, 95, 131, 134, 161], "calculon": 77, "compton": 77, "p_collis": 77, "effectuon": 77, "reiter": 77, "r\u00e9it\u00e9ron": 77, "750": 77, "a_1": 77, "a_2": 77, "essayon": [77, 134, 140, 142, 144, 153, 170], "64bit": 77, "i8": 77, "univers": 77, "\u00e9chantillonag": 77, "b_": 77, "b_max": 77, "b_1": 77, "b_2": 77, "h1": [77, 239], "h2": 77, "initialison": 77, "464": 77, "z\u00e9ros": [77, 110, 151, 170], "consecut": 77, "trailing": 77, "modulus": 77, "lookup": [77, 207], "78": [77, 83, 128, 145, 159], "mod_37bit_posit": 77, "decomposit": [77, 130, 131, 148, 181], "0b10": 77, "0b10000000000": 77, "0b1101": 77, "comparon": [77, 162], "rajouton": 77, "539": 77, "atteindr": [77, 172, 184, 208], "parcouron": 77, "regardon": [77, 131, 135, 144], "card": 77, "384": [77, 83, 112, 128, 132, 180], "remarquon": 77, "divisibl": 77, "dernier": 77, "obtenon": 77, "regroupon": 77, "2500": 77, "median": [77, 110], "1f": 77, "axhlin": 77, "0x7f1d715b2860": 77, "observon": 77, "approx": [77, 194], "rappelon": 77, "size_bound": 77, "satisfais": [77, 216], "effort": [77, 199, 203], "stad": 77, "impair": [77, 84, 95, 106, 176, 177, 200, 201, 231], "rajout": 77, "cf": [77, 132, 237], "estimated": 77, "nonzero": 77, "annotat": 77, "xytext": 77, "arrowprop": 77, "arrowstyl": 77, "pr\u00e9conisent": 77, "precis": [77, 132, 155, 195, 230], "consomm": 78, "ji": 78, "random_adjacency_matrix": 78, "remplissag": 78, "e_j": 78, "random_symmetric_adjacency_matrix": 78, "rnd2": 78, "tqdm": [78, 84, 85, 88, 95, 128, 147, 151, 159, 163, 164, 181], "total_nb1": 78, "nb1": 78, "emptyness": 78, "73it": 78, "0000000e": 78, "4408921e": 78, "total_null": 78, "nb_null": 78, "82it": 78, "90it": 78, "connex_component": 78, "total_cnx": 78, "cnx": 78, "ny": [78, 205], "96it": 78, "accumul": [62, 78, 108], "connex_components_indic": 78, "grenouill": 79, "bond": 79, "barreau": 79, "treiz": 79, "saut": [79, 108, 230], "\u00e9paisseur": [79, 120, 224], "ven": [79, 189, 197], "144": 79, "e_": 79, "geqsl": [79, 83, 132, 163, 183], "grenouille2": 79, "g1": [79, 239], "g2": [79, 216], "grenouille3": 79, "pr\u00e9d\u00e9cesseur": [79, 84], "levenshtein": 80, "tron\u00e7on": [80, 83], "distance_meme_longueur": 80, "abcef": 80, "abcde": 80, "mind": [80, 84], "bbb": [80, 207], "distance_alambique": 80, "verlan": 80, "abc": [80, 87, 118, 157, 214, 231], "ac": [80, 145, 199], "distance_alambiquee_levenstein": 80, "ace": 80, "t\u00e2ton": [81, 224], "occas": [81, 199, 205], "na\u00eff": 81, "restraint": 81, "distance1": 81, "imfo": 81, "distance2": 81, "m1_e": 81, "cab": 81, "abcd": [81, 232], "bcdef": 81, "aim": [62, 81, 169, 178, 179, 199, 216], "distance2_verbos": 81, "disent": 81, "pirat": 81, "distance3": 81, "pimfos": 81, "fastid": 81, "convien": 81, "test_dist_equal": 81, "assert": [81, 121, 122, 134, 146, 148, 151, 156, 172, 207, 211, 216, 230], "test_distance1": 81, "test_dist_diff1": 81, "_a": [81, 184], "a_": [81, 84], "test_distance2": 81, "magnif": 81, "test_dist_diff2": 81, "_ab": 81, "ab_": 81, "a_b": 81, "test_distance3": 81, "incroi": 81, "edit_dist": 81, "agraf": 81, "agra": 81, "test_edit_dist": 81, "r\u00e9muner": 81, "r\u00e9numer": 81, "voudr": [81, 109, 158, 199, 200, 216], "edit_distance2": 81, "cmp_char": 81, "test_special": 81, "test_edit_distance2": 81, "agraff": 81, "\u00e9leph": 81, "\u00e9lef": 81, "edit_distance3": 81, "ins_char": 81, "test_edit_distance3": 81, "adjacent": [82, 106, 184], "uuid": [82, 87], "plot_network": 82, "lang": [82, 87, 235], "digraph": [82, 87], "rankd": 82, "lr": [82, 128, 137], "d\u00e9comment": [82, 87], "hdot": [82, 87], "uid": [82, 87], "uuid4": [82, 87], "viz": [82, 87], "div": [82, 87], "svggraph": [82, 87], "getelementbyid": [82, 87], "innerhtml": [82, 87], "Quelle": [82, 108, 147, 157, 182, 194], "f_": 82, "order_same_weight": 82, "mat2": [82, 91, 198, 216], "order_any_weight": 82, "durat": [82, 144], "duract": 82, "new_end": 82, "subarray": 83, "l_1": 83, "l_2": 83, "l_n": 83, "l_k": 83, "max_": [83, 170, 195], "somme_partiel": 83, "plus_grande_sous_l": 83, "im": [83, 224], "jm": 83, "cout": [83, 106, 118], "l_j": 83, "plus_grande_sous_liste_n2": 83, "l_a": 83, "l_i": 83, "k_1": 83, "k_2": 83, "r\u00e9union": 83, "jonction": 83, "plus_grande_sous_liste_nlnn2_r": 83, "ia": 83, "ja": 83, "ib": [83, 111, 112, 216], "jb": [83, 145], "plus_grande_sous_liste_nlnn2": 83, "160": [83, 180], "896": 83, "256": [83, 90, 106, 145, 199, 205, 228], "512": 83, "4608": 83, "leftrightarrow": [62, 83], "ln_2": [83, 99, 168, 193, 209], "4f": 83, "cumul2": 83, "quatriem": [83, 192], "arrier": [83, 161, 216], "l_": 83, "sommemax": 83, "red\u00e9marr": 83, "plus_grande_sous_liste_n": 83, "el": [83, 94, 163, 198, 216, 231], "li100": 83, "565": [83, 111, 133], "134": 83, "binomial": 84, "adja": 84, "networkx": [84, 95], "from_numpy_array": 84, "with_label": 84, "distrib": [84, 115, 116], "successeur": [84, 106], "pr\u00e9decesseur": 84, "partent": [84, 95], "arrivent": [84, 129], "sup\u00e9rieu": 84, "profond": [84, 216], "2_": 84, "jk": 84, "pq": [84, 176, 177], "3_": 84, "adjan": 84, "coloriag": [84, 97, 127, 172], "c_j": 84, "maj": 84, "queu": [84, 237], "\u00e9paiss": 84, "lois": [84, 115, 116, 174, 175], "admettent": 84, "distribution_to_degree_list": 84, "deg": [84, 145], "nh": 84, "random_graph": 84, "distribution_degre": 84, "n_it": [84, 86], "set_descript": [84, 92], "dj": 84, "incomplet": 84, "ndegre": 84, "ncurrent": 84, "376": 84, "28it": 84, "ipykernel_17111": 84, "4037000715": 84, "userwarning": [84, 85, 129, 137, 222], "382": 84, "61it": [84, 85], "r\u00e9pond": [84, 86, 109, 161, 187, 194, 218, 230, 237], "bloqu": [84, 198, 237], "a_t": [84, 130], "voyon": [84, 111, 112, 128, 132, 134, 135, 136, 141, 145, 200], "random_graph_remov": 84, "last_added": 84, "n_removed": 84, "dh": 84, "341": [84, 220], "30it": 84, "distribution_degree_realis": 84, "sumd": 84, "rejet": 84, "d3a98a30": 85, "893f": 85, "47f7": 85, "96c5": 85, "2f4bcaaa0d71": 85, "total_cas_confirm": 85, "total_deces_hopital": 85, "total_deces_ehpad": 85, "total_cas_confirmes_ehpad": 85, "total_cas_possibles_ehpad": 85, "patients_reanim": 85, "patients_hospitalis": 85, "total_patients_guer": 85, "nouveaux_patients_hospitalis": 85, "nouveaux_patients_reanim": 85, "802": 85, "118431": 85, "28826": 85, "1233": [85, 133], "19272": 85, "653050": 85, "756": 85, "803": 85, "118494": 85, "28837": 85, "1213": [85, 95], "18901": 85, "653734": 85, "804": 85, "118508": 85, "28844": 85, "1214": 85, "18935": 85, "653827": 85, "805": 85, "118633": 85, "28845": 85, "1199": 85, "18742": 85, "654775": 85, "900": [85, 114, 130, 237], "806": [85, 117], "118723": 85, "1173": 85, "18290": 85, "655984": 85, "set_yscal": [85, 132, 135], "courag": [85, 161, 199], "rigour": [85, 139, 142, 174, 175, 181], "death": 85, "country": 85, "githubusercontent": 85, "cssegisanddat": 85, "csse_covid_19_dat": 85, "csse_covid_19_time_ser": 85, "time_series_covid19_": 85, "s_global": 85, "eur": 85, "provinc": 85, "tf": 85, "extract_whole_dat": 85, "confirmed": 85, "recovered": 85, "popul": 85, "67e6": 85, "conc": [85, 235], "infected": 85, "saf": 85, "ipykernel_20449": 85, "102400080": 85, "parsed": 85, "individually": 85, "falling": 85, "ensur": 85, "parsing": 85, "consistent": 85, "161407": 85, "38591184": 85, "38429777": 85, "28408816": 85, "161450": 85, "38599330": 85, "38437880": 85, "28400670": 85, "161474": 85, "38606393": 85, "38444919": 85, "28393607": 85, "161501": 85, "38612201": 85, "38450700": 85, "28387799": 85, "161512": 85, "38618509": 85, "38456997": 85, "28381491": 85, "r\u00e9par": 85, "improvis": 85, "correct_ser": 85, "covid_modified": 85, "09it": 85, "342253": 85, "liss": 85, "recoup": [85, 95, 239], "compartimental": 85, "\u00e9pid\u00e9miolog": [85, 123], "contamin": [85, 117, 130], "malad": [85, 199], "guer": [85, 117], "d\u00e9ced": [85, 117], "changent": [85, 181, 224, 228, 231], "dS": [85, 86], "nu": [85, 86, 117, 160], "dr": [85, 86, 183], "transmiss": 85, "plot_simul": 85, "day0": 85, "true_dat": 85, "infect": 85, "coch": [85, 230], "visibil": 85, "tdf": 85, "sob": 85, "iob": 85, "rob": 85, "dob": 85, "s_0": 85, "i_0": 85, "r_0": 85, "s0": 85, "9990": 85, "i0": [85, 105], "r0": 85, "\u00e9voluent": [85, 155, 224], "masqu": [85, 219, 224, 234], "confin": 85, "reconfin": 85, "temp\u00e9ratur": 85, "lisse_mar": 85, "28305367": 85, "1697884": 85, "1640875027069664": 85, "626756310367156": 85, "9857629613918629": 85, "533445387958945": 85, "transitoir": 85, "simulation_cumule": 85, "minimisent": [85, 110], "i_rang": 85, "beta_rang": 85, "mu_rang": 85, "nu_rang": 85, "error_fct": 85, "err_min": 85, "di0": 85, "j_t": 85, "cum": [85, 154], "gras": 85, "240": [85, 108], "sim_opt": 85, "3f": [85, 109], "3g": 85, "3772": 85, "51it": [85, 151], "188": [85, 108], "39it": 85, "mort": [85, 198], "error_norm": 85, "m3": [85, 211, 224], "45it": [85, 95], "aticl": 85, "modified": [85, 161], "contagion": 85, "italy": 85, "estimating": 85, "simulating": 85, "countr": 85, "s_": [85, 182, 183], "beta_t": 85, "incub": 85, "d_": [85, 178], "inconnu": [62, 85, 204, 231], "epidemic": 85, "identifying": 85, "unreported": 85, "inferent": 85, "modelling": 85, "forecasting": 85, "outbreak": 85, "seird": 85, "covidtrack": 85, "pyepidemic": 85, "pandemic": 85, "control": [85, 224], "modcov19": [], "etrang": [86, 156, 170], "inacessibl": 86, "pann": 86, "ovh": 86, "inaccessibl": [86, 91], "909090909090908": 86, "8909090909090909": 86, "90909091": 86, "89090909": 86, "82883546": 86, "79298272": 86, "18909091": 86, "simulation_bruite": 86, "90629495": 86, "90818313": 86, "0769856": 86, "10853633": 86, "84322669": 86, "77113049": 86, "17022418": 86, "21541865": 86, "sim_bruit": 86, "estimation_coefficient": 86, "645167": 86, "153483": 86, "113224": 86, "prouv": [86, 182], "distance_sim": 86, "1379327480825296": 86, "b0": 86, "m0": 86, "n0": [86, 166, 195], "distance0": 86, "mu0": 86, "nu0": 86, "175492030437819": 86, "21093122422461147": 86, "11141742761811038": 86, "12240477": 86, "1995322": 86, "09668045": 86, "06764482535407212": 86, "0880922396685696": 86, "poem": [87, 160], "arthur": [87, 160], "rimbaud": [87, 160], "voyel": [87, 99, 103, 108, 160], "latent": [87, 160], "corset": [87, 160], "velu": [87, 160], "mouch": [87, 160], "\u00e9clat": [87, 160], "bombillent": [87, 160], "puanteur": [87, 160], "cruel": [87, 160, 199], "golf": [87, 160], "ombre": [87, 160], "candeur": [87, 160], "vapeur": [87, 160], "glaci": [87, 160], "fier": [87, 160], "rois": [87, 160], "frisson": [87, 160], "ombel": [87, 160], "pourpr": [87, 160], "sang": [87, 160, 199], "crach": [87, 160], "rir": [87, 160], "levr": [87, 160], "bel": [87, 160, 224], "coler": [87, 160, 184], "ivress": [87, 160], "p\u00e9nitent": [87, 160], "cycl": [87, 160, 169, 207], "vibr": [87, 160], "divin": [87, 160], "virid": [87, 160], "paix": [87, 160, 184, 199], "p\u00e2t": [87, 160], "sem": [87, 160], "rid": [87, 160], "alchim": [87, 160], "imprim": [87, 160, 237], "front": [87, 160, 237], "studieux": [87, 160], "supr\u00eam": [87, 160, 199], "clairon": [87, 160], "strideur": [87, 160], "\u00e9trang": [87, 131, 160, 199, 216], "silenc": [87, 160, 178, 179], "ange": [87, 160], "omeg": [87, 160], "rayon": [87, 115, 159, 160, 199], "violet": [87, 160], "yeux": [87, 160], "extract_word": [87, 160], "spl": 87, "perf_count": [87, 91, 118, 128, 139, 144, 145, 153, 154, 173, 181, 189, 207, 216], "plus_grand_suffix_commun": 87, "longueur_max": 87, "meilleure_pair": 87, "meilleur_suffix": 87, "pareil": [87, 93, 135, 136, 142, 231], "suffix_map": 87, "\u00e9": [87, 157, 205], "ingr\u00e9dient": 87, "plus_grand_suffix_commun_dictionnair": 87, "debut": [87, 167, 207, 231, 239], "5386918000003789": 87, "17898409999997966": 87, "n_x": 87, "sum_x": 87, "build_tr": [87, 207], "zabc": 87, "\u00ea": 87, "\u00e2": 87, "illisibl": [87, 165, 222, 230, 232, 235], "partiqu": 87, "build_dot": 87, "predecessor": 87, "root_nam": 87, "set2374575491648": 87, "n2374575489600": 87, "e2374575503808": 87, "t2374575329600": 87, "a2374575329984": 87, "l2374575327296": 87, "fin2374494191824": 87, "i2374575817216": 87, "n2374575817280": 87, "e2374575817344": 87, "p2374575817408": 87, "a2374575326656": 87, "t2374575325312": 87, "a2374575330240": 87, "l2374575340416": 87, "c2374575339968": 87, "e2374575595200": 87, "plot_dot": 87, "plus_grand_suffix_commun_dictionnaire_tr": 87, "whole_tr": 87, "23091779999958817": 87, "05081569999947533": 87, "topk_sortall": 88, "topk_idee1ou2": 88, "trich": 88, "d\u00e9brouill": [88, 198], "fairr": 88, "tris": 88, "interstic": 88, "topk_tri_select": 88, "kn": [88, 195], "topk_insert": 88, "topk_fus": 88, "topk": [88, 163], "topk_select_recurs": 88, "topk_select": 88, "pivot_index": 88, "measure_tim": [88, 163, 164], "repeat": [88, 121, 163, 164, 166], "t1": [88, 91, 128, 172, 181, 216], "0023090000031515956": 88, "06701939999766182": 88, "017117299998062663": 88, "0257670000064536": 88, "010535299996263348": 88, "05852940000477247": 88, "perm10000": 88, "006514400003652554": 88, "0134890000044834": 88, "019539000000804663": 88, "041308899999421556": 88, "014250300002458971": 88, "062273499999719206": 88, "perm1000": 88, "501": 88, "71it": [88, 159], "000692": 88, "194126": 88, "003134": 88, "003230": 88, "013448": 88, "015127": 88, "000383": 88, "283472": 88, "001300": 88, "003163": 88, "022354": 88, "010969": 88, "000835": 88, "377026": 88, "001189": 88, "003169": 88, "022742": 88, "024926": 88, "000522": 88, "450699": 88, "001051": 88, "002952": 88, "045683": 88, "038119": 88, "000527": 88, "539852": 88, "001091": 88, "003602": 88, "038593": 88, "026605": 88, "affin": [88, 136], "permn": 88, "70it": 88, "000620": 88, "000124": 88, "000111": 88, "000137": [88, 164], "000411": 88, "000030": [88, 164], "002329": 88, "000275": 88, "000402": 88, "000326": 88, "001340": 88, "000328": 88, "021377": 88, "001635": 88, "005340": 88, "001277": 88, "005500": 88, "005612": 88, "178028": 88, "011507": 88, "034768": 88, "008894": 88, "022889": 88, "066547": 88, "755049": 88, "115708": 88, "361258": 88, "099447": 88, "233724": 88, "paraissent": 88, "n\u00e9glige": [88, 114, 118, 195, 205, 207, 225], "redessin": 89, "distance_vill": 89, "distance_tour": 89, "540451130306862": 89, "dessine_tour": 89, "r\u00e9dig": [89, 216, 231], "ameliore_tour": 89, "transmis": 89, "dist_min": 89, "nb_perm": 89, "nb_it": 89, "extraordinair": [89, 136, 199], "ameliore_tour_renvers": 89, "p0": [89, 188], "spatial": [89, 115, 116, 121], "cdist": [89, 121], "build_permut": 89, "max_dist": 89, "arg_dist": 89, "extrapol": 90, "puissance2k": 90, "sum_k": 90, "a_k": 90, "prod_k": 90, "maxj": 91, "embarrass": 91, "produit_class": 91, "dim1": 91, "dim2": 91, "enquer": [62, 91], "produit_eleg": 91, "k1": 91, "k2": [91, 195], "bigmat": 91, "259": 91, "sonne": 91, "mill": [91, 199], "sabord": 91, "matrice_dicodico": 91, "matrice_dicodico_lc": 91, "song": [91, 137], "produit_elegant_rapid": 91, "produit_elegant_rapide_transform": 91, "mat1": [91, 216], "t2": [91, 98, 128, 159, 172, 181, 216], "dicodico": 91, "dico": [91, 96, 106, 214, 225, 232], "008358499999303604": 91, "10761350000029779": 91, "2080854999985604": 91, "011978200000157813": 91, "28018710000105784": 91, "28202239999882295": 91, "06322960000034072": 91, "7310262999999395": 91, "21729559999948833": 91, "04302850000021863": 91, "25215659999958007": 91, "06354410000130883": 91, "24071189999813214": 91, "08784929999819724": 91, "23844240000107675": 91, "13118289999692934": 91, "2613874999988184": 91, "21261740000045393": 91, "2777879999994184": 91, "22135960000014165": 91, "2984610000021348": 91, "27173079999920446": 91, "28927499999917927": 91, "embl\u00e9mat": 92, "20256988": 92, "27603738": 92, "77763596": 92, "50108287": 92, "07482647": 92, "60880805": 92, "56075455": 92, "9637854": 92, "79735982": 92, "32773718": 92, "65017942": 92, "96827692": 92, "dy": [92, 93, 115, 116, 179], "090536785820115": 92, "plot_point": 92, "impatient": 92, "0it": 92, "720it": 92, "89it": 92, "optimisation_retourn": 92, "random_cit": 93, "39190158": 93, "70104769": 93, "865672": 93, "22913836": 93, "65596723": 93, "32503514": 93, "distance_boucl": 93, "8284271247461903": 93, "513": 93, "slowest": [93, 173], "took": [93, 173], "fastest": [93, 173], "intermediat": 93, "being": [93, 186, 187, 234], "cached": [93, 166], "253": [93, 112, 145], "faveur": 93, "best_cit": 93, "best_dist": 93, "p_cit": 93, "opt_cit": 93, "optimise_random": 93, "n_perm": 93, "pout": 93, "retournement1": 93, "d_av": 93, "og": 93, "siecl": 94, "tiret": 94, "330px": 94, "international_morse_cod": 94, "svg": [94, 166], "mn\u00e9motechn": 94, "d\u00e9codag": [94, 228], "r\u00e9duis": 94, "rit": [94, 232], "man": 94, "who": 94, "laugh": 94, "codingam": 94, "transcr": [94, 216], "eee": 94, "ooo": 94, "eel": 94, "oo": 94, "oooo": 94, "ooooo": 94, "word2mors": 94, "word": [94, 207], "lison": 94, "ooooooo": 94, "ambigu": [94, 149, 216, 231], "deven": [94, 108, 118, 129, 231, 237], "rev_alph": 94, "reg_exp": 94, "hyperprob": 94, "souvien": [94, 198, 199], "dec_exp": 94, "suffir": [94, 152, 154], "decode_mors": 94, "een": 94, "eeee": 94, "eb": 94, "DEE": 94, "gn": 94, "decode_morse_longer_first": 94, "flemm": 94, "plu\u00f4t": 94, "dr\u00f4l": 94, "patron": [94, 199], "ee": 94, "decompose_mors": 94, "letter": 94, "new_opt": 94, "prefix": [94, 214, 231], "startswith": [94, 122, 214, 231], "xa": 94, "dk": [94, 108], "dnt": 94, "dta": 94, "dtet": 94, "na": [94, 114, 147, 149, 160], "naet": 94, "nek": 94, "nent": 94, "netet": 94, "nrt": 94, "tea": [94, 206], "teaet": 94, "teek": 94, "teent": 94, "teet": 94, "teetet": 94, "tert": 94, "tft": 94, "tik": 94, "tint": [94, 205], "tit": 94, "titet": 94, "TUA": 94, "tuet": 94, "xet": 94, "explos": 94, "d\u00e9duis": [94, 111, 180], "t\u00e9l\u00e9graph": 94, "initi": [95, 199], "trajet": 95, "parcourent": [95, 170], "d\u00e9marrent": 95, "posti": 95, "inspect": 95, "already": [95, 166], "downloaded": 95, "146": [95, 158, 161], "carrefour": 95, "873361200000005": 95, "3236609": 95, "8730454": 95, "3235788": 95, "compren": 95, "03562501840766763": 95, "8741849": 95, "3239352": 95, "0937624742737696": 95, "p\u00f4l": 95, "cart\u00e9sien": [95, 202, 203, 230], "porti": 95, "exp\u00e9rimental": 95, "premier": [95, 232], "ais": [62, 95, 158, 216, 230], "id\u00e9al": [95, 119, 130], "interdit": [95, 200, 201, 219, 231], "rendent": [95, 188, 222], "verr": 95, "sept": [95, 231], "pont": 95, "konigsberg": 95, "r\u00e9pondu": [95, 114, 210], "repart": 95, "nx": 95, "add_edg": 95, "rejoign": 95, "nb_edg": 95, "parit": [95, 106, 200], "tien": [95, 199], "r\u00e9duisent": 95, "descendr": 95, "d\u00e9doubl": 95, "edges_from": 95, "total_possible_edg": 95, "fromi2": 95, "new_": 95, "new_d": 95, "535221": 95, "778": 95, "1138": 95, "21316": 95, "538415": 95, "1228": [95, 135], "2258": 95, "545218": 95, "1717": 95, "3748": 95, "557001": 95, "2118": [95, 145], "5500": 95, "574194": 95, "2442": [95, 161], "7470": 95, "602050": 95, "2726": 95, "9624": 95, "642132": 95, "2900": 95, "11810": 95, "3258634178614415": 95, "admissibl": 95, "dedan": [95, 159, 208], "d\u00e9fil": [95, 159], "build_possibl": 95, "i1": [95, 106, 216, 218], "i2": [95, 106, 216, 218], "009382623381497467": 95, "5290": 95, "248170388440608": 95, "initc": 95, "undesired": 95, "912505": 95, "400": [95, 114, 137, 158, 178, 179, 195], "928070": 95, "938916": 95, "1627": [95, 117], "2244": 95, "957763": 95, "1676": 95, "3644": 95, "976823": 95, "1341": 95, "4989": 95, "020697": 95, "833": 95, "5977": 95, "042415": 95, "427": 95, "6489": 95, "062800": 95, "187": [95, 160], "6716": 95, "088837": 95, "6815": 95, "112715": 95, "6856": 95, "138552": 95, "6874": 95, "168428": 95, "197202": 95, "relient": [95, 178, 179], "refair": [95, 185], "122002169199727": 95, "661698849016764": 95, "Mon": 95, "combl": 95, "coinc": [95, 237], "risque": 95, "pourait": 95, "probl\u00e8mat": 95, "making": 95, "directed": 95, "334": [95, 180], "1511": 95, "eulerian_path": 95, "hierholz": 95, "odd": 95, "1327": 95, "10585": 95, "1383": 95, "1423": 95, "133": 95, "1470": 95, "168": [95, 145, 181], "1523": 95, "1589": 95, "1655": 95, "219": [95, 108, 180], "1722": 95, "232": [95, 108, 163, 170], "1796": 95, "1863": 95, "207": [95, 108, 117, 145], "1919": 95, "164": [95, 145, 181], "2003": [95, 237], "2027": 95, "2038": 95, "2039": 95, "2040": 95, "0016168196457467584": 95, "002915457386378182": 95, "004107201738406607": 95, "138": 95, "005201454147672404": 95, "010775423696863674": 95, "street": 95, "016229655482986917": 95, "08264740074165475": 95, "026299568900906643": 95, "jump": 95, "08193964999861593": 95, "provient": [95, 224, 230, 232, 234], "d\u00e9patouill": 95, "entrant": 95, "ramen": [95, 129], "c\u00e9sar": [96, 192, 193], "babbag": 96, "cons\u00e9cut": [96, 118, 130, 151, 196, 239], "apparaiss": [96, 199], "cryptanalys": 96, "diviseur": [96, 230], "d\u00e9crypt": [96, 176, 177], "code_vigener": [96, 192, 193], "message_cod": [96, 192, 193], "ord": [96, 101, 102, 157, 192, 193, 230], "chr": [96, 101, 157, 192, 193, 206, 207, 230], "decodevigener": 96, "codevigener": 96, "pgcd": 96, "decodevigenerelongueurcl": 96, "DES": [96, 199], "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd": 96, "egv": 96, "resultat": [96, 106, 224], "etre": [96, 199], "decodevigenerecl": 96, "d\u00e9cod": [96, 122, 123, 193], "2l": 96, "3l": 96, "cassevigener": 96, "condamn": 96, "gutenberg": [96, 204], "hugo_dernier_jour_condamn": 96, "218451": 96, "ind\u00e9sir": [96, 231, 239], "7000": 96, "cle_cod": 96, "td_note_2006": 97, "td_note_2007": 97, "td_note_2008": 97, "td_note_2009": 97, "td_note_2010": 97, "td_note_2010_rattrap": 97, "td_note_2011": 97, "td_note_2012": 97, "td_note_2013": 97, "td_note_2013_rattrap": 97, "td_note_2014": 97, "td_note_2015": 97, "td_note_2016": 97, "td_note_2017": 97, "broken": 97, "td_note_2018": 97, "td_note_2019": 97, "td_note_2020": 97, "td_note_2021": 97, "td_note_2022": 97, "td_note_2022_rattrapag": 97, "td_note_2022_rattrapage2": 97, "td_note_2023": 97, "1a": [97, 184, 185], "novembr": 97, "rattrapag": 97, "oral": 97, "f\u00e9vri": 97, "octobr": [97, 212, 215], "2021": 97, "septembr": [97, 199], "mul2014": 98, "9899924966004454": [98, 198, 199], "ecir": 98, "ex": [98, 113, 114, 192], "kayak": [98, 99], "kakak": 98, "aill": 98, "contient_": 98, "2i": [98, 163, 230], "12093467645909634": 98, "est_tri": [98, 159], "est_trie_nocopy": 98, "1000000000": [98, 219], "pas_de_voyel": 99, "aeiouy": [99, 103, 108], "bonjour": 99, "revoir": [99, 224], "bnjr": 99, "rvr": 99, "mat_dict": 99, "9289682539682538": 99, "581": 99, "4676254832484": 99, "19981": 99, "39980": 99, "40000": 99, "59978": 99, "60000": 99, "79979": 99, "80000": 99, "119977": 99, "120000": [99, 128], "70000": 99, "139977": 99, "140000": [99, 108], "159978": 99, "160000": [99, 108, 128], "90000": 99, "179974": 99, "180000": [99, 108], "abcdef": 99, "1er": 99, "3em": 99, "afbecd": 99, "kkaay": 99, "strang": 99, "deviennent": [99, 198, 222], "dictionnaire_depart": 99, "dictionnaire_retourn": 99, "it\u00e9reur": 99, "dict_item": [99, 170, 231], "input": [99, 100, 102, 103, 108, 110, 118, 134, 219, 220, 230], "68beadeaff45": 99, "0x0000000006f305e8": 99, "86215c660090": 99, "subscript": 99, "7191411125634257": 99, "ii": [99, 166, 211], "3177321667311": 99, "2036": 99, "4083": 99, "4096": 99, "8178": 99, "8192": 99, "16369": 99, "16384": [99, 231], "32752": 99, "32768": 99, "65519": 99, "65536": 99, "131054": 99, "131072": 99, "262125": 99, "262144": 99, "524268": 99, "524288": 99, "nameerror": [100, 103, 183, 216, 219, 230], "9f18cbb91429": 100, "ma_fonct": 100, "dehor": [100, 131, 132, 172, 192, 208, 216], "expliciti": 100, "ext": [100, 239], "495000": 100, "42400f095e8c": 100, "unsupported": [100, 216], "666": 100, "655479e1d45c": 100, "assignment": [100, 103, 231], "immut": [100, 207, 208, 229], "ma_list": 100, "d3addcc3bdbd": 100, "indexerror": [100, 102, 103, 216, 219, 230], "1eb96223c6dd": 100, "due": 100, "5607f3ee5543": 100, "\u00e9toil": [100, 237], "26184474654812057": 100, "star": 100, "29749469599416334": 100, "305837286201697": 100, "make_squar": 101, "alic": 101, "bob": 101, "Ma": [101, 198], "myster": 101, "u_": [101, 216], "conjectur": [101, 186, 187], "syracus": 101, "6893f4ac9402": 102, "58b7566d9294": 102, "d\u00e9vient": 102, "2f84bd962211": 102, "elu": 102, "somme_caracter": 102, "225cea37f121": 102, "implicitly": 102, "un_sur_d": 102, "pto": 102, "plant": [103, 219], "systemt": 103, "ced82ea8013": 103, "b85136f11268": 103, "maj_voy": 103, "ambig\u00fc": [103, 151], "produis": [103, 108, 230], "6b8ba89606bb": 103, "unhash": [103, 231], "accolad": [103, 231], "pyythoon": 103, "double_voy": 103, "populating": [104, 105, 108], "interact": [104, 105, 108], "namespac": [104, 105, 108], "construit_m": [104, 105, 109], "pointij": [104, 105], "th": [104, 105, 111, 112, 135, 158, 161, 169], "phas": [104, 105, 107, 232], "tinc": [104, 105], "dessin_m": [104, 105], "_subplot": [104, 105], "axessubplot": [104, 105], "0x10128a58": 104, "0x9491390": 104, "0x87cef28": 105, "voisins_a_valeurs_null": 105, "tous_voisins_a_valeurs_null": 105, "liste_point": 105, "fonction_coloriag": 105, "j0": [105, 164], "\u00e9tag": [105, 122], "acolori": 105, "doublon": [105, 182], "surface_colorie": 105, "fonction_coloriage_1000": 105, "0x14675b00": 105, "3258": 105, "0x1bc6a630": 105, "q1": [106, 207], "q2": [106, 207], "ajoute_point": 106, "q3": 106, "adj": [106, 145], "q4": 106, "successeurs_dico": 106, "q5": 106, "suites_chemin": 106, "q6": 106, "chemins2": 106, "q7": 106, "q8": 106, "adjacence8": 106, "che": 106, "garde_3_el": 106, "word2dict": 106, "pyt": 106, "pyth": 106, "pytho": 106, "two_words2dict": 106, "mot1": 106, "mot2": 106, "piton": 106, "pito": 106, "pit": 106, "add_edge_hv": 106, "edge1": 106, "j1": [106, 216], "edge2": 106, "j2": [106, 216], "2pq": 106, "ajoute_diagonal": 106, "effac": [106, 230, 232, 237], "loop_on_edg": 106, "misejour": 106, "plus_court_chemin": 106, "q9": 106, "trie_parit": 106, "carreau": 107, "rx": 108, "0404": 108, "0612080000000002": 108, "mensuel": [108, 200], "capital": 108, "rembours": 108, "mensual": 108, "decompose_mensualit": 108, "029": 108, "570": [108, 112], "6769646931234": 108, "429": [108, 167], "32303530687665": 108, "emprunteur": 108, "int\u00earet": 108, "km": [108, 115, 116], "r\u00e9sulat": 108, "mensualit": 108, "666666666666668": 108, "459": 108, "63104825975415": 108, "consacr": [108, 237], "12y": 108, "somme_maximal": 108, "183000": 108, "somme_maximale_step": 108, "150000": 108, "186": [108, 181], "170000": 108, "236": [108, 145], "190000": 108, "254": [108, 166], "139000": 108, "141000": 108, "142000": 108, "174": [108, 180], "143000": 108, "144000": 108, "145000": 108, "146000": 108, "147000": 108, "182": [108, 160, 181], "148000": 108, "183": [108, 136, 145], "149000": 108, "185": 108, "151000": 108, "152000": 108, "153000": 108, "154000": 108, "155000": 108, "194": 108, "156000": 108, "196": [108, 145, 181, 183, 220], "157000": 108, "158000": 108, "159000": 108, "201": [108, 145], "161000": 108, "162000": 108, "206": 108, "163000": 108, "164000": 108, "209": 108, "165000": 108, "210": [108, 117, 137, 145], "166000": 108, "212": [108, 180, 181], "167000": 108, "214": [108, 180], "168000": 108, "215": 108, "169000": 108, "217": [108, 136, 180], "171000": 108, "172000": 108, "173000": 108, "224": [52, 108, 145], "174000": 108, "226": 108, "175000": 108, "176000": 108, "177000": 108, "231": 108, "178000": 108, "179000": 108, "181000": 108, "238": 108, "182000": 108, "somme_maximale_mois_step": 108, "l0": [108, 216], "175312": 108, "228": [108, 128, 145], "312": 108, "175625": 108, "175937": 108, "176250": 108, "176562": 108, "230": [52, 108, 216], "176875": 108, "177187": 108, "177500": 108, "177812": 108, "178125": 108, "178437": 108, "178750": 108, "179062": 108, "179375": 108, "179687": 108, "180312": 108, "237": 108, "180625": 108, "180937": 108, "181250": 108, "181562": 108, "181875": 108, "182187": 108, "parisien": 108, "sl": [108, 208], "apprtement": 108, "\u00e9conomis": 108, "econom": 108, "eco": 108, "nbm": 108, "015": [108, 165], "25862": 108, "65218705509": 108, "carri": 108, "professionnel": 108, "metr": [108, 183], "parisen": 108, "salair": [108, 199], "exam2016_valu": 108, "bascul": 108, "8000": 108, "offrir": 108, "surface_max": 108, "faill": [108, 231, 232], "a40a30": 108, "2600": 108, "inflat": [108, 200], "egg": [108, 169], "somme_maximale_dicho": 108, "k_max": 108, "182199": 108, "99817640134": 108, "carnet": 108, "importun": 108, "impromptus": 108, "conson": 108, "adel": 108, "gerard": 108, "transforme_numero": 108, "prenom": [108, 208, 225, 230, 235], "numero": [108, 224], "0664342267": 108, "0646342267": 108, "0660342467": 108, "oui": [108, 114, 189, 216, 230], "transforme_numero_enver": 108, "affront": 108, "9b3e94b6565": 108, "unorder": 108, "comparison": [108, 129, 130], "epsilon_": [62, 70, 109, 110, 113, 114], "partial": [109, 110], "generate_xy": 109, "996890181837922": 109, "8750295096923186": 109, "264526460045277": 109, "324063943726332": 109, "718648422500299": 109, "052469543647318": 109, "442689562115705": 109, "861870829036456": 109, "13558433730903707": 109, "5754835901808546": 109, "59230695209076": 109, "6209924216651825": 109, "610357428256408": 109, "3202733390571373": 109, "678403330137792": 109, "96766236219644": 109, "427259745518597": 109, "385862058140737": 109, "273956381823456": 109, "938275166261537": 109, "calcule_exyxyx2": 109, "sx": 109, "sxy": 109, "sx2": 109, "523441805914873": 109, "850511796328412": 109, "88928454527569": 109, "98854258182378": 109, "calcule_ab": 109, "5446995618974346": 109, "859128128176218": 109, "generate_caty": 109, "cat": [109, 134], "132157444058703": 109, "088324149707968": 109, "16315983779393228": 109, "9717657424738734": 109, "843197432779423": 109, "7204386278807904": 109, "89226869979884": 109, "16605748011543708": 109, "02903894820027486": 109, "5787816483863786": 109, "num\u00e9ros": [109, 184, 232], "numero_cat": 109, "ic": 109, "extra": [109, 231], "convert_numpy": 109, "mc": 109, "15485572": 109, "37882494": 109, "37124634": 109, "77476221": 109, "03305199": 109, "92499253": 109, "14818418": 109, "09988478": 109, "yp": [109, 181], "multinomial": [109, 127], "0084452843428675": 109, "155449750270483": 109, "1132607428792447": 109, "897729973062269": 109, "7637316114791164": 109, "566787193134299": 109, "848567708215508": 109, "722503065860707": 109, "8043492141543047": 109, "675781652825997": 109, "histogram_cat": 109, "moyenne_cat": 109, "69914235934335": 109, "4591978296957873": 109, "080382539688736": 109, "induis": 109, "z_i": [109, 110], "obs2": [109, 158], "7763568394002505e": 109, "bigm": 109, "00844528": 109, "08038254": 109, "07193726": 109, "15544975": 109, "45919783": 109, "69625192": 109, "11326074": 109, "65406291": 109, "89772997": 109, "81734743": 109, "76373161": 109, "69546622": 109, "cov": [109, 134, 174, 175], "62221004e": 109, "56972711e": 109, "24829301e": 109, "53176124e": 109, "77901369e": 109, "00966261e": 109, "92890933e": 109, "54535166e": 109, "40725030e": 109, "24510807e": 109, "66666667e": 109, "77777778e": 109, "88888889e": 109, "applymap": 109, "697": 109, "525": 109, "532": 109, "010": [109, 122, 167], "267": 109, "178": [109, 145, 167], "089": 109, "w_i": [109, 110], "obs3": 109, "829591905722086": 109, "2193824894893863": 109, "calcule_erreur": 109, "4723463712054069": 109, "100975199731273": 109, "modal": 109, "categorical": 109, "outill": 109, "regress": [62, 109, 132, 134, 135, 145], "ensemble_aleatoir": 110, "x_m": 110, "regression_lineair": 110, "00144835": 110, "matrice_diagonal": 110, "w_1": [110, 184, 185], "w_n": [110, 184, 185], "beta_": 110, "wx": 110, "wy": 110, "regression_lineaire_pondere": 110, "xt": 110, "01427573": 110, "reciprocal": 110, "calcule_z": 110, "01538305e": 110, "88235294e": 110, "32558140e": 110, "27272727e": 110, "53846154e": 110, "13636364e": 110, "05263158e": 110, "8971776057001": 110, "09487215": 110, "8229016016727": 110, "16379991": 110, "31983967417062": 110, "73034639": 110, "39132855434099": 110, "15204012": 110, "24844521352179": 110, "10443138": 110, "10481587527799": 110, "05258271": 110, "0856692693878": 110, "04297748": 110, "08332794594425": 110, "04131809": 110, "0800296132712": 110, "03867545": 110, "07493795090468": 110, "03459599": 110, "136": 110, "1726": 110, "6000000000004": 110, "1168": 110, "2374836735025": 110, "61874184": 110, "1163": 110, "7683647305184": 110, "38418237": 110, "1161": 110, "75688683": 110, "iteratively": 110, "reweighted": 110, "reprenon": [110, 144], "e_2": 110, "retomb": 110, "ressort": 110, "minor": 110, "atteign": 110, "0465": 110, "posent": [110, 216], "matmul": 110, "mismatch": [110, 166], "gufunc": 110, "signatur": 110, "escali": [111, 112], "0x1f893f9e518": 111, "014962888038782651": 111, "020462778257442693": 111, "022310859639508962": 111, "03078728731371605": 111, "03153252863972433": 111, "somme_diff": [111, 112], "y_k": [111, 112], "476": [111, 167], "2380000000092": 111, "56022222223197": 111, "distance_list": [111, 112], "list_x": [111, 112], "list_y": [111, 112], "custom": [111, 117], "494": 111, "7982222222412": 111, "711": 111, "6476814159435": 111, "552": [111, 112, 145], "0x1f893ea57b8": 111, "reproductibl": 111, "618": 111, "0710615624871": 111, "0x1f8943ece80": 111, "242": 111, "somme_diff_ab": 111, "difference_ab": 111, "optimise_ab": [111, 112], "recalcul": [111, 112, 195], "histogramme_y": 111, "somme_diff_histogramm": 111, "optimise_rapid": [111, 112], "4096814159292": 111, "40968141593424": 111, "contiendront": 111, "fer": [111, 135, 192, 199, 200, 216, 224, 231], "0x1f8944d3ba8": 111, "nuage2": 111, "0x1c0e33655f8": 112, "15754": 112, "105018618644": 112, "19898": 112, "600443365925": 112, "6383487080093": 112, "553": [112, 143, 163], "2184": 112, "8079894060775": 112, "0x1c0e4c6f208": 112, "5154656398129": 112, "789": [112, 220], "156": [112, 131, 142, 154, 195], "7106930739271": 112, "0x1c0e4c90940": 112, "946": [31, 112], "grav": 112, "delta_": 112, "782": 112, "somme_diff2": 112, "difference2": 112, "optimise2": 112, "628": 112, "y_2": 112, "y2_1": 112, "y2_2": 112, "13082": 112, "574312018376": 112, "574312018447": 112, "random_mat": [113, 114], "21542897": 113, "02478399": 113, "89552004": 113, "24733264": 113, "393163": 113, "40164738": 113, "32997878": 113, "70660631": 113, "20765567": 113, "43301488": 113, "m_1": [113, 114, 118], "build_m1": [113, 114], "26184685": 113, "41751593": 113, "53354327": 113, "34849608": 113, "96298222": 113, "51815696": 113, "58374784": 113, "71569523": 113, "12326482": 113, "remis": [113, 114, 224], "v_x": [113, 114], "v_y": [113, 114], "mean_no_nan": [113, 114], "05543522": 113, "0564421": 113, "nanmean": [113, 114], "build_m2": [113, 114], "entourent": 113, "m_3": [113, 114], "fill_column": 113, "col": [113, 114, 128, 216], "nlin": 113, "argsort": 113, "reverse_ord": 113, "bmat": 113, "build_m3": [113, 114], "18717541": 113, "d3": [113, 114, 157], "115": [113, 131, 231], "16303767944946": 113, "990990757306854": 113, "calcul_norm": 113, "puc": [113, 114, 139], "oreil": [113, 114, 139], "experient": [113, 114], "repetit": [113, 114], "25531314": 113, "070392": 113, "57432808": 113, "73422968": 113, "43834865": 113, "07553875": 113, "49648148": 113, "11340377": 113, "116": [31, 43, 113, 230, 241], "28344822": 113, "90363643": 113, "90465816": 113, "88595361": 113, "117": [31, 113, 165, 166, 175, 180], "28824424": 113, "05673836": 113, "37972659": 113, "28703801": 113, "97835736": 113, "49136146": 113, "70723528": 113, "34848088": 113, "10112512": 113, "1306255": 113, "94022724": 113, "91916954": 113, "96721215": 113, "14121786": 113, "35629971": 113, "99870181": 113, "48138722": 113, "00467304": 113, "ratio2": 113, "nerreur": [113, 114], "build_m3_just1": 113, "imin": 113, "imax": 113, "pr\u00e9alabl": [113, 184, 231, 232], "corrcoef": [113, 114], "495": [113, 114], "979253": 113, "308262": 113, "616462": 113, "496": [113, 114, 128], "980323": 113, "790158": 113, "667422": 113, "497": [113, 114], "977415": 113, "050925": 113, "430873": 113, "498": [113, 114, 145, 220, 231], "980746": 113, "885168": 113, "995820": 113, "978955": 113, "935248": 113, "137125": 113, "56987627": 114, "87585938": 114, "21230699": 114, "85706677": 114, "32971056": 114, "31614371": 114, "99469359": 114, "63550262": 114, "90844194": 114, "84040783": 114, "48750338": 114, "92138266": 114, "59978536": 114, "22258934": 114, "72143302": 114, "02229479": 114, "52222862": 114, "1157862": 114, "97598417": 114, "01928312": 114, "09388639": 114, "plus_proch": 114, "colnan": 114, "plus_proche_rapid": 114, "amin": 114, "399": 114, "83806507": 114, "88020645836853": 114, "054794671768933": 114, "9707": 114, "2287": 114, "93113166": 114, "65407502": 114, "59161999": 114, "20763444": 114, "36123306": 114, "49474066": 114, "20767715": 114, "72341549": 114, "99591576": 114, "28602503": 114, "35006845": 114, "18103292": 114, "775306": 114, "15330721": 114, "44248685": 114, "80699951": 114, "70774305": 114, "74452936": 114, "59144759": 114, "22093401": 114, "35913762": 114, "46902292": 114, "02940671": 114, "50112628": 114, "06988804": 114, "66400287": 114, "02826212": 114, "6163169": 114, "98007237": 114, "7964768": 114, "978472": 114, "787724": 114, "693286": 114, "980944": 114, "399139": 114, "579552": 114, "979960": 114, "064428": 114, "893382": 114, "977117": 114, "492200": 114, "140280": 114, "981207": 114, "797778": 114, "785862": 114, "rond": [115, 202], "23606797749979": [115, 230], "585786437626905": 115, "04987562112089": 115, "04023026006364461": 115, "613278941761477": 115, "polair": [115, 230], "table_alea_pol": 115, "2697993898932539": 115, "07781479211233774": 115, "104239515207136": 115, "7109081402403072": 115, "46932352351540807": 115, "3259610442266929": 115, "1743368223886739": 115, "2821629999494295": 115, "skip_": [115, 116], "list_tabl": [115, 116], "7403604958859722": 115, "mur": [115, 116, 184], "151393678876878": 115, "0883943109284333": 115, "2251498896276685": 115, "9591970274173125": 115, "8759281350069976": 115, "8362221630472657": 115, "7566611650530053": 115, "0002849316792242": 115, "5208215962264875": 115, "537577072452744": 115, "650373925673775": 115, "339568894819979": 115, "31652883529303466": 115, "256221251336387": 115, "diametr": 115, "5565818929001787": 115, "05896867240161785": 115, "5288969098327476": 115, "28733719348942466": 115, "6110699282390006": 115, "32241732345580165": 115, "14909553247181195": 115, "9356539992681199": 115, "026230694145464417": 115, "2908024901550055": 115, "4975323234658624": 115, "06918255935350293": 115, "60937258121247": 115, "16579629631884596": 115, "22654870937824634": 115, "12601838486539685": 115, "651232619461013": 115, "05440550117493803": 115, "25693188063963546": 115, "044795815889184576": 115, "07316443943516515": 115, "8533292769508105": 115, "0525413549133239": 115, "add_artist": [115, 116], "position": [62, 115, 116, 224], "hexagonal": [115, 202, 203], "spiral": [115, 116], "improve_distrib": [115, 116], "pjp": [115, 116], "best_sol": [115, 116], "351": [115, 160], "16110855450954664": 115, "13158100390586172": 115, "2384176552949989": 115, "218691822411302": 115, "19838094003303594": 115, "2162723387696761": 115, "20826241454101815": 115, "350": 115, "2094900548253301": 115, "diagramm": [115, 116, 129], "triangul": 115, "delaunay": 115, "voronoi": [115, 116], "voronoi_plot_2d": [115, 116], "vor": [115, 116], "triplot": 115, "simplic": 115, "points2": [115, 116], "vor2": [115, 116], "dela2": 115, "triangl": [115, 116, 200, 203], "\u00e9quilat\u00e9ral": [115, 116, 203], "peux": [115, 116], "points_in_circl": 115, "n_cluster": [115, 116], "copy_x": [115, 116], "n_in": [115, 116], "n_job": [115, 116], "precompute_dist": [115, 116], "random_stat": [62, 115, 116, 134, 139], "tol": [115, 116], "cluster_centers_": [115, 116], "distance_n_t": [115, 116], "22015129672480682": 115, "13834146640009876": 115, "mixtur": [115, 116], "gaussianmixtur": [115, 116], "gau": [115, 116], "means_": [115, 116], "gaussian": [115, 116], "21874003784217044": 115, "2c": 116, "908190224838399": 116, "7798369055014547": 116, "6047310701361788": 116, "538160002945912": 116, "7983390011407794": 116, "6871544213644984": 116, "4887075948495667": 116, "511831256978005": 116, "1962115931817596": 116, "6710676955082597": 116, "8642968594855169": 116, "32893230449174": 116, "500463237472049": 116, "1547646758902923": 116, "7606012466424747": 116, "019429938832147": 116, "6514056477386534": 116, "596586600954664": 116, "05123812953078399": 116, "05320587377518926": 116, "37467460315675805": 116, "4937702081221422": 116, "3485943522613466": 116, "6259118658008394": 116, "1764558984440392": 116, "6004143527243244": 116, "4008125902558497": 116, "052940751769248395": 116, "547095264138868": 116, "7525281574947777": 116, "6243952889602158": 116, "2784959002399452": 116, "16893417347025785": 116, "15965080092875694": 116, "5866949933059173": 116, "6062900542195173": 116, "43564615941411566": 116, "26135901810381923": 116, "2792244176019283": 116, "7961649730497629": 116, "28673576049151195": 116, "08784118387851514": 116, "2840288333247212": 116, "7893555701617381": 116, "6299236074366998": 116, "19575062032543844": 116, "facecolor": 116, "rectangulair": 116, "07797442236028274": 116, "17084871553555847": 116, "16055223380264586": 116, "22481137276979984": 116, "points_in_rectangl": 116, "19622641509433936": 116, "2016527778991591": 116, "14695957901204992": 116, "covid": [117, 123], "435": 117, "2322": 117, "642": 117, "3128": [117, 145], "3580": 117, "1041": 117, "4188": 117, "1251": 117, "695": 117, "452": 117, "608": 117, "1104": 117, "1105": 117, "1106": [117, 167], "1107": 117, "1108": 117, "erron": [117, 118, 144, 219, 230], "donnees_artificiel": 117, "dayofyear": 117, "examen2021": 117, "dure": [117, 144, 145], "nt": [117, 234], "98965342710248": 117, "lifelin": 117, "kaplanmeierfitt": 117, "kmf": 117, "portail": 117, "propagation_n": 117, "propagation_vaccin": 117, "propagation_n_vaccin": 117, "prop": 117, "immunis": 117, "mesure_temps_fonct": 118, "10280692000000005": 118, "bc": [118, 145], "189998290": 118, "18042000": 118, "009560690999999987": 118, "009846866999999992": 118, "001004321000000008": 118, "n_op": 118, "m1_shap": 118, "m2_shap": 118, "185998326": 118, "n_ops_3": 118, "sh1": 118, "sh2": 118, "sh3": 118, "m1_m2m3": 118, "m1m2_m3": 118, "36084000": 118, "testing": [118, 121, 166, 213], "assert_almost_equal": [118, 166, 213], "produit3": 118, "0011657070000000048": 118, "0011010209999999887": 118, "n_ops_4": 118, "sh4": 118, "m1_m2m3m4": 118, "m1m2_m3m4": 118, "m1m2m3_m4": 118, "11331640": 118, "produit4": 118, "000988687999999982": 118, "010446371000000027": 118, "008082993999999956": 118, "0008713240000000155": 118, "0009054390000000013": 118, "m_n": 118, "mm_i": 118, "verront": 118, "n_ops_n": 118, "unexpected": [118, 134, 146, 148, 166], "best_cost": 118, "best_pos": 118, "product_n": 118, "bot": 118, "0009734980000000349": 118, "0009873739999999031": 118, "m5": [118, 224], "9697854": 118, "n_ops_n_opt": 118, "product_n_opt": 118, "0010903469999999516": 118, "0009383259999999893": 118, "01018160299999991": 118, "calcu": 118, "surface_br": 119, "brique_optimal": 119, "surf": 119, "additionnel": 119, "brique_optimale_surplus": 119, "4471428571428575": 119, "4285714285714286": 119, "producteur": 119, "marchandis": 119, "surface_brique2": 119, "brique_optimale_surplus_deux_litr": 119, "surf1": 119, "surf2": 119, "6938095238095245": 119, "7857142857142858": 119, "envoi": [119, 161, 167, 188, 216, 219, 224, 230, 232, 237], "maxxy": 120, "seg": 120, "tree3": 120, "rl": 120, "tree_recurs": 120, "level": [120, 129, 216, 230], "all_seg": 120, "iter_seg": 120, "new_seg": 120, "tree3_al": 120, "re_rnd": 120, "rl_rnd": 120, "a3": [120, 189], "tree_recursive_al": 120, "tirage_al": 121, "n_ru": 121, "n_med": 121, "07629544": 121, "9432004": 121, "52035232": 121, "47051663": 121, "89432851": 121, "07652123": 121, "01653439": 121, "99436816": 121, "1499065": 121, "10758634": 121, "29317605": 121, "76729661": 121, "97237465": 121, "25573414": 121, "60399214": 121, "72086801": 121, "76951744": 121, "75725811": 121, "6663647": 121, "92848284": 121, "07308657": 121, "11122628": 121, "92539686": 121, "48536534": 121, "43820312": 121, "26151317": 121, "74683167": 121, "40646889": 121, "92033983": 121, "88312987": 121, "emp\u00each": [121, 135, 152, 228, 230, 231, 237], "83198031": 121, "96466894": 121, "77179962": 121, "85889438": 121, "8461793": 121, "57370393": 121, "40531662": 121, "22456834": 121, "23536145": 121, "57466486": 121, "82197491": 121, "41002286": 121, "49221173": 121, "36141496": 121, "80702793": 121, "88495069": 121, "04168846": 121, "84550633": 121, "93752849": 121, "91062519": 121, "07690611": 121, "86261363": 121, "32681556": 121, "66757055": 121, "0931767": 121, "69200264": 121, "69223434": 121, "52616512": 121, "57965512": 121, "63777092": 121, "91082466": 121, "23438729": 121, "53420279": 121, "27127587": 121, "62954985": 121, "80840816": 121, "39845012": 121, "48835731": 121, "34532585": 121, "3555345": 121, "94993319": 121, "31340719": 121, "59626523": 121, "351522": 121, "19644616": 121, "00989466": 121, "51327456": 121, "70491577": 121, "52817942": 121, "25799275": 121, "assert_allclos": 121, "test_dist": 121, "tolist": [121, 151, 166], "nm": [121, 195], "plus_proche_medecin": 121, "p_min": 121, "p_max": 121, "floor": [121, 237], "test_grill": 121, "map_grille_indic": 121, "xi": 121, "test_map": 121, "pairwise_distance_grill": 121, "gx": 121, "gy": 121, "test_distance_grill": 121, "415": 121, "470": 121, "8018622000236064": 121, "8201483000302687": 121, "8459657999919727": 121, "8035789999994449": 121, "8155568999936804": 121, "026652099972125143": 121, "01595849997829646": 121, "01231670001288876": 121, "012164799962192774": 121, "011980499955825508": 121, "imaginon": [121, 185, 188, 216], "plus_proche_medecin_grill": 121, "mg": 121, "co\u00efncident": 121, "irait": 121, "nearest": [62, 121, 129, 224], "closest": 121, "\u00e9tranger": [122, 237], "abcdefghuij": 122, "code_def": 122, "0010": 122, "0011": 122, "0100": 122, "0101": 122, "0110": [122, 133], "0111": 122, "ag": 122, "00000110": 122, "correpond": 122, "first_let": 122, "chain": [122, 232], "10010001": 122, "code_def_invers": 122, "decode_rapid": 122, "coding35": 122, "11100": 122, "11101": 122, "11110": 122, "ah": 122, "00011100": 122, "which_coding": 122, "222222222222222": 122, "3333333333333335": 122, "bgbb": 122, "coding235": 122, "011100101": 122, "first_letter": 122, "\u00e9labor": [123, 232], "briqu": [123, 230], "bjkst": 123, "apart": [123, 198, 230, 234], "sird": 123, "cass": [123, 172, 184, 192, 193], "vigener": [123, 127], "mors": [123, 205], "cryptag": [123, 234], "homomorphic": 123, "craig": 123, "gentry": 123, "gin": 127, "pickl": [127, 158, 232, 234, 235], "devin": [127, 199], "magiqu": [127, 206], "clr": [129, 132, 134, 135, 136, 137], "_logistic": [132, 134, 135], "474": [132, 134, 135], "convergencewarning": [132, 134, 135], "lbfg": [128, 132, 134, 135], "failed": [132, 134, 135], "reached": [132, 134, 135], "lim": [132, 134, 135, 180], "increas": [132, 134, 135], "shown": [132, 134, 135], "preprocessing": [131, 132, 134, 135, 144, 145], "logistic": [132, 134, 135, 144], "n_iter_": [132, 134, 135], "_check_optimize_result": [132, 134, 135], "1211": 132, "classifieur": [62, 132, 135, 136, 137, 181], "classes_": [132, 135, 136, 137], "confi": 132, "decision_funct": [130, 132, 134, 135, 137], "1389208": 132, "0757083": 132, "6765228": 132, "53844502": 132, "62378271": 132, "71080774": 132, "predict_prob": [62, 132, 134, 135, 137, 144, 180], "15300558e": 132, "58469944e": 132, "88519638e": 132, "11480362e": 132, "63369265e": 132, "99536631e": 132, "32066047e": 132, "26793395e": 132, "76234016e": 132, "32376598e": 132, "38738587e": 132, "76126141e": 132, "dfsc": [132, 135], "138921": 132, "075708": 132, "676523": 132, "914141": 132, "994176": 132, "visibl": [132, 139, 205, 224, 232], "voul": [132, 199], "changeon": 132, "cloch": 132, "dfpr": [132, 135], "n\u00e9chel": [132, 135], "roc_auc_scor": [132, 135, 137], "fpr0": [132, 135], "tpr0": [132, 135], "thresholds0": [132, 135], "pos_label": [132, 135], "drop_intermediat": [132, 135, 137], "1528": 132, "absconc": 132, "dftp": 132, "002488": 132, "999994": 132, "nen": [132, 141], "aucf": [132, 135], "5f": [132, 135], "nle": [131, 132, 141], "ncet": 132, "under": 132, "curv": 132, "n1": 132, "yt": 132, "9922904817101114": 132, "fontion": 132, "trapz": 132, "m\u00e9triqu": [132, 142], "recall": 132, "247385": 132, "000000e": 132, "396645": 132, "247537": 132, "998232e": 132, "396841": 132, "simplefilt": [144, 222], "yn": 144, "normaliz": [131, 144, 145, 160, 204, 205], "x_train_norm": [144, 145], "x_test_norm": [144, 145], "x_norm": 144, "apppliqu": [144, 235], "fit_transform": [144, 145, 181], "neural_network": [136, 144], "hasattr": [134, 144, 180], "endswith": [144, 231], "regr": 144, "pprint": 144, "_bay": 144, "ardregress": 144, "_hub": 144, "huberregressor": 144, "_bas": [144, 180], "linearregress": [134, 144, 145], "_passive_aggress": 144, "passiveaggressiveregressor": 144, "_quantil": 144, "quantileregressor": 144, "_stochastic_gradient": 144, "sgdregressor": 144, "_theil_sen": 144, "theilsenregressor": 144, "_ransac": 144, "ransacregressor": 144, "_glm": 144, "glm": 144, "poissonregressor": 144, "gammaregressor": 144, "tweedieregressor": 144, "_forest": 144, "randomforestregressor": 144, "extratreesregressor": 144, "_bagging": 144, "baggingregressor": 144, "_gb": 144, "gradientboostingregressor": 144, "_weight_boosting": 144, "adaboostregressor": 144, "_voting": 144, "votingregressor": 144, "_stacking": 144, "stackingregressor": 144, "_hist_gradient_boosting": 144, "gradient_boosting": 144, "histgradientboostingregressor": 144, "_regress": 144, "kneighborsregressor": [138, 139, 140, 141, 142, 143, 144], "radiusneighborsregressor": 144, "_multilayer_perceptron": 144, "mlpregressor": 144, "r2_scor": [134, 139, 141, 142, 143, 144, 145], "score_model": 144, "xtr": 144, "xte": 144, "ytr": 144, "yte": 144, "regressor": [134, 144], "15264869419166682": 144, "0747132999999849": 144, "17989904732301487": 144, "029094200000145065": 144, "06283962040801283": 144, "022322499999972933": 144, "008293681864454783": 144, "019755700000132492": 144, "29442406131949195": 144, "6061727999999675": 144, "09980597599411645": 144, "2597002999996221": 144, "0013198388054543875": 144, "09024569999974119": 144, "00011329963875650328": 144, "02906749999965541": 144, "00012663753861930083": 144, "06156760000021677": 144, "4779574483287953": 144, "056004900000062": 144, "4994834890638471": 144, "7028706000000966": 144, "41813406357742": 144, "2051542999997764": 144, "3223761613299607": 144, "173846099999992": 144, "20700608833439227": 144, "6709999999998217": 144, "4239913847044323": 144, "7730876000000535": 144, "18152755024686895": 144, "06760649999978341": 144, "0004093191012661812": 144, "708230199999889": 144, "19175110270945106": 144, "130972700000257": 144, "294424": 144, "606173": 144, "062840": 144, "022322": 144, "000409": 144, "708230": 144, "000127": 144, "061568": 144, "000113": 144, "029067": 144, "001320": 144, "090246": 144, "008294": 144, "019756": 144, "099806": 144, "259700": 144, "152649": 144, "074713": 144, "179899": 144, "029094": 144, "181528": 144, "067606": 144, "191751": 144, "130973": 144, "207006": 144, "671000": 144, "322376": 144, "173846": 144, "418134": 144, "205154": 144, "423991": 144, "773088": 144, "477957": 144, "056005": 144, "499483": 144, "702871": 144, "ha": [144, 205], "bottom": [144, 186, 187, 224], "pr\u00e9dit": [62, 135, 140, 142, 144], "jointplot": [140, 142, 144], "kde": [140, 142, 144], "ax_marg_y": [140, 142, 144], "sv": 144, "ransac": 144, "estimator_": 144, "intercept_": [133, 144], "3658125914901369": 144, "xn": [131, 144], "6497": [131, 144], "cross_val_scor": [139, 144], "score_model_cross": 144, "1799448611096674": 144, "16609433123462292": 144, "20072693380863527": 144, "mas": 144, "16445120603440527": 144, "15765403941480316": 144, "1786143072062636": 144, "435193799999979": 144, "047846299999946496": 144, "8998543024559884": 144, "5295972496836714": 144, "08733290068040933": 144, "13489810000010038": 144, "00973904451751757": 144, "004417086935930126": 144, "01816079178339436": 144, "11661329999969894": 144, "3139016667645712": 144, "41907116748283557": 144, "224530428533247": 144, "356290799999897": 144, "4384892594797405": 144, "400989908758083": 144, "1372714492625668": 144, "0156056000000717": 144, "0011212946218149167": 144, "00022109795646318986": 144, "0020054507493099116": 144, "3450553999996373": 144, "0005558618017731165": 144, "0021320248191363245": 144, "00030404381558213345": 144, "25818170000002283": 144, "0005670558820739524": 144, "002194268482211603": 144, "0003060535183355695": 144, "3232327999999143": 144, "5150920905590446": 144, "48820834539223157": 144, "5338810535848475": 144, "26701920000005": 144, "43686266293982196": 144, "401753167463089": 144, "4758920210408679": 144, "2353933999997935": 144, "18291148330046114": 144, "15479217393907074": 144, "22140473381847336": 144, "640226099999836": 144, "41442261067915653": 144, "3888441812635889": 144, "43299359267487436": 144, "9275103999998464": 144, "1653286657553436": 144, "0875423648134045": 144, "19788204011638": 144, "1673464000000422": 144, "0008592314579911386": 144, "002575734438727606": 144, "00030815848198539886": 144, "3217153999999027": 144, "438489": 144, "400990": 144, "137271": 144, "015606": 144, "899854": 144, "529597": 144, "087333": 144, "134898": 144, "313902": 144, "419071": 144, "224530": 144, "356291": 144, "000859": [128, 144], "002576": 144, "000308": 144, "321715": 144, "000567": 144, "002194": 144, "000306": 144, "323233": 144, "000556": 144, "002132": 144, "000304": 144, "258182": 144, "001121": 144, "000221": 144, "002005": 144, "345055": 144, "009739": 144, "004417": 144, "018161": 144, "116613": 144, "164451": 144, "157654": 144, "178614": 144, "435194": 144, "165329": 144, "087542": 144, "197882": 144, "167346": 144, "179945": 144, "166094": 144, "200727": 144, "047846": 144, "182911": 144, "154792": 144, "221405": 144, "640226": 144, "414423": 144, "388844": 144, "432994": 144, "927510": 144, "436863": 144, "401753": 144, "475892": 144, "235393": 144, "515092": 144, "488208": 144, "533881": 144, "267019": 144, "nvalid": 144, "\u00e9vinc": 144, "jug": [144, 232], "annot": 146, "mypy": 146, "formatt": [146, 231, 237], "ruff": 146, "0x7fec374f5ed0": 146, "de_autr": 146, "sigma_or_n": [146, 148], "nouvel_ensembl": [146, 148], "rotation1": [146, 156], "rotation2": [146, 156], "test_rotation1": [146, 156], "de0": [146, 156], "assertionerror": [31, 64, 69, 91, 96, 146, 172, 239], "test_rotation2": [146, 156], "virtuel": [147, 158], "range_lik": 147, "0x7f1dc597b220": 147, "\u00e9met": 147, "random_generator": 147, "15382301030555623": 147, "8963148242847391": 147, "5960121288362235": 147, "20451752514212185": 147, "8937299506306294": 147, "leave_generator": 147, "accroch": [147, 218, 237], "textwrap": [147, 149], "add_al": 147, "profondeur_maximal": [147, 149], "pleft": [147, 149], "pright": [147, 149], "bcdefghijkl": 147, "al\u00e9aatoir": 147, "numeros": 147, "3732": 147, "04it": 147, "2136": 147, "80it": 147, "test_compos": 148, "verbeux": [148, 161, 235], "__eq__": [148, 149, 150, 216], "__matmul__": 148, "go\u00fbt": [62, 148], "decompos": 148, "applique_decomposition_identit": 148, "test_decompose1": 148, "test_decompose2": 148, "parent": [148, 224, 234], "considered": 148, "profondeur_somme_count": 149, "sleft": 149, "cleft": 149, "sright": 149, "cright": 149, "6666666666666667": 149, "bizarr": [149, 192, 195], "adjoint": [150, 181], "__repr__": [150, 151, 216, 224], "bought": 150, "similarity": 150, "notimplementederror": [134, 150], "similarit": 150, "addict": 151, "4x4": [151, 196], "creer_jeu": 151, "dim": [130, 151], "position_libr": 151, "nombre_aleatoir": 151, "joue_ligne_colon": 151, "lc": 151, "non_null": 151, "non_null2": 151, "joue_coup": 151, "coup_suiv": 151, "c2048": 151, "calcule_scor": 151, "62it": 151, "84it": 151, "coll": [151, 201], "c2048_4": 151, "sharey": 151, "sharex": 151, "\u00e9leg": [152, 170, 188, 216, 237], "dictionnairr": 152, "846651": 152, "lng": 152, "285811": 152, "orthographi": [152, 219], "autocomplet": 152, "6371": 152, "dlat": 152, "radian": 152, "dlon": 152, "atan2": [152, 216, 230], "station1": 152, "station2": 152, "emil": 152, "zol": 152, "847030": 152, "295262": 152, "6928550943713419": 152, "rigid": 152, "__rshift__": [152, 216], "retir": [153, 198, 224, 237], "diff\u00e9": 153, "minis": 153, "appendleft": [153, 225], "2462739999955374e": 153, "0353370000029826e": 153, "81406999999308e": 153, "796050000029936e": 153, "953019999920797e": 153, "313129999987723e": 153, "568269999956101e": 153, "580999999987398e": 153, "447889999933977e": 153, "401670000057492e": 153, "71205999999438e": 153, "6167699999641626e": 153, "fen": 153, "977897000002485e": 153, "178353999994215e": 153, "823300000178278e": 153, "471699999769044e": 153, "712876000006872e": 153, "798504000003959e": 153, "035500000005414e": 153, "195899999918766e": 153, "84480600000461e": 153, "923587000006591e": 153, "347799999479321e": 153, "471000000601634e": 153, "162": 154, "105": [154, 220, 224], "405": [145, 154], "simulation_multinomial": 154, "library": 154, "ale": [154, 199], "430": 154, "pc": 154, "poids_cumul": 154, "poids_cumule_tr": 154, "009419400001206668": 154, "007181299999501789": 154, "010566299999481998": 154, "0066910000023199245": 154, "007558699999208329": 154, "006804499997087987": 154, "poids_tr": 154, "00013789999866276048": 154, "00010370000018156134": 154, "0004912999975204002": 154, "00014940000255592167": 154, "950000170036219e": 154, "0002525000018067658": 154, "nomrbr": 154, "06869539999752305": 154, "00884070000029169": 154, "08114130000103614": 154, "0094169999974838": 154, "06719900000098278": 154, "01211440000042785": 154, "stockag": 154, "pch": 155, "add_patch": 155, "surface_invers": 155, "6325000000000005": 155, "surface_inverse_dicho": 155, "63232421875": 155, "x3": [145, 155], "y3": 155, "280": [128, 155], "252": [145, 155], "surface_inv_t": 155, "63234375": 155, "d\u00e9fectu": 155, "surface_inv_math": 155, "6324555320336759": 155, "3675444679663242": 155, "152": [155, 162], "coloriage_diagonal": 155, "concr\u00e9tis": 155, "comprom": [155, 178], "exo_d": 156, "am\u00e8nent": 156, "nouveau_d": 156, "tourne_d": 156, "\u00e9thiqu": 157, "valjean": 157, "coset": 157, "fantin": 157, "marius": 157, "pontmercy": 157, "gavroch": 157, "th\u00e9nardi": 157, "antagon": 157, "javert": 157, "monsieur": [157, 161, 208, 218], "madam": 157, "babet": 157, "claquesous": 157, "montparn": 157, "gueulem": 157, "brujon": 157, "bamatabois": 157, "victurnien": 157, "amis": 157, "enjolr": 157, "combeferr": 157, "courfeyrac": 157, "prouvair": 157, "feuilly": 157, "bahorel": 157, "lesgl": 157, "joly": 157, "grantair": 157, "secondair": [157, 237], "favourit": 157, "dahli": 157, "z\u00e9phin": 157, "f\u00e9lix": 157, "tholomyes": 157, "listoli": 157, "fameuil": 157, "blachevel": 157, "fauchelevent": 157, "mabeuf": 157, "azelm": 157, "toussaint": 157, "luc": 157, "gillenormand": 157, "georg": [157, 225], "\u00e9v\u00eaqu": 157, "myriel": 157, "baptistin": 157, "magloir": 157, "gerv": 157, "modulo": [157, 219, 231], "congruentiel": 157, "22695477": 157, "c_n": 157, "\u00e9niem": [157, 239], "hashlib": [157, 234], "unsigned": 157, "5381": 157, "ds_legend": 157, "repartit": 157, "sha256": 157, "encod": [157, 228, 231, 232], "digest": 157, "d4": 157, "light_hash": 157, "d5": 157, "load_ir": 158, "load_dat": 158, "feature_nam": 158, "fleur": 158, "target_nam": 158, "sepal": 158, "petal": 158, "virginic": 158, "147": [145, 158], "148": [158, 173], "n5": 158, "setos": 158, "n4": 158, "lengt": 158, "florid": 158, "georgi": 158, "alask": 158, "quebec": 158, "versicolor": 158, "ireland": 158, "plat": [158, 198], "flatbuffer": 158, "messagepack": 158, "coloriage_carr": 158, "histogramme_rapid": 158, "dummy": [158, 161], "exercice_json_xml": 158, "exercice_regex": 158, "tableau_contingent": 158, "nbheap": 158, "classes_2048": 158, "profile_gin": 158, "pivot_gauss": [158, 164, 213], "profiling_exampl": 158, "classes_metro": 158, "exercice_p": 158, "code_multinomial": 158, "code_liste_tupl": 158, "tri_nlnd": 158, "structures_donnees_convers": 158, "exercice_serialisation_json": 158, "json_text": 158, "res2": 158, "html_text": 158, "to_html": 158, "thead": 158, "styl": [158, 166, 168, 220, 231], "tbody": [158, 169], "df_html": 158, "read_html": 158, "df_locat": 158, "merged": 158, "450": [158, 167, 168, 185], "df_locations2": 158, "dfe": 158, "openpyxl": [158, 232], "myzip": 158, "kernel": [62, 134, 158, 166], "crashed": 158, "executing": 158, "review": 158, "identify": 158, "failur": 158, "href": [158, 169, 199], "aka": 158, "vscodejupyterkernelcrash": 158, "viewoutput": 158, "enregist": 158, "contig\u00fc": 158, "sock": 158, "sotck": 158, "reviendront": 158, "communiqu": [158, 161, 184, 235], "surface_cerl": 159, "surface_cercl": 159, "53981633974483": 159, "quart": 159, "inscrit": [159, 204, 237], "estimation_p": 159, "dedans_enti": 159, "surface_cercle_p": 159, "tri_al": 159, "dommag": 159, "tri_alea2": 159, "m\u00e8nen": 159, "tri_alea3": 159, "eval_c": 159, "cs": 159, "ec": [159, 199], "14it": 159, "alentour": 159, "regular": [160, 198, 239], "exrp": 160, "unicod": [160, 228], "unicodedat": 160, "strip_accent": 160, "nfd": [160, 181], "t\u00eatu": 160, "tetu": 160, "text_sans_accent": 160, "findall": [160, 169, 198, 199, 239], "za": [160, 239], "signifi": [160, 208, 216, 218, 219, 224, 231, 234, 237], "extract_words_lettr": 160, "nje": 160, "nqui": 160, "ngolf": 160, "nlanc": 160, "ndan": 160, "npaix": 160, "nque": 160, "nsilenc": 160, "02d": [160, 198], "296": 160, "301": 160, "346": [160, 167], "h\u00e9t\u00e9rogen": 161, "m\u00e9anism": 161, "lis": [161, 232], "141592653589793": [161, 234], "comp": 161, "314": 161, "320": [128, 161, 170], "conteneur": [161, 231], "wikidat": 161, "magoo": 161, "creator": 161, "millard": 161, "kaufman": 161, "hubley": 161, "cartoon": 161, "aventur": 161, "c\u00e9lebr": 161, "neuf": [161, 188, 231], "simplejson": 161, "ijson": 161, "wikidatawik": 161, "entit": [161, 207, 216, 230], "latest": 161, "lexem": 161, "bz2": 161, "l4": 161, "lemm": 161, "windsurf": 161, "lexicalcategory": 161, "q24905": 161, "q1860": 161, "p5238": 161, "orjson": 161, "mainsnak": 161, "snaktyp": 161, "datavalu": 161, "entity": 161, "numeric": [161, 180, 231], "3324": 161, "l3324": 161, "wikibas": 161, "entityid": 161, "datatyp": 161, "qualifi": 161, "p1545": 161, "2a1ced1dca90648ea7e306acbadd74fc81a10722": 161, "faad30b0": 161, "421c": 161, "803a": 161, "c1fd": 161, "b9a99a0eb35d": 161, "18537": 161, "l18537": 161, "7241753c62a310cf84895620ea82250dcea65835": 161, "d15285a1": 161, "4880": 161, "7a9b": 161, "bb1f": 161, "85403e1a785": 161, "p5187": 161, "monolingualtext": 161, "d4a63d17": 161, "43e": 161, "749d": 161, "5860": 161, "21b90feb83f7": 161, "windsurfing": 161, "grammaticalfeatur": 161, "q10345583": 161, "f3": 161, "q110786": 161, "q3910936": 161, "q51929074": 161, "f4": 161, "windsurfed": 161, "q1392475": 161, "f5": 161, "q1230649": 161, "f6": 161, "gloss": 161, "planch": [161, 199], "u00e0": 161, "voil": 161, "meluncur": 161, "angin": 161, "zh": 161, "u6ed1": 161, "u6d6a": 161, "u98a8": 161, "u5e06": 161, "hant": 161, "tw": 161, "u00e1": 161, "u00edng": 161, "hong": 161, "u00e2ng": 161, "u0e40": 161, "u0e25": 161, "u0e48": 161, "u0e19": 161, "u0e27": 161, "u0e34": 161, "u0e14": 161, "u0e4c": 161, "u0e0b": 161, "u0e23": 161, "u0e1f": 161, "tg": 161, "u0441": 161, "u0451": 161, "u0440": 161, "u0444": 161, "u0438": 161, "u043d": 161, "u0433": 161, "u0431": 161, "u043e": 161, "u0437": 161, "u0448": 161, "u0430": 161, "u043c": 161, "u043b": 161, "u04e3": 161, "purjelautaill": 161, "p5137": 161, "191051": 161, "q191051": 161, "13e5f498": 161, "4deb": 161, "ea41": 161, "4d60": 161, "02c852b88b4c": 161, "p5972": 161, "l144039": 161, "7218013f": 161, "b84b": 161, "40fa": 161, "b57b": 161, "bc1ba2239bb8": 161, "pageid": 161, "54387040": 161, "lastrevid": 161, "1710596079": 161, "22t19": 161, "34z": 161, "l314": 161, "q1084": 161, "q7026": 161, "p5185": 161, "1775415": 161, "q1775415": 161, "45650151": 161, "4ed8": 161, "025d": 161, "e36ef22e6a2": 161, "q146786": 161, "54387050": 161, "684359491": 161, "24t07": 161, "21z": 161, "abandon": [161, 199], "dict2xml": 161, "lde": 161, "dill": [161, 232], "getstat": 161, "et_setstat": 161, "num": [162, 224], "count1": 162, "count2": 162, "count3": 162, "cytoolz": 162, "count4": 162, "swap": 163, "entas": 163, "dessine_t": 163, "_heapify_max_bottom": 163, "_heapify_max_up": 163, "topk_min": 163, "_heapify_max_bottom_posit": 163, "_heapify_max_up_posit": 163, "topk_min_posit": 163, "20001": 163, "div_by_numb": 163, "01it": 163, "deviat": [163, 164], "min_exec": [163, 164], "max_exec": [163, 164], "ttim": [163, 164], "context_siz": [163, 164], "warmup_tim": [163, 164], "001400": 163, "000271": 163, "001090": 163, "001892": 163, "014000": 163, "001138": 163, "002110": 163, "000517": 163, "001622": 163, "003214": 163, "021104": 163, "001633": 163, "001967": 163, "000299": 163, "001747": 163, "002545": 163, "019669": 163, "002969": 163, "002692": 163, "000611": 163, "002081": 163, "003779": 163, "026925": 163, "003983": 163, "4000": 163, "003096": 163, "000276": 163, "002660": 163, "003578": 163, "030960": 163, "003305": 163, "33it": 163, "008493": 163, "001842": 163, "006837": 163, "013038": 163, "084926": 163, "014053": 163, "009114": 163, "002111": 163, "007600": 163, "013480": 163, "091137": 163, "022466": 163, "650": [145, 163], "011651": 163, "003198": 163, "008757": 163, "017215": 163, "116511": 163, "010779": 163, "011374": 163, "001973": 163, "009725": 163, "016044": 163, "113739": 163, "012545": 163, "950": 163, "016104": 163, "003647": 163, "011865": 163, "022728": 163, "161042": 163, "018794": 163, "1100": 163, "_heapify_max_up_position_simpl": 163, "topk_min_position_simpl": 163, "58650968": 164, "72315516": 164, "9137217": 164, "04526746": 164, "70012278": 164, "87604076": 164, "92402115": 164, "36865515": 164, "00362559": 164, "26361505": 164, "pivot_gauss2": 164, "pivot_gauss3": 164, "numpy1": 164, "numpy2": 164, "17it": 164, "000051": 164, "000028": 164, "000125": 164, "000512": 164, "000728": 164, "000045": 164, "000021": [145, 164], "000094": 164, "000447": [145, 164], "000046": [145, 164], "000024": [145, 164], "000110": 164, "000197": 164, "001367": 164, "000253": 164, "001134": 164, "000540": 164, "000623": 164, "002258": 164, "011340": 164, "003184": 164, "001312": 164, "000678": 164, "000639": 164, "002858": 164, "013121": 164, "001035": 164, "000375": 164, "000184": 164, "000233": 164, "000818": 164, "003753": 164, "001292": 164, "001557": 164, "001094": 164, "000686": 164, "003803": 164, "015571": 164, "016613": 164, "000404": 164, "000062": 164, "000331": 164, "000553": 164, "004045": 164, "000364": 164, "000471": 164, "000037": 164, "000440": 164, "000545": 164, "004713": 164, "000482": 164, "003798": 164, "001491": 164, "002594": 164, "007715": 164, "037978": 164, "018972": 164, "001324": 164, "000265": 164, "001054": 164, "002030": 164, "013239": 164, "001341": 164, "000820": 164, "000190": 164, "000602": 164, "001140": 164, "008200": 164, "000651": 164, "004260": 164, "001177": 164, "002724": 164, "006471": 164, "042603": 164, "005198": 164, "001690": 164, "000268": 164, "001100": 164, "002116": 164, "016902": 164, "001080": 164, "009320": 164, "002581": 164, "005762": 164, "013509": 164, "093197": 164, "015497": 164, "001664": 164, "000133": 164, "001458": 164, "001827": 164, "016641": 164, "001309": 164, "005314": 164, "001348": 164, "003848": 164, "008252": 164, "053141": 164, "016670": 164, "001629": 164, "000216": 164, "001459": 164, "002045": 164, "016286": 164, "001499": 164, "011036": 164, "003890": 164, "007070": 164, "018254": 164, "110356": 164, "017467": 164, "002637": 164, "000582": 164, "001846": 164, "003606": 164, "026375": 164, "002417": 164, "021563": 164, "003232": 164, "017314": 164, "029488": 164, "215629": 164, "028747": 164, "004673": 164, "001109": 164, "003391": 164, "005935": 164, "046730": 164, "005792": 164, "profilag": 165, "_gini_sort": 165, "_gini_in": 165, "spy": [165, 166], "centiem": 165, "ralent": [165, 166, 237], "profiler": 165, "disabl": [134, 165, 166, 167, 180], "sortby": [165, 166], "print_stat": [165, 166, 167, 180], "ordered": [165, 166, 167, 180], "ncall": [165, 166, 167, 180], "tottim": [165, 166, 167, 180], "percall": [165, 166, 167, 180], "cumtim": [165, 166, 167, 180], "lineno": [165, 166, 167, 180, 220, 222], "venv": [165, 198], "interactiveshel": [165, 166, 180], "3472": [165, 166, 180], "run_cod": [165, 166, 180], "usr": [165, 180, 198, 220], "codeop": [165, 166, 180], "__call__": [165, 166, 180], "ipykernel_23329": 165, "1877708867": 165, "1359775409": 165, "contextlib": [165, 166], "279": [31, 165, 166, 220], "traitlet": [165, 166], "692": [165, 166], "__get__": [165, 166], "compilerop": [165, 166, 198], "extra_flag": [165, 166], "getattr": [134, 165, 166, 180], "3424": [165, 166], "654": [128, 165, 166], "listcomp": [165, 166, 167, 180, 216], "1229": [165, 166], "user_global_n": [165, 166], "_lsprof": [165, 167], "11038": 165, "682": [145, 165], "841": 165, "4034582288": 165, "024": 165, "436": 165, "003": [165, 167, 180], "909": [145, 165], "002": 165, "914": 165, "058": 165, "060": 165, "007": 165, "398": 165, "392": 165, "039": 165, "026": 165, "008": [165, 166], "_gini_final_fast": 165, "gini_fast": 165, "018": 165, "017": 165, "543": 165, "1862792531": 165, "866": 165, "867": 165, "788": [31, 128, 165], "528": 165, "530": 165, "070": 165, "output_html": 165, "_gini_cumsum2": 165, "_gini_cumsum2b": 165, "gini2": 165, "023": 165, "580": 165, "239060152": 165, "124": [145, 165, 166], "926": 165, "898": 165, "057": 165, "040": 165, "042": 165, "649": 165, "651": 165, "_gini_cumsum3b": 165, "total0": 165, "total1": 165, "_gini_cumsum3": 165, "gini3": 165, "022": [165, 167], "302": 165, "1743022160": 165, "059": 165, "064": 165, "921": 165, "917": 165, "012": [145, 165], "699": 165, "028": [165, 167], "077": 165, "upload": 166, "wikimedi": 166, "9f": 166, "convolutionandpooling": 166, "signal": [166, 237, 239], "convolve2d": 166, "img": [166, 169], "11111111": 166, "000002": 166, "000004": 166, "convolve_na": 166, "9999995": 166, "000001": 166, "convolve_naive2": 166, "999998": 166, "retournent": [166, 231, 239], "test_unitair": 166, "decimal": [166, 230], "devien": 166, "_get_indic": 166, "_is_out": 166, "im2col_na": 166, "kernel_shap": 166, "fill_valu": 166, "output_shap": 166, "middl": 166, "kernel_siz": 166, "data_siz": 166, "i_dat": 166, "i_kernel": 166, "t_dat": 166, "t_kernel": 166, "i_out": 166, "convolve_im2col_na": 166, "conv": 166, "999996": 166, "test_unitaire2": 166, "dirnam": [166, 180, 232], "exec_prefix": 166, "profile_cod": 166, "133426": 166, "847": 166, "424": 166, "ipykernel_8787": 166, "3679460054": 166, "3311625431": 166, "842": [31, 166], "88200": 166, "44100": 166, "006": 166, "fromnumeric": [166, 167, 180], "2979": 166, "_wrapreduct": [166, 167, 180], "dictcomp": [166, 167], "2974": 166, "_prod_dispatch": 166, "profileur": [166, 167], "text_prof": 166, "pre": 166, "00032": 166, "79024": 166, "00211": 166, "78992": 166, "29408": 166, "78693": 166, "00018": 166, "00065": 166, "00448": 166, "00134": 166, "00383": 166, "00025": 166, "ict": 166, "00017": 166, "meth": [134, 166, 216], "00052": 166, "unc": 166, "00155": 166, "ufunc": [166, 167, 180], "24745": 166, "40406": 166, "176400": 166, "08453": 166, "07207": 166, "08270": 166, "00021": 166, "00007": [11, 166], "00010": 166, "00037": 166, "00049": 166, "00019": 166, "00087": 166, "176600": 166, "08463": 166, "88300": 166, "07226": 166, "proc\u00e8dent": 166, "interromp": 166, "enregistrent": [166, 222], "marqueur": 166, "interrompu": [166, 230], "interrompr": [166, 208, 224, 228, 230], "sampling": [166, 185], "d\u00e9buggag": 166, "im2col_recurs": 166, "im2col_naive_implement": 166, "fall_back_dim": 166, "func": [166, 167, 224], "torch": 166, "nn": [139, 140, 166], "unfold": 166, "padding": 166, "switch": 166, "k0": 166, "mini_kernel": 166, "mini_shap": 166, "cc2": 166, "new_shap": 166, "resh": 166, "convolve_im2col_recurs": 166, "test_unitaire3": 166, "r\u00e9impl\u00e9ment": 167, "9644453525543213": 167, "sigma2": 167, "001481771469116211": 167, "doprofil": 167, "normpath": [167, 180], "getcwd": [167, 224, 232], "base_prefix": 167, "dump_stat": 167, "10000000": 167, "6027283668518066": 167, "00013383": 167, "_distn_infrastructur": 167, "1958": 167, "142": [143, 145, 167], "_continuous_distn": 167, "361": 167, "_pdf": 167, "_norm_pdf": 167, "093": 167, "_multiarray_umath": 167, "implement_array_funct": 167, "048": 167, "__array_function__": 167, "internal": 167, "function_bas": 167, "1912": [167, 182, 183], "_insert": 167, "_support_mask": 167, "putmask": 167, "021": 167, "559": 167, "argsreduc": 167, "2406": 167, "2307": 167, "604": 167, "broadcast_array": 167, "stride_trick": 167, "480": [167, 170], "546": 167, "340": 167, "_broadcast_to": 167, "_ufunc_config": 167, "seterr": 167, "atleast_1d": 167, "shape_bas": 167, "416": 167, "_broadcast_shap": 167, "geterr": 167, "538": 167, "seterrobj": 167, "geterrobj": 167, "345": [167, 231], "genexpr": 167, "asarray": 167, "1965": 167, "542": [145, 167], "promote_typ": 167, "425": [145, 167], "_argcheck": 167, "_maybe_view_as_subclass": 167, "2302": 167, "_any_dispatch": 167, "multiarray": 167, "1961": 167, "_shape_dispatch": 167, "ndit": 167, "1908": 167, "_place_dispatch": 167, "_get_support": 167, "asanyarray": 167, "_parse_arg": 167, "_atleast_1d_dispatch": 167, "2401": 167, "_all_dispatch": 167, "_broadcast_arrays_dispatch": 167, "1882781982421875": 167, "ipykernel_29119": 167, "200996087": 167, "guis": 167, "fatal": 168, "dicho": [168, 207], "liste_trie": 168, "recherche_dichotomique_recurs": 168, "parametres": 168, "para\u00eetr": [168, 216], "recherche_dichotomique_recursive2": 168, "pok\u00e9mon": 169, "pokemondb": 169, "demandon": 169, "721": [145, 169], "pok\u00e9dex": 169, "training": [169, 181], "breeding": 169, "databas": 169, "dossi": 169, "shutil": [169, 234], "bs4": 169, "utilison": 169, "mozill": 169, "req": 169, "pokedex": 169, "header": 169, "beautifulsoup": 169, "lxml": 169, "liste_pokemon": 169, "span": [169, 239], "infocard": 169, "lg": 169, "get_pag": 169, "pokemon_nam": 169, "url_pokemon": 169, "get_cara_pokemon": 169, "defaultdict": 169, "vital": 169, "table_body": 169, "findchildren": 169, "findchild": 169, "gettext": 169, "bulbasaur": 169, "ivysaur": 169, "venusaur": 169, "charmand": 169, "charmeleon": 169, "charizard": 169, "squirtl": 169, "spec": 169, "abilit": 169, "ev": [169, 199, 224], "catch": 169, "gend": 169, "hp": 169, "attack": 169, "defens": 169, "sp": [169, 181], "atk": 169, "grass": 169, "seed": 169, "kg": 169, "lb": 169, "overgrowchlorophyll": 169, "hidden": 169, "ability": 169, "0226": 169, "gold": 169, "silv": 169, "cryst": 169, "pok\u00e9ball": 169, "medium": 169, "slow": 169, "monst": 169, "femal": 169, "884": 169, "140": [145, 169], "0002": [133, 145, 169], "0227": 169, "0003": 169, "0228": 169, "0004": [130, 145, 169], "fir": 169, "lizard": 169, "blazesolar": 169, "0229": [145, 169], "dragon": 169, "0005": 169, "flam": 169, "0230": 169, "artwork": 169, "jpg": 169, "out_fil": 169, "copyfileobj": 169, "butterfre": 169, "spearow": 169, "skimag": 169, "imio": 169, "imread": 169, "imshow": [129, 169], "get_xax": [145, 169], "get_yax": 169, "amus": 170, "gh": 170, "er": [170, 211], "recontruir": 170, "36960": 170, "cpython": 170, "dv": 170, "devrion": 170, "max_j": 170, "r\u00e9present": 170, "arr": [170, 197], "\u00e9norm": 170, "9x8": 170, "amat": 170, "aarr": 170, "00984": 170, "00112": 170, "nb_lin": 170, "nb_col": 170, "asymptot": 171, "evident": 171, "chi2_contingency": 171, "chi2": 171, "pvalu": [145, 171], "168598503892621": 171, "4045712090580829": 171, "nj": 171, "nij": 171, "52941176": 171, "88235294": 171, "58823529": 171, "47058824": 171, "61764706": 171, "16176471": 171, "impens": 172, "unit_test": 172, "valeur_attendu": 172, "tour_prend_piec": 172, "test_tour_prend_piec": 172, "tour_prend_piece_tupl": 172, "test_tour_prend_piece_tupl": 172, "_tour_prend_piec": 172, "colori": 172, "find_neighbour": 172, "echiqui": 172, "coloring": 172, "next_cas": 172, "tour_prend_piece_obstacl": 172, "test_": 172, "assurent": 172, "testent": 172, "pytest": 172, "commencenc": 172, "test_tour_prend_piece_obstacle_except": 172, "sorted_hist": 173, "recontruit": 173, "sorted_en": 173, "sort_with_hist": 173, "sort_with_nohist": 173, "immpl\u00e9ment": 173, "smoothsort": 173, "quoiqu": 173, "sort_with_nohist_nocopy": 173, "tableaux_aleatoir": 173, "enss": 173, "fonc": [173, 220], "1e10": [173, 183], "nlnn": 173, "6e": 173, "grossi": [173, 204], "403": 173, "1096": 173, "2980": 173, "8103": 173, "22026": 173, "59874": 173, "162754": 173, "442413": 173, "df100": 173, "dfm": 173, "1e9": 173, "singuli": [174, 239], "z2": [174, 175], "npm": [174, 175], "44444444": 174, "pp": 174, "mp": 174, "lambda_3": 174, "simult": [174, 175], "17179957": 175, "80900898": 175, "53083278": 175, "48698277": 175, "95015277": 175, "66842305": 175, "53400158": 175, "42468545": 175, "41318128": 175, "97269198": 175, "62935172": 175, "0672538": 175, "88952227": 175, "09758362": 175, "36428305": 175, "00968737": 175, "07225686": 175, "0111879": 175, "26264038": 175, "16277675": 175, "05453658": 175, "varvar": 175, "99040557": 175, "31065402": 175, "4426555": 175, "09744081": 175, "13884485": 175, "19784207": 175, "multiply": 175, "95440895": 175, "89026339": 175, "71682496": 175, "91433544e": 175, "55111512e": 175, "77555756e": 175, "44438859e": 175, "60670907e": 175, "88137173e": 175, "square_root_matrix": 175, "30467222": 175, "77731521": 175, "55914512": 175, "95469126": 175, "96344225": 175, "9528626": 175, "tromp": [142, 175, 199, 219], "33226763e": 175, "06581410e": 175, "44089210e": 175, "59780655": 175, "8510365": 175, "45002008": 175, "24634204": 175, "12707857": 175, "14682284": 175, "homomorph": [176, 177], "pr\u00e9serv": [176, 177], "fully": [176, 177], "encrypt": [176, 177], "keygen": [176, 177], "secret": [176, 177], "sk": [176, 177], "pk": [176, 177], "tau": [176, 177], "r_p": [176, 177], "2r": [176, 177], "decrypt": [176, 177], "tutoriel_graph": [178, 179], "xe9cr": [178, 179], "xe0": [178, 179], "minel": [178, 179], "xe9trang": [178, 179], "extr": [178, 179], "xeam": [178, 179], "spanning": [178, 179], "satisf": 178, "laplacien": [178, 179], "construis": [178, 192], "directionnel": 178, "traduisent": 178, "eigen": [178, 179], "eric": 178, "kolaczyk": 178, "compl\u00e9mentair": [178, 232], "phi": 178, "min_": [178, 182, 184, 185], "x_v": 178, "84737386691659533": [178, 179], "95848816613228727": [178, 179], "28893525107454354": [178, 179], "66073249195336492": [178, 179], "60382037086559148": [178, 179], "13747945088383384": [178, 179], "21951613156582261": [178, 179], "040905525433785228": [178, 179], "21613062123493632": [178, 179], "096875623632852625": [178, 179], "99787588721497178": [178, 179], "79337171783327132": [178, 179], "18576957348508683": [178, 179], "78396225027633837": [178, 179], "23875443625588322": [178, 179], "35497638429086975": [178, 179], "8713637939628045": [178, 179], "22983756618811024": [178, 179], "28301724069085921": [178, 179], "99408996134013161": [178, 179], "39792684083973429": [178, 179], "77105362865540716": [178, 179], "75452041353842147": [178, 179], "330325155167562": [178, 179], "24824845436118537": [178, 179], "95998690078041737": [178, 179], "92318434139996397": [178, 179], "38115765401571988": [178, 179], "54660304309415886": [178, 179], "62093667623480242": [178, 179], "58899996464290505": [178, 179], "9017292023892568": [178, 179], "60541336358687847": [178, 179], "28929082523865812": [178, 179], "87925379747840293": [178, 179], "94834058131858756": [178, 179], "61449632813730748": [178, 179], "94264237081849722": [178, 179], "13119804743502139": [178, 179], "44158556198130949": [178, 179], "20660796942108339": [178, 179], "915599021810789": [178, 179], "3097131996826511": [178, 179], "81979953110332837": [178, 179], "89711055197298928": [178, 179], "7298496710091944": [178, 179], "22499060312661545": [178, 179], "072786594549671291": [178, 179], "012604758185058018": [178, 179], "36199484670070914": [178, 179], "92050750708863993": [178, 179], "91447248587261709": [178, 179], "26304069827339327": [178, 179], "026058147250910935": [178, 179], "59289937178711172": [178, 179], "86673111722782969": [178, 179], "70640070176443837": [178, 179], "64096733852134291": [178, 179], "049399266565914535": [178, 179], "54027723332288746": [178, 179], "26450585597978316": [178, 179], "50883097182669357": [178, 179], "91987410679455195": [178, 179], "97753050553942622": [178, 179], "5618293073273094": [178, 179], "27688371997865069": [178, 179], "91241761244784847": [178, 179], "090310675429991605": [178, 179], "90925789663628509": [178, 179], "40628594240956295": [178, 179], "3832814495252409": [178, 179], "66221025722485627": [178, 179], "74928785967005418": [178, 179], "32840192750838815": [178, 179], "25478832731446643": [178, 179], "70269825611412617": [178, 179], "54293534537395793": [178, 179], "87800254191632932": [178, 179], "89603330911109724": [178, 179], "77106655965183546": [178, 179], "29830084404349644": [178, 179], "97117954065316903": [178, 179], "075137754060910056": [178, 179], "086473140735377596": [178, 179], "120307047737505": [178, 179], "073651360408690802": [178, 179], "87835916829742444": [178, 179], "34622147871872355": [178, 179], "20567119579830373": [178, 179], "42658381934346423": [178, 179], "27715586337053655": [178, 179], "87999487046170488": [178, 179], "16364186693234739": [178, 179], "98604111274325335": [178, 179], "31830209002283116": [178, 179], "36372930495109934": [178, 179], "73434680601907532": [178, 179], "65926820980026724": [178, 179], "9830474686174655": [178, 179], "12246834322318068": [178, 179], "0293130665095358": [178, 179], "0529459366329164": [178, 179], "7755737603387041": [178, 179], "2685053357046323": [178, 179], "1926920625846602": [178, 179], "4857321786911326": [178, 179], "1445647965531025": [178, 179], "8943143876324848": [178, 179], "87403644639763023": [178, 179], "6464000746270226": [178, 179], "5545355219233219": [178, 179], "8988261206085766": [178, 179], "0785612031685732": [178, 179], "2948920530351256": [178, 179], "4682717483474708": [178, 179], "2364561845005868": [178, 179], "0695530720860349": [178, 179], "9439062757612424": [178, 179], "9563571060210054": [178, 179], "0678946581365616": [178, 179], "2485209278176157": [178, 179], "6386418932454814": [178, 179], "4800728241977779": [178, 179], "72646452125011518": [178, 179], "8341241854718167": [178, 179], "3482541467971951": [178, 179], "5558692651012178": [178, 179], "5624030818263908": [178, 179], "6768285328272157": [178, 179], "0106699901361971": [178, 179], "9175303893386597": [178, 179], "1087117017596031": [178, 179], "9111941479785823": [178, 179], "70001353796486": [178, 179], "5501953466420737": [178, 179], "8544512068951891": [178, 179], "9246058344257151": [178, 179], "123740240481137": [178, 179], "110657752575519": [178, 179], "0774760107085393": [178, 179], "6547967574269418": [178, 179], "6868873425221045": [178, 179], "9308254017076039": [178, 179], "9448006865754279": [178, 179], "0788555249744247": [178, 179], "396205767032443": [178, 179], "0516249434348621": [178, 179], "42035392996461629": [178, 179], "2989465364173602": [178, 179], "2706795830191275": [178, 179], "651698949077459": [178, 179], "1364194264447973": [178, 179], "3637257964296152": [178, 179], "5082040184760555": [178, 179], "2502121678035314": [178, 179], "5383631321594571": [178, 179], "5274668721202556": [178, 179], "473426056956777": [178, 179], "400114365788911": [178, 179], "0434200740148363": [178, 179], "513062501300436": [178, 179], "718209259961025": [178, 179], "3986743034356737": [178, 179], "0590996420222467": [178, 179], "6632346815268289": [178, 179], "8894243587379433": [178, 179], "2802341564965607": [178, 179], "4921791441653762": [178, 179], "5297912885016269": [178, 179], "5780900056883569": [178, 179], "0634598983096293": [178, 179], "2904478604819776": [178, 179], "0857595813036722": [178, 179], "6366192967000295": [178, 179], "5596385297232223": [178, 179], "3177709282351766": [178, 179], "1361714943468244": [178, 179], "9107871995830976": [178, 179], "7240531749202161": [178, 179], "8033709892679886": [178, 179], "1017624989859351": [178, 179], "54374796617700816": [178, 179], "3715344477591818": [178, 179], "2387553898801391": [178, 179], "8187172884547076": [178, 179], "1522284671097314": [178, 179], "0454193728074506": [178, 179], "1688190599740418": [178, 179], "9848808505730315": [178, 179], "5176013894081675": [178, 179], "1965918931505275": [178, 179], "0248869962483522": [178, 179], "4535361867324776": [178, 179], "4437155145638751": [178, 179], "2171776428648808": [178, 179], "0867326734388021": [178, 179], "5763512667620065": [178, 179], "785293447306691": [178, 179], "2489915323631275": [178, 179], "6589505137265448": [178, 179], "2817385669950028": [178, 179], "0553290947191964": [178, 179], "5481507299407191": [178, 179], "2080477057573553": [178, 179], "2817876881965624": [178, 179], "12512408298772948": [178, 179], "4831125975271719": [178, 179], "7834950195462245": [178, 179], "2064606598908139": [178, 179], "2421411165648886": [178, 179], "3461204499811092": [178, 179], "65966593807378215": [178, 179], "36559473517464181": [178, 179], "9248327086099932": [178, 179], "4223418217602317": [178, 179], "790875007038224": [178, 179], "9026572243192548": [178, 179], "21621909226838504": [178, 179], "16100173690141428": [178, 179], "8875278273011942": [178, 179], "2792213808538602": [178, 179], "9041297697847308": [178, 179], "4298318748123444": [178, 179], "8717874765920124": [178, 179], "2660121035644738": [178, 179], "8922848961161609": [178, 179], "4724681658043082": [178, 179], "8875314666371643": [178, 179], "1337207059785208": [178, 179], "2290596706950154": [178, 179], "0970619686963916": [178, 179], "4188864705446997": [178, 179], "824501293502089": [178, 179], "87811217547665232": [178, 179], "6141377553638456": [178, 179], "4736768016729647": [178, 179], "9646033676482686": [178, 179], "7291507868196327": [178, 179], "6494860793108481": [178, 179], "1744278681124489": [178, 179], "3291564189715617": [178, 179], "1892910878432268": [178, 179], "6260111359196396": [178, 179], "8029748349762125": [178, 179], "1110554486386404": [178, 179], "0087017311510849682": [178, 179], "812034605848817": [178, 179], "8310006567642712": [178, 179], "0643824785110239": [178, 179], "7806635726760689": [178, 179], "8724397920934015": [178, 179], "65927045141188367": [178, 179], "6202135060380289": [178, 179], "18281430910806151": [178, 179], "8134764145891591": [178, 179], "0328054369849538": [178, 179], "0315824591034124": [178, 179], "5339867923196042": [178, 179], "0906912982614791": [178, 179], "8390710019489158": [178, 179], "77019164393866146": [178, 179], "0099320163703895": [178, 179], "2239134319849398": [178, 179], "5227757084315567": [178, 179], "5342615497190861": [178, 179], "5402720724503229": [178, 179], "52313297572359074": [178, 179], "8268409663350287": [178, 179], "0896974241486603": [178, 179], "83931337455192145": [178, 179], "9824769771009292": [178, 179], "8062615072223389": [178, 179], "7151819974072808": [178, 179], "6553638508191835": [178, 179], "94296691141453703": [178, 179], "3332773280899097": [178, 179], "9080659785364102": [178, 179], "8017876981653527": [178, 179], "146797854411842": [178, 179], "4943345068020939": [178, 179], "6135304662636716": [178, 179], "5968234340599352": [178, 179], "2240732422979015": [178, 179], "40050907128273239": [178, 179], "0003615064702411": [178, 179], "3564534485947091": [178, 179], "5251603471425388": [178, 179], "3602495377614252": [178, 179], "70829180528117897": [178, 179], "8705912438690024": [178, 179], "9857439387875215": [178, 179], "3495410597763557": [178, 179], "7415118623160484": [178, 179], "8482449535792851": [178, 179], "1227029816875906": [178, 179], "943690794192229": [178, 179], "5533372938495322": [178, 179], "23654193364300019": [178, 179], "9320538122814632": [178, 179], "27398085527961841": [178, 179], "5379571426787906": [178, 179], "5479478416595258": [178, 179], "9952197756192462": [178, 179], "9519866242123729": [178, 179], "63418929807710789": [178, 179], "9714021509147459": [178, 179], "7514419719026835": [178, 179], "7952656655539831": [178, 179], "8168652955867248": [178, 179], "8059389896821614": [178, 179], "86083201462211": [178, 179], "6763339473293351": [178, 179], "2346287443442741": [178, 179], "0049022214331869": [178, 179], "0159172780756807": [178, 179], "6747832401686313": [178, 179], "9625789720275502": [178, 179], "21332969214064601": [178, 179], "4459656516053521": [178, 179], "8490131071943328": [178, 179], "4887755131556295": [178, 179], "0537691340713213": [178, 179], "1214658457920255": [178, 179], "8180419262808878": [178, 179], "0417225435808637": [178, 179], "4876076903545457": [178, 179], "2056831059665383": [178, 179], "4403227294912879": [178, 179], "29183542445509": [178, 179], "1299087065549616": [178, 179], "6894950904308068": [178, 179], "67877427899602139": [178, 179], "2334935303450196": [178, 179], "66692066781151726": [178, 179], "918359229911677": [178, 179], "43825691963852248": [178, 179], "0912552685819197": [178, 179], "9256467457380193": [178, 179], "9995400634925016": [178, 179], "2633779062253305": [178, 179], "3270510253578853": [178, 179], "8998811026998816": [178, 179], "4372749748248483": [178, 179], "800876689538256": [178, 179], "5720483206059228": [178, 179], "5479241832525954": [178, 179], "5107697954439923": [178, 179], "6063323885377114": [178, 179], "45355690226015": [178, 179], "3924594206301864": [178, 179], "8170391803389006": [178, 179], "3343907023480963": [178, 179], "1592191821861308": [178, 179], "551692003143347": [178, 179], "2147820707711716": [178, 179], "55930561729387951": [178, 179], "2364813901253862": [178, 179], "7059292544869302": [178, 179], "5980046177747229": [178, 179], "0606302788023871": [178, 179], "0235041652892747": [178, 179], "27015781708378661": [178, 179], "4303330714757383": [178, 179], "3989583334332432": [178, 179], "4649562148782955": [178, 179], "3524552397826168": [178, 179], "3322237797463616": [178, 179], "6813558717119386": [178, 179], "3359544685337736": [178, 179], "7104894884469877": [178, 179], "350410042767797": [178, 179], "8412188670946792": [178, 179], "8993273426849919": [178, 179], "5101185505218293": [178, 179], "3563537615645282": [178, 179], "0439247587050282": [178, 179], "3738404946436238": [178, 179], "43277784903448813": [178, 179], "6236691719193734": [178, 179], "8192122194763103": [178, 179], "3000303214498619": [178, 179], "7045156595962521": [178, 179], "2036876689968699": [178, 179], "22379027409222038": [178, 179], "0078193725337679": [178, 179], "33061456656172339": [178, 179], "3173753727230917": [178, 179], "3292728936983247": [178, 179], "17305051546078376": [178, 179], "3708524146324814": [178, 179], "18920570140751003": [178, 179], "7288547711089577": [178, 179], "5559793038807355": [178, 179], "4460955268542377": [178, 179], "65537111745445098": [178, 179], "3024274811626642": [178, 179], "32733974310015845": [178, 179], "6653194005399481": [178, 179], "3495524342659682": [178, 179], "50620561077402126": [178, 179], "6859406925109957": [178, 179], "0042337939426813": [178, 179], "4168309661540643": [178, 179], "3784247121303279": [178, 179], "0873449293614152": [178, 179], "8206900404120345": [178, 179], "3397623772131446": [178, 179], "2347446764630474": [178, 179], "8720948774765485": [178, 179], "6955132035521556": [178, 179], "9472576652843694": [178, 179], "3542922693748149": [178, 179], "030233796538444": [178, 179], "6199282129862145": [178, 179], "7351581782776853": [178, 179], "5709314373179808": [178, 179], "14607908112131446": [178, 179], "79251837326064": [178, 179], "37002429983216167": [178, 179], "3653059393186942": [178, 179], "8616789948811956": [178, 179], "6100436336617339": [178, 179], "8019087210485418": [178, 179], "5911421188072357": [178, 179], "6953052292111459": [178, 179], "3928959775316905": [178, 179], "049532260408768": [178, 179], "9169000088107522": [178, 179], "8042700374731648": [178, 179], "6636201843555991": [178, 179], "2856117402115821": [178, 179], "497386564362329": [178, 179], "1085015582769402": [178, 179], "1635806015318408": [178, 179], "51764720743541925": [178, 179], "3207617687324866": [178, 179], "6552485122750968": [178, 179], "9457154950840061": [178, 179], "4574030967957459": [178, 179], "13220998701481373": [178, 179], "1064026703010086": [178, 179], "6992062016898437": [178, 179], "6218017958370492": [178, 179], "4171784152426357": [178, 179], "1893570148164336": [178, 179], "53987360896641756": [178, 179], "62289304323418893": [178, 179], "6377915319211773": [178, 179], "95656595366184183": [178, 179], "5482370903224183": [178, 179], "6552715153624238": [178, 179], "42419842122106877": [178, 179], "9138981541477369": [178, 179], "5211086418661788": [178, 179], "7643908686171743": [178, 179], "3462875243179644": [178, 179], "4001664954474204": [178, 179], "8715548148469952": [178, 179], "7209034976257116": [178, 179], "3132712976844925": [178, 179], "0077653108424371": [178, 179], "8044349295045858": [178, 179], "7004396541700451": [178, 179], "6313151291578776": [178, 179], "7805282578575432": [178, 179], "3496033840422226": [178, 179], "5149407509344646": [178, 179], "4491799573779538": [178, 179], "4969549443875327": [178, 179], "59052341158001964": [178, 179], "5871839418980924": [178, 179], "8626995345211439": [178, 179], "530084220131168": [178, 179], "73947783901217035": [178, 179], "2278934560638541": [178, 179], "4480933790189707": [178, 179], "6638968948801822": [178, 179], "8603129450393652": [178, 179], "0034748779660814": [178, 179], "3783603559660618": [178, 179], "24711046251746965": [178, 179], "0245225170472958": [178, 179], "75233017871629115": [178, 179], "4003624728787472": [178, 179], "3204808270534789": [178, 179], "8530050107548528": [178, 179], "66555456366565435": [178, 179], "210607962975542": [178, 179], "4312598575388913": [178, 179], "8510534338146063": [178, 179], "0579141292803367": [178, 179], "8599892658343156": [178, 179], "1580465239922022": [178, 179], "6376354853614972": [178, 179], "6525127599513731": [178, 179], "9406618825179196": [178, 179], "3353268107001339": [178, 179], "5193520805659642": [178, 179], "9838132614191322": [178, 179], "5937246171656669": [178, 179], "_i": [178, 179], "x_j": [62, 178, 179, 181], "nmat": 179, "29862811e": 179, "97516377e": 179, "10328629e": 179, "90790022e": 179, "11774822e": 179, "71706160e": 179, "10657750e": 179, "06987653e": 179, "47893457e": 179, "95288785e": 179, "17873789e": 179, "62159368e": 179, "00171710e": 179, "22716812e": 179, "43721861e": 179, "46689480e": 179, "50739404e": 179, "65758626e": 179, "67080933e": 179, "01271960e": 179, "06246640e": 179, "12023335e": 179, "15823780e": 179, "40007127e": 179, "42330441e": 179, "44200543e": 179, "48046940e": 179, "83472417e": 179, "88760137e": 179, "98652806e": 179, "05062459e": 179, "45716799e": 179, "55952462e": 179, "72589427e": 179, "86383519e": 179, "98776759e": 179, "24048853e": 179, "51749090e": 179, "76260241e": 179, "09890091e": 179, "16973825e": 179, "38422915e": 179, "54406301e": 179, "82908856e": 179, "06195525e": 179, "21987207e": 179, "51026374e": 179, "31385944e": 179, "36832387e": 179, "10194808e": 179, "12706645": 179, "1471807": 179, "11300729": 179, "1497489": 179, "15689742": 179, "15497599": 179, "15887778": 179, "15239956": 179, "1541509": 179, "15434079": 179, "15308929": 179, "14778115": 179, "14353765": 179, "14642567": 179, "13629278": 179, "13739056": 179, "1202737": 179, "15177162": 179, "1510202": 179, "14927889": 179, "15778361": 179, "13734517": 179, "00981551": 179, "12396176": 179, "14384261": 179, "14991691": 179, "0936683": 179, "10998677": 179, "11870976": 179, "16228832": 179, "15880678": 179, "17617328": 179, "12965455": 179, "13772134": 179, "14785981": 179, "13627598": 179, "17093183": 179, "1189228": 179, "10336518": 179, "12629383": 179, "14222274": 179, "13799138": 179, "12981884": 179, "16297189": 179, "15845984": 179, "13077619": 179, "15656133": 179, "16060489": 179, "11805402": 179, "14021942": 179, "createproximitymatrix": 179, "33607823e": 179, "69976843e": 179, "80285954e": 179, "41648335e": 179, "38278275e": 179, "51753802e": 179, "90919719e": 179, "88702158e": 179, "65910722e": 179, "18671103e": 179, "73374647e": 179, "45881912e": 179, "59966914e": 179, "63553433e": 179, "85061645e": 179, "08380506e": 179, "21989770e": 179, "05000993e": 179, "56991352e": 179, "65510715e": 179, "18345495e": 179, "rem\u00e9di": [180, 216, 230, 237], "memory_profil": 180, "datax": [180, 181], "datay": [180, 181], "n_clusters_per_class": [180, 181], "n_inform": [62, 134, 180, 181], "62557523": 180, "92972784": 180, "19327029": 180, "01669145": 180, "66440003": 180, "05373302": 180, "09569564": 180, "62733": 180, "05437465": 180, "43404744": 180, "88137987": 180, "1603541": 180, "97569429": 180, "28962313": 180, "06727548": 180, "81364917": 180, "15972723": 180, "99923386": 180, "25393473": 180, "67807834": 180, "74986482": 180, "68848993": 180, "83230911": 180, "15836161": 180, "71428315": 180, "53155132": 180, "49799497": 180, "53866452": 180, "55477724": 180, "79401366": 180, "kneighborsclassifi": [129, 180, 181], "brut": [129, 130, 137, 180, 181, 224], "x27": [134, 136, 137, 139, 141, 145, 180], "kneighborsclassifierifittedkneighborsclassifi": [129, 180], "sklpathf": 180, "sklpath": 180, "448": 180, "ipykernel_4917": 180, "1382514021": 180, "_classif": 180, "738": 180, "kneighbor": [140, 180], "_pairwise_distances_reduct": 180, "_dispatch": 180, "_validate_dat": 180, "660": 180, "check_array": 180, "_assert_all_finit": 180, "threadpool_limit": 180, "threadpoolctl": 180, "2177": 180, "458": 180, "412": 180, "414": [180, 182], "274": [145, 180], "813": 180, "818": [143, 180], "num_thread": 180, "is_usable_for": 180, "846": 180, "get_num_thread": 180, "856": [145, 180], "set_num_thread": 180, "ctyp": 180, "_method": 180, "_sum": 180, "1417": 180, "check_is_fitted": 180, "1140": 180, "391": [180, 220], "__getitem__": [180, 216], "_wrapfunc": 180, "278": [145, 180], "_set_threadpool_limit": 180, "joblib": [180, 236], "411": 180, "effective_n_job": 180, "1379": 180, "_is_fitted": 180, "get_active_backend": 180, "_num_sampl": 180, "restore_original_limit": 180, "1017": 180, "etudi": [180, 234], "pairwise_dist": 180, "what_to_measur": 181, "07576929999959248": 181, "nf_set": 181, "nob": 181, "ys": [142, 143, 181], "nf": [128, 181], "dt2": 181, "ball_tre": 181, "0035799999996015686": 181, "08653190000040922": 181, "010255199999846809": 181, "11729259999992792": 181, "005994999999529682": 181, "11148469999989175": 181, "004818200000045181": 181, "12828609999996843": 181, "005615799999759474": 181, "0024919999996200204": 181, "04157219999979134": 181, "007431699999870034": 181, "11408440000013798": 181, "0051083999996990315": 181, "3907441999999719": 181, "random_sparse_matrix": 181, "ratio_spars": 181, "nnz": 181, "what_to_measure_spars": 181, "nb_spars": 181, "sparse_ratio": 181, "16139359999942826": 181, "16765100000066": 181, "9546476190476191": 181, "157290099999955": 181, "9173545454545454": 181, "374867700000323": 181, "37886189999972": 181, "7777733333333333": 181, "63584069999979": 181, "mesuron": 181, "what_to_measure_perf": 181, "good": [181, 193], "0014494000006379792": 181, "perf": 181, "0015942999998515006": 181, "0019345000000612345": 181, "002628500000355416": 181, "001998000000639877": 181, "0025021000001288485": 181, "concordent": 181, "revenon": 181, "hyperplan": 181, "inert": 181, "pca": [131, 181], "what_to_measure_perf_acp": 181, "acp_dim": 181, "t1o": 181, "t2o": 181, "goodo": 181, "n_component": [131, 181], "t0": 181, "x_train_pc": 181, "x_test_pc": 181, "002483399999618996": 181, "06338310000046476": 181, "22452249999969354": 181, "p_noacp": 181, "y_noacp": 181, "dt_noacp": 181, "perf_noacp": 181, "dt_train": 181, "dt_predict": 181, "0015590000002703164": 181, "0045598999995490885": 181, "0020978000002287445": 181, "003090600000177801": 181, "10930980000011914": 181, "009109900000112248": 181, "05428739999933896": 181, "13726130000031844": 181, "198": [137, 181], "0553301999998439": 181, "046151300000019546": 181, "eton": 181, "transfer": [181, 228], "conseerv": 181, "absurd": [182, 183], "contred": 182, "matrix_distance_7398": [182, 183], "boulogn": [182, 183], "billancourt": [182, 183], "beauv": [182, 183], "85597": [182, 183], "courbevoi": [182, 183], "sevran": [182, 183], "26564": [182, 183], "colomb": [182, 183], "alfortvill": [182, 183], "36843": [182, 183], "bagneux": [182, 183], "marcq": [182, 183], "baroeul": [182, 183], "233455": [182, 183], "suresn": [182, 183], "gennevilli": [182, 183], "10443": [182, 183], "charlevill": [182, 183], "mezier": [182, 183], "bordeau": [182, 183], "\u00e9chapp": [182, 199, 231], "djikstr": 182, "skieur": [182, 183, 210], "rentrent": 182, "lou": 182, "convient": [129, 182, 230, 234], "t_i": [182, 183], "arrang": 182, "t_n": [182, 183], "hlin": [182, 232], "t_3": 182, "t_4": 182, "t_": 182, "s_3": 182, "s_4": 182, "s_5": 182, "s_6": 182, "s_7": 182, "sigma_m": 182, "ski": [182, 183, 210], "4496565125341727": 182, "6181478314088333": 182, "6472124781567143": 182, "689855001829289": 182, "7069363711449275": 182, "720882923000757": 182, "7315603136077902": 182, "757295341401446": 182, "806174917827697": 182, "8273604346819485": 182, "539691655662206": 182, "5677016209991443": 182, "651632433144162": 182, "6723990573029228": 182, "6967500647083442": 182, "6991707543184964": 182, "7173171973288348": 182, "764722044308385": 182, "789682343736771": 182, "8113678294188096": 182, "8872585832253812": 182, "8910607675180564": 182, "893354126537998": 182, "9435870591562554": 182, "9577834515908243": 182, "caract\u00e8ris": 182, "v_0": 182, "sum_v": 182, "agorithm": 182, "dikjstr": 182, "fe": [182, 199], "1684": 182, "3437": 182, "348": 182, "3980": 182, "686": 182, "698": 182, "d\u00e9compress": [182, 232], "7zip": 182, "pysens": 182, "mac": [182, 232], "tar": 182, "60050": 182, "2290": [145, 182], "2363": 182, "2346": 182, "2025": 182, "2140": 182, "2428": 182, "2201": 182, "2506": 182, "2425": 182, "2557": 182, "vil": 183, "rejoindr": 183, "7888": 183, "keyerror": [183, 219, 239], "m\u00e9zi": 183, "816197": 183, "813197": 183, "795670": 183, "skis": [183, 210], "t_j": 183, "t_k": 183, "nec\u00e9ssair": 183, "restreindr": 183, "301415513544109": 183, "graph_notebook_sk": 183, "xymatrix": 183, "stratifi": [62, 126, 184, 185], "tmoertel": 184, "round": [62, 184, 185, 230], "w_": [184, 185], "brib": [184, 185], "prisoner": [184, 185], "royaum": 184, "prison": [184, 185], "vivent": [184, 199], "rel\u00e2ch": [184, 224, 237], "liber": [184, 237], "parlent": 184, "veil": 184, "relach": 184, "104": [184, 231], "x_k": 184, "k_i": 184, "k_a": 184, "k_t": 184, "sol": 185, "inter": 185, "benjamin": 185, "donnot": 185, "new_intervall": 185, "mymax": 185, "fondamental": [185, 231], "oracl": 185, "esoudr": 185, "priso": 185, "groupkfold": 185, "stratified": 185, "codeforc": [186, 187], "483a": [186, 187], "geologist": [186, 187], "sometim": [186, 187], "rainfall": [186, 187], "drainag": [186, 187], "basin": [186, 187], "elev": [186, 187], "altitud": [186, 187, 216], "rul": [186, 187], "wat": [186, 187], "neighboring": [186, 187], "sink": [186, 187], "ti": [186, 187, 239], "west": [186, 187], "south": [186, 187], "drain": [186, 187], "directly": [186, 187], "indirectly": [186, 187], "labeled": [186, 187], "concatenated": [186, 187, 224], "resulting": [186, 187], "lexicographically": [186, 187], "smallest": [145, 186, 187], "western": [186, 187], "alway": [186, 187, 222, 230, 234], "lead": [186, 187], "evil": [186, 187], "leagu": [186, 187], "bad": [186, 187, 224], "hors": [186, 187], "recently": [186, 187], "been": [186, 187], "far": [186, 187], "backstabbing": [186, 187], "decided": [186, 187], "department": [186, 187], "separat": [186, 187], "troublesom": [186, 187], "member": [137, 186, 187], "thoroughbred": [186, 187], "isn": [186, 187], "his": [186, 187], "valuabl": [186, 187], "figuring": [186, 187], "himself": [186, 187], "got": [186, 187], "loyal": [186, 187], "henchman": [186, 187], "uva": [186, 187], "10911": [186, 187], "job": [186, 187], "forming": [186, 187], "quiz": [186, 187], "mca": [186, 187], "cpci": [186, 187], "championship": [186, 187], "student": [186, 187], "interested": [186, 187], "participat": [186, 187], "consisting": [186, 187], "memb": [186, 187], "near": [186, 187], "sure": [186, 187], "x_3": [186, 187], "minimized": [186, 187], "adn": 187, "fulkerson": 187, "flot": 187, "enrich": 188, "physiqu": [188, 232], "atout": 188, "tarot": 188, "fastidi": [137, 188, 189, 190, 204, 216, 231, 234, 237], "mesparametr": 188, "pas_gradient": 188, "fonction_any": 188, "pronom": 188, "0x7fb13a470c10": 188, "autre_point": 188, "appliq": 188, "carremag": [188, 189], "rattach": 188, "4031242374328485": 188, "lx": 188, "738793548317167": 188, "000000000010186": 188, "est_nul": 188, "somme_ligne_colonne_diagonal": 189, "coefficient_un": 189, "est_mag": 189, "tous_les_carre_na": 189, "tous_les_carre_naif2": 189, "stop_aft": 189, "tous_les_carres_permut": 189, "firstn": 189, "devenu": [129, 189], "380064799999673": 189, "tous_les_carres_permutation_ligne12_meme_somm": 189, "435667799996736": 189, "5677748000016436": 189, "tous_les_carr": 189, "version1": 190, "fonction1": [190, 224], "fonction2": [190, 230], "fonction3": 190, "fonction_final": 190, "version2": 190, "tirage_aleatoir": [190, 191], "precedent": [190, 191, 224, 230, 231], "moyenne_tirag": [190, 191], "joueur": [190, 196, 237], "tricheur": 190, "piecetruque": [190, 191], "piecetruqueemix": [190, 191], "al\u00e9atoiremnt": 190, "truque": [190, 191, 216], "d\u00e9cryptag": [192, 193], "polynom": 192, "2x": 192, "log_bas": 192, "9999999999999996": 192, "965784284662087": 192, "lettre_suiv": [192, 193], "valeur_absolu": 192, "acroym": 192, "compact": [192, 202, 203], "timecomplexity": 192, "pr\u00e9dictibl": 192, "aeco": 192, "eddard": [192, 193], "catelyn": [192, 193], "robb": [192, 193], "sansa": [192, 193], "arya": [192, 193], "brandon": [192, 193], "rickon": [192, 193], "theon": [192, 193], "rorbert": [192, 193], "cersei": [192, 193], "tywin": [192, 193], "jaim": [192, 193], "tyrion": [192, 193], "sha": [192, 193], "bron": [192, 193], "lancel": [192, 193], "joffrey": [192, 193], "sandor": [192, 193], "vary": [192, 193], "renly": [192, 193], "mots_lettre_posit": [192, 193], "dictionnaire_bien_chois": [192, 193], "reformul": 192, "jenesuispascod": [192, 193], "mhqhvxlvsdvfrgh": [192, 193], "dop": [192, 193], "traduit": [192, 230, 231, 239], "dictionnaire_chois": 193, "dictionair": 193, "unordered_map": 193, "stl": 193, "accessing": 193, "code_cesar": 193, "mschgjlgedgrrrt": 193, "int_a": 194, "6145744834544478": [194, 195], "ave": [195, 199], "2320146802585272": 195, "integrale_precis": 195, "val0": 195, "5050000000000003": [195, 210], "2196877891927724": 195, "piano": 195, "int2": [195, 198], "integrale_precise_2n": 195, "5000454610560389": 195, "81920": 195, "2169740198498182": 195, "int_0": 195, "xdx": 195, "discontinu": 195, "max_fp": 195, "last_f": 195, "fx": 195, "md": [195, 232], "integrale_precise_derive": 195, "5004995004994989": 195, "integrale_bizarr": 195, "px": 195, "0625": 195, "2857142857142856": 195, "rationnel": 195, "tombent": 195, "integrale_mc": 195, "5443922662659958": 195, "integrale_mc_precis": 195, "moy0": 195, "5001005538840249": 195, "i_n": 195, "16m": 195, "16e4": 195, "500765653300686": 195, "885": 195, "create_gam": 197, "gameover1": 197, "masked_not_equal": 197, "gameov": 197, "gam": 197, "process_lin": 197, "prev": 197, "update_gam": 197, "reversed": 197, "grammair": [198, 200, 230, 239], "interag": 198, "capteur": 198, "tsv": [198, 232], "fallu": [198, 216], "literal": [198, 231], "pr\u00e9vus": [198, 219], "permanent": [198, 237], "vocat": [198, 199, 237], "condens": 198, "pyramide_bigarre": 198, "td2_1": [198, 209], "classes_heritage_correct": 198, "lemonde5": [198, 205], "voeux83": [198, 199], "classes_carre_mag": 198, "lemonde3": [198, 205], "blogny1": [198, 205], "blog3": [198, 205], "nytimes5": [198, 205], "classes_carre_magique_correct": 198, "integrale_rectangle_correct": 198, "nytimes2": [198, 205], "voeux05": [198, 199], "module_file_regex": 198, "__pycache__": [198, 232, 234], "lemonde1": [198, 205], "nytimes8": [198, 205], "voeux06": [198, 199], "dictionnaire_vigener": 198, "voeux": [198, 199], "lemonde9": [198, 205], "voeux08": [198, 199], "texte_langue_correct": 198, "nytimes1": [198, 205], "voeux01": [198, 199], "premiers_pas_correct": 198, "nytimes9": [198, 205], "voeux74": [198, 199], "j2048": 198, "voeux75": [198, 199], "elpais2": [198, 205], "lequipe1": [198, 205], "voeux94": [198, 199], "lemonde7": [198, 205], "lemonde10": [198, 205], "seance4_excel": [198, 199], "arthur_charpentier2": [198, 204, 205], "afp2": [198, 204, 205], "inconnu2": [198, 205], "pyramide_bigarree_correct": 198, "afp1": [198, 204, 205], "lemonde8": [198, 205], "elpais5": [198, 205], "hex": [198, 202, 203, 231], "module_file_regex_correct": 198, "nytimes3": [198, 205], "voeux89": [198, 199], "arthur_charpentier3": [198, 204, 205], "voeux87": [198, 199], "lemonde11": [198, 205], "elpais4": [198, 205], "nytimes7": [198, 205], "lemonde2": [198, 205], "inconnu1": [198, 205], "lequipe2": [198, 205], "premiers_p": 198, "lemonde6": [198, 205], "blog1": [198, 205], "voeux09": [198, 199], "voeux90": [198, 199], "elpais7": [198, 205], "exemple_fichi": 198, "elpais6": [198, 205], "texte_langu": 198, "integrale_rectangl": 198, "voeux07": [198, 199], "classes_heritag": 198, "arthur_charpentier1": [198, 204, 205], "lemonde4": [198, 205], "blog2": [198, 205], "dictionnaire_vigenere_correct": 198, "variable_boucle_test": 198, "nytimes6": [198, 205], "elpais3": [198, 205], "variable_boucle_tests_correct": 198, "j2048_correct": 198, "nytimes4": [198, 205], "voeux79": [198, 199], "elpais1": [198, 205], "pragmat": 198, "reconnu": 198, "exportent": 198, "grop": 198, "volum": 198, "3x3": [198, 199], "gz": 198, "wav": 198, "mp3": [198, 232, 239], "ogg": 198, "musiqu": [198, 239], "mp4": 198, "vorb": 198, "v\u00f4tr": 198, "5403023058681398": [198, 199], "\u00eate": [198, 199], "n\u00e9": [198, 203, 227], "fonction_cos_sequent": [198, 199], "dynload": 198, "4161468365471424": [198, 199], "recharg": [198, 199, 230, 234], "async_helper": 198, "autocall": 198, "builtin_trap": 198, "completerlib": 198, "pr\u00e9ambul": 198, "1903": 198, "1957": 198, "indiff\u00e9rent": 198, "securit": [198, 199], "insecurit": [198, 199], "mako": [198, 199], "templating": [198, 199], "dimanch": [198, 199], "seance4_excel_mat": 199, "6414749515069115": 199, "4096411389655439": 199, "7991926327688407": 199, "9918119068265183": 199, "07379598399157106": 199, "4290244325276996": 199, "9337274118746318": 199, "17483162769873706": 199, "6159652170653446": 199, "4835251137894401": 199, "date1": 199, "2013": 199, "date0": 199, "birth": 199, "1975": [199, 227], "weekday": 199, "lund": [199, 227], "monmodule2": 199, "monmodule3": 199, "Mes": 199, "compatriot": 199, "peupl": 199, "rassembl": [199, 216], "respir": 199, "rythm": 199, "bat": 199, "coeur": 199, "f\u00eat": 199, "no\u00ebl": 199, "participent": 199, "joi": 199, "retrouvaill": 199, "chaleur": 199, "familial": 199, "amical": 199, "toulous": 199, "\u00e9preuv": 199, "solidar": 199, "amiti": 199, "nation": 199, "vivr": 199, "ignorecas": 199, "soldat": 199, "constru": 199, "victim": 199, "salu": 199, "avancent": 199, "avan": 199, "souffranc": 199, "gouvern": 199, "tristess": 199, "foi": 199, "profon": 199, "craint": 199, "\u00e9prouvent": 199, "angoiss": 199, "\u00e9treint": 199, "peur": 199, "exasper": 199, "entreprendr": 199, "int\u00e9": 199, "fiert": 199, "brutal": 199, "efforc": 199, "agi": 199, "souc": [199, 224], "d\u00e9fendr": 199, "enver": 199, "trah": 199, "hypocris": 199, "urg": 199, "risquent": [199, 224], "leu": 199, "doulour": 199, "cett": 199, "responsab": 199, "prot": 199, "devo": 199, "persuad": 199, "fragil": 199, "r\u00e9form": 199, "p\u00e9nal": 199, "ministr": 199, "fran\u00e7ois": 199, "fillon": 199, "cepen": 199, "hommag": 199, "froid": 199, "partenair": 199, "renonc": [199, 231], "boulevers": 199, "r\u00e9publ": 199, "redon": 199, "JE": 199, "VOUS": 199, "NE": 199, "ennui": 199, "AI": 199, "dej": 199, "decrit": 199, "ET": 199, "DE": 199, "PAR": 199, "QUE": 199, "MES": 199, "SOIENT": 199, "LES": 199, "AU": 199, "LA": 199, "societ": 199, "francais": 199, "SOIT": 199, "fraternit": 199, "EST": 199, "AUX": 199, "agriculteur": 199, "artisan": 199, "devront": [199, 230], "examin": 199, "QU": 199, "EN": 199, "CE": 199, "rol": 199, "LUI": 199, "LE": 199, "OU": 199, "NOUS": 199, "appa": 199, "PAS": 199, "AVEZ": 199, "ILS": 199, "ONT": 199, "recu": 199, "AVEC": 199, "SUIS": 199, "etaient": 199, "couvert": 199, "LEUR": 199, "EUX": 199, "NOS": 199, "departem": 199, "a_l_etrang": 199, "QUI": 199, "malheur": 199, "SONT": 199, "hopital": 199, "egal": 199, "salut": 199, "travailleur": 199, "imm": 199, "chretien": 199, "TU": 199, "SOIES": 199, "UNE": 199, "accueil": 199, "POUR": 199, "president": 199, "1976": [199, 239], "grandeu": 199, "ELLE": 199, "SUR": 199, "entent": 199, "ren": 199, "aymon": 199, "SES": 199, "echangent": 199, "conduit": 199, "MON": 199, "1979": [145, 199], "SON": 199, "revien": 199, "afriqu": 199, "ME": 199, "union": [199, 231], "soviet": 199, "urss": 199, "UN": 199, "prepar": 199, "av": 199, "UNS": 199, "promet": 199, "fa": 199, "soutiendr": 199, "lass": 199, "invit": [199, 230], "\u00e2g\u00e9": 199, "fratern": 199, "ardemment": 199, "reprennent": [199, 231], "\u00e9lect": 199, "pr\u00e9sidentiel": 199, "na\u00eetr": 199, "conf\u00e9der": 199, "dign": 199, "chanti": 199, "tribun": 199, "der": 199, "dois": 199, "redir": 199, "admir": 199, "\u00e9quipag": 199, "r\u00e9confort": 199, "accompl": 199, "qual": 199, "dissoc": 199, "naguer": 199, "gra": 199, "\u00e9cout": [199, 231, 237], "enac": 199, "ins\u00e9cur": 199, "r\u00e9forment": 199, "rvic": 199, "\u00e9nerg": 199, "immigr": 199, "banlieu": 199, "r\u00e9nov": 199, "recour": [199, 231], "isra\u00ebl": 199, "palestinien": 199, "patr": 199, "python_": 199, "doctyp": 199, "noj": 199, "enabled": 199, "disabled": [199, 224, 237], "sticky": [199, 224], "pinned": 199, "toc": 199, "page_str": 199, "creativecommon": 199, "deed": 199, "af": 199, "programmeertaal": 199, "programmiersprach": 199, "d8": 199, "a8": 199, "a7": 199, "d9": 199, "8a": 199, "86_": 199, "ba": [199, 207], "a9_": 199, "a9": 199, "e0": [199, 207], "a6": 199, "a5": 199, "ast": 199, "az": 199, "proqraml": 199, "9fd": 199, "b1rma_dil": 199, "azb": 199, "8c": 199, "ul": 199, "endfor": 199, "tpl": 199, "ch\u00f4mag": 200, "incident": [200, 216, 230, 234], "aiguillag": [200, 237], "incompr\u00e9hensibl": 200, "torchon": 200, "serviet": 200, "factoriel": [200, 201, 230], "fautiv": 201, "195": [201, 220], "premmi": 201, "4037913": 201, "miracl": [202, 203], "verg": [202, 203], "commercial": [202, 203], "acre": [202, 203], "permacultur": [202, 203], "qu\u00e9bec": [202, 203], "biodiversite_tri2": [202, 203], "boul": [202, 203], "empil": [202, 203, 224, 237], "pyramide_num2": 203, "scatter_demo": 203, "rgb": [128, 203], "typiqu": [204, 220], "oeuvr": 204, "litt\u00e9rair": 204, "m\u00e9langent": 204, "\u00e9tiquet": 204, "conclur": [204, 231], "admetton": 204, "disposon": 204, "infaillibl": 204, "dup": 204, "d\u00e9licat": 205, "read_file_enc": 205, "enc": [205, 228], "corbeau": 205, "bec": 205, "fromag": [205, 216], "ma\u00eetr": 205, "renard": 205, "odeur": [205, 216], "allech": 205, "Lui": 205, "\u00ee": 205, "histogram2": 205, "pourrion": 205, "007751937984496124": 205, "06976744186046512": 205, "17829457364341086": 205, "03875968992248062": 205, "031007751937984496": 205, "08527131782945736": 205, "023255813953488372": 205, "10077519379844961": 205, "07751937984496124": 205, "05426356589147287": 205, "015503875968992248": 205, "0067247820672478205": 205, "007575757575757576": 205, "007012142979305627": 205, "02588801926550271": 205, "004853022739877981": 205, "010752688172043012": 205, "007556675062972292": 205, "010554089709762533": 205, "029830508474576273": 205, "01349112426035503": 205, "005625270445694505": 205, "005441436539246361": 205, "00224408769204212": 205, "009715025906735751": 205, "0051919661155895615": 205, "00016849199663016007": 205, "010804020100502512": 205, "007139797229758675": 205, "0021551724137931034": 205, "0055272108843537416": 205, "0014691478942213516": 205, "004875076173065204": 205, "0044822949350067235": 205, "007034547444114429": 205, "0020463847203274215": 205, "0034299968818210166": 205, "008162299639202697": 205, "00572041473006793": 205, "005029013539651838": 205, "030130034887408817": 205, "031933508311461065": 205, "02547634339541854": 205, "03934426229508197": 205, "035542582417582416": 205, "030610255410411385": 205, "04194094414143314": 205, "03151779230210603": 205, "03840526700804682": 205, "lemond": 205, "lem": 205, "text_other": 205, "wrap": 205, "tra\u00efll": 206, "mot_al": [206, 207], "clock": [128, 206], "list_exercice_1": 206, "ted": 206, "inn": 206, "wiki_tr": 206, "wiki_trie2": [206, 207], "2651422999999795": 207, "208": [145, 207], "06771000000003369": 207, "tolook": 207, "ds": 207, "340000032243552e": 207, "00010930000007647322": 207, "1003433318879937": 207, "00016539999978704145": 207, "00020910000012008823": 207, "5017166594399687": 207, "0016119000001708628": 207, "0002951000001303328": 207, "3447777295997914": 207, "025103800000124465": 207, "0005895999997846957": 207, "085832971998425": 207, "4739787999997134": 207, "0006374999998115527": 207, "68666377598748": 207, "marginal": 207, "aba": 207, "aab": 207, "bba": 207, "bab": 207, "bcc": 207, "print_tr": 207, "400000": [128, 207], "00015950000033626566": 207, "00017660000003161258": 207, "0001847000003181165": 207, "0002316999998583924": 207, "00035339999976713443": 207, "0002839999997377163": 207, "0003455000000940345": 207, "00033450000000811997": 207, "0003973000002588378": 207, "0003483000000414904": 207, "session": 207, "children": 207, "child": 207, "child1": 207, "forest": [137, 207], "arbredicho": 207, "after": [207, 224], "add_befor": 207, "add_aft": 207, "sorted_list": 207, "zillion": 207, "merveil": 207, "tutor": 207, "pythontutor": 207, "uilis": 207, "liste_chaine": 207, "attach": [207, 224, 230, 232, 237, 239], "atteindre_la_fin": 207, "position_cour": 207, "e1": 207, "e2": [139, 207], "promen": 207, "cran": [207, 230], "appelon": 207, "surpren": [207, 230], "instuct": 207, "nplusieur": 208, "anything": 208, "trou": 208, "sloan": 208, "obtent": [208, 219, 231], "list1": 208, "list2": 208, "alourd": 208, "interrupt": 208, "lesqueel": 208, "experim": 208, "curieux": 209, "log2": 209, "456217": 209, "931568569324174": 209, "134146": 209, "166639": 209, "922092": 209, "728522": 209, "162931": 209, "741312": 209, "195045": 209, "642304": 209, "685730": 209, "__len__": [210, 216], "n_question": 210, "45454545454545453": 210, "glouton": 210, "baremeopt": 210, "matrice_not": 210, "els_pos": 210, "49000000000000005": 210, "4890909090909088": 210, "baremeopt2": 210, "b_j": 210, "remuner": 211, "renumer": 211, "distance_1": 211, "test_distance_1": 211, "fdist": 211, "remunner": 211, "distance_n": 211, "test_distance_n": 211, "iji": 211, "distance_levenstein": 211, "distance_levenstein_alignment": 211, "remunereer": 211, "rennnumer": 211, "munereer": 211, "rennnum": 211, "e\u00e9\u00eae": 211, "distance_levenstein_alignment_accent": 211, "r\u00e9munner": 211, "r\u00e9mu": 211, "ner": 211, "renuumer": 211, "eye": 213, "test_pivot_gauss": 213, "abn": 214, "aer": 214, "bii": 214, "bjk": 214, "cbb": 214, "position_premiere_lettr": 214, "ae": 214, "position_lettr": 214, "position_deux_lettr": 214, "pos1": [214, 224], "pos2": [214, 224], "build_dictionary": 214, "increment": 214, "premiere_lettr": 214, "position1": 214, "position_lettre_apr": 214, "position2": 214, "sous_mot": 214, "sous_mots_1": 214, "sous_dico": 214, "position_prefixe_dico": 214, "log_2": 214, "cro\u00eetr": 214, "d\u00e9tien": 216, "banqui": 216, "d\u00e9tenu": 216, "rectifi": 216, "intern": [216, 233], "forment": 216, "pr\u00e9d\u00e9fin": [216, 220, 237, 239], "transposit": 216, "instanti": 216, "classe_vid": 216, "run_python_script_140224172129280": [], "run_python_script_140224177467584": [], "ob\u00e9it": [216, 219, 230], "imit": 216, "methode1": 216, "397204094": 216, "2147483647": 216, "nb2": 216, "pourvu": 216, "run_python_script_140224182787456": [], "d\u00e9couvrent": 216, "progressivent": 216, "classe2": 216, "classe1": 216, "autonom": [216, 224], "destructeur": 216, "destruct": [216, 224], "__del__": 216, "r\u00e9initialisent": 216, "__module__": 216, "__bases__": 216, "run_python_script_140224172692992": [], "__weakref__": [216, 224, 234], "descriptor": [216, 224, 234], "weak": [216, 224, 234], "pydoc": 216, "essai_class": 216, "__delattr__": 216, "__dir__": 216, "__format__": 216, "__ge__": 216, "__gt__": 216, "__hash__": [216, 231], "__init_subclass__": 216, "__le__": 216, "__ne__": 216, "__new__": 216, "__reduce__": 216, "__reduce_ex__": 216, "__sizeof__": 216, "__subclasshook__": 216, "ensemble_el": 216, "nouvelle_cl": 216, "run_python_script_140224149459328": [], "nombre_complex": 216, "get_modul": 216, "instar": [216, 230, 231, 239], "dor\u00e9nav": [216, 219, 230], "__iadd__": 216, "\u00e9toff": 216, "attard": 216, "__setitem__": 216, "point_espac": [216, 219], "l\u00e8vent": 216, "_z": 216, "run_python_script_140224146856256": [], "arr\u00eatent": 216, "cmp": [216, 230], "__contains__": 216, "__abs__": 216, "lev": 216, "__delitem__": 216, "__int__": 216, "__float__": 216, "__complex__": 216, "__div__": 216, "__mul__": 216, "__sub__": 216, "__pow__": 216, "__lshift__": 216, "__idiv__": 216, "__imul__": 216, "__isub__": 216, "__ipow__": 216, "__ilshift__": 216, "__irshift__": 216, "exsit": 216, "moder": 216, "rightsid": 216, "leftsid": 216, "LS": 216, "__radd__": 216, "__rlshift__": 216, "__iter__": [216, 219], "__next__": 216, "stopiter": [216, 219, 230], "class_it": [216, 219], "_in": [216, 219], "_n": [216, 219], "affichent": 216, "ck": 216, "isntanc": 216, "incremente_rnd": 216, "classmethod": 216, "meth3": 216, "meth4": 216, "essai_cl": 216, "meth2": 216, "croir": 216, "pseudo": [133, 216, 230], "d\u00e9truir": [216, 220, 224], "imaginair": 216, "conj": 216, "conjugu": 216, "set_modul": 216, "get_argu": 216, "set_argu": 216, "get_conjugu": 216, "866025": 216, "0471975512": 216, "09439510239": 216, "0471975511965976": 216, "0943951023931953": 216, "nom_copy": 216, "nom_inst": 216, "creationdestruct": 216, "d\u00e9truit": [216, 219, 220, 224], "classe_inclus": 216, "attr": 216, "re\u00e7oiv": [216, 224], "fonction_l": 216, "garbag": [216, 219, 220, 234, 237], "collector": [216, 219, 220, 234, 237], "__deepcopy__": 216, "memo": [216, 220], "objet1": 216, "objet2": 216, "o3": 216, "pointent": 216, "rencontrent": 216, "circulair": [216, 232], "artific": 216, "soupl": [216, 224, 231], "gag": 216, "t3": 216, "8068822999994154": [], "5005380999991758": [], "339184300000852": [], "atribut": 216, "pil": [216, 219, 221, 237], "cent_tirag": 216, "truqu": 216, "reproduit": [139, 216, 230], "piece_normal": 216, "piece_truque": 216, "devion": 216, "redevient": 216, "piece_tres_truque": 216, "resolu": [216, 219], "inherited": 216, "rubriqu": 216, "ira": 216, "run_python_script_140224134299520": [], "h\u00e9ritent": 216, "offrait": 216, "appellent": [216, 237], "ancetr": 216, "h\u00e9riti": 216, "aver": [62, 216, 230, 231], "dilemm": 216, "cub": 216, "repren": [216, 224], "fonction_somme_list": 216, "fonction_somme_dict": 216, "fonction_somm": 216, "undeuxtrois": 216, "incorpor": [216, 230], "indentationerror": [216, 219, 230], "unindent": [216, 230], "confond": [216, 230], "seilf": 216, "decoup": 216, "gruyer": 216, "fr2": 216, "fr3": 216, "g3": 216, "8333333333333334": 216, "61538461538461": 216, "76923076923077": 216, "7923076923076924": 216, "get_lin": 216, "get_col": 216, "get_submat": 216, "set_submat": 216, "matricelist": 216, "matricedict": 216, "produitclass": 216, "produitstrassen": 216, "architectur": [216, 228], "facilit": [216, 237], "lanag": 218, "deux_entiers_somm": 218, "deux_entiers_multipl": 218, "pr\u00e3": 218, "deux_enti": 218, "deuxenti": 218, "plu": 218, "disparit": [218, 224], "\u00e3": 218, "taient": 218, "m\u00e3\u00aame": 218, "deuxentiersmodif": 218, "anodin": 218, "run_python_script_140224145007744": [], "baseexcept": 219, "run_python_script_140224142525888": [], "produisent": [219, 237], "dirig": [219, 224], "intercept": [219, 220, 224, 230, 231], "48606594010979": 219, "0822096637057887j": 219, "accol": 219, "orthograph": [219, 239], "inexist": [219, 224], "importerror": [219, 224], "inappropri": 219, "oserror": 219, "unicodeerror": 219, "arithmeticerror": 219, "standarderror": 219, "was": [219, 220], "d\u00e9rivent": 219, "repr": [219, 224, 230], "racine_carre": 219, "run_python_script_140224140579008": [], "interrompt": 219, "closed": 219, "intervenu": 219, "pr\u00e9mun": 219, "manager": 219, "premi\u00e8rel": 220, "demeur": [220, 230], "foncb": 220, "foncc": 220, "format_stack": 220, "runpy": 220, "_run_module_as_main": 220, "_run_cod": 220, "main_global": 220, "run_global": 220, "systemex": 220, "argv": 220, "build_main": 220, "298": [145, 220], "app": 220, "force_all": 220, "355": 220, "build_updat": 220, "builder": 220, "to_build": 220, "updated_docnam": 220, "420": [128, 220], "_read_serial": 220, "docnam": 220, "441": 220, "read_doc": 220, "reader": 220, "parser": 220, "statemachin": 220, "inputlin": 220, "rst": [220, 232], "statemachinew": 220, "input_lin": 220, "input_offset": 220, "next_stat": 220, "check_lin": 220, "445": 220, "3024": 220, "lstrip": 220, "new_subsect": 220, "newabsoffset": 220, "nested_pars": 220, "state_machin": 220, "block": [220, 230], "2785": [145, 220], "underlin": [220, 224], "2355": 220, "explicit_markup": 220, "nodelist": 220, "blank_finish": 220, "explicit_construct": 220, "2367": 220, "expmatch": 220, "2104": 220, "run_direct": 220, "directive_inst": 220, "run_python_script": 220, "run_python_script_140224140290560": [], "raise_except": 220, "insidef": 220, "exc_typ": 220, "exc_valu": 220, "exc_traceback": 220, "exc_info": 220, "format_tb": 220, "run_python_script_140224140617792": [], "extract_tb": 220, "flask": [220, 236], "run_python_script_140224137052608": [], "run_python_script_140224139666688": [], "run_python_script_140224140312448": [], "fautif": 220, "file_to_read": 220, "download_content": 220, "read_fromf_fil": 220, "unicodeencodeerror": 220, "\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9": 220, "\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0": 220, "run_python_script_140224140384128": [], "codec": 220, "ascii_decod": 220, "unicodedecodeerror": 220, "0xc3": 220, "ordinal": 220, "soup\u00e7on": 222, "deprecationwarning": 222, "subsist": 222, "agac": 222, "fxn": 222, "catch_warning": [129, 222], "monwarning": 222, "mass": [222, 232], "d\u00e9bugg": [222, 237], "attaqu": 222, "tkint": [223, 230, 234, 237], "convivial": 224, "demandent": 224, "wxpython": 224, "rich": 224, "pyqt5": 224, "pyqt4": 224, "verion": 224, "jol": 224, "licenc": 224, "graphical": 224, "forum": 224, "stackoverflow": 224, "tk": [224, 230, 237], "troubl": 224, "Du": 224, "entrem\u00eal": [224, 237], "widget": 224, "pilotent": 224, "contr\u00f4lent": 224, "zone_text": 224, "enrob": 224, "mainloop": [224, 230, 237], "doiv": 224, "gris": [224, 234], "button": [224, 230, 237], "interdir": [224, 232, 237], "gif": 224, "photoimag": 224, "chameau": 224, "entry": [224, 230], "differ": 224, "nsecond": 224, "checkbutton": 224, "intvar": 224, "radiobutton": 224, "d\u00e9coch": 224, "deselect": 224, "case1": 224, "case2": 224, "case3": 224, "agiront": 224, "listbox": 224, "select_set": 224, "select_clear": 224, "curselect": 224, "indextkk": 224, "adjoindr": [224, 237], "scrollbar": 224, "yscrollcommand": 224, "yview": 224, "sid": [224, 230], "tix": 224, "exportselect": 224, "itemconfig": 224, "ttk": 224, "print_fil": 224, "canv": 224, "create_lin": 224, "create_rectangl": 224, "create_text": 224, "b\u00e9zi": 224, "assis": 224, "smooth": 224, "gray": 224, "polic": 224, "arial": 224, "arborent": 224, "cnf": 224, "kw": 224, "unbound": 224, "specified": [145, 224], "keyword": [224, 230], "allowed": 224, "activebackground": 224, "activeforeground": 224, "anchor": 224, "background": 224, "bitmap": 224, "borderwidth": 224, "cursor": 224, "disabledforeground": 224, "foreground": 224, "highlightbackground": 224, "highlightcolor": 224, "highlightthickness": 224, "justify": 224, "padx": 224, "pady": 224, "relief": 224, "repeatdelay": 224, "repeatinterval": 224, "takefocus": 224, "textvari": 224, "wraplength": 224, "specific": 224, "compound": 224, "overrelief": 224, "souci": 224, "attendus": 224, "both": 224, "pack_forget": 224, "r\u00e9appara\u00eetr": 224, "re\u00e7u": [224, 230, 232], "columnspan": 224, "rowspan": 224, "grid_forget": 224, "place_forget": 224, "focus_set": 224, "change_legend": 224, "augmentent": 224, "muet": 224, "ctrl": 224, "alt": 224, "suppr": 224, "keysym": 224, "x_root": 224, "y_root": 224, "occur": 224, "keypress": 224, "keyreleas": 224, "keyboard": 224, "buttonpress": 224, "buttonreleas": 224, "motion": 224, "enter": 224, "mousewheel": 224, "visibility": 224, "unmap": 224, "focusin": 224, "focusout": 224, "circulat": 224, "gravity": 224, "reparent": 224, "destroy": [224, 230], "activat": 224, "deactivat": 224, "callback": 224, "registered": 224, "bind": [224, 237], "bind_all": 224, "bind_class": 224, "tag_bind": 224, "brac": 224, "serial": 224, "pressed": 224, "exposed": 224, "keycod": 224, "occurred": 224, "send_event": 224, "keysym_num": 224, "curseur": 224, "mod2": 224, "mod3": 224, "mod4": 224, "m4": 224, "button1": 224, "mod5": 224, "button2": 224, "button3": 224, "button4": 224, "b4": 224, "button5": 224, "b5": 224, "mod1": 224, "pressing": 224, "omitted": 224, "virtual": 224, "astring": 224, "arbitrary": 224, "event_generat": [224, 237], "appear": 224, "shortly": 224, "invoked": 224, "specif": [224, 230], "additionally": 224, "unbind": 224, "leak": 224, "returned": 224, "affiche_touche_presse": 224, "evt": 224, "presse": 224, "292": 224, "9261224": 224, "exemple_bind": 224, "python26": 224, "933": 224, "_bind": 224, "_w": 224, "_tkint": 224, "tclerror": 224, "d\u00e9sact": [224, 237], "unbind_all": 224, "xsyntax": 224, "p\u00e9ripher": 224, "toplevel": 224, "add_cascad": 224, "mainmenu": 224, "msousmenu": 224, "add_command": 224, "sm1": 224, "sm2": 224, "ajoute_bouton": 224, "deiconify": 224, "iconify": 224, "ic\u00f4n": 224, "withdraw": 224, "compl\u00e8tent": 224, "progressbar": 224, "treeview": 224, "dirtre": 224, "fileselectbox": 224, "appartiennent": 224, "nouvelle_fenetr": 224, "sec": 224, "fenetr": 224, "fileselect": 224, "get_list": 224, "isdir": [224, 232], "listf": 224, "lifil": 224, "lid": 224, "wm_titl": 224, "fli": 224, "update_chemin": 224, "update_list": 224, "update_sel": 224, "cget": 224, "isol": [224, 230, 232], "gestion": [224, 234], "\u00e9v\u00e9nementiel": 224, "diss\u00e9min": 224, "espion": 224, "lap": 224, "after_cancel": 224, "personnifi": 224, "substitu": [224, 230], "malistbox": 224, "bg": 224, "itemconfigur": 224, "prolong": 224, "mafenetr": 224, "commande_bouton1": 224, "commande_bouton2": 224, "lab": 224, "pointeur": 224, "r\u00e9cept": 224, "consult": 224, "intervenus": 224, "offrent": [224, 231], "feront": 224, "mafenetreseq": 224, "perso": 224, "rooty": 224, "conservent": 225, "classeperson": 225, "_field": 225, "comptag": 225, "agil": 225, "flagr": 225, "append_time_list": 225, "append_time_dequ": 225, "06130500000108441": [], "04719219999969937": [], "312000": 227, "12614": 227, "712000": 227, "433382": [], "17598": [], "calendar": [227, 234], "itermonthdays2": 227, "timestamp": 227, "fromtimestamp": 227, "1705149883": [], "447678": [], "domin": 228, "japon": 228, "asiat": 228, "cp1252": [228, 231], "deviendr": 228, "e\u00e9": 228, "sb": 228, "platform": [228, 234], "getdefaultencoding": 228, "getdefaultlocal": 228, "0x7f88ee2aa9e0": [], "en_us": 228, "ordereddict": 229, "namedtupl": 229, "\u00e9l\u00e9mentair": 230, "aisanc": 230, "acquer": 230, "ruptur": 230, "combinent": 230, "nuanc": 230, "reconna\u00eetr": 230, "inconnus": 230, "iskeyword": 230, "until": 230, "kwlist": 230, "async": 230, "await": 230, "nonlocal": 230, "ajoutent": 230, "particuili": 230, "grammar": 230, "affil": 230, "condition2": 230, "condition3": 230, "instruction5": 230, "instruction6": 230, "instruction7": 230, "instruction8": 230, "transcrivent": 230, "prioritair": 230, "juxtapos": [230, 231, 239], "press": [230, 237], "repons": 230, "rget": 230, "nopass": 230, "indented": 230, "scrupul": 230, "d\u00e9guis": 230, "pr\u00e9matur": 230, "convertibl": 230, "run_python_script_140223796697984": [], "collag": 230, "cribl": 230, "eratosthen": 230, "d\u00e9nich": 230, "3i": 230, "ray": 230, "run_python_script_140224129837760": [], "endroitsfootnot": 230, "coordonnees_polair": 230, "414214": 230, "118034": 230, "434949": 230, "565051": 230, "commander_carte_orang": 230, "chequ": 230, "problem_zon": 230, "retor": 230, "valeur_": 230, "param_": 230, "identit": 230, "portent": 230, "run_python_script_140224128668608": [], "required": 230, "positional": 230, "ndigit": 230, "floating": 230, "digit": 230, "negat": 230, "pho": 230, "somme_n_premier_term": 230, "statut": 230, "ininterrompu": 230, "fact": 230, "factorielle_non_recurs": 230, "run_python_script_140224127626880": [], "portee_vari": 230, "run_python_script_140224127605440": [], "opposit": 230, "locale_global": 230, "affiche_pair": 230, "fonction_local": 230, "run_python_script_140224129805760": [], "ind\u00e9termin": 230, "liste_valeur_1": 230, "liste_valeur_p": 230, "nom_1": 230, "nom_q": 230, "v_q": 230, "n\u00e9cess": 230, "nom_fonct": 230, "reprendr": 230, "fonction_yield": 230, "run_python_script_140224129352896": [], "4142135623730951": 230, "78539816339744828": 230, "7853981633974483": 230, "agreg": [134, 230], "perl": 230, "est_pair": 230, "0x7f887a8ae6e0": [], "issubclass": 230, "typag": 231, "desquel": 231, "sc": 231, "suivront": [231, 232], "maint": 231, "repris": 231, "privileg": 231, "\u00e9num": 231, "impossibil": 231, "expliquent": 231, "comprennent": 231, "opertor": 231, "zz": 231, "guillemet": 231, "interchange": 231, "1morceau": 231, "commod": 231, "recoll": 231, "pourcentag": 231, "usit": 231, "lexical": 231, "567": 231, "ed": 231, "med": 231, "eniem": 231, "printf": 231, "formatting": 231, "transcrit": 231, "abra": 231, "cad": 231, "abracadabr": 231, "24n": 231, "81w": 231, "coord": 231, "aligned": 231, "centered": 231, "aleft": 231, "alignedb": 231, "oct": 231, "1234567890": 231, "2a": 231, "101010": 231, "0x2a": 231, "0o52": 231, "0b101010": 231, "indroduit": 231, "excentr": 231, "notabl": 231, "formattag": 231, "run_python_script_140224124795776": [], "1j": 231, "2j": 231, "fromhex": 231, "2ef0": 231, "f1f2": 231, "xf0": 231, "xf1": 231, "xf2": 231, "sigl": 231, "soupless": 231, "compare_key": 231, "run_python_script_140224124416192": [], "verron": 231, "dison": 231, "ensemb": 231, "juxtaposit": 231, "0x7f8879077600": [], "l3": 231, "surprendr": 231, "1111": 231, "dress": 231, "dinv": 231, "parcout": 231, "dicionnair": 231, "cledict": 231, "0x0120db90": 231, "18930576": 231, "0x120db90": 231, "hexad\u00e9cimal": 231, "st\u00e9thoscop": 231, "288": 231, "5555555555555554": 231, "__wd__": 231, "__builtins__": [231, 234], "reviendr": 231, "divmod": 231, "transpara\u00eetr": 231, "traduir": 231, "influenc": 231, "concepteur": 232, "textuel": 232, "reportlab": 232, "allong": [232, 234], "perturb": 232, "separated": 232, "ppend": 232, "ead": 232, "tampon": 232, "flush": 232, "technolog": [232, 237], "diverg": 232, "d\u00e9coupag": [62, 126, 139, 232], "d\u00e9cryptent": 232, "relu": 232, "acaracter": 232, "r\u00e9pandus": 232, "exemplezip": 232, "fz": 232, "infolist": 232, "date_tim": 232, "file_siz": 232, "testzip": 232, "zip_deflated": 232, "zip_stored": 232, "nom_fichier_dans_zip": 232, "joint": 232, "couron": 232, "succes": 232, "spammeur": 232, "smtplib": 232, "mim": 232, "multipart": 232, "mimemultipart": 232, "mimebas": 232, "mimetext": 232, "formatdat": 232, "envoyer_mail": 232, "aqui": 232, "localtim": 232, "set_payload": 232, "encode_base64": 232, "add_head": 232, "attachment": 232, "basenam": 232, "smtp": 232, "gmail": 232, "ehlo": 232, "starttl": 232, "login": 232, "mot_de_p": 232, "sendmail": 232, "as_string": 232, "destinatair": 232, "r\u00e9organis": 232, "musical": 232, "mutagen": [232, 239], "famili": 232, "osx": 232, "d\u00e9bouchent": 232, "abspath": 232, "commonprefix": 232, "getatim": 232, "getmtim": 232, "getctim": 232, "getsiz": 232, "isab": 232, "isfil": 232, "splitext": 232, "chdir": 232, "mkdir": 232, "makedir": 232, "repfinal": 232, "renam": 232, "rmdir": 232, "liste_fichier_repertoir": 232, "ob\u00e9iss": 232, "rep": 232, "fo": 232, "gitignor": 232, "code_of_conduct": 232, "gitattribut": 232, "appveyor": 232, "yml": 232, "_latex": 232, "ruff_cach": 232, "circlec": 232, "relir": 232, "rawiobas": 232, "affili": 232, "quinz": 232, "soul\u00e8vent": 232, "modil": 232, "1415692": 232, "fb": 232, "sauvegard": 232, "abcdedf": 232, "calcule_norm": 232, "dic": 232, "830951894845301": 232, "nom_modul": 234, "pyc": 234, "bytecod": 234, "exemple_class": 234, "__import__": 234, "nom_module_sans_extens": 234, "absolus": 234, "python36_x64": 234, "exe": 234, "__all__": 234, "inh\u00e9rent": 234, "posix": 234, "depending": 234, "unlink": 234, "eith": 234, "posixpath": 234, "ntpath": 234, "curd": 234, "representing": 234, "pard": 234, "pathnam": 234, "separator": 234, "extsep": 234, "altsep": 234, "alternat": 234, "pathsep": 234, "linesep": 234, "defpath": 234, "devnull": 234, "devic": 234, "stand": 234, "opend": 234, "module1": 234, "module2": 234, "_frozen_importlib": 234, "frozen": 234, "_imp": 234, "_thread": 234, "_warning": 234, "_weakref": 234, "python_cour": 234, "englob": 234, "mesmodul": 234, "part1": 234, "niveaud": 234, "part2": 234, "niveaudeuxb": 234, "subpackage1": 234, "modulex": 234, "subpackage2": 234, "moduley": 234, "pr\u00e9install": 234, "asyncio": [234, 236], "socket": 234, "cgi": 234, "cmath": 234, "gc": [234, 237], "getopt": 234, "htmllib": 234, "pathlib": 234, "sqlite3": 234, "gestionnair": 234, "threading": [234, 237], "dom": 234, "142152": [], "carlo": 234, "integrale_monte_carlo": 234, "6671079325000375": [], "simpliqu": 234, "interfa\u00e7ag": 234, "h\u00e9bergent": 234, "maintenus": 234, "ponctuel": 234, "tensorflow": 234, "setup": 234, "run_python_script_140224116358912": [], "0x7f8878a48430": [], "ultrajson": 235, "restaur": 235, "crucial": 235, "d\u00e9chiffr": [62, 235], "librar": 235, "multithreading": 236, "bibliograph": 236, "gevent": 236, "uvloop": 236, "blazing": 236, "networking": 236, "sanic": 236, "cython": [52, 236], "openmp": [236, 237], "2004": 237, "microprocesseur": 237, "transistor": 237, "multicoeur": 237, "disjoint": [62, 126, 237], "entam": 237, "processus": 237, "achev": 237, "asynchron": 237, "communiquent": 237, "synchronisent": 237, "monthread": 237, "proviennent": 237, "temporis": 237, "ojet": 237, "ind\u00e9fin": 237, "is_set": 237, "dixiem": 237, "verrous": 237, "indexfrr": 237, "veulent": 237, "11111111112222222222": 237, "acquir": 237, "entrem\u00ealent": 237, "sien": [140, 237], "thread_fin": 237, "thread_resultat": 237, "lance_thread": 237, "legnd": 237, "text2": 237, "thread_fini_fonct": 237, "envoient": 237, "get_now": 237, "put_now": 237, "qsiz": 237, "chevauchent": 237, "soumettr": 237, "subm": 237, "max_work": 237, "prim": 237, "112272535095293": 237, "112582705942171": 237, "115280095190773": 237, "115797848077099": 237, "1099726899285419": 237, "sqrt_n": 237, "ind\u00e9chiffr": 237, "logg": 237, "logger": 237, "get_logg": 237, "getlogg": 237, "setlevel": 237, "asctim": 237, "threadnam": 237, "levelnam": 237, "streamhandl": 237, "stdout": 237, "setformatt": 237, "addhandl": 237, "fh": 237, "filehandl": 237, "current_thread": 237, "end1": 237, "end2": 237, "end3": 237, "thread_0": 237, "thread_1": 237, "141": 145, "902": [], "052": [], "053": [], "942": 31, "as_completed": 237, "compliquent": 237, "parallel_numpy_dot": 237, "vb": 237, "54150786477814": [], "distribute_sum": 237, "inlass": 237, "enclench": 237, "distrinct": 237, "d\u00e9velopeur": 237, "multithread": 237, "nogil": 237, "parallelism": 237, "parallelizing": 237, "interp\u00e9teur": 237, "pythonnet": 237, "py4j": 237, "pyjnius": 237, "nuir": 237, "pluriel": 239, "formulair": 239, "1913": 239, "1978": 239, "1914": 239, "1941": 239, "1980": 239, "int\u00e9resson": 239, "r\u00e9pondent": 239, "0123456789": 239, "z0": 239, "taxinom": 239, "vba": 239, "vbatd1_4": 239, "suspens": 239, "yoyo": 239, "dupont": 239, "tc": 239, "repl": 239, "valident": 239, "chanson": 239, "track03": 239, "audiotrack": 239, "pist": 239, "audiop": 239, "audio": 239, "heart": 239, "heartland": 239, "heartach": 239, "ache": 239, "easyid3": 239, "infomp3": 239, "all_fil": 239, "repertoir": 239, "heart_notitle_mot": 239, "liheart": 239, "notitl": 239, "nbmot": 239, "nbsong": 239, "album": 239, "tracknumb": 239, "moymot": 239, "nom_du_group": 239, "groupdict": 239, "trouve_toute_fonct": 239, "expm": 239, "get_function_list_definit": 239, "ndef": 239, "z_": 239, "z_0": 239, "get_function_list_call": 239, "detection_fonction_pas_appele": 239, "sfil": 239, "funcdef": 239, "funccal": 239, "fonction_inutil": 239, "189": 145, "00005": 11, "61143": 11, "61138": 11, "00002": 11, "81398": 11, "11075": 11, "11073": 11, "70321": 11, "20248": 11, "20241": 11, "81380": 11, "epxlicit": 21, "powershel": 21, "vhd": 21, "appdat": 21, "localstat": 21, "ext4": 21, "vhdx": 21, "canonicalgrouplimited": 21, "ubuntu22": 21, "04lts_79rhkp1fndgsc": 21, "daniel": 21, "nashed": 21, "nbl": [], "tests_unitair": [], "cud": 22, "chatgpt": 22, "llm": 22, "sllm": 22, "0x7fad63981360": 27, "0x7fad63684040": 27, "0x7fad633e70a0": 27, "0x7fad630fc610": 27, "0x7fad62b0c220": 27, "0x7fad5ff94100": 27, "9802321055427683e": 31, "9802321721561498e": 31, "91019621920941e": 31, "9999999740103884": 31, "49933": 31, "50211": 31, "50142": 31, "49854": 31, "50390": 31, "49952": 31, "49763": 31, "50244": 31, "50251": 31, "49714": 31, "50292": 31, "49602": 31, "50190": 31, "50168": 31, "49603": 31, "49422": 31, "50018": 31, "50250": 31, "50073": 31, "49957": 31, "50238": 31, "50052": 31, "49872": 31, "49901": 31, "50132": 31, "50534": 31, "50162": 31, "49924": 31, "50143": 31, "49589": 31, "50421": 31, "50204": 31, "50140": 31, "49752": 31, "49769": 31, "49941": 31, "50447": 31, "50228": 31, "49677": 31, "49700": 31, "50407": 31, "49608": 31, "49858": 31, "50042": 31, "49460": 31, "49859": 31, "50177": 31, "50414": 31, "50216": 31, "50217": 31, "50023": 31, "49773": 31, "50331": 31, "50218": 31, "50055": 31, "50215": 31, "49212": 31, "49979": 31, "50123": 31, "49629": 31, "50229": 31, "49724": 31, "49504": 31, "49672": 31, "50309": 31, "50258": 31, "49531": 31, "49842": 31, "50339": 31, "50209": 31, "50264": 31, "49648": 31, "49812": 31, "49675": 31, "49804": 31, "50054": 31, "49976": 31, "50201": 31, "49717": 31, "49757": 31, "49762": 31, "49818": 31, "50247": 31, "50037": 31, "49780": 31, "49844": 31, "49730": 31, "49996": 31, "49492": 31, "50080": 31, "49959": 31, "50406": 31, "50441": 31, "50136": 31, "49967": 31, "49709": 31, "50160": 31, "49741": 31, "50044": 31, "50166": 31, "50505": 31, "50091": 31, "49583": 31, "49840": 31, "49955": 31, "49751": 31, "50064": 31, "50114": 31, "49821": 31, "49622": 31, "49694": 31, "50163": 31, "49912": 31, "50099": 31, "49805": 31, "50067": 31, "50356": 31, "49595": 31, "49931": 31, "50233": 31, "99719": 31, "100001": 31, "100271": 31, "99821": 31, "100335": 31, "100261": 31, "99933": 31, "100412": 31, "99757": 31, "99774": 31, "100073": 31, "100186": 31, "100152": 31, "100421": 31, "99387": 31, "100394": 31, "99748": 31, "99789": 31, "100323": 31, "100208": 31, "99969": 31, "99710": 31, "100056": 31, "100055": 31, "99572": 31, "99931": 31, "99888": 31, "99314": 31, "100031": 31, "100083": 31, "99895": 31, "100598": 31, "100045": 31, "100402": 31, "100273": 31, "99627": 31, "100165": 31, "100183": 31, "100024": 31, "100590": 31, "100052": 31, "99799": 31, "100354": 31, "99796": 31, "99707": 31, "100075": 31, "100373": 31, "100179": 31, "100206": 31, "100190": 31, "100080": 31, "100151": 31, "100119": 31, "100178": 31, "100028": 31, "99875": 31, "100629": 31, "99605": 31, "99516": 31, "100156": 31, "100377": 31, "100136": 31, "100452": 31, "99568": 31, "100527": 31, "99929": 31, "99926": 31, "99749": 31, "99613": 31, "100253": 31, "100308": 31, "99384": 31, "100466": 31, "99949": 31, "99784": 31, "99643": 31, "100111": 31, "100286": 31, "99711": 31, "99934": 31, "100118": 31, "100642": 31, "99701": 31, "99512": 31, "99624": 31, "100356": [31, 128], "99803": 31, "99829": 31, "100002": 31, "99794": 31, "99910": 31, "99911": 31, "99348": 31, "100181": 31, "99540": 31, "100487": 31, "100322": 31, "150480": 31, "150304": 31, "150431": 31, "150513": 31, "149820": 31, "150113": 31, "150867": 31, "149769": 31, "149829": 31, "150206": 31, "149709": 31, "149843": 31, "149940": 31, "150536": 31, "149616": 31, "150406": 31, "150081": 31, "149314": 31, "149190": 31, "149867": 31, "149532": 31, "150664": 31, "149127": 31, "150455": 31, "150383": 31, "149923": 31, "150148": 31, "149780": 31, "149438": 31, "150602": 31, "149840": 31, "149912": 31, "150232": 31, "149796": 31, "150108": 31, "150318": 31, "149658": 31, "150176": 31, "150041": 31, "149664": 31, "150404": 31, "150544": 31, "149937": 31, "149753": 31, "149338": 31, "150170": 31, "150511": 31, "150224": 31, "149102": 31, "150186": 31, "149879": 31, "150433": 31, "149805": 31, "150276": 31, "175660": 31, "200557": 31, "200545": 31, "199562": 31, "200452": 31, "199484": 31, "199814": 31, "199956": 31, "200014": 31, "200444": 31, "200015": 31, "200399": 31, "200585": 31, "200201": 31, "200183": 31, "200093": 31, "200285": 31, "200318": 31, "199533": 31, "199660": 31, "200249": 31, "199567": 31, "200052": 31, "200393": 31, "199838": 31, "200248": 31, "200887": 31, "211886": 31, "249519": 31, "250284": 31, "249680": 31, "250398": 31, "250632": 31, "250077": 31, "249789": 31, "249622": 31, "249599": 31, "250217": 31, "249764": 31, "250530": 31, "250694": 31, "249060": 31, "281422": 31, "300561": 31, "299899": 31, "299114": 31, "299654": 31, "300692": 31, "300667": 31, "299642": 31, "340225": 31, "350652": 31, "349699": 31, "349983": 31, "394727": 31, "399944": 31, "449050": 31, "547320": 31, "547204": 31, "447194": 31, "399792": 31, "395037": 31, "350239": 31, "350128": 31, "350125": 31, "340207": 31, "299647": 31, "299787": 31, "300104": 31, "299121": 31, "300420": 31, "299964": 31, "299784": 31, "280898": 31, "249849": 31, "249750": 31, "249125": 31, "250254": 31, "250816": 31, "249811": 31, "249858": 31, "250340": 31, "249795": 31, "250335": 31, "248952": 31, "250597": 31, "250064": 31, "250020": 31, "250558": 31, "212938": 31, "200182": 31, "200668": 31, "200037": 31, "198918": 31, "200097": 31, "200152": 31, "200113": 31, "199732": 31, "200067": 31, "199304": 31, "199824": 31, "200091": 31, "198549": 31, "200027": 31, "199177": 31, "199080": 31, "200064": 31, "199703": 31, "199877": 31, "199787": 31, "200239": 31, "199667": 31, "200728": 31, "200099": 31, "200223": 31, "200108": 31, "175418": 31, "149525": 31, "150058": 31, "149313": 31, "149717": 31, "150227": 31, "150624": 31, "149739": 31, "149930": 31, "150646": 31, "150056": 31, "150751": 31, "150256": 31, "149810": 31, "150198": 31, "149927": 31, "149666": 31, "150235": 31, "150179": 31, "150484": 31, "150985": 31, "150583": 31, "150205": 31, "150003": 31, "149722": 31, "149711": 31, "149136": 31, "150083": 31, "150445": 31, "150382": 31, "149502": 31, "150547": 31, "150270": 31, "149586": 31, "150354": 31, "150217": 31, "150508": 31, "149911": 31, "149965": 31, "150282": 31, "149700": 31, "150468": 31, "149288": 31, "150814": 31, "149906": 31, "149837": 31, "149268": 31, "150008": 31, "149539": 31, "149638": 31, "150243": 31, "149720": 31, "150065": 31, "99804": 31, "100403": 31, "100228": 31, "99925": 31, "99717": 31, "100311": 31, "100606": 31, "100941": 31, "99660": 31, "100224": 31, "100098": 31, "100344": 31, "99787": 31, "99704": 31, "99689": 31, "99900": 31, "99781": 31, "100756": 31, "99864": 31, "99956": 31, "100658": 31, "100546": 31, "99691": 31, "99954": 31, "99941": 31, "99521": 31, "99371": 31, "100374": 31, "100428": 31, "100532": 31, "100087": 31, "100037": 31, "99958": 31, "100117": 31, "100367": 31, "99161": 31, "100074": 31, "100447": 31, "99634": 31, "100459": 31, "99631": 31, "100198": 31, "99715": 31, "100291": 31, "100062": 31, "100762": 31, "99852": 31, "99935": 31, "99713": 31, "100348": 31, "99534": 31, "99812": 31, "99583": 31, "100295": 31, "100434": 31, "100072": 31, "99815": 31, "100015": 31, "99633": 31, "99578": 31, "99744": 31, "100560": 31, "99419": 31, "99942": 31, "100044": 31, "100209": 31, "100338": 31, "99658": 31, "99571": 31, "100066": 31, "100128": 31, "100116": 31, "99668": 31, "100256": 31, "100700": 31, "100081": 31, "99602": 31, "99550": 31, "100265": 31, "100519": 31, "99780": 31, "100039": 31, "100319": 31, "100364": 31, "99808": 31, "100342": 31, "49518": 31, "50084": 31, "50353": 31, "50083": 31, "49771": 31, "50016": 31, "50311": 31, "50175": 31, "50611": 31, "49832": 31, "50242": 31, "49612": 31, "49685": 31, "50437": 31, "50493": 31, "49905": 31, "50109": 31, "49738": 31, "49873": 31, "49772": 31, "50287": 31, "49837": 31, "49692": 31, "49784": 31, "49604": 31, "49552": 31, "50131": 31, "50403": 31, "49945": 31, "49992": 31, "50104": 31, "49807": 31, "50058": 31, "49969": 31, "49640": 31, "49847": 31, "50413": 31, "50078": 31, "50277": 31, "50111": 31, "50127": 31, "50108": 31, "49892": 31, "50191": 31, "50122": 31, "50381": 31, "49936": 31, "50050": 31, "49998": 31, "49528": 31, "50268": 31, "50200": 31, "50814": 31, "50179": 31, "49759": 31, "49739": 31, "50043": 31, "50112": 31, "49766": 31, "49960": 31, "50004": 31, "49674": 31, "50038": 31, "49710": 31, "50068": 31, "49795": 31, "49570": 31, "50172": 31, "50063": 31, "49446": 31, "50074": 31, "49753": 31, "50090": 31, "49989": 31, "50369": 31, "49835": 31, "50053": 31, "50149": 31, "49903": 31, "49890": 31, "50154": 31, "49680": 31, "49825": 31, "49755": 31, "50316": 31, "49127": 31, "49701": 31, "50506": 31, "49711": 31, "49910": 31, "50418": 31, "98023211e": 31, "97427164e": 31, "96831118e": 31, "96831124e": 31, "97427171e": 31, "98023217e": 31, "455067403371979e": 31, "960464410925681e": 31, "45506740e": 31, "20635254e": 31, "39815441e": 31, "58995628e": 31, "78175815e": 31, "97356002e": 31, "16536189e": 31, "35716375e": 31, "54896562e": 31, "07407675e": 31, "19325694e": 31, "31243712e": 31, "43161731e": 31, "55079750e": 31, "66997768e": 31, "78915787e": 31, "90833806e": 31, "02751824e": 31, "14669843e": 31, "26587862e": 31, "38505880e": 31, "50423899e": 31, "62341918e": 31, "74259937e": 31, "86177955e": 31, "98095974e": 31, "10013993e": 31, "21932011e": 31, "33850030e": 31, "45768049e": 31, "57686067e": 31, "69604086e": 31, "81522105e": 31, "93440123e": 31, "05358142e": 31, "17276161e": 31, "29194179e": 31, "41112198e": 31, "53030217e": 31, "64948236e": 31, "76866254e": 31, "88784273e": 31, "00702292e": 31, "12620310e": 31, "24538329e": 31, "36456348e": 31, "48374366e": 31, "60292385e": 31, "72210404e": 31, "84128422e": 31, "96046441e": 31, "95118410107176e": 31, "356065690964584e": 31, "665": 31, "1307249792036345e": 31, "7258433893108105e": 31, "882": 31, "3209617994179865e": 31, "910": [31, 145], "993": 31, "9160802095251626e": 31, "949": 31, "1012": 31, "5111986196323386e": 31, "1063170297395146e": 31, "924": 31, "7014354398466907e": 31, "296553849953867e": 31, "923": 31, "891672260061043e": 31, "951184e": 31, "028398": 31, "986": 31, "190237e": 31, "033138": 31, "785355e": 31, "043605": 31, "1032": 31, "380474e": 31, "068702": 31, "1048": 31, "975592e": 31, "065025": 31, "1014": 31, "1028": 31, "1034": 31, "1022": 31, "635": 31, "1020": 31, "973": 31, "879": 31, "899": [31, 237], "964": 31, "943": 31, "020937": 31, "040583": 31, "042084": 31, "081755": 31, "094303": 31, "1046": 31, "987": 31, "962": 31, "968": 31, "enumerate_row": 52, "4584214264768637": 52, "0957370472492135": 52, "825720254865909": 52, "056222146826998554": 52, "012568801665460705": 52, "20797581971445256": 52, "6508447830614892": 52, "817974554103244": 52, "04182207570159391": 52, "591375261282058": 52, "5818213564160107": 52, "3384435930913253": 52, "5900215149482624": 52, "9556893663618211": 52, "9156247392985197": 52, "20153581804870713": 52, "893987513368823": 52, "11112779556835362": 52, "043959856261986174": 52, "233344273733338": 52, "c0": 52, "c6": 52, "c7": 52, "c8": 52, "c9": 52, "155969": 52, "431193": 52, "995451": 52, "081467": 52, "257834": 52, "457617": 52, "773857": 52, "843436": 52, "842255": 52, "570137": 52, "876386": 52, "702447": 52, "130592": 52, "084160": 52, "782795": 52, "065442": 52, "682476": 52, "077565": 52, "444916": 52, "025166": 52, "854808": 52, "873240": 52, "055319": 52, "518709": 52, "486142": 52, "034237": 52, "979128": 52, "997898": 52, "472220": 52, "512437": 52, "476952": 52, "250016": 52, "964843": 52, "579930": 52, "693238": 52, "103160": 52, "249000": 52, "850935": 52, "632083": 52, "738248": 52, "773502": 52, "237446": 52, "974755": 52, "564504": 52, "684763": 52, "361164": 52, "152243": 52, "320242": 52, "218529": 52, "411604": 52, "225": 52, "from_record": 52, "create_df3": 52, "fromit": 52, "enumerate_row2": 52, "18094164": 52, "98726051": 52, "15154422": 52, "02532254": 52, "13567288": 52, "52949799": 52, "9955031": 52, "56441516": 52, "95278832": 52, "37068437": 52, "97776124": 52, "1088838": 52, "72051064": 52, "79808152": 52, "25334263": 52, "04203916": 52, "8290536": 52, "32045666": 52, "48908504": 52, "70058525": 52, "03562189": 52, "45141838": 52, "98266729": 52, "36282507": 52, "74903618": 52, "36675298": 52, "30681627": 52, "86053065": 52, "36733881": 52, "03716365": 52, "8255547": 52, "31025914": 52, "61405287": 52, "2289358": 52, "87746991": 52, "98780181": 52, "99195587": 52, "6592586": 52, "90237022": 52, "73119145": 52, "79096242": 52, "72046597": 52, "87479709": 52, "75549334": 52, "2525281": 52, "91680528": 52, "97679278": 52, "92947194": 52, "2344261": 52, "67808894": 52, "create_array": 52, "create_array2": 52, "create_array3": 52, "enhancing": 52, "uci": 62, "p\u00e9dagog": 62, "bouch": 62, "taniqu": 62, "parfum": 62, "breuvag": 62, "pipet": 62, "chimiqu": [62, 138], "gustat": 62, "composit": 62, "envi": 62, "viticulteur": 62, "6000": [62, 145], "r\u00e9pertori": 62, "wines_knn_acp": [], "i_": 62, "d\u00e9saccord": 62, "visag": 62, "ball": 62, "acquis": [62, 139], "aubain": [62, 139], "cross": [62, 126, 137], "appris": 62, "descent": 62, "illusoir": 62, "loinormal": [62, 70], "independ": [62, 70], "epsilon_j": [62, 70], "Soient": [62, 70], "saporta2006": 62, "supervised": 62, "lumi": 62, "cibl": 62, "logisit": 62, "fonti": 62, "beta_0": 62, "propto": 62, "kullbak": 62, "leib": 62, "loss": 62, "converst": 62, "onevsrest": [62, 128, 136, 137], "onevson": [62, 128], "c_k": 62, "remport": 62, "paradoxal": 62, "d\u00e9s\u00e9quilibr": 62, "furnkranz2002": 62, "leg": 62, "stacked": 62, "generaliz": 62, "supportent": 62, "nativ": 62, "hyperparametr": [62, 141], "pipelin": [62, 126, 134, 137], "svm": [62, 129, 134], "feature_select": [62, 134], "selectkbest": [62, 134], "f_regress": [62, 134], "anova_filt": [62, 134], "clf": [62, 129, 134], "svc": [62, 129, 134], "linear": [62, 129, 134], "anova_svm": [62, 134], "anov": [62, 134], "score_func": [62, 134], "0x7fad15256830": [], "estimator": [62, 134, 136, 137, 139, 141], "get_param": [62, 145], "set_param": 62, "clon": [62, 134], "skbaselearnercategory": [], "baseestimator": 134, "overfitting": [62, 145], "gilbert": 62, "saport": 62, "technip": 62, "robin": 62, "johann": 62, "f\u00fcrnkranz": 62, "run_python_script_140382770676992": [], "0x7fad6a356260": [], "spectrum": 126, "ssa": 126, "conviendr": 129, "retravaill": 129, "fresqu": 129, "classifi": [129, 134], "_imag": 129, "sphx_glr_plot_classifier_comparison_001": 129, "lda": 129, "listedcolormap": 129, "plot_clf_2cl": 129, "x_min": 129, "x_max": 129, "y_min": 129, "y_max": 129, "xx": 129, "yy": 129, "interpol": 129, "extent": 129, "filterwarning": [128, 129], "linetyp": 129, "paired": 129, "set_xtick": 129, "set_ytick": 129, "knn": [129, 138, 139, 140, 141, 142, 143], "svcifittedsvc": 129, "s\u00e9duis": 129, "captur": 129, "xext": 129, "coef_": [129, 133], "13422662": 129, "08574201": 129, "1199182": 129, "52645729": 129, "2371076": 129, "plot_clf_2classes_poly": 129, "vorono\u00ef": 129, "singular": [130, 145], "methodology": 130, "automated": 130, "outli": 130, "y_t": 130, "epsilon_t": 130, "bruit1": 130, "24857848": 130, "14896109": 130, "81023497": 130, "85981186": 130, "04023266": 130, "bruit2": 130, "00542873": 130, "19959898": 130, "04290419": 130, "18763969": 130, "60007673": 130, "autocorr\u00e9logramm": 130, "_d": 130, "005429": 130, "199599": 130, "042904": 130, "187640": 130, "600077": 130, "statsmodel": [130, 133, 145], "tsa": 130, "tsatool": 130, "detrend": 130, "notrend": 130, "438347": 130, "753363": 130, "491601": 130, "736482": 130, "053695": 130, "stattool": 130, "acf": 130, "autor\u00e9gress": 130, "pacf": 130, "pcor": 130, "lagged_t": 130, "lag": 130, "13700254": 130, "06081016": 130, "89449208": 130, "23733857": 130, "32045675": 130, "vh": 130, "recompos": 130, "reconstruit": 130, "850": 130, "consid\u00e9rent": 130, "off": 130, "ellipticenvelop": 130, "env": 130, "support_fract": 130, "ellipticenvelopeifittedellipticenvelop": 130, "contigu": 130, "incrimin": 130, "outp": 130, "pcapc": 131, "explained_variance_ratio_": 131, "louch": 131, "components_": 131, "443235": 131, "056034": 131, "525319": 131, "744574": 131, "994697": 131, "757804": 131, "035034": 131, "749400": 131, "521855": 131, "002999": 131, "600000": [128, 131], "009000": 131, "987110": 131, "800000": [128, 131], "038000": 131, "992340": 131, "047000": 131, "118": 131, "994890": 131, "065000": 131, "996990": 131, "611000": 131, "289": 131, "440": 131, "038980": 131, "mean_val": 131, "napres": 131, "nde": [131, 140], "alcool": [131, 145], "acid": 131, "dioxyd": 131, "semblent": 131, "pl": 131, "v3": 131, "lmplot": 131, "hu": [131, 142], "truncat": 131, "scatter_kw": 131, "fit_reg": 131, "graphd": 131, "kdeplot": 131, "thresh": 131, "cmx": 131, "d\u00e9grag": 131, "get_cmap": 131, "plasm": 131, "cnorm": 131, "vmin": 131, "vmax": 131, "scalar": 131, "scalarmapp": 131, "to_rgb": 131, "vaudr": 131, "d\u00e9tach": 131, "run_python_script_140382718775296": 216, "run_python_script_140382718311232": 216, "run_python_script_140382720051200": 216, "run_python_script_140382719904576": 216, "run_python_script_140382658848128": 216, "run_python_script_140382658317376": 216, "1931532999997216": 216, "6353343000000677": 216, "5119543999999223": 216, "run_python_script_140382721521792": 216, "run_python_script_140382713632192": 219, "run_python_script_140382719552896": 219, "run_python_script_140382703693120": 219, "run_python_script_140382756335936": 220, "run_python_script_140382755611008": 220, "run_python_script_140381344552384": 220, "run_python_script_140381337640896": 220, "run_python_script_140381344056192": 220, "run_python_script_140382658312576": 220, "052853700000014214": 225, "045805200000359036": 225, "241687": 227, "17607": 227, "1705923426": 227, "2503335": 227, "0x7fad82dca9e0": 228, "run_python_script_140382661344704": 230, "run_python_script_140382663021184": 230, "run_python_script_140382788368896": 230, "run_python_script_140382776385792": 230, "run_python_script_140382794776256": 230, "run_python_script_140382788634048": 230, "run_python_script_140382783187072": 230, "0x7fad67fcca00": 230, "run_python_script_140382734474304": 231, "run_python_script_140382738145856": 231, "0x7fad66867c40": 231, "14404": 234, "6662775322385049": 234, "run_python_script_140382693679040": 235, "0x7fad68eb2aa0": 235, "820": 237, "974": 237, "172": [145, 237], "828": 237, "527": [137, 237], "55111123193636": 237, "0x7f40756a1360": [], "0x7fb653469240": [], "092": [138, 139], "9970": [138, 139], "075": [138, 139], "9980": [138, 139, 145], "exclut": 138, "cal": [134, 137, 138], "n_neighbor": [138, 139, 140, 141, 142, 143], "kneighborsregressorifittedkneighborsregressor": [138, 139, 140, 142, 143], "nearestneighbor": 140, "nearestneighborsifittednearestneighbor": 140, "note_proch": 140, "dif": 140, "violinplot": 140, "boxplot": 140, "violon": 140, "ndiff\u00e9rent": 140, "abs_diff": 140, "_oldcor": [140, 142], "1119": [140, 142], "use_inf_as_n": [140, 142], "option_context": [140, 142], "rassur": 140, "6152070186239803": 140, "2763": 142, "4504": 142, "1063": 142, "2238": 142, "6118": 142, "nvaleur": 142, "ax_marg_x": 142, "5452307692307692": 142, "mean_absolute_error": 142, "052827181324763384": 142, "0033815067443303537": 142, "ys2": [142, 143], "666667": [142, 143], "325153": 142, "1575": 142, "357460": 142, "2146": 142, "321528": 142, "268": 142, "330456": 142, "237179": 142, "263158": 143, "1585": 143, "348896": 143, "702": 143, "2134": 143, "328960": 143, "261": [143, 145], "319071": 143, "359155": 143, "stratifiedshufflespl": 143, "n_split": [137, 139, 143], "test_siz": 143, "train_index": 143, "test_index": 143, "4352": [143, 145], "2145": 143, "489655": 143, "706": 143, "1432": 143, "493017": 143, "936": 143, "492632": 143, "356": 143, "723": 143, "492393": 143, "496124": 143, "invidivu": 143, "15256811411591387": 143, "balanc": [62, 126], "stacking": [62, 126], "0x7fe4197732e0": 62, "run_python_script_140617651383872": 69, "0x7fe4192def10": 69, "make_blob": 128, "\u00e9court": 128, "remet": 128, "cluster_std": 128, "center": 128, "rgbyc": 128, "sag": 128, "658": 128, "metton": [128, 139], "evaluate_model": 128, "_time_train": 128, "_time_test": 128, "_scor": 128, "multiclass": [128, 136, 137], "onevsoneclassifi": [128, 136], "onevsrestclassifi": [128, 136, 137], "ovo": 128, "ovr": 128, "lr_time_train": 128, "2209448000003249": 128, "lr_time_test": 128, "009104000000206725": 128, "lr_scor": 128, "662": 128, "2086589999998978": 128, "005245500000000902": 128, "05842000000029657": 128, "0010207000000264088": 128, "032755": 128, "001730": 128, "022686": 128, "001637": 128, "324123": 128, "032629": 128, "812": 128, "076139": 128, "001591": 128, "808": 128, "730089": 128, "036648": 128, "488": 128, "053406": 128, "508": [128, 145], "984762": 128, "096167": 128, "444": 128, "116836": 128, "001022": 128, "468": 128, "537234": 128, "154609": 128, "110220": 128, "001036": 128, "595010": 128, "209428": 128, "328": 128, "122475": 128, "000956": 128, "336": 128, "022290": 128, "437165": 128, "150593": 128, "000868": 128, "009756": 128, "003354": 128, "980000": 128, "016191": 128, "001600": 128, "248614": 128, "011291": 128, "636000": 128, "092591": 128, "001695": 128, "568000": 128, "834381": 128, "067650": 128, "524444": 128, "376624": 128, "004853": 128, "466667": 128, "502573": 128, "099040": 128, "460000": 128, "721085": 128, "004124": 128, "436923": 128, "613464": 128, "178248": 128, "397647": 128, "990700": 128, "005284": 128, "342353": 128, "057976": 128, "297401": 128, "375238": 128, "337764": 128, "006087": 128, "340952": 128, "861960": 128, "479451": 128, "316800": 128, "269823": 128, "008297": 128, "269600": 128, "rg": 128, "cy": 128, "std_": 128, "031314": 128, "243204": 128, "584626": 128, "005322": 128, "560": 128, "901009": 128, "275102": 128, "527490": 128, "008637": 128, "790364": 128, "245218": 128, "538992": 128, "005838": 128, "985556": 128, "258749": 128, "459469": 128, "005051": 128, "154060": 128, "258028": 128, "603545": 128, "005316": 128, "031245": 128, "208715": 128, "529591": 128, "005976": 128, "042428": 128, "264521": 128, "491270": 128, "005313": 128, "325670": 128, "225577": 128, "740": 128, "760807": 128, "005378": 128, "728": 128, "953030": 128, "214104": 128, "865434": 128, "005122": 128, "952": 128, "404396": 128, "234881": 128, "967371": 128, "009054": 128, "818875": 128, "287795": 128, "898213": 128, "005280": 128, "df5": 128, "285135": 128, "017950": 128, "042483": 128, "002003": 128, "520000": 128, "895627": 128, "189201": 128, "302857": 128, "168547": 128, "004620": 128, "251429": 128, "890931": 128, "605583": 128, "196667": 128, "367130": 128, "013213": 128, "404424": 128, "189003": 128, "499927": 128, "012866": 128, "105882": 128, "166851": 128, "902685": 128, "132727": 128, "772086": 128, "014063": 128, "083636": 128, "347375": 128, "720673": 128, "901161": 128, "043177": 128, "084444": 128, "135": 128, "rgcy": 128, "jeu_x_y": 128, "ncl": 128, "resx": 128, "resy": 128, "decisiontreeclassifi": [128, 134, 136], "22it": 128, "dt_time_train": 128, "dt_time_test": 128, "dt_scor": 128, "008709": 128, "003290": 128, "014272": 128, "002550": 128, "001384": 128, "001313": 128, "050579": 128, "007302": 128, "025281": 128, "002580": 128, "733333": 128, "001434": 128, "001112": 128, "013768": 128, "032940": 128, "001779": 128, "320000": 128, "001064": 128, "000719": [128, 145], "185524": 128, "020908": 128, "046669": 128, "001958": 128, "085714": 128, "001124": 128, "000627": 128, "292794": 128, "039437": 128, "311111": 128, "083591": 128, "003007": 128, "111111": 128, "001478": 128, "000881": 128, "rgycbp": 128, "njeu": 128, "discrete_model": 133, "048414": 133, "summary2": [133, 145], "mle": 133, "dependent": [133, 145], "squared": [133, 145], "913": 133, "aic": [133, 145], "493": 133, "7476": 133, "4872": [133, 145], "bic": [133, 145], "1515": 133, "likelihood": [133, 145], "residual": [133, 145], "4861": 133, "2717": 133, "converged": 133, "llr": 133, "025": [133, 145], "4541": [133, 145], "5981": 133, "7511": 133, "1572": 133, "3716": 133, "9995": 133, "3771": 133, "3306": [133, 145], "4126": 133, "7492": 133, "1280": 133, "5507": 133, "1210": 133, "4616": 133, "9599": 133, "1246": 133, "0600": 133, "0756": 133, "0379": 133, "0069": 133, "2422": 133, "7390": 133, "9560": 133, "2758": [133, 145], "4926": 133, "9854": 133, "0505": 133, "0134": 133, "7724": 133, "0768": 133, "0243": 133, "0632": 133, "0050": 133, "6896": 133, "0534": 133, "0730": 133, "2093": 133, "9806": 133, "7610": 133, "2610": 133, "7417": 133, "9800": 133, "9204": 133, "6624": 133, "8210": 133, "8918": 133, "0237": 133, "6857": 133, "8983": 133, "8853": 133, "4150": 133, "3656": 133, "0008": 133, "1733": 133, "6567": 133, "x_train2": 133, "11120776": 133, "79383309": 133, "83313405": 133, "89025431": 133, "14615898": 133, "npar": 133, "nlogist": 133, "nselon": 133, "color_train": 134, "color_test": 134, "accuracy_scor": 134, "4793846153846154": 134, "x_train_whit": 134, "y_train_whit": 134, "x_train_red": 134, "y_train_red": 134, "clr_whit": 134, "clr_red": 134, "x_test_whit": 134, "y_test_whit": 134, "x_test_red": 134, "y_test_red": 134, "acc_whit": 134, "acc_red": 134, "47843775427176566": 134, "5984848484848485": 134, "acc2": 134, "5076923076923077": 134, "sklearnercategory": 134, "opt\u00e9": 134, "pla\u00eet": 134, "cat_col": 134, "classifiermixin": 134, "colnameind": 134, "_get_cat": 134, "_filter_cat": 134, "sample_weight": 134, "pragm": 134, "xcat": 134, "ycat": 134, "scat": 134, "_any_predict": 134, "pylint": 134, "e1136": 134, "accuracy": 134, "_estimator_typ": 134, "scoring": [134, 139], "new_x_train": 134, "sklearnercategoryinot": 134, "fittedsklearnercategory": 134, "logisticregressionlogisticregress": [134, 136, 137], "new_x_test": 134, "5058461538461538": 134, "colorart": 134, "xart": 134, "yart": 134, "new_x_art": 134, "pred2": 134, "essayson": 134, "acc1": 134, "6098461538461538": 134, "5981538461538461": 134, "randomforestclassifi": [134, 136, 137], "7003076923076923": 134, "7046153846153846": 134, "play": 134, "0x7f1ce528ec20": 134, "pipelineifittedpipelin": 134, "selectkbestselectkbest": 134, "svcsvc": 134, "591782": 135, "745667": 135, "874864": 135, "381441": 135, "017183": 135, "1545": 135, "d\u00e9cidon": 135, "subtil": 135, "list_cl": 135, "pred_": 135, "994822102226496": 135, "9165399409607299": 135, "thi": 135, "dfa": 135, "879005": 135, "250000": 135, "925869": 135, "007364": 135, "913118": 135, "919359": 135, "92586": 135, "932542": 135, "938355": 135, "ndu": [135, 141], "score_ab": 135, "count_sum": 135, "394": 135, "912383": 135, "997475": 135, "395": 135, "204326": 135, "1227": 135, "561302": 135, "999186": 135, "671458": 135, "dfscsumab": 135, "dfscsum": 135, "liblinear": [136, 137], "07692307692308": 136, "332": 136, "dfconf": 136, "onevsrestclassifierifittedonevsrestclassifi": [136, 137], "95384615384615": 136, "onevsoneclassifierifittedonevsoneclassifi": 136, "138461538461534": 136, "524": 136, "decisiontreeclassifierifitteddecisiontreeclassifi": 136, "323076923076925": 136, "decisiontreeclassifierdecisiontreeclassifi": 136, "35384615384615": 136, "58461538461538": 136, "randomforestclassifierifittedrandomforestclassifi": [136, 137], "2923076923077": 136, "randomforestclassifierrandomforestclassifi": [136, 137], "41538461538461": 136, "mlpclassifi": 136, "hidden_layer_siz": 136, "mlpclassifierifittedmlpclassifi": 136, "800000000000004": 136, "mlpclassifiermlpclassifi": 136, "foudroi": 136, "stackmult": 137, "70769230769231": 137, "339": 137, "rfc": 137, "9846153846154": 137, "rf_train": 137, "rfc_y": 137, "rf_test": 137, "83076923076922": 137, "fpr_lr": 137, "tpr_lr": 137, "th_lr": 137, "fpr_rfc": 137, "tpr_rfc": 137, "th_rfc": 137, "fpr_rfc_y": 137, "tpr_rfc_y": 137, "th_rfc_y": 137, "auc_lr": 137, "auc_rfc": 137, "auc_rfc_y": 137, "7269546464802059": 137, "6626763197852255": 137, "6701197104064432": 137, "rf": 137, "nmodel": 137, "pr\u00e9dicteur": 137, "make_pipelin": [137, 145], "5556820682740744": 137, "7318154142418192": 137, "7349919877544187": 137, "partinent": 137, "rf_train_bin": 137, "y_train_bin": 137, "rf_test_bin": 137, "y_test_bin": 137, "fpr_rfc_bin": 137, "tpr_rfc_bin": 137, "th_rfc_bin": 137, "auc_rfc_bin": 137, "7731918190932655": 137, "stackingclassifi": 137, "ovrlr": 137, "_split": 137, "737": 137, "populated": 137, "less": 137, "stackingclassifierifittedstackingclassifi": 137, "final_estimator": 137, "fpr_pip": 137, "tpr_pip": 137, "th_pip": 137, "auc_pip": 137, "7196235911146174": 137, "escamot": 137, "83897083": 139, "4670711": 139, "59014921": 139, "38119203": 139, "77196458": 139, "make_scor": 139, "mean_squared_error": 139, "21615385": 139, "21230769": 139, "27328714": 139, "14857583": 139, "13702848": 139, "cross_validat": 139, "return_train_scor": [139, 141], "fit_tim": 139, "01611519": 139, "01256323": 139, "01422715": 139, "01552773": 139, "01151872": 139, "score_tim": 139, "0266242": 139, "0449729": 139, "04643941": 139, "03146887": 139, "03442144": 139, "test_r2": 139, "test_e2": 139, "023381240522471147": 139, "\u00e9ton": 139, "r\u00e9execut": 139, "05359981564444394": 139, "02825642": 139, "01596737": 139, "01639652": 139, "01254725": 139, "00996113": 139, "03756237": 139, "05450106": 139, "05501556": 139, "0289607": 139, "0300467": 139, "suspect": 139, "miracul": 139, "stratifiedkfold": 139, "01946974": 139, "01295662": 139, "01164722": 139, "01231718": 139, "01509309": 139, "03926373": 139, "03318691": 139, "03969431": 139, "04624486": 139, "04102969": 139, "07101199": 139, "04884618": 139, "06402385": 139, "06367173": 139, "12013179": 139, "81769231": 139, "80076923": 139, "80908391": 139, "80985373": 139, "85527329": 139, "6492": 139, "6493": 139, "6494": 139, "6495": 139, "6496": 139, "1599": [139, 145], "1598": 139, "gridsearchcv": [139, 141], "cvgrid": 139, "param_grid": [139, 141], "92053": 139, "response_method": 139, "gridsearchcvifittedgridsearchcv": [139, 141], "kneighborsregressorkneighborsregressor": [139, 141], "cv_results_": [139, 141], "mean_fit_tim": 139, "01401343": 139, "std_fit_tim": 139, "00290775": 139, "mean_score_tim": 139, "03055172": 139, "std_score_tim": 139, "00386653": 139, "split0_test_r2": 139, "03977834": 139, "split1_test_r2": 139, "0196276": 139, "split2_test_r2": 139, "01542904": 139, "split3_test_r2": 139, "05962735": 139, "split4_test_r2": 139, "06669616": 139, "mean_test_r2": 139, "0402317": 139, "std_test_r2": 139, "02057409": 139, "rank_test_r2": 139, "split0_test_e2": 139, "79384615": 139, "split1_test_e2": 139, "77846154": 139, "split2_test_e2": 139, "77213241": 139, "split3_test_e2": 139, "80677444": 139, "split4_test_e2": 139, "81447267": 139, "mean_test_e2": 139, "79313744": 139, "std_test_e2": 139, "01611369": 139, "rank_test_e2": 139, "best_estimator_": 139, "df_al": 141, "fitting": 141, "totalling": 141, "param_n_neighbor": 141, "train_scor": 141, "mean_train_scor": 141, "test_scor": 141, "mean_test_scor": 141, "df_scor": 141, "prendront": 145, "polynomialfeatur": 145, "r2t": 145, "r2e": 145, "tt": 145, "1909065078664849": 145, "16570749381482386": 145, "02195639999990817": 145, "31686272332465504": 145, "2634484656108902": 145, "16658860000006825": 145, "4117084105383497": 145, "446755311176299": 145, "0382120000001578": 145, "5940872457783092": 145, "3926": 145, "677572477097": 145, "8583189999999377": 145, "r2_train": 145, "r2_test": 145, "021956": 145, "190907": 145, "165707": 145, "166589": 145, "316863": 145, "263448": 145, "038212": 145, "411708": 145, "446755": 145, "858319": 145, "594087": 145, "677572": 145, "continuent": 145, "napprentissag": 145, "ntest": 145, "polynomialfeatures__degre": 145, "\u00e9gar": 145, "surpr": 145, "poly": 145, "poly_feat_train": 145, "poly_feat_test": 145, "ol": 145, "306": 145, "10768": 145, "5223": 145, "11268": 145, "3493": 145, "5307": 145, "4795": 145, "52557": 145, "874": 145, "2126": 145, "1866": 145, "6100": 145, "4683": 145, "6396": 145, "1996": 145, "4533": 145, "6248": 145, "2438": 145, "1175": 145, "6865": 145, "4924": 145, "4856": 145, "735": 145, "9147": 145, "2593": 145, "4802": 145, "1057": 145, "9383": 145, "413": 145, "8911": 145, "2205": 145, "9788": 145, "8670": 145, "0620": 145, "2311": 145, "7900": 145, "1457": 145, "7859": 145, "1556": 145, "8763": 145, "8809": 145, "1723": 145, "x5": 145, "1219": 145, "9140": 145, "760": 145, "0849": 145, "6050": 145, "1086": 145, "2710": 145, "0291": 145, "270": 145, "x6": 145, "0684": 145, "8318": 145, "1496": 145, "9873": 145, "x7": 145, "6122": 145, "6785": 145, "9263": 145, "0541": 145, "8085": 145, "0328": 145, "x8": 145, "1621": 145, "4602": 145, "2479": 145, "0246": 145, "3036": 145, "1752": 145, "3890": 145, "x9": 145, "123": 145, "6719": 145, "5043": 145, "6294": 145, "5291": 145, "9104": 145, "5667": 145, "x10": 145, "213": 145, "6188": 145, "6441": 145, "2373": 145, "2160": 145, "0806": 145, "8429": 145, "x11": 145, "6811": 145, "3731": 145, "8257": 145, "9381": 145, "4241": 145, "x12": 145, "0924": 145, "1860": 145, "0506": 145, "4775": 145, "6331": 145, "4534": 145, "6449": 145, "x13": 145, "0448": 145, "3410": 145, "4266": 145, "1538": 145, "7320": 145, "8216": 145, "x14": 145, "2454": 145, "2389": 145, "8850": 145, "3762": 145, "544": 145, "1614": 145, "205": 145, "6706": 145, "x15": 145, "3959": 145, "0911": 145, "1136": 145, "9096": 145, "7441": 145, "9523": 145, "x16": 145, "4367": 145, "2643": 145, "8189": 145, "1144": 145, "9447": 145, "1447": 145, "8180": 145, "3943": 145, "8122": 145, "3651": 145, "6306": 145, "8421": 145, "x18": 145, "3144": 145, "5557": 145, "5784": 145, "7580": 145, "1291": 145, "1023": 145, "2972": 145, "2161": 145, "8289": 145, "2296": 145, "9691": 145, "7644": 145, "x20": 145, "5729": 145, "0106": 145, "3123": 145, "247": 145, "7314": 145, "774": 145, "8773": 145, "x21": 145, "1261": 145, "0152": 145, "4293": 145, "1530": 145, "0912": 145, "3434": 145, "x22": 145, "4573": 145, "1357": 145, "9202": 145, "153": 145, "6952": 145, "2193": 145, "x23": 145, "1256": 145, "2263": 145, "4050": 145, "6346": 145, "5257": 145, "5136": 145, "7684": 145, "2624": 145, "3158": 145, "x24": 145, "2503": 145, "6940": 145, "1629": 145, "0043": 145, "5369": 145, "689": 145, "9019": 145, "5697": 145, "2899": 145, "x25": 145, "304": 145, "5840": 145, "4970": 145, "1834": 145, "578": 145, "0621": 145, "1060": 145, "x26": 145, "6503": 145, "3193": 145, "4276": 145, "6479": 145, "5207": 145, "1284": 145, "1880": 145, "8729": 145, "14887": 145, "5116": 145, "4348": 145, "6919": 145, "0071": 145, "8643": 145, "4288": 145, "x28": 145, "9165": 145, "6814": 145, "7199": 145, "3141": 145, "5190": 145, "x29": 145, "5408": 145, "0462": 145, "5170": 145, "0682": 145, "0460": 145, "2956": 145, "15543": 145, "7521": 145, "4727": 145, "6598": 145, "x30": 145, "1591": 145, "6613": 145, "1576": 145, "5785": 145, "0096": 145, "1499": 145, "1559": 145, "4682": 145, "4786": 145, "x31": 145, "3066": 145, "2318": 145, "1347": 145, "2069": 145, "2760": 145, "5707": 145, "3755": 145, "0882": 145, "x32": 145, "6934": 145, "2814": 145, "3375": 145, "0009": 145, "3778": 145, "0089": 145, "x33": 145, "861": 145, "9664": 145, "2070": 145, "4337": 145, "4163": 145, "6772": 145, "3197": 145, "0336": 145, "4920": 145, "x34": 145, "3877": 145, "8498": 145, "7887": 145, "0737": 145, "644": 145, "2921": 145, "5168": 145, "x35": 145, "8483": 145, "4913": 145, "6547": 145, "3948": 145, "2957": 145, "21319": 145, "3893": 145, "4067": 145, "x36": 145, "5489": 145, "1030": 145, "8116": 145, "0701": 145, "3711": 145, "4689": 145, "x37": 145, "7497": 145, "4947": 145, "6849": 145, "0921": 145, "1819": 145, "6813": 145, "x38": 145, "14067": 145, "7740": 145, "7800": 145, "2113": 145, "8035": 145, "0714": 145, "1224": 145, "2191": 145, "29359": 145, "x39": 145, "5133": 145, "5558": 145, "2077": 145, "6861": 145, "4708": 145, "0135": 145, "9206": 145, "7738": 145, "3378": 145, "x40": 145, "2372": 145, "2746": 145, "8448": 145, "5044": 145, "1325": 145, "5463": 145, "6139": 145, "0647": 145, "x41": 145, "708": 145, "8006": 145, "3385": 145, "9991": 145, "0027": 145, "245": 145, "4687": 145, "1172": 145, "x42": 145, "1293": 145, "1867": 145, "0943": 145, "4875": 145, "6260": 145, "4570": 145, "4908": 145, "2750": 145, "2323": 145, "x43": 145, "4865": 145, "4887": 145, "6027": 145, "0093": 145, "486": 145, "4611": 145, "3456": 145, "5118": 145, "x44": 145, "6328": 145, "0273": 145, "5183": 145, "1290": 145, "4886": 145, "2230": 145, "x45": 145, "8665": 145, "2275": 145, "8200": 145, "8354": 145, "5684": 145, "x46": 145, "1429": 145, "2194": 145, "705": 145, "7754": 145, "0250": 145, "0429": 145, "5757": 145, "2812": 145, "8631": 145, "x47": 145, "287": 145, "7160": 145, "203": 145, "0709": 145, "4168": 145, "1566": 145, "685": 145, "8281": 145, "3961": 145, "x48": 145, "7045": 145, "1916": 145, "1279": 145, "2594": 145, "4371": 145, "0282": 145, "x49": 145, "0129": 145, "5540": 145, "9212": 145, "3570": 145, "3477": 145, "3219": 145, "x50": 145, "10142": 145, "2002": 145, "7074": 145, "9790": 145, "4335": 145, "1518": 145, "3728": 145, "0049": 145, "24012": 145, "4054": 145, "x51": 145, "9536": 145, "1123": 145, "6099": 145, "5419": 145, "851": 145, "0857": 145, "447": 145, "1785": 145, "x52": 145, "1197": 145, "2260": 145, "4747": 145, "0795": 145, "7375": 145, "2535": 145, "1896": 145, "x53": 145, "20265": 145, "9335": 145, "23064": 145, "5613": 145, "8787": 145, "3796": 145, "24951": 145, "1898": 145, "65483": 145, "0568": 145, "x54": 145, "12226": 145, "8108": 145, "6517": 145, "5063": 145, "8760": 145, "0607": 145, "25004": 145, "1137": 145, "550": 145, "x55": 145, "3613": 145, "4768": 145, "4978": 145, "7999": 145, "7258": 145, "4680": 145, "13374": 145, "2092": 145, "6147": 145, "2555": 145, "x56": 145, "2196": 145, "0436": 145, "843": 145, "4185": 145, "6037": 145, "0092": 145, "5563": 145, "3849": 145, "5310": 145, "x57": 145, "6884": 145, "1743": 145, "6261": 145, "2067": 145, "8299": 145, "x58": 145, "9437": 145, "6926": 145, "2426": 145, "0012": 145, "0247": 145, "8627": 145, "x59": 145, "2329": 145, "2374": 145, "8416": 145, "0656": 145, "4492": 145, "1133": 145, "9150": 145, "x60": 145, "8185": 145, "9507": 145, "1728": 145, "8628": 145, "5585": 145, "9216": 145, "x61": 145, "9612": 145, "6414": 145, "8610": 145, "5679": 145, "4903": 145, "x62": 145, "9958": 145, "6344": 145, "3310": 145, "8838": 145, "1079": 145, "x63": 145, "915": 145, "2771": 145, "4927": 145, "4901": 145, "6241": 145, "4576": 145, "4197": 145, "2745": 145, "8655": 145, "x64": 145, "3795": 145, "6237": 145, "4183": 145, "1773": 145, "x65": 145, "8750": 145, "1471": 145, "9814": 145, "3264": 145, "518": 145, "2041": 145, "x66": 145, "8040": 145, "154": 145, "5694": 145, "5126": 145, "1304": 145, "8310": 145, "x67": 145, "7613": 145, "8714": 145, "1276": 145, "5998": 145, "9229": 145, "x68": 145, "2377": 145, "5655": 145, "18554": 145, "7387": 145, "1281": 145, "8980": 145, "33998": 145, "2360": 145, "38753": 145, "3671": 145, "x69": 145, "11008": 145, "3563": 145, "10291": 145, "6307": 145, "0696": 145, "2848": 145, "9167": 145, "9622": 145, "31184": 145, "6748": 145, "x70": 145, "6367": 145, "0944": 145, "6065": 145, "2219": 145, "0498": 145, "2939": 145, "18257": 145, "7123": 145, "5523": 145, "5234": 145, "x71": 145, "1700": 145, "6336": 145, "2868": 145, "0223": 145, "4012": 145, "0853": 145, "308": 145, "2546": 145, "x72": 145, "4031": 145, "2392": 145, "0986": 145, "5452": 145, "4741": 145, "1802": 145, "x73": 145, "1604": 145, "8538": 145, "1639": 145, "6859": 145, "3277": 145, "1609": 145, "6830": 145, "4819": 145, "3905": 145, "x74": 145, "766": 145, "9861": 145, "249": 145, "3365": 145, "0761": 145, "0021": 145, "1721": 145, "1255": 145, "8001": 145, "x75": 145, "2563": 145, "2045": 145, "2530": 145, "2103": 145, "6573": 145, "4261": 145, "2228": 145, "x76": 145, "596": 145, "8511": 145, "7614": 145, "8319": 145, "0046": 145, "6620": 145, "0402": 145, "x77": 145, "7653": 145, "1865": 145, "5885": 145, "5541": 145, "5795": 145, "4691": 145, "1748": 145, "2623": 145, "6442": 145, "omnibus": 145, "655": 145, "durbin": 145, "watson": 145, "jarqu": 145, "ber": 145, "119": 145, "skew": 145, "kurtos": 145, "712": 145, "4390541685726112": 145, "correctly": 145, "09e": 145, "might": 145, "indicat": 145, "strong": 145, "multicollinearity": 145, "get_feature_names_out": 145, "input_featur": 145, "pft": 145, "061316": 145, "003511": 145, "003461": 145, "019779": 145, "000455": 145, "306582": 145, "939526": 145, "009773": 145, "030263": 145, "000096": 145, "000296": 145, "000044": 145, "001315": 145, "000916": 145, "000138": 145, "004070": 145, "000612": 145, "018090": 145, "035236": 145, "001373": 145, "001922": 145, "065438": 145, "000206": 145, "205924": 145, "974706": 145, "004572": 145, "014552": 145, "000067": 145, "000013": 145, "000192": 145, "000212": 145, "000042": 145, "000613": 145, "000008": 145, "000121": 145, "001772": 145, "042579": 145, "001319": 145, "001919": 145, "101349": 145, "000336": 145, "293852": 145, "947522": 145, "005996": 145, "020210": 145, "000036": 145, "000014": 145, "000345": 145, "000408": 145, "001163": 145, "000005": 145, "000131": 145, "003314": 145, "053638": 145, "000920": 145, "001456": 145, "037547": 145, "000421": 145, "206890": 145, "973147": 145, "007627": 145, "025210": 145, "000058": 145, "000549": 145, "000636": 145, "000079": 145, "001816": 145, "000010": 145, "000226": 145, "005188": 145, "071498": 145, "002413": 145, "002949": 145, "010725": 145, "366428": 145, "920540": 145, "008848": 145, "026812": 145, "000078": 145, "000237": 145, "000981": 145, "000108": 145, "002971": 145, "000016": 145, "000446": 145, "012282": 145, "xnam": 145, "pval": 145, "630773e": 145, "288486e": 145, "462679e": 145, "327338e": 145, "970958e": 145, "905133e": 145, "128466e": 145, "016020e": 145, "289041e": 145, "519337e": 145, "351547e": 145, "721775e": 145, "278805e": 145, "291916e": 145, "249665e": 145, "192719e": 145, "657965e": 145, "010018e": 145, "225201e": 145, "960632e": 145, "109039e": 145, "646809e": 145}, "objects": {"teachpyx.datasets.data_helper": [[3, 0, 1, "", "get_data_folder"]], "teachpyx.datasets": [[3, 0, 1, "", "load_enedis_dataset"], [3, 0, 1, "", "load_wine_dataset"], [3, 0, 1, "", "load_wines_dataset"]], "teachpyx.examples": [[2, 1, 0, "-", "classiques"], [2, 1, 0, "-", "construction_classique"], [6, 1, 0, "-", "numpysex"]], "teachpyx.examples.classiques": [[2, 0, 1, "", "commentaire_accentues"], [2, 0, 1, "", "dictionnaire_modifie_dans_la_boucle"], [2, 0, 1, "", "dix_entiers_carre"], [2, 0, 1, "", "repetition_a_eviter"], [2, 0, 1, "", "str2date"]], "teachpyx.examples.construction_classique": [[2, 0, 1, "", "compte"], [2, 0, 1, "", "construit_matrice_carree"], [2, 0, 1, "", "enumerate_permutations"], [2, 0, 1, "", "enumerate_permutations_recursive"], [2, 0, 1, "", "integrale"], [2, 0, 1, "", "mat2text"], [2, 0, 1, "", "mat2vect"], [2, 0, 1, "", "minindex"], [2, 0, 1, "", "recherche"], [2, 0, 1, "", "recherche_dichotomique"], [2, 0, 1, "", "somme"], [2, 0, 1, "", "text2mat"], [2, 0, 1, "", "triindex"], [2, 0, 1, "", "vect2mat"]], "teachpyx.examples.numpysex": [[6, 0, 1, "", "numpy_matrix2list"], [6, 0, 1, "", "numpy_types"]], "teachpyx.faq": [[4, 1, 0, "-", "faq_exception"], [4, 1, 0, "-", "faq_geo"], [4, 1, 0, "-", "faq_numpy"], [4, 1, 0, "-", "faq_python"]], "teachpyx.faq.faq_exception": [[4, 0, 1, "", "call_stack"]], "teachpyx.faq.faq_geo": [[4, 0, 1, "", "lambert93_to_WGPS"]], "teachpyx.faq.faq_numpy": [[4, 0, 1, "", "to_float32"]], "teachpyx.faq.faq_python": [[4, 2, 1, "", "Distribution"], [4, 3, 1, "", "PQPipError"], [4, 0, 1, "", "class_getitem"], [4, 0, 1, "", "difference_div"], [4, 0, 1, "", "entier_grande_taille"], [4, 0, 1, "", "enumerate_regex_search"], [4, 0, 1, "", "get_day_name"], [4, 0, 1, "", "get_installed_distributions"], [4, 0, 1, "", "get_month_name"], [4, 0, 1, "", "get_package_info"], [4, 0, 1, "", "get_packages_list"], [4, 0, 1, "", "information_about_package"], [4, 0, 1, "", "list_of_installed_packages"], [4, 0, 1, "", "property_example"], [4, 0, 1, "", "python_path"], [4, 0, 1, "", "same_variable"], [4, 0, 1, "", "sortable_class"], [4, 0, 1, "", "stringio"]], "teachpyx.practice": [[7, 1, 0, "-", "rues_paris"], [8, 1, 0, "-", "tsp_bresenham"], [9, 1, 0, "-", "tsp_kohonen"], [10, 1, 0, "-", "tsp_kruskal"]], "teachpyx.practice.rues_paris": [[7, 0, 1, "", "bellman"], [7, 0, 1, "", "connected_components"], [7, 0, 1, "", "distance_haversine"], [7, 0, 1, "", "distance_paris"], [7, 0, 1, "", "euler_path"], [7, 0, 1, "", "eulerien_extension"], [7, 0, 1, "", "get_data"], [7, 0, 1, "", "graph_degree"], [7, 0, 1, "", "kruskal"], [7, 0, 1, "", "possible_edges"]], "teachpyx.practice.tsp_bresenham": [[8, 0, 1, "", "draw_ellipse"], [8, 0, 1, "", "draw_line"], [8, 0, 1, "", "trace_ligne_simple"]], "teachpyx.practice.tsp_kohonen": [[9, 0, 1, "", "ajoute_vecteur"], [9, 0, 1, "", "construit_liste_neurones"], [9, 0, 1, "", "construit_ville"], [9, 0, 1, "", "deplace_neurone"], [9, 0, 1, "", "distance_chemin"], [9, 0, 1, "", "distance_euclidienne_carree"], [9, 0, 1, "", "iteration"], [9, 0, 1, "", "modifie_structure"], [9, 0, 1, "", "moyenne_proximite"], [9, 0, 1, "", "multiplie_vecteur"], [9, 0, 1, "", "poids_attirance"], [9, 0, 1, "", "simulation"], [9, 0, 1, "", "soustrait_vecteur"], [9, 0, 1, "", "vecteur_norme"]], "teachpyx.practice.tsp_kruskal": [[10, 0, 1, "", "amelioration_chemin"], [10, 0, 1, "", "arbre_poids_minimal"], [10, 0, 1, "", "circuit_eulerien"], [10, 0, 1, "", "circuit_hamiltonien"], [10, 0, 1, "", "construit_ville"], [10, 0, 1, "", "dessin_arete_zone"], [10, 0, 1, "", "distance_euclidian"], [10, 0, 1, "", "echange_position"], [10, 0, 1, "", "echange_position_essai"], [10, 0, 1, "", "equation_droite"], [10, 0, 1, "", "evaluation_droite"], [10, 0, 1, "", "intersection_segment"], [10, 0, 1, "", "longueur_chemin"], [10, 0, 1, "", "oppose_vecteur"], [10, 0, 1, "", "repartition_zone"], [10, 0, 1, "", "retournement"], [10, 0, 1, "", "retournement_essai"], [10, 0, 1, "", "simulation"], [10, 0, 1, "", "supprime_croisement"], [10, 0, 1, "", "tsp_kruskal_algorithm"], [10, 0, 1, "", "vecteur_cosinus"], [10, 0, 1, "", "vecteur_norme"], [10, 0, 1, "", "vecteur_points"], [10, 0, 1, "", "vecteur_sinus"], [10, 0, 1, "", "voisinage_zone"], [10, 0, 1, "", "voisinage_zone_xy"]], "teachpyx.tools": [[11, 0, 1, "", "decompress_zip"], [11, 0, 1, "", "download_and_unzip"], [11, 0, 1, "", "draw_diagram"], [11, 1, 0, "-", "profiling"], [11, 0, 1, "", "total_size"]], "teachpyx.tools.display": [[11, 1, 0, "-", "pygame_helper"], [11, 1, 0, "-", "video_helper"]], "teachpyx.tools.display.pygame_helper": [[11, 0, 1, "", "build_diff_image"], [11, 0, 1, "", "display_line"], [11, 0, 1, "", "empty_main_loop"], [11, 0, 1, "", "get_pygame_screen_font"], [11, 0, 1, "", "wait_event"]], "teachpyx.tools.display.video_helper": [[11, 0, 1, "", "get_local_folder"], [11, 0, 1, "", "make_video"]], "teachpyx.tools.graphviz_helper": [[11, 0, 1, "", "draw_graph_graphviz"], [11, 0, 1, "", "run_graphviz"], [11, 0, 1, "", "run_subprocess"]], "teachpyx.tools.profiling": [[11, 2, 1, "", "ProfileNode"], [11, 0, 1, "", "profile"], [11, 0, 1, "", "profile2df"], [11, 0, 1, "", "profile2graph"]], "teachpyx.tools.profiling.ProfileNode": [[11, 4, 1, "", "add_called_by"], [11, 4, 1, "", "add_calls_to"], [11, 4, 1, "", "as_dict"], [11, 4, 1, "", "filter_node_"], [11, 4, 1, "", "get_root"], [11, 5, 1, "", "key"], [11, 4, 1, "", "to_json"], [11, 4, 1, "", "to_text"]], "teachpyx.video.tsp_kohonen_pygame": [[12, 0, 1, "", "pygame_simulation"]], "teachpyx.video.tsp_kruskal_pygame": [[13, 0, 1, "", "pygame_simulation"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:exception", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "function", "Python fonction"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python classe"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python m\u00e9thode"], "5": ["py", "property", "Python propri\u00e9t\u00e9"]}, "titleterms": {"chang": [0, 122, 148, 165, 172], "log": 0, "0": [0, 122, 151], "4": [0, 15, 20, 35, 50, 51, 56, 70, 87, 88, 105, 106, 107, 118, 151, 160, 165, 176, 177, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 206, 207, 208, 211], "3": [0, 15, 20, 50, 51, 70, 79, 87, 88, 100, 106, 107, 108, 118, 120, 148, 151, 159, 160, 165, 176, 177, 178, 179, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 206, 207, 208, 209, 234], "1": [0, 15, 20, 22, 50, 51, 70, 79, 84, 87, 88, 94, 95, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 121, 122, 151, 159, 160, 164, 165, 170, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 206, 207, 208, 216, 230, 234], "survol": 1, "algorithm": [1, 41, 59, 61, 74, 76, 77, 78, 80, 82, 88, 93, 95, 121, 123, 127, 154, 163, 182, 184, 185, 186, 187, 211, 230], "ordre": [1, 56, 70, 78, 82, 89, 230], "grandeur": 1, "comprendr": 1, "co\u00fbt": [1, 41, 111, 112, 118, 121, 153, 163, 192, 211], "mot": [1, 69, 80, 81, 87, 160, 192, 211], "cl\u00e9": [1, 69, 192, 231], "catalogu": 1, "problem": [1, 30, 56, 61, 62, 70, 76, 79, 82, 86, 89, 94, 95, 123, 137, 151, 184, 185, 202, 203, 237], "np": [1, 123], "complet": [1, 122, 123, 151, 189, 239], "id\u00e9": [1, 86, 87, 93, 187, 202, 203], "d\u00e9monstr": [1, 110, 210], "lien": [1, 54], "articl": [1, 23], "livr": 1, "Pour": [1, 56, 172], "entra\u00een": 1, "googl": 1, "recommand": 1, "exampl": [2, 6], "construction_class": 2, "teachpyx": [2, 4, 7, 8, 9, 10, 12, 13], "classiqu": [2, 5, 91, 216, 224, 225, 226, 230], "python": [2, 46, 61, 69, 71, 73, 74, 76, 127, 148, 164, 198, 199, 200, 201, 216, 230, 231, 237, 240], "accept": [2, 71], "accent": [2, 71, 74, 211, 232], "modifi": [2, 69, 70, 121, 226, 230, 231], "dictionnair": [2, 15, 69, 70, 87, 91, 153, 157, 162, 170, 192, 193, 216, 226, 231], "parcour": [2, 92, 95, 123, 226], "Quelle": [2, 4, 71, 165], "diff\u00e9rent": [2, 4, 69, 71, 80, 81, 121, 211], "entre": [2, 4, 51, 56, 69, 70, 71, 80, 81, 121, 161], "return": [2, 69, 71, 192], "print": [2, 69, 71, 231], "calcul": [2, 33, 41, 49, 50, 53, 64, 69, 77, 78, 79, 83, 85, 89, 90, 91, 94, 118, 119, 120, 121, 150, 159, 171, 174, 175, 194, 195, 204, 205, 226], "somm": [2, 83, 119, 157, 226], "dix": [2, 226], "premi": [2, 14, 54, 85, 86, 88, 95, 122, 149, 154, 157, 163, 185, 186, 187, 200, 201, 226, 237], "entier": [2, 176, 177, 226, 231], "carr": [2, 155, 174, 175, 188, 189, 226], "evit": [2, 226], "effectu": [2, 118, 226], "m\u00eam": [2, 54, 56, 80, 81, 82, 118, 121, 163, 198, 211, 226], "appel": [2, 70, 216, 220, 226, 230], "deux": [2, 32, 62, 80, 81, 87, 89, 113, 118, 119, 121, 122, 165, 170, 216, 226], "fois": [2, 119, 226], "convers": [2, 31, 226, 231], "cha\u00een": [2, 40, 69, 70, 153, 226, 231], "caracter": [2, 40, 69, 70, 226, 228, 231, 239], "datetim": [2, 226, 227], "comptag": [2, 226], "fonction": [2, 5, 30, 39, 51, 53, 54, 61, 64, 69, 70, 77, 85, 87, 88, 111, 112, 118, 119, 121, 122, 128, 151, 155, 159, 161, 165, 169, 173, 190, 191, 192, 193, 195, 216, 224, 226, 229, 230, 231, 239], "comm": [2, 111, 112, 226], "parametr": [2, 56, 62, 69, 70, 85, 86, 111, 112, 141, 226, 230], "matric": [2, 48, 53, 61, 78, 84, 91, 95, 113, 114, 118, 121, 151, 170, 174, 175, 226, 231], "vecteur": [2, 226], "minimum": [2, 59, 226], "posit": [2, 56, 70, 151, 226], "recherch": [2, 61, 69, 168, 192, 198, 199, 206, 207, 208, 209, 214, 226], "index": [2, 50, 51, 53, 54, 226], "dichotom": [2, 61, 83, 108, 168, 206, 207, 208, 209, 226], "tri": [2, 15, 78, 87, 88, 111, 112, 154, 159, 173, 206, 207, 226], "gard": [2, 89, 226], "initial": [2, 31, 226], "jeux": [3, 87, 155, 228], "don": [3, 14, 46, 51, 54, 62, 64, 69, 85, 95, 111, 112, 117, 121, 127, 134, 151, 158, 170, 174, 175, 182, 184, 185, 235], "cartograph": 3, "classif": [3, 27, 62, 70, 126, 128, 135, 136, 137], "outil": [3, 127], "r\u00e9gress": [3, 50, 62, 70, 126, 132, 133, 145], "faq": [4, 5, 71], "faq_python": 4, "divis": [4, 71], "Quel": [4, 71], "enti": [4, 71], "plus": [4, 14, 42, 56, 61, 62, 71, 77, 81, 82, 83, 87, 88, 90, 91, 93, 113, 114, 118, 119, 121, 138, 140, 149, 161, 165, 172, 173, 178, 179, 180, 181, 182, 183, 188, 189, 194, 195, 207, 208, 209, 220, 232, 237, 239], "grand": [4, 14, 71, 77, 83, 87, 149, 180, 181], "tabul": [4, 71], "espac": [4, 61, 71, 94, 121], "comment": [4, 71], "iter": [4, 39, 52, 71, 117, 147, 168, 216, 219, 230], "r\u00e9sultat": [4, 56, 71, 77, 85, 115, 116, 118, 121, 224], "express": [4, 15, 71, 94, 160, 198, 199, 238, 239], "r\u00e9guli": [4, 15, 71, 94, 160, 198, 199, 238, 239], "r\u00e9cuper": [4, 51, 54, 71, 85, 220], "nom": [4, 71, 232, 234], "jour": [4, 51, 54, 71], "part": [4, 38, 50, 52, 65, 71, 178, 179, 200, 201, 208, 209], "dat": [4, 51, 71, 76, 227], "mois": [4, 71], "list": [4, 32, 33, 41, 68, 69, 70, 71, 120, 153, 170, 192, 206, 208, 216, 224, 230, 231, 232, 234], "modul": [4, 40, 61, 69, 70, 71, 74, 92, 158, 165, 198, 199, 233, 234], "install": [4, 67, 71, 74], "pourquoi": [4, 27, 71, 87, 118], "pand": [4, 15, 37, 51, 54, 61, 71, 124], "numpy": [4, 6, 15, 36, 49, 50, 53, 54, 55, 61, 71, 124, 164, 171], "march": [4, 50, 56, 71, 85, 234], "sous": [4, 16, 71, 83, 224], "window": [4, 16, 71], "pip": [4, 71], "obten": [4, 71, 169, 219], "inform": [4, 71, 231, 237], "packag": [4, 68, 71, 74], "propriet": [4, 70, 71, 216], "\u00e9vit": [4, 71], "sy": [4, 71], "path": [4, 71], "append": [4, 71], "quand": [4, 71, 195], "d\u00e9velopp": [4, 71], "Qu": [4, 71, 190], "typ": [4, 6, 53, 54, 69, 70, 71, 216, 219, 220, 231], "immuabl": [4, 69, 70, 71, 231], "immut": [4, 70, 71, 231], "class": [4, 30, 39, 54, 62, 69, 70, 71, 122, 127, 128, 136, 137, 146, 148, 149, 150, 151, 152, 188, 189, 190, 191, 210, 216, 217, 218, 219, 224], "sortabl": [4, 71], "a": [4, 31, 65, 68, 71, 118, 122, 123, 151, 155, 239], "quoi": [4, 71, 155, 198, 239], "sert": [4, 71, 155, 198, 239], "stringio": [4, 71], "faq_except": 4, "faq_geo": 4, "Les": [4, 39, 62, 69, 71, 88, 95, 130, 182, 203, 219, 224, 230, 239], "fichi": [4, 51, 61, 69, 71, 74, 198, 199, 204, 205, 228, 232, 234], "geofl": [4, 71], "contiennent": [4, 71], "longitud": [4, 71], "latitud": [4, 71], "faq_numpy": 4, "cod": [5, 17, 30, 69, 96, 104, 108, 110, 122, 165, 192, 193], "inclus": [5, 216], "dan": [5, 61, 69, 82, 89, 118, 121, 122, 151, 153, 192, 198, 199, 206, 207, 224, 232], "librair": 5, "construct": [5, 104, 105, 120, 190, 206, 216, 224, 225, 226, 230], "illustr": [5, 151], "solut": [5, 79, 83, 88, 90, 94, 95, 184, 185, 187, 202, 203], "anim": 5, "numpysex": 6, "oper": [6, 35, 49, 50, 51, 53, 69, 70, 118, 148, 152, 153, 188, 189, 216, 230], "matrix": [6, 49, 50], "Quels": [6, 71], "support": [6, 71], "practic": [7, 8, 9, 10], "rues_par": 7, "tsp_bresenham": 8, "tsp_kohonen": 9, "tsp_kruskal": [10, 13], "tool": 11, "decompress_zip": 11, "download_and_unzip": 11, "draw_diagram": 11, "draw_graph_graphviz": 11, "total_siz": 11, "profiling": [11, 15, 127, 165, 166, 167], "run_graphviz": 11, "run_subprocess": 11, "video": [11, 12, 13], "tsp_kohonen_pygam": 12, "assur": 14, "auto": 14, "r\u00e9flex": [14, 42], "apprentissag": [14, 142, 143], "test": [14, 15, 62, 64, 69, 70, 74, 81, 89, 121, 142, 143, 172, 208, 209, 230], "ajout": [14, 104, 151, 172, 216, 230, 232, 234], "variabl": [14, 61, 64, 68, 69, 70, 174, 175, 192, 208, 209, 229, 230, 231], "agreg": 14, "g\u00e9ograph": 14, "nombr": [14, 50, 70, 77, 79, 84, 118, 128, 151, 186, 187, 230, 231], "mod\u00e9lis": [14, 56], "peu": [14, 42, 53, 77, 174, 178, 179], "anonym": 14, "2022": [15, 16, 23, 120, 121], "11": [15, 20, 108], "31": [15, 20], "rappel": [15, 20, 27, 61], "feuill": [15, 20, 22, 51, 149], "rout": [15, 20, 22], "s\u00e9anc": [15, 20, 22, 97, 125, 215], "7": [15, 20, 54, 151, 182, 183, 198, 199, 206, 207, 208, 209], "9": 15, "introduct": [15, 74, 77, 224], "2": [15, 20, 50, 51, 70, 79, 84, 87, 88, 94, 98, 99, 100, 102, 103, 106, 107, 108, 109, 112, 114, 116, 117, 118, 151, 159, 160, 164, 165, 168, 170, 171, 176, 177, 178, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 206, 207, 208, 216, 234], "14": [15, 100, 101], "programm": [15, 24, 29, 41, 62, 64, 69, 70, 73, 123, 182, 183, 185, 189, 234], "dynam": [15, 51, 123, 182, 183, 185, 230], "voyageur": [15, 61, 92], "commerc": [15, 42, 61, 92], "21": [15, 110], "28": 15, "graph": [15, 47, 51, 54, 61, 78, 84, 85, 93, 117, 123, 126, 151, 178, 179], "5": [15, 20, 51, 87, 106, 151, 165, 182, 183, 198, 199, 206, 207, 208, 209], "10": [15, 99], "s\u00e9rialis": [15, 39, 40, 161, 235], "unitair": [15, 69, 81, 121, 172], "6": [15, 20, 51, 87, 103, 151, 182, 183, 198, 199, 206, 207, 208, 209], "12": [15, 16, 111, 112], "webscrapping": 15, "19": 15, "top": [15, 88], "k": [15, 88, 180, 181], "8": [15, 20, 122, 151, 182, 183, 198, 199], "26": [15, 22, 98, 102, 121], "07": 16, "utilis": [16, 64, 69, 87, 88, 121, 150, 159, 160, 165, 190, 192, 193, 218, 219, 224], "cartopy": [16, 46], "wsl": [16, 21], "2023": [17, 18, 19, 20, 23, 122, 212], "08": [17, 18], "03": [17, 22], "jam": 17, "09": [18, 19], "\u00e9nigm": [18, 30, 35], "hermion": 18, "06": 19, "ensa": 19, "collect": 23, "p\u00e9riss": 23, "galler": [24, 25, 29], "exempl": [24, 25, 29, 50, 56, 70, 134, 148, 167, 216, 219, 230, 231, 232, 234, 239], "machin": [24, 25, 60, 62, 76, 126, 159], "learning": [24, 25, 60, 62, 76, 126], "correl": [26, 56, 61, 174, 175], "receiv": 27, "operating": 27, "characteristic": 27, "roc": [27, 132, 135], "binair": [27, 39, 62, 70, 232, 235], "trois": [27, 62, 69, 74, 118, 120, 188, 189, 230], "courb": [27, 117, 132, 135], "predict_prob": 27, "decision_funct": 27, "precis": 27, "m\u00e9triqu": 27, "f1": [27, 56, 70], "alor": [27, 81], "comput": [28, 43, 44, 241], "tim": [28, 43, 44, 241], "L": 30, "einstein": 30, "r\u00e9solu": 30, "permut": [30, 89, 92, 146, 148], "La": [30, 53, 54, 61, 83, 130, 182, 195, 203, 210], "rul": 30, "explic": 30, "descript": [30, 56], "float": [31, 208], "probability": 31, "float64": 31, "x": [31, 90, 114, 121, 148], "float32": 31, "interval": 31, "length": 31, "distribu": [31, 51, 53], "an": 31, "answer": 31, "to": [31, 65], "the": [31, 65], "question": [31, 107, 207, 218], "similar": 31, "what": 31, "about": 31, "not": [31, 65, 97, 104, 105, 106, 107, 108, 109, 110, 144, 210], "strict": 31, "comparison": 31, "conclus": [31, 56, 109], "Le": [32, 56, 61, 69, 70, 137, 219, 240], "gil": [32, 237], "parallel": 32, "Un": [32, 42, 77, 148, 151, 152, 153, 172, 174, 178, 179, 211, 231, 234, 237], "autr": [32, 33, 56, 62, 69, 111, 151, 159, 165, 170, 172, 190, 198, 199, 216, 224, 227, 235], "sc\u00e9nario": 32, "hypercub": 33, "exercic": [33, 41, 50, 51, 53, 54, 61, 62, 73, 87, 88, 94, 97, 106, 108, 109, 110, 117, 118, 119, 121, 122, 127, 159, 160, 165, 176, 177, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 206, 207, 208, 209], "q1": [33, 38, 53, 54, 78, 80, 82, 85, 89, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 157, 158, 161, 166, 174, 175, 178, 179, 180, 181, 204, 205], "tripl": 33, "r\u00e9curs": [33, 70, 111, 112, 168, 192, 230], "q2": [33, 38, 53, 54, 78, 80, 82, 85, 89, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 157, 158, 161, 166, 174, 175, 178, 179, 180, 181, 204, 205], "comparaison": [33, 83, 230], "q3": [33, 38, 53, 54, 78, 80, 85, 89, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 157, 158, 161, 166, 174, 175, 178, 179, 180, 181, 204, 205], "pr\u00e9cis": [33, 41, 77, 194, 195], "q4": [33, 38, 53, 54, 78, 80, 85, 89, 99, 100, 101, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 157, 158, 166, 174, 175, 178, 179, 204, 205], "astuc": [34, 64, 69], "lambd": [34, 51, 69, 230], "function": [34, 51], "mathador": 35, "point": [36, 51, 61, 70, 92, 111, 112, 118, 121, 127, 130, 234], "impl\u00e9ment": [36, 80, 137, 166, 176, 177, 196, 197], "acced": 36, "\u00e9l\u00e9ment": [36, 50, 77, 88, 104, 153, 157, 192, 230], "particuli": [36, 53, 127], "groupby": 37, "valeur": [37, 53, 54, 70, 78, 113, 114, 163, 192, 219, 230], "manqu": [37, 113, 114], "dam": 38, "json": [39, 40, 158, 161, 235], "ecritur": [39, 69, 198, 230, 232], "lectur": [39, 51, 69, 73, 198, 232], "limit": 39, "rapid": [39, 83, 87, 88, 90, 118, 161, 165, 173, 188, 189, 194, 195], "pickl": [39, 161], "r\u00e9duir": [39, 122], "taill": [39, 77, 121, 122, 172], "cas": [39, 77, 118, 121, 122, 151, 211, 224, 231, 234], "g\u00e9ner": [39, 50, 84, 147, 157, 211, 222, 230], "protobuf": [40, 158], "schem": 40, "compil": [40, 216, 230], "import": [40, 70, 224, 234], "cr\u00e9": [40, 51, 53, 121, 198, 224], "plusieur": [40, 51, 134, 224, 230, 234], "expliqu": [41, 87, 110], "cop": [41, 69, 216, 231, 232], "erreur": [41, 54, 69, 85, 210, 219, 220], "logiqu": [41, 170, 230], "h\u00e9ritag": [41, 69, 70, 150, 151, 190, 191, 216, 219], "doubl": 41, "autour": [42, 216], "voyag": 42, "tsp": [42, 59, 89], "Des": [42, 64, 69, 172], "vill": [42, 89], "tir": [42, 89, 92, 121], "hasard": [42, 171], "crois": [42, 51, 62, 93, 139], "noeud": [42, 93], "d\u00e9part": [42, 54], "const": [42, 70, 159, 231], "al\u00e9atoir": [42, 50, 61, 78, 84, 89, 92, 111, 112, 113, 114, 120, 121, 147, 151, 159, 174, 175, 206], "datafram": [45, 48, 51, 52, 54, 61, 231], "trac": [46, 202, 203], "cart": [46, 54, 58, 61], "plotly": 46, "gmap": 46, "bingmap": 46, "geopand": 46, "folium": 46, "openstreetmap": 46, "matriciel": [49, 50, 53, 91], "optimis": [50, 56, 61, 70, 85, 86, 111, 112, 118, 119, 154, 210, 235], "array": [50, 52, 61], "creation": 50, "notion": [50, 161, 192, 237], "datatyp": 50, "dimens": [50, 91, 121, 128, 170, 180, 181], "slicing": 50, "fancy": 50, "indexing": 50, "view": 50, "contr": 50, "copy": [50, 216], "manipul": [50, 51, 54, 231, 232], "shap": 50, "echiqui": 50, "cribl": 50, "erathosthen": 50, "broadcasting": [50, 53], "r\u00e9duct": 50, "algebr": 50, "lin\u00e9air": [50, 83], "simpl": [50, 80, 127, 216, 230, 237], "statist": 50, "retrouv": [50, 118], "ser": [50, 51, 54, 56, 85, 126, 130], "scipy": [50, 171], "simul": [50, 85, 86, 123, 154, 174, 175], "estim": [50, 77, 85, 86, 117], "maximis": 50, "vraisembl": 50, "r\u00e9f\u00e9rent": [50, 56], "el\u00e9ment": [50, 51], "r\u00e9pons": [50, 51, 53, 54, 78, 80, 82, 85, 87, 88, 89, 157, 158, 159, 160, 165], "\u00e9critur": [51, 158, 172], "notat": [51, 231], "symbol": 51, "excel": [51, 158, 198, 199], "filtr": 51, "union": 51, "sort": [51, 233], "group": [51, 239], "by": 51, "join": 51, "pivot": [51, 164, 213], "filt": 51, "merg": 51, "fusion": [51, 54], "tableau": [51, 53, 55, 69, 151, 170, 171], "moyen": [51, 56, 111, 112, 113, 114, 149, 210], "Avec": [51, 121, 211], "san": [51, 94, 159, 232], "plot": 51, "nuag": [51, 61, 111, 112], "matplotlib": [51, 61], "mariag": 51, "annex": 51, "\u00e9cart": 51, "mari": 51, "enonc": [53, 54, 76, 78, 79, 80, 82, 83, 85, 87, 88, 89, 90, 94, 97, 98, 99, 100, 101, 102, 103, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 158, 159, 160, 165], "ma\u00eetris": [53, 54], "slic": 53, "nan": [53, 54], "chi_2": 53, "contingent": [53, 55, 171], "veut": [53, 85, 122], "ident": [53, 77, 121], "million": 53, "dev": 53, "appliqu": [53, 83, 117, 166], "stopcovid": 53, "cr\u00e9ation": [52, 54, 151, 174, 175, 231], "lign": [54, 151, 160, 216, 224], "colon": [54, 113, 151], "ver": 54, "modif": [54, 65], "Une": [54, 95, 130, 149, 151, 152, 154, 166, 172, 210], "warning": [54, 222], "fr\u00e9quent": [54, 69, 226], "On": [54, 85, 118, 122], "covid": [54, 85], "r\u00e9gion": [54, 85], "\u00e2ge": [54, 85], "refair": 54, "graphiqu": [54, 64, 69, 223, 237], "pr\u00e9c\u00e9dent": [54, 87, 122, 165], "votr": 54, "fair": [54, 121, 188, 189], "diff\u00e9renci": 54, "liss": 54, "tabl": [54, 56, 70, 157], "pet": [54, 88, 172, 173], "apart": [54, 84, 92, 188], "q5": [54, 85, 100, 101, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 157, 158, 166, 178, 179, 204, 205], "strateg": [56, 70, 151, 196, 197], "automat": 56, "trading": [56, 70], "financ": 56, "quelqu": [56, 61, 64, 110, 157], "vocabulair": [56, 84], "financi": 56, "liquid": 56, "figur": [56, 70], "open": [56, 70], "high": [56, 70], "low": [56, 70], "clos": [56, 70], "volum": [56, 70, 119], "f2": [56, 70], "ohlc": [56, 70], "intraday": [56, 70], "f3": [56, 70], "carnet": [56, 70], "tous": [56, 70, 76, 87, 93, 120, 121, 160, 187, 188, 189], "repr\u00e9sent": [56, 70, 149], "rend": [56, 70], "volatil": 56, "mobil": 56, "band": 56, "bolling": 56, "achat": 56, "vent": 56, "levi": 56, "hedg": [56, 70], "fund": [56, 70], "t1": [56, 70], "implant": [56, 70], "2007": [56, 70], "famill": 56, "trend": [56, 70], "following": [56, 70], "f4": [56, 70], "action": [56, 70], "bnp": [56, 70], "mean": [56, 70], "reversing": [56, 70], "revers": [56, 170], "f5": [56, 70], "pair": [56, 70], "f6": [56, 70], "styl": 56, "valu": 56, "growth": 56, "gestion": [56, 232], "portefeuill": [56, 70], "p1": [56, 62, 70], "horizon": 56, "daily": 56, "analys": [56, 130], "f7": [56, 70], "cour": [56, 70, 234], "d\u00e9but": [56, 70], "2003": [56, 70], "mi": [56, 70], "2008": [56, 70], "backtest": 56, "f8": [56, 70], "nav": [56, 70], "standard": [56, 224], "variat": [56, 117], "f9": [56, 70], "natur": 56, "f10": [56, 70], "fran\u00e7ais": [56, 70], "t2": [56, 70], "indiqu": [56, 70], "cred": [56, 70], "agricol": [56, 70], "danon": [56, 70], "societ": [56, 70], "g\u00e9n\u00e9ral": [56, 70], "f11": [56, 70], "d\u00e9composit": [56, 148, 151], "deal": [56, 70], "f12": [56, 70], "f13": [56, 70], "imag": [56, 70, 169], "f14": [56, 70], "n\u00e9gat": [56, 70, 226], "logn": [56, 70], "court": [56, 61, 70, 93, 97, 148, 182, 183], "aller": [56, 172, 180, 181, 208, 209], "loin": [56, 87, 172, 178, 179, 208, 209], "diversif": 56, "expos": 57, "circuit": [58, 59, 146, 156], "hamiltonien": [58, 59], "kohonen": 58, "aper\u00e7u": [58, 152], "kruskal": 59, "arbre": [59, 61, 120, 147, 149, 206, 207], "poid": [59, 154], "minimal": 59, "a1": 59, "eul\u00e9rien": [59, 95], "a2": 59, "a3": 59, "simplif": 59, "a4": 59, "math\u00e9mat": [61, 155, 174], "continu": [61, 230], "d\u00e9riv": [61, 219], "vectoriel": 61, "produit": [61, 91, 118, 184, 185], "scalair": [61, 184, 185], "norm": [61, 113, 114], "histogramm": [61, 162, 170, 204, 205], "informat": 61, "csv": [61, 158], "hash": [61, 77, 157], "chemin": [61, 89, 92, 93, 95, 149, 182, 183, 232], "incourtourn": 61, "scik": 61, "learn": 61, "statsmodel": 61, "dessin": [61, 85, 104, 105, 111, 112, 120, 163], "cheat": [63, 65, 67, 68, 69], "sheet": [63, 65, 67, 68, 69], "conseil": [64, 69], "\u00e9crir": [64, 69, 81, 82, 85, 119, 121, 161], "petit": [64, 69, 77, 85, 119, 159, 198], "Pas": 64, "global": [64, 70, 230, 237], "s\u00e9par": [64, 69, 182, 183, 186, 187], "charg": [64, 69], "interfac": [64, 69, 223, 237], "truc": [64, 69], "git": 65, "add": 65, "remot": 65, "submodul": 65, "checkout": 65, "specific": 65, "fil": [65, 68, 237], "from": 65, "creat": 65, "new": 65, "local": [65, 70, 192, 230], "branch": 65, "push": 65, "repository": 65, "remov": [65, 68], "reset": [65, 67], "updat": 65, "fix": 65, "mov": 65, "multipl": [65, 118, 176, 177, 216, 231, 239], "rebas": 65, "upsteam": 65, "and": 65, "eras": 65, "history": 65, "clon": 65, "of": 65, "all": [65, 68], "prec": 66, "jenkin": 67, "plugin": 67, "start": 67, "restart": 67, "password": 67, "linux": 68, "classic": 68, "installed": 68, "error": 68, "with": [68, 198], "clean": 68, "temporary": 68, "hard": 68, "driv": 68, "process": 68, "environment": 68, "other": 68, "langag": [69, 71, 122, 127, 216, 230, 231, 240], "numer": [69, 77, 115, 116], "boucl": [69, 70, 74, 165, 208, 209, 230, 231], "for": [69, 70, 230], "whil": [69, 70, 230], "enumerat": 69, "zip": [69, 170, 231, 232], "map": 69, "d\u00e9finit": [62, 69, 70, 176, 177, 216, 230, 231, 234], "yield": 69, "d\u00e9clar": [69, 70, 216, 230], "attribut": [69, 70, 188, 189, 216, 234], "m\u00e9thod": [69, 70, 87, 122, 152, 188, 189, 190, 194, 195, 216, 224, 228, 231], "statiqu": [69, 70, 216], "instanc": [69, 216], "d\u00e9cor": 69, "text": [69, 94, 158, 198, 199, 204, 205, 224, 232], "except": [69, 70, 172, 219, 220, 221], "confus": 69, "guillemet": 69, "rang": [69, 231], "initialis": 69, "partag": [69, 237], "moteur": 69, "syntax": [70, 216, 219, 230, 231, 234, 239], "d1": [62, 70, 216, 230, 231, 234], "entr\u00e9": [70, 233, 234], "d10": [70, 231], "frozenset": [70, 231], "d2": [70, 216, 230, 231], "instantiaion": [70, 216], "d3": [70, 216, 230, 231], "d4": [70, 216, 230, 231], "port": [70, 230], "d5": [70, 216, 230, 231], "tupl": [70, 153, 231], "d6": [70, 216, 230, 231], "mutabl": [70, 231], "d7": [70, 216, 231], "d8": [70, 216, 231], "surcharg": [70, 216, 230], "d9": [70, 231], "set": [70, 231], "s1": [70, 216, 219, 230, 234], "attrap": [70, 219], "s10": [70, 216], "s11": [70, 216], "s12": [70, 216], "s13": [70, 216], "__copy__": [70, 216], "s14": [70, 216], "fig": [70, 216], "s15": [70, 216], "s16": [70, 216], "h\u00e9rit": [70, 216], "s2": [70, 216, 219, 230, 234], "instanci": [70, 216], "instruct": [70, 219, 230], "pass": [70, 93, 230], "lev": [70, 219], "s3": [70, 216, 230, 234], "s4": [70, 216, 230], "s5": [70, 216, 230], "extens": [70, 74, 230, 231, 234], "s6": [70, 216, 230], "constructeur": [70, 216], "s7": [70, 216, 230], "s8": [70, 216, 230], "__str__": [70, 216], "d\u00e9faut": [70, 228, 230], "s9": [70, 216, 230], "ind\u00e9fin": [70, 230], "geo": 71, "En": [72, 159], "diagonal": [72, 155], "compl": [72, 73], "apprendr": 73, "older": 73, "version": [73, 84, 88, 105, 108, 134, 155, 163, 168, 172], "concept": [74, 230], "s\u00e9quenc": [74, 83, 122, 224, 231], "notebook": [74, 76, 215], "licens": 75, "correct": [76, 97, 98, 99, 100, 101, 102, 103, 105, 118, 123, 127, 169, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209], "examen": 76, "streaming": 77, "bjkst": 77, "distinct": 77, "universal": 77, "hashing": 77, "collis": 77, "temp": [77, 83, 87, 91, 121, 161, 166, 195], "stream": [77, 161], "h_1": 77, "h_2": 77, "\u00e9gal": 77, "o\u00f9": [77, 121], "d\u00e9pend": 77, "epsilon": 77, "compos": [78, 84], "connex": [78, 84], "construir": [78, 87, 198, 199], "adjacent": [78, 84], "symetr": 78, "propr": [78, 198, 199, 219], "croiss": 78, "fait": [78, 122], "suiv": [78, 120, 122, 151], "retourn": [78, 92, 118, 119, 121, 122], "fa\u00e7on": [79, 122, 180, 181], "mont": [79, 195], "\u00e9chel": 79, "distanc": [80, 81, 89, 92, 93, 111, 112, 120, 121, 150, 152, 211], "\u00e9dit": [80, 81, 211], "longueur": [80, 81, 211], "alambiqu": 80, "pag": [80, 198, 199], "wikipedi": 80, "na\u00efv": [81, 83, 166, 184], "tres": [81, 127], "si": [81, 82, 89, 165], "proch": [62, 81, 114, 121, 138, 140, 180, 181], "ff": 81, "f": [81, 231], "ph": 81, "person": 81, "sait": 81, "ordonnanc": 82, "d\u00e9termin": [82, 151], "peut": [82, 122, 161, 166], "ex\u00e9cut": 82, "t\u00e2ch": 82, "Et": 82, "dur": [82, 117, 215], "li": 84, "puissanc": 84, "trouv": [84, 87, 187, 188, 189, 198, 199], "model": [85, 86, 129, 134], "sird": [85, 86], "q0": 85, "propag": 85, "v\u00e9rifi": [85, 176, 177], "cel": [85, 87], "synthet": 85, "q6": [85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 157, 158, 174, 175, 178, 179], "r\u00e9el": [85, 231], "cumul": 85, "\u00e9pid\u00e9miolog": 86, "visualis": [86, 92], "second": [86, 121, 166, 172, 185, 187, 224], "suffix": 87, "commun": [87, 224, 234], "partagent": 87, "constuir": 87, "assoc": 87, "chaqu": [87, 88, 121], "lettr": [87, 122, 157, 160], "termin": [87, 160], "ci": 87, "mesur": [52, 87, 91, 121, 180, 181, 195], "pris": 87, "tel": 87, "pouss": 87, "tout": [88, 89, 92, 94, 122, 151, 161, 219, 234], "prend": [88, 158], "choix": 88, "s\u00e9lect": [88, 141], "perf_count": 88, "compar": [88, 161, 166], "vitesss": 88, "traveling": 89, "salesman": 89, "chois": 89, "rel": 89, "invers": 89, "am\u00e9lior": [89, 165], "moiti": 89, "possibl": [89, 90, 118, 165, 230], "plais": 89, "creus": 91, "\u00e9leg": 91, "affich": [92, 149], "tqdm": 92, "d\u00e9cod": 94, "mors": [94, 122], "traduir": 94, "contient": [94, 165], "alphabet": 94, "minimis": 94, "transcript": 94, "interpret": [94, 237], "ru": [95, 121], "paris": 95, "etap": 95, "bellman": 95, "kruskall": 95, "optimal": [95, 119], "vari": 95, "sen": [95, 216], "interd": 95, "gaph": 95, "orient": 95, "windy": 95, "postman": 95, "cass": 96, "vigener": [96, 192, 193], "minut": [97, 125], "1a": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "e": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "interrog": [98, 99, 100, 101, 102, 103], "\u00e9crit": [98, 99, 100, 101, 102, 103, 107, 215], "septembr": [98, 102], "2014": [98, 99, 100, 101, 106], "octobr": [99, 113, 114, 115, 116, 121, 211], "novembr": [100, 101, 103, 104, 105, 117, 118, 119, 122], "2015": [102, 103, 107, 108], "td": [104, 105, 106, 107, 108, 109, 110], "27": [104, 105], "2012": [104, 105], "coloriag": [104, 105, 155], "spiral": [104, 105], "roug": [104, 119], "d\u00e9cembr": [106, 108, 109, 111, 112], "rattrapag": [107, 119, 120], "\u00e9nonc": 107, "oral": 107, "lou": 108, "achet": 108, "appart": 108, "q7": [108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 157, 158, 174, 175, 178, 179], "exo": 108, "q8": [108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 174, 175], "q9": [108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 174, 175], "num\u00e9ros": 108, "t\u00e9l\u00e9phon": 108, "16": 109, "2016": 109, "q10": [109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 174, 175], "f\u00e9vri": 110, "2017": [110, 111, 112], "commentair": [110, 216, 230, 231], "\u00e9chantillon": [111, 112, 113, 114], "encor": [111, 112], "seuil": 112, "23": [113, 114], "2018": [113, 114], "m1": [113, 114, 118], "m2": [113, 114, 118], "m3": [113, 114, 118], "r\u00e9p\u00e9tit": [113, 114], "22": [115, 116], "2019": [115, 116], "distance_t": [115, 116], "distance_bord": [115, 116], "table_al": [115, 116], "n_table_al": [115, 116], "table_proch": [115, 116], "distance_n_tables_al": [115, 116], "meilleur_table_al": [115, 116], "plot_tabl": [115, 116], "vorono\u00ef": [115, 116], "kmean": [115, 116], "24": 117, "2020": 117, "gu\u00e9rison": 117, "kaplan": 117, "mei": 117, "publiqu": 117, "apres": 117, "T": 117, "vaccin": 117, "heur": 117, "2021": [118, 119], "lent": 118, "ecrir": [118, 121, 122], "meilleur": 118, "option": 118, "v\u00e9rif": [118, 121], "mesure_temp": 118, "m4": 118, "pench": 118, "N": 118, "combien": [118, 165], "r\u00e9soudr": 118, "remarqu": 118, "lor": [118, 230], "15": 119, "air": 119, "surfac": [119, 155, 159], "briqu": 119, "fac": 119, "inclut": 119, "n\u00e9cessair": 119, "coll": 119, "extrem": 119, "bouteil": 119, "litr": 119, "larg": 119, "bleu": 119, "gross": 119, "mar": 120, "segment": 120, "niveau": 120, "Y": 121, "lorsqu": [121, 224], "2x2": 121, "indic": [121, 163], "m\u00e9decin": 121, "grill": 121, "10x10": 121, "quadrill": 121, "coordon": [121, 203], "dictionair": 121, "case_grill": 121, "pairwise_dist": 121, "1000x2": 121, "100x2": 121, "faux": 121, "corrig": 121, "2024": [21, 22, 23, 122], "d\u00e9codag": 122, "int\u00e9ress": 122, "messag": [122, 220, 224, 237], "re\u00e7oit": 122, "correspond": 122, "form": 122, "Il": 122, "faut": 122, "Que": [122, 166], "\u00e9quiprob": 122, "coding": 122, "b": 122, "\u00eatre": 122, "D": [122, 170, 224], "conna\u00eetr": 123, "structur": [127, 158, 170], "logist": [132, 133], "pr\u00e9dict": [130, 144], "vin": 144, "jeu": [128, 134, 146, 151, 156, 172, 174, 175, 196, 197], "d\u00e9": [146, 156], "rotat": [146, 156], "De": 146, "profondeur": [147, 149], "maximal": [147, 149], "transit": 148, "composit": 148, "transposit": 148, "d\u00e9m\u00eal": 148, "jet": 149, "depuis": 149, "racin": [149, 174, 175], "jusqu": 149, "intermed": [149, 178], "is": 149, "product": 150, "bas": [62, 142, 150, 184, 185], "2048": [151, 196, 197], "libr": 151, "pourvu": 151, "perdu": 151, "aggreg": 151, "jou": 151, "coup": 151, "sach": 151, "direct": 151, "scor": [151, 204, 205], "fais": 151, "derni": [128, 151, 166], "fin": [151, 230], "bref": 152, "station": 152, "m\u00e9tro": 152, "ensembl": [153, 173, 208, 231, 239], "insert": 153, "dequ": [153, 225], "loi": 154, "multinomial": 154, "bootstrap": 154, "colori": 155, "proport": 155, "couvert": 155, "retour": [128, 155], "\u00e7a": [155, 158, 198, 239], "r\u00e9partit": [157, 182], "hashag": 157, "pseudo": 157, "light": 157, "xml": [158, 161], "format": [158, 161, 186, 187, 198, 227, 231, 232], "relir": 158, "essai": 158, "html": 158, "sql": 158, "sas": 158, "non": [158, 208, 209, 230, 231], "trop": 158, "plac": [158, 224], "zippon": 158, "inspir": 158, "cercl": 159, "pi": 159, "ni": 159, "aucun": 159, "parfait": 159, "extrair": 160, "remplac": 160, "rim": 160, "elles": 160, "ail": 160, "flux": 161, "lir": [161, 204, 205], "gros": 161, "d\u00e9s\u00e9rialis": 161, "heap": 163, "transform": 163, "tas": 163, "chos": [163, 235], "lieu": 163, "simplifi": [163, 230], "gauss": [164, 213], "vitess": [52, 164], "gin": 165, "profil": [165, 167], "_gini_final": 165, "savoir": 165, "_gini_cumsum": 165, "convolu": 166, "ex\u00e9cu": [166, 234], "im2col": 166, "nouveau": 166, "\u00e9xecu": 166, "d\u00e9duir": 166, "profilag": 166, "\u00e9ven": [166, 224], "\u00e9chantillonnag": 166, "pouv": 166, "dir": 166, "bizarrer": 167, "web": 169, "scraping": 169, "pokemon": 169, "caract\u00e9rist": 169, "spars": [170, 180, 181], "m\u00e9moir": 170, "chi": 171, "formul": 171, "obstacl": 172, "\u00e9chiqui": 172, "pr\u00e9vu": 173, "\u00e9volu": [128, 173], "d\u00e9correl": [174, 175], "q11": [174, 175], "q12": [174, 175], "q13": [174, 175], "cryptag": [176, 177], "homomorphic": [176, 177], "craig": [176, 177], "gentry": [176, 177], "stabl": [176, 177], "addit": [176, 177], "impl\u00e9mentent": [176, 177], "spectral": [178, 179], "clustering": [178, 179], "pratiqu": [178, 179, 234], "th\u00e9oriqu": 178, "voisin": [62, 138, 140, 180, 181], "nn": [180, 181], "perform": [180, 181], "featur": [129, 180, 181], "imagin": [180, 181], "vit": [180, 181], "observ": 181, "skis": 182, "facult": [182, 183], "prolong": [182, 183], "degr": [182, 183], "facebook": [182, 183], "puzzl": [184, 185, 186, 187], "moin": 184, "recouvr": [184, 185], "soudoi": [184, 185], "prisonni": [184, 185], "d\u00e9coupag": [143, 184, 185], "intelligent": [184, 185], "approch": 185, "watershed": [186, 187], "bagarreur": [186, 187], "bin\u00f4m": [186, 187], "magiqu": [188, 189], "suit": [188, 189], "piec": [190, 191, 216], "normal": [190, 191, 230], "truqu": [190, 191], "mer": 190, "mixt": [190, 191], "d\u00e9tail": [192, 207], "ordon": 192, "crypt": [192, 193], "d\u00e9crypt": [192, 193], "selon": [192, 193], "int\u00e9gral": [194, 195], "rectangl": [194, 195], "r\u00e9calcitr": 195, "carlo": 195, "arr\u00eat": 195, "gagn": [196, 197], "regl": [196, 197], "rightarrow": [198, 199], "cherch": [198, 199], "motif": [198, 199], "url": [198, 199], "wikip\u00e9di": [198, 199], "subtil": 198, "pyramid": [202, 203], "bigarr": [202, 203], "couleur": 203, "devin": [204, 205], "langu": [204, 205], "normalis": [204, 205], "int": 208, "str": [208, 231], "compact": 208, "berem": 210, "elev": 210, "barem": 210, "presqu": 211, "levenshtein": 211, "align": 211, "pr\u00e9fix": 214, "pr\u00e9sent": 216, "apport": 216, "implicit": 216, "aid": 216, "inclu": 216, "deepcopy": 216, "monnai": 216, "issubclass": 216, "isinst": 216, "C": [218, 237], "oblig": 218, "princip": 219, "lanc": [219, 224], "try": 219, "imbriqu": 219, "d\u00e9fin": 219, "personnalis": [219, 222, 224], "aberr": [130, 219], "pieg": 219, "usag": 220, "pil": 220, "call": 220, "stack": 220, "explicit": 220, "convent": 220, "logging": 222, "intercept": 222, "tkint": 224, "objet": [224, 231, 232], "zon": 224, "bouton": 224, "sais": 224, "coch": 224, "rond": 224, "radio": 224, "barr": 224, "d\u00e9fil": 224, "combobox": 224, "canev": 224, "menus": 224, "disposit": 224, "fen\u00eatr": 224, "emplac": [224, 234], "pack": 224, "grid": 224, "even": 224, "principal": 224, "focus": 224, "press": 224, "associ": 224, "menu": 224, "pr\u00e9d\u00e9fin": 224, "contr\u00f4l": 224, "bo\u00eet": 224, "dialogu": 224, "compt": 224, "rebour": 224, "communiqu": 224, "ordereddict": 225, "namedtupl": 225, "count": 225, "encoding": [228, 232], "condens": 230, "tru": 230, "b1": 230, "pilotag": 230, "break": 230, "else": 230, "suppress": [230, 232], "identif": 230, "eval": [230, 231], "exec": 230, "indent": 230, "usuel": 230, "rien": 231, "bool\u00e9en": 231, "formatag": 231, "particul": 231, "r": 231, "complex": [231, 232], "byt": 231, "bytearray": 231, "collag": 231, "concaten": 231, "dict": 231, "repr": 231, "fourn": 231, "affect": 231, "hi\u00e9rarch": 231, "intern": [231, 234], "accentu": 231, "mod": 232, "Ce": 234, "cycliqu": 234, "arborescent": 234, "paquetag": 234, "relat": 234, "extern": 234, "parall\u00e9lis": 236, "thread": 237, "synchronis": 237, "attent": 237, "multithreading": 237, "concurrent": 237, "futur": 237, "blocag": 237, "async": 237, "await": 237, "asyncio": 237, "lock": 237, "cython": 237, "m\u00e9lang": 237, "jav": 237, "bibliograph": [62, 237], "assembl": 239, "nomm": 239, "01": [21, 22], "18": 21, "nettoyag": 21, "d\u00e9couvert": [62, 128], "final": 62, "\u00e9tap": 62, "r\u00e9current": 62, "train": 62, "valid": [62, 139], "hyp": [62, 141], "beaucoup": 62, "bruit": [62, 70], "blanc": [62, 70], "p2": [62, 70], "mult": [62, 128, 136, 137], "temporel": 126, "singl": 130, "spectrum": 130, "ssa": 130, "articiel": 130, "autocorrel": 130, "project": 131, "acp": 131, "\u00e9valu": 140, "stratifi": 143, "mal": 128, "balanc": 128, "varianc": 128, "s\u00fbr": 128, "2d": 133, "disjoint": 134, "manuel": 134, "automatis": [134, 137], "articificiel": 134, "stacking": 137, "cross": 139, "polyn\u00f4mial": 145, "pipelin": 145}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Survol algorithmique": [[1, "survol-algorithmique"]], "Ordres de grandeur": [[1, "ordres-de-grandeur"]], "Comprendre le co\u00fbt d\u2019un algorithme": [[1, "comprendre-le-cout-d-un-algorithme"]], "Mot-cl\u00e9": [[1, "mot-cle"]], "Catalogue d\u2019algorithmes": [[1, "catalogue-d-algorithmes"]], "Probl\u00e8mes NP-complets": [[1, "problemes-np-complets"]], "Id\u00e9e pour d\u00e9monstrer qu\u2019un probl\u00e8me est NP-complet": [[1, "idee-pour-demonstrer-qu-un-probleme-est-np-complet"]], "Liens": [[1, "liens"]], "Articles sur des algorithmes": [[1, "articles-sur-des-algorithmes"]], "Livres": [[1, "livres"]], "Pour s\u2019entra\u00eener": [[1, "pour-s-entrainer"]], "Google\u2019s recommandations": [[1, "google-s-recommandations"]], "examples.construction_classique": [[2, "examples-construction-classique"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "Python n\u2019accepte pas les accents": [[2, "indexfaqref-python0"], [71, "index-faqref-0-6"]], "Modifier un dictionnaire en le parcourant": [[2, "indexexref-Base -0"], [226, "index-exref-1-1"]], "Quelle est la diff\u00e9rence entre return et print ?": [[2, "indexfaqref-python1"], [71, "index-faqref-0-10"]], "calcul de la somme des dix premiers entiers au carr\u00e9": [[2, "indexexref-Base0"], [226, "index-exref-0-1"]], "Eviter d\u2019effectuer le m\u00eame appel deux fois": [[2, "indexexref-Base -1"], [226, "index-exref-1-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en datetime": [[2, "indexexref-Base1"], [226, "index-exref-0-4"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "comptage": [[2, "indexexref-Base2"], [226, "index-exref-0-2"]], "fonction comme param\u00e8tre": [[2, "indexexref-Base3"], [226, "index-exref-0-8"]], "conversion d\u2019une matrice en cha\u00eene de caract\u00e8res": [[2, "indexexref-Base4"], [226, "index-exref-0-6"]], "conversion d\u2019une matrice en un vecteur": [[2, "indexexref-Base5"], [226, "index-exref-0-7"]], "minimum avec position": [[2, "indexexref-Base6"], [226, "index-exref-0-9"]], "recherche avec index": [[2, "indexexref-Base7"], [226, "index-exref-0-10"]], "recherche dichotomique": [[2, "indexexref-Base8"], [226, "index-exref-0-11"]], "calcul d\u2019une somme": [[2, "indexexref-Base9"], [226, "index-exref-0-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en matrice": [[2, "indexexref-Base10"], [226, "index-exref-0-5"]], "tri, garder les positions initiales": [[2, "indexexref-Base11"], [226, "index-exref-0-12"]], "conversion d\u2019un vecteur en une matrice": [[2, "indexexref-Base12"], [226, "index-exref-0-3"]], "Jeux de donn\u00e9es": [[3, "jeux-de-donnees"]], "Cartographie": [[3, "cartographie"]], "Classification": [[3, "classification"], [62, "classification"], [126, null]], "Outils": [[3, "outils"], [127, null]], "R\u00e9gression": [[3, "regression"], [62, "regression"], [126, null]], "faq": [[4, "faq"]], "teachpyx.faq.faq_python": [[4, "module-teachpyx.faq.faq_python"]], "Quelle est la diff\u00e9rence entre / et // - division ?": [[4, "indexfaqref-python0"], [71, "index-faqref-0-9"]], "Quel est l\u2019entier le plus grand ?": [[4, "indexfaqref-python1"], [71, "index-faqref-0-8"]], "Tabulations ou espace ?": [[4, "indexfaqref-python2"], [71, "index-faqref-0-14"]], "Comment it\u00e9rer sur les r\u00e9sultats d\u2019une expression r\u00e9guli\u00e8re ?": [[4, "indexfaqref-python3"], [71, "index-faqref-0-2"]], "R\u00e9cup\u00e9rer le nom du jour \u00e0 partir d\u2019une date": [[4, "indexfaqref-python4"], [71, "index-faqref-0-12"]], "R\u00e9cup\u00e9rer le nom du mois \u00e0 partir d\u2019une date": [[4, "indexfaqref-python5"], [71, "index-faqref-0-13"]], "R\u00e9cup\u00e9rer la liste des modules install\u00e9s": [[4, "indexfaqref-python6"], [71, "index-faqref-0-11"]], "Pourquoi l\u2019installation de pandas (ou numpy)\nne marche pas sous Windows avec pip ?": [[4, "indexfaqref-python7"], [71, "index-faqref-0-5"]], "Obtenir des informations sur les packages install\u00e9s": [[4, "indexfaqref-python8"], [71, "index-faqref-0-4"]], "propri\u00e9t\u00e9": [[4, "indexfaqref-python9"], [71, "index-faqref-0-15"]], "Comment \u00e9viter sys.path.append\u2026 quand on d\u00e9veloppe un module ?": [[4, "indexfaqref-python10"], [71, "index-faqref-0-3"]], "Qu\u2019est-ce qu\u2019un type immuable ou immutable ?": [[4, "indexfaqref-python11"], [71, "index-faqref-0-7"]], "Classe sortable": [[4, "indexfaqref-python12"], [71, "index-faqref-0-1"]], "A quoi sert un ``StringIO`` ?": [[4, "indexfaqref-python13"], [71, "index-faqref-0-0"]], "teachpyx.faq.faq_exception": [[4, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_geo": [[4, "module-teachpyx.faq.faq_geo"]], "Les fichiers GEOFLA ne contiennent pas de longitude, latitude ?": [[4, "indexfaqref-geo0"], [71, "index-faqref-2-0"]], "teachpyx.faq.faq_numpy": [[4, "module-teachpyx.faq.faq_numpy"]], "Code inclus dans cette librairie": [[5, "code-inclus-dans-cette-librairie"]], "Constructions classiques": [[5, null], [216, "constructions-classiques"], [224, "constructions-classiques"], [225, "constructions-classiques"], [226, "constructions-classiques"], [230, "constructions-classiques"]], "Fonctions illustrant des solutions": [[5, null]], "Animations": [[5, null]], "FAQ": [[5, null], [71, "faq"]], "examples.numpysex": [[6, "module-teachpyx.examples.numpysex"]], "op\u00e9rations avec numpy.matrix": [[6, "indexexref-numpy0"], [49, "index-exref-0-0"]], "Quels sont les types que numpy supporte ?": [[6, "indexfaqref-numpy0"], [71, "index-faqref-1-0"]], "teachpyx.practice.rues_paris": [[7, "module-teachpyx.practice.rues_paris"]], "teachpyx.practice.tsp_bresenham": [[8, "module-teachpyx.practice.tsp_bresenham"]], "teachpyx.practice.tsp_kohonen": [[9, "module-teachpyx.practice.tsp_kohonen"]], "teachpyx.practice.tsp_kruskal": [[10, "module-teachpyx.practice.tsp_kruskal"]], "tools": [[11, "tools"]], "decompress_zip": [[11, "decompress-zip"]], "download_and_unzip": [[11, "download-and-unzip"]], "draw_diagram": [[11, "draw-diagram"]], "draw_graph_graphviz": [[11, "draw-graph-graphviz"]], "total_size": [[11, "total-size"]], "profiling": [[11, "module-teachpyx.tools.profiling"]], "run_graphviz": [[11, "run-graphviz"]], "run_subprocess": [[11, "run-subprocess"]], "video": [[11, "module-teachpyx.tools.display.pygame_helper"]], "teachpyx.video.tsp_kohonen_pygame": [[12, "teachpyx-video-tsp-kohonen-pygame"]], "teachpyx.video.tsp_kruskal": [[13, "teachpyx-video-tsp-kruskal"]], "Gallerie d\u2019exemples": [[24, "gallerie-d-exemples"]], "Gallerie d\u2019exemples sur le machine learning": [[24, "gallerie-d-exemples-sur-le-machine-learning"], [25, "gallerie-d-exemples-sur-le-machine-learning"]], "Gallerie d\u2019exemples sur la programmation": [[24, "gallerie-d-exemples-sur-la-programmation"], [29, "gallerie-d-exemples-sur-la-programmation"]], "Corr\u00e9lations": [[26, "correlations"]], "Receiver Operating Characteristic (ROC)": [[27, "receiver-operating-characteristic-roc"]], "Classification binaire": [[27, "classification-binaire"]], "Trois courbes": [[27, "trois-courbes"]], "predict_proba ou decision_function": [[27, "predict-proba-ou-decision-function"]], "Precision Rappel": [[27, "precision-rappel"]], "M\u00e9trique F1": [[27, "metrique-f1"]], "Pourquoi ROC alors ?": [[27, "pourquoi-roc-alors"]], "Computation times": [[28, "computation-times"], [43, "computation-times"], [44, "computation-times"], [241, "computation-times"]], "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution": [[30, "l-enigme-d-einstein-et-sa-resolution"]], "Fonction permutation": [[30, "fonction-permutation"]], "La classe Rule": [[30, "la-classe-rule"]], "Explicit rules": [[30, "explicit-rules"]], "Description du probl\u00e8me avec ce code": [[30, "description-du-probleme-avec-ce-code"]], "Float Conversion": [[31, "float-conversion"]], "Probability (float64)x == (float32)x": [[31, "probability-float64-x-float32-x"]], "Interval length distribution": [[31, "interval-length-distribution"]], "An answer to the initial question": [[31, "an-answer-to-the-initial-question"]], "An answer to a similar question: what about not strict comparison?": [[31, "an-answer-to-a-similar-question-what-about-not-strict-comparison"]], "Conclusion": [[31, "conclusion"], [56, "conclusion"], [109, "Conclusion"]], "Le GIL": [[32, "le-gil"]], "Deux listes en parallel": [[32, "deux-listes-en-parallel"]], "Un autre sc\u00e9nario": [[32, "un-autre-scenario"]], "Hypercube et autres exercices": [[33, "hypercube-et-autres-exercices"]], "Q1 - triple r\u00e9cursivit\u00e9": [[33, "q1-triple-recursivite"]], "Q2 - comparaison de listes": [[33, "q2-comparaison-de-listes"]], "Q3 - pr\u00e9cision des calculs": [[33, "q3-precision-des-calculs"]], "Q4 - hypercube": [[33, "q4-hypercube"]], "Astuces avec les lambda functions": [[34, "astuces-avec-les-lambda-functions"]], "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations": [[35, "mathador-enigme-a-4-operations"]], "Points d\u2019impl\u00e9mentation avec numpy": [[36, "points-d-implementation-avec-numpy"]], "acc\u00e9der \u00e0 un \u00e9l\u00e9ment en particulier": [[36, "acceder-a-un-element-en-particulier"]], "Pandas et groupby": [[37, "pandas-et-groupby"]], "groupby et valeur manquantes": [[37, "groupby-et-valeur-manquantes"]], "Parties de dames": [[38, "parties-de-dames"]], "Q1": [[38, "q1"], [82, "Q1"], [89, "Q1"], [98, "Q1"], [98, "id1"], [99, "Q1"], [99, "id1"], [100, "Q1"], [100, "id1"], [100, "id6"], [101, "Q1"], [102, "Q1"], [102, "id1"], [103, "Q1"], [103, "id1"], [105, "Q1"], [108, "Q1"], [108, "id1"], [108, "id3"], [109, "Q1"], [110, "Q1"], [117, "Q1"], [174, "Q1"], [175, "Q1"], [178, "Q1"], [178, "id1"], [179, "Q1"], [179, "id1"]], "Q2": [[38, "q2"], [82, "Q2"], [89, "Q2"], [98, "Q2"], [98, "id2"], [99, "Q2"], [99, "id2"], [100, "Q2"], [100, "id2"], [100, "id7"], [101, "Q2"], [102, "Q2"], [102, "id2"], [103, "Q2"], [103, "id2"], [105, "Q2"], [108, "Q2"], [108, "id2"], [108, "id4"], [109, "Q2"], [110, "Q2"], [174, "Q2"], [175, "Q2"], [178, "Q2"], [178, "id2"], [179, "Q2"], [179, "id2"]], "Q3": [[38, "q3"], [89, "Q3"], [98, "Q3"], [98, "id3"], [99, "Q3"], [99, "id3"], [100, "Q3"], [100, "id3"], [100, "id8"], [101, "Q3"], [102, "Q3"], [102, "id3"], [103, "Q3"], [103, "id3"], [105, "Q3"], [108, "Q3"], [109, "Q3"], [110, "Q3"], [174, "Q3"], [175, "Q3"], [178, "Q3"], [179, "Q3"]], "Q4": [[38, "q4"], [89, "Q4"], [99, "Q4"], [99, "id4"], [100, "Q4"], [100, "id4"], [100, "id9"], [101, "Q4"], [108, "Q4"], [109, "Q4"], [109, "id1"], [110, "Q4"], [174, "Q4"], [175, "Q4"], [178, "Q4"], [179, "Q4"]], "S\u00e9rialisation": [[39, "serialisation"], [235, "serialisation"]], "JSON": [[39, "json"], [235, "json"]], "Ecriture (json)": [[39, "ecriture-json"]], "Lecture (json)": [[39, "lecture-json"]], "Limite": [[39, "limite"]], "S\u00e9rialisation rapide": [[39, "serialisation-rapide"]], "Pickle": [[39, "pickle"]], "Ecriture (pickle)": [[39, "ecriture-pickle"]], "Lecture (pickle)": [[39, "lecture-pickle"]], "Les classes": [[39, "les-classes"]], "R\u00e9duire la taille": [[39, "reduire-la-taille"]], "Cas des fonctions": [[39, "cas-des-fonctions"]], "Binaire": [[39, "binaire"], [235, "binaire"]], "Fonction et JSON": [[39, "fonction-et-json"]], "Cas des it\u00e9rateurs": [[39, "cas-des-iterateurs"]], "Cas des g\u00e9n\u00e9rateurs": [[39, "cas-des-generateurs"]], "S\u00e9rialisation avec protobuf": [[40, "serialisation-avec-protobuf"]], "Sch\u00e9ma": [[40, "schema"]], "Compilation": [[40, "compilation"]], "Import du module cr\u00e9\u00e9": [[40, "import-du-module-cree"]], "S\u00e9rialisation en cha\u00eene de caract\u00e8res": [[40, "serialisation-en-chaine-de-caracteres"]], "Plusieurs cha\u00eenes de caract\u00e8res": [[40, "plusieurs-chaines-de-caracteres"]], "S\u00e9rialisation JSON": [[40, "serialisation-json"]], "Exercices expliqu\u00e9s de programmation": [[41, "exercices-expliques-de-programmation"]], "Copie de listes": [[41, "copie-de-listes"]], "Erreur de logique": [[41, "erreur-de-logique"]], "Co\u00fbt d\u2019un algorithme": [[41, "cout-d-un-algorithme"]], "H\u00e9ritage double": [[41, "heritage-double"]], "Pr\u00e9cision des calculs": [[41, "precision-des-calculs"]], "R\u00e9flexions autour du voyage de commerce (TSP)": [[42, "reflexions-autour-du-voyage-de-commerce-tsp"]], "Des villes tir\u00e9es au hasard": [[42, "des-villes-tirees-au-hasard"]], "Croisements": [[42, "croisements"], [93, "Croisements"]], "Noeud de d\u00e9part constant": [[42, "noeud-de-depart-constant"]], "Un peu d\u2019al\u00e9atoire en plus": [[42, "un-peu-d-aleatoire-en-plus"]], "Dataframes": [[45, "dataframes"]], "Tracer une carte en Python": [[46, "Tracer-une-carte-en-Python"]], "donn\u00e9es": [[46, "donn\u00e9es"], [134, "donn\u00e9es"]], "cartopy": [[46, "cartopy"]], "plotly, gmaps, bingmaps": [[46, "plotly,-gmaps,-bingmaps"]], "geopandas": [[46, "geopandas"]], "folium": [[46, "folium"]], "cartopy avec les donn\u00e9es d\u2019OpenStreetMap": [[46, "cartopy-avec-les-donn\u00e9es-d'OpenStreetMap"]], "Graphes": [[47, "graphes"], [123, null], [126, null]], "Matrices et DataFrames": [[48, "matrices-et-dataframes"], [231, "matrices-et-dataframes"]], "Calcul matriciel": [[49, "calcul-matriciel"]], "Calcul Matriciel, Optimisation": [[50, "Calcul-Matriciel,-Optimisation"]], "Numpy arrays": [[50, "Numpy-arrays"]], "Creation d\u2019un array: notion de datatype, et dimensions": [[50, "Creation-d'un-array:-notion-de-datatype,-et-dimensions"]], "Indexation, Slicing, Fancy indexing": [[50, "Indexation,-Slicing,-Fancy-indexing"]], "View contre Copy": [[50, "View-contre-Copy"]], "Manipulation de shape": [[50, "Manipulation-de-shape"]], "Exercice 1 : Echiquier et Crible d\u2019Erathosth\u00e8ne": [[50, "Exercice-1-:-Echiquier-et-Crible-d'Erathosth\u00e8ne"]], "Manipulation et Op\u00e9rations sur les arrays": [[50, "Manipulation-et-Op\u00e9rations-sur-les-arrays"]], "Op\u00e9rations \u00e9l\u00e9ment par \u00e9l\u00e9ment": [[50, "Op\u00e9rations-\u00e9l\u00e9ment-par-\u00e9l\u00e9ment"]], "Broadcasting": [[50, "Broadcasting"]], "R\u00e9ductions": [[50, "R\u00e9ductions"]], "Alg\u00e8bre lin\u00e9aire": [[50, "Alg\u00e8bre-lin\u00e9aire"]], "Exemples simples": [[50, "Exemples-simples"]], "Numpy Matrix": [[50, "Numpy-Matrix"]], "G\u00e9n\u00e9ration de nombres al\u00e9atoires et statistiques": [[50, "G\u00e9n\u00e9ration-de-nombres-al\u00e9atoires-et-statistiques"]], "Exercice 2 : marches al\u00e9atoires": [[50, "Exercice-2-:-marches-al\u00e9atoires"]], "Exercice 3 : retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires": [[50, "Exercice-3-:-retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires"]], "Optimisation avec scipy": [[50, "Optimisation-avec-scipy"]], "Exercice 4 : simulation, r\u00e9gression, estimation par maximisation de la vraisemblance": [[50, "Exercice-4-:-simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance"]], "R\u00e9f\u00e9rences": [[50, "R\u00e9f\u00e9rences"]], "El\u00e9ments de r\u00e9ponses pour les exercices": [[50, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"], [51, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"]], "Exercice 1 (Echiquier et Crible d\u2019Erathosthene)": [[50, "Exercice-1-(Echiquier-et-Crible-d'Erathosthene)"]], "Exercice 2 (marches al\u00e9atoires)": [[50, "Exercice-2-(marches-al\u00e9atoires)"]], "Exercice 3 (retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires)": [[50, "Exercice-3-(retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires)"]], "Exercice 4 (simulation, r\u00e9gression, estimation par maximisation de la vraisemblance)": [[50, "Exercice-4-(simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance)"]], "DataFrame et Graphes": [[51, "DataFrame-et-Graphes"]], "DataFrame": [[51, "DataFrame"], [61, "dataframe"]], "Series": [[51, "Series"]], "DataFrame (pandas)": [[51, "DataFrame-(pandas)"]], "Lecture et \u00e9criture de DataFrame": [[51, "Lecture-et-\u00e9criture-de-DataFrame"]], "DataFrame et Index": [[51, "DataFrame-et-Index"]], "Notation avec le symbole :": [[51, "Notation-avec-le-symbole-:"]], "Exercice 1 : cr\u00e9er un fichier Excel": [[51, "Exercice-1-:-cr\u00e9er-un-fichier-Excel"], [51, "id1"]], "Manipuler un DataFrame": [[51, "Manipuler-un-DataFrame"]], "6 op\u00e9rations : filtrer, union, sort, group by, join, pivot": [[51, "6-op\u00e9rations-:-filtrer,-union,-sort,-group-by,-join,-pivot"]], "filter": [[51, "filter"]], "union": [[51, "union"]], "sort": [[51, "sort"]], "group by": [[51, "group-by"]], "join (merge ou fusion)": [[51, "join-(merge-ou-fusion)"]], "pivot (tableau crois\u00e9 dynamique)": [[51, "pivot-(tableau-crois\u00e9-dynamique)"]], "Lambda fonctions": [[51, "Lambda-fonctions"]], "Exercice 2 : lambda fonction": [[51, "Exercice-2-:-lambda-fonction"]], "Exercice 3 : moyennes par groupes": [[51, "Exercice-3-:-moyennes-par-groupes"], [51, "id2"]], "Avec ou sans index": [[51, "Avec-ou-sans-index"]], "Dates": [[51, "Dates"], [227, "dates"]], "Plot(s)": [[51, "Plot(s)"]], "R\u00e9cup\u00e9ration des donn\u00e9es": [[51, "R\u00e9cup\u00e9ration-des-donn\u00e9es"]], "Exercice 4 : nuage de points": [[51, "Exercice-4-:-nuage-de-points"]], "Exercice 5 : graphe d\u2019une distribution avec pandas": [[51, "Exercice-5-:-graphe-d'une-distribution-avec-pandas"]], "matplotlib": [[51, "matplotlib"], [61, "matplotlib"]], "Exercice 6 : distribution des mariages par jour": [[51, "Exercice-6-:-distribution-des-mariages-par-jour"], [51, "id3"]], "Annexes": [[51, "Annexes"]], "Cr\u00e9er un fichier Excel avec plusieurs feuilles": [[51, "Cr\u00e9er-un-fichier-Excel-avec-plusieurs-feuilles"]], "Exercice 2 : lambda function": [[51, "Exercice-2-:-lambda-function"]], "Exercice 4 : \u00e9cart entre les mari\u00e9s": [[51, "Exercice-4-:-\u00e9cart-entre-les-mari\u00e9s"]], "Exercice 5 : graphe de la distribution avec pandas": [[51, "Exercice-5-:-graphe-de-la-distribution-avec-pandas"]], "Mesures de vitesse sur les dataframes": [[52, "Mesures-de-vitesse-sur-les-dataframes"]], "Cr\u00e9ation d\u2019un dataframe \u00e0 partir d\u2019un it\u00e9rateur": [[52, "Cr\u00e9ation-d'un-dataframe-\u00e0-partir-d'un-it\u00e9rateur"]], "Cr\u00e9ation d\u2019un array \u00e0 partir d\u2019un it\u00e9rateur": [[52, "Cr\u00e9ation-d'un-array-\u00e0-partir-d'un-it\u00e9rateur"]], "Calcul matriciel avec numpy (exercices)": [[53, "Calcul-matriciel-avec-numpy-(exercices)"]], "Enonc\u00e9": [[53, "Enonc\u00e9"], [54, "Enonc\u00e9"], [78, "Enonc\u00e9"], [80, "Enonc\u00e9"], [82, "Enonc\u00e9"], [83, "Enonc\u00e9"], [87, "Enonc\u00e9"], [88, "Enonc\u00e9"], [89, "Enonc\u00e9"], [90, "Enonc\u00e9"], [158, "Enonc\u00e9"], [159, "Enonc\u00e9"], [160, "Enonc\u00e9"], [165, "Enonc\u00e9"], [85, "Enonc\u00e9"]], "La ma\u00eetrise du slice": [[53, "La-ma\u00eetrise-du-slice"]], "La ma\u00eetrise du nan": [[53, "La-ma\u00eetrise-du-nan"], [54, "La-ma\u00eetrise-du-nan"]], "La ma\u00eetrise des types": [[53, "La-ma\u00eetrise-des-types"], [54, "La-ma\u00eetrise-des-types"]], "La ma\u00eetrise du broadcasting": [[53, "La-ma\u00eetrise-du-broadcasting"]], "La ma\u00eetrise des index": [[53, "La-ma\u00eetrise-des-index"], [54, "La-ma\u00eetrise-des-index"]], "La ma\u00eetrise des op\u00e9rations et des fonctions": [[53, "La-ma\u00eetrise-des-op\u00e9rations-et-des-fonctions"]], "Q1 : calculer la valeur du \\chi_2 d\u2019un tableau de contingence": [[53, "Q1-:-calculer-la-valeur-du-\\chi_2-d'un-tableau-de-contingence"], [53, "id1"]], "Q2 : calculer une distribution un peu particuli\u00e8re": [[53, "Q2-:-calculer-une-distribution-un-peu-particuli\u00e8re"], [53, "id2"]], "Q3 : on veut cr\u00e9er une matrice identit\u00e9 un million par un million": [[53, "Q3-:-on-veut-cr\u00e9er-une-matrice-identit\u00e9-un-million-par-un-million"], [53, "id3"]], "Q4 : vous devez cr\u00e9er l\u2019application StopCovid": [[53, "Q4-:-vous-devez-cr\u00e9er-l'application-StopCovid"], [53, "id4"]], "R\u00e9ponses": [[53, "R\u00e9ponses"], [54, "R\u00e9ponses"], [78, "R\u00e9ponses"], [80, "R\u00e9ponses"], [82, "R\u00e9ponses"], [87, "R\u00e9ponses"], [88, "R\u00e9ponses"], [89, "R\u00e9ponses"], [158, "R\u00e9ponses"], [159, "R\u00e9ponses"], [160, "R\u00e9ponses"], [165, "R\u00e9ponses"], [85, "R\u00e9ponses"]], "Manipulation de donn\u00e9es avec pandas (exercices)": [[54, "Manipulation-de-donn\u00e9es-avec-pandas-(exercices)"]], "Cr\u00e9ation d\u2019un dataframe": [[54, "Cr\u00e9ation-d'un-dataframe"]], "La ma\u00eetrise des index des lignes": [[54, "La-ma\u00eetrise-des-index-des-lignes"]], "La ma\u00eetrise des index des colonnes": [[54, "La-ma\u00eetrise-des-index-des-colonnes"]], "Lien vers numpy": [[54, "Lien-vers-numpy"]], "Cr\u00e9ation de colonnes": [[54, "Cr\u00e9ation-de-colonnes"]], "Modifications de valeurs": [[54, "Modifications-de-valeurs"]], "Une erreur ou warning fr\u00e9quent": [[54, "Une-erreur-ou-warning-fr\u00e9quent"]], "La ma\u00eetrise des fonctions": [[54, "La-ma\u00eetrise-des-fonctions"]], "On r\u00e9cup\u00e8re les donn\u00e9es du COVID par r\u00e9gion et par \u00e2ge et premier graphe": [[54, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"], [85, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"]], "Q1 : refaire le graphique pr\u00e9c\u00e9dent pour votre classe d\u2019\u00e2ge": [[54, "Q1-:-refaire-le-graphique-pr\u00e9c\u00e9dent-pour-votre-classe-d'\u00e2ge"], [54, "id1"]], "Q2 : faire de m\u00eame avec les s\u00e9ries diff\u00e9renci\u00e9es": [[54, "Q2-:-faire-de-m\u00eame-avec-les-s\u00e9ries-diff\u00e9renci\u00e9es"], [54, "id2"]], "Q3 : faire de m\u00eame avec des s\u00e9ries liss\u00e9es sur sur 7 jours": [[54, "Q3-:-faire-de-m\u00eame-avec-des-s\u00e9ries-liss\u00e9es-sur-sur-7-jours"], [54, "id3"]], "Q4 : fusion de tables par d\u00e9partements": [[54, "Q4-:-fusion-de-tables-par-d\u00e9partements"], [54, "id4"]], "Petit apart\u00e9": [[54, "Petit-apart\u00e9"]], "Q5 : une carte ?": [[54, "Q5-:-une-carte-?"]], "Numpy et tableau de contingence": [[55, "Numpy-et-tableau-de-contingence"]], "Strat\u00e9gie automatique de trading en finance": [[56, "strategie-automatique-de-trading-en-finance"]], "Quelques r\u00e9f\u00e9rences": [[56, "quelques-references"]], "Vocabulaire financier": [[56, "vocabulaire-financier"]], "March\u00e9s liquides": [[56, "marches-liquides"]], "Description d\u2019une s\u00e9rie financi\u00e8re": [[56, "description-d-une-serie-financiere"]], "Figure F1 : Open-High-Low-Close-Volume": [[56, "indexmathe-Figure0"], [70, "index-mathdef-1-31"]], "Figure F2 : OHLC Intraday": [[56, "indexmathe-Figure1"], [70, "index-mathdef-1-37"]], "Figure F3 : Exemple de carnet d\u2019ordres, tous les ordres ne sont pas repr\u00e9sent\u00e9s.": [[56, "indexmathe-Figure2"], [70, "index-mathdef-1-38"]], "Rendements, Volatilit\u00e9, Corr\u00e9lation": [[56, "rendements-volatilite-correlation"]], "Moyenne mobile, bandes de Bollinger": [[56, "moyenne-mobile-bandes-de-bollinger"]], "Achats, ventes, levier": [[56, "achats-ventes-levier"]], "Hedge Funds": [[56, "hedge-funds"]], "Table T1 : Implantation des Hedge Funds en 2007": [[56, "indexmathe-Table0"], [70, "index-mathdef-4-78"]], "Familles de strat\u00e9gies": [[56, "familles-de-strategies"]], "Trend Following": [[56, "trend-following"]], "Figure F4 : Action BNP et Trend Following": [[56, "indexmathe-Figure3"], [70, "index-mathdef-1-39"]], "Mean Reversing ou Mean Reversion": [[56, "mean-reversing-ou-mean-reversion"]], "Figure F5 : Action BNP et Mean Reversing": [[56, "indexmathe-Figure4"], [70, "index-mathdef-1-40"]], "Pair Trading": [[56, "pair-trading"]], "Figure F6 : Action BNP et pair trading": [[56, "indexmathe-Figure5"], [70, "index-mathdef-1-41"]], "Styles, Value, Growth": [[56, "styles-value-growth"]], "Gestion de portefeuille": [[56, "gestion-de-portefeuille"]], "Probl\u00e8me P1 : optimisation d\u2019un portefeuille": [[56, "indexmathe-Probl\u00e8me0"], [70, "index-mathdef-2-46"]], "Horizon de trading, intraday, daily": [[56, "horizon-de-trading-intraday-daily"]], "Analyse d\u2019une strat\u00e9gie": [[56, "analyse-d-une-strategie"]], "Figure F7 : Le cours de la BNP entre d\u00e9but 2003 et mi 2008": [[56, "indexmathe-Figure6"], [70, "index-mathdef-1-42"]], "Backtest": [[56, "backtest"]], "Figure F8 : NAV": [[56, "indexmathe-Figure7"], [70, "index-mathdef-1-43"]], "Mod\u00e9lisation": [[56, "modelisation"]], "R\u00e9sultats standards": [[56, "resultats-standards"]], "Variation de param\u00e8tres": [[56, "variation-de-parametres"]], "Figure F9 : NAV d\u2019une strat\u00e9gie": [[56, "indexmathe-Figure8"], [70, "index-mathdef-1-44"]], "Autres s\u00e9ries financi\u00e8res de m\u00eame nature": [[56, "autres-series-financieres-de-meme-nature"]], "Figure F10 : 4 actions fran\u00e7aises": [[56, "indexmathe-Figure9"], [70, "index-mathdef-1-32"]], "Table T2 : Indicateurs BNP, Cr\u00e9dit Agricole, Danone, Soci\u00e9t\u00e9 G\u00e9n\u00e9rale": [[56, "indexmathe-Table1"], [70, "index-mathdef-4-79"]], "Figure F11 : Rendement pour 4 actions fran\u00e7aises": [[56, "indexmathe-Figure10"], [70, "index-mathdef-1-33"]], "D\u00e9composition en deals": [[56, "decomposition-en-deals"]], "Figure F12 : Deal": [[56, "indexmathe-Figure11"], [70, "index-mathdef-1-34"]], "Figure F13 : Deal en image": [[56, "indexmathe-Figure12"], [70, "index-mathdef-1-35"]], "Figure F14 : Deal positifs, n\u00e9gatifs, logns, courts": [[56, "indexmathe-Figure13"], [70, "index-mathdef-1-36"]], "Pour aller plus loin": [[56, "pour-aller-plus-loin"], [172, "Pour-aller-plus-loin"]], "Diversification": [[56, "diversification"]], "Expos\u00e9s": [[57, "exposes"]], "Circuit hamiltonien et Kohonen": [[58, "circuit-hamiltonien-et-kohonen"]], "Aper\u00e7u": [[58, "apercu"]], "Cartes de Kohonen": [[58, "cartes-de-kohonen"]], "Circuit hamiltonien et Kruskal": [[59, "circuit-hamiltonien-et-kruskal"]], "Arbre de poids minimal et circuit hamiltonien": [[59, "arbre-de-poids-minimal-et-circuit-hamiltonien"]], "Arbre de poids minimum": [[59, "arbre-de-poids-minimum"]], "Algorithme A1 : Kruskal": [[59, "indexmathe-Algorithme0"]], "Circuit eul\u00e9rien": [[59, "circuit-eulerien"]], "Algorithme A2 : Circuit Eul\u00e9rien": [[59, "indexmathe-Algorithme1"]], "Circuit hamiltonien": [[59, "circuit-hamiltonien"]], "Algorithme A3 : Circuit hamiltonien": [[59, "indexmathe-Algorithme2"]], "Simplification du circuit hamiltonien": [[59, "simplification-du-circuit-hamiltonien"]], "Algorithme A4 : TSP": [[59, "indexmathe-Algorithme3"]], "Cheat Sheets": [[63, "cheat-sheets"]], "Cheat Sheet on Git": [[65, "cheat-sheet-on-git"]], "Add a remote": [[65, "add-a-remote"]], "Add a submodule": [[65, "add-a-submodule"]], "Checkout a specific file from a remote": [[65, "checkout-a-specific-file-from-a-remote"]], "Create a new local branch": [[65, "create-a-new-local-branch"]], "Create a new remote branch": [[65, "create-a-new-remote-branch"]], "Push modification to remote repository": [[65, "push-modification-to-remote-repository"]], "Remove a submodule": [[65, "remove-a-submodule"]], "Reset a branch": [[65, "reset-a-branch"]], "Reset a submodule": [[65, "reset-a-submodule"]], "Update a branch": [[65, "update-a-branch"]], "Update a submodule": [[65, "update-a-submodule"]], "Update a submodule to the remote branch": [[65, "update-a-submodule-to-the-remote-branch"]], "Fix submodules": [[65, "fix-submodules"]], "Move multiple files": [[65, "move-multiple-files"]], "Rebase a branch to upsteam branch": [[65, "rebase-a-branch-to-upsteam-branch"]], "Rebase a branch to upsteam branch and erase history": [[65, "rebase-a-branch-to-upsteam-branch-and-erase-history"]], "Clone a part of a repository, not all": [[65, "clone-a-part-of-a-repository-not-all"]], "Pr\u00e9cis": [[66, "precis"]], "Cheat Sheet on Jenkins": [[67, "cheat-sheet-on-jenkins"]], "Installation": [[67, "installation"]], "Plugins": [[67, "plugins"]], "Start, Restart": [[67, "start-restart"]], "Reset passwords": [[67, "reset-passwords"]], "Cheat Sheet on Linux": [[68, "cheat-sheet-on-linux"]], "Classic": [[68, "classic"]], "List all installed packages": [[68, "list-all-installed-packages"]], "Remove packages": [[68, "remove-packages"]], "Error with a package": [[68, "error-with-a-package"]], "Clean temporary files": [[68, "clean-temporary-files"]], "Hard drive": [[68, "hard-drive"]], "Processes": [[68, "processes"]], "Environment variable": [[68, "environment-variable"]], "Others": [[68, "others"]], "Syntaxes et d\u00e9finitions": [[70, "syntaxes-et-definitions"]], "D\u00e9finitions": [[70, "definitions"]], "D\u00e9finition D1 : bruit blanc": [[70, "index-mathdef-0-5"], [62, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : classe": [[70, "index-mathdef-0-6"], [216, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : point d\u2019entr\u00e9e du programme": [[70, "index-mathdef-0-7"], [234, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : test": [[70, "index-mathdef-0-8"], [230, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : variable": [[70, "index-mathdef-0-9"], [231, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D10 : frozenset": [[70, "index-mathdef-0-10"], [231, "indexmathe-D\u00e9finition9"]], "D\u00e9finition D2 : constante": [[70, "index-mathdef-0-11"], [231, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : fonction": [[70, "index-mathdef-0-12"], [230, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : instantiaion": [[70, "index-mathdef-0-13"], [216, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D3 : fonction r\u00e9cursive": [[70, "index-mathdef-0-14"], [230, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : m\u00e9thode": [[70, "index-mathdef-0-15"], [216, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : type immuable (ou immutable)": [[70, "index-mathdef-0-16"], [231, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D4 : attribut": [[70, "index-mathdef-0-17"], [216, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : cha\u00eene de caract\u00e8res": [[70, "index-mathdef-0-18"], [231, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : port\u00e9e d\u2019un variable": [[70, "index-mathdef-0-19"], [230, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D5 : m\u00e9thode statique": [[70, "index-mathdef-0-20"], [216, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : tuple": [[70, "index-mathdef-0-21"], [231, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : variable locale": [[70, "index-mathdef-0-22"], [230, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D6 : attribut statique": [[70, "index-mathdef-0-23"], [216, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : type modifiable (ou mutable)": [[70, "index-mathdef-0-24"], [231, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : variable globale": [[70, "index-mathdef-0-25"], [230, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D7 : h\u00e9ritage": [[70, "index-mathdef-0-26"], [216, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D7 : liste": [[70, "index-mathdef-0-27"], [231, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D8 : dictionnaire": [[70, "index-mathdef-0-28"], [231, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D8 : surcharge": [[70, "index-mathdef-0-29"], [216, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D9 : set": [[70, "index-mathdef-0-30"], [231, "indexmathe-D\u00e9finition8"]], "Figures": [[70, "figures"]], "Probl\u00e8mes": [[70, "problemes"], [76, "problemes"], [76, null]], "Probl\u00e8me P1 : R\u00e9gression": [[70, "index-mathdef-2-45"], [62, "indexmathe-Probl\u00e8me0"]], "Probl\u00e8me P2 : Classification binaire": [[70, "index-mathdef-2-47"], [62, "indexmathe-Probl\u00e8me1"]], "Syntaxe": [[70, "syntaxe"], [216, "syntaxe"], [239, "syntaxe"]], "Syntaxe S1 : Attraper une exception": [[70, "index-mathdef-3-48"], [219, "indexmathe-Syntaxe0"]], "Syntaxe S1 : D\u00e9claration d\u2019une classe": [[70, "index-mathdef-3-49"], [216, "indexmathe-Syntaxe0"]], "Syntaxe S1 : Tests": [[70, "index-mathdef-3-50"], [230, "indexmathe-Syntaxe0"]], "Syntaxe S1 : importer un module (1)": [[70, "index-mathdef-3-51"], [234, "indexmathe-Syntaxe0"]], "Syntaxe S10 : D\u00e9claration d\u2019un attribut statique": [[70, "index-mathdef-3-52"], [216, "indexmathe-Syntaxe9"]], "Syntaxe S11 : D\u00e9claration d\u2019une propri\u00e9t\u00e9": [[70, "index-mathdef-3-53"], [216, "indexmathe-Syntaxe10"]], "Syntaxe S12 : D\u00e9claration d\u2019une propri\u00e9t\u00e9 (2)": [[70, "index-mathdef-3-54"], [216, "indexmathe-Syntaxe11"]], "Syntaxe S13 : D\u00e9claration de l\u2019op\u00e9rateur __copy__": [[70, "index-mathdef-3-55"], [216, "indexmathe-Syntaxe12"]], "Syntaxe S14 : D\u00e9claration d\u2019attributs fig\u00e9s": [[70, "index-mathdef-3-56"], [216, "indexmathe-Syntaxe13"]], "Syntaxe S15 : H\u00e9ritage": [[70, "index-mathdef-3-57"], [216, "indexmathe-Syntaxe14"]], "Syntaxe S16 : Surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[70, "index-mathdef-3-58"], [216, "indexmathe-Syntaxe15"]], "Syntaxe S2 : Instanciation d\u2019une classe": [[70, "index-mathdef-3-59"], [216, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Instruction pass": [[70, "index-mathdef-3-60"], [230, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Lever une exception": [[70, "index-mathdef-3-61"], [219, "indexmathe-Syntaxe1"]], "Syntaxe S2 : importer un module (2)": [[70, "index-mathdef-3-62"], [234, "indexmathe-Syntaxe1"]], "Syntaxe S3 : Boucle while": [[70, "index-mathdef-3-63"], [230, "indexmathe-Syntaxe2"]], "Syntaxe S3 : D\u00e9claration d\u2019une m\u00e9thode": [[70, "index-mathdef-3-64"], [216, "indexmathe-Syntaxe2"]], "Syntaxe S3 : importer un module (3)": [[70, "index-mathdef-3-65"], [234, "indexmathe-Syntaxe2"]], "Syntaxe S4 : Appel d\u2019une m\u00e9thode": [[70, "index-mathdef-3-66"], [216, "indexmathe-Syntaxe3"]], "Syntaxe S4 : Boucle for": [[70, "index-mathdef-3-67"], [230, "indexmathe-Syntaxe3"]], "Syntaxe S5 : D\u00e9claration d\u2019un attribut": [[70, "index-mathdef-3-68"], [216, "indexmathe-Syntaxe4"]], "Syntaxe S5 : Liste en extension": [[70, "index-mathdef-3-69"], [230, "indexmathe-Syntaxe4"]], "Syntaxe S6 : D\u00e9claration d\u2019un constructeur": [[70, "index-mathdef-3-70"], [216, "indexmathe-Syntaxe5"]], "Syntaxe S6 : D\u00e9claration d\u2019une fonction": [[70, "index-mathdef-3-71"], [230, "indexmathe-Syntaxe5"]], "Syntaxe S7 : Appel d\u2019un constructeur": [[70, "index-mathdef-3-72"], [216, "indexmathe-Syntaxe6"]], "Syntaxe S7 : Appel d\u2019une fonction": [[70, "index-mathdef-3-73"], [230, "indexmathe-Syntaxe6"]], "Syntaxe S8 : D\u00e9claration de l\u2019op\u00e9rateur __str__": [[70, "index-mathdef-3-74"], [216, "indexmathe-Syntaxe7"]], "Syntaxe S8 : Valeurs par d\u00e9faut": [[70, "index-mathdef-3-75"], [230, "indexmathe-Syntaxe7"]], "Syntaxe S9 : D\u00e9claration d\u2019une m\u00e9thode statique": [[70, "index-mathdef-3-76"], [216, "indexmathe-Syntaxe8"]], "Syntaxe S9 : Nombre ind\u00e9fini de param\u00e8tres": [[70, "index-mathdef-3-77"], [230, "indexmathe-Syntaxe8"]], "Tables": [[70, "tables"]], "Langage Python": [[71, "langage-python"]], "numpy": [[71, "numpy"], [124, null], [61, "numpy"]], "geo": [[71, "geo"]], "En diagonal": [[72, "en-diagonal"]], "Compl\u00e9ments": [[72, null], [73, null]], "Apprendre la programmation avec Python": [[73, "apprendre-la-programmation-avec-python"]], "Lectures": [[73, null]], "Exercices": [[73, null], [61, "exercices"], [62, "exercices"]], "Older versions": [[73, "older-versions"]], "Introduction": [[74, "introduction"], [77, "Introduction"], [224, "introduction"]], "Installation de Python": [[74, "installation-de-python"]], "Installation d\u2019extensions ou modules ou packages": [[74, "installation-d-extensions-ou-modules-ou-packages"]], "Accents": [[74, "accents"]], "Trois concepts, s\u00e9quence, test, boucle": [[74, "trois-concepts-sequence-test-boucle"]], "Algorithmes": [[74, "algorithmes"], [123, "algorithmes"], [76, "algorithmes"], [76, null], [76, null]], "Fichier ou notebook": [[74, "fichier-ou-notebook"]], "Algorithmes de streaming, BJKST": [[77, "Algorithmes-de-streaming,-BJKST"]], "Estimer le nombre d\u2019\u00e9l\u00e9ments distincts: l\u2019algorithme BJKST": [[77, "Estimer-le-nombre-d'\u00e9l\u00e9ments-distincts:-l'algorithme-BJKST"]], "Universal hashing": [[77, "Universal-hashing"]], "Collisions": [[77, "Collisions"]], "Algorithme BJKST": [[77, "Algorithme-BJKST"]], "R\u00e9sultats num\u00e9riques": [[77, "R\u00e9sultats-num\u00e9riques"]], "Temps de calcul en fonction de la taille du stream": [[77, "Temps-de-calcul-en-fonction-de-la-taille-du-stream"]], "Un peu plus sur la pr\u00e9cision de l\u2019estimateur": [[77, "Un-peu-plus-sur-la-pr\u00e9cision-de-l'estimateur"]], "h_1 et h_2 \u00e9gales \u00e0 l\u2019identit\u00e9": [[77, "h_1-et-h_2-\u00e9gales-\u00e0-l'identit\u00e9"]], "cas o\u00f9 la taille du hash est petite": [[77, "cas-o\u00f9-la-taille-du-hash-est-petite"]], "cas o\u00f9 la taille de hash est plus grande": [[77, "cas-o\u00f9-la-taille-de-hash-est-plus-grande"]], "la taille de hash d\u00e9pend de la pr\u00e9cision \\epsilon": [[77, "la-taille-de-hash-d\u00e9pend-de-la-pr\u00e9cision-\\epsilon"]], "Graphe et Composantes connexes": [[78, "Graphe-et-Composantes-connexes"]], "Q1 : construire une matrice d\u2019adjacence sym\u00e9trique al\u00e9atoire": [[78, "Q1-:-construire-une-matrice-d'adjacence-sym\u00e9trique-al\u00e9atoire"], [78, "id1"]], "Q2 : calculer les valeurs propres et les trier par ordre croissant": [[78, "Q2-:-calculer-les-valeurs-propres-et-les-trier-par-ordre-croissant"], [78, "id2"]], "Q3 : que fait l\u2019algorithme suivant": [[78, "Q3-:-que-fait-l'algorithme-suivant"], [78, "id3"]], "Q4 : construire un algorithme qui retourne les composantes connexes d\u2019un graphe": [[78, "Q4-:-construire-un-algorithme-qui-retourne-les-composantes-connexes-d'un-graphe"], [78, "id4"]], "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.": [[79, "Calculer-le-nombre-de-fa\u00e7ons-de-monter-une-\u00e9chelle."]], "Enonc\u00e9s": [[79, "Enonc\u00e9s"], [94, "Enonc\u00e9s"], [97, "enonces"], [123, null], [127, null]], "Enonc\u00e9 1": [[79, "Enonc\u00e9-1"], [98, "Enonc\u00e9-1"], [99, "Enonc\u00e9-1"], [100, "Enonc\u00e9-1"], [101, "Enonc\u00e9-1"], [102, "Enonc\u00e9-1"], [103, "Enonc\u00e9-1"]], "Enonc\u00e9 2": [[79, "Enonc\u00e9-2"], [98, "Enonc\u00e9-2"], [99, "Enonc\u00e9-2"], [100, "Enonc\u00e9-2"], [102, "Enonc\u00e9-2"], [103, "Enonc\u00e9-2"]], "Enonc\u00e9 3": [[79, "Enonc\u00e9-3"], [100, "Enonc\u00e9-3"]], "Solutions": [[79, "Solutions"], [94, "Solutions"]], "Solution au probl\u00e8me 1": [[79, "Solution-au-probl\u00e8me-1"], [94, "Solution-au-probl\u00e8me-1"]], "Solution au probl\u00e8me 2": [[79, "Solution-au-probl\u00e8me-2"]], "Solution au probl\u00e8me 3": [[79, "Solution-au-probl\u00e8me-3"]], "Distance d\u2019\u00e9dition": [[80, "Distance-d'\u00e9dition"], [81, "Distance-d'\u00e9dition"]], "Q1 : Distance simple entre deux mots de m\u00eame longueur": [[80, "Q1-:-Distance-simple-entre-deux-mots-de-m\u00eame-longueur"], [80, "id1"]], "Q2 : Distance simple entre deux mots de longueur diff\u00e9rente": [[80, "Q2-:-Distance-simple-entre-deux-mots-de-longueur-diff\u00e9rente"], [80, "id2"]], "Q3 : Distance alambiqu\u00e9e\u2026": [[80, "Q3-:-Distance-alambiqu\u00e9e..."], [80, "id3"]], "Q4 : impl\u00e9menter l\u2019algorithme de la page wikipedia": [[80, "Q4-:-impl\u00e9menter-l'algorithme-de-la-page-wikipedia"], [80, "id4"]], "Distance entre deux mots de m\u00eame longueur et tests unitaires": [[81, "Distance-entre-deux-mots-de-m\u00eame-longueur-et-tests-unitaires"]], "Distance na\u00efve": [[81, "Distance-na\u00efve"]], "Distance tr\u00e8s na\u00efve": [[81, "Distance-tr\u00e8s-na\u00efve"]], "Distance entre deux mots de longueur diff\u00e9rente mais pas si diff\u00e9rente": [[81, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente-mais-pas-si-diff\u00e9rente"]], "Distance entre deux mots de longueur diff\u00e9rente": [[81, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente"]], "Test unitaires": [[81, "Test-unitaires"]], "m et n sont tr\u00e8s proches, et alors ?": [[81, "m-et-n-sont-tr\u00e8s-proches,-et-alors-?"]], "ff, f, ph, f\u2026 plus personne ne sait \u00e9crire": [[81, "ff,-f,-ph,-f...-plus-personne-ne-sait-\u00e9crire"]], "Probl\u00e8me d\u2019ordonnancement": [[82, "Probl\u00e8me-d'ordonnancement"]], "Q1 : \u00e9crire un algorithme qui d\u00e9termine dans quel ordre on peut ex\u00e9cuter les t\u00e2ches.": [[82, "Q1-:-\u00e9crire-un-algorithme-qui-d\u00e9termine-dans-quel-ordre-on-peut-ex\u00e9cuter-les-t\u00e2ches."]], "Q2 : Et si les t\u00e2ches n\u2019ont plus la m\u00eame dur\u00e9e ?": [[82, "Q2-:-Et-si-les-t\u00e2ches-n'ont-plus-la-m\u00eame-dur\u00e9e-?"]], "La sous-s\u00e9quence de plus grande somme": [[83, "La-sous-s\u00e9quence-de-plus-grande-somme"]], "Solution na\u00efve": [[83, "Solution-na\u00efve"], [184, "Solution-na\u00efve"]], "Solution plus rapide": [[83, "Solution-plus-rapide"]], "Solution dichotomique": [[83, "Solution-dichotomique"]], "Solution lin\u00e9aire": [[83, "Solution-lin\u00e9aire"]], "Comparaison des temps de calcul": [[83, "Comparaison-des-temps-de-calcul"]], "Application": [[83, "Application"]], "Graphes al\u00e9atoires": [[84, "Graphes-al\u00e9atoires"]], "Graphe al\u00e9atoire - matrice d\u2019adjacence al\u00e9atoire": [[84, "Graphe-al\u00e9atoire---matrice-d'adjacence-al\u00e9atoire"]], "Vocabulaire li\u00e9 aux graphes": [[84, "Vocabulaire-li\u00e9-aux-graphes"]], "Apart\u00e9 : matrice d\u2019adjacence \u00e0 la puissance n": [[84, "Apart\u00e9-:-matrice-d'adjacence-\u00e0-la-puissance-n"]], "Trouver le nombre de composantes connexes": [[84, "Trouver-le-nombre-de-composantes-connexes"]], "G\u00e9n\u00e9ration d\u2019un graphe al\u00e9atoire": [[84, "G\u00e9n\u00e9ration-d'un-graphe-al\u00e9atoire"]], "Version 1": [[84, "Version-1"]], "Version 2": [[84, "Version-2"]], "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)": [[86, "Mod\u00e8le-\u00e9pid\u00e9miologique-(SIRD)"]], "Simulation": [[86, "Simulation"], [123, null]], "Visualisation": [[86, "Visualisation"], [92, "Visualisation"]], "Estimation des param\u00e8tres": [[86, "Estimation-des-param\u00e8tres"]], "Premi\u00e8re id\u00e9e": [[86, "Premi\u00e8re-id\u00e9e"], [187, "Premi\u00e8re-id\u00e9e"]], "Seconde id\u00e9e : probl\u00e8mes d\u2019optimisation": [[86, "Seconde-id\u00e9e-:-probl\u00e8mes-d'optimisation"]], "Jeux de dictionnaires, plus grand suffixe commun": [[87, "Jeux-de-dictionnaires,-plus-grand-suffixe-commun"]], "Exercice 1 : trouver les deux mots qui partagent le plus grand suffixe en commun": [[87, "Exercice-1-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun"], [87, "id1"]], "Exercice 2 : constuire un dictionnaire qui associe \u00e0 chaque lettre tous les mots se terminant par celle-ci": [[87, "Exercice-2-:-constuire-un-dictionnaire-qui-associe-\u00e0-chaque-lettre-tous-les-mots-se-terminant-par-celle-ci"], [87, "id2"]], "Exercice 3 : trouver les deux mots qui partagent le plus grand suffixe en commun en utilisant le dictionnaire pr\u00e9c\u00e9dent": [[87, "Exercice-3-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun-en-utilisant-le-dictionnaire-pr\u00e9c\u00e9dent"], [87, "id3"]], "Exercice 4 : mesurer le temps pris par chaque fonction": [[87, "Exercice-4-:-mesurer-le-temps-pris-par-chaque-fonction"], [87, "id4"]], "Exercice 5 : expliquer pourquoi telle m\u00e9thode est plus rapide.": [[87, "Exercice-5-:-expliquer-pourquoi-telle-m\u00e9thode-est-plus-rapide."], [87, "id5"]], "Exercice 6 : pousser l\u2019id\u00e9e plus loin et construire un trie": [[87, "Exercice-6-:-pousser-l'id\u00e9e-plus-loin-et-construire-un-trie"], [87, "id6"]], "Les k premiers \u00e9l\u00e9ments (top k)": [[88, "Les-k-premiers-\u00e9l\u00e9ments-(top-k)"]], "Exercice 1 : on trie tout et on prend les k plus petit": [[88, "Exercice-1-:-on-trie-tout-et-on-prend-les-k-plus-petit"], [88, "id1"]], "Exercice 2 : version plus rapide au choix": [[88, "Exercice-2-:-version-plus-rapide-au-choix"], [88, "id2"]], "Exercice 3 : algorithme de s\u00e9lection": [[88, "Exercice-3-:-algorithme-de-s\u00e9lection"], [88, "id3"]], "Exercice 4 : utiliser la fonction perf_counter pour comparer les vitessses de chaque solution": [[88, "Exercice-4-:-utiliser-la-fonction-perf_counter-pour-comparer-les-vitessses-de-chaque-solution"], [88, "id4"]], "TSP - Traveling Salesman Problem": [[89, "TSP---Traveling-Salesman-Problem"]], "Q1 : choisir une permutation al\u00e9atoire des villes et calculer la distance du chemin qui les relie dans cet ordre": [[89, "Q1-:-choisir-une-permutation-al\u00e9atoire-des-villes-et-calculer-la-distance-du-chemin-qui-les-relie-dans-cet-ordre"]], "Q2 : tirer deux villes al\u00e9atoirement, les inverser, garder la permutation si elle am\u00e9liore la distance": [[89, "Q2-:-tirer-deux-villes-al\u00e9atoirement,-les-inverser,-garder-la-permutation-si-elle-am\u00e9liore-la-distance"]], "Q3 : choisir deux villes al\u00e9atoirement, permuter une des deux moiti\u00e9s\u2026": [[89, "Q3-:-choisir-deux-villes-al\u00e9atoirement,-permuter-une-des-deux-moiti\u00e9s..."]], "Q4 : tester toutes les permutations possibles\u2026 je plaisante\u2026": [[89, "Q4-:-tester-toutes-les-permutations-possibles...-je-plaisante..."]], "Calculer x**n le plus rapidement possible": [[90, "Calculer-x**n-le-plus-rapidement-possible"]], "Solution": [[90, "Solution"]], "Apart\u00e9 sur le voyageur de commerce": [[92, "Apart\u00e9-sur-le-voyageur-de-commerce"]], "Tirer des points al\u00e9atoirement et les afficher": [[92, "Tirer-des-points-al\u00e9atoirement-et-les-afficher"]], "Distance d\u2019un chemin": [[92, "Distance-d'un-chemin"]], "Parcourir toutes les permutations": [[92, "Parcourir-toutes-les-permutations"]], "Module tqdm": [[92, "Module-tqdm"]], "Retournement": [[92, "Retournement"]], "Plus court chemin passant par tous les noeuds d\u2019un graphe": [[93, "Plus-court-chemin-passant-par-tous-les-noeuds-d'un-graphe"]], "Distance": [[93, "Distance"]], "Id\u00e9e d\u2019algorithme": [[93, "Id\u00e9e-d'algorithme"]], "D\u00e9coder du Morse sans espaces": [[94, "D\u00e9coder-du-Morse-sans-espaces"]], "Exercice 1 : Traduire un texte Morse qui ne contient pas d\u2019espace": [[94, "Exercice-1-:-Traduire-un-texte-Morse-qui-ne-contient-pas-d'espace"]], "Exercice 2 : calculer l\u2019alphabet qui minimise une transcription": [[94, "Exercice-2-:-calculer-l'alphabet-qui-minimise-une-transcription"]], "Solution au probl\u00e8me 2 avec des expressions r\u00e9guli\u00e8res": [[94, "Solution-au-probl\u00e8me-2-avec-des-expressions-r\u00e9guli\u00e8res"]], "Solution au probl\u00e8me 2 : toutes les interpr\u00e9tations": [[94, "Solution-au-probl\u00e8me-2-:-toutes-les-interpr\u00e9tations"]], "Parcourir les rues de Paris": [[95, "Parcourir-les-rues-de-Paris"]], "Les donn\u00e9es": [[95, "Les-donn\u00e9es"], [182, "Les-donn\u00e9es"], [62, "les-donnees"]], "Une premi\u00e8re solution au premier probl\u00e8me": [[95, "Une-premi\u00e8re-solution-au-premier-probl\u00e8me"]], "Etape 1 : la matrice Bellman": [[95, "Etape-1-:-la-matrice-Bellman"]], "Kruskall": [[95, "Kruskall"]], "Chemin Eul\u00e9rien": [[95, "Chemin-Eul\u00e9rien"]], "Algorithme optimal": [[95, "Algorithme-optimal"]], "Variantes": [[95, "Variantes"]], "Sens interdit et gaphe orient\u00e9": [[95, "Sens-interdit-et-gaphe-orient\u00e9"]], "Windy postman problem": [[95, "Windy-postman-problem"]], "Exercices minut\u00e9s": [[97, "exercices-minutes"]], "S\u00e9ances not\u00e9es": [[97, "seances-notees"]], "Corrections": [[97, "corrections"]], "Exercices courts": [[97, "exercices-courts"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014": [[98, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014": [[99, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-10-octobre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014": [[100, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"], [101, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"]], "Q5": [[100, "Q5"], [100, "id5"], [100, "id10"], [101, "Q5"], [105, "Q5"], [108, "Q5"], [109, "Q5"], [109, "id2"], [110, "Q5"], [178, "Q5"], [179, "Q5"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015": [[102, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2015"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015": [[103, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-6-novembre-2015"]], "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)": [[104, "1A.e---TD-not\u00e9,-27-novembre-2012-(\u00e9l\u00e9ments-de-code-pour-le-coloriage)"]], "construction de la spirale": [[104, "construction-de-la-spirale"], [105, "construction-de-la-spirale"]], "dessin de la spirale": [[104, "dessin-de-la-spirale"], [105, "dessin-de-la-spirale"]], "ajouter du rouge": [[104, "ajouter-du-rouge"]], "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)": [[105, "1A.e---TD-not\u00e9,-27-novembre-2012-(coloriage,-correction)"]], "version 1": [[105, "version-1"], [105, "id1"]], "version 4": [[105, "version-4"], [105, "id2"]], "Q4 : spirale": [[105, "Q4-:-spirale"]], "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014": [[106, "1A.e---TD-not\u00e9,-5-d\u00e9cembre-2014"]], "Exercice 1": [[106, "Exercice-1"], [109, "Exercice-1"], [110, "Exercice-1"], [182, "Exercice-1"], [183, "Exercice-1"], [192, "Exercice-1"], [193, "Exercice-1"], [206, "Exercice-1"], [207, "Exercice-1"]], "Exercice 2": [[106, "Exercice-2"], [109, "Exercice-2"], [117, "Exercice-2"], [182, "Exercice-2"], [183, "Exercice-2"], [193, "Exercice-2"], [206, "Exercice-2"], [207, "Exercice-2"]], "Exercice 3": [[106, "Exercice-3"], [182, "Exercice-3"], [183, "Exercice-3"], [206, "Exercice-3"]], "Exercice 4": [[106, "Exercice-4"], [182, "Exercice-4"], [183, "Exercice-4"], [206, "Exercice-4"], [207, "Exercice-4"]], "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)": [[107, "1A.e---TD-not\u00e9-2015-rattrapage-(\u00e9nonc\u00e9,-\u00e9crit-et-oral)"]], "Question 1": [[107, "Question-1"]], "Question 2": [[107, "Question-2"]], "Question 3": [[107, "Question-3"]], "Question 4": [[107, "Question-4"]], "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015": [[108, "1A.e---TD-not\u00e9,-11-d\u00e9cembre-2015"]], "Exercice 1 : Louer ou acheter un appartement ?": [[108, "Exercice-1-:-Louer-ou-acheter-un-appartement-?"]], "Q6": [[108, "Q6"], [109, "Q6"], [109, "id3"], [110, "Q6"], [174, "Q6"], [175, "Q6"], [178, "Q6"], [179, "Q6"]], "Q7 exo 1": [[108, "Q7-exo-1"]], "Q7 exo 2": [[108, "Q7-exo-2"]], "Q8": [[108, "Q8"], [109, "Q8"], [109, "id5"], [110, "Q8"], [174, "Q8"], [175, "Q8"]], "Q9 version dichotomique de Q4": [[108, "Q9-version-dichotomique-de-Q4"]], "Exercice 2 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[108, "Exercice-2-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "Exercice 3 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[108, "Exercice-3-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016": [[109, "1A.e---TD-not\u00e9,-16-d\u00e9cembre-2016"]], "Q7": [[109, "Q7"], [109, "id4"], [110, "Q7"], [157, "Q7"], [174, "Q7"], [175, "Q7"], [178, "Q7"], [179, "Q7"]], "Q9": [[109, "Q9"], [109, "id6"], [110, "Q9"], [174, "Q9"], [175, "Q9"]], "Q10": [[109, "Q10"], [109, "id7"], [110, "Q10"], [114, "Q10"], [174, "Q10"], [175, "Q10"]], "Q1 - Q2 - Q3": [[109, "Q1---Q2---Q3"]], "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017": [[110, "1A.e---TD-not\u00e9,-21-f\u00e9vrier-2017"]], "Quelques explications et d\u00e9monstrations": [[110, "Quelques-explications-et-d\u00e9monstrations"]], "Quelques commentaires sur le code": [[110, "Quelques-commentaires-sur-le-code"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)": [[111, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(1)"]], "Q1 - \u00e9chantillon al\u00e9atoire": [[111, "Q1---\u00e9chantillon-al\u00e9atoire"], [112, "Q1---\u00e9chantillon-al\u00e9atoire"], [113, "Q1---\u00e9chantillon-al\u00e9atoire"], [114, "Q1---\u00e9chantillon-al\u00e9atoire"]], "Q1 - dessiner le nuage de points - donn\u00e9e": [[111, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"], [112, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"]], "Q2 - tri": [[111, "Q2---tri"], [112, "Q2---tri"]], "Q3 - moyenne": [[111, "Q3---moyenne"], [112, "Q3---moyenne"], [113, "Q3---moyenne"], [114, "Q3---moyenne"]], "Q4 - distance": [[111, "Q4---distance"], [112, "Q4---distance"]], "Q5 - fonction comme param\u00e8tre": [[111, "Q5---fonction-comme-param\u00e8tre"], [112, "Q5---fonction-comme-param\u00e8tre"]], "Q6 - optimiser": [[111, "Q6---optimiser"], [112, "Q6---optimiser"]], "Q7 - optimisation encore": [[111, "Q7---optimisation-encore"], [112, "Q7---optimisation-encore"]], "Q8 - fonction r\u00e9cursive": [[111, "Q8---fonction-r\u00e9cursive"], [112, "Q8---fonction-r\u00e9cursive"]], "Q9 - co\u00fbt": [[111, "Q9---co\u00fbt"]], "Q10 - autre nuage de points": [[111, "Q10---autre-nuage-de-points"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)": [[112, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(2)"]], "Q9 - seuil": [[112, "Q9---seuil"]], "Q10 - co\u00fbt": [[112, "Q10---co\u00fbt"]], "1A.e - Enonc\u00e9 23 octobre 2018 (1)": [[113, "1A.e---Enonc\u00e9-23-octobre-2018-(1)"]], "Q2 - matrice m1": [[113, "Q2---matrice-m1"], [114, "Q2---matrice-m1"]], "Q4 - matrice m2": [[113, "Q4---matrice-m2"], [114, "Q4---matrice-m2"]], "Q5 - matrice m3": [[113, "Q5---matrice-m3"]], "Q6 - norme": [[113, "Q6---norme"]], "Q7 - r\u00e9p\u00e9tition": [[113, "Q7---r\u00e9p\u00e9tition"]], "Q8 - plus de valeurs manquantes": [[113, "Q8---plus-de-valeurs-manquantes"]], "Q9 - 1 valeur manquante ?": [[113, "Q9---1-valeur-manquante-?"]], "Q10 - plus de deux colonnes ?": [[113, "Q10---plus-de-deux-colonnes-?"]], "1A.e - Enonc\u00e9 23 octobre 2018 (2)": [[114, "1A.e---Enonc\u00e9-23-octobre-2018-(2)"]], "Q5 - x le plus proche": [[114, "Q5---x-le-plus-proche"]], "Q6 - matrice m3": [[114, "Q6---matrice-m3"]], "Q7 - norme": [[114, "Q7---norme"]], "Q8 - r\u00e9p\u00e9tition": [[114, "Q8---r\u00e9p\u00e9tition"]], "Q9 - plus de valeurs manquantes": [[114, "Q9---plus-de-valeurs-manquantes"]], "1A.e - Enonc\u00e9 22 octobre 2019 (1)": [[115, "1A.e---Enonc\u00e9-22-octobre-2019-(1)"]], "Q1 - distance_table": [[115, "Q1---distance_table"], [116, "Q1---distance_table"]], "Q2 - distance_bord": [[115, "Q2---distance_bord"], [116, "Q2---distance_bord"]], "Q3 - table_alea": [[115, "Q3---table_alea"], [116, "Q3---table_alea"]], "Q4 - n_table_alea": [[115, "Q4---n_table_alea"], [116, "Q4---n_table_alea"]], "Q5 - table_proches": [[115, "Q5---table_proches"], [116, "Q5---table_proches"]], "Q6 - distance_n_tables_alea": [[115, "Q6---distance_n_tables_alea"], [116, "Q6---distance_n_tables_alea"]], "Q7 - meilleur_table_alea": [[115, "Q7---meilleur_table_alea"], [116, "Q7---meilleur_table_alea"]], "Q8 - r\u00e9sultat num\u00e9rique": [[115, "Q8---r\u00e9sultat-num\u00e9rique"], [116, "Q8---r\u00e9sultat-num\u00e9rique"]], "Q9 - plot_tables": [[115, "Q9---plot_tables"], [116, "Q9---plot_tables"]], "Q10 \u2026": [[115, "Q10-..."], [116, "Q10-..."]], "Q10 - Vorono\u00ef": [[115, "Q10---Vorono\u00ef"], [116, "Q10---Vorono\u00ef"]], "Q10 - KMeans": [[115, "Q10---KMeans"], [116, "Q10---KMeans"]], "1A.e - Enonc\u00e9 22 octobre 2019 (2)": [[116, "1A.e---Enonc\u00e9-22-octobre-2019-(2)"]], "1A - Enonc\u00e9 24 novembre 2020": [[117, "1A---Enonc\u00e9-24-novembre-2020"]], "Exercice 1 : gu\u00e9rison": [[117, "Exercice-1-:-gu\u00e9rison"]], "Q2 : dur\u00e9e de gu\u00e9rison": [[117, "Q2-:-dur\u00e9e-de-gu\u00e9rison"]], "Q3 : estimateur Kaplan-Meier (1)": [[117, "Q3-:-estimateur-Kaplan-Meier-(1)"]], "Q4 : courbe de Kaplan-Meier": [[117, "Q4-:-courbe-de-Kaplan-Meier"]], "Q5 : graphe": [[117, "Q5-:-graphe"]], "Q6 : application aux donn\u00e9es publiques": [[117, "Q6-:-application-aux-donn\u00e9es-publiques"]], "Q1 : t + 1": [[117, "Q1-:-t-+-1"]], "Q2 : apr\u00e8s T it\u00e9ration": [[117, "Q2-:-apr\u00e8s-T-it\u00e9ration"]], "Q3 : vaccin": [[117, "Q3-:-vaccin"]], "Q4 : apr\u00e8s T heures": [[117, "Q4-:-apr\u00e8s-T-heures"]], "Q5 : variation": [[117, "Q5-:-variation"]], "1A - Enonc\u00e9 3 novembre 2021": [[118, "1A---Enonc\u00e9-3-novembre-2021"]], "Exercice 1 : multiplication de matrices": [[118, "Exercice-1-:-multiplication-de-matrices"]], "Q1 : Pourquoi (m1 @ m2) @ m3 est-il plus lent que m1 @ (m2 @ m3) ? (2 points)": [[118, "Q1-:-Pourquoi-(m1-@-m2)-@-m3-est-il-plus-lent-que-m1-@-(m2-@-m3)-?-(2-points)"]], "Q2 : Ecrire une fonction qui calcule le nombre d\u2019operations dans une multiplication de deux matrices (2 points)": [[118, "Q2-:-Ecrire-une-fonction-qui-calcule-le-nombre-d'operations-dans-une-multiplication-de-deux-matrices-(2-points)"]], "Q3 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de deux matrices et la meilleure option (2 points)": [[118, "Q3-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-deux-matrices-et-la-meilleure-option-(2-points)"]], "Q4 : Ecrire une fonction qui effectue le produit de trois matrices le plus rapidement possible (2 points)": [[118, "Q4-:-Ecrire-une-fonction-qui-effectue-le-produit-de-trois-matrices-le-plus-rapidement-possible-(2-points)"]], "Q5 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps (2 points)": [[118, "Q5-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-(2-points)"]], "Q6 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de 4 matrices et la meilleure option (3 points)": [[118, "Q6-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-4-matrices-et-la-meilleure-option-(3-points)"]], "Q7 : Ecrire une fonction qui effectue le produit de 4 matrices le plus rapidement possible (3 points)": [[118, "Q7-:-Ecrire-une-fonction-qui-effectue-le-produit-de-4-matrices-le-plus-rapidement-possible-(3-points)"]], "Q8 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps et la matrice m4. (2 points)": [[118, "Q8-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-et-la-matrice-m4.-(2-points)"]], "Q9 : On se penche sur le cas \u00e0 une multiplication de N matrices, combien y a-t-il de multiplications de 2 matrices ? (2 points)": [[118, "Q9-:-On-se-penche-sur-le-cas-\u00e0-une-multiplication-de-N-matrices,-combien-y-a-t-il-de-multiplications-de-2-matrices-?-(2-points)"]], "Q10 : R\u00e9soudre l\u2019optimisation de multiplication de N matrices.": [[118, "Q10-:-R\u00e9soudre-l'optimisation-de-multiplication-de-N-matrices."]], "Remarques lors de la correction": [[118, "Remarques-lors-de-la-correction"]], "1A - Enonc\u00e9 15 novembre 2021 - rattrapage": [[119, "1A---Enonc\u00e9-15-novembre-2021---rattrapage"]], "Exercice 1 : optimisation de volume": [[119, "Exercice-1-:-optimisation-de-volume"]], "Q1 : \u00e9crire une fonction qui calcule l\u2019aire d\u2019une surface": [[119, "Q1-:-\u00e9crire-une-fonction-qui-calcule-l'aire-d'une-surface"]], "Q2 : \u00e9crire une fonction qui calcule le volume d\u2019une brique": [[119, "Q2-:-\u00e9crire-une-fonction-qui-calcule-le-volume-d'une-brique"]], "Q3 : \u00e9crire une fonction qui retourne la somme des surfaces des faces d\u2019une brique": [[119, "Q3-:-\u00e9crire-une-fonction-qui-retourne-la-somme-des-surfaces-des-faces-d'une-brique"]], "Q4 : la brique optimale": [[119, "Q4-:-la-brique-optimale"]], "Q5 : on inclut la surface n\u00e9cessaire pour coller les extremit\u00e9s": [[119, "Q5-:-on-inclut-la-surface-n\u00e9cessaire-pour-coller-les-extremit\u00e9s"]], "Q6 : une bouteille de deux litres deux fois plus large": [[119, "Q6-:-une-bouteille-de-deux-litres-deux-fois-plus-large"]], "Q7 : petite brique en bleue, grosse brique en rouge": [[119, "Q7-:-petite-brique-en-bleue,-grosse-brique-en-rouge"]], "1A - Enonc\u00e9 3 mars 2022- rattrapage": [[120, "1A---Enonc\u00e9-3-mars-2022--rattrapage"]], "Dessin d\u2019une liste de segments": [[120, "Dessin-d'une-liste-de-segments"]], "Distance d\u2019un segment": [[120, "Distance-d'un-segment"]], "Calcul du segment suivant": [[120, "Calcul-du-segment-suivant"]], "Calcul des trois segments suivants": [[120, "Calcul-des-trois-segments-suivants"]], "Construction de tous les niveaux de l\u2019arbre": [[120, "Construction-de-tous-les-niveaux-de-l'arbre"]], "Construction de trois segments al\u00e9atoires": [[120, "Construction-de-trois-segments-al\u00e9atoires"]], "Construction d\u2019un arbre al\u00e9atoire": [[120, "Construction-d'un-arbre-al\u00e9atoire"]], "1A - Enonc\u00e9 26 octobre 2022": [[121, "1A---Enonc\u00e9-26-octobre-2022"]], "Exercice 1 : calcul de distances": [[121, "Exercice-1-:-calcul-de-distances"]], "Q1 : tirer deux matrices al\u00e9atoires pour X et Y, de tailles diff\u00e9rentes": [[121, "Q1-:-tirer-deux-matrices-al\u00e9atoires-pour-X-et-Y,-de-tailles-diff\u00e9rentes"]], "Q2 : calculer tous les distances entre X et Y": [[121, "Q2-:-calculer-tous-les-distances-entre-X-et-Y"]], "Q3 : \u00e9crire un test unitaire qui v\u00e9rifie le r\u00e9sultat lorsque X est la matrice identit\u00e9 2x2": [[121, "Q3-:-\u00e9crire-un-test-unitaire-qui-v\u00e9rifie-le-r\u00e9sultat-lorsque-X-est-la-matrice-identit\u00e9-2x2"]], "Q4 : quel est le co\u00fbt de l\u2019algorithme en fonction des dimensions de X et Y ?": [[121, "Q4-:-quel-est-le-co\u00fbt-de-l'algorithme-en-fonction-des-dimensions-de-X-et-Y-?"]], "Q5 : Ecrire une fonction qui retourne l\u2019indice du m\u00e9decin le plus proche pour chaque rue": [[121, "Q5-:-Ecrire-une-fonction-qui-retourne-l'indice-du-m\u00e9decin-le-plus-proche-pour-chaque-rue"]], "Q6 : on cr\u00e9e une grille 10x10 pour quadriller l\u2019espace. Ecrire une fonction qui calcule les coordonn\u00e9es de la grille pour un point donn\u00e9.": [[121, "Q6-:-on-cr\u00e9e-une-grille-10x10-pour-quadriller-l'espace.-Ecrire-une-fonction-qui-calcule-les-coordonn\u00e9es-de-la-grille-pour-un-point-donn\u00e9."]], "Q7 : \u00e9crire une fonction qui cr\u00e9\u00e9 un dictionaire { case_grille : indices }.": [[121, "Q7-:-\u00e9crire-une-fonction-qui-cr\u00e9\u00e9-un-dictionaire-{-case_grille-:-indices-}."]], "Q8 : modifier la fonction pairwise_distance pour ne calculer que les distances des points dans la m\u00eame case": [[121, "Q8-:-modifier-la-fonction-pairwise_distance-pour-ne-calculer-que-les-distances-des-points-dans-la-m\u00eame-case"]], "Q9 : Mesurer le temps pour deux matrices 1000x2, 100x2 ?": [[121, "Q9-:-Mesurer-le-temps-pour-deux-matrices-1000x2,-100x2-?"]], "Q10 : le r\u00e9sultat est utilis\u00e9 pour retourner le m\u00e9decin le plus proche ? Avec la seconde fonction, o\u00f9 les r\u00e9sultats sont-ils faux et que faire pour corriger ?": [[121, "Q10-:-le-r\u00e9sultat-est-utilis\u00e9-pour-retourner-le-m\u00e9decin-le-plus-proche-?-Avec-la-seconde-fonction,-o\u00f9-les-r\u00e9sultats-sont-ils-faux-et-que-faire-pour-corriger-?"]], "1A - Enonc\u00e9 8 novembre 2023-2024": [[122, "1A---Enonc\u00e9-8-novembre-2023-2024"]], "Exercice 1 : d\u00e9codage fa\u00e7on Morse": [[122, "Exercice-1-:-d\u00e9codage-fa\u00e7on-Morse"]], "Q1 : Ecrire une fonction qui code une s\u00e9quence de lettres en une s\u00e9quence de 0 et 1.": [[122, "Q1-:-Ecrire-une-fonction-qui-code-une-s\u00e9quence-de-lettres-en-une-s\u00e9quence-de-0-et-1."]], "Q2 : On s\u2019int\u00e9resse au d\u00e9codage d\u2019un message.": [[122, "Q2-:-On-s'int\u00e9resse-au-d\u00e9codage-d'un-message."]], "Q3 : Ecrire une fonction qui re\u00e7oit une s\u00e9quence de 0 et de 1 et retourne la s\u00e9quence de lettres correspondante.": [[122, "Q3-:-Ecrire-une-fonction-qui-re\u00e7oit-une-s\u00e9quence-de-0-et-de-1-et-retourne-la-s\u00e9quence-de-lettres-correspondante."]], "Q4 : On forme une classe avec les deux fonctions pr\u00e9c\u00e9dentes. Il faut compl\u00e9ter le code suivant.": [[122, "Q4-:-On-forme-une-classe-avec-les-deux-fonctions-pr\u00e9c\u00e9dentes.-Il-faut-compl\u00e9ter-le-code-suivant."]], "Q5 : On veut r\u00e9duire la taille du message cod\u00e9.": [[122, "Q5-:-On-veut-r\u00e9duire-la-taille-du-message-cod\u00e9."]], "Q6 : Que fait la fonction suivante ?": [[122, "Q6-:-Que-fait-la-fonction-suivante-?"]], "Q7 : Dans ce langage, les lettres sont toutes \u00e9quiprobables": [[122, "Q7-:-Dans-ce-langage,-les-lettres-sont-toutes-\u00e9quiprobables"]], "Q8 : On change le Coding des lettres A et B": [[122, "Q8-:-On-change-le-Coding-des-lettres-A-et-B"]], "Q9 : Dans le cas pr\u00e9c\u00e9dent, la premi\u00e8re lettre peut \u00eatre soit B soit D.": [[122, "Q9-:-Dans-le-cas-pr\u00e9c\u00e9dent,-la-premi\u00e8re-lettre-peut-\u00eatre-soit-B-soit-D."]], "Q10 : Ecrire une m\u00e9thode\u2026": [[122, "Q10-:-Ecrire-une-m\u00e9thode..."]], "A conna\u00eetre": [[123, null]], "Programmation dynamique": [[123, null]], "Probl\u00e8me NP-complets": [[123, null]], "A parcourir": [[123, null]], "Correction": [[123, null], [127, null], [169, "Correction"]], "Numpy / Pandas": [[124, "numpy-pandas"]], "pandas": [[124, null], [61, "pandas"]], "S\u00e9ances minut\u00e9es": [[125, "seances-minutees"]], "Exercices sur le langage python": [[127, "exercices-sur-le-langage-python"]], "Structure de donn\u00e9es": [[127, null]], "Classes": [[127, null], [151, "Classes"], [216, "classes"], [217, "classes"], [69, "classes"]], "algorithmes tr\u00e8s simples": [[127, null]], "Profiling": [[127, null], [166, "Profiling"]], "Points particulier du langages": [[127, null]], "Pr\u00e9diction de la note des vins": [[144, "Pr\u00e9diction-de-la-note-des-vins"]], "Jeu de d\u00e9, rotation sur un circuit (classes)": [[146, "Jeu-de-d\u00e9,-rotation-sur-un-circuit-(classes)"]], "De": [[146, "De"]], "Permutation": [[146, "Permutation"]], "It\u00e9rateur": [[147, "It\u00e9rateur"]], "G\u00e9n\u00e9ration d\u2019un arbre al\u00e9atoire": [[147, "G\u00e9n\u00e9ration-d'un-arbre-al\u00e9atoire"]], "Profondeur maximale": [[147, "Profondeur-maximale"]], "Classe Permutation et d\u00e9composition en transitions": [[148, "Classe-Permutation-et-d\u00e9composition-en-transitions"]], "Composition": [[148, "Composition"]], "Op\u00e9rateur == et @": [[148, "Op\u00e9rateur-==-et-@"]], "D\u00e9composition": [[148, "D\u00e9composition"]], "Transposition": [[148, "Transposition"]], "Un exemple court pour d\u00e9m\u00ealer ce qui est chang\u00e9": [[148, "Un-exemple-court-pour-d\u00e9m\u00ealer-ce-qui-est-chang\u00e9"]], "Python 3.x": [[148, "Python-3.x"]], "Une classe pour repr\u00e9senter un arbre": [[149, "Une-classe-pour-repr\u00e9senter-un-arbre"]], "Premier jet": [[149, "Premier-jet"]], "Afficher l\u2019arbre": [[149, "Afficher-l'arbre"]], "Profondeur maximale : le plus grand chemin depuis la racine jusqu\u2019aux feuilles": [[149, "Profondeur-maximale-:-le-plus-grand-chemin-depuis-la-racine-jusqu'aux-feuilles"]], "Profondeur moyenne ?": [[149, "Profondeur-moyenne-?"]], "Interm\u00e8de : is ou == ?": [[149, "Interm\u00e8de-:-is-ou-==-?"]], "Classe, H\u00e9ritage, calcule d\u2019une distance": [[150, "Classe,-H\u00e9ritage,-calcule-d'une-distance"]], "Classe Product": [[150, "Classe-Product"]], "Classe utilisateur": [[150, "Classe-utilisateur"]], "Classe Base": [[150, "Classe-Base"]], "2048 et les classes": [[151, "2048-et-les-classes"]], "D\u00e9composition du probl\u00e8me": [[151, "D\u00e9composition-du-probl\u00e8me"]], "0 - Cr\u00e9ation de la matrice de jeu": [[151, "0---Cr\u00e9ation-de-la-matrice-de-jeu"]], "2 - D\u00e9termination de toutes les cases libres": [[151, "2---D\u00e9termination-de-toutes-les-cases-libres"]], "1 - Ajout d\u2019un nombre al\u00e9atoire dans {2,4} \u00e0 une position al\u00e9atoire pourvu qu\u2019elle soit libre": [[151, "1---Ajout-d'un-nombre-al\u00e9atoire-dans-{2,4}-\u00e0-une-position-al\u00e9atoire-pourvu-qu'elle-soit-libre"]], "3 - A-t-on perdu ?": [[151, "3---A-t-on-perdu-?"]], "5 - Aggr\u00e8ge les nombres dans un tableau que ce soit une ligne ou une colonne": [[151, "5---Aggr\u00e8ge-les-nombres-dans-un-tableau-que-ce-soit-une-ligne-ou-une-colonne"]], "4 - Joue un coup sachant une direction donn\u00e9e": [[151, "4---Joue-un-coup-sachant-une-direction-donn\u00e9e"]], "6 - score": [[151, "6---score"]], "7 - coup suivant": [[151, "7---coup-suivant"]], "8 - la fonction faisant tout": [[151, "8---la-fonction-faisant-tout"]], "Classe compl\u00e8te": [[151, "Classe-compl\u00e8te"]], "Un dernier graphe pour finir": [[151, "Un-dernier-graphe-pour-finir"]], "Une autre strat\u00e9gie pour illustrer l\u2019h\u00e9ritage": [[151, "Une-autre-strat\u00e9gie-pour-illustrer-l'h\u00e9ritage"]], "Un bref aper\u00e7u des classes": [[152, "Un-bref-aper\u00e7u-des-classes"]], "Une station de m\u00e9tro": [[152, "Une-station-de-m\u00e9tro"]], "Une distance": [[152, "Une-distance"]], "M\u00e9thode": [[152, "M\u00e9thode"]], "Op\u00e9rateurs": [[152, "Op\u00e9rateurs"], [216, "operateurs"], [69, "operateurs"]], "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations": [[153, "Liste,-tuple,-ensemble,-dictionnaire,-liste-cha\u00een\u00e9e,-co\u00fbt-des-op\u00e9rations"]], "Insertion avec list et deque": [[153, "Insertion-avec-list-et-deque"]], "Un \u00e9l\u00e9ment dans un ensemble": [[153, "Un-\u00e9l\u00e9ment-dans-un-ensemble"]], "Simuler une loi multinomiale": [[154, "Simuler-une-loi-multinomiale"]], "Algorithme de simulation": [[154, "Algorithme-de-simulation"]], "Une premi\u00e8re optimisation : tri des poids": [[154, "Une-premi\u00e8re-optimisation-:-tri-des-poids"]], "Optimisation bootstrap": [[154, "Optimisation-bootstrap"]], "Jeux de coloriage": [[155, "Jeux-de-coloriage"]], "Colorier un carr\u00e9 \u00e0 proportion": [[155, "Colorier-un-carr\u00e9-\u00e0-proportion"]], "Colorier en diagonale": [[155, "Colorier-en-diagonale"]], "Fonction de la surface couverte": [[155, "Fonction-de-la-surface-couverte"]], "Version math\u00e9matique": [[155, "Version-math\u00e9matique"]], "Retour au coloriage": [[155, "Retour-au-coloriage"]], "A quoi \u00e7a sert ?": [[155, "A-quoi-\u00e7a-sert-?"], [239, "a-quoi-ca-sert"]], "Jeu de d\u00e9, rotation sur un circuit": [[156, "Jeu-de-d\u00e9,-rotation-sur-un-circuit"]], "R\u00e9partition, table de hashage": [[157, "R\u00e9partition,-table-de-hashage"]], "Q1 - premi\u00e8re lettre": [[157, "Q1---premi\u00e8re-lettre"]], "Q2 - somme": [[157, "Q2---somme"]], "Q3 - pseudo g\u00e9n\u00e9rateur": [[157, "Q3---pseudo-g\u00e9n\u00e9rateur"]], "Q4 - hash": [[157, "Q4---hash"]], "Q5 - light hash": [[157, "Q5---light-hash"]], "Q6 - r\u00e9partition": [[157, "Q6---r\u00e9partition"]], "Q7 - dictionnaire": [[157, "Q7---dictionnaire"]], "Quelques \u00e9l\u00e9ments de r\u00e9ponses": [[157, "Quelques-\u00e9l\u00e9ments-de-r\u00e9ponses"]], "Premi\u00e8re lettre": [[157, "Premi\u00e8re-lettre"]], "Somme": [[157, "Somme"]], "Pseudo": [[157, "Pseudo"]], "Hash": [[157, "Hash"]], "Light hash": [[157, "Light-hash"]], "JSON - XML": [[158, "JSON---XML"]], "Q1 : \u00e9criture des donn\u00e9es au format CSV": [[158, "Q1-:-\u00e9criture-des-donn\u00e9es-au-format-CSV"], [158, "id1"]], "Q2 : \u00e9criture des donn\u00e9es au format JSON": [[158, "Q2-:-\u00e9criture-des-donn\u00e9es-au-format-JSON"], [158, "id2"]], "Q3 : relire les donn\u00e9es avec le module json": [[158, "Q3-:-relire-les-donn\u00e9es-avec-le-module-json"], [158, "id3"]], "Q4 : essayez avec les format XML (ou HTML), SQL, SAS, Excel\u2026": [[158, "Q4-:-essayez-avec-les-format-XML-(ou-HTML),-SQL,-SAS,-Excel..."], [158, "id4"]], "Q5 : donn\u00e9es non structur\u00e9es": [[158, "Q5-:-donn\u00e9es-non-structur\u00e9es"], [158, "id5"]], "Q6 : le texte, \u00e7a prend trop de place, zippons": [[158, "Q6-:-le-texte,-\u00e7a-prend-trop-de-place,-zippons"], [158, "id6"]], "Q7 : que vous inspire protobuf ?": [[158, "Q7-:-que-vous-inspire-protobuf-?"], [158, "id7"]], "Calculs de surface et autres calculs": [[159, "Calculs-de-surface-et-autres-calculs"]], "Exercice 1 : calcul de la surface d\u2019un cercle": [[159, "Exercice-1-:-calcul-de-la-surface-d'un-cercle"]], "1.1 En utilisant la constante pi": [[159, "1.1-En-utilisant-la-constante-pi"]], "1.2 Sans utiliser pi ni aucune autre fonction": [[159, "1.2-Sans-utiliser-pi-ni-aucune-autre-fonction"]], "Exercice 2 : tri al\u00e9atoire": [[159, "Exercice-2-:-tri-al\u00e9atoire"]], "Exercice 3 : petits calculs parfaits pour une machine": [[159, "Exercice-3-:-petits-calculs-parfaits-pour-une-machine"]], "1.1. calcul de la surface d\u2019un cercle avec pi": [[159, "1.1.-calcul-de-la-surface-d'un-cercle-avec-pi"]], "1.2. calcul de la surface d\u2019un cercle sans pi ou autre fonction": [[159, "1.2.-calcul-de-la-surface-d'un-cercle-sans-pi-ou-autre-fonction"]], "2. tri al\u00e9atoire": [[159, "2.-tri-al\u00e9atoire"]], "3. petits calculs parfaits pour une machine": [[159, "3.-petits-calculs-parfaits-pour-une-machine"]], "Expressions r\u00e9guli\u00e8res": [[160, "Expressions-r\u00e9guli\u00e8res"], [198, "Expressions-r\u00e9guli\u00e8res"], [238, "expressions-regulieres"], [239, "expressions-regulieres"]], "Exercice 1 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots": [[160, "Exercice-1-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots"], [160, "id1"]], "Exercice 2 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots se terminant par la lettre s": [[160, "Exercice-2-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots-se-terminant-par-la-lettre-s"], [160, "id2"]], "Exercice 3 : utiliser les expression r\u00e9guli\u00e8res pour remplacer tous les \u00ab\u00a0de\u00a0\u00bb en 2": [[160, "Exercice-3-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-remplacer-tous-les-%22de%22-en-2"], [160, "id3"]], "Exercice 4 : utiliser les expression r\u00e9guli\u00e8res pour extraire les lignes des rimes en elle ou elles ou aile ou ailes": [[160, "Exercice-4-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-les-lignes-des-rimes-en-elle-ou-elles-ou-aile-ou-ailes"], [160, "id4"]], "S\u00e9rialisation avec JSON, XML, pickle": [[161, "S\u00e9rialisation-avec-JSON,-XML,-pickle"]], "Notion de stream ou flux": [[161, "Notion-de-stream-ou-flux"]], "Q1: quelle est la fonction la plus rapide ?": [[161, "Q1:-quelle-est-la-fonction-la-plus-rapide-?"]], "Format JSON": [[161, "Format-JSON"]], "Q1. lire du json": [[161, "Q1.-lire-du-json"]], "Q2: \u00e9crire du json": [[161, "Q2:-\u00e9crire-du-json"]], "Q3: gros json": [[161, "Q3:-gros-json"]], "XML": [[161, "XML"]], "pickle": [[161, "pickle"]], "Q1: comparer le temps de s\u00e9rialisation entre pickle et json": [[161, "Q1:-comparer-le-temps-de-s\u00e9rialisation-entre-pickle-et-json"]], "Q2: comparer le temps de d\u00e9s\u00e9rialisation entre pickle et json": [[161, "Q2:-comparer-le-temps-de-d\u00e9s\u00e9rialisation-entre-pickle-et-json"]], "Peut-on tout s\u00e9rialiser ?": [[161, "Peut-on-tout-s\u00e9rialiser-?"]], "Histogramme et dictionnaire": [[162, "Histogramme-et-dictionnaire"]], "Heap": [[163, "Heap"]], "Transformer en tas": [[163, "Transformer-en-tas"]], "Dessiner un tas": [[163, "Dessiner-un-tas"]], "Premi\u00e8re version": [[163, "Premi\u00e8re-version"]], "M\u00eame chose avec les indices au lieu des valeurs": [[163, "M\u00eame-chose-avec-les-indices-au-lieu-des-valeurs"]], "Co\u00fbt de l\u2019algorithme": [[163, "Co\u00fbt-de-l'algorithme"]], "Version simplifi\u00e9e": [[163, "Version-simplifi\u00e9e"]], "Pivot de gauss avec numpy": [[164, "Pivot-de-gauss-avec-numpy"]], "Python": [[164, "Python"], [76, "python"], [76, null], [76, null]], "Numpy 1": [[164, "Numpy-1"]], "Numpy 2": [[164, "Numpy-2"]], "Vitesse": [[164, "Vitesse"]], "Profiling la fonction Gini": [[165, "Profiling-la-fonction-Gini"]], "Exercice 1 : profiler le code pr\u00e9c\u00e9dent": [[165, "Exercice-1-:-profiler-le-code-pr\u00e9c\u00e9dent"], [165, "id1"]], "Exercice 2 : changer la fonction _gini_final si possible en plus rapide": [[165, "Exercice-2-:-changer-la-fonction-_gini_final-si-possible-en-plus-rapide"], [165, "id2"]], "Exercice 3 : vous am\u00e9liorez la fonction _gini_final, profilez pour savoir de combien ?": [[165, "Exercice-3-:-vous-am\u00e9liorez-la-fonction-_gini_final,-profilez-pour-savoir-de-combien-?"], [165, "id3"]], "Exercice 4 : utiliser d\u2019autres modules de profiling": [[165, "Exercice-4-:-utiliser-d'autres-modules-de-profiling"], [165, "id4"]], "Exercice 5 : la fonction _gini_cumsum contient deux boucles. Quelle est la plus rapide ?": [[165, "Exercice-5-:-la-fonction-_gini_cumsum-contient-deux-boucles.-Quelle-est-la-plus-rapide-?"], [165, "id5"]], "Profiling, application \u00e0 la convolution": [[166, "Profiling,-application-\u00e0-la-convolution"]], "Impl\u00e9mentation na\u00efve": [[166, "Impl\u00e9mentation-na\u00efve"]], "Q1: comparer les temps d\u2019ex\u00e9cution": [[166, "Q1:-comparer-les-temps-d'ex\u00e9cution"]], "Q2: comparer avec une seconde impl\u00e9mentation": [[166, "Q2:-comparer-avec-une-seconde-impl\u00e9mentation"]], "im2col": [[166, "im2col"]], "Q3: comparer \u00e0 nouveau les temps d\u2019\u00e9xecution": [[166, "Q3:-comparer-\u00e0-nouveau-les-temps-d'\u00e9xecution"]], "Q4: que peut-on en d\u00e9duire ?": [[166, "Q4:-que-peut-on-en-d\u00e9duire-?"]], "Profilage : \u00e9v\u00e9nements ou \u00e9chantillonnage": [[166, "Profilage-:-\u00e9v\u00e9nements-ou-\u00e9chantillonnage"]], "Une derni\u00e8re impl\u00e9mentation": [[166, "Une-derni\u00e8re-impl\u00e9mentation"]], "Q5: Que pouvez-vous dire de cette derni\u00e8re impl\u00e9mentation ?": [[166, "Q5:-Que-pouvez-vous-dire-de-cette-derni\u00e8re-impl\u00e9mentation-?"]], "Exemple de profiling": [[167, "Exemple-de-profiling"]], "Bizarrerie": [[167, "Bizarrerie"]], "Profiler": [[167, "Profiler"]], "Recherche dichotomique": [[168, "Recherche-dichotomique"], [206, "Recherche-dichotomique"]], "Version it\u00e9rative": [[168, "Version-it\u00e9rative"]], "Version r\u00e9cursive": [[168, "Version-r\u00e9cursive"]], "Version r\u00e9cursive 2": [[168, "Version-r\u00e9cursive-2"]], "Web-Scraping - pokemon": [[169, "Web-Scraping---pokemon"]], "Fonction pour obtenir les caract\u00e9ristiques de pokemons": [[169, "Fonction-pour-obtenir-les-caract\u00e9ristiques-de-pokemons"]], "les images de pokemon": [[169, "les-images-de-pokemon"]], "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre": [[170, "D'une-structure-de-donn\u00e9es-\u00e0-l'autre"]], "histogramme et dictionnaire": [[170, "histogramme-et-dictionnaire"]], "liste \u00e0 dictionnaire": [[170, "liste-\u00e0-dictionnaire"]], "dictionnaire \u00e0 liste": [[170, "dictionnaire-\u00e0-liste"]], "dictionnaire et deux listes": [[170, "dictionnaire-et-deux-listes"]], "deux listes et dictionnaires": [[170, "deux-listes-et-dictionnaires"]], "zip reverse": [[170, "zip-reverse"]], "matrices et dictionnaires": [[170, "matrices-et-dictionnaires"]], "liste de listes et dictionnaires": [[170, "liste-de-listes-et-dictionnaires"]], "dictionnaires et liste de listes": [[170, "dictionnaires-et-liste-de-listes"]], "matrice sparse": [[170, "matrice-sparse"]], "matrices et tableaux": [[170, "matrices-et-tableaux"]], "2 dimensions logiques, 1 dimension en m\u00e9moire": [[170, "2-dimensions-logiques,-1-dimension-en-m\u00e9moire"]], "du tableau \u00e0 la liste de listes": [[170, "du-tableau-\u00e0-la-liste-de-listes"]], "Calculer un chi 2 sur un tableau de contingence": [[171, "Calculer-un-chi-2-sur-un-tableau-de-contingence"]], "formule": [[171, "formule"]], "tableau au hasard": [[171, "tableau-au-hasard"]], "calcul avec scipy": [[171, "calcul-avec-scipy"]], "calcul avec numpy": [[171, "calcul-avec-numpy"]], "Tests unitaires": [[172, "Tests-unitaires"]], "Un petit jeu": [[172, "Un-petit-jeu"]], "Une autre \u00e9criture": [[172, "Une-autre-\u00e9criture"]], "Des obstacles\u2026": [[172, "Des-obstacles..."]], "Ajouter d\u2019autres tests unitaires pour cette seconde version": [[172, "Ajouter-d'autres-tests-unitaires-pour-cette-seconde-version"]], "Changer la taille de l\u2019\u00e9chiquier": [[172, "Changer-la-taille-de-l'\u00e9chiquier"]], "Tester une exception": [[172, "Tester-une-exception"]], "Tri plus rapide que pr\u00e9vu": [[173, "Tri-plus-rapide-que-pr\u00e9vu"]], "trier un plus petit ensemble": [[173, "trier-un-plus-petit-ensemble"]], "\u00e9volution en fonction de n": [[173, "\u00e9volution-en-fonction-de-n"]], "D\u00e9corr\u00e9lation de variables al\u00e9atoires": [[174, "D\u00e9corr\u00e9lation-de-variables-al\u00e9atoires"]], "Cr\u00e9ation d\u2019un jeu de donn\u00e9es": [[174, "Cr\u00e9ation-d'un-jeu-de-donn\u00e9es"], [175, "Cr\u00e9ation-d'un-jeu-de-donn\u00e9es"]], "Corr\u00e9lation de matrices": [[174, "Corr\u00e9lation-de-matrices"], [175, "Corr\u00e9lation-de-matrices"]], "Un peu de math\u00e9matiques": [[174, "Un-peu-de-math\u00e9matiques"]], "Calcul de la racine carr\u00e9e": [[174, "Calcul-de-la-racine-carr\u00e9e"], [175, "Calcul-de-la-racine-carr\u00e9e"]], "D\u00e9corr\u00e9lation": [[174, "D\u00e9corr\u00e9lation"], [175, "D\u00e9corr\u00e9lation"]], "Simulation de variables corr\u00e9l\u00e9es": [[174, "Simulation-de-variables-corr\u00e9l\u00e9es"], [175, "Simulation-de-variables-corr\u00e9l\u00e9es"]], "Q11": [[174, "Q11"], [175, "Q11"]], "Q12": [[174, "Q12"], [175, "Q12"]], "Q13": [[174, "Q13"], [175, "Q13"]], "D\u00e9corr\u00e9lation de variables al\u00e9atoires - correction": [[175, "D\u00e9corr\u00e9lation-de-variables-al\u00e9atoires---correction"]], "Cryptage homomorphic de Craig Gentry": [[176, "Cryptage-homomorphic-de-Craig-Gentry"]], "D\u00e9finition du cryptage": [[176, "D\u00e9finition-du-cryptage"], [177, "D\u00e9finition-du-cryptage"]], "Exercice 1 : impl\u00e9menter le cryptage": [[176, "Exercice-1-:-impl\u00e9menter-le-cryptage"], [177, "Exercice-1-:-impl\u00e9menter-le-cryptage"]], "Exercice 2 : v\u00e9rifier que le cryptage est stable par addition et multiplication": [[176, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"], [177, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"]], "Exercice 3 : impl\u00e9mententer l\u2019addition enti\u00e8re": [[176, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"], [177, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"]], "Exercice 4 : impl\u00e9menter la multiplication enti\u00e8re": [[176, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"], [177, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"]], "Cryptage homomorphic de Craig Gentry - correction": [[177, "Cryptage-homomorphic-de-Craig-Gentry---correction"]], "Spectral Clustering": [[178, "Spectral-Clustering"]], "Un graphe": [[178, "Un-graphe"], [179, "Un-graphe"]], "Partie 1 : clustering en pratique": [[178, "Partie-1-:-clustering-en-pratique"], [179, "Partie-1-:-clustering-en-pratique"]], "Partie 2 : interm\u00e8de th\u00e9orique": [[178, "Partie-2-:-interm\u00e8de-th\u00e9orique"]], "Partie 3 : un peu plus loin": [[178, "Partie-3-:-un-peu-plus-loin"], [179, "Partie-3-:-un-peu-plus-loin"]], "Spectral Clustering - correction": [[179, "Spectral-Clustering---correction"]], "Plus proches voisins en grande dimension - correction": [[181, "Plus-proches-voisins-en-grande-dimension---correction"]], "Q1 : k-nn : mesurer la performance": [[181, "Q1-:-k-nn-:-mesurer-la-performance"], [180, "Q1-:-k-nn-:-mesurer-la-performance"]], "dimension": [[181, "dimension"]], "observations": [[181, "observations"]], "Q2 : k-nn avec sparse features": [[181, "Q2-:-k-nn-avec-sparse-features"], [180, "Q2-:-k-nn-avec-sparse-features"]], "Q3 : Imaginez une fa\u00e7on d\u2019aller plus vite ?": [[181, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"], [180, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"]], "Programmation dynamique et plus court chemin": [[182, "Programmation-dynamique-et-plus-court-chemin"]], "Algorithme du plus court chemin": [[182, "Algorithme-du-plus-court-chemin"]], "La r\u00e9partition des skis": [[182, "La-r\u00e9partition-des-skis"]], "Exercice facultatif": [[182, "Exercice-facultatif"], [183, "Exercice-facultatif"]], "Exercice 5": [[182, "Exercice-5"], [183, "Exercice-5"], [206, "Exercice-5"]], "Exercice 6": [[182, "Exercice-6"], [183, "Exercice-6"], [206, "Exercice-6"]], "Exercice 7": [[182, "Exercice-7"], [183, "Exercice-7"], [206, "Exercice-7"], [207, "Exercice-7"]], "Exercice 8": [[182, "Exercice-8"], [183, "Exercice-8"]], "Prolongements : degr\u00e9 de s\u00e9paration sur Facebook": [[182, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"], [183, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"]], "Programmation dynamique et plus court chemin (correction)": [[183, "Programmation-dynamique-et-plus-court-chemin-(correction)"]], "Puzzles algorithmiques (1)": [[184, "Puzzles-algorithmiques-(1)"]], "Produits scalaires": [[184, "Produits-scalaires"], [185, "Produits-scalaires"]], "Solution moins na\u00efve": [[184, "Solution-moins-na\u00efve"]], "Probl\u00e8me de recouvrement": [[184, "Probl\u00e8me-de-recouvrement"], [185, "Probl\u00e8me-de-recouvrement"]], "Soudoyer les prisonniers": [[184, "Soudoyer-les-prisonniers"], [185, "Soudoyer-les-prisonniers"]], "D\u00e9coupage intelligent d\u2019une base de donn\u00e9es": [[184, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"], [185, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"]], "Puzzles algorithmes (1) - correction": [[185, "Puzzles-algorithmes-(1)---correction"]], "Premi\u00e8re solution": [[185, "Premi\u00e8re-solution"]], "Seconde solution": [[185, "Seconde-solution"]], "Approche par programmation dynamique": [[185, "Approche-par-programmation-dynamique"]], "Puzzles algorithmiques (2)": [[186, "Puzzles-algorithmiques-(2)"]], "Exercice 1 : nombres premiers": [[186, "Exercice-1-:-nombres-premiers"], [187, "Exercice-1-:-nombres-premiers"]], "Exercice 2 : watersheds": [[186, "Exercice-2-:-watersheds"], [187, "Exercice-2-:-watersheds"]], "Exercice 3 : s\u00e9paration des bagarreurs": [[186, "Exercice-3-:-s\u00e9paration-des-bagarreurs"], [187, "Exercice-3-:-s\u00e9paration-des-bagarreurs"]], "Exercice 4 : formation de bin\u00f4mes": [[186, "Exercice-4-:-formation-de-bin\u00f4mes"], [187, "Exercice-4-:-formation-de-bin\u00f4mes"]], "Puzzles algorithmes (2) - correction": [[187, "Puzzles-algorithmes-(2)---correction"]], "Seconde id\u00e9e : les trouver tous ?": [[187, "Seconde-id\u00e9e-:-les-trouver-tous-?"]], "solution": [[187, "solution"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique": [[188, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique"]], "Apart\u00e9 sur les classes": [[188, "Apart\u00e9-sur-les-classes"]], "Classes, attributs, op\u00e9rateurs": [[188, "Classes,-attributs,-op\u00e9rateurs"]], "Exercice 1 : carr\u00e9 magique": [[188, "Exercice-1-:-carr\u00e9-magique"], [189, "Exercice-1-:-carr\u00e9-magique"]], "M\u00e9thodes": [[188, "M\u00e9thodes"], [216, "methodes"], [228, "methodes"]], "Exercice 2 : \u00e0 faire \u00e0 trois, carr\u00e9 magique (suite)": [[188, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"], [189, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"]], "Exercice 3 : trouver tous les carr\u00e9s magiques": [[188, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"], [189, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"]], "Exercice 4 : faire plus rapide": [[188, "Exercice-4-:-faire-plus-rapide"], [189, "Exercice-4-:-faire-plus-rapide"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)": [[189, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique-(correction)"]], "Programme complet": [[189, "Programme-complet"]], "Classes, h\u00e9ritage": [[190, "Classes,-h\u00e9ritage"]], "Qu\u2019est-ce que l\u2019h\u00e9ritage ?": [[190, "Qu'est-ce-que-l'h\u00e9ritage-?"]], "Exercice 1 : pi\u00e8ce normale": [[190, "Exercice-1-:-pi\u00e8ce-normale"], [191, "Exercice-1-:-pi\u00e8ce-normale"]], "Exercice 2 : pi\u00e8ce truqu\u00e9e": [[190, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"], [191, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"]], "Utiliser des m\u00e9thodes de la classe m\u00e8re": [[190, "Utiliser-des-m\u00e9thodes-de-la-classe-m\u00e8re"]], "Exercice 3 : Pi\u00e8ce mixte": [[190, "Exercice-3-:-Pi\u00e8ce-mixte"], [191, "Exercice-3-:-Pi\u00e8ce-mixte"]], "Autre construction avec des fonctions": [[190, "Autre-construction-avec-des-fonctions"]], "Exercice 4 : pi\u00e8ce mixte avec des fonctions": [[190, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"], [191, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"]], "Classes, h\u00e9ritage (correction)": [[191, "Classes,-h\u00e9ritage-(correction)"]], "Dictionnaires, fonctions, code de Vigen\u00e8re": [[192, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re"]], "Fonctions": [[192, "Fonctions"], [230, "fonctions"], [69, "fonctions"], [239, "fonctions"]], "Fonctions dans le d\u00e9tail": [[192, "Fonctions-dans-le-d\u00e9tail"]], "Variable locale": [[192, "Variable-locale"]], "Mot-cl\u00e9 return": [[192, "Mot-cl\u00e9-return"]], "Fonction r\u00e9cursive": [[192, "Fonction-r\u00e9cursive"], [230, "fonction-recursive"]], "Dictionnaires": [[192, "Dictionnaires"]], "cl\u00e9 - valeur": [[192, "cl\u00e9---valeur"]], "notions de co\u00fbt": [[192, "notions-de-co\u00fbt"]], "ordonner les \u00e9l\u00e9ments d\u2019un dictionnaire": [[192, "ordonner-les-\u00e9l\u00e9ments-d'un-dictionnaire"]], "Exercice 2 : recherche dans une liste": [[192, "Exercice-2-:-recherche-dans-une-liste"]], "Exercice 3 : utilisation d\u2019un dictionnaire": [[192, "Exercice-3-:-utilisation-d'un-dictionnaire"], [193, "Exercice-3-:-utilisation-d'un-dictionnaire"]], "Exercice 4 : crypter de d\u00e9crypter selon Vigen\u00e8re": [[192, "Exercice-4-:-crypter-de-d\u00e9crypter-selon-Vigen\u00e8re"]], "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)": [[193, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re-(correction)"]], "Exercice 4 : crypter et d\u00e9crypter selon Vigen\u00e8re": [[193, "Exercice-4-:-crypter-et-d\u00e9crypter-selon-Vigen\u00e8re"]], "Int\u00e9grale et la m\u00e9thode des rectangles": [[194, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles"]], "Calcul de l\u2019int\u00e9grale": [[194, "Calcul-de-l'int\u00e9grale"], [195, "Calcul-de-l'int\u00e9grale"]], "Calcul de pr\u00e9cision": [[194, "Calcul-de-pr\u00e9cision"], [195, "Calcul-de-pr\u00e9cision"]], "Calcul plus rapide": [[194, "Calcul-plus-rapide"], [195, "Calcul-plus-rapide"]], "Int\u00e9grale et la m\u00e9thode des rectangles - correction": [[195, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles---correction"]], "La fonction r\u00e9calcitrante": [[195, "La-fonction-r\u00e9calcitrante"]], "Calcul de Monte Carlo": [[195, "Calcul-de-Monte-Carlo"]], "Quand s\u2019arr\u00eater ?": [[195, "Quand-s'arr\u00eater-?"]], "Mesure du temps": [[195, "Mesure-du-temps"], [91, "Mesure-du-temps"]], "2048 - strat\u00e9gie gagnante": [[196, "2048---strat\u00e9gie-gagnante"]], "Exercice 1 : impl\u00e9menter les r\u00e8gles du jeu": [[196, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"], [197, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"]], "Exercice 2 : impl\u00e9menter une strat\u00e9gie": [[196, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"], [197, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"]], "2048 - strat\u00e9gie gagnante - correction": [[197, "2048---strat\u00e9gie-gagnante---correction"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res": [[198, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res"]], "Fichiers": [[198, "Fichiers"], [228, "fichiers"], [232, "fichiers"], [69, "fichiers"]], "Ecriture": [[198, "Ecriture"], [232, "ecriture"]], "Lecture": [[198, "Lecture"], [232, "lecture"]], "with": [[198, "with"]], "\u00e0 quoi \u00e7a sert ?": [[198, "\u00e0-quoi-\u00e7a-sert-?"]], "Exercice 1 : Excel \\rightarrow Python \\rightarrow Excel": [[198, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"], [199, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"]], "Autres formats de fichiers": [[198, "Autres-formats-de-fichiers"]], "Modules": [[198, "Modules"], [69, "modules"]], "Exercice 2 : trouver un module (1)": [[198, "Exercice-2-:-trouver-un-module-(1)"]], "Exercice 3 : trouver un module (2)": [[198, "Exercice-3-:-trouver-un-module-(2)"], [199, "Exercice-3-:-trouver-un-module-(2)"]], "Module qu\u2019on cr\u00e9e soi-m\u00eame": [[198, "Module-qu'on-cr\u00e9e-soi-m\u00eame"]], "Exercice 4 : son propre module": [[198, "Exercice-4-:-son-propre-module"], [199, "Exercice-4-:-son-propre-module"]], "Exercice 5 : chercher un motif dans un texte": [[198, "Exercice-5-:-chercher-un-motif-dans-un-texte"], [199, "Exercice-5-:-chercher-un-motif-dans-un-texte"]], "Exercice 6 : chercher un autre motif dans un texte": [[198, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"], [199, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"]], "Exercice 7 : recherche les urls dans une page wikip\u00e9dia": [[198, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"], [199, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"]], "Exercice 8 : construire un texte \u00e0 motif": [[198, "Exercice-8-:-construire-un-texte-\u00e0-motif"], [199, "Exercice-8-:-construire-un-texte-\u00e0-motif"]], "Petites subtilit\u00e9s avec les expressions r\u00e9guli\u00e8res en Python": [[198, "Petites-subtilit\u00e9s-avec-les-expressions-r\u00e9guli\u00e8res-en-Python"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)": [[199, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res-(correction)"]], "Premiers pas en Python": [[200, "Premiers-pas-en-Python"]], "Partie 1": [[200, "Partie-1"]], "Partie 2": [[200, "Partie-2"], [201, "Partie-2"]], "Partie 3": [[200, "Partie-3"], [201, "Partie-3"]], "Premiers pas en Python (correction)": [[201, "Premiers-pas-en-Python-(correction)"]], "Tracer une pyramide bigarr\u00e9e": [[202, "Tracer-une-pyramide-bigarr\u00e9e"]], "Probl\u00e8me": [[202, "Probl\u00e8me"], [203, "Probl\u00e8me"]], "Id\u00e9e de la solution": [[202, "Id\u00e9e-de-la-solution"], [203, "Id\u00e9e-de-la-solution"]], "Tracer une pyramide bigarr\u00e9e - correction": [[203, "Tracer-une-pyramide-bigarr\u00e9e---correction"]], "Les coordonn\u00e9es": [[203, "Les-coordonn\u00e9es"]], "La couleur": [[203, "La-couleur"]], "Deviner la langue d\u2019un texte": [[204, "Deviner-la-langue-d'un-texte"]], "Q1 : lire un fichier": [[204, "Q1-:-lire-un-fichier"], [205, "Q1-:-lire-un-fichier"]], "Q2 : histogramme": [[204, "Q2-:-histogramme"], [205, "Q2-:-histogramme"]], "Q3 : normalisation": [[204, "Q3-:-normalisation"], [205, "Q3-:-normalisation"]], "Q4 : calcul": [[204, "Q4-:-calcul"], [205, "Q4-:-calcul"]], "Q5 : score": [[204, "Q5-:-score"], [205, "Q5-:-score"]], "Deviner la langue d\u2019un texte (correction)": [[205, "Deviner-la-langue-d'un-texte-(correction)"]], "Arbre et Trie": [[206, "Arbre-et-Trie"]], "Construction d\u2019une liste al\u00e9atoire": [[206, "Construction-d'une-liste-al\u00e9atoire"]], "Trie": [[206, "Trie"]], "Recherche dans un trie": [[206, "Recherche-dans-un-trie"]], "Arbre et Trie (correction)": [[207, "Arbre-et-Trie-(correction)"]], "Exercice 3 : recherche dichotomique": [[207, "Exercice-3-:-recherche-dichotomique"]], "Exercice 5 : trie": [[207, "Exercice-5-:-trie"]], "Exercice 6 : recherche dans un trie": [[207, "Exercice-6-:-recherche-dans-un-trie"]], "Plus en d\u00e9tails": [[207, "Plus-en-d\u00e9tails"]], "Questions": [[207, "Questions"], [218, "questions"]], "Variables, boucles, tests": [[208, "Variables,-boucles,-tests"]], "Partie 1 : variables, int, float, str, list": [[208, "Partie-1-:-variables,-int,-float,-str,-list"]], "Partie 2 : Tests": [[208, "Partie-2-:-Tests"]], "Partie 3 : boucles": [[208, "Partie-3-:-boucles"]], "Partie 4 : les listes compactes, les ensembles": [[208, "Partie-4-:-les-listes-compactes,-les-ensembles"]], "Partie 5 : recherche non dichotomique (exercice)": [[208, "Partie-5-:-recherche-non-dichotomique-(exercice)"], [209, "Partie-5-:-recherche-non-dichotomique-(exercice)"]], "Partie 6 : Recherche dichotomique": [[208, "Partie-6-:-Recherche-dichotomique"]], "Partie 7 : pour aller plus loin": [[208, "Partie-7-:-pour-aller-plus-loin"]], "Variables, boucles, tests (correction)": [[209, "Variables,-boucles,-tests-(correction)"]], "Partie 3 : boucles (exercice)": [[209, "Partie-3-:-boucles-(exercice)"]], "Partie 6 : recherche dichotomique (exercice)": [[209, "Partie-6-:-recherche-dichotomique-(exercice)"]], "Partie 7 : pour aller plus loin (exercice)": [[209, "Partie-7-:-pour-aller-plus-loin-(exercice)"]], "Optimiser la note moyenne": [[210, "Optimiser-la-note-moyenne"]], "La classe Bereme": [[210, "La-classe-Bereme"]], "La classe Eleve": [[210, "La-classe-Eleve"]], "Une classe": [[210, "Une-classe"]], "Une bar\u00e8me optimis\u00e9": [[210, "Une-bar\u00e8me-optimis\u00e9"]], "Une erreur": [[210, "Une-erreur"]], "D\u00e9monstration": [[210, "D\u00e9monstration"]], "Distance d\u2019\u00e9dition (4 octobre)": [[211, "Distance-d'\u00e9dition-(4-octobre)"]], "distance avec des mots de m\u00eame longueur": [[211, "distance-avec-des-mots-de-m\u00eame-longueur"]], "Distance avec des mots presque de m\u00eame longueur": [[211, "Distance-avec-des-mots-presque-de-m\u00eame-longueur"]], "Cas g\u00e9n\u00e9rique": [[211, "Cas-g\u00e9n\u00e9rique"]], "Co\u00fbt algorithmique": [[211, "Co\u00fbt-algorithmique"]], "Distance de Levenshtein": [[211, "Distance-de-Levenshtein"]], "Avec alignement": [[211, "Avec-alignement"]], "Un co\u00fbt diff\u00e9rent pour les accents": [[211, "Un-co\u00fbt-diff\u00e9rent-pour-les-accents"]], "2023": [[212, "id1"], [23, null]], "Pivot de Gauss": [[213, "Pivot-de-Gauss"]], "Recherche de pr\u00e9fixes": [[214, "Recherche-de-pr\u00e9fixes"]], "Notebooks \u00e9crits durant les s\u00e9ances": [[215, "notebooks-ecrits-durant-les-seances"]], "Pr\u00e9sentation des classes : m\u00e9thodes et attributs": [[216, "presentation-des-classes-methodes-et-attributs"]], "D\u00e9finition, d\u00e9claration": [[216, "definition-declaration"]], "Attributs": [[216, "attributs"]], "Constructeur": [[216, "constructeur"]], "Apport du langage python": [[216, "apport-du-langage-python"]], "Liste des attributs": [[216, "liste-des-attributs"]], "Attributs implicites": [[216, "attributs-implicites"]], "Commentaires, aide": [[216, "commentaires-aide"]], "Classe incluse": [[216, "classe-incluse"]], "It\u00e9rateurs": [[216, "iterateurs"], [230, "iterateurs"]], "M\u00e9thodes, attributs statiques et ajout de m\u00e9thodes": [[216, "methodes-attributs-statiques-et-ajout-de-methodes"]], "M\u00e9thode statique": [[216, "methode-statique"]], "Attributs statiques": [[216, "attributs-statiques"]], "Ajout de m\u00e9thodes": [[216, "ajout-de-methodes"]], "Propri\u00e9t\u00e9s": [[216, "proprietes"]], "Copie d\u2019instances": [[216, "copie-d-instances"], [69, "copie-d-instances"]], "Copie d\u2019instance de classe simple": [[216, "copie-d-instance-de-classe-simple"]], "Copie d\u2019instance de classes incluant d\u2019autres classes": [[216, "copie-d-instance-de-classes-incluant-d-autres-classes"]], "Listes et dictionnaires": [[216, "listes-et-dictionnaires"]], "copy et deepcopy": [[216, "copy-et-deepcopy"]], "Attributs fig\u00e9s": [[216, "attributs-figes"]], "H\u00e9ritage": [[216, "heritage"], [69, "heritage"]], "Exemple autour de pi\u00e8ces de monnaie": [[216, "exemple-autour-de-pieces-de-monnaie"]], "Sens de l\u2019h\u00e9ritage (2)": [[216, "sens-de-l-heritage-2"]], "H\u00e9ritage multiple": [[216, "heritage-multiple"]], "Fonctions issubclass et isinstance": [[216, "fonctions-issubclass-et-isinstance"]], "Compilation de classes": [[216, "compilation-de-classes"]], "Surcharge d\u2019op\u00e9rateur sur des types": [[216, "surcharge-d-operateur-sur-des-types"]], "Sens de l\u2019h\u00e9ritage (1)": [[216, "sens-de-l-heritage-1"]], "Deux lign\u00e9es d\u2019h\u00e9ritages": [[216, "deux-lignees-d-heritages"]], "C\u2019est oblig\u00e9 d\u2019utiliser les classes ?": [[218, "c-est-oblige-d-utiliser-les-classes"]], "Exceptions": [[219, "exceptions"], [221, "exceptions"], [69, "exceptions"]], "Principe des exceptions": [[219, "principe-des-exceptions"]], "Attraper toutes les erreurs": [[219, "attraper-toutes-les-erreurs"]], "Obtenir le type d\u2019erreur, attraper un type d\u2019exception": [[219, "obtenir-le-type-d-erreur-attraper-un-type-d-exception"]], "Lancer une exception": [[219, "lancer-une-exception"]], "H\u00e9ritage et exception": [[219, "heritage-et-exception"]], "Instructions try, except imbriqu\u00e9es": [[219, "instructions-try-except-imbriquees"]], "D\u00e9finir ses propres exceptions": [[219, "definir-ses-propres-exceptions"]], "D\u00e9river une classe d\u2019exception": [[219, "deriver-une-classe-d-exception"]], "Personnalisation d\u2019une classe d\u2019exception": [[219, "personnalisation-d-une-classe-d-exception"]], "Exemples d\u2019utilisation des exceptions": [[219, "exemples-d-utilisation-des-exceptions"]], "Les it\u00e9rateurs": [[219, "les-iterateurs"]], "Exception ou valeur aberrante": [[219, "exception-ou-valeur-aberrante"]], "Le pi\u00e8ge des exceptions": [[219, "le-piege-des-exceptions"]], "Usage": [[220, "usage"]], "Pile d\u2019appel ou call stack": [[220, "pile-d-appel-ou-call-stack"]], "R\u00e9cup\u00e9ration de la pile d\u2019appel": [[220, "recuperation-de-la-pile-d-appel"]], "Message d\u2019erreur plus explicite": [[220, "message-d-erreur-plus-explicite"]], "Type d\u2019exception": [[220, "type-d-exception"]], "Conventions": [[220, "conventions"]], "Warning et logging": [[222, "warning-et-logging"]], "Warnings": [[222, "warnings"]], "G\u00e9n\u00e9rer un warning": [[222, "generer-un-warning"]], "Intercepter un warning": [[222, "intercepter-un-warning"]], "Warning personnalis\u00e9": [[222, "warning-personnalise"]], "Logging": [[222, "logging"]], "Interfaces graphiques": [[223, "interfaces-graphiques"]], "tkinter": [[224, "tkinter"]], "Les objets": [[224, "les-objets"]], "Zone de texte": [[224, "zone-de-texte"]], "Bouton": [[224, "bouton"]], "Zone de saisie": [[224, "zone-de-saisie"]], "Zone de saisie \u00e0 plusieurs lignes": [[224, "zone-de-saisie-a-plusieurs-lignes"]], "Case \u00e0 cocher": [[224, "case-a-cocher"]], "Case ronde ou bouton radio": [[224, "case-ronde-ou-bouton-radio"]], "Liste": [[224, "liste"], [231, "liste"], [69, "liste"]], "Liste avec barre de d\u00e9filement, Combobox": [[224, "liste-avec-barre-de-defilement-combobox"]], "Canevas": [[224, "canevas"]], "Menus": [[224, "menus"]], "M\u00e9thodes communes": [[224, "methodes-communes"]], "Disposition des objets dans une fen\u00eatre": [[224, "disposition-des-objets-dans-une-fenetre"]], "Emplacements": [[224, "emplacements"]], "M\u00e9thode pack": [[224, "methode-pack"]], "M\u00e9thode grid": [[224, "methode-grid"]], "M\u00e9thode place": [[224, "methode-place"]], "Sous-fen\u00eatre": [[224, "sous-fenetre"]], "Ev\u00e9nements": [[224, "evenements"]], "Fen\u00eatre principale": [[224, "fenetre-principale"]], "Focus": [[224, "focus"]], "Lancer une fonction lorsqu\u2019un bouton est press\u00e9": [[224, "lancer-une-fonction-lorsqu-un-bouton-est-presse"]], "Associer n\u2019importe quel \u00e9v\u00e9nement \u00e0 un objet": [[224, "associer-n-importe-quel-evenement-a-un-objet"]], "Menu": [[224, "menu"]], "Fonctions pr\u00e9d\u00e9finies": [[224, "fonctions-predefinies"]], "D\u2019autres fen\u00eatres et contr\u00f4les": [[224, "d-autres-fenetres-et-controles"]], "Cr\u00e9er une seconde bo\u00eete de dialogues": [[224, "creer-une-seconde-boite-de-dialogues"]], "Fen\u00eatres standard": [[224, "fenetres-standard"]], "Compte \u00e0 rebours": [[224, "compte-a-rebours"]], "Contr\u00f4les personnalis\u00e9s : utilisation des classes": [[224, "controles-personnalises-utilisation-des-classes"]], "Fen\u00eatres personnalis\u00e9es : utilisation des classes": [[224, "fenetres-personnalisees-utilisation-des-classes"]], "S\u00e9quence d\u2019\u00e9v\u00e9nements": [[224, "sequence-d-evenements"]], "Communiquer un r\u00e9sultat par message": [[224, "communiquer-un-resultat-par-message"]], "OrderedDict": [[225, "ordereddict"]], "namedtuple": [[225, "namedtuple"]], "Counter": [[225, "counter"]], "deque": [[225, "deque"]], "Constructions fr\u00e9quentes": [[226, "constructions-frequentes"]], "Constructions n\u00e9gatives": [[226, "constructions-negatives"]], "datetime": [[227, "datetime"]], "Autres formats de date": [[227, "autres-formats-de-date"]], "Encoding et jeux de caract\u00e8res": [[228, "encoding-et-jeux-de-caracteres"]], "Jeux de caract\u00e8res": [[228, "jeux-de-caracteres"]], "Encodings par d\u00e9faut": [[228, "encodings-par-defaut"]], "Variables et fonctions": [[229, "variables-et-fonctions"]], "Syntaxe du langage Python (boucles, tests, fonctions)": [[230, "syntaxe-du-langage-python-boucles-tests-fonctions"]], "Les trois concepts des algorithmes": [[230, "les-trois-concepts-des-algorithmes"]], "Tests": [[230, "tests"], [69, "tests"]], "D\u00e9finition et syntaxe": [[230, "definition-et-syntaxe"]], "Comparaisons possibles": [[230, "comparaisons-possibles"]], "Op\u00e9rateurs logiques": [[230, "operateurs-logiques"]], "Ecriture condens\u00e9e (test)": [[230, "ecriture-condensee-test"]], "Exemple (test)": [[230, "exemple-test"]], "None, True et 1": [[230, "none-true-et-1"]], "Passer, instruction pass": [[230, "passer-instruction-pass"]], "Boucles": [[230, "boucles"], [69, "boucles"]], "Boucle B1 : test": [[230, "indexmathe-Boucle0"]], "Boucle while": [[230, "boucle-while"]], "Boucle for": [[230, "boucle-for"]], "Listes, boucle for, liste en extension": [[230, "listes-boucle-for-liste-en-extension"]], "Plusieurs variables de boucles": [[230, "plusieurs-variables-de-boucles"]], "Ecriture condens\u00e9e (for)": [[230, "ecriture-condensee-for"]], "Pilotage d\u2019une boucle : continue": [[230, "pilotage-d-une-boucle-continue"]], "Pilotage d\u2019une boucle : break": [[230, "pilotage-d-une-boucle-break"]], "Fin normale d\u2019une boucle : else": [[230, "fin-normale-d-une-boucle-else"]], "Suppression ou ajout d\u2019\u00e9l\u00e9ments lors d\u2019une boucle": [[230, "suppression-ou-ajout-d-elements-lors-d-une-boucle"]], "D\u00e9finition, syntaxe": [[230, "definition-syntaxe"]], "Exemple (for)": [[230, "exemple-for"]], "Param\u00e8tres avec des valeurs par d\u00e9faut": [[230, "parametres-avec-des-valeurs-par-defaut"]], "Ordre des param\u00e8tres": [[230, "ordre-des-parametres"]], "Surcharge de fonction": [[230, "surcharge-de-fonction"]], "Commentaires": [[230, "commentaires"]], "Param\u00e8tres modifiables": [[230, "parametres-modifiables"]], "Port\u00e9e des variables, des param\u00e8tres": [[230, "portee-des-variables-des-parametres"]], "Port\u00e9e des fonctions": [[230, "portee-des-fonctions"]], "Nombre de param\u00e8tres variable": [[230, "nombre-de-parametres-variable"]], "Ecriture simplifi\u00e9e pour des fonctions simples : lambda": [[230, "ecriture-simplifiee-pour-des-fonctions-simples-lambda"]], "Fonctions g\u00e9n\u00e9rateur": [[230, "fonctions-generateur"]], "Identificateur appelable": [[230, "identificateur-appelable"]], "Compilation dynamique (eval)": [[230, "compilation-dynamique-eval"]], "Compilation dynamique (compile, exec)": [[230, "compilation-dynamique-compile-exec"]], "Indentation": [[230, "indentation"]], "Fonctions usuelles": [[230, "fonctions-usuelles"]], "Types et variables du langage python": [[231, "types-et-variables-du-langage-python"]], "Variables": [[231, "variables"], [69, "variables"]], "Types immuables (ou immutable)": [[231, "types-immuables-ou-immutable"]], "Type \u00ab\u00a0rien\u00a0\u00bb ou None": [[231, "type-rien-ou-none"]], "Nombres r\u00e9els et entiers": [[231, "nombres-reels-et-entiers"]], "Bool\u00e9en": [[231, "booleen"]], "Cha\u00eene de caract\u00e8res": [[231, "chaine-de-caracteres"]], "Cr\u00e9ation d\u2019une cha\u00eene de caract\u00e8res - str": [[231, "creation-d-une-chaine-de-caracteres-str"]], "Manipulation d\u2019une cha\u00eene de caract\u00e8res": [[231, "manipulation-d-une-chaine-de-caracteres"]], "Formatage d\u2019une cha\u00eene de caract\u00e8res": [[231, "formatage-d-une-chaine-de-caracteres"]], "Syntaxe %": [[231, "syntaxe"]], "M\u00e9thode format": [[231, "methode-format"]], "Notation f{}": [[231, "notation-f"]], "Un cas particuler %r ou {!r}": [[231, "un-cas-particuler-r-ou-r"]], "tuple": [[231, "tuple"]], "Nombres complexes": [[231, "nombres-complexes"]], "bytes": [[231, "bytes"]], "Types modifiables ou mutable": [[231, "types-modifiables-ou-mutable"]], "bytearray": [[231, "bytearray"]], "D\u00e9finition et m\u00e9thodes (list)": [[231, "definition-et-methodes-list"]], "Exemples (list)": [[231, "exemples-list"]], "Fonction range": [[231, "fonction-range"]], "Boucles et listes": [[231, "boucles-et-listes"]], "Collage de s\u00e9quences, fonction zip": [[231, "collage-de-sequences-fonction-zip"]], "Concat\u00e9nation de cha\u00eene de caract\u00e8res": [[231, "concatenation-de-chaine-de-caracteres"]], "Copie": [[231, "copie"]], "Dictionnaire": [[231, "dictionnaire"], [69, "dictionnaire"]], "D\u00e9finition et m\u00e9thodes (dict)": [[231, "definition-et-methodes-dict"]], "Exemples (dict)": [[231, "exemples-dict"]], "Copie (dict)": [[231, "copie-dict"]], "Cl\u00e9s de type modifiable": [[231, "cles-de-type-modifiable"]], "Ensemble ou set": [[231, "ensemble-ou-set"]], "Extensions": [[231, "extensions"]], "Fonction print, repr et conversion en cha\u00eene de caract\u00e8res": [[231, "fonction-print-repr-et-conversion-en-chaine-de-caracteres"]], "Fonction eval": [[231, "eval-fonction-chapitre-deux"]], "Informations fournies par python": [[231, "informations-fournies-par-python"]], "Affectations multiples": [[231, "affectations-multiples"]], "Hi\u00e9rarchie des objets": [[231, "hierarchie-des-objets"]], "Objets internes": [[231, "objets-internes"]], "Commentaires accentu\u00e9s": [[231, "commentaires-accentues"]], "Format texte": [[232, "format-texte"]], "Ecriture en mode \u00ab\u00a0ajout\u00a0\u00bb": [[232, "ecriture-en-mode-ajout"]], "Encoding et les accents": [[232, "encoding-et-les-accents"]], "Fichiers zip": [[232, "fichiers-zip"]], "Lecture (zip)": [[232, "lecture-zip"]], "Ecriture (zip)": [[232, "ecriture-zip"]], "Manipulation de fichiers": [[232, "manipulation-de-fichiers"]], "Gestion des noms de chemins": [[232, "gestion-des-noms-de-chemins"]], "Copie, suppression": [[232, "copie-suppression"]], "Liste de fichiers": [[232, "liste-de-fichiers"]], "Sans format ou format binaire": [[232, "sans-format-ou-format-binaire"]], "Ecriture dans un fichier binaire": [[232, "ecriture-dans-un-fichier-binaire"]], "Lecture d\u2019un fichier binaire": [[232, "lecture-d-un-fichier-binaire"]], "Exemple fichier binaire": [[232, "exemple-fichier-binaire"]], "Objets plus complexes": [[232, "objets-plus-complexes"]], "Entr\u00e9es, Sorties, Modules": [[233, "entrees-sorties-modules"]], "Module ou extension": [[234, "module-ou-extension"]], "Un module": [[234, "un-module"]], "Exemple": [[234, "exemple"]], "Importer un module": [[234, "importer-un-module"]], "Nom d\u2019un module": [[234, "nom-d-un-module"]], "Modules et fichiers": [[234, "modules-et-fichiers"]], "Emplacement d\u2019un module": [[234, "emplacement-d-un-module"]], "Attributs communs \u00e0 tout module": [[234, "attributs-communs-a-tout-module"]], "Cas pratiques": [[234, "cas-pratiques"]], "Ce qui ne marche pas : les import cycliques": [[234, "ce-qui-ne-marche-pas-les-import-cycliques"]], "Ajouter un module en cours d\u2019ex\u00e9cution": [[234, "ajouter-un-module-en-cours-d-execution"]], "Liste des modules import\u00e9s": [[234, "liste-des-modules-importes"]], "Plusieurs modules et fichiers": [[234, "plusieurs-modules-et-fichiers"]], "Arborescence de modules, paquetage": [[234, "arborescence-de-modules-paquetage"]], "Import relatif": [[234, "import-relatif"]], "Modules internes": [[234, "modules-internes"]], "Modules externes": [[234, "modules-externes"]], "Optimisation": [[235, "optimisation"]], "S\u00e9rialiser autre chose que des donn\u00e9es": [[235, "serialiser-autre-chose-que-des-donnees"]], "Parall\u00e9lisation": [[236, "parallelisation"]], "Threads": [[237, "threads"]], "Premier thread": [[237, "premier-thread"]], "Synchronisation": [[237, "synchronisation"]], "Attente": [[237, "attente"]], "Partage d\u2019informations": [[237, "partage-d-informations"]], "Interface graphique": [[237, "interface-graphique"]], "Files de messages": [[237, "files-de-messages"]], "Multithreading plus simple": [[237, "multithreading-plus-simple"]], "concurrent.futures": [[237, "concurrent-futures"]], "Notion de futures": [[237, "notion-de-futures"]], "Un probl\u00e8me de blocage": [[237, "un-probleme-de-blocage"]], "async - await - asyncio": [[237, "async-await-asyncio"]], "GIL - Global Interpreter Lock": [[237, "gil-global-interpreter-lock"]], "cython : un m\u00e9lange de python et C": [[237, "cython-un-melange-de-python-et-c"]], "C#, Java": [[237, "c-java"]], "Bibliographie": [[237, "bibliographie"], [62, "bibliographie"]], "Le langage Python": [[240, "le-langage-python"]], "Change Logs": [[0, "change-logs"]], "0.4.0": [[0, "id1"]], "0.3.1": [[0, "id2"]], "Assurance auto": [[14, "assurance-auto"]], "Assurance": [[14, "assurance"]], "Donn\u00e9es": [[14, "donnees"]], "Premier r\u00e9flexe : apprentissage et test": [[14, "premier-reflexe-apprentissage-et-test"]], "Ajout de variables agr\u00e9g\u00e9es": [[14, "ajout-de-variables-agregees"]], "Donn\u00e9es g\u00e9ographiques": [[14, "donnees-geographiques"]], "Grand nombre de variables": [[14, "grand-nombre-de-variables"]], "Mod\u00e9lisation un peu plus anonyme": [[14, "modelisation-un-peu-plus-anonyme"]], "2022-11-31 : rappel feuille de route 2022": [[15, "rappel-feuille-de-route-2022"]], "S\u00e9ance 1 - 7-9 - introduction, dictionnaire": [[15, "seance-1-7-9-introduction-dictionnaire"]], "S\u00e9ance 2 - 14-9 - programmation dynamique, voyageur de commerce": [[15, "seance-2-14-9-programmation-dynamique-voyageur-de-commerce"]], "S\u00e9ance 3 - 21-9 - numpy, pandas": [[15, "seance-3-21-9-numpy-pandas"]], "S\u00e9ance 4 - 28-9 - graphes": [[15, "seance-4-28-9-graphes"]], "S\u00e9ance 5 - 5-10 - s\u00e9rialisation, tests unitaires, profiling": [[15, "seance-5-5-10-serialisation-tests-unitaires-profiling"]], "S\u00e9ance 6 - 12-10 - expressions r\u00e9guli\u00e8res, webscrapping": [[15, "seance-6-12-10-expressions-regulieres-webscrapping"]], "S\u00e9ance 7 - 19-10 - top k, tri": [[15, "seance-7-19-10-top-k-tri"]], "S\u00e9ance 8 - 26-10 - graphes": [[15, "seance-8-26-10-graphes"]], "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)": [[16, "utilisation-de-cartopy-sous-windows-sous-wsl"]], "2023-08-03 : Code Jam": [[17, "code-jam"]], "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne": [[18, "l-enigme-d-hermionne"]], "2023-09-06 : ENSAE": [[19, "ensae"]], "2023-11-31 : rappel feuille de route 2023": [[20, "rappel-feuille-de-route-2023"]], "S\u00e9ance 1": [[20, "seance-1"]], "S\u00e9ance 2": [[20, "seance-2"]], "S\u00e9ance 3": [[20, "seance-3"]], "S\u00e9ance 4": [[20, "seance-4"]], "S\u00e9ance 5": [[20, "seance-5"]], "S\u00e9ance 6": [[20, "seance-6"]], "S\u00e9ance 7": [[20, "seance-7"]], "S\u00e9ance 8": [[20, "seance-8"]], "2024-01-18 : WSL - nettoyage": [[21, "wsl-nettoyage"]], "2024-03-01 : feuille de route 2024": [[22, "feuille-de-route-2024"]], "S\u00e9ance 1 (26/1)": [[22, "seance-1-26-1"]], "Collections d\u2019articles p\u00e9rissables": [[23, "collections-d-articles-perissables"]], "2024": [[23, null]], "2022": [[23, null]], "Machine Learning": [[60, "machine-learning"], [76, "machine-learning"], [126, "machine-learning"], [126, null]], "Quelques rappels": [[61, "quelques-rappels"]], "Rappels math\u00e9matiques": [[61, "rappels-mathematiques"]], "Fonction": [[61, "fonction"]], "Fonction continue": [[61, "fonction-continue"]], "Fonction d\u00e9rivable": [[61, "fonction-derivable"]], "Espace vectoriel": [[61, "espace-vectoriel"]], "Produit scalaire": [[61, "produit-scalaire"]], "Norme": [[61, "norme"]], "Matrice": [[61, "matrice"]], "Probl\u00e8me d\u2019optimisation": [[61, "probleme-d-optimisation"]], "Variable al\u00e9atoire": [[61, "variable-aleatoire"]], "Histogramme": [[61, "histogramme"]], "Corr\u00e9lation": [[61, "correlation"]], "Nuage de points": [[61, "nuage-de-points"]], "Rappels informatiques": [[61, "rappels-informatiques"]], "Le fichier csv": [[61, "le-fichier-csv"]], "Array": [[61, "array"]], "Fonction de hash": [[61, "fonction-de-hash"]], "Arbre": [[61, "arbre"]], "Rappels algorithmiques": [[61, "rappels-algorithmiques"]], "Le plus court chemin dans un graphe": [[61, "le-plus-court-chemin-dans-un-graphe"]], "La recherche dichotomique": [[61, "la-recherche-dichotomique"]], "Le voyageur du commerce": [[61, "le-voyageur-du-commerce"]], "Modules incourtournables en Python": [[61, "modules-incourtournables-en-python"]], "scikit-learn": [[61, "scikit-learn"]], "statsmodels": [[61, "statsmodels"]], "Dessiner des cartes": [[61, "dessiner-des-cartes"]], "Classification et r\u00e9gression": [[62, "classification-et-regression"]], "D\u00e9couverte du machine learning": [[62, "decouverte-du-machine-learning"]], "Finalit\u00e9": [[62, "finalite"]], "Les plus proches voisins": [[62, "les-plus-proches-voisins"]], "Trois \u00e9tapes r\u00e9currentes": [[62, "trois-etapes-recurrentes"]], "Train / test": [[62, "train-test"]], "Validation crois\u00e9e": [[62, "validation-croisee"]], "Hyper-param\u00e8tres": [[62, "hyper-parametres"]], "Deux probl\u00e8mes \u00e0 la base de beaucoup d\u2019autres": [[62, "deux-problemes-a-la-base-de-beaucoup-d-autres"]], "Classification multi-classe": [[62, "classification-multi-classe"], [136, "Classification-multi-classe"]], "Machine learning et programmation": [[62, "machine-learning-et-programmation"]], "Quelques conseils pour \u00e9crire un programme": [[64, "quelques-conseils-pour-ecrire-un-programme"]], "Des petites fonctions": [[64, "des-petites-fonctions"], [69, "des-petites-fonctions"]], "Pas de variables globales": [[64, "pas-de-variables-globales"]], "S\u00e9parer les calculs, le chargement des donn\u00e9es, l\u2019interface graphique": [[64, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"], [69, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"]], "Utiliser des fonctions de tests": [[64, "utiliser-des-fonctions-de-tests"]], "Trucs et astuces": [[64, "trucs-et-astuces"], [69, "trucs-et-astuces"]], "Cheat sheet: Python": [[69, "cheat-sheet-python"]], "Le langage": [[69, "le-langage"]], "Les variables": [[69, "les-variables"]], "Les types immuables": [[69, "les-types-immuables"]], "Les types modifiables": [[69, "les-types-modifiables"]], "Tableaux num\u00e9riques": [[69, "tableaux-numeriques"]], "Tests et boucles": [[69, "tests-et-boucles"]], "for ou while": [[69, "for-ou-while"]], "Fonction enumerate": [[69, "fonction-enumerate"]], "Fonction zip": [[69, "fonction-zip"]], "Fonction map": [[69, "fonction-map"]], "Autres mot-cl\u00e9s": [[69, "autres-mot-cles"]], "D\u00e9finition, param\u00e8tres": [[69, "definition-parametres"]], "mot-cl\u00e9 lambda": [[69, "mot-cle-lambda"]], "mot-cl\u00e9 yield": [[69, "mot-cle-yield"]], "D\u00e9claration d\u2019une classe": [[69, "declaration-d-une-classe"]], "Attributs et m\u00e9thodes": [[69, "attributs-et-methodes"]], "M\u00e9thodes statiques": [[69, "methodes-statiques"]], "D\u00e9corateur": [[69, "decorateur"]], "Ecriture dans un fichier texte": [[69, "ecriture-dans-un-fichier-texte"]], "Lecture dans un fichier texte": [[69, "lecture-dans-un-fichier-texte"]], "Erreurs, confusions fr\u00e9quentes": [[69, "erreurs-confusions-frequentes"]], "Cha\u00eene de caract\u00e8res = tableau de caract\u00e8res": [[69, "chaine-de-caracteres-tableau-de-caracteres"]], "Guillemets ou pas": [[69, "guillemets-ou-pas"]], "range ou pas range": [[69, "range-ou-pas-range"]], "Initialisation": [[69, "initialisation"]], "Diff\u00e9rence entre print et return": [[69, "difference-entre-print-et-return"]], "Trois conseils pour \u00e9crire un programme": [[69, "trois-conseils-pour-ecrire-un-programme"]], "Utiliser des tests unitaires": [[69, "utiliser-des-tests-unitaires"]], "Partager du code": [[69, "partager-du-code"]], "Moteurs de recherche": [[69, "moteurs-de-recherche"]], "License": [[75, "license"]], "Tous les notebooks": [[76, "tous-les-notebooks"]], "Enonc\u00e9 - Correction": [[76, "enonce-correction"]], "Data": [[76, "data"], [76, null]], "Correction d\u2019examens": [[76, "correction-d-examens"]], "Examens": [[76, null]], "machine learning": [[76, null]], "Simulation COVID": [[85, "Simulation-COVID"]], "Mod\u00e8le SIRD": [[85, "Mod\u00e8le-SIRD"]], "Q0 : une petite fonction pour dessiner": [[85, "Q0-:-une-petite-fonction-pour-dessiner"]], "Q1 : \u00e9crire une fonction qui calcule la propagation": [[85, "Q1-:-\u00e9crire-une-fonction-qui-calcule-la-propagation"]], "Q2 : on veut estimer les param\u00e8tres du mod\u00e8le, une fonction d\u2019erreur ?": [[85, "Q2-:-on-veut-estimer-les-param\u00e8tres-du-mod\u00e8le,-une-fonction-d'erreur-?"]], "Q3 : optimisation": [[85, "Q3-:-optimisation"]], "Q4 : dessiner les r\u00e9sultats": [[85, "Q4-:-dessiner-les-r\u00e9sultats"]], "Q5 : v\u00e9rifier que cela marche sur des donn\u00e9es synth\u00e9tiques": [[85, "Q5-:-v\u00e9rifier-que-cela-marche-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Q6 : sur des donn\u00e9es r\u00e9elles": [[85, "Q6-:-sur-des-donn\u00e9es-r\u00e9elles"], [85, "id1"]], "Q1 : propagation": [[85, "Q1-:-propagation"]], "Q2 : s\u00e9rie cumul\u00e9es et fonction erreur": [[85, "Q2-:-s\u00e9rie-cumul\u00e9es-et-fonction-erreur"]], "Q3, Q4, Q5 : optimisation sur des donn\u00e9es synth\u00e9tiques": [[85, "Q3,-Q4,-Q5-:-optimisation-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Produit matriciel avec une matrice creuse": [[91, "Produit-matriciel-avec-une-matrice-creuse"]], "Matrice creuse et dictionnaire": [[91, "Matrice-creuse-et-dictionnaire"]], "Calcul de la dimension": [[91, "Calcul-de-la-dimension"]], "Produit matriciel classique": [[91, "Produit-matriciel-classique"]], "Produit matriciel plus \u00e9l\u00e9gant": [[91, "Produit-matriciel-plus-\u00e9l\u00e9gant"]], "Dictionnaires de dictionnaires": [[91, "Dictionnaires-de-dictionnaires"]], "Casser le code de Vigen\u00e8re": [[96, "Casser-le-code-de-Vigen\u00e8re"]], "S\u00e9ries Temporelles": [[126, null]], "Classification multi-classe et jeu mal balanc\u00e9": [[128, "Classification-multi-classe-et-jeu-mal-balanc\u00e9"]], "d\u00e9couverte": [[128, "d\u00e9couverte"]], "\u00e9volution en fonction du nombre de classes": [[128, "\u00e9volution-en-fonction-du-nombre-de-classes"]], "\u00e9volution en fonction de la variance": [[128, "\u00e9volution-en-fonction-de-la-variance"]], "\u00e9volution en fonction de la dimension": [[128, "\u00e9volution-en-fonction-de-la-dimension"]], "retour sur le nombre de classes": [[128, "retour-sur-le-nombre-de-classes"]], "un dernier jeu s\u00fbr": [[128, "un-dernier-jeu-s\u00fbr"]], "Features ou mod\u00e8le": [[129, "Features-ou-mod\u00e8le"]], "Single Spectrum Analysis (SSA)": [[130, "Single-Spectrum-Analysis-(SSA)"]], "Une s\u00e9rie articielle": [[130, "Une-s\u00e9rie-articielle"]], "Autocorr\u00e9lations": [[130, "Autocorr\u00e9lations"]], "SSA": [[130, "SSA"]], "La pr\u00e9diction": [[130, "La-pr\u00e9diction"]], "Les points aberrants": [[130, "Les-points-aberrants"]], "ACP - projection": [[131, "ACP---projection"]], "R\u00e9gression logistique et courbe ROC": [[132, "R\u00e9gression-logistique-et-courbe-ROC"]], "R\u00e9gression logistique en 2D": [[133, "R\u00e9gression-logistique-en-2D"]], "Plusieurs mod\u00e8les, donn\u00e9es disjointes": [[134, "Plusieurs-mod\u00e8les,-donn\u00e9es-disjointes"]], "version manuelle": [[134, "version-manuelle"]], "Automatisation": [[134, "Automatisation"]], "Exemple sur un jeu articificiel": [[134, "Exemple-sur-un-jeu-articificiel"]], "Classifications et courbes ROC": [[135, "Classifications-et-courbes-ROC"]], "Classification multi-classe et stacking": [[137, "Classification-multi-classe-et-stacking"]], "Le probl\u00e8me": [[137, "Le-probl\u00e8me"]], "Automatisation avec une impl\u00e9mentation": [[137, "Automatisation-avec-une-impl\u00e9mentation"]], "Plus proches voisins": [[138, "Plus-proches-voisins"]], "Validation crois\u00e9e (cross-validation)": [[139, "Validation-crois\u00e9e-(cross-validation)"]], "Plus proches voisins - \u00e9valuation": [[140, "Plus-proches-voisins---\u00e9valuation"]], "S\u00e9lection des hyper-param\u00e8tres": [[141, "S\u00e9lection-des-hyper-param\u00e8tres"]], "Base d\u2019apprentissage et de test": [[142, "Base-d'apprentissage-et-de-test"]], "D\u00e9coupage stratifi\u00e9 apprentissage / test": [[143, "D\u00e9coupage-stratifi\u00e9-apprentissage-/-test"]], "R\u00e9gression polyn\u00f4miale et pipeline": [[145, "R\u00e9gression-polyn\u00f4miale-et-pipeline"]], "Plus proches voisins en grande dimension": [[180, "Plus-proches-voisins-en-grande-dimension"]], "Les ensembles de caract\u00e8res": [[239, "les-ensembles-de-caracteres"]], "Les multiplicateurs": [[239, "les-multiplicateurs"]], "Groupes": [[239, "groupes"]], "Assembler les caract\u00e8res": [[239, "assembler-les-caracteres"]], "Exemple plus complet": [[239, "exemple-plus-complet"]], "Groupes nomm\u00e9s": [[239, "groupes-nommes"]]}, "indexentries": {"algorithme": [[1, "index-0"], [59, "indexmathe-Algorithme0"], [59, "indexmathe-Algorithme1"], [59, "indexmathe-Algorithme2"], [59, "indexmathe-Algorithme3"]], "culture": [[1, "index-0"]], "culture algorithmique": [[1, "index-0"]], "commentaire_accentues() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.commentaire_accentues"]], "compte() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.compte"]], "construit_matrice_carree() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.construit_matrice_carree"]], "dictionnaire_modifie_dans_la_boucle() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dictionnaire_modifie_dans_la_boucle"]], "dix_entiers_carre() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dix_entiers_carre"]], "enumerate_permutations() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations"]], "enumerate_permutations_recursive() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations_recursive"]], "integrale() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.integrale"]], "mat2text() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2text"]], "mat2vect() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2vect"]], "minindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.minindex"]], "module": [[2, "module-teachpyx.examples.classiques"], [2, "module-teachpyx.examples.construction_classique"], [4, "module-teachpyx.faq.faq_exception"], [4, "module-teachpyx.faq.faq_geo"], [4, "module-teachpyx.faq.faq_numpy"], [4, "module-teachpyx.faq.faq_python"], [6, "module-teachpyx.examples.numpysex"], [7, "module-teachpyx.practice.rues_paris"], [8, "module-teachpyx.practice.tsp_bresenham"], [9, "module-teachpyx.practice.tsp_kohonen"], [10, "module-teachpyx.practice.tsp_kruskal"], [11, "module-teachpyx.tools.display.pygame_helper"], [11, "module-teachpyx.tools.display.video_helper"], [11, "module-teachpyx.tools.profiling"], [234, "index-0"]], "recherche() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche"]], "recherche_dichotomique() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche_dichotomique"]], "repetition_a_eviter() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.repetition_a_eviter"]], "somme() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.somme"]], "str2date() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.str2date"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "text2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.text2mat"]], "triindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.triindex"]], "vect2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.vect2mat"]], "get_data_folder() (dans le module teachpyx.datasets.data_helper)": [[3, "teachpyx.datasets.data_helper.get_data_folder"]], "load_enedis_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_enedis_dataset"]], "load_wine_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_wine_dataset"]], "load_wines_dataset() (dans le module teachpyx.datasets)": [[3, "teachpyx.datasets.load_wines_dataset"]], "distribution (classe dans teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.Distribution"]], "pqpiperror": [[4, "teachpyx.faq.faq_python.PQPipError"]], "call_stack() (dans le module teachpyx.faq.faq_exception)": [[4, "teachpyx.faq.faq_exception.call_stack"]], "class_getitem() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.class_getitem"]], "difference_div() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.difference_div"]], "entier_grande_taille() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.entier_grande_taille"]], "enumerate_regex_search() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.enumerate_regex_search"]], "get_day_name() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_day_name"]], "get_installed_distributions() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_installed_distributions"]], "get_month_name() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_month_name"]], "get_package_info() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_package_info"]], "get_packages_list() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.get_packages_list"]], "information_about_package() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.information_about_package"]], "lambert93_to_wgps() (dans le module teachpyx.faq.faq_geo)": [[4, "teachpyx.faq.faq_geo.lambert93_to_WGPS"]], "list_of_installed_packages() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.list_of_installed_packages"]], "property_example() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.property_example"]], "python_path() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.python_path"]], "same_variable() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.same_variable"]], "sortable_class() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.sortable_class"]], "stringio() (dans le module teachpyx.faq.faq_python)": [[4, "teachpyx.faq.faq_python.stringio"]], "teachpyx.faq.faq_exception": [[4, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_geo": [[4, "module-teachpyx.faq.faq_geo"]], "teachpyx.faq.faq_numpy": [[4, "module-teachpyx.faq.faq_numpy"]], "teachpyx.faq.faq_python": [[4, "module-teachpyx.faq.faq_python"]], "to_float32() (dans le module teachpyx.faq.faq_numpy)": [[4, "teachpyx.faq.faq_numpy.to_float32"]], "numpy_matrix2list() (dans le module teachpyx.examples.numpysex)": [[6, "teachpyx.examples.numpysex.numpy_matrix2list"]], "numpy_types() (dans le module teachpyx.examples.numpysex)": [[6, "teachpyx.examples.numpysex.numpy_types"]], "teachpyx.examples.numpysex": [[6, "module-teachpyx.examples.numpysex"]], "bellman() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.bellman"]], "connected_components() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.connected_components"]], "distance_haversine() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.distance_haversine"]], "distance_paris() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.distance_paris"]], "euler_path() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.euler_path"]], "eulerien_extension() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.eulerien_extension"]], "get_data() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.get_data"]], "graph_degree() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.graph_degree"]], "kruskal() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.kruskal"]], "possible_edges() (dans le module teachpyx.practice.rues_paris)": [[7, "teachpyx.practice.rues_paris.possible_edges"]], "teachpyx.practice.rues_paris": [[7, "module-teachpyx.practice.rues_paris"]], "draw_ellipse() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.draw_ellipse"]], "draw_line() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.draw_line"]], "teachpyx.practice.tsp_bresenham": [[8, "module-teachpyx.practice.tsp_bresenham"]], "trace_ligne_simple() (dans le module teachpyx.practice.tsp_bresenham)": [[8, "teachpyx.practice.tsp_bresenham.trace_ligne_simple"]], "ajoute_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.ajoute_vecteur"]], "construit_liste_neurones() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.construit_liste_neurones"]], "construit_ville() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.construit_ville"]], "deplace_neurone() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.deplace_neurone"]], "distance_chemin() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.distance_chemin"]], "distance_euclidienne_carree() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.distance_euclidienne_carree"]], "iteration() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.iteration"]], "modifie_structure() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.modifie_structure"]], "moyenne_proximite() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.moyenne_proximite"]], "multiplie_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.multiplie_vecteur"]], "poids_attirance() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.poids_attirance"]], "simulation() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.simulation"]], "soustrait_vecteur() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.soustrait_vecteur"]], "teachpyx.practice.tsp_kohonen": [[9, "module-teachpyx.practice.tsp_kohonen"]], "vecteur_norme() (dans le module teachpyx.practice.tsp_kohonen)": [[9, "teachpyx.practice.tsp_kohonen.vecteur_norme"]], "amelioration_chemin() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.amelioration_chemin"]], "arbre_poids_minimal() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.arbre_poids_minimal"]], "circuit_eulerien() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.circuit_eulerien"]], "circuit_hamiltonien() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.circuit_hamiltonien"]], "construit_ville() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.construit_ville"]], "dessin_arete_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.dessin_arete_zone"]], "distance_euclidian() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.distance_euclidian"]], "echange_position() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.echange_position"]], "echange_position_essai() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.echange_position_essai"]], "equation_droite() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.equation_droite"]], "evaluation_droite() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.evaluation_droite"]], "intersection_segment() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.intersection_segment"]], "longueur_chemin() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.longueur_chemin"]], "oppose_vecteur() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.oppose_vecteur"]], "repartition_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.repartition_zone"]], "retournement() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.retournement"]], "retournement_essai() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.retournement_essai"]], "simulation() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.simulation"]], "supprime_croisement() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.supprime_croisement"]], "teachpyx.practice.tsp_kruskal": [[10, "module-teachpyx.practice.tsp_kruskal"]], "tsp_kruskal_algorithm() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.tsp_kruskal_algorithm"]], "vecteur_cosinus() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_cosinus"]], "vecteur_norme() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_norme"]], "vecteur_points() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_points"]], "vecteur_sinus() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.vecteur_sinus"]], "voisinage_zone() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.voisinage_zone"]], "voisinage_zone_xy() (dans le module teachpyx.practice.tsp_kruskal)": [[10, "teachpyx.practice.tsp_kruskal.voisinage_zone_xy"]], "profilenode (classe dans teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.ProfileNode"]], "add_called_by() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.add_called_by"]], "add_calls_to() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.add_calls_to"]], "as_dict() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.as_dict"]], "build_diff_image() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.build_diff_image"]], "decompress_zip() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.decompress_zip"]], "display_line() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.display_line"]], "download_and_unzip() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.download_and_unzip"]], "draw_diagram() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.draw_diagram"]], "draw_graph_graphviz() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.draw_graph_graphviz"]], "empty_main_loop() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.empty_main_loop"]], "filter_node_() (m\u00e9thode statique teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.filter_node_"]], "get_local_folder() (dans le module teachpyx.tools.display.video_helper)": [[11, "teachpyx.tools.display.video_helper.get_local_folder"]], "get_pygame_screen_font() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.get_pygame_screen_font"]], "get_root() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.get_root"]], "key (propri\u00e9t\u00e9 teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.key"]], "make_video() (dans le module teachpyx.tools.display.video_helper)": [[11, "teachpyx.tools.display.video_helper.make_video"]], "profile() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile"]], "profile2df() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile2df"]], "profile2graph() (dans le module teachpyx.tools.profiling)": [[11, "teachpyx.tools.profiling.profile2graph"]], "run_graphviz() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.run_graphviz"]], "run_subprocess() (dans le module teachpyx.tools.graphviz_helper)": [[11, "teachpyx.tools.graphviz_helper.run_subprocess"]], "teachpyx.tools.display.pygame_helper": [[11, "module-teachpyx.tools.display.pygame_helper"]], "teachpyx.tools.display.video_helper": [[11, "module-teachpyx.tools.display.video_helper"]], "teachpyx.tools.profiling": [[11, "module-teachpyx.tools.profiling"]], "to_json() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.to_json"]], "to_text() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[11, "teachpyx.tools.profiling.ProfileNode.to_text"]], "total_size() (dans le module teachpyx.tools)": [[11, "teachpyx.tools.total_size"]], "wait_event() (dans le module teachpyx.tools.display.pygame_helper)": [[11, "teachpyx.tools.display.pygame_helper.wait_event"]], "pygame_simulation() (dans le module teachpyx.video.tsp_kohonen_pygame)": [[12, "teachpyx.video.tsp_kohonen_pygame.pygame_simulation"]], "pygame_simulation() (dans le module teachpyx.video.tsp_kruskal_pygame)": [[13, "teachpyx.video.tsp_kruskal_pygame.pygame_simulation"]], "ubuntu": [[16, "index-0"]], "wsl": [[16, "index-0"]], "cartopy": [[16, "index-0"]], "code jam": [[17, "index-0"]], "harry potter": [[18, "index-0"]], "hermionne": [[18, "index-0"]], "\u00e9nigme": [[18, "index-0"]], "dataframe": [[48, "index-0"], [61, "index-10"]], "matrice": [[48, "index-0"], [61, "index-6"]], "cr\u00e9dit agricole": [[56, "indexmathe-Table1"]], "danone": [[56, "indexmathe-Table1"]], "figure": [[56, "indexmathe-Figure0"], [56, "indexmathe-Figure1"], [56, "indexmathe-Figure10"], [56, "indexmathe-Figure11"], [56, "indexmathe-Figure12"], [56, "indexmathe-Figure13"], [56, "indexmathe-Figure2"], [56, "indexmathe-Figure3"], [56, "indexmathe-Figure4"], [56, "indexmathe-Figure5"], [56, "indexmathe-Figure6"], [56, "indexmathe-Figure7"], [56, "indexmathe-Figure8"], [56, "indexmathe-Figure9"]], "figure f1 : open-high-low-close-volume": [[56, "indexmathe-Figure0"]], "figure f10 : 4 actions fran\u00e7aises": [[56, "indexmathe-Figure9"]], "figure f11 : rendement pour 4 actions fran\u00e7aises": [[56, "indexmathe-Figure10"]], "figure f12 : deal": [[56, "indexmathe-Figure11"]], "figure f13 : deal en image": [[56, "indexmathe-Figure12"]], "figure f14 : deal positifs": [[56, "indexmathe-Figure13"]], "figure f2 : ohlc intraday": [[56, "indexmathe-Figure1"]], "figure f3 : exemple de carnet d'ordres": [[56, "indexmathe-Figure2"]], "figure f4 : action bnp et trend following": [[56, "indexmathe-Figure3"]], "figure f5 : action bnp et mean reversing": [[56, "indexmathe-Figure4"]], "figure f6 : action bnp et pair trading": [[56, "indexmathe-Figure5"]], "figure f7 : le cours de la bnp entre d\u00e9but 2003 et mi 2008": [[56, "indexmathe-Figure6"]], "figure f8 : nav": [[56, "indexmathe-Figure7"]], "figure f9 : nav d'une strat\u00e9gie": [[56, "indexmathe-Figure8"]], "probl\u00e8me": [[56, "indexmathe-Probl\u00e8me0"], [62, "indexmathe-Probl\u00e8me0"], [62, "indexmathe-Probl\u00e8me1"]], "probl\u00e8me p1 : optimisation d'un portefeuille": [[56, "indexmathe-Probl\u00e8me0"]], "soci\u00e9t\u00e9 g\u00e9n\u00e9rale": [[56, "indexmathe-Table1"]], "table": [[56, "indexmathe-Table0"], [56, "indexmathe-Table1"]], "table t1 : implantation des hedge funds en 2007": [[56, "indexmathe-Table0"]], "table t2 : indicateurs bnp": [[56, "indexmathe-Table1"]], "courts": [[56, "indexmathe-Figure13"]], "finance": [[56, "index-0"]], "logns": [[56, "indexmathe-Figure13"]], "n\u00e9gatifs": [[56, "indexmathe-Figure13"]], "strading": [[56, "index-0"]], "strat\u00e9gie": [[56, "index-0"]], "tous les ordres ne sont pas repr\u00e9sent\u00e9s.": [[56, "indexmathe-Figure2"]], "algorithme a1 : kruskal": [[59, "indexmathe-Algorithme0"]], "algorithme a2 : circuit eul\u00e9rien": [[59, "indexmathe-Algorithme1"]], "algorithme a3 : circuit hamiltonien": [[59, "indexmathe-Algorithme2"]], "algorithme a4 : tsp": [[59, "indexmathe-Algorithme3"]], "dijkstra": [[61, "index-14"]], "arbre": [[61, "index-13"]], "array": [[61, "index-11"]], "corr\u00e9lation": [[61, "index-9"]], "distance": [[61, "index-5"]], "espace vectoriel": [[61, "index-3"]], "fonction": [[61, "index-0"]], "fonction continue": [[61, "index-1"]], "fonction de hash": [[61, "index-12"]], "fonction d\u00e9rivable": [[61, "index-2"]], "graphe": [[61, "index-13"]], "hash": [[61, "index-12"]], "histogramme": [[61, "index-8"]], "k-d tree": [[61, "index-15"]], "matplotlib": [[61, "index-19"]], "norme": [[61, "index-5"]], "numpy": [[61, "index-17"]], "pandas": [[61, "index-18"]], "plot": [[61, "index-19"]], "plus court chemin dans un graphe": [[61, "index-14"]], "probl\u00e8me d'optimisation": [[61, "index-7"]], "produit scalaire": [[61, "index-4"]], "recherche dichotomique": [[61, "index-15"]], "scikit-learn": [[61, "index-20"]], "seaborn": [[61, "index-19"]], "statsmodels": [[61, "index-21"]], "travelling salesman problem (tsp)": [[61, "index-16"]], "voyageur du commerce": [[61, "index-16"]], "d\u00e9finition": [[62, "indexmathe-D\u00e9finition0"], [216, "indexmathe-D\u00e9finition0"], [216, "indexmathe-D\u00e9finition1"], [216, "indexmathe-D\u00e9finition2"], [216, "indexmathe-D\u00e9finition3"], [216, "indexmathe-D\u00e9finition4"], [216, "indexmathe-D\u00e9finition5"], [216, "indexmathe-D\u00e9finition6"], [216, "indexmathe-D\u00e9finition7"], [230, "indexmathe-D\u00e9finition0"], [230, "indexmathe-D\u00e9finition1"], [230, "indexmathe-D\u00e9finition2"], [230, "indexmathe-D\u00e9finition3"], [230, "indexmathe-D\u00e9finition4"], [230, "indexmathe-D\u00e9finition5"], [231, "indexmathe-D\u00e9finition0"], [231, "indexmathe-D\u00e9finition1"], [231, "indexmathe-D\u00e9finition2"], [231, "indexmathe-D\u00e9finition3"], [231, "indexmathe-D\u00e9finition4"], [231, "indexmathe-D\u00e9finition5"], [231, "indexmathe-D\u00e9finition6"], [231, "indexmathe-D\u00e9finition7"], [231, "indexmathe-D\u00e9finition8"], [231, "indexmathe-D\u00e9finition9"], [234, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d1 : bruit blanc": [[62, "indexmathe-D\u00e9finition0"]], "kullbak-leiber": [[62, "index-6"]], "probl\u00e8me p1 : r\u00e9gression": [[62, "indexmathe-Probl\u00e8me0"]], "probl\u00e8me p2 : classification binaire": [[62, "indexmathe-Probl\u00e8me1"]], "ball tree": [[62, "index-1"]], "bases d'apprentissage et de test": [[62, "index-2"]], "cross-validation": [[62, "index-3"]], "fonction de co\u00fbt": [[62, "index-6"]], "hyper-param\u00e8tre": [[62, "index-4"]], "imbalanced": [[62, "index-7"]], "log-loss": [[62, "index-6"]], "loi logistique": [[62, "index-5"]], "plus proches voisins": [[62, "index-0"]], "r\u00e9gression logistique": [[62, "index-5"]], "train_test_split": [[62, "index-2"]], "validation crois\u00e9e": [[62, "index-3"]], "cheat sheet": [[63, "index-0"], [69, "index-0"]], "conseil": [[64, "index-0"]], "boucle": [[74, "index-0"], [230, "indexmathe-Boucle0"], [230, "index-3"]], "s\u00e9quence": [[74, "index-0"]], "test": [[74, "index-0"], [230, "index-0"]], "d\u00e9finition d1 : classe": [[216, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : instantiaion": [[216, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : m\u00e9thode": [[216, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : attribut": [[216, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : m\u00e9thode statique": [[216, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : attribut statique": [[216, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : h\u00e9ritage": [[216, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : surcharge": [[216, "indexmathe-D\u00e9finition7"]], "syntaxe": [[216, "indexmathe-Syntaxe0"], [216, "indexmathe-Syntaxe1"], [216, "indexmathe-Syntaxe10"], [216, "indexmathe-Syntaxe11"], [216, "indexmathe-Syntaxe12"], [216, "indexmathe-Syntaxe13"], [216, "indexmathe-Syntaxe14"], [216, "indexmathe-Syntaxe15"], [216, "indexmathe-Syntaxe2"], [216, "indexmathe-Syntaxe3"], [216, "indexmathe-Syntaxe4"], [216, "indexmathe-Syntaxe5"], [216, "indexmathe-Syntaxe6"], [216, "indexmathe-Syntaxe7"], [216, "indexmathe-Syntaxe8"], [216, "indexmathe-Syntaxe9"], [219, "indexmathe-Syntaxe0"], [219, "indexmathe-Syntaxe1"], [230, "indexmathe-Syntaxe0"], [230, "indexmathe-Syntaxe1"], [230, "indexmathe-Syntaxe2"], [230, "indexmathe-Syntaxe3"], [230, "indexmathe-Syntaxe4"], [230, "indexmathe-Syntaxe5"], [230, "indexmathe-Syntaxe6"], [230, "indexmathe-Syntaxe7"], [230, "indexmathe-Syntaxe8"], [234, "indexmathe-Syntaxe0"], [234, "indexmathe-Syntaxe1"], [234, "indexmathe-Syntaxe2"]], "syntaxe s1 : d\u00e9claration d'une classe": [[216, "indexmathe-Syntaxe0"]], "syntaxe s10 : d\u00e9claration d'un attribut statique": [[216, "indexmathe-Syntaxe9"]], "syntaxe s11 : d\u00e9claration d'une propri\u00e9t\u00e9": [[216, "indexmathe-Syntaxe10"]], "syntaxe s12 : d\u00e9claration d'une propri\u00e9t\u00e9 (2)": [[216, "indexmathe-Syntaxe11"]], "syntaxe s13 : d\u00e9claration de l'op\u00e9rateur __copy__": [[216, "indexmathe-Syntaxe12"]], "syntaxe s14 : d\u00e9claration d'attributs fig\u00e9s": [[216, "indexmathe-Syntaxe13"]], "syntaxe s15 : h\u00e9ritage": [[216, "indexmathe-Syntaxe14"]], "syntaxe s16 : surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[216, "indexmathe-Syntaxe15"]], "syntaxe s2 : instanciation d'une classe": [[216, "indexmathe-Syntaxe1"]], "syntaxe s3 : d\u00e9claration d'une m\u00e9thode": [[216, "indexmathe-Syntaxe2"]], "syntaxe s4 : appel d'une m\u00e9thode": [[216, "indexmathe-Syntaxe3"]], "syntaxe s5 : d\u00e9claration d'un attribut": [[216, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'un constructeur": [[216, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'un constructeur": [[216, "indexmathe-Syntaxe6"]], "syntaxe s8 : d\u00e9claration de l'op\u00e9rateur __str__": [[216, "indexmathe-Syntaxe7"]], "syntaxe s9 : d\u00e9claration d'une m\u00e9thode statique": [[216, "indexmathe-Syntaxe8"]], "__copy__": [[216, "index-13"]], "__dict__": [[216, "index-6"]], "class": [[216, "index-0"]], "commentaire": [[216, "index-7"], [230, "index-10"], [231, "index-3"], [231, "index-54"]], "constructeur": [[216, "index-4"]], "copy": [[216, "index-13"], [216, "index-15"], [231, "index-41"], [231, "index-45"]], "deepcopy": [[216, "index-15"], [231, "index-41"]], "def": [[216, "index-3"]], "destructeur": [[216, "index-5"]], "dir": [[216, "index-8"]], "garbage collector": [[216, "index-14"], [219, "index-13"]], "help": [[216, "index-7"]], "h\u00e9ritage": [[216, "index-17"], [219, "index-9"]], "instance": [[216, "index-2"]], "issubclass": [[216, "index-18"]], "m\u00e9thode statique": [[216, "index-11"]], "op\u00e9rateur retourn\u00e9": [[216, "index-9"]], "pass": [[216, "index-1"], [230, "index-2"]], "propri\u00e9t\u00e9": [[216, "index-12"]], "self": [[216, "index-3"]], "s\u00e9rialisation": [[216, "index-16"], [232, "index-5"], [235, "index-0"]], "yield": [[216, "index-10"], [230, "index-14"]], "attribut": [[218, "index-0"]], "attributeerror": [[219, "index-5"]], "importerror": [[219, "index-5"]], "indentationerror": [[219, "index-4"]], "indexerror": [[219, "index-6"]], "keyerror": [[219, "index-6"]], "nameerror": [[219, "index-5"]], "oserror": [[219, "index-7"]], "syntaxerror": [[219, "index-4"]], "syntaxe s1 : attraper une exception": [[219, "indexmathe-Syntaxe0"]], "syntaxe s2 : lever une exception": [[219, "indexmathe-Syntaxe1"]], "typeerror": [[219, "index-6"]], "unicodeerror": [[219, "index-7"]], "valueerror": [[219, "index-6"]], "__str__": [[219, "index-10"]], "as": [[219, "index-3"]], "context manager": [[219, "index-14"]], "division par z\u00e9ro": [[219, "index-0"]], "except": [[219, "index-2"]], "exception": [[219, "index-0"]], "it\u00e9rateur": [[219, "index-11"], [230, "index-14"], [230, "index-6"]], "pile d'appels": [[219, "index-1"]], "pile d'ex\u00e9cution": [[219, "index-1"]], "raise": [[219, "index-8"]], "try": [[219, "index-2"]], "valeur aberrante": [[219, "index-12"]], "test unitaire": [[222, "index-1"]], "warning": [[222, "index-0"]], "checkbutton": [[224, "index-5"]], "entry": [[224, "index-1"], [224, "index-3"]], "intvar": [[224, "index-6"]], "listbox": [[224, "index-7"]], "radiobutton": [[224, "index-6"]], "text": [[224, "index-4"]], "bouton": [[224, "index-2"]], "bouton radio": [[224, "index-6"]], "case \u00e0 cocher": [[224, "index-5"]], "compte \u00e0 rebours": [[224, "index-8"]], "widget": [[224, "index-0"]], "zone de saisie": [[224, "index-3"]], "zone de saisie \u00e0 plusieurs lignes": [[224, "index-4"]], "zone de texte": [[224, "index-1"]], "jeux de caract\u00e8res": [[228, "index-0"]], ":": [[230, "index-0"], [230, "index-3"]], "boucle b1 : test": [[230, "indexmathe-Boucle0"]], "d\u00e9finition d1 : test": [[230, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : fonction": [[230, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : fonction r\u00e9cursive": [[230, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : port\u00e9e d'un variable": [[230, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : variable locale": [[230, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : variable globale": [[230, "indexmathe-D\u00e9finition5"]], "stopiteration": [[230, "index-6"]], "syntaxe s1 : tests": [[230, "indexmathe-Syntaxe0"]], "syntaxe s2 : instruction pass": [[230, "indexmathe-Syntaxe1"]], "syntaxe s3 : boucle while": [[230, "indexmathe-Syntaxe2"]], "syntaxe s4 : boucle for": [[230, "indexmathe-Syntaxe3"]], "syntaxe s5 : liste en extension": [[230, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'une fonction": [[230, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'une fonction": [[230, "indexmathe-Syntaxe6"]], "syntaxe s8 : valeurs par d\u00e9faut": [[230, "indexmathe-Syntaxe7"]], "syntaxe s9 : nombre ind\u00e9fini de param\u00e8tres": [[230, "indexmathe-Syntaxe8"]], "affectations multiples": [[230, "index-7"]], "boucle infinie": [[230, "index-4"]], "break": [[230, "index-9"]], "compile": [[230, "index-16"]], "continue": [[230, "index-8"]], "elif": [[230, "index-0"]], "else": [[230, "index-0"]], "enumerate": [[230, "index-21"]], "eval": [[230, "index-15"], [231, "index-49"]], "exec": [[230, "index-16"]], "fonction r\u00e9cursive": [[230, "index-12"]], "for": [[230, "index-3"], [230, "index-5"]], "g\u00e9n\u00e9rateur": [[230, "index-14"]], "if": [[230, "index-0"]], "in": [[230, "index-3"], [231, "index-15"], [231, "index-25"], [231, "index-35"], [231, "index-44"]], "indentation": [[230, "index-17"]], "lambda": [[230, "index-13"]], "map": [[230, "index-18"]], "passage par adresse": [[230, "index-11"]], "priorit\u00e9 des op\u00e9rateurs": [[230, "index-1"], [231, "index-10"]], "r\u00e9cursivit\u00e9": [[230, "index-12"]], "sorted": [[230, "index-20"]], "while": [[230, "index-3"]], "zip": [[230, "index-19"], [231, "index-39"]], "\"": [[231, "index-17"]], "\"\"\"": [[231, "index-17"]], "#": [[231, "index-54"]], "%": [[231, "index-22"], [231, "index-8"]], "%d": [[231, "index-22"]], "%f": [[231, "index-22"]], "%s": [[231, "index-22"]], "&": [[231, "index-47"], [231, "index-8"]], "'": [[231, "index-17"]], "'''": [[231, "index-17"]], "*": [[231, "index-20"], [231, "index-25"], [231, "index-35"], [231, "index-8"]], "**": [[231, "index-8"]], "*=": [[231, "index-20"], [231, "index-25"], [231, "index-35"], [231, "index-8"]], "+": [[231, "index-20"], [231, "index-25"], [231, "index-35"], [231, "index-8"]], "+=": [[231, "index-20"], [231, "index-25"], [231, "index-35"], [231, "index-8"]], "-": [[231, "index-8"]], "-=": [[231, "index-8"]], "/": [[231, "index-8"]], "//": [[231, "index-11"]], "/=": [[231, "index-8"]], "<": [[231, "index-14"]], "<<": [[231, "index-8"]], "<=": [[231, "index-14"]], "=": [[231, "index-14"], [231, "index-52"]], "==": [[231, "index-14"]], ">": [[231, "index-14"]], ">=": [[231, "index-14"]], ">>": [[231, "index-8"]], "d\u00e9finition d1 : variable": [[231, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d10 : frozenset": [[231, "indexmathe-D\u00e9finition9"]], "d\u00e9finition d2 : constante": [[231, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : type immuable (ou immutable)": [[231, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : cha\u00eene de caract\u00e8res": [[231, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : tuple": [[231, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : type modifiable (ou mutable)": [[231, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : liste": [[231, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : dictionnaire": [[231, "indexmathe-D\u00e9finition7"]], "d\u00e9finition d9 : set": [[231, "indexmathe-D\u00e9finition8"]], "false": [[231, "index-12"]], "none": [[231, "index-6"]], "true": [[231, "index-12"]], "[:]": [[231, "index-20"], [231, "index-25"], [231, "index-35"], [231, "index-44"]], "[]": [[231, "index-20"], [231, "index-25"], [231, "index-35"], [231, "index-44"]], "\\": [[231, "index-17"], [231, "index-4"]], "\\%": [[231, "index-18"]], "\\\\": [[231, "index-18"]], "\\n": [[231, "index-18"]], "\\r": [[231, "index-18"]], "\\t": [[231, "index-18"]], "__builtins__": [[231, "index-50"]], "__doc__": [[231, "index-50"]], "__file__": [[231, "index-50"]], "__name__": [[231, "index-50"]], "affectation multiple": [[231, "index-52"]], "and": [[231, "index-13"]], "append": [[231, "index-35"]], "arrondi": [[231, "index-9"]], "b\"\"": [[231, "index-29"]], "b''": [[231, "index-29"]], "backslash": [[231, "index-4"]], "bool": [[231, "index-12"]], "bytearray": [[231, "index-33"]], "bytes": [[231, "index-27"]], "cha\u00eene de caract\u00e8res": [[231, "index-16"]], "cl\u00e9": [[231, "index-43"]], "comparaison": [[231, "index-14"]], "complex": [[231, "index-26"]], "concat\u00e9nation": [[231, "index-40"]], "constante": [[231, "index-2"]], "conversion": [[231, "index-9"]], "copie": [[231, "index-41"], [231, "index-45"]], "count": [[231, "index-21"], [231, "index-28"]], "decode": [[231, "index-30"]], "del": [[231, "index-44"]], "dict": [[231, "index-42"]], "dictionnaire": [[231, "index-42"]], "division enti\u00e8re": [[231, "index-11"]], "divmod": [[231, "index-53"]], "encode": [[231, "index-30"]], "endswith": [[231, "index-21"], [231, "index-28"]], "entier": [[231, "index-7"]], "extend": [[231, "index-35"]], "extra caract\u00e8re": [[231, "index-18"]], "find": [[231, "index-21"], [231, "index-28"]], "float": [[231, "index-7"]], "format": [[231, "index-23"]], "formattage": [[231, "index-22"]], "formmattage": [[231, "index-23"]], "fromhex": [[231, "index-29"]], "frozen set": [[231, "index-47"]], "get": [[231, "index-44"]], "getsizeof": [[231, "index-32"]], "id": [[231, "index-46"]], "identificateur": [[231, "index-1"]], "immuable": [[231, "index-5"]], "immutable": [[231, "index-5"]], "index": [[231, "index-35"]], "insert": [[231, "index-35"]], "int": [[231, "index-7"]], "is": [[231, "index-15"]], "items": [[231, "index-44"]], "join": [[231, "index-21"], [231, "index-28"]], "keys": [[231, "index-44"]], "len": [[231, "index-35"], [231, "index-44"]], "list": [[231, "index-34"]], "liste": [[231, "index-34"]], "liste en extension": [[231, "index-38"]], "lower": [[231, "index-21"]], "max": [[231, "index-35"], [231, "index-44"]], "min": [[231, "index-35"], [231, "index-44"]], "modifiable": [[231, "index-31"]], "mutable": [[231, "index-31"]], "not": [[231, "index-13"], [231, "index-35"]], "op\u00e9rateur": [[231, "index-13"], [231, "index-14"], [231, "index-15"], [231, "index-20"], [231, "index-25"], [231, "index-35"], [231, "index-8"]], "or": [[231, "index-13"]], "pop": [[231, "index-35"], [231, "index-44"]], "print": [[231, "index-48"]], "r\"\"": [[231, "index-19"]], "r''": [[231, "index-19"]], "range": [[231, "index-37"]], "replace": [[231, "index-28"]], "repr": [[231, "index-48"]], "reverse": [[231, "index-35"]], "r\u00e9el": [[231, "index-7"]], "set": [[231, "index-47"]], "sort": [[231, "index-35"], [231, "index-36"]], "split": [[231, "index-21"], [231, "index-28"]], "startswith": [[231, "index-21"], [231, "index-28"]], "str": [[231, "index-16"]], "string": [[231, "index-16"]], "tuple": [[231, "index-24"]], "type": [[231, "index-1"], [231, "index-51"]], "type modifiable": [[231, "index-31"]], "type mutable": [[231, "index-31"]], "upper": [[231, "index-21"]], "valeur": [[231, "index-43"]], "values": [[231, "index-44"]], "variable": [[231, "index-0"]], "|": [[231, "index-8"]], "encoding": [[232, "index-3"]], "fichier": [[232, "index-0"]], "format binaire": [[232, "index-4"]], "format texte": [[232, "index-1"]], "ressource": [[232, "index-2"]], "d\u00e9finition d1 : point d'entr\u00e9e du programme": [[234, "indexmathe-D\u00e9finition0"]], "syntaxe s1 : importer un module (1)": [[234, "indexmathe-Syntaxe0"]], "syntaxe s2 : importer un module (2)": [[234, "indexmathe-Syntaxe1"]], "syntaxe s3 : importer un module (3)": [[234, "indexmathe-Syntaxe2"]], "import": [[234, "index-2"]], "point d'entr\u00e9e": [[234, "index-1"]], "py": [[234, "index-3"]], "pyc": [[234, "index-3"]], "protobuf": [[235, "index-1"]], "gil": [[236, "index-0"]], "global lock interpreter": [[236, "index-0"]], "asyncio": [[236, "index-1"]], "gevent": [[236, "index-1"]], "uvloop": [[236, "index-1"]], "event": [[237, "index-2"]], "lock": [[237, "index-3"]], "futures": [[237, "index-5"]], "parall\u00e9lisation": [[237, "index-0"]], "promesses": [[237, "index-5"]], "promises": [[237, "index-5"]], "queue": [[237, "index-4"]], "sleep": [[237, "index-1"]], "synchronisation": [[237, "index-0"]], "thread": [[237, "index-0"]], "t\u00e2ches": [[237, "index-5"]], "verrou": [[237, "index-3"]]}})