Search.setIndex({"docnames": ["CHANGELOGS", "algorithm_culture", "api/classique", "api/faqs", "api/index", "api/numpysex", "api/practice/rues_paris", "api/tools", "articles/2022-11-31-route2022", "articles/2022-12-07-cartopy", "articles/2023-08-03-code-jam", "articles/2023-08-09-hermionne", "articles/2023-09-06-ensae", "articles/2023-11-31-route2023", "articles/index", "auto_examples/index", "auto_examples/plot_einstein_riddle", "auto_examples/plot_float_and_double_rouding", "auto_examples/plot_gil_example", "auto_examples/plot_hypercube", "auto_examples/plot_lambda_function", "auto_examples/plot_matador", "auto_examples/plot_numpy_tricks", "auto_examples/plot_pandas_groupby", "auto_examples/plot_partie_dame", "auto_examples/plot_serialisation_examples", "auto_examples/plot_serialisation_protobuf", "auto_examples/plot_tarabiscote", "auto_examples/plot_tsp", "auto_examples/sg_execution_times", "c_data/dataframes", "c_data/index", "c_data/matrices", "c_data/nb_array", "c_data/nb_dataframe", "c_data/nb_numpy", "c_data/nb_pandas", "c_data/numpy_broadcast", "c_resume/cheat_sheet", "c_resume/conseil_programmes", "c_resume/git", "c_resume/index", "c_resume/jenkins", "c_resume/linux", "c_resume/python_sheet", "i_ex", "i_faq", "i_index", "index", "introduction", "license", "notebook_gallery", "practice/algo-base/BJKST", "practice/algo-base/exercice_compose_connexe", "practice/algo-base/exercice_echelle", "practice/algo-base/exercice_edit_distance", "practice/algo-base/exercice_editdist", "practice/algo-base/exercice_ordonnancement", "practice/algo-base/exercice_plus_grande_somme", "practice/algo-base/exercice_random_graph", "practice/algo-base/exercice_simulation_covid", "practice/algo-base/exercice_simulation_covid_simple", "practice/algo-base/exercice_suffix", "practice/algo-base/exercice_topk", "practice/algo-base/exercice_tsp", "practice/algo-base/exercice_xn", "practice/algo-base/matrix_dictionary", "practice/algo-base/tsp_aparte", "practice/algo-compose/exercice_morse", "practice/algo-compose/paris_parcours", "practice/algo-compose/vigenere", "practice/exams", "practice/exams/interro_rapide_20_minutes_2014_09", "practice/exams/interro_rapide_20_minutes_2014_10", "practice/exams/interro_rapide_20_minutes_2014_11", "practice/exams/interro_rapide_20_minutes_2014_12", "practice/exams/interro_rapide_20_minutes_2015_09", "practice/exams/interro_rapide_20_minutes_2015_11", "practice/exams/td_note_2013_bout_de_code_coloriage", "practice/exams/td_note_2013_coloriage_correction", "practice/exams/td_note_2015", "practice/exams/td_note_2015_rattrapage_enonce", "practice/exams/td_note_2016", "practice/exams/td_note_2017", "practice/exams/td_note_2017_2", "practice/exams/td_note_2018_1", "practice/exams/td_note_2018_2", "practice/exams/td_note_2019_1", "practice/exams/td_note_2019_2", "practice/exams/td_note_2020_1", "practice/exams/td_note_2020_2", "practice/exams/td_note_2021", "practice/exams/td_note_2022", "practice/exams/td_note_2022_rattrapage", "practice/exams/td_note_2022_rattrapage2", "practice/exams/td_note_2023", "practice/index_algo", "practice/index_exam", "practice/index_python", "practice/py-base/classe_de", "practice/py-base/classe_iterateur", "practice/py-base/classe_permutation", "practice/py-base/classe_tree", "practice/py-base/classes_2048", "practice/py-base/classes_metro", "practice/py-base/code_liste_tuple", "practice/py-base/code_multinomial", "practice/py-base/coloriage_carre", "practice/py-base/de_rotation", "practice/py-base/exercice_hash", "practice/py-base/exercice_json_xml", "practice/py-base/exercice_pi", "practice/py-base/exercice_regex", "practice/py-base/exercice_serialisation_json", "practice/py-base/histogramme_rapide", "practice/py-base/nbheap", "practice/py-base/pivot_gauss", "practice/py-base/profile_gini", "practice/py-base/profiling_conv", "practice/py-base/profiling_example", "practice/py-base/recherche_dichotomique", "practice/py-base/scrapping", "practice/py-base/structures_donnees_conversion", "practice/py-base/tableau_contingence", "practice/py-base/tests_unitaires", "practice/py-base/tri_nlnd", "practice/tds-algo/gentry_integer_encryption", "practice/tds-algo/gentry_integer_encryption_correction", "practice/tds-algo/knn_high_dimension", "practice/tds-algo/knn_high_dimension_correction", "practice/tds-algo/plus_court_chemin", "practice/tds-algo/plus_court_chemin_correction", "practice/tds-algo/puzzle_algo_1", "practice/tds-algo/puzzle_algo_1_correction", "practice/tds-algo/puzzle_algo_2", "practice/tds-algo/puzzle_algo_2_correction", "practice/tds-base/classes_carre_magique", "practice/tds-base/classes_carre_magique_correction", "practice/tds-base/classes_heritage", "practice/tds-base/classes_heritage_correction", "practice/tds-base/dictionnaire_vigenere", "practice/tds-base/dictionnaire_vigenere_correction", "practice/tds-base/integrale_rectangle", "practice/tds-base/integrale_rectangle_correction", "practice/tds-base/j2048", "practice/tds-base/j2048_correction", "practice/tds-base/module_file_regex", "practice/tds-base/module_file_regex_correction", "practice/tds-base/premiers_pas", "practice/tds-base/premiers_pas_correction", "practice/tds-base/pyramide_bigarree", "practice/tds-base/pyramide_bigarree_correction", "practice/tds-base/texte_langue", "practice/tds-base/texte_langue_correction", "practice/tds-base/variable_boucle_tests", "practice/tds-base/variable_boucle_tests_correction", "practice/years/2023/editdist", "practice/years/2023/index", "practice/years/2023/pivot_gauss", "practice/years/index", "py/c_classes/classes", "py/c_classes/index", "py/c_classes/questions", "py/c_exception/exception", "py/c_exception/exception_ext", "py/c_exception/index", "py/c_exception/warning", "py/c_gui/index", "py/c_gui/tkinter", "py/c_lang/collections", "py/c_lang/constructions", "py/c_lang/dates", "py/c_lang/encoding", "py/c_lang/index", "py/c_lang/syntaxe", "py/c_lang/types", "py/c_module/files", "py/c_module/index", "py/c_module/module", "py/c_module/serialization", "py/c_parallelisation/index", "py/c_parallelisation/thread", "py/c_regex/index", "py/c_regex/regex", "py/index"], "filenames": ["CHANGELOGS.rst", "algorithm_culture.rst", "api/classique.rst", "api/faqs.rst", "api/index.rst", "api/numpysex.rst", "api/practice/rues_paris.rst", "api/tools.rst", "articles/2022-11-31-route2022.rst", "articles/2022-12-07-cartopy.rst", "articles/2023-08-03-code-jam.rst", "articles/2023-08-09-hermionne.rst", "articles/2023-09-06-ensae.rst", "articles/2023-11-31-route2023.rst", "articles/index.rst", "auto_examples/index.rst", "auto_examples/plot_einstein_riddle.rst", "auto_examples/plot_float_and_double_rouding.rst", "auto_examples/plot_gil_example.rst", "auto_examples/plot_hypercube.rst", "auto_examples/plot_lambda_function.rst", "auto_examples/plot_matador.rst", "auto_examples/plot_numpy_tricks.rst", "auto_examples/plot_pandas_groupby.rst", "auto_examples/plot_partie_dame.rst", "auto_examples/plot_serialisation_examples.rst", "auto_examples/plot_serialisation_protobuf.rst", "auto_examples/plot_tarabiscote.rst", "auto_examples/plot_tsp.rst", "auto_examples/sg_execution_times.rst", "c_data/dataframes.rst", "c_data/index.rst", "c_data/matrices.rst", "c_data/nb_array.ipynb", "c_data/nb_dataframe.ipynb", "c_data/nb_numpy.ipynb", "c_data/nb_pandas.ipynb", "c_data/numpy_broadcast.ipynb", "c_resume/cheat_sheet.rst", "c_resume/conseil_programmes.rst", "c_resume/git.rst", "c_resume/index.rst", "c_resume/jenkins.rst", "c_resume/linux.rst", "c_resume/python_sheet.rst", "i_ex.rst", "i_faq.rst", "i_index.rst", "index.rst", "introduction.rst", "license.rst", "notebook_gallery.rst", "practice/algo-base/BJKST.ipynb", "practice/algo-base/exercice_compose_connexe.ipynb", "practice/algo-base/exercice_echelle.ipynb", "practice/algo-base/exercice_edit_distance.ipynb", "practice/algo-base/exercice_editdist.ipynb", "practice/algo-base/exercice_ordonnancement.ipynb", "practice/algo-base/exercice_plus_grande_somme.ipynb", "practice/algo-base/exercice_random_graph.ipynb", "practice/algo-base/exercice_simulation_covid.ipynb", "practice/algo-base/exercice_simulation_covid_simple.ipynb", "practice/algo-base/exercice_suffix.ipynb", "practice/algo-base/exercice_topk.ipynb", "practice/algo-base/exercice_tsp.ipynb", "practice/algo-base/exercice_xn.ipynb", "practice/algo-base/matrix_dictionary.ipynb", "practice/algo-base/tsp_aparte.ipynb", "practice/algo-compose/exercice_morse.ipynb", "practice/algo-compose/paris_parcours.ipynb", "practice/algo-compose/vigenere.ipynb", "practice/exams.rst", "practice/exams/interro_rapide_20_minutes_2014_09.ipynb", "practice/exams/interro_rapide_20_minutes_2014_10.ipynb", "practice/exams/interro_rapide_20_minutes_2014_11.ipynb", "practice/exams/interro_rapide_20_minutes_2014_12.ipynb", "practice/exams/interro_rapide_20_minutes_2015_09.ipynb", "practice/exams/interro_rapide_20_minutes_2015_11.ipynb", "practice/exams/td_note_2013_bout_de_code_coloriage.ipynb", "practice/exams/td_note_2013_coloriage_correction.ipynb", "practice/exams/td_note_2015.ipynb", "practice/exams/td_note_2015_rattrapage_enonce.ipynb", "practice/exams/td_note_2016.ipynb", "practice/exams/td_note_2017.ipynb", "practice/exams/td_note_2017_2.ipynb", "practice/exams/td_note_2018_1.ipynb", "practice/exams/td_note_2018_2.ipynb", "practice/exams/td_note_2019_1.ipynb", "practice/exams/td_note_2019_2.ipynb", "practice/exams/td_note_2020_1.ipynb", "practice/exams/td_note_2020_2.ipynb", "practice/exams/td_note_2021.ipynb", "practice/exams/td_note_2022.ipynb", "practice/exams/td_note_2022_rattrapage.ipynb", "practice/exams/td_note_2022_rattrapage2.ipynb", "practice/exams/td_note_2023.ipynb", "practice/index_algo.rst", "practice/index_exam.rst", "practice/index_python.rst", "practice/py-base/classe_de.ipynb", "practice/py-base/classe_iterateur.ipynb", "practice/py-base/classe_permutation.ipynb", "practice/py-base/classe_tree.ipynb", "practice/py-base/classes_2048.ipynb", "practice/py-base/classes_metro.ipynb", "practice/py-base/code_liste_tuple.ipynb", "practice/py-base/code_multinomial.ipynb", "practice/py-base/coloriage_carre.ipynb", "practice/py-base/de_rotation.ipynb", "practice/py-base/exercice_hash.ipynb", "practice/py-base/exercice_json_xml.ipynb", "practice/py-base/exercice_pi.ipynb", "practice/py-base/exercice_regex.ipynb", "practice/py-base/exercice_serialisation_json.ipynb", "practice/py-base/histogramme_rapide.ipynb", "practice/py-base/nbheap.ipynb", "practice/py-base/pivot_gauss.ipynb", "practice/py-base/profile_gini.ipynb", "practice/py-base/profiling_conv.ipynb", "practice/py-base/profiling_example.ipynb", "practice/py-base/recherche_dichotomique.ipynb", "practice/py-base/scrapping.ipynb", "practice/py-base/structures_donnees_conversion.ipynb", "practice/py-base/tableau_contingence.ipynb", "practice/py-base/tests_unitaires.ipynb", "practice/py-base/tri_nlnd.ipynb", "practice/tds-algo/gentry_integer_encryption.ipynb", "practice/tds-algo/gentry_integer_encryption_correction.ipynb", "practice/tds-algo/knn_high_dimension.ipynb", "practice/tds-algo/knn_high_dimension_correction.ipynb", "practice/tds-algo/plus_court_chemin.ipynb", "practice/tds-algo/plus_court_chemin_correction.ipynb", "practice/tds-algo/puzzle_algo_1.ipynb", "practice/tds-algo/puzzle_algo_1_correction.ipynb", "practice/tds-algo/puzzle_algo_2.ipynb", "practice/tds-algo/puzzle_algo_2_correction.ipynb", "practice/tds-base/classes_carre_magique.ipynb", "practice/tds-base/classes_carre_magique_correction.ipynb", "practice/tds-base/classes_heritage.ipynb", "practice/tds-base/classes_heritage_correction.ipynb", "practice/tds-base/dictionnaire_vigenere.ipynb", "practice/tds-base/dictionnaire_vigenere_correction.ipynb", "practice/tds-base/integrale_rectangle.ipynb", "practice/tds-base/integrale_rectangle_correction.ipynb", "practice/tds-base/j2048.ipynb", "practice/tds-base/j2048_correction.ipynb", "practice/tds-base/module_file_regex.ipynb", "practice/tds-base/module_file_regex_correction.ipynb", "practice/tds-base/premiers_pas.ipynb", "practice/tds-base/premiers_pas_correction.ipynb", "practice/tds-base/pyramide_bigarree.ipynb", "practice/tds-base/pyramide_bigarree_correction.ipynb", "practice/tds-base/texte_langue.ipynb", "practice/tds-base/texte_langue_correction.ipynb", "practice/tds-base/variable_boucle_tests.ipynb", "practice/tds-base/variable_boucle_tests_correction.ipynb", "practice/years/2023/editdist.ipynb", "practice/years/2023/index.rst", "practice/years/2023/pivot_gauss.ipynb", "practice/years/index.rst", "py/c_classes/classes.rst", "py/c_classes/index.rst", "py/c_classes/questions.rst", "py/c_exception/exception.rst", "py/c_exception/exception_ext.rst", "py/c_exception/index.rst", "py/c_exception/warning.rst", "py/c_gui/index.rst", "py/c_gui/tkinter.rst", "py/c_lang/collections.rst", "py/c_lang/constructions.rst", "py/c_lang/dates.rst", "py/c_lang/encoding.rst", "py/c_lang/index.rst", "py/c_lang/syntaxe.rst", "py/c_lang/types.rst", "py/c_module/files.rst", "py/c_module/index.rst", "py/c_module/module.rst", "py/c_module/serialization.rst", "py/c_parallelisation/index.rst", "py/c_parallelisation/thread.rst", "py/c_regex/index.rst", "py/c_regex/regex.rst", "py/index.rst"], "titles": ["Change Logs", "Survol algorithmique", "examples.construction_classique", "faq", "Code inclus dans cette librairie", "examples.numpysex", "teachpyx.practice.rues_paris", "tools", "2022-11-31 : rappel feuille de route 2022", "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)", "2023-08-03 : Code Jam", "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne", "2023-09-06 : ENSAE", "2023-11-31 : rappel feuille de route 2023", "Collections d\u2019articles p\u00e9rissables", "Gallerie d\u2019exemples", "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution", "Float Conversion", "Le GIL", "Hypercube et autres exercices", "Astuces avec les lambda functions", "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations", "Points d\u2019impl\u00e9mentation avec numpy", "Pandas et groupby", "Parties de dames", "S\u00e9rialisation", "S\u00e9rialisation avec protobuf", "Exercices expliqu\u00e9s de programmation", "R\u00e9flexions autour du voyage de commerce (TSP)", "Computation times", "Dataframes", "Matrices et DataFrames", "Calcul matriciel", "Calcul Matriciel, Optimisation", "DataFrame et Graphes", "Calcul matriciel avec numpy (version courte)", "Manipulation de donn\u00e9es avec pandas (version courte)", "Numpy et tableau de contingence", "Cheat Sheets", "Quelques conseils pour \u00e9crire un programme", "Cheat Sheet on Git", "Pr\u00e9cis", "Cheat Sheet on Jenkins", "Cheat Sheet on Linux", "Cheat sheet: Python", "Syntaxes et d\u00e9finitions", "FAQ", "En diagonal", "Apprendre la programmation avec Python", "Introduction", "License", "Tous les notebooks", "Algorithmes de streaming, BJKST", "Graphe et Composantes connexes", "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.", "Distance d\u2019\u00e9dition", "Distance entre deux mots de m\u00eame longueur et tests unitaires", "Probl\u00e8me d\u2019ordonnancement", "La sous-s\u00e9quence de plus grande somme", "Graphes al\u00e9atoires", "Simulation COVID", "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)", "Jeux de dictionnaires, plus grand suffixe commun", "Les k premiers \u00e9l\u00e9ments (top k)", "TSP - Traveling Salesman Problem", "Calculer x**n le plus rapidement possible", "Produit matriciel avec une matrice creuse", "Apart\u00e9 sur le voyageur de commerce", "D\u00e9coder du Morse sans espaces", "Parcourir les rues de Paris", "Casser le code de Vigen\u00e8re", "Exercices minut\u00e9s", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015", "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015", "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)", "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)", "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014", "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)", "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015", "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016", "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)", "1A.e - Enonc\u00e9 23 octobre 2018 (1)", "1A.e - Enonc\u00e9 23 octobre 2018 (2)", "1A.e - Enonc\u00e9 22 octobre 2019 (1)", "1A.e - Enonc\u00e9 22 octobre 2019 (2)", "1A - Enonc\u00e9 24 novembre 2020", "1A - Enonc\u00e9 3 novembre 2021", "1A - Enonc\u00e9 15 novembre 2021 - rattrapage", "1A - Enonc\u00e9 3 mars 2022- rattrapage", "1A - Enonc\u00e9 26 octobre 2022", "Algorithmes", "S\u00e9ances minut\u00e9es", "Exercices sur le langage python", "Jeu de d\u00e9, rotation sur un circuit (classes)", "It\u00e9rateur", "Classe Permutation et d\u00e9composition en transitions", "Une classe pour repr\u00e9senter un arbre", "2048 et les classes", "Un bref aper\u00e7u des classes", "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations", "Simuler une loi multinomiale", "Jeux de coloriage", "Jeu de d\u00e9, rotation sur un circuit", "R\u00e9partition, table de hashage", "JSON - XML", "Calculs de surface et autres calculs", "Expressions r\u00e9guli\u00e8res", "S\u00e9rialisation avec JSON, XML, pickle", "Histogramme et dictionnaire", "Heap", "Pivot de gauss avec numpy", "Profiling la fonction Gini", "Profiling, application \u00e0 la convolution", "Exemple de profiling", "Recherche dichotomique", "Web-Scraping - pokemon", "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre", "Calculer un chi 2 sur un tableau de contingence", "Tests unitaires", "Tri plus rapide que pr\u00e9vu", "Cryptage homomorphic de Craig Gentry", "Cryptage homomorphic de Craig Gentry - correction", "Plus proches voisins en grande dimension", "2A.algo - Plus proches voisins en grande dimension - correction", "Programmation dynamique et plus court chemin", "Programmation dynamique et plus court chemin (correction)", "Puzzles algorithmiques (1)", "Puzzles algorithmes (1) - correction", "Puzzles algorithmiques (2)", "Puzzles algorithmes (2) - correction", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)", "Classes, h\u00e9ritage", "Classes, h\u00e9ritage (correction)", "Dictionnaires, fonctions, code de Vigen\u00e8re", "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)", "Int\u00e9grale et la m\u00e9thode des rectangles", "Int\u00e9grale et la m\u00e9thode des rectangles - correction", "2048 - strat\u00e9gie gagnante", "2048 - strat\u00e9gie gagnante - correction", "Modules, fichiers, expressions r\u00e9guli\u00e8res", "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)", "Premiers pas en Python", "Premiers pas en Python (correction)", "Tracer une pyramide bigarr\u00e9e", "Tracer une pyramide bigarr\u00e9e - correction", "Deviner la langue d\u2019un texte", "Deviner la langue d\u2019un texte (correction)", "Variables, boucles, tests", "Variables, boucles, tests (correction)", "Distance d\u2019\u00e9dition (4 octobre)", "2023", "Pivot de Gauss", "Noteooks \u00e9crits durant les s\u00e9ances", "Classes", "Classes", "Questions", "Exceptions", "Usage", "Exceptions", "Warning et logging", "Interfaces graphiques", "tkinter", "Constructions classiques", "Constructions classiques", "Dates", "Encoding et jeux de caract\u00e8res", "Variables et fonctions", "Syntaxe du langage Python (boucles, tests, fonctions)", "Types et variables du langage python", "Fichiers", "Entr\u00e9es, Sorties, Modules", "Module ou extension", "S\u00e9rialisation", "Parall\u00e9lisation", "Threads", "Expressions r\u00e9guli\u00e8res", "Expressions r\u00e9guli\u00e8res", "Le langage Python"], "terms": {"24": [0, 16, 22, 33, 34, 35, 36, 37, 44, 52, 58, 59, 60, 63, 70, 71, 73, 74, 80, 82, 84, 85, 89, 90, 92, 110, 118, 122, 129, 136, 140, 143, 146, 147, 154, 171], "25": [0, 7, 16, 27, 33, 34, 35, 36, 52, 53, 59, 60, 63, 69, 70, 74, 80, 82, 83, 85, 89, 90, 92, 110, 111, 118, 119, 122, 123, 129, 136, 140, 143, 146, 147, 149, 154, 160, 164, 171], "26": [0, 33, 34, 35, 36, 37, 44, 52, 59, 60, 63, 64, 68, 69, 70, 71, 73, 74, 80, 82, 88, 89, 90, 92, 100, 109, 110, 118, 122, 125, 129, 136, 140, 141, 143, 146, 153, 160, 164, 171], "27": [0, 2, 33, 34, 35, 36, 37, 52, 59, 63, 69, 71, 74, 80, 84, 87, 89, 90, 91, 92, 100, 110, 118, 122, 136, 140, 143, 160, 170, 171], "28": [0, 21, 33, 34, 35, 36, 37, 44, 52, 59, 63, 69, 74, 80, 84, 87, 89, 90, 91, 92, 100, 110, 113, 118, 121, 129, 136, 140, 143, 146, 147, 149, 171], "29": [0, 33, 34, 35, 36, 37, 52, 59, 69, 74, 80, 82, 84, 89, 91, 92, 100, 110, 118, 128, 136, 140, 146, 147, 171, 174], "30": [0, 16, 22, 28, 33, 34, 35, 36, 52, 59, 60, 69, 70, 74, 80, 82, 83, 91, 92, 100, 107, 110, 116, 118, 140, 146, 147, 153, 154, 168, 171, 175, 183], "31": [0, 12, 14, 22, 33, 34, 35, 36, 52, 69, 74, 80, 88, 91, 92, 100, 110, 117, 118, 140, 143, 147, 154, 160, 171, 174], "32": [0, 2, 17, 22, 33, 34, 35, 36, 52, 58, 59, 65, 69, 74, 80, 100, 103, 109, 110, 118, 119, 122, 128, 147, 154, 170, 175, 176], "33": [0, 22, 33, 34, 35, 36, 58, 74, 80, 88, 94, 100, 109, 110, 118, 128, 140, 143, 154], "34": [0, 22, 33, 34, 35, 36, 54, 59, 62, 69, 74, 76, 80, 82, 84, 93, 110, 112, 113, 118, 140, 147, 153, 154, 160], "35": [0, 17, 33, 34, 35, 36, 46, 52, 69, 74, 80, 100, 103, 106, 118, 125, 140, 147, 153], "36": [0, 33, 36, 37, 69, 80, 88, 118, 140, 147, 149, 158, 171, 175], "ajout": [0, 2, 3, 6, 19, 27, 33, 34, 35, 44, 45, 46, 49, 56, 58, 60, 63, 69, 72, 73, 74, 75, 76, 79, 80, 82, 83, 85, 87, 88, 89, 90, 92, 94, 99, 105, 110, 113, 118, 120, 122, 125, 136, 137, 139, 141, 145, 146, 148, 149, 153, 154, 161, 162, 163, 164, 168, 171, 175, 179, 181, 183], "exercic": [0, 1, 10, 12, 15, 24, 29, 30, 32, 37, 65, 81, 96, 97, 113, 121, 150, 151, 160, 174], "exist": [0, 1, 2, 3, 16, 24, 25, 28, 33, 34, 35, 36, 39, 44, 46, 49, 53, 58, 59, 60, 64, 65, 67, 69, 77, 95, 99, 100, 101, 113, 118, 122, 123, 125, 130, 131, 133, 134, 135, 136, 140, 146, 147, 149, 154, 160, 163, 164, 168, 170, 172, 174, 175, 176, 178, 179, 180, 181], "22": [0, 9, 16, 22, 33, 34, 35, 36, 37, 52, 59, 60, 63, 69, 71, 74, 77, 80, 82, 83, 85, 88, 91, 92, 110, 118, 121, 122, 123, 128, 129, 136, 140, 143, 146, 154, 164, 171, 175, 183], "exempl": [0, 2, 3, 16, 19, 26, 27, 28, 34, 39, 44, 46, 47, 48, 49, 52, 56, 61, 68, 70, 73, 76, 77, 80, 82, 85, 86, 89, 90, 95, 98, 100, 105, 109, 117, 121, 122, 124, 125, 130, 132, 135, 136, 138, 140, 142, 146, 147, 150, 151, 154, 164, 165, 168, 169, 170, 171, 172, 179, 181], "mathador": [0, 15, 29], "21": [0, 1, 16, 22, 33, 35, 36, 52, 54, 59, 60, 63, 71, 74, 76, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 106, 107, 110, 116, 117, 118, 122, 129, 136, 140, 143, 146, 149, 154, 171, 174, 183], "refactoring": 0, "L": [1, 2, 3, 9, 11, 15, 19, 24, 26, 27, 29, 33, 34, 35, 36, 37, 39, 43, 44, 46, 48, 49, 52, 53, 54, 58, 59, 60, 61, 62, 63, 65, 68, 69, 74, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 106, 107, 109, 113, 118, 120, 124, 125, 129, 130, 131, 135, 137, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 160, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 183], "part": [1, 2, 5, 13, 15, 16, 19, 21, 27, 28, 29, 32, 34, 39, 44, 45, 49, 52, 58, 59, 60, 61, 62, 63, 64, 69, 74, 81, 82, 83, 85, 86, 88, 89, 90, 91, 95, 100, 103, 106, 113, 117, 118, 120, 122, 124, 125, 129, 130, 132, 133, 134, 135, 138, 139, 140, 143, 145, 146, 147, 152, 153, 160, 163, 164, 168, 170, 171, 174, 175, 176, 178, 179, 181, 183], "math\u00e9mat": [1, 2, 12, 34, 44, 49, 60, 74, 102, 113, 160, 170, 174, 175, 178], "On": [1, 2, 3, 6, 16, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 39, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 162, 163, 164, 166, 168, 169, 170, 171, 174, 175, 176, 178, 179, 181, 183], "toujour": [1, 2, 3, 5, 19, 25, 28, 33, 34, 35, 39, 44, 45, 46, 49, 52, 54, 56, 59, 60, 62, 63, 69, 72, 75, 82, 92, 93, 100, 102, 104, 107, 113, 117, 120, 122, 129, 136, 138, 140, 141, 146, 147, 152, 153, 160, 162, 163, 164, 168, 170, 174, 175, 176, 178, 181, 183], "\u00e9tat": [1, 3, 34, 46, 66, 75, 81, 82, 107, 148, 168, 174, 181], "initial": [1, 6, 28, 33, 34, 52, 63, 69, 82, 108, 113, 118, 122, 125, 132, 141, 146, 164, 176, 178], "arriv": [1, 2, 16, 20, 34, 54, 58, 60, 69, 74, 100, 147, 148, 160, 163, 164, 168, 170, 174, 175, 176, 181], "apres": [1, 2, 6, 16, 18, 24, 27, 28, 34, 39, 44, 46, 59, 63, 66, 68, 74, 75, 80, 81, 82, 87, 88, 89, 90, 92, 109, 111, 113, 130, 138, 140, 146, 147, 160, 164, 168, 174, 175, 176, 178, 181, 183], "ser": [1, 2, 3, 19, 24, 25, 32, 44, 46, 52, 56, 58, 63, 68, 69, 74, 80, 82, 83, 91, 95, 101, 109, 120, 131, 136, 141, 143, 147, 148, 152, 154, 160, 163, 164, 166, 168, 170, 174, 175, 176, 178, 181], "oper": [1, 2, 3, 12, 15, 17, 27, 29, 36, 46, 73, 76, 80, 95, 98, 118, 122, 125, 126, 127, 147, 148, 149, 154, 161, 163, 168, 170, 171, 175, 176, 179], "connu": [1, 33, 49, 52, 58, 59, 60, 69, 124, 141, 154, 160, 168, 174, 176], "final": [1, 34, 36, 44, 52, 66, 80, 83, 84, 103, 118, 121, 122, 160, 166, 174, 175, 178, 181, 183], "Cette": [1, 2, 3, 27, 34, 44, 45, 46, 49, 52, 55, 60, 66, 68, 69, 70, 73, 74, 75, 82, 99, 101, 106, 109, 111, 115, 118, 122, 138, 147, 152, 160, 163, 164, 168, 169, 170, 172, 174, 175, 176, 178, 179, 180, 181], "d\u00e9pend": [1, 19, 27, 34, 44, 49, 57, 60, 62, 66, 75, 82, 106, 107, 109, 111, 113, 122, 129, 136, 140, 141, 154, 160, 166, 171, 174, 175, 178, 181], "Elle": [1, 2, 3, 26, 35, 36, 39, 44, 45, 46, 49, 54, 58, 69, 72, 84, 100, 106, 113, 115, 118, 119, 122, 130, 133, 138, 140, 143, 160, 168, 174, 176, 178, 179, 181, 183], "peut": [1, 2, 3, 5, 6, 11, 16, 19, 24, 25, 26, 27, 28, 33, 34, 35, 36, 39, 44, 45, 46, 49, 52, 53, 54, 58, 59, 60, 61, 62, 63, 66, 68, 69, 73, 74, 76, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 117, 120, 122, 123, 124, 125, 130, 131, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 154, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 183], "inclur": [1, 25, 44, 58, 118, 160, 162, 168, 174, 175, 178, 183], "al\u00e9atoir": [1, 19, 32, 34, 35, 52, 58, 60, 63, 66, 81, 84, 89, 90, 96, 106, 123, 126, 127, 129, 130, 143, 145, 146, 160, 178, 181], "parl": [1, 28, 33, 68, 100, 147, 179], "lorsqu": [1, 2, 3, 19, 24, 25, 27, 28, 33, 34, 36, 39, 44, 45, 46, 49, 52, 55, 56, 57, 63, 64, 65, 68, 72, 74, 80, 82, 84, 85, 100, 101, 104, 106, 113, 118, 119, 120, 122, 131, 136, 137, 138, 140, 146, 148, 152, 154, 155, 160, 163, 164, 166, 170, 172, 174, 175, 176, 178, 179, 181, 183], "d\u00e9montr": [1, 27, 130], "s\u00e9quenc": [1, 19, 52, 53, 55, 59, 68, 96, 113, 125, 126, 127, 130, 135, 146, 153, 154, 172, 174, 179, 181, 183], "produit": [1, 2, 3, 5, 25, 28, 32, 33, 44, 46, 53, 74, 75, 77, 85, 86, 87, 88, 96, 99, 101, 118, 138, 139, 149, 154, 160, 162, 163, 164, 166, 168, 170, 174, 176, 179, 181], "men": [1, 27, 82, 85, 86, 109, 147, 160, 168, 181], "souhait": [1, 2, 3, 19, 20, 24, 33, 34, 44, 46, 54, 56, 58, 59, 63, 69, 77, 80, 82, 84, 85, 86, 93, 95, 101, 103, 107, 109, 117, 124, 130, 132, 133, 136, 138, 140, 143, 144, 146, 147, 154, 160, 164, 166, 168, 170, 174, 175, 176, 178], "Il": [1, 2, 3, 9, 10, 11, 16, 19, 21, 23, 24, 25, 26, 27, 33, 34, 35, 36, 39, 44, 45, 46, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 162, 163, 164, 166, 168, 169, 170, 172, 174, 175, 176, 178, 179, 180, 181, 183], "grand": [1, 6, 8, 10, 11, 19, 27, 28, 33, 34, 35, 36, 39, 44, 49, 53, 54, 60, 63, 64, 66, 69, 70, 74, 75, 80, 81, 82, 83, 85, 86, 90, 93, 95, 96, 101, 105, 106, 112, 115, 117, 118, 122, 141, 143, 146, 147, 154, 160, 162, 163, 168, 172, 174, 175, 176, 178, 181, 183], "variet": [1, 36, 146], "d\u00e9j\u00e0": [1, 28, 33, 34, 44, 45, 49, 59, 63, 68, 69, 87, 88, 92, 125, 140, 146, 147, 154, 160, 163, 174, 175, 176, 178, 179, 181, 183], "r\u00e9solus": [1, 168], "util": [1, 19, 27, 33, 34, 38, 39, 44, 56, 60, 63, 67, 84, 95, 96, 99, 102, 112, 128, 138, 140, 146, 160, 163, 166, 168, 174, 175, 176, 181], "conna\u00eetr": [1, 2, 3, 44, 46, 54, 66, 69, 93, 160, 168, 169, 170, 175, 176, 183], "C": [1, 2, 3, 5, 7, 11, 18, 21, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 49, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 74, 77, 80, 82, 83, 85, 88, 89, 90, 93, 95, 99, 100, 101, 102, 106, 107, 109, 110, 111, 113, 117, 118, 119, 120, 122, 125, 126, 127, 128, 130, 131, 132, 133, 136, 140, 141, 143, 145, 146, 147, 152, 154, 160, 161, 163, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 183], "aut": [1, 44, 56, 59, 73, 80, 84, 85, 93, 131, 136, 138, 140, 141, 160, 168, 174, 175, 176, 181], "outil": [1, 44, 49, 53, 99, 110, 118, 128, 146, 147, 160, 163], "disponibl": [1, 9, 25, 34, 35, 36, 44, 48, 49, 69, 83, 91, 105, 147, 160, 168, 175, 178], "cr\u00e9": [1, 3, 5, 18, 22, 25, 27, 32, 33, 36, 44, 45, 46, 49, 53, 57, 59, 60, 66, 69, 72, 74, 80, 89, 90, 100, 101, 103, 122, 124, 125, 128, 129, 130, 136, 138, 140, 141, 145, 147, 153, 154, 160, 163, 166, 174, 175, 176, 181], "propr": [1, 3, 25, 27, 33, 35, 36, 44, 46, 59, 68, 160, 165, 166, 168, 174, 175, 179, 181], "Qu": [1, 28, 69, 106, 124, 128, 143, 154], "raison": [1, 5, 19, 28, 36, 39, 44, 46, 72, 74, 77, 80, 82, 95, 129, 131, 136, 147, 152, 154, 160, 168, 174], "fair": [1, 2, 3, 25, 26, 27, 31, 33, 34, 35, 39, 44, 45, 46, 49, 52, 53, 54, 56, 57, 60, 61, 63, 64, 66, 68, 69, 71, 77, 82, 83, 85, 86, 87, 88, 92, 99, 101, 104, 106, 107, 112, 113, 117, 118, 122, 123, 125, 129, 130, 133, 138, 143, 145, 146, 147, 148, 149, 153, 154, 156, 160, 163, 164, 168, 170, 171, 172, 174, 175, 176, 178, 180, 181, 183], "suppos": [1, 2, 6, 24, 36, 44, 49, 54, 57, 58, 60, 63, 64, 68, 69, 70, 73, 80, 82, 83, 84, 85, 86, 91, 92, 93, 95, 107, 111, 120, 122, 124, 125, 130, 131, 132, 138, 141, 143, 160, 168, 170, 174, 175, 176, 181], "dispos": [1, 44, 69, 80, 82, 83, 84, 89, 90, 95, 117, 130, 132, 136, 160, 164, 168, 175, 176, 178], "seul": [1, 2, 9, 11, 16, 19, 24, 33, 34, 35, 36, 44, 49, 52, 53, 59, 60, 62, 63, 67, 68, 69, 74, 77, 84, 87, 88, 91, 95, 100, 102, 106, 110, 111, 113, 122, 129, 132, 136, 137, 138, 140, 141, 146, 147, 148, 154, 160, 163, 168, 170, 172, 174, 175, 176, 178, 179, 181, 183], "machin": [1, 5, 12, 35, 46, 48, 49, 63, 67, 107, 110, 118, 181], "La": [1, 2, 3, 9, 19, 20, 24, 25, 27, 28, 31, 33, 34, 39, 44, 45, 46, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 99, 100, 101, 103, 104, 106, 108, 110, 111, 112, 113, 115, 117, 118, 120, 122, 123, 124, 126, 127, 128, 129, 131, 136, 137, 138, 140, 142, 145, 146, 147, 148, 149, 152, 154, 155, 156, 158, 160, 163, 164, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183], "m\u00e9moir": [1, 3, 5, 25, 33, 35, 36, 46, 52, 54, 110, 113, 146, 160, 168, 169, 172, 174, 175, 176, 179], "plus": [1, 2, 5, 8, 9, 10, 11, 12, 16, 18, 19, 20, 21, 23, 24, 25, 27, 33, 34, 35, 36, 37, 38, 39, 44, 48, 49, 53, 54, 55, 59, 60, 61, 64, 68, 69, 70, 72, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 89, 90, 91, 96, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 118, 119, 122, 126, 127, 132, 138, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 162, 163, 165, 166, 168, 169, 170, 172, 174, 175, 178, 179, 180], "Le": [1, 2, 3, 5, 12, 15, 16, 19, 20, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 39, 41, 45, 46, 48, 49, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 160, 162, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183], "temp": [1, 2, 3, 10, 18, 25, 27, 28, 33, 34, 35, 36, 46, 49, 57, 59, 60, 67, 69, 73, 74, 77, 79, 82, 84, 85, 86, 92, 105, 107, 110, 114, 117, 119, 122, 125, 128, 129, 135, 136, 137, 144, 145, 146, 147, 148, 151, 154, 160, 163, 168, 170, 174, 175, 176, 178, 179, 181, 183], "calcul": [1, 3, 5, 6, 8, 12, 18, 20, 28, 31, 34, 36, 37, 41, 46, 49, 55, 56, 57, 59, 61, 62, 63, 69, 70, 72, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 100, 102, 106, 107, 109, 113, 117, 118, 119, 122, 125, 126, 127, 129, 130, 131, 132, 133, 140, 146, 148, 149, 160, 162, 163, 168, 171, 174, 175, 176, 178, 180, 181], "leqsl": [1, 17, 54, 58, 73, 84, 111, 130, 131, 132, 133, 134, 135, 143], "10": [1, 2, 3, 5, 6, 7, 9, 16, 17, 19, 22, 23, 24, 27, 28, 32, 33, 34, 35, 36, 37, 39, 43, 44, 45, 46, 49, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 106, 107, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 160, 163, 164, 168, 169, 170, 171, 174, 175, 176, 178, 181, 183], "o": [1, 2, 5, 7, 21, 25, 27, 28, 32, 34, 35, 42, 56, 58, 62, 63, 64, 67, 68, 72, 73, 74, 80, 83, 85, 86, 89, 90, 92, 95, 106, 112, 115, 120, 125, 126, 127, 129, 130, 141, 143, 147, 153, 155, 156, 160, 168, 174, 175, 179], "2": [1, 2, 3, 5, 6, 7, 11, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 39, 44, 46, 52, 53, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 69, 70, 71, 75, 78, 79, 84, 85, 87, 89, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 118, 119, 121, 124, 125, 128, 129, 132, 133, 142, 143, 150, 151, 152, 153, 155, 156, 158, 162, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 181, 183], "15": [1, 7, 19, 27, 28, 33, 34, 35, 36, 52, 56, 58, 59, 60, 62, 63, 66, 68, 69, 71, 73, 74, 75, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 103, 106, 107, 110, 114, 116, 117, 118, 121, 122, 125, 129, 130, 131, 136, 140, 143, 147, 149, 151, 153, 154, 155, 160, 168, 171, 175, 181, 183], "3": [1, 2, 3, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 44, 46, 48, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 133, 142, 143, 145, 150, 151, 152, 153, 156, 158, 160, 162, 163, 166, 168, 169, 170, 171, 172, 174, 175, 176, 180, 181, 183], "7": [1, 2, 3, 7, 11, 17, 20, 23, 27, 28, 33, 34, 35, 37, 39, 43, 44, 46, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 136, 137, 138, 141, 143, 145, 149, 152, 153, 156, 160, 164, 169, 170, 171, 174, 175, 176, 181, 183], "ln": [1, 27, 33, 34, 58, 60, 62, 63, 72, 80, 85, 86, 106, 115, 125, 160], "8": [1, 2, 17, 19, 26, 27, 28, 33, 34, 35, 36, 37, 44, 46, 49, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 136, 137, 143, 145, 146, 149, 153, 154, 155, 156, 160, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 181, 183], "nombreux": [1, 16, 33, 34, 44, 49, 52, 53, 60, 101, 118, 136, 146, 160, 168, 174, 176, 178], "non": [1, 2, 3, 6, 7, 12, 16, 17, 18, 19, 21, 22, 24, 25, 33, 34, 35, 44, 46, 49, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 74, 75, 80, 85, 86, 87, 88, 89, 90, 92, 93, 99, 100, 101, 102, 103, 105, 106, 107, 109, 113, 119, 122, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 143, 146, 147, 156, 160, 162, 163, 164, 166, 168, 169, 170, 176, 178, 179, 181, 183], "d\u00e9compos": [1, 2, 27, 65, 82, 101, 136, 141, 170], "comm": [1, 3, 9, 10, 16, 19, 24, 25, 27, 33, 34, 35, 36, 39, 40, 44, 45, 46, 48, 49, 55, 56, 57, 58, 59, 60, 61, 65, 66, 68, 69, 72, 73, 74, 75, 76, 80, 82, 83, 84, 87, 88, 89, 90, 92, 95, 99, 100, 101, 102, 104, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 122, 123, 129, 130, 136, 138, 140, 141, 142, 143, 144, 146, 147, 148, 151, 152, 153, 154, 155, 160, 162, 163, 164, 166, 168, 169, 171, 172, 174, 175, 176, 178, 179, 181, 183], "suit": [1, 2, 13, 19, 20, 27, 33, 34, 36, 44, 45, 49, 52, 54, 56, 57, 59, 61, 64, 68, 69, 74, 75, 76, 82, 84, 85, 86, 87, 88, 92, 104, 106, 109, 111, 118, 119, 120, 123, 130, 140, 143, 146, 155, 160, 163, 164, 166, 168, 170, 172, 174, 175, 176, 178, 179, 181, 183], "alpha": [1, 6, 33, 36, 53, 68, 83, 87, 88, 89, 90, 131, 150, 151], "bet": [1, 33, 36, 60, 61, 84, 178], "1": [1, 2, 3, 5, 6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 39, 40, 43, 44, 46, 48, 49, 52, 53, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 70, 71, 78, 86, 88, 90, 94, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 128, 129, 142, 143, 149, 150, 151, 152, 153, 155, 156, 158, 162, 163, 164, 166, 168, 169, 170, 171, 172, 175, 176, 179, 181, 183], "chaqu": [1, 2, 3, 6, 16, 18, 19, 20, 24, 27, 33, 34, 35, 36, 39, 44, 45, 46, 49, 52, 53, 56, 57, 58, 59, 60, 61, 64, 68, 69, 70, 73, 74, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 100, 101, 106, 109, 110, 112, 113, 117, 118, 119, 120, 126, 127, 130, 131, 132, 136, 140, 141, 143, 145, 146, 147, 148, 149, 151, 152, 154, 155, 160, 162, 163, 164, 166, 168, 169, 170, 172, 174, 175, 176, 178, 181, 183], "term": [1, 19, 44, 45, 58, 87, 88, 103, 125, 129, 160, 174, 175, 176, 179, 181, 183], "correspond": [1, 3, 33, 34, 44, 46, 52, 53, 58, 60, 74, 75, 80, 82, 83, 85, 86, 120, 130, 131, 146, 154, 160, 163, 164, 168, 171, 172, 174, 175, 176, 178, 183], "in": [1, 2, 3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 163, 164, 166, 168, 169, 170, 171, 174, 175, 176, 178, 180, 181, 183], "mathbb": [1, 17, 33, 52, 83, 84, 85, 86, 87, 88, 111, 126, 127, 132, 143], "N": [1, 27, 28, 33, 34, 35, 52, 53, 56, 59, 60, 61, 62, 68, 73, 74, 80, 87, 88, 89, 90, 91, 95, 105, 106, 107, 111, 123, 130, 131, 132, 134, 135, 141, 143, 147, 148, 168, 174], "probem": 1, "combinatoir": [1, 130], "r\u00e9sum": [1, 2, 34, 44, 45, 82, 160, 163, 170, 174, 175, 181, 183], "quadrat": [1, 84, 131], "cel": [1, 2, 3, 5, 9, 16, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 36, 39, 44, 45, 46, 49, 56, 57, 58, 59, 61, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 79, 80, 82, 83, 85, 86, 87, 88, 92, 93, 95, 101, 102, 103, 104, 106, 107, 108, 110, 113, 114, 117, 118, 121, 122, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 145, 146, 147, 148, 151, 152, 154, 155, 160, 162, 163, 164, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 183], "d\u00fb": [1, 72], "programm": [1, 2, 3, 12, 15, 16, 19, 21, 24, 26, 28, 29, 33, 34, 41, 46, 49, 56, 58, 60, 68, 72, 73, 74, 75, 76, 77, 80, 83, 85, 86, 93, 104, 105, 107, 117, 118, 119, 122, 124, 136, 140, 146, 147, 148, 149, 152, 154, 155, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 179, 181, 183], "dynam": [1, 12, 58, 60, 68, 160, 175], "dan": [1, 2, 3, 6, 11, 12, 16, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 39, 45, 46, 47, 48, 49, 52, 53, 56, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 141, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 160, 162, 163, 164, 166, 167, 169, 170, 171, 172, 174, 175, 178, 179, 181, 183], "plupart": [1, 2, 3, 34, 46, 69, 73, 84, 110, 113, 120, 136, 138, 143, 152, 154, 160, 163, 164, 166, 168, 170, 175, 176, 178, 181], "cas": [1, 2, 3, 16, 19, 20, 24, 26, 27, 28, 33, 34, 35, 44, 45, 46, 49, 56, 58, 59, 60, 63, 66, 68, 69, 70, 74, 77, 80, 81, 82, 83, 84, 85, 87, 88, 91, 93, 101, 102, 106, 111, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 138, 140, 141, 143, 144, 145, 146, 147, 149, 154, 160, 163, 164, 170, 174, 176, 177, 179, 181, 183], "obtient": [1, 5, 32, 33, 54, 80, 84, 85, 86, 87, 88, 92, 141, 160, 171, 174], "avoir": [1, 2, 16, 24, 34, 39, 44, 45, 46, 49, 53, 57, 60, 68, 69, 74, 82, 87, 91, 106, 109, 110, 130, 138, 140, 141, 147, 148, 152, 160, 163, 164, 166, 168, 170, 174, 175, 176, 178, 179, 181], "transform": [1, 2, 3, 5, 32, 35, 46, 59, 60, 61, 62, 66, 68, 73, 82, 83, 84, 86, 109, 118, 122, 129, 145, 158, 170, 172, 174, 176], "form": [1, 2, 16, 19, 24, 33, 34, 36, 44, 49, 57, 73, 78, 79, 89, 90, 93, 110, 113, 122, 130, 131, 132, 134, 135, 136, 146, 147, 160, 163, 166, 168, 174, 175, 176, 178, 179, 181, 183], "r\u00e9current": [1, 19, 54, 58, 59, 63, 80, 92, 110, 130, 160, 168], "\u00e9crit": [1, 3, 19, 27, 28, 33, 39, 44, 46, 48, 49, 71, 84, 85, 86, 87, 100, 101, 104, 107, 109, 113, 117, 124, 138, 145, 146, 148, 152, 154, 160, 163, 166, 168, 169, 172, 174, 175, 176, 178, 179, 181, 183], "faut": [1, 2, 3, 16, 19, 21, 24, 25, 26, 27, 33, 34, 35, 36, 39, 44, 46, 48, 49, 52, 57, 58, 60, 61, 62, 63, 65, 66, 68, 69, 73, 74, 76, 80, 82, 85, 86, 87, 88, 91, 93, 95, 101, 102, 104, 105, 108, 109, 112, 113, 117, 118, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 158, 160, 163, 166, 168, 169, 170, 172, 174, 175, 176, 178, 179, 181, 183], "solut": [1, 16, 20, 21, 24, 27, 28, 33, 34, 36, 39, 44, 61, 64, 67, 77, 80, 81, 82, 84, 87, 89, 90, 92, 93, 96, 107, 108, 112, 113, 130, 131, 137, 138, 160, 163, 168, 174, 175, 176, 179, 181], "\u00e9l\u00e9ment": [1, 2, 3, 5, 8, 12, 19, 25, 27, 32, 34, 35, 39, 44, 45, 46, 53, 58, 59, 62, 71, 73, 74, 75, 77, 80, 84, 85, 86, 96, 99, 100, 101, 113, 115, 117, 120, 121, 122, 124, 125, 129, 137, 141, 145, 148, 154, 155, 160, 163, 164, 168, 169, 170, 175, 176, 178, 179, 181, 183], "sach": [1, 16, 68, 141, 160, 183], "conna\u00eet": [1, 49, 60, 63, 89, 90, 153, 160, 174, 178], "0": [1, 2, 3, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 163, 164, 166, 168, 169, 170, 171, 174, 175, 176, 178, 179, 181, 183], "dichotom": [1, 12, 63, 65, 69, 85, 87, 88, 98, 109, 141, 174], "coup": [1, 2, 34, 55, 58, 66, 69, 82, 85, 86, 124, 138, 145, 147, 168, 170, 175], "deux": [1, 3, 5, 6, 10, 11, 13, 16, 19, 22, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 44, 46, 49, 52, 53, 54, 57, 58, 59, 60, 63, 66, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 96, 101, 102, 103, 105, 106, 108, 110, 111, 115, 118, 120, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163, 166, 168, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183], "iter": [1, 2, 6, 7, 13, 19, 28, 33, 44, 58, 59, 61, 63, 64, 65, 66, 69, 73, 76, 85, 86, 89, 90, 98, 101, 102, 119, 130, 131, 136, 143, 145, 149, 154, 155, 156, 161, 170, 175, 179, 181], "tabl": [1, 8, 34, 47, 68, 80, 89, 90, 98, 107, 110, 121, 123, 140, 141, 146, 160, 168, 174, 175, 178], "hashag": [1, 8, 52, 98, 140, 141], "D\u00e8s": [1, 2, 46], "sort": [1, 2, 3, 7, 17, 24, 33, 35, 36, 43, 44, 46, 49, 53, 56, 58, 60, 61, 63, 66, 68, 69, 72, 74, 80, 82, 83, 85, 86, 89, 90, 91, 96, 99, 100, 106, 111, 118, 125, 130, 131, 132, 136, 140, 143, 147, 149, 155, 160, 163, 166, 168, 170, 172, 174, 175, 176, 178, 181, 184], "puissanc": [1, 12, 44, 65, 80, 163, 174, 175, 181], "entier": [1, 3, 5, 19, 24, 33, 34, 35, 36, 39, 44, 46, 49, 52, 53, 57, 58, 62, 63, 72, 74, 80, 85, 86, 100, 106, 120, 133, 134, 135, 140, 148, 149, 160, 162, 163, 168, 169, 171, 173, 174, 176], "attendr": [1, 18, 168, 181], "trivial": [1, 54], "tel": [1, 2, 12, 25, 34, 44, 53, 58, 59, 61, 69, 82, 83, 84, 85, 86, 101, 106, 111, 112, 113, 125, 126, 127, 130, 131, 132, 134, 135, 138, 140, 143, 146, 147, 149, 152, 160, 168, 170, 174, 175, 176, 178, 180, 183], "strassen": [1, 160], "multipl": [1, 5, 6, 27, 32, 33, 39, 44, 60, 70, 72, 74, 80, 82, 83, 111, 143, 162, 174], "matric": [1, 5, 8, 25, 27, 32, 33, 34, 36, 46, 48, 57, 60, 73, 78, 79, 80, 83, 84, 91, 96, 113, 118, 119, 123, 130, 131, 145, 146, 147, 158, 160, 173, 176], "807": [1, 160], "celui": [1, 2, 3, 16, 18, 20, 24, 25, 27, 28, 34, 44, 46, 49, 68, 69, 82, 84, 85, 86, 101, 102, 121, 122, 130, 131, 136, 146, 147, 152, 154, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 183], "marco": 1, "bodrato": 1, "a": [1, 2, 5, 7, 11, 13, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 39, 44, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182], "lik": [1, 17], "matrix": [1, 16, 35, 66], "suited": 1, "for": [1, 2, 3, 7, 9, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 33, 34, 36, 37, 39, 40, 41, 42, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 163, 164, 166, 168, 169, 170, 171, 175, 176, 178, 181, 183], "squaring": 1, "and": [1, 3, 7, 16, 17, 19, 24, 25, 34, 43, 44, 46, 50, 52, 53, 54, 55, 59, 60, 62, 63, 69, 74, 77, 78, 79, 80, 82, 84, 85, 86, 99, 103, 106, 108, 111, 115, 116, 118, 124, 134, 135, 136, 137, 141, 146, 153, 156, 160, 164, 168, 174, 175, 176, 178, 179, 181], "high": 1, "pow": [1, 121], "comput": [1, 6, 118, 128], "minimal": [1, 33, 58, 69, 80, 93, 99], "tri": [1, 7, 12, 27, 34, 35, 44, 49, 68, 69, 72, 80, 84, 87, 88, 98, 109, 115, 120, 130, 131, 140, 141, 154, 155, 166, 174, 175], "g\u00e9ner": [1, 26, 32, 34, 35, 36, 44, 52, 73, 83, 84, 85, 86, 87, 88, 91, 106, 110, 145, 146, 152, 160, 163, 164, 168, 175, 178, 179, 181], "dir": [1, 2, 3, 19, 25, 27, 44, 46, 49, 52, 58, 62, 63, 68, 69, 73, 76, 77, 82, 87, 88, 111, 112, 122, 128, 129, 131, 136, 146, 147, 148, 152, 154, 155, 160, 164, 168, 172, 174, 175, 176, 178, 181, 183], "san": [1, 2, 19, 21, 24, 27, 33, 35, 36, 37, 44, 45, 49, 52, 56, 59, 63, 64, 66, 70, 72, 73, 77, 80, 87, 88, 91, 92, 95, 96, 99, 100, 107, 122, 123, 124, 129, 130, 138, 140, 147, 148, 152, 160, 163, 164, 166, 168, 170, 174, 175, 177, 178, 179, 180, 181, 183], "hypothes": [1, 130], "don": [1, 2, 3, 6, 8, 12, 16, 20, 24, 25, 26, 27, 28, 30, 31, 33, 41, 43, 45, 46, 49, 52, 58, 59, 61, 62, 68, 72, 76, 78, 80, 82, 83, 88, 89, 90, 92, 101, 104, 108, 113, 118, 125, 128, 129, 136, 140, 141, 146, 147, 148, 153, 154, 160, 162, 163, 164, 168, 170, 171, 174, 175, 176, 177, 178, 181, 183], "En": [1, 2, 13, 18, 27, 32, 33, 34, 44, 45, 48, 49, 52, 58, 59, 65, 68, 75, 77, 80, 82, 84, 104, 106, 110, 112, 113, 119, 130, 131, 132, 137, 143, 147, 148, 154, 160, 163, 164, 166, 168, 170, 174, 175, 176, 178, 181], "revanch": [1, 44, 59, 91, 113, 148, 160, 163, 168, 174, 176, 181], "o\u00f9": [1, 2, 3, 10, 33, 34, 36, 44, 45, 46, 49, 53, 54, 56, 57, 58, 59, 62, 63, 69, 73, 75, 76, 82, 84, 85, 86, 87, 88, 93, 99, 100, 109, 110, 120, 125, 128, 129, 130, 132, 133, 136, 141, 143, 146, 147, 148, 154, 155, 160, 163, 166, 168, 170, 172, 174, 175, 176, 178, 179, 181, 183], "issu": [1, 17, 34, 36, 55, 59, 82, 91, 113, 130, 164, 176], "ensembl": [1, 2, 6, 16, 24, 25, 33, 34, 44, 45, 49, 52, 53, 55, 58, 59, 60, 62, 63, 64, 69, 73, 75, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98, 99, 100, 101, 106, 110, 115, 122, 126, 127, 130, 132, 133, 136, 137, 140, 143, 146, 149, 160, 163, 164, 168, 169, 170, 172, 174, 176, 178, 179], "fin": [1, 2, 3, 13, 19, 26, 33, 34, 44, 45, 46, 49, 52, 56, 57, 62, 63, 64, 69, 76, 80, 82, 87, 88, 101, 102, 105, 106, 107, 111, 112, 113, 119, 120, 148, 149, 154, 155, 160, 168, 170, 175, 176, 178, 181, 183], "cardinal": [1, 52], "meilleur": [1, 2, 28, 34, 52, 54, 56, 57, 58, 64, 67, 69, 80, 82, 83, 87, 88, 89, 90, 93, 103, 111, 130, 131, 147, 152, 160, 175, 176], "revient": [1, 16, 19, 20, 69, 72, 74, 85, 99, 101, 108, 113, 125, 130, 141, 160, 175, 176, 179, 181], "histogramm": [1, 34, 83, 85, 86, 98, 125], "inf\u00e9rieur": [1, 2, 18, 19, 33, 53, 59, 63, 69, 74, 82, 83, 84, 120, 143, 154, 170, 174, 175], "inf": [1, 33, 63], "blog": [1, 14], "fast": [1, 17, 34, 180], "interesect": 1, "of": [1, 3, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 43, 46, 50, 58, 60, 66, 74, 76, 77, 82, 85, 86, 88, 92, 95, 107, 110, 113, 114, 115, 117, 118, 119, 125, 128, 129, 134, 135, 137, 141, 143, 153, 160, 164, 168, 170, 174, 178, 179], "sorted": [1, 2, 59, 68, 69, 84, 106, 117, 125, 146, 153, 154, 170, 174], "list": [1, 2, 5, 6, 7, 12, 16, 20, 24, 25, 28, 33, 34, 36, 39, 42, 43, 52, 53, 58, 59, 62, 63, 64, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 89, 92, 98, 99, 100, 101, 106, 108, 113, 114, 115, 117, 119, 120, 121, 125, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 147, 153, 155, 163, 164, 169, 170, 171, 179, 181, 183], "using": [1, 16, 36, 168, 181], "sse": 1, "instruct": [1, 2, 3, 9, 34, 36, 40, 44, 46, 49, 58, 72, 74, 75, 85, 86, 118, 122, 140, 146, 148, 149, 154, 160, 166, 168, 170, 172, 175, 176, 178, 181], "simpl": [1, 2, 3, 16, 20, 21, 27, 34, 35, 36, 44, 46, 49, 52, 54, 56, 57, 59, 60, 61, 63, 64, 65, 66, 68, 69, 72, 80, 82, 83, 87, 88, 90, 101, 110, 113, 115, 119, 120, 122, 128, 129, 130, 136, 137, 140, 143, 144, 145, 146, 147, 148, 152, 163, 166, 168, 170, 175, 176, 178, 179, 180, 183], "intersect": [1, 132, 175], "montr": [1, 27, 33, 44, 54, 56, 58, 62, 68, 84, 87, 88, 104, 119, 131, 134, 135, 136, 138, 140, 147, 155, 160, 163, 168, 169, 172, 174, 175, 176, 178, 181, 183], "comment": [1, 12, 16, 24, 25, 33, 34, 36, 39, 52, 57, 59, 60, 62, 66, 68, 69, 77, 85, 86, 88, 92, 110, 111, 113, 115, 118, 123, 128, 136, 137, 138, 140, 144, 145, 152, 160, 164, 168, 172, 174, 175, 176, 178, 179, 181, 183], "optimis": [1, 26, 31, 32, 35, 52, 63, 67, 68, 84, 95, 113, 117, 118, 119, 125, 130, 136, 137, 150, 151, 169, 175, 177], "impl\u00e9ment": [1, 2, 3, 5, 6, 15, 19, 28, 29, 33, 35, 36, 46, 49, 56, 63, 66, 69, 80, 81, 85, 86, 87, 88, 101, 102, 105, 106, 109, 111, 114, 116, 119, 120, 122, 125, 138, 153, 160, 166, 170, 174, 175, 178, 180, 181], "introduis": 1, "notion": [1, 3, 12, 46, 52, 54, 58, 68, 84, 175], "partit": [1, 43, 175], "peu": [1, 3, 25, 33, 34, 36, 44, 46, 48, 49, 53, 56, 57, 59, 61, 62, 63, 66, 69, 74, 75, 77, 80, 83, 89, 90, 91, 92, 101, 106, 107, 109, 113, 115, 117, 120, 122, 128, 129, 136, 140, 142, 147, 153, 160, 163, 166, 168, 174, 175, 176, 178, 179, 181], "parall\u00e9lis": [1, 181, 184], "object": [1, 3, 7, 16, 17, 19, 24, 25, 28, 34, 36, 44, 45, 46, 60, 68, 69, 73, 74, 76, 94, 99, 100, 101, 102, 113, 117, 118, 119, 128, 130, 131, 136, 140, 152, 160, 168, 174, 175, 178, 179, 181, 183], "tous": [1, 2, 3, 6, 16, 18, 19, 20, 24, 27, 28, 33, 34, 35, 44, 45, 46, 47, 49, 52, 53, 56, 58, 59, 61, 63, 68, 69, 73, 80, 82, 85, 86, 92, 93, 96, 100, 101, 102, 105, 117, 124, 130, 132, 133, 140, 141, 146, 147, 155, 160, 163, 168, 170, 171, 174, 175, 176, 178, 179, 181, 183], "lesquel": [1, 19, 33, 34, 56, 59, 69, 125, 134, 135, 160, 174, 176], "con\u00e7us": [1, 178], "distanc": [1, 6, 8, 12, 13, 28, 35, 61, 69, 70, 80, 87, 88, 89, 90, 96, 129, 130, 131, 133, 134, 135, 157, 159], "\u00e9dit": [1, 8, 12, 13, 96, 133, 157, 159], "sert": [1, 2, 20, 27, 31, 33, 36, 44, 45, 61, 69, 72, 93, 95, 101, 116, 123, 136, 138, 140, 141, 143, 147, 148, 160, 162, 163, 168, 174, 175, 176, 181, 182], "entre": [1, 5, 13, 24, 31, 33, 36, 52, 53, 59, 61, 62, 63, 64, 68, 69, 70, 77, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 96, 100, 107, 115, 122, 129, 130, 131, 134, 135, 137, 140, 143, 144, 146, 147, 148, 149, 154, 160, 163, 168, 170, 171, 174, 175, 176, 178, 179, 181, 183], "utilis": [1, 2, 3, 5, 13, 14, 16, 20, 21, 24, 25, 27, 33, 34, 35, 36, 41, 45, 46, 49, 52, 53, 56, 60, 66, 68, 69, 72, 73, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 92, 93, 96, 99, 100, 102, 106, 109, 110, 113, 115, 118, 119, 121, 122, 124, 125, 129, 130, 133, 136, 137, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 160, 161, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183], "trouv": [1, 2, 3, 11, 16, 21, 27, 28, 33, 35, 36, 39, 44, 46, 49, 58, 61, 63, 64, 67, 68, 69, 70, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 106, 107, 112, 120, 129, 131, 132, 133, 134, 140, 150, 151, 154, 155, 160, 168, 170, 171, 174, 175, 176, 178, 181, 183], "proch": [1, 25, 52, 64, 82, 83, 89, 90, 96, 130, 147, 160, 168, 169, 175, 176, 179], "autr": [1, 2, 3, 8, 9, 11, 15, 16, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 39, 41, 45, 46, 49, 52, 53, 54, 57, 58, 59, 60, 62, 63, 64, 68, 69, 70, 72, 73, 74, 76, 80, 83, 84, 86, 87, 88, 89, 90, 92, 95, 98, 99, 101, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 119, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 148, 149, 152, 153, 154, 155, 156, 162, 163, 164, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183], "condit": [1, 19, 33, 34, 36, 44, 45, 50, 52, 74, 75, 115, 130, 140, 143, 154, 160, 168, 174, 175, 176, 178, 181], "sim": [1, 19, 33, 58, 60, 61, 126, 127, 141, 143, 155, 160], "4": [1, 2, 3, 5, 7, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 36, 37, 44, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 133, 142, 143, 144, 145, 148, 149, 150, 151, 153, 155, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 174, 175, 176, 178, 180, 181, 183], "Que": [1, 27, 33, 34, 62, 74, 75, 76, 77, 84, 112, 119, 128, 130, 146, 152, 154], "quand": [1, 2, 20, 33, 34, 44, 49, 56, 62, 66, 82, 83, 91, 93, 100, 110, 111, 119, 124, 128, 132, 146, 147, 153, 155, 163, 170, 175, 181], "milliard": [1, 52], "Ce": [1, 2, 3, 12, 18, 19, 27, 28, 33, 35, 36, 44, 45, 46, 48, 49, 52, 58, 60, 62, 64, 67, 68, 69, 72, 75, 80, 82, 83, 87, 88, 91, 92, 93, 95, 96, 99, 100, 101, 102, 106, 107, 111, 122, 129, 130, 131, 133, 140, 141, 143, 146, 147, 152, 153, 154, 160, 163, 164, 168, 169, 170, 171, 172, 174, 175, 176, 181, 183], "facil": [1, 16, 19, 24, 25, 28, 34, 36, 39, 44, 48, 49, 52, 59, 69, 80, 93, 107, 109, 113, 114, 115, 117, 118, 125, 130, 131, 160, 168, 172, 174, 175, 176, 178, 179, 181, 183], "si": [1, 2, 3, 5, 6, 12, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 36, 39, 44, 45, 46, 49, 52, 53, 54, 55, 58, 59, 60, 62, 63, 65, 66, 69, 70, 72, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 100, 101, 106, 111, 113, 118, 122, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 154, 155, 160, 163, 164, 166, 168, 170, 172, 174, 175, 176, 178, 179, 181, 183], "repr\u00e9sent": [1, 2, 5, 13, 19, 24, 27, 33, 34, 35, 46, 57, 59, 60, 62, 66, 68, 69, 73, 78, 79, 89, 90, 98, 108, 113, 115, 122, 131, 141, 147, 153, 160, 162, 168, 170, 172, 174, 175, 176, 179], "vecteur": [1, 35, 44, 53, 83, 84, 87, 88, 89, 90, 106, 119, 122, 129, 160, 175], "voir": [1, 2, 3, 9, 12, 13, 16, 19, 25, 28, 33, 34, 44, 46, 49, 52, 57, 62, 63, 64, 68, 69, 70, 83, 85, 86, 87, 88, 100, 101, 103, 106, 109, 111, 122, 133, 136, 141, 144, 146, 147, 148, 154, 156, 160, 166, 168, 170, 174, 175, 176, 179, 181], "word2vec": 1, "auto": [1, 89, 90], "encoder": [1, 176], "veut": [1, 2, 3, 25, 33, 34, 36, 39, 44, 46, 48, 54, 56, 58, 59, 62, 69, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 101, 103, 105, 112, 122, 124, 128, 129, 130, 131, 134, 135, 136, 138, 140, 143, 145, 147, 148, 152, 153, 154, 155, 163, 170, 175, 178, 181, 183], "compar": [1, 2, 17, 18, 19, 33, 34, 35, 44, 49, 56, 60, 62, 69, 82, 87, 88, 103, 105, 108, 117, 120, 123, 125, 129, 143, 152, 154, 160, 163, 168, 170, 174, 175, 176], "model": [1, 33, 36, 59, 63, 82, 83, 96, 128, 129, 175], "ranking": 1, "pouvoir": [1, 6, 52, 56, 63, 68, 93, 102, 113, 117, 130, 136, 138, 145, 147, 148, 154, 160, 168, 174, 175, 176, 179, 181], "visuel": [1, 3, 28, 46, 62, 168], "r\u00e9sultat": [1, 2, 6, 19, 20, 22, 24, 27, 28, 33, 34, 35, 36, 39, 44, 45, 49, 54, 56, 57, 59, 62, 63, 74, 75, 78, 79, 80, 83, 85, 86, 87, 91, 99, 100, 106, 109, 111, 113, 117, 118, 120, 124, 126, 127, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 154, 155, 160, 163, 166, 170, 174, 175, 176, 178, 179, 181, 183], "Quel": [1, 27, 73, 85, 86, 146], "mieux": [1, 2, 8, 21, 27, 28, 39, 44, 60, 63, 66, 68, 83, 85, 86, 88, 95, 100, 107, 110, 113, 115, 117, 146, 148, 160, 168, 170, 178, 179, 181], "affich": [1, 2, 3, 6, 27, 33, 34, 44, 45, 46, 49, 56, 58, 59, 69, 74, 75, 83, 92, 100, 111, 136, 146, 147, 148, 154, 155, 160, 163, 166, 168, 170, 171, 172, 174, 175, 176, 178, 181, 183], "moteur": [1, 34, 38, 39, 83, 146, 168, 176], "recherch": [1, 4, 12, 24, 34, 38, 39, 58, 63, 64, 68, 69, 82, 83, 85, 88, 98, 101, 109, 112, 131, 141, 146, 163, 168, 174, 175, 176, 183], "oeil": [1, 33, 34, 175], "humain": [1, 148, 181], "sais": [1, 68, 147, 174, 176], "rapid": [1, 2, 3, 19, 24, 26, 27, 33, 34, 35, 44, 46, 49, 52, 59, 66, 69, 82, 85, 86, 87, 88, 95, 96, 98, 105, 106, 107, 111, 114, 118, 120, 124, 140, 141, 146, 147, 153, 160, 166, 168, 170, 175, 178, 179, 180, 181], "diff\u00e9rent": [1, 11, 16, 19, 24, 25, 28, 33, 34, 35, 36, 39, 45, 53, 54, 62, 63, 68, 80, 82, 85, 86, 88, 90, 91, 92, 104, 105, 106, 109, 112, 114, 122, 130, 131, 136, 137, 140, 143, 146, 148, 149, 154, 160, 163, 168, 169, 170, 171, 172, 174, 175, 176, 178, 180, 181, 183], "tout": [1, 2, 3, 6, 7, 11, 12, 16, 19, 21, 24, 25, 27, 28, 33, 34, 35, 36, 44, 45, 46, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 66, 69, 70, 72, 77, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 99, 100, 101, 106, 108, 109, 110, 111, 115, 119, 121, 122, 124, 125, 129, 130, 131, 132, 133, 136, 137, 140, 141, 143, 146, 147, 148, 151, 152, 158, 160, 164, 166, 168, 170, 172, 174, 175, 176, 179, 181, 183], "fusion": [1, 12, 63, 80, 110, 125], "algo": [1, 96], "bucket": 1, "bull": 1, "complex": [1, 3, 16, 44, 46, 49, 52, 56, 69, 113, 146, 148, 160, 168, 174, 178, 179], "lempel": 1, "ziv": 1, "python": [1, 3, 5, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 40, 41, 43, 45, 47, 63, 72, 73, 76, 77, 80, 83, 84, 85, 86, 99, 100, 103, 104, 105, 106, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 136, 137, 138, 141, 153, 154, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 176, 178, 179, 180, 183], "implement": [1, 118, 141], "kullback": 1, "leibl": 1, "divergent": 1, "kl": 1, "ucb": 1, "index": [1, 44, 60, 62, 63, 74, 76, 77, 91, 95, 105, 110, 113, 116, 140, 147, 160, 163, 174, 175, 178], "matriciel": [1, 5, 8, 19, 31, 92, 96, 118], "winograd": 1, "minimum": [1, 28, 33, 35, 54, 56, 58, 59, 72, 84, 89, 90, 91, 95, 132, 133], "filtering": 1, "convolu": [1, 8, 98], "im2col": 1, "r\u00e9arrang": 1, "divis": [1, 2, 27, 33, 34, 44, 52, 53, 58, 70, 74, 82, 84, 87, 88, 102, 111, 117, 120, 126, 127, 132, 140, 142, 155, 162, 163, 174, 175], "reign": 1, "branch": 1, "bound": [1, 33, 168], "the": [1, 3, 5, 6, 7, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 36, 42, 43, 46, 50, 52, 56, 60, 68, 78, 79, 82, 110, 112, 117, 118, 125, 126, 127, 128, 132, 133, 134, 135, 160, 164, 168, 178, 181], "ultimat": 1, "planar": 1, "convex": [1, 84], "hull": 1, "relectur": [1, 25, 49, 160, 176, 179], "kirkpatrick": 1, "seidel": 1, "prun": [1, 85, 86], "search": [1, 3, 7, 42, 46, 178, 183], "an": [1, 3, 6, 7, 34, 35, 43, 49, 50, 82, 83, 134, 135, 147, 164, 168, 174, 181], "finding": 1, "point": [1, 2, 15, 19, 27, 28, 29, 33, 44, 58, 61, 68, 69, 83, 84, 87, 88, 89, 90, 111, 118, 129, 136, 143, 146, 147, 148, 153, 154, 160, 164, 168, 170, 174, 175, 176, 181, 183], "set": [1, 3, 7, 16, 34, 36, 44, 46, 52, 53, 59, 62, 68, 79, 99, 105, 108, 124, 154, 160, 164, 168, 169, 174, 181], "d\u00e9termin": [1, 2, 6, 19, 24, 27, 33, 44, 69, 70, 82, 83, 84, 85, 86, 92, 117, 130, 146, 147, 148, 152, 154, 160, 166, 168, 170, 174, 175, 178, 181, 183], "envelopp": 1, "h": [1, 19, 25, 34, 40, 43, 52, 62, 68, 83, 87, 88, 89, 90, 91, 100, 103, 109, 113, 141, 143, 153, 160, 168, 169, 171, 175, 176, 179, 181], "nombr": [1, 2, 3, 5, 6, 10, 19, 20, 21, 27, 28, 32, 34, 35, 39, 44, 46, 49, 53, 55, 56, 58, 60, 62, 63, 64, 65, 66, 69, 70, 73, 74, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 91, 93, 95, 96, 100, 102, 105, 106, 109, 110, 112, 113, 114, 115, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 140, 141, 143, 145, 146, 148, 149, 152, 154, 155, 160, 163, 166, 168, 170, 171, 172, 173, 176, 178, 179, 181, 183], "segment": [1, 58, 64, 69, 132, 142, 160], "court": [1, 3, 8, 12, 19, 25, 28, 30, 31, 32, 34, 46, 53, 55, 56, 60, 64, 68, 69, 76, 77, 80, 96, 97, 107, 124, 125, 146, 152, 160, 174, 175, 176], "chemin": [1, 3, 8, 12, 28, 46, 53, 54, 59, 68, 80, 96, 100, 118, 143, 146, 164, 168, 178], "graph": [1, 6, 7, 12, 13, 28, 30, 31, 33, 52, 57, 62, 68, 69, 80, 100, 102, 118, 130, 135, 151, 160, 168], "ordonnanc": [1, 8, 96], "permut": [1, 2, 11, 13, 21, 27, 28, 56, 63, 82, 83, 93, 98, 111, 131, 132, 133, 137, 140, 146, 163], "sattolo": 1, "voyageur": [1, 12, 28, 64, 96], "commerc": [1, 12, 15, 29, 52, 64, 96], "hamiltonien": [1, 28], "lir": [1, 2, 3, 5, 34, 35, 44, 46, 48, 53, 82, 112, 117, 122, 130, 141, 146, 147, 160, 163, 164, 166, 168, 170, 172, 174, 175, 176, 178, 179], "larg": [1, 28, 43, 52], "scal": 1, "traveling": [1, 8, 96], "salesman": [1, 8, 67, 96], "tourn": [1, 27, 63, 99, 108, 140, 181], "v\u00e9hicul": 1, "extens": [1, 6, 9, 31, 35, 55, 59, 69, 84, 113, 146, 153, 160, 168, 173, 176, 177, 183], "affect": [1, 2, 27, 33, 44, 49, 56, 64, 109, 140, 149, 154, 160, 163, 168, 170, 174, 178, 181], "m\u00e9thod": [1, 2, 3, 12, 24, 27, 33, 34, 46, 52, 61, 63, 66, 70, 73, 74, 76, 83, 87, 88, 98, 99, 101, 103, 106, 113, 118, 122, 128, 129, 135, 141, 146, 147, 161, 162, 163, 170, 173, 174, 176, 178, 181, 183], "hongrois": [1, 135], "arbre": [1, 12, 59, 62, 68, 80, 98, 109, 115, 153], "poid": [1, 6, 69, 84, 160], "miminum": [1, 54], "kruskal": [1, 4, 6, 12, 69], "bor\u016fvk": 1, "sac": 1, "dos": 1, "structur": [1, 2, 3, 7, 19, 34, 35, 36, 44, 46, 59, 62, 69, 115, 136, 140, 141, 146, 160, 170, 175, 176, 178], "cha\u00een": [1, 34, 36, 55, 72, 73, 74, 76, 82, 98, 99, 113, 130, 136, 140, 146, 148, 149, 152, 153, 154, 160, 163, 168, 169, 172, 173, 174, 176, 178, 179, 181, 183], "def": [1, 2, 3, 7, 16, 17, 18, 19, 20, 24, 25, 27, 28, 33, 34, 35, 39, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 129, 133, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 152, 153, 156, 158, 160, 162, 163, 164, 166, 168, 169, 170, 174, 175, 176, 178, 179, 181, 183], "hachag": [1, 34, 52], "distribu": [1, 3, 4, 9, 33, 46, 49, 52, 59, 106, 109, 111, 122, 123, 125, 130, 168, 181], "suffix": [1, 8, 96, 175], "tre": [1, 16, 40, 141, 147, 160], "b": [1, 2, 3, 7, 16, 20, 21, 23, 25, 26, 27, 33, 34, 37, 40, 44, 45, 46, 49, 52, 54, 55, 56, 60, 61, 62, 63, 64, 68, 69, 73, 74, 75, 76, 80, 83, 84, 89, 90, 93, 94, 99, 100, 101, 102, 105, 106, 107, 109, 112, 120, 122, 130, 131, 133, 134, 135, 140, 141, 142, 143, 147, 153, 154, 155, 156, 160, 163, 168, 169, 170, 174, 175, 176, 178, 179, 181, 183], "x": [1, 2, 3, 7, 19, 20, 25, 27, 28, 33, 34, 35, 44, 45, 46, 52, 53, 58, 60, 62, 66, 68, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 100, 103, 106, 107, 109, 114, 115, 118, 119, 122, 124, 125, 126, 127, 129, 132, 133, 136, 140, 142, 143, 146, 147, 148, 150, 151, 153, 154, 155, 160, 163, 168, 170, 174, 175, 176, 178, 181, 183], "tas": [1, 63, 110], "heap": [1, 63, 98], "fibonacc": [1, 54], "judy": 1, "array": [1, 17, 22, 25, 27, 32, 35, 36, 37, 44, 52, 53, 57, 58, 59, 60, 61, 63, 67, 75, 83, 84, 87, 88, 89, 90, 91, 95, 103, 106, 107, 116, 118, 119, 122, 123, 128, 130, 131, 134, 135, 143, 145, 158, 179, 181], "sit": [1, 3, 9, 12, 26, 34, 35, 46, 48, 49, 61, 70, 91, 117, 118, 119, 121, 128, 132, 133, 134, 135, 146, 151, 152, 164, 166, 171, 175, 178, 183], "mapping": [1, 34, 83], "int": [1, 3, 6, 7, 17, 19, 24, 33, 34, 35, 44, 46, 52, 59, 62, 66, 74, 76, 78, 79, 82, 85, 86, 91, 99, 101, 103, 107, 108, 109, 125, 142, 143, 145, 146, 147, 149, 160, 163, 174, 175, 179, 181], "efficac": [1, 2, 22, 24, 33, 59, 62, 63, 66, 68, 69, 74, 80, 103, 110, 125, 160, 169, 170, 174, 179, 181], "traditionnel": [1, 48], "propriet": [1, 44, 53, 59, 129, 130, 138, 143], "cach": [1, 3, 27, 34, 39, 42, 43, 44, 46, 85, 86, 92, 160, 162, 174, 175], "processeur": [1, 35, 118, 174, 181], "compos": [1, 8, 12, 21, 44, 69, 96, 101, 118, 168, 174, 175, 178], "connex": [1, 6, 8, 12, 69, 96, 166], "parcour": [1, 16, 19, 28, 44, 52, 58, 62, 64, 66, 70, 72, 73, 80, 95, 102, 113, 122, 136, 137, 140, 143, 154, 160, 163, 174, 175, 181], "profondeur": [1, 80], "largeur": [1, 59, 80, 93, 122, 168], "orient": [1, 44, 53, 59, 110, 175], "acycl": [1, 80], "degr": [1, 6, 53, 59, 69, 123, 140, 174], "floyd": [1, 135], "flukerson": 1, "cut": [1, 43, 81], "maximum": [1, 5, 32, 33, 35, 44, 57, 58, 68, 70, 82, 84, 91, 95, 103], "bi": [1, 33, 135, 147, 160, 168], "pagerank": 1, "appari": [1, 34, 69, 131, 135], "edmond": [1, 69], "blossum": 1, "hopcroft": [1, 135], "karp": [1, 135], "blossom": [1, 135], "5": [1, 2, 3, 5, 6, 7, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 32, 33, 35, 36, 37, 44, 46, 49, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 137, 138, 140, 141, 143, 145, 148, 149, 150, 151, 152, 153, 156, 158, 160, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 178, 181, 183], "couplag": [1, 69, 135], "gal": 1, "shapley": 1, "mariag": [1, 89, 90], "stabl": [1, 33, 36, 42], "robinson": 1, "fould": 1, "robustess": 1, "r\u00e9seau": [1, 52, 59, 130], "quantifying": 1, "robustness": 1, "metro": [1, 36], "network": [1, 68], "d\u00e9tect": [1, 27, 44, 123, 125, 147, 153, 160, 163, 164, 168, 171, 174, 183], "motif": [1, 112, 150, 151], "fr\u00e9quent": [1, 2, 25, 34, 38, 41, 52, 63, 68, 70, 92, 113, 118, 122, 140, 146, 152, 160, 163, 168, 172, 173, 174, 175, 176, 179, 181], "fp": 1, "growth": [1, 121], "text": [1, 2, 3, 7, 16, 19, 21, 28, 34, 36, 39, 45, 46, 49, 52, 57, 62, 70, 83, 84, 98, 112, 113, 117, 118, 138, 140, 143, 148, 154, 163, 164, 170, 172, 174, 175, 177, 178, 179, 181, 183], "knuth": 1, "morr": 1, "pratt": 1, "rabin": 1, "jaccard": 1, "gramm": 1, "aho": 1, "corasick": 1, "auss": [1, 2, 3, 12, 13, 16, 19, 20, 25, 26, 27, 28, 33, 34, 35, 36, 44, 45, 46, 49, 56, 59, 60, 63, 68, 69, 87, 88, 89, 92, 93, 101, 106, 109, 111, 117, 118, 119, 122, 124, 130, 131, 140, 143, 147, 149, 152, 154, 160, 163, 164, 166, 168, 170, 174, 175, 176, 178, 179, 181, 183], "commentz": 1, "walt": 1, "burrow": 1, "wheel": [1, 9, 168], "aprior": 1, "apprentissag": [1, 129, 132, 168], "regl": [1, 16, 35, 44, 56, 130, 143, 146, 147, 160, 164, 166, 168, 174, 175, 176], "associ": [1, 2, 16, 34, 35, 44, 45, 49, 53, 62, 66, 74, 83, 89, 90, 118, 122, 131, 140, 143, 149, 160, 163, 169, 170, 171, 174, 175, 176, 178, 181, 183], "boi": 1, "moor": 1, "string": [1, 7, 26, 33, 34, 44, 45, 112, 113, 119, 134, 135, 146, 168, 174, 175, 176, 178], "simplex": 1, "lin\u00e9air": [1, 32, 52, 63, 83, 84, 85, 86, 87, 88, 109, 115, 125, 129, 168, 178], "thes": [1, 7, 134, 135, 168], "neld": [1, 33], "mead": [1, 33], "codag": 1, "huffman": [1, 68], "lz77": 1, "lz78": 1, "bootstrap": 1, "intervall": [1, 2, 17, 19, 35, 44, 58, 60, 69, 84, 85, 86, 87, 106, 126, 127, 132, 133, 142, 143, 170, 178, 181], "confianc": [1, 143], "filtr": [1, 6, 117, 176, 183], "bloom": 1, "woodbury": 1, "identity": [1, 35, 95, 158], "blockwis": 1, "invers": [1, 5, 16, 25, 27, 28, 32, 33, 34, 44, 52, 60, 82, 92, 101, 113, 122, 137, 146, 147, 151, 160, 163, 168, 172, 175, 176, 179, 181], "toom": 1, "cook": 1, "canopy": 1, "clustering": 1, "lru": 1, "last": [1, 2, 3, 39, 40, 44, 46, 63, 64, 66, 73, 74, 76, 77, 82, 87, 160, 163, 164, 168, 170, 174, 175, 183], "recent": [1, 2, 3, 39, 44, 46, 73, 74, 76, 77, 82, 160, 163, 164, 168, 170, 174, 175, 183], "used": [1, 7, 16, 178], "yield": [1, 25, 73, 100, 121, 125, 160, 174], "m\u00e9mo\u00efz": 1, "fonction": [1, 3, 6, 12, 18, 19, 20, 24, 26, 27, 28, 33, 41, 46, 49, 53, 54, 55, 56, 58, 61, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 98, 99, 100, 101, 102, 104, 106, 109, 112, 115, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 136, 137, 142, 145, 146, 152, 153, 154, 156, 158, 162, 163, 164, 166, 169, 171, 172, 176, 178, 179, 181, 184], "fonctionnel": [1, 24, 44, 49, 160], "r\u00e9curs": [1, 2, 16, 44, 54, 55, 56, 58, 80, 92, 113, 130, 133, 175, 176, 181], "kahan": 1, "summat": [1, 134, 135], "probabil": [1, 111], "probabilistic": 1, "dat": [1, 2, 6, 23, 25, 26, 33, 36, 47, 52, 60, 61, 91, 110, 112, 113, 116, 118, 121, 141, 146, 147, 160, 168, 173, 175, 176, 178, 179, 183], "web": [1, 2, 8, 44, 46, 49, 98, 146, 147, 166, 171, 179, 180], "analytic": 1, "mining": 1, "compress": [1, 53, 68, 113, 146, 176], "lzfse": 1, "lzma": 1, "squash": 1, "benchmark": [1, 33], "inspir": [1, 16, 19, 33, 59, 68, 69, 80, 84, 89, 90, 106, 109, 124, 130, 133, 147, 150, 151], "quantiqu": [1, 12, 49], "quantum": 1, "inspired": 1, "classical": 1, "recommend": 1, "system": [1, 3, 33, 34, 46, 53, 58, 60, 68, 83, 84, 126, 127, 171, 172, 175, 176, 178, 181, 183], "beaucoup": [1, 5, 6, 11, 16, 19, 34, 35, 44, 45, 46, 48, 49, 56, 59, 62, 66, 74, 75, 80, 82, 86, 88, 105, 106, 118, 122, 125, 130, 136, 137, 140, 141, 146, 147, 148, 153, 160, 162, 168, 172, 175, 176, 179, 181, 183], "projet": [1, 36, 136, 162, 178], "thealgorithm": 1, "modul": [1, 2, 5, 7, 18, 19, 25, 32, 33, 34, 39, 40, 41, 69, 73, 74, 76, 77, 82, 83, 84, 85, 86, 98, 99, 105, 106, 109, 112, 113, 118, 121, 122, 124, 128, 130, 153, 160, 163, 164, 166, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 183, 184], "classiqu": [1, 5, 32, 33, 37, 46, 63, 64, 68, 93, 146, 154, 161, 167, 173], "binair": [1, 44, 52, 59, 65, 83, 85, 93, 102, 113, 115, 129, 147, 175, 177], "mersen": 1, "heapsort": 1, "distingu": [1, 3, 34, 44, 46, 59, 69, 104, 140, 146, 152, 160, 174, 175], "trois": [1, 2, 11, 16, 24, 27, 34, 41, 58, 62, 66, 68, 70, 80, 101, 104, 108, 120, 134, 135, 138, 140, 146, 147, 148, 151, 154, 160, 163, 168, 170, 173, 175, 176, 178, 181, 183], "class": [1, 7, 8, 12, 13, 26, 27, 33, 34, 41, 49, 60, 72, 80, 100, 109, 110, 113, 121, 122, 128, 130, 131, 147, 154, 166, 169, 171, 172, 174, 175, 176, 178, 179, 181, 183, 184], "p": [1, 7, 16, 17, 19, 26, 40, 43, 44, 52, 59, 62, 63, 67, 68, 70, 80, 82, 87, 88, 91, 95, 99, 101, 103, 105, 106, 109, 113, 117, 118, 119, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 143, 147, 153, 154, 156, 158, 160, 169, 174, 176, 183], "Un": [1, 3, 6, 8, 16, 19, 21, 24, 26, 27, 33, 34, 35, 36, 37, 44, 45, 46, 53, 57, 62, 70, 73, 82, 83, 85, 86, 87, 88, 89, 90, 98, 99, 100, 112, 113, 115, 122, 126, 127, 132, 136, 140, 144, 145, 146, 148, 149, 150, 152, 153, 154, 160, 166, 168, 172, 174, 176, 177, 179], "appartient": [1, 24, 58, 59, 84, 106, 118, 122, 160, 168, 174, 175, 183], "\u00eatre": [1, 2, 3, 16, 25, 27, 28, 33, 34, 36, 39, 44, 45, 46, 49, 52, 53, 56, 59, 60, 66, 68, 69, 70, 74, 80, 82, 84, 85, 86, 87, 88, 91, 92, 99, 100, 101, 112, 113, 115, 117, 118, 120, 122, 123, 124, 130, 131, 132, 136, 140, 141, 142, 146, 147, 152, 153, 154, 160, 163, 166, 168, 170, 172, 174, 175, 176, 178, 181, 183], "d\u00e9cid": [1, 19, 44, 56, 68, 69, 92, 147, 163], "polyn\u00f4mial": [1, 28, 67, 130, 135], "d\u00e9cis": 1, "turing": 1, "polynomial": [1, 69], "rapport": [1, 16, 49, 52, 69, 85, 86, 88, 92, 117, 125, 129, 138, 160, 162, 168, 174, 180, 181], "taill": [1, 27, 33, 34, 35, 44, 49, 62, 63, 68, 70, 80, 84, 85, 86, 89, 90, 91, 109, 111, 115, 122, 125, 130, 131, 132, 143, 154, 155, 160, 168, 174, 175, 176, 179, 181], "entr\u00e9": [1, 3, 24, 32, 33, 46, 48, 52, 91, 99, 101, 109, 124, 140, 146, 147, 154, 160, 163, 164, 168, 170, 172, 174, 184], "impliqu": [1, 18, 25, 33, 35, 44, 45, 60, 72, 88, 106, 160, 168, 174, 176], "possibl": [1, 2, 3, 5, 6, 10, 16, 19, 23, 25, 27, 28, 33, 34, 36, 44, 45, 46, 49, 53, 54, 55, 58, 59, 60, 61, 68, 69, 75, 82, 88, 89, 90, 91, 95, 96, 103, 107, 110, 111, 113, 122, 126, 127, 129, 130, 131, 134, 135, 137, 138, 140, 146, 147, 148, 152, 153, 160, 163, 164, 166, 168, 170, 172, 175, 176, 178, 179, 181, 183], "v\u00e9rifi": [1, 6, 19, 24, 27, 36, 39, 44, 49, 52, 56, 58, 59, 68, 72, 74, 84, 85, 86, 87, 88, 93, 99, 101, 102, 112, 122, 137, 145, 166, 168, 174, 175, 176, 178, 181, 183], "admet": [1, 84, 143], "capabl": [1, 19, 67, 101, 152, 160, 168, 176, 178, 181], "pr\u00e9cis": [1, 3, 26, 33, 34, 44, 45, 46, 49, 57, 82, 84, 87, 88, 92, 106, 111, 136, 147, 148, 160, 163, 164, 168, 172, 174, 175, 176, 178, 179, 181, 183], "r\u00e9duct": [1, 35, 94], "f": [1, 2, 3, 7, 17, 20, 25, 26, 33, 34, 36, 40, 44, 46, 52, 54, 57, 58, 62, 64, 68, 69, 74, 75, 78, 79, 82, 84, 85, 86, 99, 100, 101, 106, 108, 109, 113, 118, 124, 130, 136, 140, 141, 142, 143, 146, 147, 149, 153, 154, 158, 160, 163, 164, 168, 170, 172, 174, 176, 178, 181, 183], "bpp": 1, "objet": [1, 2, 3, 12, 16, 18, 22, 33, 34, 44, 45, 46, 101, 104, 113, 121, 122, 136, 138, 140, 141, 153, 160, 163, 167, 169, 170, 171, 174, 178, 179, 181, 183], "th\u00e9or": [1, 160], "informat": [1, 16, 27, 44, 104, 113, 136, 143, 160, 162, 172, 174, 176], "th\u00e9oriqu": [1, 52, 100], "d\u00e9fin": [1, 3, 6, 16, 19, 20, 24, 27, 33, 35, 36, 44, 45, 46, 53, 57, 59, 85, 87, 88, 99, 101, 104, 106, 113, 130, 136, 140, 146, 147, 153, 154, 160, 164, 165, 166, 168, 172, 174, 175, 176, 178, 179, 181, 183], "acronym": [1, 140], "vient": [1, 27, 58, 68, 69, 77, 105, 106, 120, 136, 139, 148, 160, 168, 174, 176], "bounded": 1, "error": [1, 60, 164], "tim": [1, 3, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 46, 52, 59, 62, 63, 65, 66, 92, 105, 106, 117, 118, 119, 123, 125, 128, 129, 134, 135, 137, 141, 153, 160, 168, 171, 178, 181], "encor": [1, 3, 13, 20, 24, 27, 33, 34, 44, 46, 49, 52, 56, 58, 61, 62, 63, 66, 69, 70, 76, 77, 87, 88, 95, 99, 101, 108, 117, 130, 131, 132, 136, 137, 147, 151, 152, 160, 162, 166, 169, 174, 175, 176, 178, 181, 183], "irr\u00e9solu": 1, "Une": [1, 2, 3, 16, 19, 20, 24, 34, 44, 45, 46, 49, 52, 54, 55, 57, 61, 63, 64, 66, 68, 74, 80, 82, 87, 88, 89, 90, 98, 99, 107, 111, 114, 122, 129, 133, 136, 138, 140, 143, 148, 149, 160, 163, 168, 170, 171, 174, 175, 176, 178, 179, 181, 183], "preuv": 1, "cour": [1, 34, 44, 59, 60, 65, 91, 105, 123, 146, 163, 168, 174, 175, 176, 181], "logiqu": [1, 16, 34, 44, 45, 100, 146, 162, 168, 175, 179], "423": 1, "m\u00eam": [1, 3, 5, 11, 13, 16, 18, 19, 20, 22, 24, 25, 27, 28, 33, 34, 35, 39, 44, 45, 46, 49, 54, 59, 60, 62, 63, 67, 69, 70, 72, 74, 80, 82, 83, 85, 86, 88, 89, 90, 91, 96, 100, 101, 102, 104, 105, 106, 110, 112, 113, 117, 118, 119, 120, 121, 122, 124, 125, 129, 130, 131, 136, 137, 138, 140, 141, 143, 145, 147, 148, 149, 153, 154, 158, 160, 163, 164, 168, 171, 172, 174, 175, 176, 178, 179, 181, 183], "r\u00e9duir": [1, 20, 34, 44, 49, 151, 154, 175, 176, 179], "fa\u00e7on": [1, 2, 3, 6, 11, 16, 19, 25, 26, 28, 33, 34, 35, 46, 48, 49, 53, 56, 58, 59, 60, 63, 65, 66, 69, 73, 76, 77, 83, 84, 85, 87, 89, 90, 92, 94, 95, 96, 100, 101, 104, 105, 106, 107, 109, 110, 113, 117, 118, 122, 123, 130, 136, 140, 146, 147, 152, 153, 155, 160, 163, 164, 168, 170, 172, 174, 175, 176, 178, 180, 181], "dont": [1, 2, 3, 16, 24, 27, 34, 35, 44, 45, 46, 52, 58, 59, 73, 87, 88, 89, 90, 93, 99, 101, 109, 120, 122, 124, 130, 132, 143, 147, 152, 153, 160, 163, 164, 168, 170, 172, 174, 175, 176, 178, 181, 183], "cherch": [1, 2, 3, 19, 24, 33, 34, 36, 44, 46, 49, 58, 61, 63, 68, 69, 70, 80, 82, 83, 84, 87, 88, 89, 90, 93, 95, 101, 103, 106, 111, 117, 120, 121, 124, 126, 127, 130, 133, 134, 135, 140, 142, 149, 152, 154, 155, 160, 162, 163, 168, 170, 174, 175, 178, 183], "puiss": [1, 16, 82, 132, 146, 147, 160, 168], "r\u00e9ciproqu": [1, 2, 24, 44, 82, 107, 113, 140, 160, 168, 172, 174, 175, 176, 179], "premi": [1, 3, 5, 6, 8, 11, 12, 16, 19, 20, 24, 27, 28, 32, 33, 34, 35, 44, 45, 46, 49, 52, 54, 55, 56, 57, 58, 59, 62, 64, 66, 68, 70, 72, 73, 74, 76, 77, 80, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 96, 98, 100, 101, 104, 107, 108, 110, 113, 117, 120, 122, 125, 129, 130, 131, 137, 138, 140, 145, 146, 147, 151, 152, 154, 155, 160, 163, 164, 166, 168, 172, 174, 175, 176, 178, 179, 180, 183], "lequel": [1, 3, 6, 34, 44, 46, 49, 52, 54, 57, 69, 75, 130, 131, 135, 140, 141, 160, 169, 172, 174, 175, 176, 178, 181], "compl\u00e9tud": 1, "th\u00e9orem": [1, 101, 143], "stephen": 1, "sat": 1, "\u00e9quivalent": [1, 2, 16, 19, 20, 24, 28, 34, 44, 84, 100, 105, 108, 129, 131, 132, 133, 134, 135, 136, 146, 160, 163, 168, 170, 174, 175, 176, 180, 183], "pr\u00e9sentent": [1, 113, 146, 168, 176], "sous": [1, 2, 14, 24, 33, 34, 36, 44, 45, 49, 52, 53, 55, 62, 69, 70, 73, 78, 79, 96, 110, 113, 122, 130, 131, 132, 136, 146, 147, 154, 160, 163, 166, 174, 175, 176, 178, 179, 181, 183], "or": [1, 2, 3, 7, 16, 27, 28, 33, 36, 44, 50, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 73, 74, 76, 80, 84, 85, 86, 87, 88, 93, 99, 100, 108, 110, 118, 124, 128, 132, 133, 134, 135, 138, 139, 143, 156, 158, 163, 168, 170, 174, 175, 178, 179, 183], "acc": 1, "v\u00e9rif": [1, 19, 24, 27, 33, 34, 39, 44, 49, 52, 53, 55, 56, 57, 60, 66, 68, 69, 72, 73, 74, 80, 82, 83, 85, 86, 87, 99, 101, 106, 115, 122, 130, 143, 145, 146, 155, 158, 160, 164, 168, 174, 175, 178, 181, 183], "claus": [1, 16, 154, 163, 174], "vee_k": 1, "y_": [1, 17], "1k": 1, "wedg": 1, "n_k": 1, "k": [1, 2, 5, 6, 19, 24, 25, 32, 33, 34, 44, 52, 54, 58, 59, 60, 62, 65, 66, 68, 69, 70, 73, 74, 75, 82, 83, 85, 86, 87, 88, 89, 90, 95, 96, 100, 101, 106, 107, 115, 116, 118, 122, 125, 131, 132, 133, 140, 141, 143, 153, 155, 158, 160, 170, 174, 175, 183], "ik": [1, 28, 59], "x_i": [1, 33, 52, 83, 84, 85, 86, 87, 88, 126, 127, 129, 143], "neg": [1, 34], "pass": [1, 2, 3, 12, 18, 19, 21, 23, 24, 25, 27, 28, 33, 34, 36, 44, 46, 53, 58, 60, 63, 64, 69, 74, 82, 85, 86, 87, 100, 101, 107, 110, 112, 117, 118, 119, 121, 122, 124, 128, 129, 130, 133, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 154, 155, 160, 163, 166, 168, 170, 172, 175, 176, 178, 179, 180, 181, 183], "\u00e9valu": [1, 27, 33, 71, 174, 175], "sup\u00e9rieur": [1, 2, 49, 59, 63, 69, 82, 83, 84, 86, 87, 88, 120, 154, 158, 168, 170, 174, 175, 176], "certain": [1, 3, 25, 28, 34, 35, 36, 39, 44, 46, 49, 52, 58, 73, 82, 100, 102, 105, 120, 121, 130, 136, 138, 143, 146, 147, 152, 160, 162, 163, 166, 168, 171, 174, 175, 176, 178, 179, 181, 183], "seuil": [1, 6, 52, 69], "wikip\u00e9di": [1, 34, 55, 113, 150, 151], "version": [1, 2, 3, 8, 9, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 40, 43, 44, 46, 49, 55, 58, 66, 68, 80, 85, 86, 106, 113, 114, 117, 118, 137, 138, 143, 147, 149, 153, 154, 160, 168, 169, 170, 172, 174, 175, 176, 178, 181, 183], "fran\u00e7ais": 1, "learning": [1, 5, 12, 33, 46, 48, 63, 118], "concept": [1, 27, 44, 136, 160, 162, 168, 173, 181], "statist": [1, 32, 34, 59, 117, 118, 123, 153], "introduct": [1, 34, 48, 60, 167], "to": [1, 3, 5, 7, 9, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 42, 43, 46, 50, 60, 69, 76, 83, 110, 112, 118, 128, 134, 135, 141, 160, 163, 164, 168, 174, 175, 176, 178, 183], "\u00e9chantillon": [1, 33, 34, 69, 130], "markov": 1, "central": [1, 2, 143, 170], "flow": [1, 134, 135], "blossom5": 1, "matching": 1, "local": [1, 3, 20, 43, 44, 121, 128, 160, 164, 172, 179, 181], "max": [1, 5, 17, 32, 33, 34, 35, 36, 44, 52, 56, 57, 58, 60, 62, 64, 66, 69, 84, 87, 88, 90, 95, 99, 100, 102, 103, 111, 115, 122, 133, 137, 143, 154, 160, 174, 175, 183], "smoothed": 1, "expand": [1, 168], "geometric": 1, "embedding": 1, "partitioning": 1, "partitionning": 1, "read": [1, 17, 25, 26, 34, 36, 43, 70, 113, 121, 146, 147, 153, 164, 172, 176, 179, 181, 183], "optimized": 1, "period": 1, "order": [1, 16, 33, 87, 113, 134, 135, 160, 163], "preserving": 1, "recurs": [1, 16, 40, 85, 86, 118, 140], "gram": 1, "hashing": 1, "is": [1, 3, 7, 16, 17, 19, 25, 33, 35, 36, 40, 50, 55, 56, 58, 60, 61, 62, 63, 64, 68, 73, 74, 77, 85, 86, 87, 88, 92, 93, 99, 100, 107, 112, 118, 124, 128, 133, 134, 135, 143, 156, 160, 168, 174, 175, 178, 179, 181, 183], "pairwis": [1, 95], "independent": 1, "at": [1, 3, 7, 16, 25, 28, 33, 34, 44, 52, 73, 78, 79, 85, 86, 92, 99, 100, 129, 134, 135, 136, 147, 168, 172, 174, 175, 179], "best": [1, 16, 58, 60, 62, 67, 82, 88, 89, 90, 112, 131, 133, 156], "hash": [1, 113, 141], "featur": [1, 147], "classif": [1, 129, 152], "malwar": 1, "detect": [1, 36, 147, 153], "computing": 1, "deriv": 1, "tensor": 1, "express": [1, 27, 33, 34, 44, 45, 50, 80, 84, 98, 99, 102, 107, 122, 130, 160, 174, 175, 176, 178, 184], "prec": [1, 27, 33, 48, 54, 58, 73, 74, 80, 82, 122, 130, 140, 142, 143, 164, 166, 168, 172, 174, 175, 183], "op\u00e9rationnel": [1, 3, 46], "robert": 1, "faur": 1, "bernard": [1, 147], "lemair": 1, "christoph": 1, "picouleau": 1, "programming": [1, 10, 132], "pearl": 1, "jon": 1, "bentley": 1, "3rd": 1, "edit": [1, 3, 26, 42, 56, 168], "thom": 1, "cormen": 1, "charl": [1, 70, 104], "e": [1, 5, 7, 19, 24, 25, 27, 32, 33, 34, 35, 36, 44, 52, 55, 62, 63, 68, 69, 70, 71, 91, 94, 99, 100, 102, 109, 112, 121, 122, 125, 130, 131, 132, 140, 141, 145, 147, 148, 149, 152, 153, 154, 160, 163, 164, 168, 169, 174, 175, 176, 178, 179, 181, 183], "leiserson": 1, "ronald": 1, "rivest": 1, "clifford": 1, "stein": 1, "128": [1, 58, 65, 80, 103, 164], "compr": [1, 2, 35, 44, 46, 137, 138, 140, 147, 160, 168, 174, 175, 183], "cod": [1, 2, 3, 5, 7, 9, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 39, 45, 46, 47, 48, 49, 52, 56, 64, 68, 69, 71, 73, 74, 75, 77, 83, 85, 86, 87, 88, 92, 93, 96, 98, 99, 100, 101, 108, 109, 110, 113, 118, 119, 122, 126, 127, 128, 132, 133, 134, 135, 136, 138, 146, 147, 148, 154, 160, 162, 163, 164, 166, 168, 170, 172, 174, 175, 176, 178, 179, 181], "vi": [1, 2, 3, 9, 25, 33, 34, 46, 56, 82, 105, 132, 146, 147, 160, 168, 174, 176, 179, 181], "accompagn": [1, 3, 46], "r\u00e9pertoir": [1, 3, 6, 44, 46, 124, 146, 168, 176, 178, 183], "github": [1, 6, 12, 25, 33, 34, 35, 36, 37, 39, 40, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 164, 168, 178], "tryalgo": 1, "document": [1, 33, 34, 36, 50, 122, 146, 160, 163, 168, 172, 175, 178, 181], "r\u00e9solu": [1, 11, 15, 29, 59, 68, 96, 110, 175], "Des": [1, 12, 41, 49, 175], "appliqu": [1, 2, 6, 8, 25, 27, 34, 44, 45, 49, 52, 55, 56, 60, 64, 68, 82, 83, 92, 98, 99, 100, 101, 104, 108, 112, 113, 117, 123, 130, 136, 146, 152, 154, 155, 158, 160, 163, 164, 168, 170, 174, 175, 176, 178, 179, 181, 183], "efficient": [1, 35, 69], "practical": 1, "preconditioning": 1, "solving": 1, "laplacian": 1, "survey": 1, "driven": 1, "dictionary": [1, 2, 3, 6, 7, 69, 160, 168, 170, 175, 178], "based": [1, 7, 60, 134, 135], "method": [1, 7, 16, 33, 36, 117, 118, 119, 128, 160, 163, 164, 168, 175, 178], "3d": [1, 33], "modeling": 1, "project": [1, 3, 33], "eul": [1, 33, 69], "archiv": 1, "jam": [1, 14, 28, 33, 36, 44, 58, 73, 74, 81, 82, 106, 113, 132, 133, 134, 135, 140, 147, 160, 163, 164, 168, 174, 175, 181, 183], "2020": [1, 36, 60, 71], "2019": [1, 71], "2018": [1, 71, 113], "2017": [1, 71, 171], "earli": 1, "leetcod": 1, "comp\u00e9tit": 1, "recensent": [1, 91], "plusieur": [1, 3, 16, 19, 28, 33, 35, 36, 39, 44, 46, 49, 52, 53, 57, 83, 84, 86, 87, 88, 89, 90, 93, 103, 114, 117, 124, 130, 131, 133, 135, 136, 138, 143, 145, 146, 147, 153, 154, 160, 163, 172, 175, 176, 177, 180, 181, 183], "ci": [1, 2, 9, 25, 28, 33, 35, 36, 44, 46, 49, 52, 55, 57, 61, 63, 68, 74, 80, 82, 84, 85, 86, 91, 93, 101, 107, 113, 121, 122, 125, 129, 130, 136, 146, 148, 152, 160, 163, 164, 166, 168, 169, 170, 171, 174, 175, 176, 178, 179, 181, 183], "southwestern": 1, "europ": [1, 147], "regional": 1, "contest": 1, "swerc": 1, "pr\u00e9c\u00e9dent": [1, 8, 12, 13, 24, 33, 34, 44, 45, 54, 55, 56, 57, 58, 59, 61, 63, 64, 69, 80, 82, 83, 84, 85, 86, 87, 88, 93, 103, 106, 108, 111, 122, 124, 129, 133, 138, 140, 141, 142, 146, 149, 151, 154, 160, 163, 164, 168, 172, 174, 175, 176, 178, 181, 183], "acm": 1, "icpc": 1, "liv": 1, "castor": 1, "jeun": [1, 147], "coding": [1, 2, 26, 46, 49, 146, 147, 168, 172, 175], "you": [1, 17, 40, 134, 135, 160], "should": [1, 17, 118], "know": [1, 5, 16], "least": [1, 16, 84, 92], "one": [1, 3, 5, 32, 33, 34, 35, 83, 84, 118, 119, 134, 135, 168], "languag": [1, 36, 57, 62, 113, 147, 153, 175, 179], "really": 1, "wel": [1, 7], "it": [1, 7, 17, 25, 28, 33, 40, 60, 67, 69, 89, 90, 129, 134, 135, 160, 168, 174], "preferably": 1, "be": [1, 2, 3, 7, 16, 33, 36, 40, 50, 60, 118, 134, 135, 147, 168, 170, 174], "jav": [1, 42], "ok": [1, 17, 160, 168, 174], "too": [1, 40, 134, 135, 174], "sinc": [1, 40, 134, 135], "pretty": 1, "similar": 1, "will": [1, 40, 60, 134, 135, 168], "expected": [1, 17, 59, 60, 99, 123, 174], "writ": [1, 17, 26, 34, 36, 44, 110, 113, 146, 147, 153, 163, 164, 176], "som": [1, 16, 17, 40], "your": [1, 40], "interview": 1, "amount": 1, "detail": [1, 2, 46, 49, 110, 168, 175], "about": [1, 2, 3, 5, 27, 44, 56, 59, 80, 83, 101, 108, 130, 134, 135, 168, 170, 175, 179, 181], "favorit": 1, "sorting": [1, 175], "how": [1, 3, 17, 33, 34, 46, 83, 134, 135, 141, 164, 175], "do": [1, 9, 26, 33, 40, 43, 50, 73, 74, 134, 135, 147, 160, 164, 174, 175], "bubbl": 1, "log": [1, 33, 40, 42, 48, 52, 60, 73, 83, 100, 110, 125, 140, 143, 147, 155, 164, 166, 176, 178, 181], "two": [1, 16, 17, 33, 34, 60, 92, 134, 135], "say": 1, "quick": [1, 33], "merg": [1, 36, 40, 50, 110], "can": [1, 2, 3, 7, 17, 25, 33, 40, 46, 76, 164, 168, 169, 170], "highly": 1, "useful": 1, "situat": [1, 160, 162, 174, 181], "wher": [1, 3, 33, 34, 134, 135, 168], "impractical": 1, "so": [1, 17, 50, 60, 134, 135], "tak": [1, 35], "look": [1, 33], "hashtabl": 1, "arguably": 1, "singl": [1, 36], "most": [1, 2, 3, 39, 44, 46, 73, 74, 76, 77, 82, 134, 135, 160, 163, 164, 168, 170, 174, 175, 178, 183], "import": [1, 2, 3, 5, 7, 16, 17, 18, 21, 22, 23, 25, 27, 28, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 49, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 164, 166, 169, 170, 171, 172, 174, 175, 176, 179, 181, 183], "known": 1, "mankind": 1, "absolutely": 1, "they": [1, 40, 168, 178], "work": [1, 26], "able": 1, "only": [1, 3, 7, 178], "spac": [1, 52, 118], "basic": [1, 5, 46], "construct": [1, 59, 84, 117, 130, 146, 147, 161, 167, 173, 175, 181, 183], "traversal": 1, "manipul": [1, 8, 12, 18, 19, 27, 30, 31, 32, 44, 45, 49, 113, 136, 146, 154, 160, 163, 172, 174, 177, 178], "familiariz": 1, "yourself": 1, "with": [1, 2, 3, 7, 16, 17, 18, 26, 33, 34, 36, 44, 46, 50, 52, 70, 110, 113, 118, 121, 128, 129, 130, 134, 135, 147, 153, 163, 164, 166, 168, 172, 174, 175, 176, 181], "binary": [1, 42, 176], "ary": 1, "familiar": 1, "typ": [1, 2, 16, 24, 25, 26, 33, 34, 39, 40, 41, 43, 52, 59, 73, 74, 77, 82, 99, 101, 104, 105, 110, 113, 117, 118, 119, 121, 122, 131, 135, 136, 138, 140, 141, 146, 148, 149, 154, 161, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 179, 181, 183], "balanced": 1, "wheth": [1, 50, 168], "red": [1, 36, 52, 78, 79, 103, 121, 168], "black": [1, 99, 168], "splay": 1, "avl": [1, 141], "implemented": 1, "understand": 1, "treetraversal": 1, "bf": 1, "df": [1, 7, 17, 23, 34, 36, 43, 53, 60, 61, 63, 66, 82, 87, 88, 91, 103, 109, 110, 115, 116, 121, 125, 130, 131, 147, 175], "different": [1, 3, 16, 17, 34, 85, 86, 134, 135, 178], "between": [1, 17, 134, 135, 178], "inord": 1, "postord": 1, "preord": 1, "are": [1, 16, 17, 33, 40, 118, 134, 135, 168, 175, 178], "ther": [1, 16, 40, 134, 135], "way": [1, 3, 6, 33, 34, 46, 112, 134, 135], "represent": [1, 7, 113, 128], "memory": [1, 7, 43, 168], "pointer": 1, "adjacency": 1, "each": [1, 16, 33, 34, 35, 58, 60, 66, 85, 86, 88, 95, 107, 113, 114, 115, 125, 128, 134, 135, 137, 143, 153, 168], "pros": 1, "con": [1, 59, 147], "breadth": 1, "first": [1, 7, 33, 115, 134, 135, 168], "depth": [1, 62], "their": [1, 7, 134, 135], "computational": 1, "complexity": [1, 141], "tradeoff": 1, "them": [1, 3, 16, 35, 178], "real": 1, "if": [1, 2, 3, 7, 16, 17, 19, 21, 24, 25, 26, 27, 28, 34, 39, 40, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 160, 163, 164, 168, 170, 174, 175, 176, 178, 179, 181, 183], "get": [1, 2, 3, 25, 26, 33, 34, 42, 43, 44, 56, 66, 68, 69, 74, 83, 114, 117, 118, 121, 122, 125, 131, 137, 140, 141, 153, 160, 168, 170, 174, 175, 179, 181], "chanc": [1, 70, 91, 113, 147, 178], "try": [1, 19, 21, 24, 25, 33, 34, 35, 36, 44, 45, 55, 73, 77, 82, 84, 91, 99, 128, 131, 145, 147, 148, 160, 164, 169, 174, 175, 179, 183], "study": [1, 17], "up": [1, 17, 34, 44], "fanci": 1, "such": [1, 3, 134, 135, 183], "dijkstr": 1, "other": [1, 7, 50, 153, 168], "many": [1, 16, 17, 33, 60, 118, 134, 135, 174], "especially": 1, "famous": 1, "knapsack": 1, "recogniz": 1, "when": [1, 6, 9, 134, 135, 168], "ask": 1, "disguis": 1, "find": [1, 7, 16, 17, 43, 44, 70, 121, 175, 183], "out": [1, 7, 17, 26, 34, 40, 50, 74, 76, 77, 134, 135, 160, 164, 174], "whatnp": 1, "mean": [1, 33, 34, 35, 36, 52, 58, 60, 61, 66, 84, 85, 86, 87, 88, 89, 90, 91, 95, 107, 113, 114, 115, 119, 125, 128, 137, 143, 153, 160], "mathematic": 1, "interviewer": 1, "discret": [1, 83], "math": [1, 16, 27, 33, 34, 72, 73, 78, 79, 89, 94, 104, 111, 113, 125, 130, 140, 142, 143, 146, 147, 149, 155, 160, 164, 174, 178, 181], "question": [1, 16, 27, 33, 34, 35, 44, 49, 58, 61, 63, 64, 68, 69, 72, 73, 75, 80, 82, 83, 85, 87, 88, 89, 90, 92, 110, 121, 142, 148, 154, 160, 161, 168, 174, 181], "this": [1, 3, 7, 16, 17, 40, 50, 56, 128, 134, 135, 168, 174, 178, 181], "mor": [1, 5, 35, 110], "prevalent": 1, "than": [1, 16, 17, 33, 125, 134, 135], "compan": 1, "becaus": 1, "counting": 1, "probability": 1, "101": [1, 33, 36], "surround": 1, "us": 1, "spend": [1, 134, 135], "befor": [1, 16], "refreshing": 1, "teaching": 1, "essential": 1, "combinatoric": 1, "choos": [1, 134, 135], "ilk": 1, "operating": 1, "process": [1, 3, 7, 183], "thread": [1, 18, 39, 168, 178, 180], "concurrency": 1, "lock": [1, 18, 168, 180], "mutex": 1, "semaphor": [1, 181], "monitor": 1, "knowabout": 1, "deadlock": 1, "livelock": 1, "avoid": [1, 16, 69, 183], "what": [1, 3, 9, 33, 46, 112, 134, 135, 168, 178], "resourc": [1, 60, 168], "need": [1, 17, 40], "context": [1, 163, 164, 174, 181], "switching": 1, "initiated": 1, "by": [1, 3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 44, 117, 118, 119, 128, 134, 135, 147, 163, 168, 178], "underlying": 1, "hardwar": 1, "littl": [1, 5], "scheduling": 1, "world": [1, 34, 44], "rapidly": 1, "moving": 1, "toward": 1, "mult": 1, "cor": [1, 34, 36, 40, 58, 117, 118, 119, 128, 133, 146, 164], "fundamental": 1, "modern": 1, "inform": [1, 2, 6, 16, 24, 25, 26, 27, 34, 44, 45, 49, 53, 56, 70, 87, 88, 99, 110, 113, 118, 121, 122, 146, 149, 160, 163, 164, 166, 168, 170, 172, 174, 176, 178, 179, 183], "design": [1, 160, 181], "distributed": 1, "parallel": [1, 57, 87, 88, 122, 128, 168, 180, 181], "commentaire_accentu": [2, 4, 46], "sourc": [2, 3, 5, 6, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 42, 44, 46, 48, 164, 168, 174, 178], "aid": [2, 24, 28, 33, 44, 52, 57, 62, 63, 68, 84, 107, 118, 146, 147, 150, 151, 152, 163, 168, 174, 175, 176, 178, 181, 183], "contient": [2, 11, 19, 24, 27, 33, 34, 35, 36, 44, 45, 48, 53, 54, 58, 69, 72, 74, 77, 80, 82, 95, 113, 122, 125, 130, 131, 136, 137, 138, 141, 146, 148, 152, 153, 154, 160, 163, 164, 168, 170, 172, 174, 175, 176, 178, 181, 183], "assur": [2, 33, 44, 49, 54, 69, 82, 109, 118, 124, 168, 178, 179, 181], "langag": [2, 3, 5, 12, 24, 25, 27, 31, 33, 34, 35, 36, 41, 45, 47, 48, 49, 62, 63, 72, 73, 83, 85, 86, 101, 104, 106, 113, 117, 118, 122, 124, 136, 137, 138, 146, 147, 148, 153, 154, 161, 162, 163, 164, 166, 168, 169, 170, 173, 176, 178, 179, 180, 181, 183], "con\u00e7u": [2, 46, 49, 176, 178], "anglais": [2, 3, 16, 35, 45, 46, 53, 59, 67, 113, 117, 152, 153, 172, 175, 176, 179, 183], "fait": [2, 3, 10, 12, 16, 18, 20, 21, 24, 25, 27, 28, 33, 34, 35, 44, 45, 46, 48, 49, 52, 54, 55, 57, 59, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 91, 93, 95, 99, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 122, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 146, 147, 148, 151, 154, 160, 163, 168, 170, 171, 174, 175, 176, 178, 179, 181], "alphabet": [2, 27, 46, 62, 70, 75, 140, 174], "ponctuat": [2, 46], "compris": [2, 24, 46, 100, 175, 183], "d\u00e9clench": [2, 3, 33, 44, 46, 74, 77, 82, 86, 140, 149, 155, 160, 163, 166, 168, 174, 175, 181], "erreur": [2, 3, 25, 28, 33, 34, 35, 39, 41, 45, 46, 49, 52, 56, 72, 74, 75, 76, 77, 82, 83, 84, 85, 87, 88, 92, 99, 101, 104, 123, 124, 130, 140, 143, 148, 149, 154, 155, 160, 165, 166, 168, 170, 172, 174, 175], "fil": [2, 3, 7, 29, 39, 42, 44, 46, 49, 50, 76, 82, 100, 102, 130, 160, 163, 164, 168, 170, 174, 175, 176, 178, 180, 183], "faq_cvxopt": [2, 46], "py": [2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 44, 46, 49, 59, 60, 80, 117, 118, 119, 128, 143, 146, 147, 151, 164, 168, 170, 174, 175, 176, 178], "lin": [2, 3, 7, 28, 32, 33, 34, 39, 44, 46, 49, 73, 76, 79, 85, 86, 113, 117, 145, 160, 163, 164, 166, 168, 170, 174, 175, 178, 183], "syntaxerror": [2, 44, 46, 49, 76, 163, 174, 175], "utf": [2, 26, 34, 36, 46, 49, 70, 109, 113, 146, 147, 153, 164, 168, 172, 175, 176], "starting": [2, 46, 175], "\u00e8": [2, 46, 62, 153], "but": [2, 16, 17, 27, 33, 46, 49, 50, 118, 168, 175], "no": [2, 17, 40, 46, 49, 50, 74, 112, 129, 147, 160, 168, 175, 183], "encoding": [2, 34, 36, 44, 46, 49, 83, 113, 146, 147, 153, 164, 173, 175], "declared": [2, 46, 49, 175], "see": [2, 6, 7, 33, 40, 46, 49, 70, 118, 168, 170, 175], "http": [2, 3, 6, 16, 33, 34, 36, 40, 42, 46, 49, 57, 60, 62, 69, 70, 84, 91, 106, 110, 113, 118, 121, 130, 131, 146, 147, 152, 153, 175], "org": [2, 3, 16, 33, 36, 46, 49, 57, 62, 84, 106, 118, 128, 147, 175], "dev": [2, 12, 33, 34, 40, 46, 58, 66, 68, 84, 85, 86, 88, 95, 107, 113, 114, 115, 125, 128, 137, 143, 147, 153, 168, 175, 178], "pep": [2, 33, 46, 49, 84, 175], "0263": [2, 46, 49, 175], "Pour": [2, 3, 9, 16, 19, 24, 25, 26, 27, 28, 33, 34, 35, 39, 44, 46, 49, 52, 53, 54, 56, 58, 59, 60, 64, 66, 68, 69, 70, 72, 73, 74, 77, 80, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 101, 103, 106, 107, 112, 113, 117, 119, 121, 122, 125, 126, 127, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 152, 154, 160, 163, 164, 168, 170, 172, 174, 175, 176, 178, 179, 181, 183], "r\u00e9soudr": [2, 11, 33, 46, 60, 63, 69, 80, 130, 135, 160, 175, 181], "interpr\u00e9teur": [2, 3, 18, 44, 45, 46, 49, 63, 99, 103, 118, 149, 160, 163, 164, 174, 175, 178], "peuvent": [2, 25, 34, 39, 44, 45, 46, 49, 52, 69, 74, 87, 88, 99, 113, 130, 132, 140, 154, 160, 163, 168, 170, 172, 174, 175, 176, 178, 181], "appara\u00eetr": [2, 26, 44, 46, 69, 115, 160, 168, 174, 175, 176], "\u00e9crir": [2, 3, 19, 20, 24, 27, 34, 35, 37, 41, 46, 49, 52, 58, 65, 66, 68, 69, 76, 81, 82, 87, 88, 89, 90, 101, 104, 105, 109, 111, 114, 122, 123, 130, 136, 137, 138, 140, 142, 143, 146, 147, 148, 149, 152, 154, 155, 160, 164, 168, 170, 172, 174, 175, 176, 178, 179, 181, 183], "lign": [2, 3, 5, 10, 24, 25, 27, 32, 33, 34, 35, 44, 46, 49, 52, 53, 57, 58, 59, 62, 66, 68, 69, 74, 76, 77, 79, 80, 82, 84, 87, 88, 92, 95, 99, 100, 110, 113, 117, 118, 122, 130, 132, 136, 137, 140, 141, 145, 146, 147, 148, 149, 154, 155, 158, 163, 164, 169, 170, 172, 174, 175, 176, 178, 181, 183], "latin": [2, 46, 147, 153, 172, 175], "Ou": [2, 14, 20, 34, 44, 46, 60, 76, 77, 84, 101, 110, 136, 168, 174, 175, 176], "chinois": [2, 46, 69, 153], "\u00e9diteur": [2, 3, 46, 49, 172, 175, 176], "scit": [2, 3, 46], "window": [2, 14, 36, 44, 49, 168, 172, 175, 176], "conseil": [2, 33, 34, 41, 46, 69, 83, 138, 147, 160, 170, 174, 175, 178, 181, 183], "ferm": [2, 33, 44, 46, 93, 146, 163, 164, 176], "fichi": [2, 3, 26, 36, 41, 46, 60, 98, 110, 113, 124, 130, 131, 160, 163, 164, 168, 170, 171, 173, 174, 175, 177, 181, 183], "puis": [2, 3, 9, 13, 22, 28, 34, 35, 36, 44, 46, 49, 52, 56, 60, 61, 64, 69, 70, 73, 80, 85, 86, 87, 89, 90, 91, 100, 101, 103, 106, 111, 116, 125, 140, 141, 143, 146, 155, 156, 160, 166, 168, 170, 174, 175, 176, 178, 179, 181, 183], "r\u00e9ouvr": [2, 46, 176], "trait": [2, 3, 24, 27, 34, 46, 52, 58, 68, 82, 85, 112, 125, 130, 141, 147, 163, 168, 174, 175, 176, 180, 181, 183], "encodag": [2, 46, 163, 172], "norm": [2, 44, 46, 111, 119, 136, 153, 160], "internet": [2, 3, 25, 34, 44, 46, 48, 49, 52, 68, 69, 113, 121, 146, 147, 152, 164, 168, 175, 176, 178, 179, 181], "pourquoi": [2, 5, 19, 27, 33, 36, 44, 52, 56, 58, 60, 63, 68, 69, 74, 76, 77, 87, 88, 107, 113, 122, 136, 140, 146, 148, 158, 160, 163, 168, 174, 175, 176, 178, 181, 183], "pr\u00e9fer": [2, 3, 25, 27, 44, 46, 49, 73, 80, 82, 122, 152, 160, 163, 164, 166, 168, 170, 174, 175, 176, 178, 179], "partag": [2, 33, 34, 39, 45, 46, 49, 56, 62, 160, 168], "pag": [2, 3, 33, 34, 35, 36, 44, 46, 49, 69, 109, 113, 117, 121, 128, 140, 141, 146, 150, 151, 152, 174, 175, 178, 180, 181, 183], "dictionnaire_modifie_dans_la_boucl": [2, 4, 170], "boucl": [2, 12, 18, 19, 24, 27, 28, 34, 35, 37, 39, 41, 58, 59, 62, 63, 66, 69, 72, 73, 74, 75, 76, 77, 80, 82, 85, 86, 98, 106, 111, 123, 137, 148, 156, 160, 163, 164, 166, 168, 170, 173, 181], "parcourt": [2, 25, 28, 44, 58, 62, 63, 69, 74, 75, 137, 168, 170, 174, 176], "\u00e9vit": [2, 24, 28, 35, 36, 39, 44, 58, 59, 64, 66, 68, 69, 72, 74, 80, 82, 84, 87, 89, 90, 103, 108, 133, 136, 140, 143, 147, 151, 160, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 183], "contain": [2, 16, 92, 136, 141, 168, 170], "supprim": [2, 3, 34, 36, 44, 46, 59, 69, 74, 130, 146, 154, 160, 164, 166, 168, 170, 174, 175, 176, 178, 181], "ancien": [2, 138, 147, 160, 168, 170], "d\u00e9but": [2, 3, 34, 35, 36, 39, 44, 46, 57, 59, 69, 82, 105, 113, 119, 120, 160, 168, 169, 170, 174, 175, 178, 181, 183], "rang": [2, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 33, 34, 36, 37, 39, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 105, 106, 107, 108, 111, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 130, 131, 133, 136, 137, 138, 139, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 160, 163, 164, 168, 169, 170, 174, 176, 178, 181], "v": [2, 20, 33, 34, 45, 53, 62, 66, 68, 69, 73, 75, 83, 86, 87, 93, 100, 101, 102, 115, 120, 122, 125, 130, 131, 132, 133, 138, 139, 140, 141, 147, 153, 154, 155, 158, 160, 163, 168, 170, 174, 183], "item": [2, 44, 62, 66, 68, 69, 73, 74, 75, 80, 83, 95, 109, 110, 113, 114, 118, 119, 121, 122, 125, 140, 153, 160, 169, 170, 175], "del": [2, 25, 44, 60, 63, 74, 77, 89, 118, 124, 146, 154, 160, 170, 174, 175, 176], "pr\u00e9viennent": [2, 170], "intervient": [2, 27, 52, 163, 170, 174, 179], "tard": [2, 34, 39, 44, 52, 152, 163, 166, 168, 170, 174, 175, 181], "valeur": [2, 6, 19, 20, 27, 33, 34, 39, 44, 49, 52, 58, 60, 61, 62, 66, 73, 74, 75, 76, 80, 82, 83, 84, 85, 86, 90, 91, 106, 116, 117, 119, 122, 125, 126, 127, 130, 138, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 160, 168, 169, 170, 171, 172, 175, 176, 178], "numer": [2, 3, 19, 27, 31, 33, 34, 45, 46, 49, 75, 82, 83, 87, 88, 106, 119, 124, 130, 136, 143, 146, 152, 154, 160, 170, 174, 175, 176, 179, 180, 183], "inattendu": [2, 146, 164, 170, 174], "traceback": [2, 3, 39, 44, 46, 73, 74, 76, 77, 82, 160, 163, 164, 168, 170, 174, 175, 183], "call": [2, 3, 7, 39, 44, 46, 73, 74, 76, 77, 82, 117, 118, 119, 128, 160, 163, 165, 168, 170, 174, 175, 183], "session1": [2, 170], "176": [2, 37, 82, 103, 170], "liste_modifie_dans_la_boucl": [2, 170], "169": [2, 60, 164, 170], "runtimeerror": [2, 69, 92, 170, 175], "changed": [2, 69, 170, 175], "siz": [2, 7, 26, 28, 33, 43, 52, 53, 57, 61, 69, 87, 88, 115, 150, 151, 168, 170, 175, 176], "during": [2, 69, 170, 175], "stock": [2, 25, 35, 36, 45, 49, 52, 93, 100, 105, 110, 117, 122, 140, 141, 148, 162, 170, 175, 176, 179, 183], "ensuit": [2, 16, 24, 33, 34, 36, 49, 63, 64, 69, 108, 109, 110, 117, 120, 136, 140, 143, 152, 160, 162, 163, 168, 170, 174, 175, 179, 181, 183], "rem": [2, 119, 170], "append": [2, 16, 17, 18, 19, 21, 26, 33, 36, 44, 52, 53, 54, 57, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 73, 74, 75, 76, 77, 79, 80, 82, 83, 87, 88, 89, 90, 91, 95, 100, 101, 102, 103, 105, 106, 110, 111, 115, 116, 118, 119, 121, 122, 124, 125, 129, 131, 133, 137, 138, 139, 141, 145, 146, 150, 151, 154, 156, 160, 168, 169, 170, 174, 175, 176, 178, 181, 183], "r": [2, 3, 16, 19, 25, 26, 28, 33, 34, 36, 42, 43, 44, 46, 52, 56, 58, 59, 60, 61, 62, 63, 65, 68, 70, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 99, 108, 110, 111, 113, 118, 119, 126, 127, 130, 131, 133, 134, 135, 141, 146, 147, 149, 150, 151, 153, 154, 160, 164, 168, 170, 172, 174, 176, 178, 179, 181, 183], "autoris": [2, 68, 86, 101, 147, 160, 168, 170, 171, 174, 176, 178, 181], "absten": [2, 170], "ains": [2, 34, 44, 52, 72, 76, 80, 88, 100, 109, 129, 149, 155, 160, 163, 164, 168, 170, 174, 175, 176, 181], "habitud": [2, 49, 147, 170, 174], "serv": [2, 25, 33, 34, 36, 44, 45, 60, 82, 83, 85, 86, 115, 140, 147, 160, 168, 170, 174, 175, 176, 183], "dix_entiers_carr": [2, 4, 46, 170], "renvoi": [2, 3, 5, 6, 7, 33, 34, 52, 75, 160, 168], "r\u00e9el": [2, 3, 27, 35, 39, 44, 46, 52, 82, 110, 122, 136, 154, 155, 160, 171, 173, 174, 176, 179], "standard": [2, 3, 12, 24, 25, 33, 34, 43, 44, 46, 113, 136, 141, 146, 160, 163, 169, 172, 174, 176, 178, 181], "moment": [2, 20, 33, 46, 49, 57, 82, 99, 100, 102, 107, 113, 143, 147, 148, 154, 160, 168, 172, 174, 175, 176, 181], "impact": [2, 7, 44, 45, 46, 49, 174, 175], "d\u00e9roul": [2, 34, 46, 68, 168, 174, 176], "mot": [2, 13, 20, 34, 38, 46, 68, 70, 73, 76, 77, 80, 96, 100, 109, 138, 141, 146, 147, 148, 152, 160, 163, 168, 170, 174, 175, 176, 178, 181, 183], "cl\u00e9": [2, 19, 20, 24, 34, 36, 38, 45, 46, 66, 69, 70, 73, 74, 75, 83, 100, 104, 122, 124, 126, 127, 138, 141, 146, 148, 152, 160, 163, 170, 174, 176, 178, 181, 183], "rencontr": [2, 44, 46, 140, 160, 163, 174, 176, 178], "commenc": [2, 3, 16, 19, 33, 44, 45, 46, 49, 54, 56, 57, 68, 69, 72, 75, 82, 83, 91, 92, 108, 122, 133, 140, 143, 146, 147, 152, 154, 155, 168, 174, 175, 176, 181, 183], "quitt": [2, 46, 147, 152, 155, 174], "transmet": [2, 46], "modif": [2, 27, 28, 33, 34, 39, 44, 46, 49, 53, 55, 60, 64, 69, 74, 80, 87, 88, 112, 115, 138, 140, 141, 160, 168, 171, 174, 175, 176, 178, 181], "votr": [2, 3, 19, 46, 49, 77, 82, 84, 88, 105, 124, 136, 147, 152, 176, 178, 179], "algorithm": [2, 6, 10, 12, 13, 16, 19, 24, 28, 44, 46, 47, 48, 56, 58, 59, 64, 67, 68, 70, 73, 74, 80, 82, 84, 85, 86, 89, 90, 92, 94, 101, 109, 111, 118, 120, 124, 125, 128, 129, 131, 138, 143, 154, 155, 160, 163, 170, 173, 183], "sp\u00e9cif": [2, 27, 33, 34, 44, 46, 91, 136, 160, 168, 169, 172, 176, 178, 179, 180], "diff\u00e8rent": [2, 170], "mani": [2, 3, 16, 27, 33, 34, 44, 45, 46, 52, 101, 114, 130, 149, 160, 163, 164, 168, 170, 172, 174, 175, 176, 179, 181], "i": [2, 5, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 43, 44, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 163, 164, 166, 168, 169, 170, 174, 175, 176, 178, 181], "11": [2, 3, 7, 12, 14, 16, 22, 27, 28, 33, 34, 36, 42, 43, 44, 46, 49, 52, 53, 54, 56, 58, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 101, 103, 107, 110, 111, 115, 116, 117, 118, 122, 123, 125, 129, 131, 141, 143, 146, 147, 149, 153, 154, 156, 160, 163, 164, 170, 171, 174, 175], "D": [2, 7, 27, 34, 52, 54, 59, 60, 61, 68, 75, 81, 98, 99, 100, 102, 105, 109, 126, 127, 133, 141, 147, 169, 170, 175, 176, 178, 179, 183], "abreg": [2, 9, 44, 149, 170, 175], "sum": [2, 5, 17, 23, 32, 33, 34, 35, 36, 37, 39, 44, 53, 57, 58, 59, 60, 61, 64, 69, 72, 73, 74, 76, 83, 84, 85, 86, 91, 95, 106, 111, 118, 123, 128, 129, 137, 138, 139, 140, 149, 153, 170, 174, 175, 183], "repetition_a_evit": [2, 4, 170], "a_evit": 2, "fals": [2, 3, 6, 7, 16, 23, 24, 33, 34, 35, 36, 42, 44, 46, 53, 56, 57, 59, 60, 64, 66, 70, 72, 91, 92, 102, 103, 108, 110, 111, 118, 121, 124, 136, 137, 141, 160, 163, 168, 174, 175, 181], "r\u00e9p\u00e9tit": [2, 58, 68, 70, 148, 154, 174, 175, 176, 178, 181], "varianc": [2, 27, 59, 74, 83, 84, 87, 88, 143, 170], "observ": [2, 28, 34, 60, 61, 83, 84, 85, 86, 106, 123, 125, 128, 132, 133, 151, 154, 168, 170, 181], "moyen": [2, 3, 18, 25, 27, 33, 36, 44, 46, 52, 58, 60, 61, 74, 82, 83, 84, 122, 129, 132, 138, 139, 142, 143, 148, 151, 155, 160, 168, 170, 174, 176, 178, 183], "len": [2, 16, 17, 19, 24, 26, 27, 28, 33, 34, 44, 52, 53, 54, 55, 56, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 92, 101, 103, 105, 106, 107, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 124, 125, 129, 131, 137, 138, 139, 140, 141, 145, 146, 154, 155, 156, 158, 160, 166, 168, 170, 172, 174, 175, 176, 178, 183], "variance_a_evit": [2, 170], "ob": [2, 53, 61, 63, 66, 83, 103, 110, 124, 170], "passag": [2, 27, 33, 44, 74, 105, 106, 130, 154, 158, 170, 172, 174, 175, 176], "rien": [2, 3, 11, 18, 28, 34, 44, 46, 72, 82, 87, 88, 95, 99, 104, 111, 121, 136, 146, 147, 154, 160, 162, 168, 170, 174, 176, 178, 181], "chang": [2, 3, 6, 20, 28, 33, 34, 35, 36, 42, 44, 46, 48, 49, 52, 53, 57, 59, 61, 63, 64, 69, 83, 87, 88, 91, 95, 99, 106, 121, 130, 137, 138, 141, 147, 151, 155, 160, 166, 168, 169, 170, 172, 174, 175, 176, 181], "vaut": [2, 24, 39, 44, 60, 66, 74, 75, 76, 83, 84, 102, 110, 113, 136, 140, 154, 155, 160, 168, 170, 174, 175, 178, 179, 181], "variabl": [2, 3, 20, 24, 27, 33, 34, 35, 40, 41, 46, 49, 52, 59, 72, 74, 75, 77, 82, 83, 87, 88, 98, 99, 100, 104, 105, 106, 110, 111, 117, 122, 123, 132, 136, 137, 141, 143, 146, 148, 149, 160, 162, 163, 164, 168, 170, 172, 176, 178, 179, 181, 184], "moy": [2, 83, 143, 174], "co\u00fbt": [2, 5, 19, 24, 28, 34, 46, 56, 58, 62, 63, 65, 66, 69, 72, 73, 74, 80, 87, 88, 98, 106, 120, 122, 125, 129, 130, 131, 141, 154, 155, 160], "alor": [2, 3, 19, 27, 33, 34, 44, 46, 49, 52, 53, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 72, 82, 83, 84, 115, 118, 122, 125, 130, 133, 134, 135, 141, 143, 145, 147, 160, 163, 164, 168, 170, 174, 175, 176, 178, 181], "endroit": [2, 44, 49, 69, 85, 110, 160, 164, 166, 168, 172, 174, 175, 176, 178, 181], "survient": [2, 82, 160, 163, 164, 168, 174, 175, 181], "suiv": [2, 3, 6, 12, 16, 19, 20, 27, 33, 34, 35, 36, 39, 44, 46, 49, 54, 58, 60, 62, 66, 68, 69, 70, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 96, 98, 100, 101, 106, 111, 112, 113, 117, 118, 120, 122, 124, 125, 131, 132, 133, 134, 135, 138, 140, 145, 146, 147, 149, 150, 151, 152, 154, 155, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183], "major": [2, 35, 122, 143, 162], "argument": [2, 3, 20, 23, 33, 34, 44, 73, 85, 86, 124, 134, 135, 138, 139, 152, 160, 163, 168, 174, 175, 176, 178, 181], "retourn": [2, 3, 5, 6, 19, 22, 27, 28, 32, 33, 34, 39, 44, 45, 46, 54, 56, 58, 63, 64, 66, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 100, 101, 109, 115, 120, 122, 124, 133, 135, 138, 140, 141, 151, 152, 154, 160, 163, 164, 168, 169, 170, 171, 172, 174, 175, 176, 181, 183], "quelqu": [2, 3, 5, 16, 22, 27, 28, 32, 33, 34, 35, 41, 44, 46, 49, 52, 56, 59, 60, 62, 63, 64, 66, 68, 69, 72, 73, 74, 75, 77, 80, 83, 85, 89, 90, 93, 96, 101, 107, 108, 112, 113, 118, 124, 140, 145, 146, 147, 148, 154, 160, 163, 168, 170, 171, 174, 175, 176, 178, 181], "chos": [2, 25, 27, 28, 34, 44, 49, 62, 63, 64, 68, 69, 72, 73, 75, 83, 92, 101, 104, 113, 118, 119, 122, 138, 143, 145, 147, 148, 160, 162, 163, 168, 171, 174, 175, 176, 177, 178, 181], "tru": [2, 3, 7, 16, 17, 24, 26, 33, 34, 35, 36, 40, 42, 44, 46, 52, 53, 56, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 82, 89, 90, 91, 92, 99, 101, 102, 103, 106, 108, 111, 115, 118, 121, 124, 133, 136, 137, 140, 141, 145, 146, 147, 153, 154, 160, 163, 166, 168, 175, 176, 181], "leaf": [2, 59], "guess": 2, "str2dat": [2, 4, 170], "fmt": [2, 7, 181], "Y": [2, 24, 33, 68, 82, 83, 84, 85, 86, 87, 88, 107, 117, 146, 147, 168, 170, 171, 175], "convert": [2, 3, 5, 7, 25, 34, 35, 36, 44, 76, 82, 83, 91, 99, 113, 118, 130, 140, 146, 147, 149, 160, 163, 170, 171, 172, 174, 175, 176, 178, 179], "format": [2, 12, 17, 25, 33, 34, 36, 44, 52, 54, 58, 60, 65, 66, 68, 82, 83, 115, 121, 129, 136, 147, 154, 160, 163, 166, 168, 170, 172, 173, 177, 178, 179, 181, 183], "genr": [2, 147, 160, 170, 174, 183], "souvent": [2, 3, 27, 33, 34, 36, 39, 44, 46, 48, 49, 52, 56, 59, 63, 74, 77, 82, 84, 87, 88, 102, 103, 104, 107, 117, 118, 120, 124, 136, 140, 146, 148, 154, 160, 163, 164, 166, 168, 169, 170, 174, 175, 176, 178, 179, 181, 183], "pein": [2, 72, 147, 155, 170], "retrouv": [2, 10, 32, 34, 36, 60, 61, 63, 70, 83, 85, 117, 122, 133, 140, 141, 146, 154, 160, 168, 170, 174, 175, 176, 181, 183], "besoin": [2, 3, 25, 27, 33, 34, 37, 44, 46, 49, 63, 66, 69, 80, 82, 92, 101, 115, 122, 136, 140, 147, 148, 160, 164, 166, 170, 172, 175, 176, 178, 179, 181], "strftim": [2, 3, 46, 170, 171], "dt": [2, 3, 46, 60, 61, 66, 91, 129, 170], "strptim": [2, 34, 170], "16": [2, 3, 16, 27, 28, 33, 34, 35, 36, 44, 46, 52, 53, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 71, 73, 74, 75, 77, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 101, 103, 106, 107, 109, 110, 116, 117, 118, 122, 129, 136, 137, 143, 145, 146, 147, 149, 151, 154, 155, 160, 170, 171, 172, 174, 175], "01": [2, 7, 19, 27, 33, 34, 36, 52, 53, 69, 83, 84, 87, 88, 111, 170], "2014": [2, 34, 71, 134, 135, 170], "compt": [2, 3, 4, 19, 23, 27, 34, 46, 56, 57, 58, 60, 69, 70, 73, 74, 82, 83, 85, 86, 87, 88, 91, 92, 93, 102, 111, 114, 117, 122, 124, 136, 140, 147, 148, 152, 160, 166, 169, 170, 174, 175, 176, 178, 181, 183], "li": [2, 16, 19, 27, 44, 58, 60, 74, 105, 120, 122, 147, 154, 160, 162, 168, 170, 174, 175, 176, 178, 179, 183], "occurrent": [2, 19, 44, 70, 152, 170, 175], "tableau": [2, 19, 22, 24, 27, 31, 32, 45, 53, 57, 59, 63, 72, 76, 80, 85, 88, 98, 101, 105, 108, 111, 113, 115, 117, 121, 125, 130, 131, 132, 133, 136, 137, 141, 145, 154, 155, 163, 170, 175, 176, 181, 183], "Par": [2, 3, 19, 27, 28, 33, 34, 36, 44, 46, 49, 58, 59, 70, 72, 73, 74, 82, 84, 92, 125, 130, 146, 154, 155, 160, 163, 168, 170, 172, 174, 175, 176, 181, 183], "pourr": [2, 28, 33, 34, 36, 45, 57, 58, 61, 62, 63, 64, 68, 69, 74, 82, 85, 86, 92, 99, 103, 109, 112, 113, 124, 130, 141, 142, 146, 147, 152, 160, 163, 164, 166, 168, 170, 174, 175, 176, 181], "popular": [2, 170, 178], "discour": [2, 146, 147, 170], "polit": [2, 170], "\u00e9tendu": [2, 168, 170, 174], "vocabulair": [2, 136, 170], "not": [2, 3, 7, 8, 12, 13, 16, 19, 25, 26, 27, 33, 34, 41, 43, 44, 50, 52, 53, 56, 59, 60, 62, 64, 66, 69, 73, 74, 75, 77, 92, 95, 97, 100, 102, 103, 109, 118, 123, 130, 132, 134, 135, 137, 142, 143, 146, 147, 153, 155, 160, 163, 164, 168, 170, 174, 175, 176, 179, 181, 183], "else": [2, 3, 16, 17, 19, 25, 44, 45, 46, 49, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 72, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 99, 100, 101, 102, 103, 107, 109, 111, 114, 115, 118, 120, 122, 124, 129, 131, 133, 136, 137, 138, 139, 140, 143, 145, 148, 153, 154, 155, 156, 160, 163, 164, 168, 170, 175, 176, 178, 179], "appropri": [2, 44, 160, 170], "puisqu": [2, 22, 33, 36, 60, 63, 66, 68, 69, 72, 74, 75, 80, 87, 106, 111, 117, 118, 125, 140, 143, 155, 160, 163, 168, 170, 174, 175, 181], "faudr": [2, 3, 27, 34, 35, 44, 46, 53, 60, 61, 63, 68, 75, 82, 87, 88, 89, 90, 91, 92, 95, 100, 101, 112, 113, 130, 140, 152, 160, 168, 170, 174, 175, 178, 181, 183], "ceux": [2, 3, 16, 33, 35, 44, 46, 48, 49, 56, 60, 69, 77, 92, 117, 130, 136, 147, 148, 160, 163, 168, 170, 174, 175, 176, 178, 179, 181, 183], "immuabl": [2, 105, 140, 154, 169, 170, 173, 174, 176], "illustr": [2, 33, 34, 120, 140, 160, 168, 170, 175, 176, 178, 183], "mat": [2, 5, 22, 25, 32, 35, 44, 53, 56, 57, 59, 66, 73, 77, 78, 79, 80, 81, 87, 88, 122, 129, 137, 146, 147, 160, 170, 176, 179], "str": [2, 3, 6, 7, 16, 21, 44, 46, 67, 74, 76, 82, 99, 100, 101, 102, 109, 113, 137, 145, 146, 147, 149, 160, 163, 168, 170, 172, 174, 176, 178, 179, 181, 183], "tupl": [2, 3, 6, 7, 16, 19, 33, 34, 44, 46, 68, 69, 74, 92, 95, 98, 118, 122, 124, 140, 154, 160, 169, 170, 174, 176], "Les": [2, 3, 5, 8, 10, 11, 12, 16, 18, 20, 22, 23, 24, 27, 33, 34, 35, 36, 38, 39, 41, 45, 46, 49, 52, 53, 59, 60, 62, 66, 67, 68, 70, 76, 82, 84, 89, 90, 91, 92, 95, 96, 98, 101, 104, 109, 112, 113, 117, 118, 121, 122, 124, 125, 131, 132, 136, 140, 141, 143, 144, 146, 147, 148, 149, 153, 154, 160, 162, 166, 167, 170, 172, 173, 175, 176, 178, 179, 181], "why": [2, 170], "key": [2, 4, 7, 34, 42, 44, 68, 69, 92, 95, 109, 122, 131, 133, 168, 170, 174, 175], "\u00e9gal": [2, 3, 5, 19, 27, 28, 32, 33, 34, 35, 36, 44, 45, 46, 53, 56, 58, 59, 60, 61, 68, 69, 76, 82, 83, 84, 85, 86, 92, 93, 95, 101, 102, 104, 111, 113, 115, 117, 118, 120, 121, 122, 126, 127, 132, 136, 141, 143, 147, 154, 160, 166, 168, 169, 170, 174, 175, 176, 178, 181, 183], "vouloir": [2, 73, 147, 168, 170], "m\u00e9moris": [2, 27, 44, 54, 74, 75, 133, 136, 160, 164, 166, 168, 170, 181, 183], "ident": [2, 11, 22, 36, 44, 49, 54, 62, 63, 64, 69, 82, 87, 92, 99, 101, 103, 109, 117, 122, 140, 144, 145, 160, 163, 168, 170, 172, 174, 175, 176, 178, 183], "doit": [2, 3, 6, 27, 34, 36, 39, 44, 45, 46, 49, 52, 56, 60, 69, 73, 82, 83, 86, 87, 88, 89, 90, 92, 99, 113, 122, 124, 126, 127, 130, 133, 136, 138, 141, 148, 154, 160, 163, 168, 170, 172, 174, 175, 176, 178, 179, 183], "enumerat": [2, 53, 58, 59, 60, 63, 69, 70, 73, 76, 80, 82, 83, 87, 89, 90, 99, 101, 110, 112, 113, 115, 121, 122, 131, 140, 141, 147, 154, 155, 164, 166, 169, 170, 174, 176], "S": [2, 19, 34, 44, 45, 52, 60, 61, 68, 69, 80, 82, 87, 93, 120, 126, 127, 130, 141, 145, 154, 160, 163, 168, 170, 171, 174, 175, 178, 183], "suff": [2, 3, 9, 24, 27, 44, 46, 49, 54, 58, 60, 63, 65, 69, 72, 74, 75, 80, 82, 83, 84, 85, 87, 88, 92, 93, 100, 106, 131, 136, 137, 141, 143, 148, 154, 160, 168, 170, 172, 174, 175, 178, 181, 183], "just": [2, 3, 16, 25, 28, 33, 46, 58, 66, 85, 87, 101, 111, 118, 138, 162, 163, 170, 174, 175], "\u00e9critur": [2, 3, 5, 19, 22, 25, 26, 31, 32, 33, 44, 46, 65, 93, 101, 104, 113, 122, 138, 146, 149, 154, 160, 162, 163, 170, 174, 175, 176, 178, 179, 183], "construit_matrice_carre": [2, 4], "construit": [2, 6, 27, 34, 44, 53, 55, 58, 62, 69, 73, 78, 79, 80, 83, 88, 99, 111, 132, 133, 147, 160, 168, 174, 175, 176, 181], "rempl": [2, 52, 77, 81, 130, 131, 140, 154, 176, 178, 183], "z\u00e9ro": [2, 27, 33, 34, 44, 52, 58, 155, 163, 168, 175], "dimens": [2, 19, 24, 27, 34, 35, 36, 44, 59, 84, 87, 93, 96, 118, 120, 123, 136, 151, 160, 168, 175, 176], "enumerate_permut": [2, 4], "enumer": 2, "enumerate_permutations_recurs": [2, 4], "integral": [2, 4, 143, 170], "int\u00e9gral": [2, 3, 44, 46, 82, 98, 178, 181, 183], "rienmann": [2, 143], "born": [2, 69, 143], "recevoir": [2, 82, 146, 160, 163, 168, 170, 174], "inclut": [2, 27, 44, 45, 58, 85, 86, 133, 136, 160, 163, 170, 174, 175, 176, 178, 181], "calcul_n_valeur": [2, 160, 170], "prend": [2, 3, 27, 34, 46, 52, 54, 56, 60, 67, 69, 73, 76, 79, 82, 87, 88, 89, 90, 101, 104, 106, 109, 114, 117, 122, 123, 124, 131, 151, 152, 160, 168, 170, 174, 175, 176], "fonction_carr": [2, 170], "fonction_cub": [2, 170], "ex\u00e9cut": [2, 3, 20, 26, 27, 39, 44, 45, 46, 49, 69, 73, 74, 85, 86, 99, 100, 103, 117, 118, 124, 147, 148, 154, 160, 163, 164, 166, 168, 170, 174, 175, 176, 178, 181], "re": [2, 16, 18, 21, 25, 26, 36, 53, 60, 62, 63, 66, 67, 68, 72, 73, 79, 80, 82, 83, 84, 87, 88, 91, 92, 94, 95, 110, 112, 115, 116, 118, 119, 125, 128, 133, 137, 141, 145, 146, 147, 153, 156, 160, 170, 175, 176, 178, 179, 181, 183], "l1": [2, 3, 27, 46, 154, 160, 170, 174, 175], "9": [2, 16, 17, 19, 26, 27, 28, 33, 34, 35, 36, 37, 44, 46, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 101, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 131, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 160, 163, 164, 169, 170, 171, 174, 175, 181, 183], "l2": [2, 3, 27, 44, 46, 80, 154, 160, 170, 174, 175], "mat2text": [2, 4, 170], "sep_row": 2, "sep_col": 2, "fn": [2, 6, 7, 44, 70, 118, 170], "text2mat": [2, 4, 170], "s\u00e9par": [2, 41, 58, 68, 85, 86, 100, 122, 132, 146, 149, 150, 151, 152, 153, 168, 170, 174, 175, 176, 183], "colon": [2, 5, 32, 34, 35, 44, 66, 84, 88, 110, 122, 130, 136, 145, 146, 160, 168, 170, 176, 183], "case11": [2, 170], "case12": [2, 170], "case13": [2, 170], "case21": [2, 170], "case22": [2, 170], "case23": [2, 170], "join": [2, 16, 21, 33, 36, 44, 57, 62, 68, 70, 76, 77, 99, 100, 101, 102, 112, 115, 117, 119, 128, 137, 141, 146, 147, 156, 164, 170, 174, 175, 176, 178, 183], "mat2vect": [2, 4, 170], "vect2mat": [2, 4, 170], "car": [2, 3, 18, 19, 20, 25, 27, 28, 33, 34, 35, 44, 45, 46, 49, 52, 54, 56, 58, 59, 61, 62, 63, 66, 68, 69, 73, 74, 76, 79, 80, 82, 83, 85, 86, 87, 88, 90, 92, 95, 99, 101, 106, 107, 111, 113, 118, 122, 125, 129, 131, 140, 143, 146, 148, 149, 151, 154, 160, 162, 163, 164, 166, 168, 170, 172, 174, 175, 176, 178, 179, 181], "donc": [2, 18, 19, 24, 27, 28, 33, 34, 35, 36, 44, 45, 52, 53, 59, 60, 61, 62, 63, 69, 70, 74, 80, 82, 84, 85, 91, 92, 93, 101, 102, 108, 111, 121, 129, 130, 131, 132, 133, 143, 147, 153, 155, 156, 160, 163, 169, 170, 174, 175, 176, 178, 179, 181, 183], "indic": [2, 6, 19, 24, 28, 33, 34, 36, 39, 44, 45, 58, 63, 66, 69, 72, 76, 77, 80, 89, 90, 121, 122, 151, 154, 158, 160, 163, 164, 168, 169, 170, 174, 175, 183], "bien": [2, 3, 9, 18, 24, 27, 33, 36, 46, 49, 52, 54, 55, 56, 57, 59, 63, 64, 68, 69, 72, 82, 85, 86, 87, 89, 90, 91, 102, 104, 106, 108, 110, 111, 117, 121, 122, 124, 130, 136, 147, 148, 149, 151, 153, 160, 163, 164, 166, 168, 170, 174, 175, 176], "s\u00fbr": [2, 27, 28, 56, 60, 63, 66, 69, 77, 82, 131, 136, 155, 170, 175, 176], "const": [2, 3, 18, 20, 33, 35, 46, 60, 83, 129, 136, 143, 160, 170, 171, 181], "Vous": [2, 33, 34, 35, 63, 68, 117, 130, 141, 146, 147, 170], "pouv": [2, 33, 35, 68, 82, 85, 86, 92, 117, 130, 141, 147, 152, 170], "reduc": [2, 16, 106, 118, 119, 128, 170], "from": [2, 3, 7, 16, 18, 21, 25, 26, 33, 34, 35, 36, 43, 44, 45, 50, 53, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 73, 78, 79, 82, 84, 87, 89, 90, 91, 92, 94, 95, 103, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 128, 129, 130, 131, 133, 134, 135, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 158, 160, 164, 169, 170, 174, 176, 178, 179, 183], "functool": [2, 106, 170], "lambd": [2, 7, 15, 27, 29, 33, 58, 77, 83, 92, 114, 116, 117, 126, 127, 133, 138, 139, 142, 143, 170, 178], "minindex": [2, 4, 170], "min": [2, 17, 28, 33, 34, 44, 53, 55, 56, 58, 59, 63, 64, 66, 72, 78, 82, 83, 84, 87, 88, 92, 95, 99, 124, 130, 131, 133, 137, 156, 170, 174, 175], "minium": [2, 170], "r\u00e9flex": [2, 15, 29, 96, 146, 152, 166, 170, 175], "recod": [2, 170], "conserv": [2, 3, 20, 25, 33, 34, 45, 46, 54, 66, 68, 80, 85, 102, 122, 129, 133, 154, 155, 160, 169, 170, 174, 175, 176, 179], "434": [2, 119, 170], "43": [2, 22, 33, 34, 36, 69, 82, 86, 87, 112, 118, 121, 140, 153, 160, 170, 174], "6436": [2, 170], "Mais": [2, 27, 28, 34, 35, 44, 56, 58, 61, 62, 66, 68, 69, 70, 73, 74, 76, 95, 99, 100, 101, 104, 120, 122, 125, 130, 140, 151, 152, 158, 160, 164, 170, 175, 181, 183], "astuc": [2, 3, 15, 29, 35, 41, 46, 57, 58, 102, 147, 170, 178, 181], "obten": [2, 26, 27, 33, 34, 44, 58, 63, 66, 107, 111, 115, 130, 131, 137, 140, 143, 146, 152, 160, 168, 170, 172, 174, 175, 176, 183], "reprogramm": [2, 168, 170], "chois": [2, 6, 27, 28, 33, 34, 35, 39, 44, 49, 52, 59, 60, 63, 68, 69, 81, 83, 87, 88, 89, 90, 92, 93, 100, 102, 103, 105, 108, 111, 123, 126, 127, 130, 131, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 160, 164, 168, 170, 174, 175, 176, 179, 183], "coupl": [2, 24, 33, 44, 45, 52, 53, 66, 80, 87, 88, 111, 117, 122, 140, 141, 154, 160, 163, 168, 170, 174, 175, 181, 183], "d\u00e9parteg": [2, 170], "exaequo": [2, 170], "45": [2, 33, 34, 36, 37, 59, 69, 84, 95, 112, 118, 121, 149, 153, 170, 174, 175], "56": [2, 33, 36, 37, 69, 83, 84, 87, 88, 138, 153, 160, 170, 181, 183], "permet": [2, 3, 11, 19, 24, 26, 27, 28, 31, 33, 34, 35, 36, 44, 46, 49, 52, 54, 55, 56, 62, 64, 70, 74, 82, 83, 84, 85, 86, 89, 90, 99, 100, 101, 104, 106, 110, 113, 117, 118, 122, 123, 130, 136, 137, 138, 140, 141, 142, 146, 147, 148, 154, 160, 162, 163, 164, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 183], "\u00e7a": [2, 21, 35, 62, 64, 66, 67, 104, 118, 136, 140, 141, 162, 170, 172, 182], "pris": [2, 23, 24, 58, 143, 147, 148, 152, 166, 168, 170, 176], "aucun": [2, 24, 25, 35, 44, 45, 49, 52, 53, 56, 57, 59, 66, 68, 74, 82, 91, 130, 131, 146, 147, 160, 163, 164, 168, 170, 174, 175, 176, 178], "bout": [2, 44, 48, 49, 58, 62, 80, 82, 100, 122, 143, 145, 146, 163, 169, 170, 175], "pr\u00e9senc": [2, 34, 49, 152, 160, 170, 175, 178, 183], "second": [2, 3, 5, 6, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 35, 44, 46, 49, 52, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 69, 74, 80, 82, 83, 87, 88, 90, 92, 100, 101, 103, 104, 106, 108, 117, 119, 120, 128, 129, 131, 137, 138, 140, 143, 145, 146, 147, 148, 149, 154, 160, 163, 164, 170, 171, 174, 175, 176, 178, 179, 181, 183], "probabl": [2, 33, 52, 53, 63, 70, 88, 91, 92, 106, 111, 118, 138, 160, 170], "faibl": [2, 52, 53, 63, 69, 125, 170], "recherche_dichotom": [2, 4, 110, 120, 170], "id\u00e9": [2, 19, 52, 53, 54, 56, 57, 58, 63, 65, 69, 80, 82, 89, 90, 94, 95, 106, 107, 113, 118, 124, 125, 129, 130, 152, 168, 170, 176], "\u00e9limin": [2, 11, 16, 68, 154, 170, 183], "moiti": [2, 28, 52, 56, 93, 120, 154, 155, 170], "whil": [2, 16, 17, 19, 26, 28, 43, 52, 53, 54, 57, 59, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 79, 80, 82, 87, 88, 89, 101, 103, 106, 107, 108, 109, 110, 111, 113, 115, 116, 118, 120, 124, 131, 133, 137, 143, 145, 154, 155, 156, 158, 160, 170, 175, 181, 183], "elif": [2, 3, 19, 44, 45, 46, 58, 59, 62, 75, 80, 83, 85, 86, 89, 90, 92, 99, 101, 103, 115, 120, 145, 154, 155, 156, 160, 168, 170, 174], "interven": [2, 69, 92, 106, 160, 168, 170, 176, 181], "addit": [2, 27, 44, 68, 69, 74, 82, 111, 136, 148, 154, 160, 170, 174, 175], "schem": [2, 44, 73, 141, 160, 163, 168, 170, 174, 176, 179, 181], "initialis": [2, 6, 33, 35, 49, 52, 64, 99, 130, 133, 136, 160, 170, 174, 175], "6456": [2, 170], "6933": [2, 170], "integr": [2, 3, 12, 46, 124, 142, 143, 163, 170, 174, 175, 180, 181], "sen": [2, 6, 27, 28, 33, 35, 44, 58, 62, 63, 73, 76, 105, 108, 113, 147, 163, 168, 170, 171, 174, 176], "Et": [2, 3, 19, 20, 25, 26, 28, 34, 35, 44, 46, 49, 56, 59, 60, 63, 66, 74, 82, 87, 88, 89, 90, 92, 100, 103, 104, 107, 108, 111, 113, 120, 122, 123, 136, 141, 142, 144, 147, 151, 162, 163, 166, 168, 169, 170, 174, 176, 178, 179, 181], "gr\u00e2c": [2, 44, 49, 89, 90, 160, 168, 170, 175, 176, 178, 179, 183], "s1": [2, 104, 113, 170], "s2": [2, 34, 44, 104, 170, 175, 176], "s3": [2, 170], "map": [2, 18, 77, 114, 125, 134, 135, 141, 168, 170, 174, 181], "avantag": [2, 147, 160, 168, 170, 174, 175, 176], "derni": [2, 23, 24, 28, 34, 36, 44, 45, 49, 58, 60, 62, 64, 66, 68, 69, 70, 72, 73, 76, 77, 80, 82, 87, 88, 89, 90, 102, 109, 114, 130, 133, 138, 140, 141, 154, 160, 163, 164, 168, 170, 174, 175, 176, 178, 180, 181], "elles": [2, 3, 20, 24, 25, 31, 33, 36, 44, 45, 46, 49, 57, 60, 62, 69, 89, 90, 91, 92, 93, 129, 130, 140, 146, 147, 160, 162, 163, 168, 170, 174, 175, 176, 178, 181, 183], "\u00e9vitent": [2, 170], "cr\u00e9ation": [2, 33, 34, 44, 45, 59, 69, 100, 138, 140, 146, 154, 160, 168, 170, 174, 176, 178, 181], "interm\u00e9diair": [2, 22, 44, 75, 76, 140, 141, 149, 163, 166, 170, 174, 175, 176, 179, 181], "prendr": [2, 18, 24, 27, 34, 35, 49, 52, 57, 60, 63, 69, 80, 109, 117, 124, 130, 140, 142, 146, 147, 152, 160, 170, 174, 175, 178, 183], "laquel": [2, 33, 35, 45, 49, 53, 69, 74, 75, 82, 93, 103, 117, 131, 138, 143, 154, 160, 168, 170, 174, 175, 181], "volumin": [2, 170, 175], "suivent": [2, 44, 60, 146, 147, 163, 168, 170, 174, 175, 176, 178, 183], "permettent": [2, 34, 39, 44, 45, 49, 52, 82, 99, 104, 118, 136, 146, 147, 154, 160, 162, 163, 166, 168, 170, 174, 175, 176, 178, 181, 183], "proced": [2, 44, 106, 110, 113, 120, 154, 160, 168, 170, 176, 178, 181], "r\u00e9cuper": [2, 26, 33, 35, 44, 45, 69, 70, 75, 91, 113, 121, 130, 131, 146, 147, 163, 165, 168, 169, 170, 171, 172, 174, 175, 176, 183], "depuis": [2, 3, 19, 23, 26, 33, 34, 35, 36, 44, 45, 46, 70, 91, 121, 130, 131, 136, 140, 160, 163, 168, 169, 170, 171, 172, 176, 178, 179, 181], "proven": [2, 3, 46, 168, 170, 181], "tableur": [2, 170, 176], "d\u00e9composit": [2, 13, 27, 33, 52, 98, 170], "split": [2, 7, 34, 44, 62, 109, 112, 117, 128, 130, 134, 135, 146, 147, 168, 170, 175, 176, 178, 183], "tres": [2, 3, 9, 21, 24, 25, 27, 28, 33, 34, 36, 38, 39, 44, 46, 52, 53, 62, 63, 64, 66, 67, 69, 70, 73, 80, 83, 89, 90, 92, 95, 99, 102, 103, 110, 113, 118, 120, 122, 124, 125, 129, 130, 137, 140, 146, 147, 148, 154, 160, 163, 166, 168, 169, 170, 174, 175, 176, 178, 179], "travaill": [2, 33, 49, 82, 124, 147, 163, 170], "pand": [2, 12, 15, 16, 17, 29, 30, 31, 33, 53, 60, 61, 63, 66, 83, 87, 88, 91, 103, 109, 110, 115, 116, 121, 125, 130, 131, 147, 170, 175], "robust": [2, 170], "consider": [2, 3, 19, 24, 27, 33, 34, 36, 39, 44, 46, 54, 56, 58, 69, 73, 74, 82, 84, 85, 88, 89, 90, 92, 93, 102, 115, 118, 122, 124, 131, 132, 133, 136, 140, 148, 152, 160, 162, 164, 168, 170, 174, 175, 178, 181, 183], "to_csv": [2, 34, 91, 110, 147, 170], "read_csv": [2, 16, 34, 36, 60, 91, 110, 130, 131, 147, 170], "direct": [2, 3, 24, 33, 34, 44, 49, 54, 59, 60, 69, 80, 81, 83, 118, 124, 134, 135, 136, 144, 145, 152, 154, 160, 163, 164, 170, 174, 175, 176], "enregistr": [2, 26, 34, 35, 44, 58, 110, 118, 121, 146, 147, 160, 170, 176, 178, 183], "excel": [2, 12, 44, 49, 170, 176], "read_excel": [2, 36, 110, 170], "to_excel": [2, 34, 110, 170], "triindex": [2, 4, 170], "quicksort": [2, 170], "consist": [2, 11, 20, 21, 28, 34, 44, 49, 54, 57, 58, 60, 64, 65, 68, 69, 80, 82, 83, 84, 89, 90, 101, 106, 113, 120, 130, 140, 143, 147, 152, 154, 160, 168, 170, 174, 175, 176, 178, 179, 181, 183], "pet": [2, 3, 5, 8, 19, 21, 23, 27, 33, 35, 44, 46, 52, 53, 56, 58, 60, 62, 69, 70, 72, 74, 80, 82, 87, 92, 93, 109, 112, 113, 123, 130, 138, 143, 148, 153, 163, 170, 174, 175], "\u00e9chang": [2, 18, 66, 80, 101, 113, 146, 160, 168, 170, 175, 176, 181], "plac": [2, 5, 16, 44, 46, 49, 68, 69, 80, 82, 85, 86, 101, 103, 119, 122, 124, 130, 147, 153, 154, 160, 170, 174, 175, 176, 178, 181, 183], "recomment": [2, 35, 87, 128, 129, 147, 153, 170, 181], "proc\u00e9dur": [2, 147, 170, 178], "troisiem": [2, 35, 44, 49, 56, 63, 80, 120, 137, 140, 146, 160, 163, 168, 170, 174, 175, 176, 181, 183], "jusqu": [2, 11, 16, 19, 28, 37, 44, 49, 52, 56, 60, 62, 63, 69, 73, 74, 82, 100, 101, 132, 143, 156, 160, 163, 164, 168, 169, 170, 174, 175, 176, 181], "6": [2, 3, 6, 9, 11, 18, 20, 21, 25, 27, 28, 32, 33, 35, 36, 37, 44, 46, 49, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 132, 135, 136, 137, 138, 139, 140, 141, 143, 145, 149, 156, 160, 162, 166, 168, 169, 170, 171, 172, 174, 175, 181, 183], "exclu": [2, 19, 28, 44, 49, 72, 85, 86, 105, 149, 154, 168, 170, 174, 175], "pos": [2, 16, 27, 49, 61, 66, 68, 74, 80, 81, 83, 84, 87, 88, 89, 90, 92, 103, 109, 110, 115, 122, 131, 137, 160, 162, 168, 170, 176, 183], "ech": [2, 80, 170], "selon": [2, 33, 34, 36, 44, 45, 49, 60, 63, 69, 73, 85, 86, 87, 89, 90, 95, 103, 115, 118, 126, 127, 129, 136, 146, 154, 160, 163, 168, 170, 172, 174, 175, 176, 183], "timsort": [2, 125, 170], "parfois": [2, 16, 20, 25, 33, 36, 44, 49, 56, 82, 91, 101, 109, 128, 130, 138, 160, 163, 164, 166, 168, 169, 170, 172, 174, 175, 176, 178, 179, 181], "amen": [2, 69, 170], "parc": [2, 3, 24, 25, 34, 39, 44, 46, 49, 60, 63, 74, 136, 137, 147, 160, 163, 170, 174, 175], "moin": [2, 3, 5, 19, 27, 34, 44, 46, 49, 52, 54, 59, 60, 62, 64, 66, 71, 73, 82, 87, 88, 92, 95, 106, 107, 110, 111, 113, 117, 118, 120, 122, 125, 133, 136, 137, 138, 140, 146, 160, 163, 164, 166, 168, 170, 171, 172, 174, 175, 176, 181, 183], "applic": [2, 19, 160, 162, 170, 176], "tab": [2, 27, 72, 76, 80, 115, 170], "zero": [2, 17, 33, 44, 52, 163, 168, 170, 175], "trop": [2, 6, 19, 24, 33, 34, 36, 44, 49, 52, 56, 60, 63, 66, 69, 79, 82, 90, 92, 117, 118, 119, 136, 146, 163, 170, 174, 175, 176, 178, 179, 181], "succinct": [2, 170], "tab_posit": [2, 170], "vect": [2, 170], "ncol": [2, 87, 170], "dist": [3, 34, 59, 64, 67, 89, 90, 95, 130, 131, 156, 176], "common": [3, 16, 118, 175, 178], "interfac": [3, 27, 33, 41, 46, 49, 160, 168, 174, 178, 180, 184], "old": [3, 44, 175], "except": [3, 17, 19, 21, 24, 25, 33, 34, 35, 36, 39, 41, 49, 54, 55, 66, 70, 73, 74, 77, 80, 82, 83, 84, 86, 87, 88, 91, 99, 113, 122, 131, 140, 145, 147, 148, 149, 160, 166, 168, 169, 174, 175, 176, 178, 179, 181, 183, 184], "pqpiperror": [3, 4], "arg": [3, 33, 63, 64, 83, 84, 130, 160, 164], "any": [3, 33, 50, 119, 160, 174], "raised": [3, 164], "following": [3, 7, 17, 33, 40, 50, 134, 135, 164, 168], "function": [3, 6, 7, 15, 25, 29, 44, 109, 117, 118, 119, 128, 141, 164, 168, 172, 174, 178, 181, 183], "class_getitem": [3, 4], "show": [3, 7, 33, 46, 128], "enabl": [3, 117, 118, 119, 128], "instanc": [3, 7, 34, 45, 46, 72, 101, 104, 136, 161, 163, 168, 169, 174, 175, 178, 179, 181], "through": 3, "__class_getitem__": [3, 160], "difference_div": [3, 4, 46], "quotient": [3, 46], "div1": [3, 46], "div2": [3, 46], "div3": [3, 46], "div4": [3, 46], "print": [3, 5, 7, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 40, 43, 45, 49, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 105, 106, 108, 110, 112, 113, 115, 117, 118, 119, 121, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 153, 154, 155, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 174, 176, 178, 179, 181, 183], "rest": [3, 16, 24, 25, 28, 35, 44, 45, 46, 55, 59, 63, 64, 66, 69, 70, 74, 75, 82, 87, 95, 99, 102, 112, 113, 122, 126, 127, 140, 143, 145, 146, 147, 160, 163, 166, 168, 174, 175, 176, 179, 181], "obtenu": [3, 28, 33, 44, 46, 58, 61, 82, 86, 108, 109, 143, 160, 176, 178], "entier_grande_taill": [3, 4, 46], "maxint": [3, 46], "new": [3, 16, 34, 44, 46, 153, 175], "De": [3, 16, 46, 53, 60, 69, 92, 106, 109, 136, 140, 146, 149, 160, 164, 168, 174, 175, 176, 178, 181], "getrandb": [3, 46], "random": [3, 17, 28, 33, 34, 35, 46, 52, 53, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 103, 106, 111, 114, 115, 116, 125, 129, 130, 131, 138, 139, 143, 145, 147, 155, 160, 169, 178, 181], "getrandbit": [3, 46], "2048": [3, 46, 58, 73, 81, 98, 146], "Qui": [3, 16, 46, 62, 112], "2882159224557107513165483098383814837021447484558010147211921": [3, 46], "304219017212673656549681269862792029": [3, 46], "font": [3, 16, 18, 33, 44, 46, 56, 59, 87, 88, 146, 147, 160, 163, 168, 174, 175, 176, 181], "huit": [3, 46, 69, 175, 176, 183], "octet": [3, 5, 27, 46, 110, 113, 122, 147, 153, 172, 175, 176, 179], "Au": [3, 18, 20, 33, 34, 46, 58, 59, 85, 136, 160, 175, 178, 181], "del\u00e0": [3, 6, 34, 46, 52, 82, 130, 181], "librair": [3, 5, 25, 31, 33, 35, 36, 39, 46, 47, 109, 113, 119, 124, 164, 175, 180], "gmpy2": [3, 46], "recommand": [3, 34, 44, 46, 49, 53, 71, 82, 122, 147, 160, 163, 168, 178], "20": [3, 6, 7, 16, 22, 23, 25, 28, 33, 34, 35, 36, 46, 52, 59, 60, 61, 63, 64, 69, 73, 74, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 106, 107, 110, 111, 115, 116, 118, 121, 122, 123, 129, 132, 136, 140, 142, 143, 146, 154, 155, 168, 171, 174, 175, 179, 181, 183], "40": [3, 16, 22, 24, 25, 33, 34, 36, 46, 52, 63, 69, 82, 84, 88, 91, 94, 116, 118, 122, 129, 143, 160, 168, 179, 183], "chiffr": [3, 19, 21, 44, 45, 46, 68, 70, 81, 82, 136, 137, 144, 146, 163, 175, 183], "overview": [3, 46, 168], "remplac": [3, 19, 33, 44, 46, 53, 58, 69, 74, 75, 80, 82, 87, 88, 103, 124, 136, 138, 140, 144, 146, 147, 154, 160, 162, 168, 174, 175, 176, 181, 183], "editeur": [3, 46], "bougent": [3, 46, 108], "essentiel": [3, 44, 46, 138, 174, 178, 181], "m\u00e9lang": [3, 46, 89, 90, 112, 160, 174], "aller": [3, 19, 27, 33, 46, 54, 58, 62, 72, 113, 117, 137, 141, 142, 143, 146, 174], "menu": [3, 46, 147], "option": [3, 7, 9, 33, 34, 36, 40, 46, 49, 55, 59, 67, 68, 80, 87, 89, 90, 103, 107, 113, 121, 136, 160, 168, 175, 178, 183], "indent": [3, 44, 46, 100, 102, 149, 160, 163, 173], "setting": [3, 42, 46], "similair": [3, 34, 36, 46, 69, 130, 160, 174, 175, 181, 183], "enumerate_regex_search": [3, 4, 46], "exp": [3, 21, 33, 46, 68, 73, 119, 125, 147, 178, 183], "occurent": [3, 44, 114, 175], "parametr": [3, 5, 6, 7, 24, 27, 33, 34, 39, 56, 59, 69, 78, 79, 82, 84, 89, 90, 91, 92, 94, 99, 101, 104, 136, 138, 140, 147, 160, 162, 163, 168, 172, 175, 176, 178, 181, 183], "pars": [3, 26, 164, 176], "findit": [3, 46, 68, 112], "found": [3, 16, 34, 46], "petit": [3, 11, 19, 34, 41, 46, 57, 61, 62, 63, 69, 80, 82, 115, 122, 138, 142, 146, 147, 150, 151, 152, 168, 174, 175, 178, 183], "subtil": [3, 46, 146], "get_day_nam": [3, 4, 46], "return": [3, 5, 7, 16, 17, 18, 19, 20, 24, 25, 27, 28, 33, 34, 35, 39, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 129, 133, 136, 137, 138, 139, 141, 143, 145, 146, 147, 152, 153, 156, 158, 160, 162, 163, 164, 168, 169, 170, 174, 175, 176, 178, 179, 181, 183], "day": [3, 60, 147, 171], "nam": [3, 7, 16, 26, 34, 36, 43, 45, 46, 74, 77, 104, 116, 121, 130, 131, 160, 164, 174, 175, 178, 181], "giv": 3, "datatim": 3, "month": 3, "datetim": [3, 34, 46, 60, 69, 147, 173, 175, 178], "2016": [3, 46, 50, 71], "friday": [3, 46], "get_installed_distribu": [3, 4], "local_only": 3, "skip": [3, 69], "include_edit": 3, "editables_only": 3, "user_only": 3, "use_cmd": 3, "installed": 3, "default": [3, 7, 25, 26, 40, 44, 168, 174, 178, 179, 183], "current": [3, 59, 87, 110, 134, 135, 178], "virtualenv": 3, "low": [3, 17, 44, 62, 109, 134, 135, 175, 183], "ignor": [3, 147, 166, 172, 174], "compat": 3, "stdlib_pkg": 3, "report": 3, "user": [3, 42, 43, 121, 128, 168, 175], "directory": [3, 178, 183], "use": [3, 16, 17, 33, 50, 178], "updated": [3, 40], "get_month_nam": [3, 4, 46], "january": [3, 46], "get_package_info": [3, 4], "start": [3, 10, 44, 52, 112, 117, 175, 181], "end": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 44, 56, 58, 60, 75, 83, 84, 112, 130, 131, 143, 164, 168, 175, 181, 183], "retriev": [3, 43], "he": [3, 134, 135], "all": [3, 7, 15, 16, 33, 50, 118, 119, 134, 135, 160, 178, 183], "get_packages_list": [3, 4], "dictionar": [3, 7], "information_about_packag": [3, 4, 46], "nouveau": [3, 36, 44, 46, 56, 60, 100, 103, 104, 109, 113, 125, 130, 140, 146, 147, 160, 162, 168, 175, 176], "main": [3, 6, 34, 36, 40, 44, 46, 69, 70, 91, 110, 113, 146, 147, 164, 181], "lent": [3, 27, 33, 46, 66, 73, 101, 113, 117, 118, 119, 129, 169, 175, 179], "incluent": [3, 44, 46, 175, 178], "matplotlib": [3, 17, 28, 33, 35, 36, 41, 46, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 78, 79, 82, 85, 86, 87, 88, 89, 90, 91, 94, 100, 103, 106, 107, 109, 111, 115, 116, 121, 125, 129, 143, 147, 150, 151, 153], "scipy": [3, 32, 35, 41, 46, 64, 89, 90, 95, 106, 118, 119, 129, 136, 178], "scik": [3, 46, 124, 128, 166, 180], "learn": [3, 46, 124, 128, 166, 180], "linux": [3, 9, 26, 38, 41, 46, 49, 130, 168, 172, 175, 176], "compil": [3, 46, 68, 117, 118, 122, 128, 146, 147, 161, 163, 175, 178, 183], "met": [3, 24, 46, 77, 85, 86, 92, 99, 122, 137, 160, 168, 174], "implicit": [3, 34, 44, 46, 93, 103, 113, 146, 174, 175, 176], "contribu": [3, 46, 147, 178], "d\u00e9faut": [3, 9, 20, 33, 34, 36, 44, 46, 49, 72, 73, 84, 118, 140, 154, 155, 160, 168, 173, 175, 176, 178, 179, 181, 183], "attent": [3, 9, 18, 28, 33, 44, 46, 60, 69, 121, 147, 163, 172, 174, 178], "exact": [3, 34, 44, 46, 62, 82, 107, 118, 135, 141, 160, 168, 174], "compiling": [3, 46], "anacond": [3, 9, 12, 46, 49], "propos": [3, 5, 10, 13, 24, 27, 34, 35, 46, 53, 60, 63, 68, 69, 71, 74, 80, 81, 82, 87, 88, 89, 90, 92, 95, 96, 105, 106, 108, 110, 113, 117, 123, 126, 127, 129, 130, 134, 135, 137, 138, 146, 147, 148, 153, 154, 160, 162, 163, 164, 168, 169, 174, 175, 176, 178, 180, 181], "pr\u00e9compil": [3, 46, 178], "cond": [3, 45, 46, 49, 147, 174], "module_compil": [3, 46], "list_of_installed_packag": [3, 4, 46], "licens": [3, 46, 48, 147], "summary": [3, 46], "powerful": [3, 46], "analys": [3, 43, 46, 52, 60, 83, 175], "statistic": [3, 7, 46], "hom": [3, 25, 26, 46, 69, 117, 146, 164], "pydat": [3, 36, 46], "author": [3, 46, 50], "development": [3, 9, 46], "team": [3, 46, 134, 135], "email": [3, 26, 39, 44, 46, 176], "googlegroup": [3, 46], "com": [3, 6, 26, 34, 36, 40, 46, 60, 69, 70, 91, 113, 130, 131, 146, 147, 152, 153, 176, 183], "bsd": [3, 46], "locat": [3, 6, 46, 110, 134, 135], "python35_x64": [3, 46], "lib": [3, 35, 42, 43, 46, 117, 118, 119, 128, 146, 164, 168], "requir": [3, 40, 46], "dateutil": [3, 46, 60], "pytz": [3, 46], "freez": [3, 46], "r\u00e9pliqu": [3, 44, 46, 74], "environ": [3, 19, 33, 46, 49, 69, 73, 95, 175, 178], "docutil": [3, 46, 164], "jinja2": [3, 46, 146, 147], "markupsaf": [3, 46], "19": [3, 16, 27, 28, 33, 34, 35, 36, 46, 52, 57, 58, 59, 60, 63, 69, 74, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 106, 107, 110, 116, 117, 118, 119, 120, 121, 122, 125, 129, 136, 140, 143, 146, 147, 149, 154, 155, 160, 171, 174, 175, 183], "pygment": [3, 46], "sphinx": [3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 46, 160, 164], "txt": [3, 34, 40, 44, 46, 70, 130, 131, 146, 147, 152, 153, 163, 164, 172, 175, 176], "property_exampl": [3, 4, 46], "property": [3, 7, 16, 44, 45, 46, 113, 160, 168], "appel": [3, 18, 19, 24, 25, 27, 33, 35, 36, 44, 46, 56, 59, 63, 69, 70, 73, 86, 92, 101, 103, 104, 117, 118, 119, 130, 132, 136, 138, 140, 143, 146, 147, 154, 162, 163, 165, 166, 168, 171, 172, 175, 176, 178, 180, 181, 183], "attribut": [3, 7, 12, 16, 25, 27, 33, 46, 74, 98, 99, 104, 161, 162, 163, 168, 169, 176, 179, 181, 183], "classeavecproperty": [3, 46], "__init__": [3, 16, 25, 27, 44, 45, 46, 99, 100, 101, 102, 103, 104, 117, 118, 119, 128, 136, 137, 138, 160, 162, 163, 164, 168, 176, 178, 179, 181], "self": [3, 16, 25, 27, 35, 44, 45, 46, 99, 100, 101, 102, 103, 104, 136, 137, 138, 139, 160, 162, 163, 164, 168, 175, 176, 178, 179, 181], "_x": [3, 46, 160], "_y": [3, 46, 160], "norm2": [3, 46], "impossibl": [3, 16, 24, 25, 27, 28, 45, 46, 53, 59, 60, 66, 70, 74, 140, 160, 166, 174, 175, 176, 178, 179], "\u00e9criv": [3, 27, 46, 74, 118, 138, 140, 168, 175], "455": [3, 46, 128], "attributeerror": [3, 46, 74, 160, 163, 169], "python_path": [3, 4, 46], "pr\u00e9sent": [3, 6, 19, 20, 33, 34, 44, 46, 52, 60, 63, 83, 84, 95, 96, 101, 102, 109, 110, 121, 124, 130, 140, 146, 147, 152, 154, 161, 163, 166, 168, 174, 175, 176, 178, 181, 183], "introduit": [3, 33, 34, 44, 46, 84, 101, 130, 140, 174, 178], "avant": [3, 16, 27, 34, 35, 36, 44, 46, 58, 59, 66, 69, 73, 82, 87, 88, 112, 113, 130, 132, 140, 145, 146, 147, 148, 160, 163, 168, 174, 175, 176, 178, 181], "fais": [3, 33, 34, 46, 63, 153, 160, 174, 175, 181], "trac": [3, 27, 34, 36, 46, 60, 69, 92, 98, 103, 153, 160, 164, 166, 176], "moncod": [3, 46], "monmodul": [3, 46, 146], "src": [3, 46, 57, 62], "fois": [3, 5, 16, 19, 25, 33, 35, 39, 44, 46, 49, 52, 55, 57, 58, 59, 61, 62, 63, 68, 69, 70, 72, 73, 74, 80, 82, 83, 85, 86, 87, 88, 89, 90, 92, 95, 100, 101, 105, 106, 107, 108, 117, 122, 125, 131, 133, 136, 137, 140, 141, 143, 145, 146, 147, 148, 154, 160, 162, 163, 166, 168, 169, 174, 175, 176, 178, 179, 180, 181, 183], "barb": [3, 46], "ailleur": [3, 33, 46, 49, 69, 100, 111, 166, 174], "pythonpath": [3, 46], "same_vari": [3, 4, 46], "dit": [3, 19, 24, 28, 34, 44, 45, 52, 59, 60, 69, 70, 83, 84, 122, 136, 140, 143, 147, 160, 163, 168, 174, 175, 176, 181], "contiennent": [3, 24, 34, 121, 160, 169, 174, 175, 176, 178, 179, 181, 183], "modifi": [3, 27, 33, 34, 36, 39, 41, 46, 58, 60, 64, 69, 72, 74, 77, 80, 81, 82, 84, 85, 87, 92, 93, 105, 108, 113, 122, 124, 138, 146, 148, 154, 160, 162, 163, 164, 166, 168, 171, 173, 176, 178, 179, 181], "concern": [3, 34, 44, 46, 49, 147, 160, 163, 168, 172, 174, 175, 176, 181, 183], "principal": [3, 27, 35, 36, 44, 46, 48, 49, 122, 129, 140, 146, 148, 166, 175, 176, 178, 179, 181, 183], "float": [3, 6, 7, 15, 27, 29, 33, 35, 37, 44, 46, 70, 87, 99, 118, 122, 130, 143, 146, 147, 163, 174, 175, 178, 183], "effectu": [3, 19, 24, 25, 27, 33, 34, 35, 36, 44, 46, 58, 63, 80, 82, 83, 89, 90, 122, 126, 127, 130, 132, 137, 141, 147, 156, 160, 163, 168, 172, 174, 175, 176, 178, 179, 181, 183], "cop": [3, 33, 34, 36, 45, 46, 50, 52, 53, 64, 72, 73, 108, 154, 161, 174, 178, 179], "dictionnair": [3, 19, 24, 25, 34, 36, 46, 53, 68, 72, 73, 74, 75, 77, 80, 83, 96, 98, 104, 113, 130, 136, 152, 153, 162, 163, 169, 174, 176, 178, 179, 181, 183], "mutabl": [3, 46, 154, 173], "d\u00e9sign": [3, 24, 27, 33, 34, 35, 36, 44, 45, 46, 84, 100, 105, 110, 113, 120, 136, 148, 160, 168, 172, 174, 175, 178, 181, 183], "emplac": [3, 46, 89, 90], "accessibl": [3, 45, 46, 91, 131, 146, 160, 168, 174, 175, 176, 178], "paur": [3, 46], "identifi": [3, 35, 44, 46, 168, 174, 175], "_immutable_": [3, 46], "_mutable_": [3, 46], "effet": [3, 24, 46, 52, 64, 82, 85, 106, 160, 168, 174, 175, 176, 178], "copi": [3, 36, 44, 46, 73, 87, 88, 103, 160, 175, 176], "explicit": [3, 16, 27, 33, 37, 44, 45, 46, 72, 73, 92, 101, 113, 154, 160, 162, 163, 165, 168, 174, 175, 178, 181], "demand": [3, 39, 44, 46, 49, 72, 73, 83, 147, 154, 160, 168, 175, 183], "sequenc": [3, 46, 168, 175], "d\u00e9taill": [3, 36, 46, 69, 163], "parm": [3, 16, 24, 33, 46, 63, 73, 83, 91, 103, 108, 109, 130, 131, 140, 146, 160, 174, 175, 176, 178], "bool": [3, 6, 7, 33, 34, 44, 46, 99, 108, 169, 174], "byt": [3, 26, 46, 146, 164, 172, 176, 179], "frozenset": [3, 7, 46, 105], "dict": [3, 6, 7, 17, 25, 36, 44, 46, 52, 53, 60, 61, 62, 63, 68, 77, 83, 87, 88, 91, 94, 103, 105, 110, 116, 118, 119, 121, 122, 125, 141, 160, 169, 174, 179], "bytearray": [3, 46], "rendr": [3, 27, 46, 62, 69, 147, 168, 174], "__slots__": [3, 45, 46, 160, 175], "creat": [3, 7, 33, 46], "mak": [3, 46, 134, 135], "surcharg": [3, 33, 44, 46, 101, 138, 161, 176, 181], "__getattr__": [3, 46, 128], "__getattribute__": [3, 46, 160], "__setattr__": [3, 46, 160], "enfin": [3, 33, 46, 70, 92, 111, 147, 160, 168], "imbriquent": [3, 46], "uns": [3, 18, 46, 49, 59, 113, 147, 168, 176, 183], "deepcopy": [3, 16, 44, 46, 175], "recop": [3, 33, 46, 120, 154, 160, 175], "uniqu": [3, 6, 18, 33, 34, 35, 36, 44, 45, 46, 57, 59, 68, 73, 92, 99, 105, 110, 132, 134, 135, 136, 137, 141, 152, 154, 155, 160, 163, 168, 172, 174, 175, 176, 179, 181], "copy": [3, 16, 27, 28, 34, 36, 44, 46, 50, 52, 53, 59, 60, 63, 64, 68, 69, 72, 80, 84, 85, 87, 88, 89, 91, 101, 108, 109, 111, 116, 125, 158, 174, 175, 176, 178, 181], "inclus": [3, 24, 28, 33, 44, 46, 47, 69, 77, 163, 168, 174, 175, 176, 183], "appliquent": [3, 44, 46, 125, 162, 168, 175, 183], "sortable_class": [3, 4, 46], "cl": [3, 7, 16, 25, 45, 125, 160, 179], "prononc": [3, 46], "o1": [3, 46, 160], "o2": [3, 46, 160], "macl": [3, 46], "__lt__": [3, 46, 160], "autre_inst": [3, 46], "jenesaisp": [3, 46], "jenesaispas2": [3, 46], "teturn": 3, "io": [3, 12, 16, 25, 26, 34, 42, 46, 57, 62, 110, 113, 117, 118, 119, 121, 128, 164, 176, 179, 183], "disqu": [3, 46, 49, 113, 146, 147, 176, 178], "dur": [3, 33, 34, 36, 46, 48, 60, 82, 92, 113, 146, 147, 171, 175, 176, 178, 181, 183], "ordin": [3, 11, 19, 27, 44, 45, 46, 49, 84, 113, 148, 164, 172, 175, 176, 178, 181], "automatis": [3, 46, 49, 148], "processur": [3, 46], "r\u00e9pet": [3, 24, 33, 39, 44, 46, 49, 70, 74, 82, 87, 88, 89, 90, 130, 131, 136, 145, 146, 147, 148, 154, 160, 174, 176], "processus_quotidien": [3, 46], "nom_fichi": [3, 46, 176], "nb": [3, 16, 18, 33, 34, 46, 54, 59, 64, 66, 69, 74, 78, 79, 80, 87, 88, 99, 103, 143, 160, 168, 174, 178], "open": [3, 12, 26, 33, 34, 36, 39, 44, 46, 113, 121, 130, 146, 147, 153, 163, 164, 172, 176, 181, 183], "recopi": [3, 22, 39, 44, 46, 113, 140, 160, 174, 175, 176, 178], "t\u00e9l\u00e9charg": [3, 6, 44, 46, 49, 113, 121, 146, 147, 152], "gigaoctet": [3, 46], "apercevoir": [3, 46, 174], "corrompu": [3, 46], "perdu": [3, 18, 44, 46, 122, 128, 146, 147, 149, 163, 176, 181], "heur": [3, 34, 46, 71, 147, 171, 178], "aur": [3, 24, 28, 33, 34, 44, 46, 62, 69, 85, 89, 90, 99, 135, 146, 147, 160, 163, 175, 176, 178], "voulu": [3, 46, 54, 77], "d\u00e8s": [3, 39, 44, 46, 49, 80, 82, 99, 101, 130, 138, 143, 147, 160, 163, 168, 175, 176], "invent": [3, 46], "stream": [3, 46, 117, 118, 119, 121, 128, 176], "flux": [3, 46, 52, 53], "data_stream": [3, 46], "__file__": [3, 46, 118, 119, 128, 175, 178, 183], "ligne1": [3, 46], "nligne2": [3, 46], "st": [3, 16, 44, 46, 68, 91, 113, 171, 172, 175], "call_stack": [3, 4], "to_float32": [3, 4], "exampl": [4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 40, 43, 46, 47, 54, 70, 93, 99, 154, 168, 170], "construction_class": [4, 47, 170], "teachpyx": [4, 5, 7, 12, 25, 32, 34, 36, 46, 47, 48, 49, 69, 70, 91, 113, 115, 116, 118, 122, 130, 131, 146, 147, 152, 153, 170], "somm": [4, 5, 17, 18, 19, 27, 32, 33, 34, 39, 44, 49, 53, 54, 55, 59, 60, 69, 73, 74, 76, 82, 85, 86, 96, 99, 102, 122, 129, 136, 137, 141, 142, 143, 144, 147, 148, 149, 162, 174, 175, 178, 181, 183], "tool": [4, 47, 115, 118, 122, 130, 131, 146, 147, 152, 153], "decompress_zip": 4, "download_and_unzip": [4, 130, 131, 146, 147, 152, 153], "draw_diagram": [4, 115], "total_siz": [4, 122], "profiling": [4, 128], "profilenod": [4, 7], "add_called_by": [4, 7], "add_calls_to": [4, 7], "as_dict": [4, 7], "filter_node_": [4, 7], "get_root": [4, 7], "to_json": [4, 7, 110], "to_text": [4, 7, 118], "profil": [4, 7, 118, 128, 178], "profile2df": [4, 7], "profile2graph": [4, 7, 118], "practic": [4, 47, 69, 132, 134, 135], "rues_par": [4, 47, 69], "bellman": [4, 6, 130], "connected_component": [4, 6], "distance_haversin": [4, 6, 69, 104], "distance_par": [4, 6], "euler_path": [4, 6, 69], "eulerien_extens": [4, 6, 69], "get_dat": [4, 6, 69], "graph_degre": [4, 6], "possible_edg": [4, 6], "numpysex": [4, 32, 46, 47], "numpy_matrix2list": [4, 5, 32], "numpy_typ": [4, 5, 46], "faq_python": [4, 46], "stringio": [4, 16, 25, 110, 113, 117, 118, 119, 128, 179], "faq_except": 4, "faq_numpy": 4, "voic": [5, 10, 24, 27, 32, 33, 34, 36, 44, 77, 82, 105, 120, 160, 168, 174, 175, 176, 178, 181], "np": [5, 12, 28, 32, 33, 37, 67, 69, 87, 88, 119, 156, 158], "shap": [5, 17, 22, 32, 34, 35, 36, 37, 53, 57, 59, 60, 61, 63, 64, 67, 83, 84, 87, 88, 91, 92, 95, 103, 110, 111, 116, 118, 119, 121, 123, 124, 129, 130, 145, 158, 181], "iv": [5, 32], "10x10": [5, 32, 33], "diag": [5, 32, 33, 84], "extrait": [5, 12, 22, 32, 33, 34, 36, 44, 70, 120, 148, 160, 174, 176, 183], "diagonal": [5, 24, 27, 32, 33, 48, 49, 53, 84, 131, 136], "dd": [5, 32, 60, 61], "transpos": [5, 32, 33, 34, 35, 84, 118, 160, 168], "mx": [5, 32, 85, 86], "diagflat": [5, 32], "bool\u00e9en": [5, 24, 32, 33, 34, 44, 168, 174], "avail": [5, 7], "bit": [5, 52, 126, 127, 175, 176], "thos": 5, "programmeur": [5, 44, 46, 160, 162, 168, 172, 176], "cherchent": [5, 46], "possed": [5, 33, 44, 46, 66, 70, 82, 147, 160, 163, 168, 175, 181], "255": [5, 34, 46, 160], "uint8": [5, 46], "expliqu": [5, 15, 19, 29, 36, 46, 63, 68, 82, 85, 86, 93, 122, 125, 143, 160, 163, 174, 175, 176], "float32": [5, 27, 36, 46, 118], "plut\u00f4t": [5, 20, 33, 34, 36, 39, 44, 46, 49, 59, 60, 73, 74, 80, 82, 87, 88, 92, 95, 99, 106, 117, 122, 125, 152, 153, 154, 160, 163, 164, 168, 174, 175, 176, 179, 181], "float64": [5, 33, 34, 35, 36, 46, 60, 158, 181], "doubl": [5, 17, 46, 69, 73, 74, 77, 80, 92, 154, 168, 175, 176, 183], "prennent": [5, 46, 49, 110, 174], "co\u00fbteux": [5, 46, 105, 117, 118, 132, 160, 175, 176], "gpu": [5, 33, 46], "explaining": [5, 46], "fp64": [5, 46], "perform": [5, 35, 46, 52, 58, 107, 141, 142, 144, 169, 176, 181], "gpus": [5, 46], "edge": [6, 53, 59, 69, 80, 130, 131], "max_it": [6, 60, 89, 90], "allow": [6, 34, 168], "callabl": [6, 7, 174], "init": [6, 40, 42, 69, 89, 90], "verbos": [6, 7, 56, 69, 89, 90, 92, 108], "ford": [6, 69, 130], "noeud": [6, 53, 59, 62, 68, 69, 80, 100, 102, 130], "maximal": [6, 33, 58, 75, 82, 122, 135, 141, 143, 181], "envisag": [6, 24, 69, 82, 92, 131, 135, 168, 176], "liaison": 6, "continu": [6, 12, 16, 33, 44, 49, 56, 57, 59, 60, 62, 63, 66, 68, 69, 80, 83, 87, 88, 89, 90, 93, 95, 101, 109, 124, 130, 143, 145, 147, 154, 155, 158, 163, 164, 166, 183], "ex\u00e9cu": [6, 20, 44, 45, 49, 69, 76, 82, 92, 100, 117, 125, 140, 146, 154, 160, 163, 164, 166, 168, 174, 175, 176, 181], "progres": 6, "arc": [6, 28, 53, 59, 69, 80, 174], "connected": 6, "component": [6, 178], "vertex": [6, 59], "id": [6, 26, 52, 57, 62, 113, 168, 174, 175], "lat1": [6, 104], "lng1": [6, 104], "lat2": [6, 104], "lng2": [6, 104], "haversin": [6, 69], "formul": [6, 33, 35, 49, 54, 83, 86, 93, 120], "euclidien": 6, "approch": [6, 19, 27, 28, 60, 69, 82, 84, 111, 130, 135, 183], "paris": [6, 34, 82, 96], "added_edg": [6, 69], "eulerian": [6, 69], "path": [6, 16, 26, 40, 43, 68, 69, 118, 119, 128, 146, 164, 168, 176, 178], "we": [6, 16, 17, 33, 69, 178], "assum": [6, 147], "every": [6, 34, 40, 134, 135], "has": [6, 7, 17, 40, 74, 92, 134, 135, 160, 168], "even": [6, 167], "degre": [6, 59, 123, 174], "added": [6, 40, 69], "typing": 6, "eul\u00e9rien": 6, "coefficient": [6, 33, 35, 53, 59, 66, 69, 73, 82, 83, 84, 122, 129, 137, 140, 160], "max_segment": [6, 69], "longu": [6, 19, 55, 56, 57, 68, 69, 82, 92, 93, 143, 146, 160, 174, 175, 178, 179], "avanc": [6, 11, 52, 59, 147, 168, 174, 175], "url": [6, 7, 36, 60, 69, 70, 113, 121, 130, 131, 146, 152, 153], "sdpython": [6, 12, 34, 36, 40, 57, 62, 69, 70, 91, 113, 130, 131, 146, 147, 152, 153], "raw": [6, 7, 34, 36, 60, 69, 70, 91, 113, 121, 130, 131, 146, 147, 152, 153], "_dat": [6, 34, 36, 69, 70, 91, 113, 130, 131, 146, 147, 152, 153], "paris_54000": [6, 69], "zip": [6, 7, 15, 21, 34, 55, 59, 69, 77, 83, 85, 86, 91, 110, 118, 130, 131, 146, 147, 152, 153, 174, 177, 178, 181], "dest": [6, 7], "timeout": [6, 7, 42, 181], "keep": [6, 7, 69], "ru": [6, 96], "rightarrow": [6, 34, 69, 73, 76, 77, 84, 111], "cec": [6, 25, 27, 44, 45, 49, 52, 58, 72, 74, 75, 77, 93, 95, 101, 108, 122, 146, 160, 163, 166, 168, 174, 175, 176, 183], "test": [6, 12, 13, 16, 24, 27, 33, 34, 41, 58, 60, 66, 69, 72, 73, 76, 82, 91, 96, 98, 101, 111, 118, 123, 130, 132, 137, 141, 145, 148, 153, 160, 164, 166, 173, 175, 176, 178], "estabishing": 6, "connect": [6, 12, 44, 50, 59, 80, 168, 176], "gard": [6, 11, 34, 35, 36, 44, 54, 58, 63, 66, 69, 70, 80, 85, 86, 87, 88, 92, 93, 112, 113, 164, 178, 181], "sinon": [6, 33, 44, 49, 53, 58, 59, 63, 64, 70, 72, 75, 79, 80, 82, 83, 92, 111, 120, 130, 140, 143, 145, 155, 168, 174, 175, 178, 181, 183], "1000": [6, 16, 17, 26, 33, 34, 35, 36, 44, 52, 53, 60, 63, 73, 79, 82, 84, 85, 86, 87, 88, 95, 105, 106, 111, 114, 115, 117, 122, 129, 136, 140, 146, 147, 168, 174, 175, 176], "construir": [6, 27, 33, 34, 35, 44, 54, 58, 64, 68, 69, 73, 83, 89, 90, 94, 95, 96, 118, 129, 130, 143, 146, 152, 160, 168, 171, 174, 175, 183], "uple": [6, 24, 44, 163, 171, 175, 183], "conten": [6, 33, 34, 44, 45, 49, 93, 113, 133, 136, 148, 160, 163, 168, 174, 175, 176, 183], "v1": [6, 64, 66, 69, 80, 130, 131, 154, 175], "v2": [6, 64, 66, 69, 80, 130, 131, 154, 175], "p1": [6, 16, 44, 101, 131, 136, 176], "coordon": [6, 24, 35, 36, 66, 69, 73, 88, 89, 90, 129, 136, 160, 163, 168, 174], "p2": [6, 16, 44, 101, 131, 136, 160, 176], "ressembl": [6, 34, 52, 56, 75, 80, 151, 154, 160, 176, 179], "threshold": [6, 118], "vol": [6, 69], "oiseau": [6, 16, 69], "duquel": 6, "symetr": [6, 34, 44, 57, 59, 69, 72, 140], "inclu": [6, 44, 45, 58, 66, 140, 171, 174, 175, 176, 178], "filenam": [7, 34, 117, 118, 119, 128, 147, 152, 153, 164, 166, 176], "unzip": [7, 34], "destin": [7, 27, 92, 181], "verbosity": 7, "decompressed": 7, "download": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34], "fold": [7, 40, 43, 176], "display": [7, 16, 34, 57, 58, 62, 68, 69, 82, 108, 117, 118, 120, 131, 133, 142, 143, 144, 145, 150, 151, 155], "progress": [7, 59, 60, 147], "unzipped": 7, "blockdiag": [7, 115], "pillow": 7, "draw": [7, 17, 59, 69, 94, 106, 109], "definit": 7, "valu": [7, 17, 33, 34, 36, 44, 52, 60, 63, 68, 69, 87, 91, 113, 116, 118, 122, 124, 130, 131, 147, 153, 168, 174, 175, 176], "additional": [7, 168], "g": [7, 33, 44, 59, 62, 68, 69, 95, 100, 109, 117, 129, 133, 147, 153, 160, 168, 175, 178, 183], "handler": 7, "approximat": [7, 17], "footprint": 7, "content": [7, 26, 36, 44, 82, 147, 164, 176], "measur": 7, "recursivity": 7, "purpos": [7, 50], "total": [7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 43, 52, 58, 60, 103, 117, 175], "automatically": 7, "builtin": [7, 117, 118, 119, 128, 160, 168, 174, 178], "container": [7, 105, 141, 175], "subcl": 7, "dequ": [7, 173], "add": [7, 26, 34, 42, 52, 68, 83, 168], "iterat": 7, "over": [7, 33, 126, 127, 145], "somecontainerclass": 7, "othercontainerclass": 7, "get_el": 7, "activestat": 7, "referenced": 7, "getsizeof": [7, 122, 175], "func_nam": 7, "nc1": 7, "nc2": 7, "tin": [7, 118], "tall": 7, "numb": [7, 16, 17, 18, 22, 25, 26, 33, 95, 115, 116, 129, 168, 169, 174, 181], "spent": 7, "sub": [7, 34, 44, 63, 112, 175, 183], "pnod": 7, "called": [7, 134, 135, 168], "time_el": 7, "nod": [7, 59, 100], "filter_nod": 7, "sort_key": 7, "sortkey": [7, 117, 118], "render": 7, "result": [7, 16, 17, 101, 118, 164, 181], "interpreted": 7, "then": [7, 16, 40, 43, 134, 135, 178], "loaded": 7, "datafram": [7, 8, 17, 23, 48, 53, 60, 61, 63, 66, 83, 87, 88, 91, 103, 109, 110, 113, 115, 116, 121, 125, 130, 173], "which": [7, 16, 17, 40, 168], "remov": [7, 42, 44, 52, 59, 112, 175, 176], "built": [7, 117, 118, 119, 128, 164, 174, 178], "small": 7, "row": [7, 16, 17, 24, 33, 34, 36, 57, 62, 87, 88, 100, 102, 115, 121, 122, 130, 131, 134, 135, 137, 146, 147, 168], "static": 7, "info": [7, 40, 43, 56, 57, 62, 110, 128, 176, 181, 183], "filter": 7, "displayed": 7, "overwrit": 7, "held": 7, "boolean": [7, 33, 34, 168], "forget": 7, "root": [7, 33, 62, 100, 115, 168, 174, 181], "as_str": 7, "kwarg": 7, "json": [7, 8, 12, 98, 146, 177], "into": [7, 40, 43, 134, 135], "dump": [7, 25, 113, 176, 179], "fct_width": [7, 118], "60": [7, 16, 33, 36, 37, 52, 60, 82, 103, 116, 121, 129, 147, 153, 160, 168, 183], "fct": [7, 17, 20, 63, 85, 86, 92, 109], "cumul": [7, 33, 34, 58, 91, 106, 117, 118, 119, 128], "rootrem": 7, "as_df": 7, "return_result": 7, "execu": [7, 29, 42], "pstat": [7, 117, 118, 119, 128], "stat": [7, 25, 33, 60, 101, 113, 117, 118, 119, 121, 123, 128, 164, 168, 178, 179, 181], "sort_stat": [7, 117, 118, 119, 128], "posit": [7, 16, 19, 28, 33, 34, 35, 36, 44, 49, 56, 58, 59, 60, 63, 70, 80, 81, 87, 88, 91, 92, 99, 101, 104, 108, 115, 120, 140, 141, 150, 151, 154, 155, 156, 160, 163, 164, 168, 174, 175, 183], "parameter": 7, "cprofil": [7, 117, 118, 119, 128], "png": [7, 34, 58, 68, 69, 82, 108, 120, 131, 133, 142, 143, 144, 145, 146, 150, 151, 155, 183], "hir": 7, "pdf": [7, 119, 176], "clean_text": 7, "logf": [7, 16], "clean": [7, 118], "logging": [7, 165, 181], "onnx_array_ap": 7, "bench_ortmodule_nn_gpu6": 7, "prof": [7, 119], "pd": [7, 121], "pyinstru": [7, 117], "nic": [7, 34], "stack": [7, 33, 34, 68, 165], "sam": [7, 16, 17, 33, 34, 134, 135], "replicat": 7, "that": [7, 17, 33, 40, 118, 134, 135, 178], "produced": 7, "her": [7, 16, 110, 160, 168, 178], "fct0": 7, "sleep": [7, 18, 92, 181], "fct1": 7, "fct2": 7, "fct3": 7, "fct4": 7, "00004": [], "61207": [], "61203": [], "00001": 7, "81291": [], "11089": [], "00002": 7, "11088": [], "00003": 7, "70201": [], "20079": [], "20078": [], "50119": 17, "81281": [], "bas": [12, 16, 19, 25, 33, 35, 49, 52, 58, 63, 81, 87, 88, 96, 103, 110, 113, 118, 121, 128, 129, 140, 160, 163, 168, 169, 174, 175, 176, 178, 181], "exercice_suffix": [], "exercice_edit_dist": [], "exercice_hash": [], "classes_metro": 110, "aper\u00e7u": [8, 27, 98], "appr\u00e9hend": 8, "c_dat": [], "nb_numpy": [], "nb_pand": [], "exercice_compose_connex": [], "exercice_ordonnanc": [], "problem": [8, 12, 19, 21, 27, 28, 33, 44, 47, 49, 56, 58, 59, 60, 62, 66, 67, 75, 76, 80, 81, 82, 84, 87, 88, 91, 93, 95, 107, 109, 110, 113, 120, 129, 130, 134, 135, 136, 140, 146, 148, 152, 153, 155, 160, 163, 164, 166, 168, 171, 172, 175, 176, 179, 183], "autour": [8, 15, 19, 23, 27, 29, 44, 56, 61, 62, 69, 81, 96, 112, 154, 174, 181], "exercice_tsp": [], "td": [8, 12, 13, 61, 71, 110, 121, 130, 147, 152, 153], "plus_court_chemin": 80, "plus_court_chemin_correct": [], "exercice_serialisation_json": 110, "tests_unitair": [], "profiling_conv": [], "exercice_regex": 110, "scrapping": [], "exercice_topk": [], "r\u00e9vis": 8, "pr\u00e9vis": [8, 178], "\u00e9nonc": [8, 12, 27, 34, 53, 54, 69, 71, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 98, 113, 134, 135, 139, 141, 147], "ann\u00e9": [8, 12, 13, 34, 49, 82, 91, 146, 147, 162, 181, 183], "minut": [8, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 36, 48, 56, 69, 183], "install": [9, 26, 34, 36, 44, 117, 146, 147, 163, 166, 168, 178], "vrai": [9, 27, 33, 44, 52, 56, 58, 60, 61, 66, 68, 69, 72, 82, 100, 101, 111, 115, 129, 140, 143, 147, 160, 168, 174, 175, 176, 179], "gageur": 9, "J": [9, 21, 28, 56, 68, 69, 72, 100, 103, 109, 123, 147], "archived": 9, "unofficial": 9, "binar": 9, "packag": [9, 12, 26, 35, 117, 118, 119, 128, 146, 164, 168, 178, 180, 181], "maintenu": [9, 12, 49, 178], "veux": [9, 147], "comprendr": [9, 34, 44, 56, 60, 82, 100, 118, 122, 137, 146, 148, 160, 163, 166, 168, 174, 175, 176], "travail": [9, 39, 44, 49, 57, 168], "ingrat": 9, "requiert": [9, 34, 39, 52, 87, 88, 168], "permen": 9, "gohlk": 9, "servic": [9, 42, 147, 160, 179], "shut": 9, "down": [9, 134, 135], "viabl": 9, "ubuntu": [9, 26], "subsystem": 9, "ca": [9, 28, 35, 55, 56, 60, 66, 68, 69, 104, 107, 110, 113, 122, 151, 153, 168, 178], "march": [9, 24, 27, 28, 32, 34, 56, 59, 68, 70, 84, 85, 89, 90, 107, 110, 153, 156, 160, 174, 175, 181], "d\u00e9marr": [9, 57, 181], "serveur": [9, 49, 176, 180], "notebook": [9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 168, 179, 181], "jupyt": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 49, 110, 128], "notebookapp": 9, "token": 9, "password": 9, "acced": [9, 24, 44, 49, 52, 61, 73, 113, 140, 160, 163, 168, 169, 175, 176, 179], "navig": [9, 49, 178], "visual": [9, 12, 49], "studio": [9, 12, 49], "remot": 9, "noyau": 9, "04": [9, 33, 34, 52, 60, 69, 121, 125, 129, 150, 151, 183], "googl": [10, 26, 39, 44, 69, 81, 132, 133, 134, 135], "organis": [10, 44, 104, 115, 147, 160, 162, 168, 176, 178], "concour": 10, "passion": [10, 147], "d\u00e9veloppeur": [10, 28, 164, 166], "assez": [10, 20, 33, 34, 44, 52, 54, 63, 66, 69, 75, 83, 93, 103, 113, 114, 115, 120, 128, 129, 142, 144, 145, 146, 160, 168, 171, 176, 178, 179], "complet": [10, 12, 19, 28, 33, 44, 49, 60, 67, 68, 69, 83, 87, 88, 101, 140, 146, 154, 160, 163, 168, 174, 175, 176], "sujet": [10, 12, 48, 56, 68, 69, 75, 82, 107, 174, 175, 176], "kick": 10, "logic": [10, 132], "personnag": [11, 109], "r\u00e9soud": [11, 16, 83, 84], "tom": [11, 16], "harry": [11, 16], "pott": [11, 16], "fiol": 11, "poison": [11, 121], "vin": 11, "orti": 11, "recul": 11, "imm\u00e9diat": [11, 44, 85, 163, 166, 176], "gauch": [11, 16, 24, 34, 58, 63, 100, 102, 103, 168, 175, 176, 178], "chacun": [11, 16, 24, 27, 33, 34, 55, 93, 106, 121, 132, 147, 152, 160, 168, 174, 175, 178, 181, 183], "contenus": [11, 152, 175], "ni": [11, 44, 45, 99, 101, 112, 123, 147, 160, 168, 172, 174, 175, 183], "enjeu": [11, 49, 179], "insurmont": 11, "einstein": [11, 15, 29, 96], "ma\u00eetris": [12, 49, 168, 174], "h\u00e9ritag": [12, 98, 101, 161, 162], "numpy": [12, 13, 15, 17, 25, 27, 29, 31, 34, 41, 44, 47, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 67, 78, 79, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 98, 103, 106, 107, 111, 113, 115, 118, 119, 122, 124, 128, 129, 145, 146, 156, 158, 175, 179, 181], "broadcasting": 12, "xml": [8, 12, 42, 44, 98, 146, 176, 178, 179], "html": [12, 33, 36, 44, 57, 62, 106, 117, 118, 121, 128, 146, 147, 160, 176, 178, 179], "csv": [12, 36, 60, 91, 146, 147, 176, 178], "unitair": [12, 13, 96, 98, 118, 166, 178], "unittest": [12, 124, 178], "git": [12, 38, 41, 176], "pull": [12, 40], "request": [12, 34, 70, 113, 121, 147], "abord": [12, 19, 26, 27, 34, 35, 36, 44, 49, 52, 53, 54, 57, 58, 59, 60, 66, 67, 68, 69, 72, 80, 85, 86, 106, 112, 119, 125, 130, 136, 140, 141, 147, 152, 153, 160, 174, 175, 176, 178, 180, 181, 183], "Elles": [12, 33, 36, 44, 45, 49, 99, 117, 136, 146, 160, 168, 175, 178], "evalu": 12, "s\u00e9anc": [12, 33, 48, 130, 138, 146], "ressourc": [12, 49, 164, 176, 181], "doc": [12, 33, 36, 45, 57, 62, 106, 160], "algortihm": 12, "examen": [12, 47, 71, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "www": [12, 34, 36, 60, 84, 91], "xavierdupr": [12, 34, 128], "fr": [12, 16, 34, 36, 60, 61, 68, 91, 113, 147, 160], "plan": [12, 34, 136], "2022": [12, 36, 60, 71, 113], "aspect": [12, 63, 105, 136, 168, 181], "r\u00e9uss": [12, 34, 39, 44, 56, 87, 88, 125], "getting": 12, "started": 12, "cheat": [12, 41], "sheet": [12, 34, 41], "minicond": [12, 49], "mamb": 12, "\u00e9conom": [12, 82], "logiciel": [12, 34, 44, 110, 146], "ing\u00e9nier": 12, "produir": [12, 76, 160, 163], "fiabl": [12, 52, 60, 124, 178], "collabor": 12, "demain": [12, 147, 148], "intelligent": [12, 48], "artificiel": [12, 36, 48, 89, 90, 91], "nvidi": 12, "hi": 12, "rappel": [12, 14, 33, 39, 44, 60, 69, 75, 93, 147, 168, 174, 175], "feuill": [12, 14, 16, 44, 59, 100, 176], "rout": [12, 14, 36, 64, 69, 130], "_l": 13, "de_rot": [], "classe_d": [], "1h30": 13, "enonc": [13, 30, 32, 47], "09": [14, 16, 17, 27, 33, 34, 52, 60, 69, 115, 171, 175, 181, 183], "06": [14, 27, 33, 34, 52, 60, 82, 105, 175, 176], "ensa": [14, 69], "08": [14, 16, 17, 27, 33, 34, 36, 52, 60, 69, 105, 113, 115, 146, 181, 183], "\u00e9nigm": [14, 15, 29, 96], "hermion": [14, 16], "03": [14, 29, 34, 36, 52, 53, 60, 67, 84, 91, 103, 107, 111, 121, 129, 143, 183], "14": [16, 19, 22, 27, 28, 33, 34, 35, 36, 52, 53, 54, 56, 59, 60, 62, 63, 66, 68, 69, 71, 73, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 103, 106, 107, 110, 114, 115, 116, 118, 122, 123, 125, 129, 131, 132, 137, 140, 143, 147, 148, 149, 151, 154, 171, 174, 178, 183], "s\u00e9rialis": [15, 29, 98, 110, 160, 175, 176, 177, 178], "12": [14, 16, 17, 21, 22, 27, 28, 33, 34, 35, 36, 44, 52, 54, 56, 58, 59, 60, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 103, 106, 107, 110, 111, 114, 115, 116, 117, 118, 121, 122, 123, 125, 129, 131, 137, 146, 147, 149, 151, 154, 160, 171, 174, 175, 181], "r\u00e9guli": [72, 96, 98, 130, 141, 163, 168, 176, 178, 184], "webscrapping": [], "top": [34, 40, 43, 96, 134, 135, 168], "07": [14, 17, 27, 34, 35, 36, 52, 60, 69, 103, 105, 116, 121, 129, 150, 151], "cartopy": 14, "wsl": 14, "groupby": [15, 29, 34, 36, 91, 114], "gil": [15, 29, 180], "protobuf": [15, 29, 179], "convers": [15, 19, 25, 29, 35, 44, 91, 99, 113, 146, 147, 160, 163, 171, 174, 176, 179], "dam": [15, 29, 160], "hypercub": [15, 29, 174], "voyag": [15, 29, 96, 130], "tsp": [8, 15, 29, 96], "auto_examples_python": 15, "auto_examples_jupyt": 15, "gallery": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "generated": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 106, 168], "go": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 113], "full": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 118, 121, 128, 174, 181], "impl\u00e9mentatin": 16, "Je": [16, 33, 36, 56, 62, 68, 69, 75, 107, 110, 112, 146, 147, 151, 181], "reproduis": [16, 181], "cinq": [16, 27, 49, 68, 106, 111, 140, 168, 175, 178], "maison": 16, "couleur": [16, 24, 83, 136, 150, 160, 168], "vit": [16, 21, 27, 49, 58, 62, 63, 64, 80, 95, 120, 124, 137, 141, 142, 147, 168, 178], "person": [16, 26, 39, 44, 49, 50, 53, 60, 82, 91, 147, 169, 171, 175, 178, 179], "national": [16, 34, 121], "boit": 16, "boisson": 16, "fum": 16, "cigar": 16, "animal": [16, 62, 112], "domest": 16, "roug": [16, 36, 52, 62, 83, 112, 143, 168], "su\u00e9dois": 16, "chien": 16, "danois": 16, "th\u00e9": 16, "vert": [16, 36, 62, 83, 84, 111, 112, 129, 143], "blanch": [16, 143], "propri\u00e9tair": 16, "caf": 16, "pall": 16, "mall": 16, "jaun": [16, 168], "dunhill": 16, "centr": [16, 89, 90, 168, 174], "lait": [16, 93], "norv\u00e9gien": 16, "habit": 16, "homm": [16, 68, 147], "blend": 16, "c\u00f4t": [16, 27, 49, 63, 69, 85, 86, 90, 93, 95, 111, 122, 151, 154, 160], "chat": 16, "cheval": 16, "voisin": [16, 24, 80, 89, 90, 95, 96, 132, 168], "blu": [16, 36, 52, 78, 79, 90, 107, 121, 168], "mast": [16, 40, 60, 168], "bier": 16, "allemand": 16, "princ": 16, "bleu": [16, 62, 83, 112, 168], "eau": [16, 134, 135], "poisson": 16, "essais": [16, 28, 89, 90, 181], "bon": [16, 27, 35, 36, 52, 66, 69, 70, 80, 85, 87, 88, 89, 90, 138, 146, 147, 150, 151, 152, 176], "papi": [16, 48], "reconstitu": 16, "d\u00e9duct": 16, "jeu": [13, 16, 24, 34, 49, 61, 81, 98, 129, 136, 168, 172], "puzzl": [16, 96], "configur": [16, 67, 91, 160, 168, 179], "piec": [16, 124, 132, 133, 176], "bord": [16, 24, 85, 89, 90, 110, 168], "embo\u00eet": 16, "ecrir": [16, 34, 72, 73, 76, 77, 80, 82, 83, 84, 85, 86, 89, 90, 109, 124, 130, 138, 142, 146, 148, 149, 152, 176, 181], "int\u00e9ress": [16, 19, 33, 44, 52, 61, 63, 80, 81, 106, 107, 143, 168, 174, 175, 176, 178, 183], "combinaison": [16, 34, 68, 174], "exprim": [16, 27, 129, 130, 147, 168], "notr": [16, 28, 83, 87, 91, 103, 128, 133, 136, 147], "d\u00e9crit": [16, 63, 69, 130, 140, 160, 163, 168, 174, 175, 178, 183], "num\u00e9ro": [16, 53, 59, 82, 83, 136, 160, 168, 175, 183], "compatibil": 16, "regroup": [16, 33, 35, 44, 64, 136, 160, 162, 163, 168, 174, 175, 176, 178, 179], "cat\u00e9gor": [16, 59, 60, 83, 175, 176], "ordon": [16, 34, 49, 87, 88, 103, 130, 160, 174], "exclus": [16, 42, 160, 175], "compatibl": [16, 26, 181], "incompatibl": 16, "r\u00e9sult": [16, 34, 44, 168, 175], "possibil": [16, 24, 33, 44, 68, 93, 104, 136, 160, 168, 174, 175, 178], "oppos": [16, 33, 53, 99, 108, 174], "Avec": [16, 19, 24, 33, 36, 44, 49, 69, 87, 110, 118, 123, 126, 127, 132, 136, 146, 147, 154, 168, 172, 174, 175, 183], "2023": [16, 36, 44, 50, 60, 69, 91, 159, 171, 175, 181], "\u00e9numer": [16, 33, 100, 130, 149], "per": [16, 26, 33, 34, 35, 58, 66, 82, 85, 86, 88, 95, 107, 113, 114, 115, 125, 128, 137, 143, 147, 153], "cont": [16, 64, 91, 147], "break": [16, 26, 44, 59, 68, 69, 78, 79, 82, 87, 107, 110, 113, 115, 121, 124, 133, 145, 154, 155, 160, 168, 176, 178], "defin": [16, 17, 52], "constraint": 16, "described": 16, "enigm": 16, "gener": 16, "generat": 16, "triplet": [16, 19], "category": [16, 112, 166], "__str__": [16, 44, 99, 100, 101, 102, 136, 137, 163, 176, 178], "__dict__": [16, 25, 44, 160, 168, 176, 178, 179], "al": [16, 70, 147], "260": [16, 34], "combin": [16, 34, 64, 145, 152], "cl1": [16, 174], "cl2": [16, 174], "nothing": 16, "everything": 16, "concaten": [16, 27, 33, 34, 36, 44, 168], "null": [16, 53, 73, 82, 87, 88, 116, 129, 130, 143, 163, 175, 176, 178], "param": [16, 45, 60, 70, 118, 160, 168], "incompatibility": 16, "propert": [16, 44, 168], "compatibility": 16, "combine_cross_set": 16, "set1": 16, "set2": 16, "ruleposit": 16, "overrid": 16, "ruleequivalent": 16, "equivalent": [16, 33, 118], "rulevoisin": 16, "neighbor": [16, 95, 128, 129, 134, 135], "ruleav": 16, "ruleensembl": 16, "element": [16, 34, 60, 92, 100, 120, 160, 164], "categor": [16, 147], "tl": 16, "ttcouleur": 16, "blanc": [16, 24, 44, 45, 62, 112, 160, 175], "ttnationalit": 16, "norvegien": 16, "suedois": 16, "ttboisson": 16, "ttcigar": 16, "bluemast": 16, "ttanimal": 16, "gar": 16, "constituent": [16, 176], "pr\u00e9dicat": 16, "wikipedi": [16, 33, 36, 69, 113, 118, 123, 147], "wik": [16, 147], "calcul_des_pr": 16, "c3": [16, 34, 56, 137, 160], "a9dicat": 16, "_": [16, 26, 28, 33, 52, 56, 59, 69, 83, 84, 85, 86, 87, 88, 111, 126, 127, 129, 146, 153, 162, 183], "solv": [16, 33, 133], "Soit": [16, 28, 34, 69, 85, 86, 108, 130], "appara\u00eet": [16, 19, 36, 44, 59, 105, 138, 144, 146, 147, 148, 160, 166, 168, 174, 175, 176, 178, 179], "incompatibil": 16, "apparaissent": [16, 44, 153, 168, 174, 175, 176, 178], "describ": [16, 34], "defined": [16, 20, 74, 77, 160, 168, 174, 178], "abov": [16, 50, 164], "count": [16, 34, 44, 52, 59, 102, 106, 114, 122, 145, 153, 173, 175, 183], "hous": [16, 134, 135], "color": [16, 28, 52, 78, 79, 83, 103, 107, 150, 151], "to_datafram": 16, "sr": 16, "head": [16, 17, 34, 36, 40, 43, 61, 63, 91, 103, 110, 115, 121, 130, 131, 147], "eploring": 16, "deepness": 16, "empty": [16, 35, 60, 83, 84, 89, 90, 95, 118, 181], "beginning": 16, "recursively": 16, "must": [16, 33, 40, 92, 168, 178], "solved": 16, "unless": 16, "looking": 16, "possibilit": [16, 93], "much": [16, 134, 135], "research": 16, "could": [16, 33, 60], "represented": 16, "creating": 16, "check": [16, 17, 40], "bringing": 16, "back": [16, 34, 60, 118], "50": [16, 17, 33, 34, 35, 36, 52, 58, 63, 74, 83, 86, 87, 89, 90, 95, 107, 108, 111, 112, 116, 118, 121, 128, 129, 134, 135, 147, 153, 160, 168, 174], "70": [16, 33, 36, 52, 58, 91, 116, 119], "80": [16, 36, 52, 59, 69, 91, 107, 111, 116, 121, 122, 125, 129, 164, 168, 174, 175], "90": [16, 17, 36, 52, 60, 69, 84, 91, 95, 111, 114, 147], "100": [16, 17, 18, 19, 22, 25, 26, 33, 34, 35, 36, 41, 52, 53, 58, 59, 60, 61, 62, 63, 66, 69, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 100, 103, 105, 106, 107, 111, 113, 115, 116, 118, 120, 121, 125, 129, 136, 138, 139, 143, 153, 160, 168, 169, 174, 175, 181], "110": [16, 19, 36, 114], "120": [16, 60, 107, 122, 168], "130": [16, 117, 118], "running": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "script": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 57, 62, 178], "757": [16, 33], "plot_einstein_riddl": [16, 29], "ipynb": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 110, 146], "cam": 17, "longrightarrow": 17, "hold": 17, "let": [17, 33, 68, 134, 135], "evaluat": [17, 126, 127], "equal": 17, "pyplot": [17, 28, 33, 34, 35, 36, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 78, 79, 85, 86, 87, 88, 89, 90, 91, 94, 100, 103, 106, 107, 109, 111, 115, 121, 129, 143, 150, 151, 153], "plt": [17, 28, 33, 34, 35, 36, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 78, 79, 85, 86, 87, 88, 89, 90, 91, 94, 100, 103, 106, 107, 109, 111, 115, 121, 129, 143, 150, 151, 153], "rnd": [17, 35, 53, 60, 87, 88, 91, 94, 106, 111, 115, 129, 160, 169], "100000000": 17, "dtyp": [17, 33, 34, 35, 36, 37, 52, 59, 60, 91, 95, 103, 118, 130, 131, 145, 158], "rnd32": 17, "astyp": [17, 33, 35, 36, 59, 91, 111, 118, 181], "very": 17, "revers": [17, 28, 44, 68, 101, 106, 131, 133, 156, 174, 175], "rnd32b": 17, "delt": [17, 27, 34, 52, 56, 60, 82, 84, 168], "980232227667301e": 17, "9802322387695312e": 17, "1707908198488326e": 17, "999999997344628": 17, "hist": [17, 34, 35, 59, 114, 122, 125, 152, 153], "bin": [17, 34, 52, 175, 176], "49963": 17, "50274": 17, "49885": 17, "50054": 17, "49733": 17, "50129": 17, "49661": 17, "50152": 17, "49916": 17, "49935": 17, "49647": 17, "50099": 17, "50316": 17, "50319": 17, "49975": 17, "49752": 17, "49886": 17, "50382": 17, "50160": 17, "50238": 17, "50184": 17, "50064": 17, "49792": 17, "49787": 17, "49753": 17, "49994": 17, "49931": 17, "49798": 17, "49841": 17, "50086": 17, "50181": 17, "49978": 17, "50457": 17, "50287": 17, "49766": 17, "50253": 17, "50568": 17, "49901": 17, "49840": 17, "49741": 17, "49857": 17, "49760": 17, "50226": 17, "50138": 17, "50004": 17, "49938": 17, "50228": 17, "50084": 17, "49850": 17, "50082": 17, "49734": 17, "50173": 17, "49887": 17, "49621": 17, "49718": 17, "49805": 17, "50141": 17, "49961": 17, "50501": 17, "49761": 17, "50147": 17, "50197": 17, "49898": 17, "50178": 17, "50288": 17, "50483": 17, "49879": 17, "49811": 17, "49906": 17, "50340": 17, "49742": 17, "50052": 17, "49591": 17, "49824": 17, "49983": 17, "49990": 17, "50020": 17, "50390": 17, "49613": 17, "50192": 17, "50216": 17, "49993": 17, "50059": 17, "49688": 17, "50088": 17, "49866": 17, "49953": 17, "49624": 17, "50292": 17, "50012": 17, "49604": 17, "49483": 17, "50285": 17, "49823": 17, "50489": 17, "49709": 17, "49928": 17, "49746": 17, "50093": 17, "49853": 17, "49730": 17, "49813": 17, "50102": 17, "50302": 17, "49748": 17, "50388": 17, "50393": 17, "49655": 17, "49947": 17, "49643": 17, "49817": 17, "49908": 17, "49918": 17, "49683": 17, "49782": 17, "50497": 17, "49820": 17, "49987": 17, "50076": 17, "49816": 17, "49657": 17, "49921": 17, "49881": 17, "49648": 17, "49986": 17, "49888": 17, "49905": 17, "50332": 17, "50105": 17, "50166": 17, "50245": 17, "49731": 17, "50165": 17, "49809": 17, "50033": 17, "49802": 17, "50022": 17, "49839": 17, "49826": 17, "50247": 17, "50104": 17, "49592": 17, "50273": 17, "50137": 17, "50227": 17, "49907": 17, "50202": 17, "49952": 17, "49914": 17, "50235": 17, "50083": 17, "50450": 17, "49899": 17, "50036": 17, "49758": 17, "49950": 17, "49996": 17, "49790": 17, "50414": 17, "50297": 17, "49751": 17, "49480": 17, "49489": 17, "49785": 17, "49874": 17, "49945": 17, "50043": 17, "50145": 17, "49877": 17, "50278": 17, "49836": 17, "50107": 17, "49948": 17, "49279": 17, "49904": 17, "50017": 17, "50133": 17, "49863": 17, "50190": 17, "50115": 17, "49939": 17, "50015": 17, "49774": 17, "50035": 17, "50379": 17, "50003": 17, "50016": 17, "49788": 17, "50087": 17, "49708": 17, "50130": 17, "50260": 17, "49681": 17, "49662": 17, "50208": 17, "49763": 17, "50024": 17, "49744": 17, "50044": 17, "49674": 17, "49949": 17, "50261": 17, "50042": 17, "50134": 17, "49911": 17, "50275": 17, "49408": 17, "50177": 17, "49783": 17, "49968": 17, "50222": 17, "49849": 17, "50005": 17, "50396": 17, "50019": 17, "49992": 17, "49871": 17, "50161": 17, "99841": 17, "99472": 17, "99613": 17, "99570": 17, "100289": 17, "100046": 17, "100464": 17, "100077": 17, "99902": 17, "100140": 17, "99892": 17, "99336": 17, "100654": 17, "100032": 17, "99882": 17, "100233": 17, "99706": 17, "99981": 17, "100122": 17, "100066": 17, "100084": 17, "100226": 17, "99957": 17, "100230": 17, "99782": 17, "99795": 17, "99914": 17, "100052": 17, "99722": 17, "99873": 17, "99665": 17, "100297": 17, "100168": 17, "100247": 17, "100509": 17, "99821": 17, "100015": 17, "99970": 17, "100271": 17, "100113": 17, "99704": 17, "99924": 17, "99497": 17, "99879": 17, "100078": 17, "100590": 17, "100155": 17, "100030": 17, "100112": 17, "99917": 17, "99124": 17, "99846": 17, "100344": 17, "100118": 17, "99798": 17, "100236": 17, "100274": 17, "100051": 17, "100196": 17, "100043": 17, "100137": 17, "99984": 17, "99826": 17, "99716": 17, "99660": 17, "99822": 17, "100393": 17, "99941": 17, "99862": 17, "100641": 17, "100095": 17, "100088": 17, "99847": 17, "99198": 17, "99916": 17, "99414": 17, "100164": 17, "99949": 17, "100409": 17, "99758": 17, "99420": 17, "99787": 17, "99788": 17, "100121": 17, "99967": 17, "100436": 17, "99526": 17, "99854": 17, "99776": 17, "100049": 17, "100552": 17, "100275": 17, "100355": 17, "100448": 17, "99767": 17, "99811": 17, "100036": 17, "99458": 17, "100199": 17, "99557": 17, "100008": 17, "99978": [17, 73], "100061": 17, "99920": 17, "100161": 17, "100173": 17, "99995": 17, "99802": 17, "100134": 17, "99884": 17, "100519": 17, "100114": 17, "100338": 17, "100384": 17, "100487": 17, "100295": 17, "100353": 17, "149916": 17, "149310": 17, "150333": 17, "150416": 17, "149839": 17, "149529": 17, "149478": 17, "149822": 17, "150292": 17, "149622": 17, "150233": 17, "149203": 17, "149940": 17, "150204": 17, "149900": 17, "149963": 17, "150287": 17, "150257": 17, "150414": 17, "150056": 17, "149964": 17, "151025": 17, "149675": 17, "149890": 17, "151035": 17, "150350": 17, "149381": 17, "149941": 17, "150470": 17, "150331": 17, "149950": 17, "149953": 17, "150112": 17, "149990": 17, "150477": 17, "150156": 17, "150109": 17, "149977": 17, "150421": 17, "149519": 17, "151008": 17, "149814": 17, "149479": 17, "149595": 17, "150369": 17, "149581": 17, "150004": 17, "149167": 17, "150247": 17, "150415": 17, "150249": 17, "149402": 17, "149923": 17, "149681": 17, "150040": 17, "149639": 17, "149461": 17, "149496": 17, "150013": 17, "149688": 17, "150318": 17, "150323": 17, "174958": 17, "200380": 17, "200487": 17, "199979": 17, "199974": 17, "200539": 17, "199565": 17, "199848": 17, "199602": 17, "199515": 17, "200357": 17, "199935": 17, "200333": 17, "199853": 17, "200144": 17, "200925": 17, "199464": 17, "199975": 17, "200546": 17, "200259": 17, "200033": 17, "199956": 17, "200055": 17, "199891": 17, "199670": 17, "200423": 17, "199857": 17, "200214": 17, "199431": 17, "199938": 17, "199933": 17, "212276": 17, "250392": 17, "249715": 17, "249747": 17, "249827": 17, "250570": 17, "250006": 17, "249926": 17, "250680": 17, "250132": 17, "250351": 17, "250300": 17, "250327": 17, "250551": 17, "249389": 17, "250261": 17, "280722": 17, "300724": 17, "301269": 17, "300319": 17, "299673": 17, "300174": 17, "300393": 17, "300941": 17, "340075": 17, "349606": 17, "350175": 17, "351367": 17, "394785": 17, "399463": 17, "446456": 17, "547868": 17, "547248": 17, "447345": 17, "400413": 17, "394336": 17, "350453": 17, "350374": 17, "349853": 17, "340744": 17, "299696": 17, "299264": 17, "299623": 17, "299284": 17, "300180": 17, "299422": 17, "299690": 17, "281928": 17, "249661": 17, "250987": 17, "249624": 17, "249525": 17, "248930": 17, "251016": 17, "250459": 17, "250537": 17, "249421": 17, "249530": 17, "249440": 17, "249875": 17, "249011": 17, "249793": 17, "250569": 17, "212539": 17, "200256": 17, "200108": 17, "199669": 17, "199862": 17, "200887": 17, "199813": 17, "200385": 17, "200691": 17, "200857": 17, "200403": 17, "200283": 17, "199814": 17, "200289": 17, "200272": 17, "200454": 17, "200592": 17, "199948": 17, "199647": 17, "199503": 17, "200097": 17, "200132": 17, "199746": 17, "199954": 17, "199949": 17, "199618": 17, "200507": 17, "200126": 17, "199233": 17, "200287": 17, "175179": 17, "150726": 17, "149757": 17, "150029": 17, "150176": 17, "149998": 17, "150113": 17, "149526": 17, "149565": 17, "149543": 17, "149889": 17, "149088": 17, "149663": 17, "149666": 17, "150393": 17, "149490": 17, "150285": 17, "150222": 17, "150432": 17, "149297": 17, "150460": 17, "149597": 17, "150348": 17, "149642": 17, "150655": 17, "149625": 17, "150082": 17, "149435": 17, "149608": 17, "149885": 17, "149973": 17, "150121": 17, "150509": 17, "149865": 17, "150074": 17, "150354": 17, "148577": 17, "149716": 17, "149784": 17, "149172": 17, "150505": 17, "149303": 17, "150089": 17, "150644": 17, "150181": 17, "149798": 17, "149730": 17, "150859": 17, "149222": 17, "150063": 17, "151217": 17, "150147": 17, "149463": 17, "150120": 17, "150357": 17, "149538": 17, "150067": 17, "100091": 17, "99883": 17, "99982": 17, "100185": 17, "100085": 17, "99848": 17, "100011": 17, "99997": 17, "99872": 17, "99794": 17, "100504": 17, "100183": 17, "100429": 17, "99615": 17, "99806": 17, "100723": 17, "99747": 17, "99803": 17, "99654": 17, "99971": 17, "99572": 17, "100242": 17, "99756": 17, "99531": 17, "100722": 17, "99663": 17, "100108": 17, "99875": 17, "100462": 17, "99437": 17, "99581": 17, "100076": 17, "100186": 17, "100307": 17, "100105": 17, "100386": 17, "99829": 17, "99786": 17, "99972": 17, "99824": 17, "99928": 17, "99880": 17, "99724": 17, "99721": 17, "99739": 17, "100647": 17, "99951": 17, "99792": 17, "99698": 17, "99975": 17, "99938": 17, "99968": 17, "99515": 17, "100209": 17, "99309": 17, "100301": 17, "100103": 17, "100322": 17, "99192": 17, "100235": 17, "100017": 17, "99752": 17, "99516": 17, "99919": 17, "100142": 17, "99732": 17, "100298": 17, "99714": 17, "100146": 17, "100457": 17, "100696": 17, "100055": 17, "100280": 17, "100281": 17, "99773": 17, "99778": 17, "99540": 17, "100063": 17, "99904": 17, "100059": 17, "100266": 17, "100221": 17, "99878": 17, "99400": 17, "100034": 17, "100087": 17, "100174": 17, "100219": 17, "99889": 17, "99893": 17, "99386": 17, "99690": 17, "100326": 17, "100277": 17, "100292": 17, "99751": 17, "99994": 17, "100166": 17, "99851": 17, "99774": 17, "50030": 17, "49828": 17, "50470": 17, "49443": 17, "49982": 17, "50072": 17, "50144": 17, "50031": 17, "49959": 17, "50323": 17, "49980": 17, "50461": 17, "49985": 17, "49872": 17, "49933": 17, "50142": 17, "49749": 17, "49580": 17, "50557": 17, "50000": [17, 73], "50610": 17, "50520": 17, "50295": 17, "49884": 17, "49977": 17, "50317": 17, "50221": 17, "49889": 17, "49543": 17, "49727": 17, "50151": 17, "50334": 17, "50175": 17, "50195": 17, "50283": 17, "50174": 17, "50026": 17, "50154": 17, "49909": 17, "50127": 17, "49689": 17, "49846": 17, "50121": 17, "49808": 17, "50220": 17, "49868": 17, "49654": 17, "50366": 17, "50075": 17, "50249": 17, "49649": 17, "49867": 17, "49737": 17, "50365": 17, "50071": 17, "49927": 17, "50320": 17, "49960": 17, "49936": 17, "50112": 17, "49780": 17, "50464": 17, "49912": 17, "50179": 17, "49786": 17, "50417": 17, "50055": 17, "49747": 17, "49728": 17, "50298": 17, "50309": 17, "50013": 17, "49142": 17, "49869": 17, "49954": 17, "50056": 17, "49913": 17, "50358": 17, "49984": 17, "49997": 17, "50187": 17, "49762": 17, "50078": 17, "50196": 17, "50156": 17, "49832": 17, "50362": 17, "49653": 17, "50215": 17, "50100": 17, "50243": 17, "49859": 17, "50531": 17, "49923": 17, "50029": 17, "50236": 17, "49796": 17, "50574": 17, "49842": 17, "50040": 17, "50188": 17, "49951": 17, "49969": 17, "49509": 17, "50011": 17, "50354": 17, "50109": 17, "50242": 17, "50096": 17, "50014": 17, "49932": 17, "50350": 17, "49979": 17, "50255": 17, "49838": 17, "49891": 17, "50185": 17, "50209": 17, "50342": 17, "49903": 17, "49981": 17, "49970": 17, "50200": 17, "50456": 17, "50094": 17, "49865": 17, "50356": 17, "49937": 17, "50169": 17, "50444": 17, "50308": 17, "50257": 17, "49781": 17, "50079": 17, "50047": 17, "49641": 17, "49827": 17, "49515": 17, "50180": 17, "49897": 17, "49626": 17, "49704": 17, "49685": 17, "49989": 17, "50158": 17, "49797": 17, "50131": 17, "50117": 17, "50066": 17, "50296": 17, "50448": 17, "50279": 17, "98023223e": 17, "97427176e": 17, "96831130e": 17, "96831131e": 17, "97427177e": 17, "98023224e": 17, "barcontain": 17, "artist": [17, 183], "finally": [17, 174], "numper": 17, "remain": 17, "100000": [17, 18, 33, 34, 60, 63, 73, 78, 79, 105, 106, 117, 122, 176, 178, 181], "randint": [17, 28, 33, 34, 35, 52, 58, 59, 64, 66, 69, 74, 77, 80, 83, 84, 87, 88, 89, 90, 100, 103, 106, 111, 114, 125, 138, 139, 145, 155, 160, 169, 181], "d32": 17, "d64": 17, "rais": [17, 39, 44, 45, 55, 66, 70, 82, 91, 92, 99, 101, 118, 124, 145, 156, 158, 160, 163, 164, 174, 183], "imagin": [17, 61, 85, 86, 103, 109, 131, 132, 143, 144, 145], "now": [17, 69, 171, 175], "want": [17, 33, 134, 135], "converted": 17, "find_interval": 17, "dx": [17, 67, 89, 90, 117, 122, 142], "ab": [17, 19, 33, 52, 53, 56, 78, 84, 85, 86, 88, 90, 92, 107, 116, 131, 136, 143, 147, 160, 162, 174, 175], "usually": 17, "x1": [17, 28, 33, 74, 89, 90, 94, 124], "x2": [17, 33, 74, 85, 86, 89, 90, 94, 107, 124, 140], "zeros": [17, 22, 33, 35, 37, 52, 56, 59, 60, 61, 83, 87, 88, 91, 103, 118, 119, 124, 145, 156], "2000": [17, 53, 60, 115, 117, 129, 181, 183], "6340828485576307e": 17, "9604587931971764e": 17, "37": [17, 33, 34, 36, 52, 68, 69, 82, 88, 100, 103, 118, 137, 140, 147, 153, 174, 175], "57": [17, 33, 34, 36, 37, 69, 87, 95, 114, 139, 153, 181], "103": [17, 33], "239": [17, 33, 34, 82, 168], "490": 17, "1039": 17, "63408285e": 17, "19565316e": 17, "38767224e": 17, "57969131e": 17, "77171039e": 17, "96372947e": 17, "15574854e": 17, "34776762e": 17, "53978670e": 17, "07318058e": 17, "19238249e": 17, "31158439e": 17, "43078630e": 17, "54998821e": 17, "66919012e": 17, "78839202e": 17, "90759393e": 17, "02679584e": 17, "14599775e": 17, "26519965e": 17, "38440156e": 17, "50360347e": 17, "62280538e": 17, "74200729e": 17, "86120919e": 17, "98041110e": 17, "09961301e": 17, "21881492e": 17, "33801682e": 17, "45721873e": 17, "57642064e": 17, "69562255e": 17, "81482445e": 17, "93402636e": 17, "05322827e": 17, "17243018e": 17, "29163209e": 17, "41083399e": 17, "53003590e": 17, "64923781e": 17, "76843972e": 17, "88764162e": 17, "00684353e": 17, "12604544e": 17, "24524735e": 17, "36444925e": 17, "48365116e": 17, "60285307e": 17, "72205498e": 17, "84125689e": 17, "96045879e": 17, "something": [17, 146, 152, 183], "ql": 17, "952199622072385e": 17, "estimat": [17, 52], "left": [17, 27, 33, 34, 35, 58, 63, 75, 82, 84, 92, 100, 102, 115, 126, 127, 129, 130, 131, 132, 133, 142, 143, 156, 168, 174, 175], "x_": [17, 60, 109, 126, 127, 143], "64": [17, 33, 34, 36, 52, 58, 65, 69, 80, 82, 91, 103, 116, 121, 176], "right": [17, 27, 33, 34, 35, 40, 50, 52, 58, 63, 75, 82, 84, 92, 100, 102, 110, 115, 126, 127, 129, 130, 131, 132, 133, 142, 143, 153, 156, 168, 175], "inf_strict": 17, "f1": [17, 43, 113, 176, 181], "f2": [17, 113, 176, 181, 183], "count_event": 17, "di": [17, 44, 59, 60, 61, 160], "1001": [17, 33, 73, 143], "ratio": [17, 52, 60, 66, 87, 88, 111, 129], "3569796598651465e": 17, "661": [17, 33], "1026": 17, "190": [17, 82], "1309179281937531e": 17, "837": 17, "993": 17, "290": [17, 34, 164], "7261378904009916e": 17, "889": 17, "1007": [17, 35], "390": 17, "32135785260823e": 17, "923": 17, "1016": 17, "9165778148154686e": 17, "942": 17, "991": [17, 33], "590": 17, "511797777022707e": 17, "938": 17, "987": 17, "690": 17, "1070177392299456e": 17, "929": [17, 33], "980": 17, "790": 17, "702237701437184e": 17, "957": 17, "999": [17, 27, 120, 174], "890": [17, 91, 175], "297457663644423e": 17, "979": 17, "1013": [17, 73], "990": 17, "892677625851661e": 17, "1025": 17, "952200e": 17, "028600": 17, "1014": 17, "190440e": 17, "033597": 17, "1012": 17, "785660e": 17, "047666": 17, "380880e": 17, "059761": 17, "1004": 17, "976100e": 17, "070157": 17, "955": 17, "plot": [17, 28, 30, 33, 35, 36, 52, 53, 58, 60, 61, 63, 64, 66, 67, 69, 78, 79, 85, 86, 87, 88, 89, 90, 91, 94, 100, 103, 107, 109, 111, 115, 116, 125, 129, 143, 153], "axe": [17, 34, 60, 78, 79, 142, 168], "xlabel": [17, 52, 153], "logx": [17, 63], "inf_equal": 17, "df2": [17, 36, 91, 103, 110], "988": 17, "1006": [17, 35], "954": 17, "1011": [17, 175], "995": [17, 35], "1042": 17, "1020": 17, "994": 17, "1002": [17, 36, 79], "983": [17, 33], "ax": [17, 33, 34, 36, 52, 53, 59, 60, 61, 63, 64, 66, 67, 69, 78, 79, 87, 88, 89, 90, 91, 94, 103, 107, 109, 121, 129, 143, 150, 151, 153], "label": [17, 36, 52, 58, 62, 66, 69, 89, 91, 103, 107, 129, 134, 135, 153, 168, 174, 181], "sup_strict": 17, "df3": [17, 110], "660": 17, "998": [17, 86], "789": [17, 86, 164], "870": 17, "925": 17, "895": 17, "977": [17, 33], "1036": 17, "952": 17, "963": 17, "1034": 17, "030542": 17, "1015": 17, "045862": 17, "1003": [17, 91, 92], "061825": 17, "1019": 17, "072614": 17, "964": 17, "089910": 17, "sup_equal": 17, "df4": 17, "1052": 17, "1029": 17, "971": [17, 33], "1031": 17, "976": [17, 36], "984": [17, 52], "1023": 17, "981": 17, "inf_strict_neg": 17, "dfn": 17, "982": 17, "970": 17, "953": [17, 33, 119], "989": 17, "1021": 17, "1018": 17, "As": [17, 40, 134, 135], "soon": 17, "rounded": 17, "inequality": 17, "long": [17, 18, 20, 34, 35, 44, 58, 62, 64, 68, 69, 74, 100, 107, 109, 113, 118, 122, 125, 131, 137, 146, 152, 168, 175, 176, 181], "howev": 17, "handl": 17, "templat": [17, 147], "inequalit": 17, "easi": 17, "articl": [17, 33, 48, 60, 68, 69, 126, 127, 146, 150, 151, 152, 153, 160, 181], "according": 17, "processing": [17, 180], "cost": [17, 92, 156], "versus": [17, 36], "44": [17, 22, 33, 34, 36, 69, 88, 112, 118, 153, 160, 171], "502": 17, "plot_float_and_double_rouding": [17, 26, 29], "global": [18, 19, 22, 24, 25, 26, 41, 44, 74, 95, 118, 160, 168, 180], "interpret": [18, 34, 56, 117, 118, 148, 154, 160, 163, 174, 175, 180], "verrou": [18, 181], "auquel": [18, 44, 105, 106, 118, 120, 168, 175, 178], "proteg": [18, 44, 45, 163, 181], "contr": [18, 61, 69, 113, 163, 181], "acces": [18, 19, 25, 26, 36, 44, 45, 109, 141, 160, 164, 168, 174, 176, 178, 181], "concurrentiel": [18, 181], "mesur": [18, 24, 25, 52, 58, 63, 82, 92, 109, 114, 117, 118, 119, 122, 125, 132, 137, 144, 147, 168, 178, 181, 183], "n\u00e9cessair": [18, 24, 27, 33, 34, 44, 45, 49, 58, 62, 63, 64, 69, 72, 74, 82, 84, 87, 88, 115, 117, 119, 124, 131, 143, 147, 154, 160, 163, 164, 166, 168, 174, 175, 176, 178, 179, 181], "timeit": [18, 22, 25, 26, 33, 34, 35, 58, 66, 82, 85, 86, 88, 95, 107, 109, 113, 114, 115, 118, 125, 128, 137, 143, 153, 169], "concurrent": 18, "futur": [18, 178], "threadpoolexecutor": [18, 181], "create_list": 18, "2903062000000318": 18, "run2": 18, "max_worker": [18, 181], "executor": [18, 181], "186134000000038": 18, "lanc": [18, 44, 45, 62, 69, 112, 164, 166, 176, 181], "synchronis": [18, 171, 180], "termin": [18, 44, 58, 80, 122, 140, 145, 146, 164, 168, 174, 175, 176, 181], "mettr": [18, 33, 44, 85, 87, 88, 106, 109, 131, 168, 174, 183], "jour": [18, 49, 53, 60, 61, 62, 70, 80, 85, 86, 91, 92, 112, 130, 131, 132, 145, 146, 147, 160, 168, 171, 175, 176, 178, 183], "impos": [18, 26, 28, 34, 113, 160, 168, 175, 179], "mis": [18, 27, 44, 49, 53, 58, 80, 85, 130, 145, 149, 160, 168, 175, 176, 178], "lieu": [18, 19, 27, 34, 54, 59, 95, 101, 136, 160, 168, 174, 178, 181, 183], "va": [18, 28, 33, 44, 49, 64, 69, 70, 72, 82, 84, 85, 87, 108, 130, 133, 137, 147, 155, 160, 166, 168, 174, 175, 176, 178, 181], "009": [18, 24, 117], "9424862000000758": 18, "run3": 18, "001": [18, 19, 27, 60, 94, 117, 118, 128, 136, 181], "3570157000001473": 18, "signific": 18, "788": [18, 117], "plot_gil_exampl": [18, 26, 29], "r\u00e9\u00e9crir": [19, 34, 39, 49, 92, 99, 138, 140, 160, 164], "u": [19, 25, 40, 52, 62, 68, 70, 112, 120, 147, 153, 179], "compteur": [19, 111], "u_st": 19, "u_non_recurs": 19, "u0": 19, "u1": 19, "u2": 19, "tand": [19, 44, 160, 168, 174, 175, 176, 178], "\u00e8me": [19, 175], "cons\u00e9quent": [19, 27, 28, 33, 44, 58, 70, 82, 136, 155, 160, 163, 168, 174, 175, 178, 181, 183], "longueur": [13, 19, 27, 28, 33, 34, 44, 58, 59, 62, 68, 69, 70, 74, 76, 82, 93, 94, 96, 113, 122, 130, 137, 141, 154, 172, 174, 175, 176, 181], "arr\u00eat": [19, 44, 86, 92, 106, 111, 117, 140, 146, 155, 163, 166, 174, 181], "compare_l": 19, "q": [19, 42, 59, 62, 68, 80, 91, 126, 127, 132, 133, 147, 156], "g\u00e9ometr": [19, 73, 74, 107], "frac": [19, 27, 33, 35, 52, 58, 60, 61, 63, 72, 73, 74, 75, 82, 83, 84, 86, 87, 88, 111, 123, 126, 127, 129, 132, 142, 143, 151, 155, 156, 160], "sum_": [19, 33, 34, 35, 52, 58, 72, 73, 74, 83, 84, 85, 86, 87, 88, 111, 123, 126, 127, 129, 130, 131, 132, 133, 142, 143, 148, 149], "infty": [19, 73, 102, 130], "convergent": [19, 33, 64, 75], "infin": [19, 48, 59, 63, 82, 130, 154, 164, 174, 183], "outr": [19, 44, 147, 168], "perm": [19, 34, 49, 50, 58, 63, 64, 67, 70, 101, 118, 162], "estim": [19, 32, 70, 82, 111, 143, 152, 160, 178], "suite_geometrique_1": 19, "1075": 19, "informaticien": [19, 162], "exp\u00e9riment": 19, "suite_geometrique_2": 19, "yold": 19, "55": [19, 33, 36, 54, 69, 83, 84, 93, 103, 143, 149, 153, 175], "reper": [19, 70, 92, 150, 151, 175], "17": [19, 21, 27, 28, 33, 34, 35, 52, 57, 59, 60, 63, 66, 68, 69, 73, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 103, 106, 107, 110, 116, 118, 119, 122, 123, 129, 130, 136, 143, 146, 149, 151, 154, 160, 164, 168, 171, 174, 175], "mainten": [19, 25, 27, 28, 31, 34, 49, 56, 60, 62, 66, 69, 84, 99, 108, 115, 118, 132, 136, 138, 140, 143, 147, 148, 154, 160, 168, 175, 181], "agit": [19, 33, 34, 44, 60, 64, 69, 80, 113, 118, 148, 149, 150, 151, 152, 160, 168, 174, 175, 176, 179, 181], "savoir": [19, 24, 28, 33, 34, 36, 44, 48, 60, 65, 71, 75, 80, 82, 99, 107, 118, 124, 128, 140, 148, 152, 153, 155, 160, 163, 168, 174, 175, 176, 181], "approxim": [19, 27, 36, 44, 60, 69, 83, 84, 86, 95, 142, 143], "devient": [19, 52, 58, 74, 122, 129, 160, 168, 174, 175, 178, 179, 181, 183], "nul": [19, 35, 44, 53, 59, 66, 74, 87, 117, 122, 129, 145, 163, 175], "1055": 19, "toutefois": [19, 122, 160, 164, 168, 174, 175], "indispens": [19, 44, 124, 136, 147, 160, 166, 174], "loin": [19, 68, 69, 118, 160, 174, 175, 176], "000": [19, 29, 33, 34, 35, 43, 58, 83, 95, 107, 113, 114, 117, 118, 119, 125, 128, 143, 153, 175], "remarqu": [19, 33, 44, 59, 68, 69, 72, 80, 82, 84, 87, 88, 108, 160, 174, 175, 179, 181], "\u00e9volu": [19, 33, 44, 45, 49, 52, 56, 60, 63, 128, 166, 168, 174, 175, 176, 181, 183], "addition": [19, 74, 82, 103, 174], "valid": [19, 44, 52, 99, 118, 124, 125, 128, 136, 160, 168, 174, 175, 176, 183], "s_n": 19, "croiss": [19, 34, 35, 44, 58, 62, 69, 82, 84, 85, 86, 106, 107, 109, 130, 131, 140, 160, 174, 175], "u_i": [19, 143], "u_n": [19, 75, 160], "d\u00e9croiss": [19, 27, 44, 52, 62, 63, 84, 140, 143, 175], "chercheur": [19, 49], "success": [19, 33, 62, 143, 160, 168, 174, 175, 178], "01100111": 19, "011": [19, 117, 119], "111": [19, 35, 36, 69, 118], "hyper_cube_l": 19, "hyper_cube_dico": 19, "ind": [19, 95, 118, 147], "cle": [19, 44, 62, 70, 122, 140, 141], "choix": [19, 68, 69, 87, 92, 102, 130, 131, 147, 152, 154, 160, 174, 175, 179], "hyper_cub": 19, "Sur": [19, 66, 72], "port": [19, 27, 34, 36, 44, 48, 140, 146, 160, 178, 181], "prior": [19, 20, 44, 63, 66, 83, 122, 143, 160, 178], "occurrence2": 19, "uplet": 19, "recevr": [19, 160], "fr\u00e9quenc": [19, 52, 70, 122, 140, 152, 153, 168, 181], "curios": 19, "occurrence3": 19, "hyper_cube_liste2": 19, "m2": [19, 27, 55, 56, 62, 66, 80, 85, 86, 91, 156, 160, 168, 181], "occurrence4": 19, "hyper_cube_liste3": 19, "occurrence5": 19, "018": [19, 117], "plot_hypercub": [19, 26, 29], "esthet": 20, "fix": [20, 44, 52, 59, 82, 106, 122, 128, 140, 141, 162, 174, 175], "twoarg": 20, "onearg": 20, "retard": [20, 49, 178], "fcts_a": 20, "fcts_b": 20, "partagent": [20, 34, 168], "distinct": [20, 34, 53, 59, 83, 85, 86, 99, 106, 125, 169, 175], "pylint": 20, "surg": 20, "warning": [20, 59, 124, 165, 183], "w0640": 20, "loop": [20, 33, 34, 35, 39, 58, 59, 63, 66, 67, 82, 85, 86, 88, 95, 107, 113, 114, 115, 125, 128, 137, 143, 153, 181], "004": [20, 117, 118], "plot_lambda_funct": [20, 26, 29], "mont": [21, 82, 96, 178], "dout": [21, 28, 33, 44, 64, 80, 87, 88, 92, 95, 147, 152, 168, 174, 175], "itertool": [21, 67, 137], "op": [21, 175], "parenthes": [21, 44, 140, 149, 160, 163, 174, 175, 183], "pn": 21, "po": 21, "eval": 21, "zerodivisionerror": [21, 44, 163], "666": [21, 74], "plot_matador": [21, 29], "13": [22, 27, 28, 33, 34, 35, 36, 52, 54, 56, 58, 59, 60, 61, 62, 63, 66, 68, 69, 73, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 101, 103, 106, 107, 110, 115, 116, 117, 118, 121, 122, 125, 129, 131, 143, 147, 149, 153, 154, 160, 164, 168, 171, 174], "23": [22, 26, 33, 34, 35, 36, 52, 59, 60, 63, 69, 71, 74, 80, 82, 83, 85, 89, 90, 91, 92, 95, 110, 118, 119, 122, 129, 132, 136, 140, 143, 146, 153, 154, 171, 174, 175, 181], "41": [22, 33, 34, 36, 59, 95, 118, 121, 140, 153, 160, 174, 175], "42": [22, 33, 34, 36, 60, 69, 80, 84, 118, 140, 153, 160, 175], "0199993741698563e": 22, "05": [22, 25, 26, 27, 33, 34, 44, 52, 60, 63, 103, 106, 113, 171, 183], "599999763537198e": 22, "air": [22, 27, 28, 111, 142, 147], "n\u00e9anmoin": [22, 44, 49, 66, 69, 95, 99, 117, 138, 160, 163, 168, 169, 174, 175, 178, 179], "temporair": [22, 45, 175], "005": [22, 118, 119], "plot_numpy_trick": [22, 26, 29], "tour": [23, 64, 69, 100, 108, 124, 136, 168, 174, 178], "nan": [23, 33, 34, 60, 87, 88, 91, 113, 116, 147], "disparu": 23, "comport": [23, 44, 52, 60, 85, 130, 160, 168, 175, 176], "attendu": [23, 28, 33, 39, 44, 80, 82, 92, 95, 106, 115, 117, 174, 181], "corrig": [23, 27, 28, 39, 44, 60, 74, 77, 91, 122, 148, 149, 164, 166], "tir": [23, 33, 34, 35, 59, 60, 61, 63, 77, 83, 87, 88, 89, 90, 100, 106, 111, 122, 126, 127, 132, 133, 134, 135, 143, 145, 150, 151, 178, 181], "dropn": 23, "580": [23, 117], "plot_pandas_groupby": [23, 26, 29], "quar": 24, "pion": 24, "vingt": 24, "noir": [24, 62, 112, 143, 160, 168], "39": [24, 33, 34, 35, 36, 52, 56, 61, 62, 66, 68, 69, 70, 73, 74, 75, 76, 77, 80, 82, 83, 84, 88, 89, 90, 94, 95, 99, 104, 109, 110, 112, 113, 117, 118, 119, 121, 122, 123, 128, 129, 130, 131, 140, 141, 146, 147, 152, 153, 154, 156], "dami": 24, "enti": [24, 33, 34, 35, 44, 49, 52, 54, 65, 74, 99, 101, 106, 120, 126, 127, 133, 136, 149, 154, 160, 163, 168, 174, 175, 176, 179, 181], "reli": [24, 28, 44, 48, 53, 59, 64, 68, 69, 91, 131, 160, 168, 174, 178, 181], "vitess": [24, 136, 179], "utilisent": [24, 33, 35, 44, 136, 141, 162, 175, 181], "sembl": [24, 36, 52, 53, 59, 88, 138], "r\u00e9pons": [24, 27, 30, 32, 44, 54, 73, 82, 83, 85, 86, 87, 88, 92, 96, 108, 133, 135, 137, 155, 168, 174, 176], "pratiqu": [24, 33, 49, 52, 68, 154, 166, 168, 169, 171, 174, 175, 177, 183], "voisinag": [24, 89, 90], "quatr": [24, 27, 34, 44, 60, 70, 74, 81, 108, 109, 118, 124, 140, 147, 148, 160, 163, 174, 175, 176, 180, 181, 183], "coin": [24, 168], "libr": [24, 91], "sait": [24, 27, 34, 49, 58, 63, 68, 69, 82, 87, 88, 89, 90, 91, 99, 101, 107, 118, 130, 143, 146, 149, 154, 163, 164, 174, 175, 181], "contenu": [24, 27, 44, 45, 48, 121, 146, 147, 155, 160, 168, 174, 175, 176, 178], "revu": [24, 58, 133, 155, 180], "occup": [24, 80, 132, 168, 172, 176, 181], "assembl": [24, 49, 125, 154, 176], "num\u00e9rot": [24, 59, 108, 132, 151], "99": [24, 27, 34, 36, 52, 66, 87, 91, 95, 103, 125, 153, 160, 174], "Quels": [24, 33, 130], "d\u00e9sir": [24, 27, 56, 138, 147, 160, 163, 168, 174, 175, 176, 178], "dix": [24, 49, 52, 92, 148, 152, 160, 174, 175], "vid": [24, 34, 44, 58, 64, 80, 81, 85, 132, 140, 144, 145, 154, 160, 168, 174, 175, 176, 178], "adversair": 24, "indiqu": [24, 25, 33, 34, 36, 44, 45, 49, 57, 58, 75, 82, 92, 99, 113, 132, 143, 146, 149, 152, 155, 160, 163, 166, 168, 174, 175, 176, 178, 179, 181], "d\u00e9plac": [24, 63, 75, 85, 120, 155, 168, 176], "pion_prendr": 24, "advers": 24, "haut": [24, 25, 35, 63, 87, 93, 103, 140, 163, 168, 174, 183], "\u00e9chou": [24, 56, 86, 160, 163, 178], "pion_prendre_dict": 24, "damier_dict": 24, "laiss": [24, 28, 44, 56, 68, 69, 82, 87, 88, 102, 147, 151, 168, 175], "manqu": [24, 34, 35, 36, 44, 60, 69, 74, 119, 148, 149, 174, 175], "restent": [24, 36, 160], "\u00e9chiqui": [24, 33], "pion_prendre_list": 24, "carr": [24, 27, 33, 44, 81, 82, 83, 85, 86, 90, 93, 98, 111, 122, 123, 129, 146, 147, 148, 149, 154, 158, 160, 174, 175, 178], "damier_list": 24, "extend": [24, 44, 69, 76, 80, 94, 175, 176], "pres": [24, 33, 36, 82, 90, 95, 107, 109, 115, 142, 146, 153, 160, 163, 168, 174, 175], "hor": [24, 75, 89, 90, 107, 136, 160], "devr": [24, 28, 33, 49, 62, 69, 75, 107, 153, 160, 172, 174, 175, 181], "pion_prendre_bord": 24, "accept": [24, 34, 44, 84, 129, 138, 160, 168, 174, 175, 176, 183], "n\u00e9gat": [24, 27, 58, 74, 82, 91, 163, 173, 174, 175, 183], "plot_partie_dam": [24, 26, 29], "explor": [25, 28, 69, 80, 107, 160, 176], "notemm": 25, "api": [25, 166, 179, 181], "bytesio": [25, 26, 179], "ujson": [25, 113], "cloudpickl": [25, 113], "record": [25, 34, 110, 166, 179], "nom": [25, 33, 34, 36, 44, 45, 49, 58, 69, 72, 104, 109, 110, 113, 121, 124, 140, 146, 147, 153, 154, 160, 163, 168, 169, 174, 175, 179, 181, 183], "xavi": [25, 34, 48, 50, 68, 154, 174, 179, 183], "pr\u00e9nom": [25, 34, 44, 75, 109, 141, 174, 176, 179], "age": [25, 171, 179], "buff": [25, 26, 110, 176, 179], "seq": [25, 146, 147, 179], "getvalu": [25, 26, 110, 113, 117, 118, 119, 128, 179], "pr": [25, 117, 118, 119, 128, 147, 179], "u00e9nom": [25, 179], "load": [25, 34, 110, 176, 179], "ndarray": [25, 118, 119, 128, 179], "serializ": [25, 179], "att": [25, 179], "jsonencod": [25, 179], "myencod": [25, 179], "classnam": [25, 179], "__class__": [25, 44, 160, 163, 179], "__name__": [25, 39, 44, 63, 146, 147, 160, 168, 175, 178, 179], "jsondecod": [25, 179], "mydecod": [25, 179], "decod": [25, 70, 113, 141, 147, 153, 164, 172, 175, 179], "dec": [25, 69, 101, 179], "isinst": [25, 62, 99, 101, 118, 119, 128, 154, 163, 174, 179], "obj": [25, 44, 160, 163, 164, 168, 174, 175, 179], "__main__": [25, 39, 44, 99, 136, 146, 147, 160, 164, 168, 174, 175, 178], "0x7fe460284970": 25, "altern": [25, 33, 106, 168, 176, 179], "0030194999999935135": 25, "00040850000000602904": 25, "Ces": [25, 34, 35, 39, 44, 45, 49, 58, 69, 71, 118, 130, 146, 147, 152, 154, 160, 168, 169, 172, 174, 175, 178, 179, 181, 183], "0006966999999917789": 25, "0003722999999951071": 25, "enlev": [25, 34, 39, 44, 49, 52, 69, 70, 76, 79, 82, 90, 103, 138, 146, 166, 168, 175, 176, 178, 179], "creation": [25, 168], "3099999999185457e": 25, "lu": [25, 33, 44, 68, 153, 172, 176], "x80": [25, 179], "x04": [25, 26, 179], "x95f": [25, 179], "x00": [25, 26, 179], "x94": [25, 179], "x8c": [25, 179], "x07record": [25, 179], "x03nom": [25, 179], "x06xavi": [25, 179], "x07pr": [25, 179], "xc3": [25, 179], "xa9nom": [25, 179], "x94h": [25, 179], "x05": [25, 26, 179], "x08langag": [25, 179], "x03c": [25, 179], "x03ag": [25, 179], "x94k": [25, 179], "x06python": [25, 179], "x0bk": [25, 179], "x14ueu": [25, 179], "suppl\u00e9mentair": [25, 27, 33, 44, 74, 160, 163, 168, 175, 178, 181], "x95": 25, "x08__main__": 25, "x01a": 25, "x93": 25, "x81": 25, "x03att": 25, "x01r": 25, "x94sb": 25, "0x7fe463e16b30": 25, "duppliqu": 25, "surtout": [25, 48, 62, 63, 80, 106, 122, 146, 160, 174, 175], "voluminu": 25, "att1": [25, 44, 179], "att2": [25, 44, 179], "x01b": 25, "x04att1": 25, "x04att2": 25, "x06ub": 25, "eviton": 25, "__getstate__": [25, 176, 179], "__setstate__": [25, 176, 179], "setattr": [25, 179], "0x7fe460284280": 25, "00044570000000021537": 25, "0003687999999897329": 25, "habituel": 25, "niveau": [25, 35, 52, 59, 63, 118, 160, 168, 169, 174, 176, 181], "comparaison": [25, 35, 44, 66, 103, 113, 154, 160, 171, 175], "pr\u00e9visibl": 25, "acc\u00e9ler": [25, 26, 27, 34, 64, 117, 118, 128, 129, 141, 175, 180], "protocol": [25, 26, 178], "highest_protocol": 25, "00046119999998950334": 25, "tent": [25, 62, 86, 112, 181], "myfunc": 25, "x01x": 25, "x01f": 25, "x06myfunc": 25, "x94u": 25, "0x7fe46396f5b0": 25, "contourn": [25, 69, 70, 168, 179], "obstacl": [25, 70, 179], "xfb": 25, "x01": [25, 26], "x17cloudpickl": 25, "x0e_make_funct": 25, "x03": [25, 26], "r_builtin_typ": 25, "x08codetyp": 25, "x85": 25, "x94r": 25, "x01k": 25, "x00k": 25, "x02kcc": 25, "x08": [25, 26], "x00d": 25, "x17": 25, "x94nk": 25, "x86": 25, "x8cj": 25, "xadupr": [25, 69, 117, 146, 164], "_doc": [25, 40], "plot_serialisation_exampl": [25, 26, 29], "x94m": 25, "x97": 25, "x01c": 25, "x02": [25, 26], "x0b__package__": 25, "x08__name__": 25, "x94unnnt": 25, "x1ccloudpickl": 25, "cloudpickle_fast": 25, "x12_function_setstat": 25, "x19": 25, "x16h": 25, "x0f": 25, "x0c__qualname__": 25, "x0f__annotations__": 25, "x0e__kwdefaults__": 25, "x94n": 25, "x0c__defaults__": 25, "n__module__": 25, "x07__doc__": 25, "x0b__closure__": 25, "x17_cloudpickle_submodul": 25, "x0b__globals__": 25, "x86r0u": 25, "0x7fe46396f0a0": 25, "typeerror": [25, 33, 73, 74, 76, 77, 82, 99, 101, 118, 160, 163, 174, 175], "0x7fe46396f400": 25, "fonctionnent": [25, 36, 39, 44, 49, 96, 98, 146, 163, 168], "ens": [25, 27, 84, 101, 115, 122, 125, 160, 169, 174], "x953": 25, "x02it": 25, "x08builtin": 25, "x04it": 25, "x02e": 25, "x00bu": 25, "list_iterator": 25, "0x7fe463b12740": 25, "Ils": [25, 45, 49, 96, 110, 113, 124, 147, 160, 163, 166, 169, 172, 175, 176, 181], "ensgen": 25, "cannot": [25, 35], "generator": [25, 44, 73, 100], "039": [25, 117], "lectur": [26, 33, 36, 41, 69, 112, 113, 178, 179, 181], "d\u00e9s\u00e9rialis": [26, 179], "r\u00e9alis": [26, 35, 36, 59, 82, 103, 107, 136, 160, 168], "strict": [26, 133, 149, 172, 179], "protoc": 26, "messag": [26, 33, 39, 44, 45, 49, 70, 93, 140, 141, 146, 147, 160, 163, 165, 166, 174, 175, 176, 180], "contrair": [26, 45, 49, 54, 56, 87, 88, 122, 135, 140, 160, 163, 168, 174, 175, 176, 178, 181], "gp": 26, "__version__": [26, 40, 43], "tutorial": [26, 41], "os": [26, 110, 118, 119, 121, 128, 146, 164, 168, 176, 178, 183], "sy": [26, 44, 69, 83, 117, 118, 119, 122, 146, 164, 169, 172, 175, 178, 181], "struct": [26, 176], "sphinx_runpython": [26, 44, 160, 164, 174, 179], "runpython": [26, 44, 160, 164, 174, 179], "run_cmd": 26, "json_format": 26, "messagetojson": 26, "parsejson": 26, "syntax": [26, 27, 33, 34, 44, 47, 76, 112, 146, 148, 149, 154, 162, 168, 173, 176, 179, 182], "proto2": 26, "optional": 26, "int32": [26, 36, 59, 91], "enum": 26, "phonetyp": 26, "mobil": 26, "phonenumb": 26, "repeated": 26, "phon": 26, "addressbook": 26, "peopl": 26, "debian": [26, 42], "apt": [26, 42, 43, 168], "proto": 26, "w": [26, 36, 44, 53, 68, 83, 84, 110, 113, 130, 131, 132, 133, 141, 146, 147, 152, 153, 164, 166, 168, 176, 181, 183], "cmd": [26, 43, 164, 168], "python_out": 26, "err": [26, 60, 164, 172], "wait": [26, 82, 181], "listd": [26, 110, 121, 146, 168, 176], "plot_tarabiscot": [26, 27, 29], "plot_serialisation_protobuf": [26, 29], "schema_pb2": 26, "internal": [26, 119], "build": [26, 42, 124, 164], "_build": 26, "descriptor": [26, 160, 168, 178], "_descriptor": 26, "descriptor_pool": 26, "_descriptor_pool": 26, "symbol_databas": 26, "_symbol_databas": 26, "protoc_insertion_point": 26, "_sym_db": 26, "addserializedfil": 26, "x0cschem": 26, "x12": 26, "x08tutorial": 26, "xdb": 26, "x06person": 26, "x0c": 26, "x04nam": 26, "x18": 26, "x02id": 26, "x65mail": 26, "x06phon": 26, "x0b": 26, "x32": 26, "x1c": 26, "x1am": 26, "x0bphonenumb": 26, "x0e": 26, "x06numb": 26, "x04typ": 26, "x1a": 26, "x04hom": 26, "tphonetyp": 26, "x06mobil": 26, "x10": 26, "x04work": 26, "x41": 26, "x64": 26, "x64r": 26, "utlis": 26, "noq": 26, "e402": 26, "1234": 26, "john": [26, 113], "jdo": 26, "555": 26, "4321": 26, "serializetostring": 26, "x08john": 26, "xd2": 26, "x10jdo": 26, "x08555": 26, "0001368000002912595": 26, "fromstring": 26, "parsefromstring": 26, "00017549999938637484": 26, "479999971517827e": 26, "db": [26, 147], "5678": 26, "johnet": 26, "doet": 26, "jtdoet": 26, "example2": 26, "777": 26, "bytesiz": 26, "pack": [26, 174, 176, 181], "x017": 26, "x0fjohnet": 26, "xa": [26, 68], "x13jtdoet": 26, "x08777": 26, "db2": 26, "bsiz": 26, "unpack": [26, 174, 176], "015570000000479922": 26, "js": [26, 57, 62], "012188699999569508": 26, "501": [26, 63], "cens": [27, 91, 148, 163], "effect": [27, 160, 168, 169, 174], "identif": [27, 44, 45, 60, 125, 160, 168, 175, 178], "Ici": [27, 44, 92, 101, 104, 174, 175, 181], "d\u00e9signent": [27, 84, 160], "fall": [27, 77, 87, 88, 92, 118, 147], "escompt": 27, "mi": 27, "ordre": [27, 28, 33, 34, 35, 44, 62, 63, 66, 69, 75, 80, 84, 85, 86, 92, 101, 103, 109, 122, 130, 131, 132, 135, 138, 140, 154, 160, 169, 175, 181], "lor": [27, 28, 33, 34, 36, 44, 45, 49, 52, 58, 65, 69, 82, 96, 101, 113, 130, 131, 136, 140, 146, 147, 160, 162, 163, 166, 168, 175, 176, 178, 179, 181, 183], "quant": [27, 44, 99, 160, 174], "pieg": [27, 33], "entrer": [27, 168, 181], "n\u00e9cessit": [27, 44, 49, 72, 87, 131, 149, 160, 168, 176], "3n": [27, 75], "exigent": 27, "rar": [27, 39, 44, 49, 124, 146, 147, 160, 168, 172, 175, 176], "exig": [27, 52], "ver": [27, 44, 52, 59, 62, 80, 82, 84, 87, 88, 111, 143, 148, 160, 163, 168, 172, 174, 175, 176, 181], "con\u00e7oit": [27, 69, 160, 181], "debug": [27, 164, 181], "\u00e9tap": [27, 34, 44, 60, 62, 64, 69, 79, 84, 116, 120, 130, 131, 136, 168, 175, 176, 179, 183], "releas": [27, 166, 181], "\u00f4t\u00e9": [27, 62, 68, 82], "devenus": 27, "inutil": [27, 39, 44, 66, 72, 95, 137, 138, 166, 174, 181], "quantit": [27, 84, 86, 133, 152], "invisibl": [27, 168], "favoris": 27, "adapt": [27, 34, 66, 113, 125, 160, 181], "multitud": [27, 168], "rectangl": [27, 90, 98, 107, 160, 168], "h\u00e9rit": [27, 44, 103, 163, 166, 168, 174], "surfac": [27, 69, 79, 82, 98], "red\u00e9fin": [27, 44, 45, 113, 136, 160, 163], "para\u00eet": [27, 68, 103, 117, 122, 125, 152, 160, 162, 174, 176, 178, 183], "losang": 27, "Est": [27, 28, 33, 59, 82, 109, 118, 130, 137], "introduir": [27, 34, 149, 162, 168, 174, 181], "princip": [27, 33, 52, 60, 160, 165, 168, 176, 183], "angle": [27, 94, 168], "paraiss": 27, "g\u00e9n\u00e9ral": [27, 34, 44, 49, 85, 95, 125, 130, 147, 152, 154, 160, 163, 164, 168, 174, 175, 179, 181], "afin": [27, 44, 82, 85, 86, 93, 133, 147, 154, 160, 163, 168, 172, 174, 175, 176, 181, 183], "b\u00e9n\u00e9fici": 27, "contien": [27, 152, 160, 163, 178], "thet": [27, 33, 174], "cos": [27, 72, 78, 79, 89, 94, 104, 140, 142, 143, 146, 147, 160, 178], "sin": [27, 72, 78, 79, 89, 94, 104, 134, 135, 160], "183676841431136": 27, "fill": [27, 90, 118, 160, 168], "sens": [27, 113], "emploi": [27, 147, 160, 168, 174, 175], "31622776601683794": 27, "03162277660168379": 27, "9999": [27, 91], "0001": [27, 60, 84, 89, 90, 121], "99999": 27, "1e": [27, 53, 82, 107, 116, 143], "0031622776601683794": 27, "999999": [27, 118], "0000000000000002e": 27, "9999999": 27, "000316227766016838": 27, "99999999": 27, "999999999": 27, "0000000000000003e": 27, "1622776601683795e": 27, "9999999999": [27, 160], "99999999999": 27, "1622776601683796e": 27, "999999999999": 27, "9999999999999": 27, "1622776601683797e": 27, "99999999999999": 27, "0000000000000001e": 27, "999999999999999": 27, "162277660168379e": 27, "9999999999999999": [27, 160], "18": [27, 28, 33, 34, 35, 36, 46, 52, 57, 59, 60, 62, 63, 66, 69, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 99, 106, 107, 110, 116, 118, 121, 122, 129, 134, 135, 136, 137, 140, 143, 146, 147, 149, 151, 154, 155, 160, 170, 171, 183], "signif": [27, 33, 34, 35, 44, 45, 57, 69, 82, 88, 95, 117, 136, 146, 147, 148, 154, 160, 162, 163, 168, 169, 171, 174, 175, 176, 181, 183], "8999999985098839": 27, "3162277683729184": 27, "9900000002235174": 27, "0999999988824129": 27, "9990000000689179": 27, "0009999999": 27, "03162277551199656": 27, "9999000000098022": 27, "999999e": 27, "009999999509891484": 27, "9999900000011621": 27, "0031622774764217087": 27, "9999990000001162": 27, "0009999999418942008": 27, "999999900000013": 27, "0003162277453952373": 27, "999999990000001": 27, "999999525523424e": 27, "9999999990000001": 27, "162277439909038e": 27, "99999937286775e": 27, "162277516708525e": 27, "999999437919884e": 27, "162277525279896e": 27, "999999488741863e": 27, "162277498494361e": 27, "999999422567411e": 27, "162277503725911e": 27, "999999712080637e": 27, "1622776099917643e": 27, "matrice_carree_2": 27, "determin": [27, 70], "m1": [27, 55, 56, 60, 62, 66, 80, 85, 86, 156, 168], "fauss": [27, 66, 118, 134, 135, 174], "M": [27, 33, 34, 53, 68, 82, 83, 84, 86, 87, 88, 91, 95, 109, 123, 130, 132, 137, 141, 143, 147, 153, 158, 168, 171, 175, 183], "begin": [27, 33, 58, 60, 75, 83, 84, 92, 130, 131, 143, 160, 164], "cc": [27, 56, 87, 88, 118], "det": [27, 33], "T": [27, 33, 34, 35, 36, 43, 44, 53, 59, 60, 63, 68, 83, 84, 87, 88, 109, 111, 115, 120, 123, 145, 163], "tr": [27, 43, 101, 110, 121], "lambda_1": 27, "lambda_2": 27, "v\u00e9rifient": [27, 87, 88, 151, 183], "lll": 27, "\u00e9quat": [27, 60, 83, 84, 175], "discrimin": [27, 152], "polyn\u00f4m": [27, 140], "sqrt": [27, 33, 85, 86, 104, 143, 151, 160, 174, 178, 181], "valeurs_propr": 27, "9999990000110609": 27, "000000999988939": 27, "m_2": [27, 87, 88], "_2": 27, "99999999900000002828": 27, "000000001": 27, "Quelles": [27, 93, 130], "diagonalis": [27, 160], "faux": [27, 33, 134, 135, 160, 163, 174], "020": 27, "circuit": [13, 28, 69, 98], "intuit": [28, 36, 56, 80, 100, 160], "forc": [28, 33, 40, 58, 69, 85, 100, 111, 131, 147, 168, 174, 175, 176, 178], "line2d": [28, 85, 86], "0x7fa94763ab90": 28, "\u00e9loign": [28, 33, 36, 89, 90, 95], "optimal": [28, 49, 67, 84, 85, 86, 92, 96, 130, 131, 135], "0x7fa96217dde0": 28, "constat": [28, 147], "croisent": [28, 64], "d\u00e9duit": [28, 65, 87, 115, 143], "am\u00e9lior": [28, 35, 56, 68, 129, 133, 160, 164, 174, 178], "d\u00e9crois": 28, "milieu": [28, 58, 84, 120, 154, 155], "diminu": [28, 34, 52, 130], "pair": [28, 34, 35, 44, 59, 62, 64, 69, 75, 80, 84, 89, 90, 95, 96, 98, 126, 127, 130, 131, 160, 168, 175], "dessous": [28, 36, 44, 74, 101, 125, 160, 168, 171, 175, 181], "x0": [28, 33], "y0": 28, "y1": [28, 74, 89, 90, 94, 124], "292330591173462": 28, "d0": [28, 60], "ordre2": 28, "xo": 28, "yo": [28, 183], "341397079008917": 28, "9548761833186405": 28, "8631425458159007": 28, "8456272108828561": 28, "0x7fa94c0d1180": 28, "voil\u00e0": [28, 146, 147], "supposon": [28, 58, 138], "faison": 28, "oublion": [28, 147], "137631508007717": 28, "graphiqu": [28, 34, 41, 49, 60, 69, 150, 152, 153, 160, 168, 174, 178, 180, 184], "8052001053865456": 28, "9739961042920614": 28, "8147617077948388": 28, "0x7fa94bfc29b0": 28, "concord": 28, "oubl": [28, 146, 148, 149, 174], "d\u00e9liber": 28, "bouclag": 28, "tendanc": 28, "gagn": [28, 44, 98, 118, 154, 169, 175, 179, 181], "boug": [28, 85, 89, 90, 144, 168], "weight": [28, 121], "bold": 28, "740352647987561": 28, "0081199538507615": 28, "9966224243230848": 28, "8728691050558798": 28, "522924291603524": 28, "pourt": [28, 33, 122, 143, 146, 160, 163], "correct": [8, 28, 33, 44, 47, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 124, 160, 163, 174, 175, 176], "tort": [28, 50], "empress": 28, "7214335447427036": 28, "2431331046193033": 28, "118929138241379": 28, "9399537486282151": 28, "848220111125475": 28, "8297080670435762": 28, "23407436285281968": 28, "23141818184855922": 28, "Pas": [28, 41, 56, 60, 63, 64, 115, 136], "parf": [28, 86], "conform": [28, 183], "mien": [28, 147], "inchang": [28, 160, 174, 175, 181], "parfait": [28, 52, 62, 174, 175], "voit": [28, 33, 34, 44, 52, 68, 87, 88, 92, 105, 106, 136, 163, 183], "circonst": [28, 146], "aurion": 28, "al\u00e9": [28, 89, 90], "permutation_rnd": 28, "8476621280516345": 28, "3199871306554722": 28, "8810707833443141": 28, "8575701970529361": 28, "8571236004366429": 28, "3037264087729815": 28, "03717707930068548": 28, "aberr": [28, 60, 84, 95], "syst\u00e9mat": 28, "913964651299246": 28, "294046515504576": 28, "2023764900880596": 28, "1982004152982153": 28, "187839655906766": 28, "1639354407467406": 28, "5484190781132359": 28, "363880751818936": 28, "recommenc": [28, 53, 64, 85, 86, 87, 88, 100, 126, 127], "minit": 28, "n_permut": 28, "bordr": 28, "shuffl": [28, 125, 147], "8669800334772021": 28, "8449800420196413": 28, "8237571704989521": 28, "822760461350098": 28, "9551541397429326": 28, "4454818330167861": 28, "237": [28, 29, 34, 82], "plot_tsp": [28, 29], "00": [29, 33, 44, 53, 59, 60, 63, 67, 69, 83, 84, 91, 100, 103, 111, 115, 116, 121, 129, 147], "auto_exampl": 29, "mb": [29, 58], "annex": [30, 178], "el\u00e9ment": [30, 32, 133, 135], "incontourn": [31, 35, 36, 175], "tant": [31, 34, 44, 53, 59, 64, 85, 86, 104, 130, 160, 174, 175, 176, 178, 181], "simplifient": 31, "echiqui": [32, 124], "cribl": [32, 174], "erathosthen": 32, "algebr": 32, "simul": [32, 83, 91, 98, 126, 127, 145, 160, 174, 178, 181], "r\u00e9gress": [32, 83, 84, 85], "maximis": [32, 85, 86, 103], "vraisembl": [32, 60], "r\u00e9f\u00e9rent": [32, 44, 160, 163, 174, 175, 176, 178, 181], "raccourc": [32, 44, 122, 160, 175], "original": [32, 36, 45, 46, 69, 87, 88, 122, 164, 170, 183], "docstring": [32, 46, 170], "d\u00e9di": [33, 49, 124], "aven": [33, 179], "deep": [33, 48, 118], "\u00e9merg": [33, 181], "offrant": 33, "vari": [33, 44, 63, 90, 93, 113, 130, 160, 175, 176], "cpu": 33, "pytorch": 33, "\u00e9mergent": 33, "usag": [33, 34, 44, 49, 52, 66, 102, 113, 123, 146, 147, 148, 160, 165, 169, 175, 176, 180, 181], "standardis": 33, "presqu": [33, 54, 69, 85, 105, 129, 130, 140, 168, 174, 176, 181], "inlin": [33, 34, 35, 36, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 78, 79, 82, 85, 86, 87, 88, 89, 90, 106, 107, 109, 111, 115, 116, 125, 129, 143, 147, 150, 151, 153, 164], "convent": [33, 34, 35, 36, 44, 56, 102, 104, 136, 146, 147, 154, 163, 165, 175], "Cet": [33, 82, 83, 84, 125, 150, 151, 155, 160, 163, 168, 174, 176, 178], "etc": [33, 42, 52, 132, 178], "ndim": 33, "int64": [33, 34, 35, 36, 91, 95, 111, 118], "s\u00e9lection": [33, 34, 36, 52, 168, 176], "automat": [33, 34, 44, 87, 121, 146, 147, 152, 160, 168, 175, 176], "allez": [33, 63], "jet": [33, 34, 55, 69], "bb": [33, 55], "assign": [33, 34, 83, 178], "cast": 33, "casting": 33, "aa": [33, 55, 147, 156, 169, 183], "dimmensionnel": 33, "aplat": 33, "1d": 33, "transposed": 33, "flatten": [33, 118], "flattened": 33, "multidimensionnel": [33, 83], "2d": [33, 112], "mask": [33, 34], "extrair": [33, 34, 58, 62, 183], "\u00e9lement": [33, 34, 52, 101, 111], "ar": [33, 122, 131, 147], "arang": [33, 52, 53, 59, 63, 87, 88, 93, 95, 107, 118], "idx": 33, "idx_bool": 33, "did": [33, 160], "match": [33, 160, 164, 174, 183], "indexed": 33, "along": 33, "corresponding": [33, 40], "essai": [33, 35, 44, 49, 60, 61, 69, 84, 95, 103, 112, 113, 118, 154, 163, 164, 168, 172, 175, 176, 181], "list_python": 33, "integer": [33, 126, 127], "slic": [33, 36], "cr\u00e9on": 33, "step": [33, 82, 121], "flott": 33, "origin": [33, 40, 57, 171], "shallow": 33, "fourn": [33, 34, 44, 69, 171, 178], "pi": [33, 34, 44, 63, 78, 79, 80, 89, 90, 94, 113, 119, 160, 178], "14159265": 33, "indirect": [33, 160, 163], "linspac": 33, "subsidiair": 33, "quoi": [33, 34, 44, 52, 56, 74, 83, 113, 136, 140, 141, 182], "71828183": 33, "silenci": [33, 166], "vicieux": 33, "output": [33, 43, 163], "r\u00e2l": 33, "habitu": 33, "naturel": [33, 122], "coh\u00e9rent": [33, 44], "nuit": [33, 49, 147], "reten": [33, 44, 146, 169, 175, 176, 178, 181], "notanumb": 33, "slice_of_d": 33, "nslice_of_d": 33, "nd": 33, "fancy_indexed_subarray": 33, "nfancy_indexed_subarray": 33, "reshap": [33, 35, 83, 84, 95, 116, 118, 119, 123], "fortran": [33, 35, 106], "column": [33, 34, 36, 42, 60, 61, 83, 87, 88, 91, 109, 110, 116, 121, 125, 147, 168], "connaissent": [33, 147], "matlab": 33, "jok": 33, "infer": [33, 60, 137], "zeros_lik": 33, "ones_lik": 33, "horizontal": [33, 52, 131, 168], "vertical": [33, 168], "concatenat": [33, 34, 52], "gmat": 33, "axis": [33, 34, 35, 36, 37, 59, 60, 61, 63, 64, 84, 87, 88, 95, 123], "hstack": [33, 35, 83, 129], "vstack": [33, 35, 89, 90, 118], "8x8": [33, 124], "til": [33, 81], "extract": [33, 154], "ccccc": 33, "ccc": 33, "routin": [33, 178], "d\u00e9clar": [33, 34, 147, 175, 181], "allon": [33, 86, 147, 168], "arithmet": 33, "scalair": [33, 34], "effectuent": [33, 44, 174], "adopt": 33, "36787944": 33, "3890561": 33, "08553692": 33, "54": [33, 34, 36, 37, 69, 103, 153], "59815003": 33, "provoqu": [33, 34, 39, 44, 49, 74, 76, 77, 140, 148, 164, 166, 174, 175, 178], "tmp": [33, 36, 43, 59, 60, 117, 118, 119], "ipykernel_1096": 33, "2601360242": 33, "runtimewarning": 33, "divid": [33, 134, 135], "encountered": 33, "33333333": 33, "valueerror": [33, 35, 55, 118, 124, 156, 158, 163, 164, 174, 175], "operand": [33, 44, 74, 160], "broadcast": [13, 33], "togeth": [33, 134, 135], "sep": [33, 34, 36, 44, 60, 91, 130, 131, 175, 178, 183], "commun": [8, 33, 34, 35, 56, 70, 96, 152, 160, 174, 175, 176, 179, 181], "dupliqu": [33, 110, 168], "newax": [33, 118], "38": [33, 34, 36, 76, 83, 88, 118, 140, 147], "r\u00e9duit": [33, 35, 44, 45, 56, 70, 80, 87, 88, 92, 120, 129, 137, 152, 168, 174], "existent": [33, 44, 49, 52, 59, 102, 135, 140, 147, 160, 174, 175, 176], "unes": [33, 44, 57, 60, 77, 89, 90, 160, 163, 168, 174, 175], "op\u00e8rent": 33, "\u00e9ventail": 33, "particuli": [33, 34, 44, 52, 59, 63, 68, 99, 113, 119, 125, 147, 152, 160, 163, 164, 166, 168, 169, 174, 175, 176, 181], "qr": 33, "svd": 33, "commen\u00e7on": 33, "triangulair": [33, 59, 158], "tril": 33, "vu": [33, 36, 60, 68, 104, 122, 130, 147, 160, 168, 175], "dot": [33, 35, 57, 62, 84, 181], "nouvel": [33, 34, 36, 44, 49, 52, 56, 64, 68, 91, 132, 140, 147, 160, 168, 174, 176, 178, 181], "whatsnew": 33, "465": 33, "dedicated": 33, "infix": 33, "operator": [33, 34, 160, 174], "linalg": [33, 53, 83, 84], "inv_a": 33, "inv": [33, 83, 84], "equat": 33, "46": [33, 34, 35, 36, 37, 66, 82, 112, 118, 153, 160], "eig": [33, 53], "eigresult": 33, "eigenvalu": 33, "eigenvector": 33, "00000000e": [33, 84], "93038066e": 33, "22044605e": 33, "47": [33, 34, 36, 103, 118, 125, 128, 143, 174, 183], "eigval": 33, "sp\u00e9cialis": [33, 176], "traver": [33, 160, 168, 174, 176], "pens": [33, 36, 49, 52, 75, 120, 140, 147, 152, 160, 175, 183], "virgul": [33, 44, 175, 176], "indiquent": 33, "48": [33, 34, 36, 37, 69, 84, 87, 91, 104, 112, 117, 118, 125, 153, 160], "symbol": [33, 44, 74, 84, 140, 146, 147, 153, 160, 174, 175, 176, 178, 181, 183], "49": [33, 34, 36, 37, 87, 91, 118, 121, 174], "66": [33, 36, 52, 66, 94, 113, 140, 160], "81": [33, 36, 52, 88], "96": [33, 35, 52, 91, 111, 125, 140, 143], "102": [33, 35, 117, 118, 132, 181], "126": 33, "150": [33, 60, 63, 84, 85, 89, 90, 91, 111, 113, 115, 160], "51": [33, 34, 36, 69, 84, 107, 112, 153], "priorit": [33, 44, 174, 175], "52": [33, 34, 36, 84, 87, 88, 91, 121, 175], "l\u00e9ger": [33, 34, 54, 55, 69], "53": [33, 34, 36, 69, 79, 107, 112, 125, 128, 153, 160, 174], "rank": [33, 113], "matrix_rank": 33, "000000000000016": 33, "77475828e": 33, "10542736e": 33, "88178420e": 33, "66453526e": 33, "77635684e": [33, 83], "apport": [33, 82, 161, 181], "natif": 33, "tirag": [33, 35, 52, 59, 89, 90, 91, 106, 111, 138, 139, 160], "referent": [33, 106, 160, 168, 178], "randomnumpy": 33, "4x3": 33, "gaussien": 33, "randn": [33, 35, 61, 92, 115, 181], "normal": [33, 87, 88, 89, 90, 113, 143, 160, 162, 168, 178, 181], "94646743": 33, "00894075": 33, "06740407": 33, "12685385": 33, "29565984": 33, "15423585": 33, "28897528": 33, "91623823": 33, "161901": 33, "86416828": 33, "06260028": 33, "19651082": 33, "convaincr": [33, 52, 74, 112, 147, 181], "pur": [33, 106], "1e6": [33, 95, 160], "normalvariat": 33, "179": [33, 82], "ms": [33, 34, 52, 58, 66, 82, 85, 86, 88, 95, 110, 113, 115, 125, 128, 137, 143], "std": [33, 34, 35, 58, 66, 85, 86, 88, 95, 107, 113, 114, 115, 125, 128, 137, 143, 153, 181], "run": [33, 34, 35, 58, 66, 85, 86, 88, 95, 107, 113, 114, 115, 125, 128, 137, 143, 153, 164, 168, 181], "10000": [33, 60, 63, 73, 74, 82, 88, 94, 106, 111, 115, 125, 128, 129, 169], "\u00e9quiprob": 33, "racin": [33, 59, 100, 154, 174, 175, 178], "instant": [33, 52, 60, 69, 164, 175], "amplitud": 33, "atteint": [33, 52], "combien": [33, 34, 36, 54, 74, 82, 89, 90, 93, 124, 140, 147], "dep": [33, 34, 36, 82, 86], "argmax": [33, 35, 128], "cumsum": [33, 34, 36, 106], "temporel": 33, "optimiz": [33, 85, 86, 136], "panel": [33, 34], "ad\u00e9quat": [33, 35, 174, 176], "viv": [33, 147], "tutoriel": [33, 34], "ga\u00ebl": 33, "varoqual": 33, "r\u00e9cent": [33, 147, 168, 174, 178, 180, 181], "solver": 33, "normalis": 33, "minimis": [33, 55, 69, 83, 84, 93, 130, 133, 160], "minimiz": [33, 136], "minimize_scalar": 33, "obtiendr": 33, "optimizeresult": 33, "d\u00e9velopp": [33, 56, 99, 166, 168, 175, 178, 179, 180], "toolbox": 33, "clair": [33, 44, 69, 75], "rafraich": 33, "bowl_peak": 33, "galler": [33, 34, 47], "contour3d_demo3": 33, "58": [33, 34, 36, 37, 69, 85, 103, 112, 121, 128, 153, 181], "mpl_toolkit": 33, "mplot3d": 33, "axes3d": 33, "cm": [33, 110], "colormap": [33, 168], "min_val": 33, "max_val": 33, "figur": [33, 47, 106, 108, 120, 131, 136, 160, 168, 178, 181], "add_subplot": 33, "x_ax": 33, "y_ax": 33, "meshgrid": 33, "xy": [33, 52, 83, 84, 85, 86], "z": [33, 34, 44, 52, 62, 68, 76, 83, 109, 112, 126, 127, 140, 141, 148, 160, 174, 175, 183], "get_test_dat": 33, "plot_surfac": 33, "rstrid": 33, "cstrid": 33, "cset": 33, "contour": [33, 36], "zdir": 33, "offset": 33, "cmap": 33, "coolwarm": 33, "set_xlabel": [33, 34, 107, 129, 153], "set_xlim": [33, 78, 79, 89, 90, 94], "set_ylabel": [33, 107, 129, 153], "set_ylim": [33, 78, 79, 89, 90, 94], "set_zlabel": 33, "set_zlim": 33, "59": [33, 34, 36, 37, 69, 112, 139, 153, 174, 181], "fun": 33, "cg": 33, "bfg": 33, "powel": 33, "cobyl": 33, "optim_r": 33, "nmethod": 33, "terminated": 33, "successfully": 33, "status": 33, "4052368582391728": 33, "690e": 33, "446e": 33, "nit": 33, "nfev": 33, "final_simplex": 33, "691e": 33, "814e": 33, "011e": 33, "052e": 33, "40523687026669025": 33, "670e": 33, "jac": 33, "863e": 33, "000e": 33, "njev": 33, "40523687025688715": 33, "451e": 33, "083e": 33, "hess_inv": 33, "287e": 33, "836e": 33, "154e": 33, "direc": 33, "854e": 33, "4052368678399868": 33, "892e": 33, "maxcv": 33, "norm_of_projected_gradient_": 33, "lt": [33, 34, 52, 53, 59, 60, 63, 69, 73, 74, 76, 77, 78, 79, 82, 85, 86, 99, 100, 103, 110, 111, 113, 115, 116, 117, 118, 119, 128, 129, 131, 136, 147, 154], "_pgtol": 33, "4052368702662145": 33, "828e": 33, "360e": 33, "2x2": 33, "lbfgsinvhessproduct": 33, "gt": [33, 34, 52, 58, 62, 68, 73, 74, 76, 77, 78, 79, 80, 82, 85, 86, 99, 100, 110, 113, 117, 118, 119, 128, 129, 131, 136, 147, 154], "4052": 33, "669": 33, "gradient": 33, "var": [33, 35, 36, 42, 43, 57, 62, 85, 125, 174, 176], "personnel": [33, 121], "optimum": 33, "reposent": 33, "relanc": [33, 68, 70, 147], "anneal": 33, "m\u00e9taheurist": 33, "61": [33, 36, 37, 52, 69, 84, 86, 91, 95, 114, 129, 153, 160, 174], "69": [33, 34, 36, 52, 119], "197": [33, 60, 82, 107], "\u00b5": [33, 34, 35, 58, 66, 85, 86, 88, 95, 107, 113, 114, 115, 125, 143, 153], "386": 33, "346": [33, 112, 119], "118": 33, "940": 33, "147": [33, 110], "vraissembl": 33, "rescaled": 33, "62": [33, 34, 36, 84, 91, 107, 121, 138, 153], "shifted_scaled_bowlpeak": 33, "05000000677266441": 33, "500e": 33, "229e": 33, "918e": 33, "635e": 33, "407e": 33, "579e": 33, "02": [33, 34, 52, 53, 63, 82, 83, 146], "174e": 33, "72": [33, 36, 52, 103, 118], "hessien": 33, "x_1": [33, 45, 84, 134, 135, 174], "x_2": [33, 134, 135], "epsilon": [33, 83, 84, 87, 88], "mathcal": [33, 52, 126, 127], "moindr": [33, 82, 104, 168], "ordinair": [33, 44, 181], "mco": 33, "hat": [33, 83, 178], "densit": [33, 52], "mu": [33, 60, 61, 91], "sigm": [33, 99, 101, 130, 131, 132, 133], "overlin": 33, "equiv": 33, "exercis": [33, 41], "auteur": [33, 49, 77, 176, 183], "63": [33, 34, 36, 52, 85, 103, 121, 146, 174, 183], "exo1": 33, "chess": 33, "chess2": 33, "exo1b": 33, "idx_row": 33, "idx_col": 33, "wrong": 33, "also": [33, 40, 168], "broadcasted": 33, "ix_": 33, "65": [33, 36, 52, 70, 91, 103, 121, 125, 129, 140, 141], "exo1c": 33, "is_prim": [33, 181], "67": [33, 36, 52, 74, 82, 84, 91, 128, 174], "71": [33, 36, 52, 80, 91, 95, 103, 118, 128, 160, 174], "73": [33, 36, 52, 69, 91, 113, 147, 160, 174], "79": [33, 36, 52, 88, 91, 95, 115, 125, 174], "83": [33, 36, 52, 84, 87, 88, 121, 174], "89": [33, 36, 52, 54, 69, 91, 93, 125, 128, 160, 174], "97": [33, 36, 52, 66, 69, 70, 75, 91, 92, 111, 114, 140, 174], "107": [33, 130], "109": [33, 35, 36, 69], "113": [33, 69, 117, 119], "127": 33, "131": [33, 84, 119], "137": 33, "139": [33, 106, 107, 117, 118], "149": [33, 110], "151": [33, 91], "157": 33, "163": [33, 36, 107], "167": 33, "173": [33, 82], "181": [33, 128], "191": [33, 82], "193": [33, 34, 82], "199": [33, 36, 82, 106], "211": 33, "223": [33, 34], "227": [33, 34, 67, 69, 82], "229": [33, 34, 82], "233": [33, 34, 54, 82, 148, 164], "241": [33, 34, 82], "251": [33, 34, 66, 111], "257": [33, 34, 143], "263": [33, 34], "269": [33, 34, 143], "271": [33, 34, 128], "277": [33, 34], "281": [33, 34], "283": [33, 34, 128], "293": [33, 34], "307": 33, "311": 33, "313": 33, "317": [33, 73], "331": 33, "337": 33, "347": [33, 34], "349": 33, "353": 33, "359": [33, 34], "367": 33, "373": [33, 36], "379": 33, "383": 33, "389": 33, "397": 33, "401": [33, 118], "409": 33, "419": 33, "421": 33, "431": [33, 164], "433": 33, "439": 33, "443": [33, 95], "449": 33, "457": 33, "461": [33, 117], "463": 33, "467": 33, "479": 33, "487": 33, "491": 33, "499": [33, 87, 88], "503": [33, 85], "509": [33, 66], "521": 33, "523": 33, "541": 33, "547": 33, "557": 33, "563": 33, "569": 33, "571": 33, "577": 33, "587": [33, 176], "593": 33, "599": 33, "601": 33, "607": 33, "613": 33, "617": 33, "619": 33, "631": 33, "641": 33, "643": 33, "647": [33, 128], "653": 33, "659": 33, "673": 33, "677": 33, "683": 33, "691": 33, "701": [33, 36, 117], "709": 33, "719": [33, 36], "727": 33, "733": 33, "739": [33, 36, 117], "743": 33, "751": 33, "761": [33, 36], "769": [33, 36], "773": 33, "787": [33, 86], "797": 33, "809": 33, "811": 33, "821": 33, "823": 33, "827": 33, "829": 33, "839": 33, "853": 33, "857": 33, "859": 33, "863": 33, "877": [33, 117], "881": 33, "883": [33, 60], "887": 33, "907": 33, "911": 33, "919": [33, 117], "937": 33, "941": [33, 119], "947": 33, "967": 33, "997": [33, 35, 86, 92], "barr": [33, 60, 68, 69, 76, 111], "961": 33, "n_walk": 33, "n_step": 33, "walk": [33, 62, 176, 183], "68": [33, 36, 52, 82, 85, 123], "hav": [33, 36, 134, 135, 168], "few": 33, "fig": [33, 36, 53, 60, 61, 63, 64, 67, 69, 87, 88, 89, 90, 91, 94, 103, 107, 109, 121, 129, 143, 150, 151, 153, 161, 179], "subplot": [33, 36, 52, 53, 59, 60, 61, 63, 64, 67, 69, 78, 79, 87, 88, 89, 90, 91, 94, 103, 107, 109, 121, 129, 143, 150, 151, 153], "figsiz": [33, 34, 36, 53, 59, 60, 61, 63, 64, 67, 69, 87, 88, 89, 90, 91, 94, 103, 106, 107, 109, 121, 129, 151, 153], "set_titl": [33, 34, 52, 64, 67, 69, 87, 88, 89, 90, 107], "squar": [33, 75, 84], "evolv": 33, "rms_posit": 33, "lw": [33, 91, 94], "fit": [33, 89, 90, 91, 128, 129], "highest": 33, "lowest": [33, 134, 135], "titl": [33, 36, 52, 53, 58, 60, 63, 103, 113, 115, 116, 164, 168, 174, 183], "wand": 33, "furth": [33, 110, 168], "hits_the_bound": 33, "2f": [33, 44, 52, 58, 67, 69, 175], "among": 33, "beyond": 33, "hit": 33, "first_hit": 33, "crossing": 33, "d\u00e9riv": [33, 60, 82, 83, 84, 143, 160, 181], "derive": 33, "2n": [33, 65, 73, 134, 135, 143], "n_sampl": 33, "x1_x2_ep": 33, "beta_hat": 33, "coef": [33, 116, 137, 160], "00346367": 33, "99844688": 33, "99958244": 33, "log_likelihood": 33, "sigma_squar": 33, "neg_log_likelihood_vectoriel": 33, "theta0": 33, "820124637851613": 33, "008e": 33, "402e": 33, "820e": 33, "ind\u00e9pend": [33, 39, 44, 45, 52, 59, 63, 108, 123, 174, 179, 181], "008188842074571": 33, "016697194262983": 33, "recet": 34, "cookbook": 34, "217": [34, 82], "inser": [34, 44, 56, 63, 64, 77, 93, 100, 118, 130, 154, 160, 163, 166, 168, 169, 172, 174, 175, 178, 181, 183], "fen\u00eatr": [34, 132, 167, 174, 175, 181], "extern": [34, 146, 177], "spyd": 34, "sql": [34, 36], "million": [34, 66], "decr": [34, 35, 53, 55, 69, 83, 84, 120, 160, 168, 172, 174, 175, 178, 181, 183], "gros": [34, 60, 110, 176], "mo": [34, 49, 80, 147, 174], "patient": 34, "astuci": 34, "wrangling": 34, "working": 34, "missing": [34, 174], "218": 34, "ipython": [34, 57, 58, 62, 68, 69, 73, 74, 76, 77, 82, 108, 117, 118, 120, 128, 131, 133, 142, 143, 144, 145, 146, 150, 151, 155], "imag": [34, 58, 68, 69, 78, 79, 82, 108, 110, 118, 120, 131, 133, 142, 143, 144, 145, 147, 150, 151, 155, 168, 181, 183], "td2df": 34, "pr\u00e9vu": [34, 98, 160, 163, 168, 176], "bloc": [34, 148, 149, 162, 168, 174], "uni": [34, 147], "dimensionnel": 34, "219": [34, 69, 82], "hello": [34, 44], "220": [34, 37, 82, 121], "missing1": 34, "missing2": 34, "city2cp_dict": 34, "paris14": 34, "75014": 34, "paris18": 34, "75018": 34, "malakoff": 34, "92240": 34, "6300": 34, "cit": [34, 44, 49, 60, 82, 174, 175, 181], "lien": [34, 41, 59, 60, 146, 160, 168, 176], "isnull": [34, 87], "notnull": 34, "221": [34, 35, 107, 143], "cities_list": 34, "paris12": 34, "vanv": 34, "cities2": 34, "\u00e9ventuel": [34, 92, 147], "222": [34, 82, 83], "75012": 34, "75": [34, 36, 52, 123, 128, 129, 130, 131, 183], "92": [34, 52, 69, 114, 125], "align": [34, 110, 149, 168, 174, 175], "paris13": 34, "224": [34, 82], "184480": 34, "12600": 34, "150028": 34, "150036": 34, "additionnent": 34, "nomm": [34, 36, 44, 49, 59, 148, 154, 160, 174, 175, 181], "225": 34, "postal": 34, "vill": [34, 69, 130, 131], "collect": [34, 45, 48, 59, 60, 105, 106, 114, 121, 122, 146, 153, 160, 169, 175], "apparent": [34, 125, 154, 168, 175], "226": [34, 82], "prix": [34, 82], "devis": 34, "euros": [34, 82], "228": [34, 82, 181], "230": [34, 82, 128, 160], "231": [34, 82], "aujourd": [34, 39, 44, 49, 52, 67, 146, 178], "hui": [34, 39, 44, 49, 52, 67, 146, 178], "ger": [34, 68, 81, 119, 163, 168, 172, 175, 176, 178, 181, 183], "section": [34, 42, 160, 163, 164, 168, 174, 176, 181], "briev": 34, "reprend": [34, 55, 62, 64, 101, 117, 138, 160, 163, 168, 174, 175], "obligatoir": [34, 44, 49, 138, 154, 160, 162, 174], "accent": [34, 82, 112, 130, 163, 175], "232": [34, 69, 82, 115, 122], "regard": [34, 44, 52, 54, 59, 60, 62, 69, 82, 95, 117, 119, 122, 125, 137, 141, 146, 148, 153, 168], "xlsx": [34, 110], "special": 34, "bash": [34, 43], "command": [34, 40, 43, 49, 110, 124, 130, 168, 174, 175, 176, 181], "caracter": [34, 36, 46, 49, 55, 56, 68, 70, 72, 73, 74, 76, 82, 99, 112, 113, 130, 136, 140, 146, 147, 148, 149, 152, 153, 154, 160, 163, 164, 168, 173, 174, 176, 178, 179, 181], "tail": [34, 36, 43, 60, 87, 88, 91, 110], "df_marathon": 34, "marathon": 34, "anne": [34, 147], "2011": [34, 49], "7589": 34, "2010": [34, 147, 183], "7601": 34, "2009": [34, 49, 134, 135, 147], "7547": 34, "2008": [34, 132, 133], "7600": 34, "2007": 34, "7637": 34, "234": [34, 82, 164, 175], "000000": [34, 36, 160, 174], "1989": 34, "754875": 34, "7933": 34, "660167": 34, "028545": 34, "385": 34, "289830": 34, "1947": 34, "7382": 34, "1981": [34, 147], "7698": 34, "1991": 34, "7820": 34, "2001": [34, 115, 147], "8046": 34, "500000": [34, 160, 174, 175], "10028": 34, "235": [34, 82, 85], "iloc": [34, 36, 60, 87, 91], "236": [34, 82], "loc": [34, 36, 52, 110, 160, 163, 164, 174, 175], "238": [34, 82], "240": [34, 60, 82], "set_index": [34, 36, 60, 63, 87, 88, 109, 115], "dfi": [34, 36], "r\u00e9fer": [34, 44], "242": [34, 85], "243": 34, "dupr": [34, 42, 48, 50, 174, 175, 179], "arrond": [34, 74, 174, 175], "cl\u00e9menc": 34, "reset_index": [34, 36, 91], "244": 34, "drop": [34, 36, 60, 63, 82, 91], "inplac": 34, "dfi2": 34, "plag": 34, "245": 34, "urllib": [34, 70, 113, 121, 147, 178], "246": 34, "2006": 34, "7683": 34, "247": 34, "2005": 34, "renomm": [34, 36, 162, 176], "248": [34, 91], "year": 34, "donnees_enquete_2003_televis": 34, "poidslog": 34, "ponder": [34, 84], "individuel": 34, "relat": [34, 36, 52, 53, 60, 83, 84, 91, 143, 168, 175, 176, 181], "poidsf": 34, "clt1freq": 34, "t\u00e9l\u00e9vis": 34, "clt2freq": 34, "unit": [34, 82, 147], "semain": [34, 36, 49, 146, 171], "mois": [34, 49, 60, 82, 171, 183], "renseign": [34, 44, 87, 88, 133, 160, 175, 181], "sauv": [34, 147, 176], "isnan": [34, 35, 87, 88], "apply": [34, 125], "filln": [34, 36], "249": 34, "jeux": [8, 34, 36, 49, 60, 69, 96, 98, 128, 129, 173, 181], "n_1": 34, "n_2": 34, "sas": 34, "250": [34, 52, 63, 89, 129], "amsterdam": 34, "london": 34, "boston": 34, "berlin": 34, "york": [34, 153], "chicago": 34, "fukuok": 34, "stockolm": 34, "1948": 34, "1949": [34, 113], "1950": 34, "1951": 34, "1952": 34, "1953": 34, "1954": 34, "1955": 34, "1956": 34, "chaining": 34, "indexing": [34, 35, 36, 73], "selecting": 34, "subset": [34, 126, 127], "1971": [34, 183], "112": 34, "7971": 34, "204": [34, 82], "8574": 34, "285": [34, 128], "8325": 34, "252": [34, 107], "query": 34, "253": [34, 86], "concat": [34, 36, 60], "254": [34, 82], "concat_lign": 34, "718": [34, 118], "concat_col": 34, "256": [34, 58, 65, 80, 147, 153, 172], "sort_valu": [34, 87, 88, 109], "ascending": 34, "7418": 34, "325": [34, 164], "202": [34, 82, 129], "7480": 34, "276": 34, "8047": 34, "caract\u00e9rist": [34, 49, 117, 168], "customis": 34, "gr": [34, 68, 91, 100, 118, 183], "generic": 34, "dataframegroupby": 34, "0x7f59b93a0d90": 34, "258": 34, "sort_index": 34, "259": [34, 66], "37916": 34, "68673": 34, "7583": 34, "200000": [34, 60], "7630": 34, "333333": 34, "7652": 34, "555556": 34, "mention": [34, 160, 163, 164, 168, 175], "aggreg": [34, 36, 60, 106], "personnalis": 34, "261": 34, "max_enti": 34, "agg": [34, 106], "8134": 34, "7968": 34, "262": 34, "nsmallest": 34, "264": 34, "171": [34, 82, 128], "170": [34, 82, 114, 160], "324": 34, "357": 34, "74": [34, 36, 52, 69, 91, 107, 137], "200": [34, 52, 63, 69, 88, 89, 90, 107, 110, 118, 120, 122, 125, 129, 144, 145, 168], "265": 34, "7544": 34, "7578": 34, "7439": 34, "7552": 34, "7541": 34, "1999": 34, "7542": 34, "7518": 34, "7570": 34, "7510": 34, "7663": 34, "7681": 34, "1983": 34, "7897": 34, "1986": [34, 183], "7953": 34, "inner": 34, "droit": [34, 44, 52, 58, 63, 69, 100, 102, 103, 111, 132, 147, 148, 168, 174, 175, 176, 178], "merging": 34, "joining": 34, "jointur": 34, "patat": 34, "fort": [34, 44, 70, 92, 95, 129, 136, 147, 176], "correspondent": [34, 136, 143, 175, 183], "266": 34, "pay": [34, 82, 147], "267": [34, 83], "usa": 34, "germany": 34, "uk": 34, "franc": [34, 35, 36, 60, 70, 82, 95, 115, 147, 152, 153, 172, 175, 176], "268": 34, "dfavecpay": 34, "left_on": [34, 36, 110], "right_on": [34, 36, 110], "192": [34, 69, 129], "joindr": 34, "c_1": [34, 126, 127], "c_2": 34, "c_3": 34, "respect": [34, 52, 87, 88, 115, 138, 147, 160, 174, 175], "a_i": [34, 106, 132], "b_i": [34, 132], "c_i": [34, 59], "contiendr": [34, 44, 130, 160, 163, 175, 176, 178], "a1": [34, 52, 94, 137, 160], "b1": [34, 52, 137, 147, 168], "c1": [34, 55, 56, 80, 137, 156, 160, 175], "b2": [34, 52, 137, 168], "c2": [34, 55, 56, 80, 90, 137, 156, 160, 175], "a2": [34, 52, 94, 137, 160], "c4": [34, 56, 147], "b3": [34, 137, 168], "c5": [34, 147], "pivot_t": [34, 36], "reshaping": 34, "piv": [34, 116], "1967": 34, "1968": [34, 69], "1969": 34, "1987": 34, "1988": 34, "syntactic": 34, "sugar": 34, "2em": [34, 73], "270": 34, "thre": 34, "four": 34, "272": 34, "273": 34, "riemann": 34, "3328334999999999": 34, "na\u00efv": [34, 142], "mn": [34, 64, 112], "\u00e9vident": [34, 58, 63, 69, 75, 87, 115, 117, 152, 153, 160, 168, 174, 176, 178, 183], "klib": 34, "appui": [34, 39, 44, 148, 166, 168], "magic": 34, "cellul": [34, 35, 132, 133, 146, 154], "274": [34, 128], "big_df": 34, "cle1": [34, 44, 73, 175], "cle2": [34, 44, 73, 175], "275": 34, "932": 34, "oubli": [34, 58, 87, 88, 120, 146, 154, 155, 160, 174, 176, 178, 181], "391": [34, 164], "gain": [34, 95, 103, 178], "compliqu": [34, 57, 60, 63, 163, 179, 181, 183], "aaa": [34, 55, 68, 76, 183], "mm": [34, 183], "jj": [34, 183], "hh": 34, "ss": 34, "timedelt": [34, 60, 171], "278": 34, "recr\u00e9": [34, 69, 174, 175, 178], "1900": 34, "total_second": 34, "inse": 34, "naissanc": [34, 62, 112, 113, 171, 183], "d\u00e9ces": [34, 36, 60], "2012": [34, 71], "279": [34, 117, 118, 164], "zipfil": [34, 110, 176, 178], "client": [34, 147, 160], "download_and_sav": 34, "root_url": 34, "respons": [34, 121, 147], "urlopen": [34, 70, 113, 121, 147], "timeouterror": 34, "urlerror": 34, "badstatuslin": 34, "enseign": 34, "compl": 34, "wb": [34, 121, 147, 176], "outfil": 34, "extractall": 34, "etatcivil2012_mar2012_dbas": 34, "etatcivil2012_nais2012_dbas": 34, "etatcivil2012_dec2012_dbas": 34, "2407910": 34, "dbfread": 34, "280": [34, 107], "dbf": 34, "dbase2df": 34, "dbase_filenam": 34, "cp437": 34, "df_civil": 34, "mar2012": 34, "utf8": [34, 44, 147], "246123": 34, "anaish": 34, "depnaish": 34, "indnath": 34, "etamath": 34, "anaisf": 34, "depnaisf": 34, "indnatf": 34, "etamatf": 34, "amar": 34, "mmar": 34, "jsemain": 34, "depmar": 34, "depdom": 34, "tudom": 34, "tucom": 34, "nbenfcom": 34, "sp\u00e9cial": [34, 35, 49, 101, 175, 176, 183], "accentu": [34, 49, 147, 173], "r\u00e9pandu": [34, 44, 113, 146, 160, 174], "lit": [34, 44, 49, 57, 62, 99, 113, 176, 181], "vardf": 34, "varlist_mariag": 34, "libel": 34, "char": [34, 109, 156, 168], "\u00e9pous": 34, "\u00e9poux": 34, "d\u00e9part": [34, 35, 54, 58, 59, 61, 65, 69, 125, 130, 136, 160, 168, 181], "domicil": [34, 91], "matrimonial": 34, "ant\u00e9rieur": 34, "enfant": [34, 101, 147], "tranch": 34, "urbain": 34, "absciss": [34, 88, 103, 142, 160], "\u00e2ge": [34, 52, 171], "mar": [34, 71], "femm": [34, 146, 147], "etant": [34, 52, 160, 163, 175, 178], "risqu": [34, 163], "lisibl": [34, 60, 101, 136, 154, 166, 168, 169, 174, 175, 176, 178, 179], "heatmap": 34, "282": 34, "visualiz": 34, "titr": [34, 49, 52, 60, 110, 147, 168, 181, 183], "grill": [34, 35, 81, 144, 168], "grid": 34, "superpos": [34, 60], "courb": [34, 58, 60, 142, 168], "284": 34, "as_index": 34, "kind": [34, 50, 60, 103], "bar": [34, 106, 109, 132], "fontsiz": 34, "legend": [34, 36, 52, 58, 60, 66, 89, 91, 107, 109, 129, 153, 174], "set_visibl": [34, 121], "l\u00e9gend": [34, 168, 181], "requ\u00eat": [34, 44, 83, 176], "r\u00e9partit": [8, 34, 89, 90, 98, 106], "excelwrit": 34, "existing": [34, 43], "workbook": 34, "docu": [34, 44, 48, 49, 57, 62, 146, 147, 152, 164, 176, 178, 181], "df1000": 34, "286": [34, 128], "ton_example100": 34, "clos": [34, 44, 146, 163, 164, 176, 183], "287": [34, 128], "poidlog": 34, "unnamed": 34, "889422": 34, "4766": 34, "865201": 34, "310209": 34, "12381": 34, "589746": 34, "740070": 34, "14685": 34, "431344": 34, "775545": 34, "9516": 34, "049939": 34, "732512": 34, "3925": 34, "907588": 34, "288": [34, 175], "289": 34, "8403": 34, "7386": 34, "8397": 34, "502091": 34, "2690": 34, "961176": 34, "8398": 34, "306852": 34, "1644": 34, "574141": 34, "8399": 34, "501181": 34, "13405": 34, "104689": 34, "8400": 34, "382758": 34, "7410": 34, "905653": 34, "8401": 34, "343340": 34, "1840": 34, "132652": 34, "obtenus": [34, 69, 153], "291": [34, 128], "292": [34, 168], "294": 34, "select": [34, 43, 168], "echantillon": 34, "830": 34, "295": 34, "7883": 34, "371429": 34, "7922": 34, "315789": 34, "7891": 34, "061224": 34, "7815": 34, "909091": 34, "8075": 34, "187500": 34, "296": [34, 112], "secondes_x": 34, "secondes_y": 34, "7937": 34, "028571": 34, "297": 34, "7466": 34, "8053": 34, "7871": 34, "7599": 34, "7661": 34, "7744": 34, "8456": 34, "7672": 34, "7665": 34, "7585": 34, "7515": 34, "7723": 34, "8163": 34, "7568": 34, "7722": 34, "7755": 34, "7508": 34, "7704": 34, "7519": 34, "7694": 34, "l\u00e0": [34, 35, 36, 39, 44, 60, 63, 69, 84, 89, 90, 102, 160, 164], "298": 34, "pivmean": 34, "7695": 34, "161290": 34, "7928": 34, "560976": 34, "8133": 34, "393939": 34, "299": 34, "1612903225805": 34, "909090909091": 34, "371428571429": 34, "061224489796": 34, "315789473684": 34, "5609756097565": 34, "028571428571": 34, "1875": 34, "393939393939": 34, "courus": 34, "300": [34, 63, 88, 89, 90, 110, 113, 119, 147, 150, 151, 168], "0000": 34, "00000": 34, "16129": 34, "301": [34, 112], "1982": 34, "1984": 34, "1992": 34, "1985": 34, "84": [34, 36, 52, 91, 129, 147, 160], "1963": 34, "302": [34, 117], "ageh": 34, "agef": 34, "303": 34, "scatt": [34, 36, 89, 90, 103, 150, 151, 153], "304": 34, "hexbin": 34, "305": 34, "differencehf": 34, "306": 34, "dissem": 34, "repsem": 34, "secondary_y": 34, "fonctionnal": [35, 146, 160, 166, 168, 175, 176, 178, 183], "improb": [35, 87], "basiqu": 35, "blas": 35, "assembleur": 35, "peaufin": 35, "gr\u00e9": 35, "mat\u00e9riel": 35, "pren": [35, 69, 84, 147, 168], "r\u00e9ag": [35, 168, 181], "integ": 35, "matint": 35, "540": 35, "ns": [35, 36, 87, 88, 107, 113, 125, 143, 153], "matintf": 35, "549": 35, "1005": 35, "996": [35, 86], "1008": [35, 91], "1009": 35, "106": [35, 60], "95": [35, 52, 91, 94, 111, 114, 128, 143], "108": 35, "multipli": [35, 66, 69, 171, 175], "valent": 35, "rand": [35, 53, 60, 64, 84, 91, 95, 111, 116, 129], "squeez": 35, "expend_dim": 35, "argmin": [35, 64, 88, 95], "prod": [35, 118], "commm": 35, "chisquar": 35, "p_": 35, "o_": 35, "ij": [35, 53, 59, 123], "histogram": [35, 125, 152, 153], "empir": 35, "plein": [35, 60, 61, 62, 66, 68, 92, 100, 112, 125, 136, 147, 168, 176, 181], "r\u00e9flech": [35, 49, 147], "csr_matrix": [35, 129], "re\u00e7oit": [35, 45, 49, 140, 160, 174, 175, 181], "t\u00e9l\u00e9phon": [35, 176], "portabl": [35, 178], "contact": 35, "chi_squar": 35, "pis": [35, 113], "keepdim": [35, 37], "pj": 35, "pispj": 35, "chi": [35, 98], "5798254016266716": 35, "98556467": 35, "47377301": 35, "77148185": 35, "26135908": 35, "27373018": 35, "0240458": 35, "55360714": 35, "3575369": 35, "71740732": 35, "3260206": 35, "876020129318981": 35, "plusieurs_tirag": 35, "99594032": 35, "67914189": 35, "98105965": 35, "93181536": 35, "86827764": 35, "5000": [35, 52, 70, 115, 117, 129], "407": [35, 153], "785": 35, "1273": 35, "2135": 35, "437878": 35, "49408914": 35, "55030028": 35, "60651142": 35, "66272256": 35, "7189337": 35, "77514485": 35, "83135599": 35, "88756713": 35, "94377827": 35, "99998941": 35, "bref": [8, 35, 60, 98, 129], "tient": [35, 36, 60, 80, 85, 87, 88, 91, 113, 160, 168, 174], "sauf": [35, 44, 69, 132, 143, 160, 178, 181, 183], "gross": 35, "creus": [35, 36, 87, 88, 96], "spars": [35, 40, 66], "concret": [35, 160, 163, 175, 181], "ide": 35, "1000000": [35, 105, 155, 160, 178], "setdiag": 35, "python395_x64": 35, "_index": 35, "125": [35, 143, 160], "sparseefficiencywarning": 35, "changing": 35, "sparsity": 35, "expens": 35, "lil_matrix": 35, "_set_arrayxarray": 35, "fou": 35, "rus": 35, "territoir": 35, "export": [36, 178], "col1": 36, "col2": 36, "schtroumph": 36, "schtroumphet": 36, "88": [36, 37, 52, 69, 91, 111, 114, 147, 160, 168], "offre": [36, 147, 160, 174, 175], "impress": [36, 146], "souven": [36, 38, 68, 86, 147, 174], "particular": [36, 45, 50, 134, 135, 160, 175, 176], "potentiel": [36, 63, 85], "sup055": 36, "notat": [36, 44, 65, 92, 123, 149, 174], "df1": 36, "col3": 36, "ipykernel_32232": 36, "3074685679": 36, "settingwithcopywarning": 36, "trying": 36, "row_index": 36, "col_index": 36, "instead": 36, "See": 36, "caveat": 36, "user_guid": 36, "returning": 36, "view": [36, 110], "avert": [36, 175], "stipul": [36, 82, 168, 178], "dispara\u00eetr": [36, 122, 166, 168], "cr\u00e9ent": [36, 168], "congestion": 36, "utilitair": 36, "isna": [36, 60], "to_datetim": [36, 60, 91], "isin": [36, 60], "filt": [36, 44, 117, 176], "pivot": [13, 36, 63, 98, 147, 157, 159], "quantil": [36, 84, 85, 95], "adress": [36, 48, 49, 60, 147, 168, 172, 174], "hospitali": [36, 91], "\u00e9pidem": [36, 53, 60, 61, 91], "gouv": [36, 60, 61, 91], "dataset": [36, 60, 91, 110, 128, 129], "63352e38": [36, 91], "d353": [36, 91], "4b54": [36, 91], "bfd1": [36, 91], "f1b3ee1cabd7": [36, 91], "08c18e08": 36, "6780": 36, "452d": 36, "9b8c": 36, "ae244ad529b3": 36, "reg": [36, 68, 147, 174], "cl_age90": 36, "hosp": [36, 91], "hospconv": 36, "ssr_usld": 36, "rad": [36, 91], "dc": [36, 91], "219577": 36, "94": [36, 52, 60, 91, 93, 103], "387": [36, 60], "219578": 36, "536": 36, "219579": 36, "810": [36, 91], "129": [36, 106], "219580": 36, "888": [36, 168], "219581": 36, "388": 36, "121": [36, 117], "datetime64": 36, "agg_par_jour": 36, "26110": 36, "1452": 36, "14586": 36, "9311": 36, "1717663": 36, "271176": 36, "26239": 36, "1435": 36, "14707": 36, "9336": 36, "1718630": 36, "271254": 36, "26255": 36, "1465": 36, "14704": 36, "9323": 36, "763": 36, "1719634": 36, "271322": 36, "26253": 36, "1460": 36, "14680": 36, "9344": 36, "1720370": 36, "271394": 36, "26174": 36, "1413": 36, "14658": 36, "9354": 36, "749": 36, "1721380": 36, "271456": 36, "evolu": [36, 60, 87, 88], "hospitalis": [36, 60], "\u00e9chel": [36, 60, 96], "logarithm": [36, 60, 73, 120, 125, 140, 163], "logy": [36, 60, 63], "covid49": 36, "agg_par_jour49": 36, "372": [36, 115], "180": [36, 60, 82, 117, 118], "57846": 36, "1554": 36, "377": [36, 54], "184": [36, 122, 129], "57859": 36, "374": [36, 100], "177": [36, 82, 106, 119], "57877": 36, "375": 36, "175": 36, "57889": 36, "57900": 36, "nag": 36, "diff": [36, 52, 61, 87, 88, 91, 125, 176, 181], "736": [36, 91], "1010": 36, "rolling": [36, 60], "cent": [36, 39, 44, 160], "roll": 36, "857143": 36, "142857": 36, "571429": 36, "428571": 36, "76": [36, 52, 87, 111, 164], "gen": [36, 56, 60], "h\u00f4pital": [36, 60], "gu\u00e9rison": [36, 60], "correl": [36, 87, 88], "r\u00e9anim": 36, "d\u00e9cal": [36, 44, 120, 140, 151, 174, 175], "dis": [36, 70, 147], "pic": 36, "77": [36, 52, 60, 69, 86, 91, 160], "714286": 36, "285714": 36, "78": [36, 52, 58, 111, 160], "data_last": 36, "ts": [36, 171], "dclag": 36, "shift": [36, 168], "realag": 36, "ts_cor": 36, "corr": [36, 87, 88], "delay": [36, 82, 91], "corr_dc": 36, "corr_r": 36, "m\u00e9dical": 36, "sir": [36, 60], "sex": 36, "338240": 36, "1766": 36, "338241": 36, "338242": 36, "338243": 36, "978": 36, "338244": 36, "4acad602": 36, "d8b1": 36, "4516": 36, "bc71": 36, "7d5574d5f33e": 36, "iso": [36, 147], "8859": [36, 147], "1911493942": 36, "dtypewarning": 36, "mixed": 36, "specify": [36, 60], "low_memory": 36, "extract_dat": [36, 60], "depart": 36, "region": [36, 60, 134, 135], "libelle_reg": 36, "libelle_dep": 36, "tx_incid": 36, "taux_occupation_sa": 36, "tx_pos": 36, "tx_incid_couleur": 36, "r_couleur": 36, "taux_occupation_sae_couleur": 36, "tx_pos_couleur": 36, "nb_orang": 36, "nb_roug": 36, "90390": 36, "93": [36, 52, 88, 92, 114], "provenc": 36, "alpe": 36, "c\u00e3": 36, "azur": 36, "vauclus": 36, "721489": 36, "orang": [36, 85], "90391": 36, "719256": 36, "90392": 36, "524887": 36, "90393": 36, "566028": 36, "90394": 36, "570747": 36, "chardet": [36, 147, 153], "covid19": [36, 60], "rb": [36, 147, 153, 176], "confident": [36, 147, 153], "issus": [36, 44], "openstreetmap": 36, "barycentr": [36, 160], "departement_french_2018": 36, "longitud": [36, 69, 175], "latitud": [36, 69, 175], "spher": [36, 69], "82": [36, 52, 121], "dep_pos": 36, "code_inse": 36, "nuts3": 36, "surf_km2": 36, "deplong": 36, "deplat": 36, "morbihan": 36, "fr524": 36, "6870": 36, "812320": 36, "846846": 36, "98": [36, 52, 58, 88, 91, 106, 111, 114, 125, 140], "doub": 36, "fr431": 36, "5256": 36, "362722": 36, "165964": 36, "jur": 36, "fr432": 36, "5049": 36, "697361": 36, "729368": 36, "ardech": 36, "fr712": 36, "5566": 36, "425582": 36, "752771": 36, "fr812": 36, "5875": 36, "179861": 36, "993601": 36, "last_extract_dat": 36, "indic_last": 36, "ain": 36, "348764": 36, "099799": 36, "alli": 36, "187644": 36, "393637": 36, "cantal": 36, "669045": 36, "051247": 36, "dr\u00f4m": 36, "167364": 36, "685239": 36, "018230": 36, "090620": 36, "dordogn": 36, "741203": 36, "104948": 36, "girond": 36, "575870": 36, "823614": 36, "land": [36, 134, 135, 183], "783793": 36, "965855": 36, "lot": [36, 134, 135], "garon": 36, "460747": 36, "367964": 36, "85": [36, 52, 59, 88, 91, 95, 114, 147, 160], "bigr1": 36, "bigr2": 36, "SAE": 36, "86": [36, 52, 82, 84, 88, 91, 95, 114, 147, 164, 175], "arden": 36, "640751": 36, "616226": 36, "constitu": [39, 44, 58, 66, 68, 82, 138, 174, 179], "r\u00e9utilis": [39, 44, 49, 57, 162, 168, 174], "r\u00e9part": [39, 44, 60, 69, 82, 109, 146, 178], "vglob": 39, "un_calcul": 39, "contors": 39, "bouton": [39, 44, 181], "somme_doubl": [39, 44], "test_somme_doubl": [39, 44], "quiconqu": [39, 44], "attend": [39, 44, 152, 168, 176, 181, 183], "comprend": [39, 44, 99], "bing": [39, 44], "envois": [39, 44], "confus": [41, 56, 68, 160, 174], "truc": 41, "charg": [37, 41, 50, 146, 164, 168, 175], "crash": 41, "cours": [41, 178, 181], "programmer": 41, "suffisent": [44, 160], "d\u00e9couvr": [44, 76, 83, 117, 131, 132, 176, 181], "jun": 44, "gcc": 44, "derri": [44, 52], "espac": [44, 52, 56, 70, 82, 84, 96, 120, 122, 128, 130, 149, 160, 168, 169, 174, 175, 179, 183], "commentair": [44, 125, 149, 163, 172, 173, 181], "commencent": [44, 109, 124, 175, 176, 178], "vont": [44, 160, 176, 181], "help": [44, 117, 118, 138, 160, 163, 168, 174, 178], "encadr": [44, 87, 160, 175], "\u00e9tal": 44, "d\u00e9monstr": [44, 130], "sphinx_runpython_extens": [44, 160, 164, 174, 179], "pend": [44, 60, 119, 147, 163, 166, 168, 174, 181], "h\u00e9sit": [44, 148], "douteux": 44, "incorrect": [44, 76, 160], "lettr": [44, 45, 49, 68, 70, 73, 75, 76, 82, 140, 141, 146, 152, 153, 154, 168, 175, 183], "soulign": [44, 45, 160, 175], "minuscul": [44, 45, 175, 176], "majuscul": [44, 45, 77, 175, 176], "portion": [44, 45, 50, 140, 163, 174, 178, 181], "\u00e9tend": [44, 168, 175, 176], "\u00e9cras": [44, 176], "apostroph": [44, 175], "guill": 44, "crochet": [44, 115, 175, 183], "usuel": [44, 173], "bug": [44, 163], "145": [44, 60, 110], "\u00e9quivaut": [44, 146, 175], "allant": [44, 49, 100, 174], "idem": [44, 168], "confondr": [44, 74, 76, 103, 175], "upper": [44, 70, 77, 109, 133, 175], "isalph": [44, 175], "isdig": [44, 163, 175], "replac": [44, 57, 62, 70, 73, 87, 118, 119, 121, 128, 147, 168, 175, 178, 183], "optionnel": [44, 168, 175], "maxspl": [44, 175, 183], "d\u00e9coup": [44, 58, 63, 68, 112, 117, 130, 168, 174, 175, 176, 183], "d\u00e9limiteur": [44, 174, 175], "coupur": [44, 55, 85, 86, 175], "agglutin": [44, 175], "facult": [44, 45, 160, 163, 174, 175, 183], "affichag": [44, 76, 99, 116, 118, 154, 160, 163, 168, 174, 175, 176, 181], "tronqu": [44, 163, 175], "d\u00e9cimal": [44, 171, 174, 175, 176], "123456789": [44, 175], "2e": 44, "14159": 44, "14e": 44, "suppress": [44, 160], "support": [44, 49, 73, 74, 169, 175, 181, 183], "iem": [44, 175], "2k": [44, 143, 175], "3k": [44, 175], "difficil": [44, 49, 89, 90, 129, 147, 149, 166, 174, 175, 181], "pr\u00e9voir": [44, 168, 175], "quelconqu": [44, 83, 85, 99, 131, 174, 175], "insert": [44, 63, 69, 118, 154, 168, 169, 175], "pop": [44, 63, 175], "\u00e9changent": [44, 168, 179], "assoc": [44, 59, 69, 76, 140, 163, 168, 174, 175, 181], "s\u00e9lect": [44, 69, 168, 175], "valeur1": [44, 73, 175], "valeur2": [44, 45, 73, 160, 175], "superflu": [44, 163, 175], "clear": [44, 175, 181], "updat": [42, 44, 57, 68, 69, 109, 116, 175, 176], "d2": [44, 55, 80, 85, 87, 88, 109, 131], "d1": [44, 55, 80, 85], "setdefault": [44, 175], "popitem": 44, "net": [44, 53, 68, 121, 174, 175, 179], "contrepart": [44, 45, 160, 175], "encha\u00eenent": 44, "syumbol": 44, "xrang": 44, "li2": 44, "random_matrix": [44, 66], "__enter__": [44, 117, 118, 119], "__exit__": [44, 117, 118, 119, 128], "acceptent": [44, 160, 175], "Leur": [44, 160, 175], "exemple_fonct": [44, 45, 178], "p3": [44, 136, 160], "r1": [44, 85, 86, 95], "r2": [44, 85, 86, 89, 95], "re\u00e7oivent": [44, 168, 174], "doivent": [44, 45, 124, 136, 140, 160, 168, 174, 175, 178, 183], "follow": [44, 174], "int\u00e9rieur": [44, 45, 136, 140, 160, 163, 168, 174, 175, 176, 181, 183], "r\u00e9percu": 44, "ext\u00e9rieur": [44, 140, 160, 168, 174, 175, 180], "sein": [44, 49, 59, 160, 168, 175, 179, 181], "d\u00e9clin": 44, "iterate_double_on_list": 44, "run_python_script_139986840454144": [], "0x7f513a48c2e0": [], "rend": [44, 82, 128, 147, 160, 169, 174], "ma_cl": 44, "att3": 44, "att4": 44, "constructeur": [44, 99, 101, 136, 161, 163, 168, 176, 181], "calcule4": 44, "pr\u00e9ced": [44, 58, 160, 162, 174, 175, 176, 183], "invari": [44, 160], "mun": [44, 132, 168, 174], "recens": [44, 70, 160, 169, 172, 175, 178], "staticmethod": [44, 45, 160], "calcule_static": 44, "terminent": [44, 57, 175], "__": 44, "__add__": [44, 136, 137, 160], "soustract": [44, 136, 160, 171, 174, 175], "__cmp__": [44, 160], "int\u00e9r\u00eat": [44, 62, 82, 92, 106, 136, 147, 160, 175, 176], "majeur": [44, 85, 86, 113, 129], "ma_classe2": 44, "mer": [44, 62, 112, 147, 181], "simplif": [44, 104, 162], "makebold": 44, "wrapped": 44, "makeitalic": 44, "membr": [44, 130, 160], "_p": 44, "val": [44, 122, 143], "p_get": 44, "p_set": 44, "ouvr": [44, 176, 183], "mod": [44, 52, 85, 109, 118, 126, 127, 146, 160, 163, 174, 181], "ult\u00e9rieur": [44, 160, 175], "paragraph": [44, 112, 160, 163, 168, 174, 175, 176, 178, 180, 181, 183], "ouvertur": [44, 146, 176], "fermetur": [44, 176], "tabul": [44, 107, 168, 175, 176, 183], "sp\u00e9cifi": [44, 163, 166, 168, 172, 174, 175], "t\u00eat": [44, 102, 168], "valabl": [44, 174, 175], "readlin": [44, 130, 146, 147, 176, 183], "\u00e9cran": [44, 49, 146, 168, 175, 176], "backslash": 44, "marquent": [44, 176], "nettoyag": [44, 176], "l_net": [44, 176], "nettoi": [44, 118, 160, 176], "strip": [44, 130, 146, 147, 176], "balis": 44, "htmlpars": 44, "sax": [44, 178], "descript": [44, 69], "cadr": [44, 147, 174], "d\u00e9limit": [44, 176], "livr": [44, 48, 49, 96, 176], "hugo": [44, 176], "victor": [44, 176], "miser": [44, 176], "kessel": [44, 176], "joseph": [44, 176], "lion": [44, 176], "woolf": [44, 176], "virgini": [44, 176], "mr": [44, 109, 113, 176], "dalloway": [44, 176], "calvino": [44, 176], "italo": [44, 176], "baron": [44, 176], "perch": [44, 153, 176], "scind": [44, 168, 176], "geometr": 44, "deuxiem": [44, 69, 143], "geo": 44, "pseudonym": 44, "m\u00e9can": [44, 113, 154, 160, 163, 164, 168, 176, 181], "rattrap": [44, 163], "agir": [44, 163], "exc": [44, 163, 164], "rapportent": 44, "insoup\u00e7on": [44, 163], "imbriqu": [44, 73, 77, 78, 79, 174, 175], "aucunchiffr": [44, 163], "123a": [44, 163], "__doc__": [44, 160, 163, 175, 178], "runpythonerror": [44, 160, 163, 164, 174, 175, 183], "stdin": [44, 160, 183], "invalid": [44, 76], "abcdefghijklmnopqrstuvwxyz": [44, 109], "ef": 44, "entour": [44, 91, 168, 175], "r\u00e9sid": [44, 176], "simplifi": [44, 49, 56, 68, 77, 101, 116, 162], "pr\u00e9c\u00e8dent": 44, "calcul1": 44, "calcul2": 44, "calcul3": 44, "calculx": 44, "transm": [44, 68, 136, 174], "permettr": [44, 131, 147, 160, 175, 176, 181], "transmettr": [44, 110, 166, 174, 176, 179, 181], "cepend": [44, 63, 175, 176], "calcul4": 44, "essay": [44, 54, 70, 76, 82, 89, 90, 143, 153, 160, 163, 175, 181, 183], "ported": 44, "nonetyp": [44, 74], "dropbox": 44, "skydriv": 44, "googledr": 44, "propag": [44, 53, 91], "svn": 44, "tortoisesvn": 44, "histor": [44, 147], "caract\u00e9ris": [45, 175], "diff\u00e9renci": [45, 175], "poss\u00e8dent": [45, 160, 168, 175, 178, 181], "corp": [45, 160, 174], "privil\u00e9gi": [45, 147, 160, 175], "entra\u00een": [45, 147, 175], "comportent": [45, 160, 174], "recouvr": [45, 89, 90, 174], "duplicat": 45, "implic": 45, "target": [45, 110], "garant": [45, 52, 62, 82, 147, 175], "type_exception_1": [45, 163], "type_exception_": [45, 163], "type_exception_j": [45, 163], "type_exception_n": [45, 163], "apparu": [45, 92, 163, 175, 181], "nom_cl": [45, 160], "condition1": [45, 174], "instruction1": [45, 174], "instruction2": [45, 174], "instruction3": [45, 174], "instruction4": [45, 174], "importlib": [45, 178], "module_exempl": [45, 178], "exemple_vari": [45, 178], "reload": [45, 174, 178], "nom_class": [45, 160], "attribut_stat": [45, 160], "nom_method": [45, 160], "attribut_statique2": [45, 160], "nom_methode_st": [45, 160], "attribut_statique3": [45, 160], "valeur3": [45, 160], "nom_propriet": [45, 160], "fget": [45, 160], "fset": [45, 160], "fdel": [45, 160], "fget_vari": [45, 160], "fset_vari": [45, 160], "attribut_1": [45, 160], "attribut_n": [45, 160], "nom_ancetr": [45, 160], "nom_autre_method": [45, 160], "chez": [45, 61, 77, 147, 160], "anc\u00eatr": [45, 160], "sign": [45, 89, 90, 160, 162, 174, 176], "exception_typ": [45, 163], "ali": [45, 146, 178], "exemple_cl": [45, 160, 178], "param_1": [45, 160, 174], "param_n": [45, 160, 174], "d\u00e9commmand": [45, 178], "valeur_1": [45, 160, 174], "valeur_n": [45, 160, 174], "nom_attribut": [45, 160], "fonction_nom": [45, 174], "par_1": [45, 174], "par_n": [45, 174], "instruction_1": [45, 174], "instruction_n": [45, 174], "res_1": [45, 174], "res_n": [45, 174], "x_n": [45, 84, 109, 134, 135, 174], "valeur_2": [45, 174], "param_2": [45, 174], "faq": 47, "d\u00e9finit": [47, 61, 84, 140, 154, 168, 181, 183], "quas": [48, 49, 54, 64, 77, 85, 86, 95, 116, 146, 175], "picor": 48, "savent": [48, 148], "p\u00e9riss": 48, "survol": 48, "quotidien": 48, "langgag": 48, "transcript": [49, 160], "d\u00e9butent": [49, 77], "macos": 49, "souhaitent": [49, 175], "500": [49, 52, 69, 87, 88, 103, 110, 115, 129, 133], "alleg": 49, "officiel": [49, 146, 183], "gourmand": [49, 52, 176], "d\u00e9fault": [49, 122], "horm": [49, 160, 174, 176], "heureux": [49, 147], "pyp": [49, 178], "florileg": 49, "awesom": [49, 60], "pip": 49, "mond": [49, 62, 112, 147, 148, 153, 175, 179], "anglophon": [49, 163], "apparit": [49, 106, 160, 178], "ascii": [49, 164, 172, 175, 176], "charact": [49, 168], "xe9": [49, 175], "pourront": 49, "soulev": 49, "aiment": 49, "r\u00e9serv": [49, 146], "h\u00f4tel": 49, "train": [49, 99, 118, 164, 174, 175], "avion": [49, 147], "vieillot": 49, "obsolet": 49, "caus": [49, 110, 163, 164, 166, 175], "lisibil": [49, 168], "reproduir": 49, "autorisent": 49, "mauvais": [49, 52, 103, 163, 174], "publi": 49, "tenu": [49, 168], "enhanc": 49, "proposal": 49, "calendri": [49, 171, 178], "appuient": [49, 109], "assemblag": [49, 113, 154, 160, 168, 179, 181], "encha\u00een": [49, 145, 154, 174, 175, 181], "d\u00e9pendent": [49, 57, 174], "auxquel": [49, 62, 147], "capac": 49, "relev": [49, 147], "imper": [49, 160], "t\u00e2ch": [49, 104, 174, 175, 181, 183], "immens": [49, 52], "manquent": 49, "qualif": 49, "cultur": 49, "\u00e9col": 49, "fass": [49, 85, 86, 147], "cursus": 49, "scolair": 49, "intemporel": 49, "couvrent": 49, "mail": [49, 176], "s\u00e9cur": [49, 147], "serr": 49, "connaiss": [49, 70, 132, 174, 178], "actuel": [49, 64, 68, 85, 86, 160, 171, 181], "exit": 49, "vis": [49, 155, 176], "d\u00e9conseil": [49, 146, 174, 175, 176, 178], "copyright": 50, "permiss": [50, 164, 183], "hereby": 50, "granted": 50, "fre": 50, "obtaining": 50, "softwar": 50, "associated": 50, "deal": [50, 134, 135], "without": [50, 168], "restrict": [50, 164], "including": 50, "limit": [50, 59, 95, 137, 143, 168, 175, 181], "modify": 50, "publish": [50, 164], "distribut": 50, "sublicens": 50, "sel": [50, 168], "whom": 50, "furnished": 50, "subject": [50, 134, 135, 176], "notic": 50, "shall": 50, "included": [40, 50], "substantial": 50, "provided": 50, "AS": 50, "warranty": 50, "implied": 50, "limited": 50, "warrant": 50, "merchantability": 50, "fitness": 50, "noninfring": 50, "event": [50, 168, 181], "holder": 50, "liabl": 50, "claim": [50, 113], "damag": 50, "liability": 50, "action": [50, 168, 181], "contract": [50, 82], "otherwis": [50, 134, 135], "arising": 50, "dealing": 50, "domain": [52, 164], "social": [52, 59, 130, 147], "connexion": 52, "pertinent": 52, "motiv": 52, "lourd": [52, 120], "facebook": 52, "formel": [52, 162], "consid\u00e9ron": 52, "univer": 52, "s_1": [52, 130], "s_2": [52, 130], "ldot": 52, "s_m": [52, 130, 131], "noton": 52, "contraint": [52, 68, 69, 113, 115, 137, 138, 160, 174, 181], "s\u00e9quentiel": [52, 113], "satisfair": 52, "d\u00e9tail": [52, 56, 85, 86, 87, 88, 110, 160, 168, 175], "actualis": 52, "toler": 52, "do\u00eet": 52, "lvert": 52, "rvert": 52, "leq": 52, "geq": 52, "m\u00e9dian": [52, 84], "Son": [52, 62, 106, 160, 168, 174, 176], "repos": [52, 62, 176], "pr\u00e9senton": 52, "correspondr": [52, 152, 183], "famill": [52, 109, 147], "universel": 52, "mapsto": 52, "uniform": [52, 83, 85, 86, 89, 90, 95, 106, 109, 143, 146], "Nous": [52, 84, 86, 121, 122, 131, 168, 175], "h_": 52, "mathrm": 52, "difficult": [52, 69, 147], "prenon": [52, 136], "arbitrair": 52, "4294967291": 52, "tiron": 52, "sampl": [52, 69, 113], "calculon": 52, "compton": 52, "p_collis": 52, "effectuon": 52, "confirm": 52, "reiter": 52, "r\u00e9it\u00e9ron": 52, "750": 52, "proportionnel": [52, 66, 106], "a_1": 52, "a_2": 52, "essayon": [52, 105, 122], "64bit": 52, "i8": 52, "univers": 52, "\u00e9chantillonag": 52, "b_": 52, "b_max": 52, "b_1": 52, "b_2": 52, "h1": [52, 183], "h2": 52, "initialison": 52, "464": 52, "z\u00e9ros": [52, 84, 103, 122], "divers": [52, 176], "consecut": 52, "trailing": 52, "modulus": 52, "lookup": 52, "mod_37bit_posit": 52, "decomposit": [52, 101, 129], "0b10": 52, "0b10000000000": 52, "0b1101": 52, "comparon": [52, 114], "rajouton": 52, "539": 52, "atteindr": [52, 124, 132, 154], "incr\u00e9ment": [52, 59, 148, 160], "parcouron": 52, "regardon": 52, "card": 52, "384": [52, 58, 86, 128], "remarquon": 52, "y_i": [52, 83, 84, 85, 86, 87, 88], "divisibl": 52, "big": [52, 66], "dernier": 52, "obtenon": 52, "regroupon": 52, "qualit": 52, "87": [52, 91, 115, 121, 125, 147], "2500": 52, "ep": 52, "median": [52, 84], "1f": 52, "axhlin": 52, "linestyl": 52, "0x7f1d715b2860": 52, "91": [52, 114], "observon": 52, "converg": [52, 82, 84, 111, 143], "augment": [52, 63, 69, 82, 87, 88, 122, 128, 129, 175, 181], "approx": [52, 142], "rappelon": 52, "pir": [52, 58, 63, 72, 115], "size_bound": 52, "satisfais": [52, 160], "effort": [52, 147, 151], "stad": 52, "removed": [40, 52], "impair": [52, 59, 69, 80, 126, 127, 148, 149, 175], "rajout": 52, "cf": [52, 181], "estimated": 52, "nonzero": 52, "annotat": 52, "xytext": 52, "arrowprop": 52, "arrowstyl": 52, "ylabel": [52, 153], "616": 52, "rapproch": [52, 89, 90, 141, 174], "avis": [52, 77, 82], "pr\u00e9conisent": 52, "precis": [52, 107, 143, 174], "mod\u00e9lis": [53, 160], "consomm": 53, "vertic": [53, 69, 80], "extrem": [53, 59, 69, 85, 160], "apparten": [53, 59, 104, 160, 175], "m_": [53, 83, 92, 123], "v_i": 53, "v_j": 53, "ji": 53, "random_adjacency_matrix": 53, "taux": [53, 60, 82, 118, 148, 176], "remplissag": 53, "e_i": [53, 54], "e_j": 53, "random_symmetric_adjacency_matrix": 53, "rnd2": 53, "tqdm": [53, 59, 60, 63, 69, 100, 103, 111, 115, 116, 129], "total_nb1": 53, "nb1": 53, "ravel": [53, 61, 64, 84, 87, 88, 91, 95, 119, 145], "emptyness": 53, "proport": 53, "73it": 53, "0000000e": 53, "4408921e": 53, "total_null": 53, "nb_null": 53, "82it": 53, "90it": 53, "connex_component": 53, "total_cnx": 53, "cnx": 53, "ny": [53, 153], "96it": 53, "accumul": [53, 82], "connex_components_indic": 53, "grenouill": 54, "bond": 54, "barreau": 54, "treiz": 54, "saut": [54, 82, 174], "\u00e9paisseur": [54, 94, 168], "ven": [54, 137, 145], "pu": [54, 147, 163], "144": 54, "e_": 54, "geqsl": [54, 58, 115, 131], "grenouille2": 54, "g1": [54, 183], "g2": [54, 160], "grenouille3": 54, "emprunt": [54, 82], "pr\u00e9d\u00e9cesseur": [54, 59], "remont": [54, 163], "levenshtein": 55, "hasard": [55, 61, 63, 64, 80, 89, 90, 103, 145, 178, 181], "tron\u00e7on": [55, 58], "distance_meme_longueur": 55, "abcef": 55, "abcde": 55, "mind": [55, 59], "bbb": 55, "distance_alambique": 55, "verlan": 55, "abc": [55, 62, 92, 109, 175], "ac": [55, 147], "levenstein": [55, 56, 135], "distance_alambiquee_levenstein": 55, "ace": 55, "t\u00e2ton": [56, 168], "occas": [56, 147, 153], "servent": [56, 140, 154, 168, 172, 174, 176, 183], "na\u00eff": 56, "pyramid": [56, 98], "restraint": 56, "distance1": 56, "imfo": 56, "distance2": 56, "m1_e": 56, "cab": 56, "abcd": [56, 176], "bcdef": 56, "aim": [56, 121, 147, 160], "distance2_verbos": 56, "disent": 56, "pirat": 56, "distance3": 56, "pimfos": 56, "fastid": 56, "convien": 56, "test_dist_equal": 56, "assert": [56, 95, 99, 101, 103, 108, 124, 156, 160, 174], "test_distance1": 56, "test_dist_diff1": 56, "_a": [56, 132], "a_": [56, 59], "test_distance2": 56, "magnif": 56, "test_dist_diff2": 56, "_ab": 56, "ab_": 56, "a_b": 56, "test_distance3": 56, "pench": [56, 59, 91, 162, 171], "incroi": 56, "edit_dist": 56, "agraf": 56, "agra": 56, "test_edit_dist": 56, "r\u00e9muner": 56, "r\u00e9numer": 56, "voudr": [56, 83, 110, 147, 148, 160], "edit_distance2": 56, "cmp_char": 56, "test_special": 56, "test_edit_distance2": 56, "agraff": 56, "\u00e9leph": 56, "\u00e9lef": 56, "edit_distance3": 56, "ins_char": 56, "again": [42, 56], "test_edit_distance3": 56, "adjacent": [57, 80, 132], "uuid": [57, 62], "plot_network": 57, "dessin": [57, 62, 64, 150, 151, 168], "graphviz": [57, 62], "lang": [57, 62, 179], "digraph": [57, 62], "rankd": 57, "lr": 57, "d\u00e9comment": [57, 62], "hdot": [57, 62], "uid": [57, 62], "uuid4": [57, 62], "viz": [57, 62], "div": [57, 62], "svggraph": [57, 62], "getelementbyid": [57, 62], "innerhtml": [57, 62], "Quelle": [57, 82, 100, 109, 130, 142], "Ne": [57, 66], "f_": 57, "order_same_weight": 57, "mat2": [57, 66, 146, 160], "ten": [57, 69, 82, 86, 93, 105, 153, 160, 174, 176], "order_any_weight": 57, "durat": 57, "duract": 57, "new_end": 57, "subarray": 58, "l_1": 58, "l_2": 58, "l_n": 58, "l_k": 58, "max_": [58, 122, 143], "somme_partiel": 58, "plus_grande_sous_l": 58, "im": [58, 168], "jm": 58, "cout": [58, 80, 92], "l_j": 58, "plus_grande_sous_liste_n2": 58, "l_a": 58, "appartien": 58, "ll": [58, 75, 130, 143, 160, 175], "l_i": 58, "k_1": 58, "k_2": 58, "rcl": [58, 131], "r\u00e9union": 58, "jonction": 58, "plus_grande_sous_liste_nlnn2_r": 58, "ia": 58, "ja": 58, "ib": [58, 85, 86, 160], "jb": 58, "\u00e9tud": [58, 82, 175, 179], "plus_grande_sous_liste_nlnn2": 58, "160": [58, 128], "896": 58, "512": 58, "4608": 58, "n2": [37, 58, 105], "leftrightarrow": 58, "ln_2": [58, 73, 120, 141, 155], "4f": 58, "cumul2": 58, "quatriem": [58, 140], "reven": [58, 69, 152, 168, 174, 178], "arrier": [58, 113, 160], "l_": 58, "sommemax": 58, "red\u00e9marr": 58, "plus_grande_sous_liste_n": 58, "el": [58, 68, 115, 160, 175], "li100": 58, "565": [58, 85], "134": 58, "drawdown": 58, "trading": 58, "pert": 58, "p\u00e9riod": [58, 60, 147], "anticip": 59, "binomial": 59, "adja": 59, "visualis": [59, 174], "networkx": [59, 69], "from_numpy_array": 59, "with_label": 59, "distrib": [59, 89, 90], "jouent": [59, 175, 183], "r\u00f4l": [59, 166, 174, 175, 183], "parcouru": [59, 69, 174], "successeur": [59, 80], "rel": [59, 160], "pr\u00e9decesseur": 59, "partent": [59, 69], "arrivent": 59, "sup\u00e9rieu": 59, "profond": [59, 160], "2_": 59, "sum_j": [59, 123, 129], "jk": 59, "pq": [59, 126, 127], "3_": 59, "adjan": 59, "coloriag": [59, 71, 98, 124], "c_j": 59, "maj": 59, "loi": [59, 63, 82, 83, 85, 86, 87, 88, 91, 95, 98, 123, 126, 127, 143, 146], "queu": [59, 181], "\u00e9paiss": 59, "lois": [59, 89, 90], "admettent": 59, "esper": [59, 69, 147], "etap": [59, 116, 130], "distribution_to_degree_list": 59, "deg": 59, "nh": 59, "random_graph": 59, "distribution_degre": 59, "n_it": [59, 61], "set_descript": [59, 67], "dj": 59, "warn": [59, 166, 183], "incomplet": 59, "ndegre": 59, "ncurrent": 59, "376": 59, "28it": 59, "ipykernel_17111": 59, "4037000715": 59, "userwarning": [59, 60, 166], "382": 59, "61it": [59, 60], "r\u00e9pond": [59, 61, 83, 113, 135, 142, 162, 174, 181], "criter": [59, 155, 178], "bloqu": [59, 146, 181], "a_t": 59, "voyon": [59, 85, 86, 148], "random_graph_remov": 59, "last_added": 59, "n_removed": 59, "dh": 59, "341": 59, "30it": 59, "strateg": [59, 82, 98, 180, 183], "distribution_degree_realis": 59, "sumd": 59, "rejet": 59, "d3a98a30": 60, "893f": 60, "47f7": 60, "96c5": 60, "2f4bcaaa0d71": 60, "total_cas_confirm": 60, "total_deces_hopital": 60, "total_deces_ehpad": 60, "total_cas_confirmes_ehpad": 60, "total_cas_possibles_ehpad": 60, "patients_reanim": 60, "patients_hospitalis": 60, "total_patients_guer": 60, "nouveaux_patients_hospitalis": 60, "nouveaux_patients_reanim": 60, "802": 60, "118431": 60, "28826": 60, "1233": 60, "19272": 60, "653050": 60, "756": 60, "803": 60, "118494": 60, "28837": 60, "1213": [60, 69], "18901": 60, "653734": 60, "804": 60, "118508": 60, "28844": 60, "1214": 60, "18935": 60, "653827": 60, "805": 60, "118633": 60, "28845": 60, "1199": 60, "18742": 60, "654775": 60, "900": [60, 88], "806": [60, 91], "118723": 60, "1173": 60, "18290": 60, "655984": 60, "set_yscal": 60, "courag": [60, 113, 147], "d\u00e9cro\u00eet": 60, "rigour": [60, 129], "death": 60, "country": 60, "githubusercontent": 60, "cssegisanddat": 60, "csse_covid_19_dat": 60, "csse_covid_19_time_ser": 60, "time_series_covid19_": 60, "s_global": 60, "eur": 60, "provinc": 60, "tf": 60, "extract_whole_dat": 60, "confirmed": 60, "recovered": 60, "popul": 60, "67e6": 60, "conc": [60, 179], "infected": 60, "saf": 60, "ipykernel_20449": 60, "102400080": 60, "parsed": 60, "individually": 60, "falling": 60, "ensur": 60, "parsing": 60, "consistent": 60, "pleas": [60, 110, 128], "161407": 60, "38591184": 60, "38429777": 60, "28408816": 60, "161450": 60, "38599330": 60, "38437880": 60, "28400670": 60, "161474": 60, "38606393": 60, "38444919": 60, "28393607": 60, "161501": 60, "38612201": 60, "38450700": 60, "28387799": 60, "161512": 60, "38618509": 60, "38456997": 60, "28381491": 60, "r\u00e9par": 60, "improvis": 60, "x_t": 60, "correct_ser": 60, "covid_modified": 60, "09it": 60, "342253": 60, "liss": 60, "recoup": [60, 69, 183], "compartimental": 60, "\u00e9pid\u00e9miolog": [60, 96], "contamin": [60, 91], "malad": [60, 147], "guer": [60, 91], "d\u00e9ced": [60, 91], "changent": [60, 129, 168, 172, 175], "dS": [60, 61], "nu": [60, 61, 91, 112], "dr": [60, 61, 131], "transmiss": 60, "plot_simul": 60, "day0": 60, "true_dat": 60, "infect": 60, "coch": [60, 174], "visibil": 60, "tdf": 60, "sob": 60, "iob": 60, "rob": 60, "dob": 60, "linewidth": 60, "s_0": 60, "i_0": 60, "r_0": 60, "d_0": 60, "connus": [60, 63, 96, 130, 160], "s0": 60, "9990": 60, "i0": [60, 79], "r0": 60, "\u00e9voluent": [60, 107, 168], "masqu": [60, 163, 168, 178], "confin": 60, "reconfin": 60, "temp\u00e9ratur": 60, "lisse_mar": 60, "28305367": 60, "1697884": 60, "1640875027069664": 60, "626756310367156": 60, "9857629613918629": 60, "533445387958945": 60, "pr\u00e9dict": [60, 63, 83, 128, 129], "transitoir": 60, "simulation_cumule": 60, "minimisent": [60, 84], "i_rang": 60, "beta_rang": 60, "mu_rang": 60, "nu_rang": 60, "error_fct": 60, "err_min": 60, "di0": 60, "i_t": 60, "j_t": 60, "cum": [60, 106], "gras": 60, "sim_opt": 60, "3f": [60, 83], "3g": 60, "3772": 60, "51it": [60, 103], "mal": [60, 64, 68, 69, 80, 121, 163, 174, 181], "188": [60, 82], "39it": 60, "sup": [60, 63, 101, 138, 143], "mort": [60, 146], "error_norm": 60, "m3": [60, 156, 168], "45it": [60, 69], "aticl": 60, "modified": [60, 113], "contagion": 60, "italy": 60, "estimating": 60, "simulating": 60, "countr": 60, "s_t": 60, "s_": [60, 130, 131], "beta_t": 60, "d\u00e9duir": [60, 130], "incub": 60, "poursuit": [60, 147, 163, 174], "d\u00e9couvert": [60, 162], "forall": [60, 123, 130, 131, 143], "r_t": 60, "d_t": 60, "d_": 60, "inconnu": [60, 152, 175], "paramet": [60, 61, 168], "epidemic": 60, "identifying": 60, "unreported": 60, "inferent": 60, "modelling": 60, "forecasting": 60, "outbreak": 60, "seird": 60, "covidtrack": 60, "pyepidemic": 60, "pandemic": 60, "control": [60, 168], "modcov19": 60, "aftercovid": 60, "etrang": [61, 108, 122], "inacessibl": 61, "pann": 61, "ovh": 61, "inaccessibl": [61, 66], "909090909090908": 61, "8909090909090909": 61, "90909091": 61, "89090909": 61, "82883546": 61, "79298272": 61, "18909091": 61, "auparav": 61, "bruit": [61, 83, 84, 129], "simulation_bruite": 61, "90629495": 61, "90818313": 61, "0769856": 61, "10853633": 61, "84322669": 61, "77113049": 61, "17022418": 61, "21541865": 61, "sim_bruit": 61, "estimation_coefficient": 61, "645167": 61, "153483": 61, "113224": 61, "prouv": [61, 130], "distance_sim": 61, "1379327480825296": 61, "b0": 61, "m0": 61, "n0": [61, 118, 143], "distance0": 61, "mu0": 61, "nu0": 61, "175492030437819": 61, "21093122422461147": 61, "11141742761811038": 61, "12240477": 61, "1995322": 61, "09668045": 61, "06764482535407212": 61, "0880922396685696": 61, "dessus": [61, 82, 84, 91, 101, 113, 130, 136, 148, 168, 174, 175, 178, 181], "perdr": [62, 128, 147, 164], "poem": [62, 112], "arthur": [62, 112], "rimbaud": [62, 112], "voyel": [62, 73, 77, 82, 112], "latent": [62, 112], "corset": [62, 112], "velu": [62, 112], "mouch": [62, 112], "\u00e9clat": [62, 112], "bombillent": [62, 112], "puanteur": [62, 112], "cruel": [62, 112, 147], "golf": [62, 112], "ombre": [62, 112], "candeur": [62, 112], "vapeur": [62, 112], "glaci": [62, 112], "fier": [62, 112], "rois": [62, 112], "frisson": [62, 112], "ombel": [62, 112], "pourpr": [62, 112], "sang": [62, 112, 147], "crach": [62, 112], "rir": [62, 112], "levr": [62, 112], "bel": [62, 112, 168], "coler": [62, 112, 132], "ivress": [62, 112], "p\u00e9nitent": [62, 112], "cycl": [62, 112, 121], "vibr": [62, 112], "divin": [62, 112], "virid": [62, 112], "paix": [62, 112, 132, 147], "p\u00e2t": [62, 112], "sem": [62, 112], "rid": [62, 112], "alchim": [62, 112], "imprim": [62, 112, 181], "front": [62, 112, 181], "studieux": [62, 112], "supr\u00eam": [62, 112, 147], "clairon": [62, 112], "strideur": [62, 112], "\u00e9trang": [62, 112, 147, 160], "silenc": [62, 112], "travers": [62, 69, 112, 124], "ange": [62, 112], "omeg": [62, 112], "rayon": [62, 89, 111, 112, 147], "violet": [62, 112], "Ses": [62, 112], "yeux": [62, 112], "extract_word": [62, 112], "spl": 62, "perf_count": [62, 66, 92, 105, 106, 125, 129, 137, 160], "guid": [62, 160], "group": [62, 68, 70, 82, 101, 109, 112, 121, 134, 135, 168, 174], "exploit": [62, 168, 171, 172, 176, 178, 181], "suggest": [62, 68], "plus_grand_suffix_commun": 62, "longueur_max": 62, "meilleure_pair": 62, "meilleur_suffix": 62, "pareil": [62, 175], "suffix_map": 62, "\u00e9": [62, 109, 153], "ingr\u00e9dient": 62, "plus_grand_suffix_commun_dictionnair": 62, "debut": [62, 119, 175, 183], "5386918000003789": 62, "17898409999997966": 62, "n_x": 62, "sum_x": 62, "pr\u00e9fix": [62, 68, 147, 163, 175, 176, 178], "build_tr": 62, "zabc": 62, "\u00ea": 62, "\u00e2": 62, "illisibl": [62, 117, 166, 174, 176, 179], "partiqu": 62, "build_dot": 62, "predecessor": 62, "root_nam": 62, "set2374575491648": 62, "n2374575489600": 62, "e2374575503808": 62, "t2374575329600": 62, "a2374575329984": 62, "l2374575327296": 62, "fin2374494191824": 62, "i2374575817216": 62, "n2374575817280": 62, "e2374575817344": 62, "p2374575817408": 62, "a2374575326656": 62, "t2374575325312": 62, "a2374575330240": 62, "l2374575340416": 62, "c2374575339968": 62, "e2374575595200": 62, "plot_dot": 62, "plus_grand_suffix_commun_dictionnaire_tr": 62, "whole_tr": 62, "parcourus": 62, "23091779999958817": 62, "05081569999947533": 62, "topk_sortall": 63, "vois": [63, 77], "topk_idee1ou2": 63, "trich": 63, "d\u00e9brouill": [63, 146], "envisage": 63, "fairr": 63, "tris": 63, "interstic": 63, "topk_tri_select": 63, "kn": [63, 143], "topk_insert": 63, "\u00e9ven": [63, 166, 171, 175, 181], "prochain": [63, 82, 147, 166, 168, 174], "r\u00e9pondr": [63, 68, 82, 92, 113], "topk_fus": 63, "topk": [63, 115], "topk_select_recurs": 63, "topk_select": 63, "pivot_index": 63, "interviennent": [63, 163, 172], "measure_tim": [63, 115, 116], "repeat": [63, 95, 115, 116, 118], "t1": [63, 66, 124, 129, 160], "0023090000031515956": 63, "06701939999766182": 63, "017117299998062663": 63, "0257670000064536": 63, "010535299996263348": 63, "05852940000477247": 63, "perm10000": 63, "006514400003652554": 63, "0134890000044834": 63, "019539000000804663": 63, "041308899999421556": 63, "014250300002458971": 63, "062273499999719206": 63, "perm1000": 63, "71it": [63, 111], "000692": 63, "194126": 63, "003134": 63, "003230": 63, "013448": 63, "015127": 63, "000383": 63, "283472": 63, "001300": 63, "003163": 63, "022354": 63, "010969": 63, "000835": 63, "377026": 63, "001189": 63, "003169": 63, "022742": 63, "024926": 63, "000522": 63, "450699": 63, "001051": 63, "002952": 63, "045683": 63, "038119": 63, "000527": 63, "539852": 63, "001091": 63, "003602": 63, "038593": 63, "026605": 63, "gomm": 63, "affin": 63, "permn": 63, "70it": 63, "000620": 63, "000124": 63, "000111": 63, "000137": [63, 116], "000411": 63, "000030": [63, 116], "002329": 63, "000275": 63, "000402": 63, "000326": 63, "001340": 63, "000328": 63, "021377": 63, "001635": 63, "005340": 63, "001277": 63, "005500": 63, "005612": 63, "178028": 63, "011507": 63, "034768": 63, "008894": 63, "022889": 63, "066547": 63, "755049": 63, "115708": 63, "361258": 63, "099447": 63, "233724": 63, "paraissent": 63, "n\u00e9glige": [63, 88, 92, 143, 153, 169], "redessin": 64, "distance_vill": 64, "distance_tour": 64, "540451130306862": 64, "dessine_tour": 64, "r\u00e9dig": [64, 160, 175], "ameliore_tour": 64, "transmis": 64, "dist_min": 64, "nb_perm": 64, "nb_it": 64, "annul": [64, 83, 84, 168], "extraordinair": [64, 147], "ameliore_tour_renvers": 64, "p0": [64, 136], "crois": [64, 147], "spatial": [64, 89, 90, 95], "cdist": [64, 95], "build_permut": 64, "max_dist": 64, "arg_dist": 64, "entretien": [65, 96], "embauch": [65, 96], "extrapol": 65, "puissance2k": 65, "sum_k": 65, "a_k": 65, "prod_k": 65, "majoritair": [66, 152, 162], "maxj": 66, "inconv\u00e9nient": [66, 104, 113, 137, 160, 168, 181], "embarrass": 66, "produit_class": 66, "dim1": 66, "dim2": 66, "enquer": 66, "produit_eleg": 66, "k1": 66, "k2": [66, 143], "bigmat": 66, "sonne": 66, "mill": [66, 147], "sabord": 66, "avon": [66, 122, 131, 147, 168], "matrice_dicodico": 66, "matrice_dicodico_lc": 66, "song": 66, "produit_elegant_rapid": 66, "produit_elegant_rapide_transform": 66, "mat1": [66, 160], "t2": [66, 72, 111, 124, 129, 160], "dicodico": 66, "dico": [66, 70, 80, 169, 176], "008358499999303604": 66, "10761350000029779": 66, "2080854999985604": 66, "011978200000157813": 66, "28018710000105784": 66, "28202239999882295": 66, "06322960000034072": 66, "7310262999999395": 66, "21729559999948833": 66, "04302850000021863": 66, "25215659999958007": 66, "06354410000130883": 66, "24071189999813214": 66, "08784929999819724": 66, "23844240000107675": 66, "13118289999692934": 66, "2613874999988184": 66, "21261740000045393": 66, "2777879999994184": 66, "22135960000014165": 66, "2984610000021348": 66, "27173079999920446": 66, "28927499999917927": 66, "travelling": 67, "embl\u00e9mat": 67, "20256988": 67, "27603738": 67, "77763596": 67, "50108287": 67, "07482647": 67, "60880805": 67, "56075455": 67, "9637854": 67, "79735982": 67, "32773718": 67, "65017942": 67, "96827692": 67, "distance_chemin": 67, "dy": [67, 89, 90], "090536785820115": 67, "plot_point": 67, "impatient": 67, "0it": 67, "720it": 67, "89it": 67, "optimisation_retourn": 67, "siecl": 68, "tiret": 68, "330px": 68, "international_morse_cod": 68, "svg": [68, 118], "mn\u00e9motechn": 68, "d\u00e9codag": [68, 172], "r\u00e9duis": 68, "rit": [68, 176], "man": 68, "who": 68, "laugh": 68, "codingam": 68, "transcr": [68, 160], "eee": 68, "ooo": 68, "eel": 68, "oo": 68, "oooo": 68, "ooooo": 68, "word2mors": 68, "word": 68, "lison": 68, "ooooooo": 68, "ambigu": [68, 102, 160, 175], "deven": [68, 82, 92, 175, 181], "rev_alph": 68, "reg_exp": 68, "hyperprob": 68, "souvien": [68, 147], "dec_exp": 68, "suffir": [68, 104, 106], "decode_mors": 68, "een": 68, "eeee": 68, "eb": 68, "DEE": 68, "gn": 68, "decode_morse_longer_first": 68, "flemm": 68, "plu\u00f4t": 68, "dr\u00f4l": 68, "patron": [68, 147], "ee": 68, "decompose_mors": 68, "letter": 68, "new_opt": 68, "prefix": [68, 175], "startswith": [68, 175], "dk": [68, 82], "dnt": 68, "dta": 68, "dtet": 68, "na": [68, 88, 100, 102, 112], "naet": 68, "nek": 68, "nent": 68, "netet": 68, "nrt": 68, "tea": 68, "teaet": 68, "teek": 68, "teent": 68, "teet": 68, "teetet": 68, "tert": 68, "tft": 68, "tik": 68, "tint": [68, 153], "tit": 68, "titet": 68, "TUA": 68, "tuet": 68, "xet": 68, "explos": 68, "d\u00e9duis": [68, 85, 128], "t\u00e9l\u00e9graph": 68, "marqu": [68, 175, 181], "paus": 68, "soir": [69, 147], "initi": [69, 147], "\u00e9lev": [69, 72, 82, 87, 88, 91, 109, 136, 137], "particip": 69, "trajet": 69, "voitur": 69, "parcourent": [69, 122], "d\u00e9marrent": 69, "reviennent": [69, 168], "posti": 69, "inspect": 69, "already": [69, 118], "downloaded": 69, "146": [69, 110, 113], "carrefour": 69, "873361200000005": 69, "3236609": 69, "8730454": 69, "3235788": 69, "compren": 69, "03562501840766763": 69, "8741849": 69, "3239352": 69, "0937624742737696": 69, "suffis": [69, 70, 82, 143, 153, 160, 164, 174], "p\u00f4l": 69, "cart\u00e9sien": [69, 150, 151, 174], "porti": 69, "exp\u00e9rimental": 69, "premier": [69, 176], "ais": [69, 110, 160, 174], "id\u00e9al": [69, 93], "interdit": [69, 148, 149, 163, 175], "rendent": [69, 136, 166], "verr": 69, "impass": 69, "dem": [69, 74, 90, 102], "sept": [69, 175], "pont": 69, "konigsberg": 69, "math\u00e9maticien": 69, "r\u00e9pondu": [69, 88], "rejoint": 69, "repart": 69, "nx": 69, "add_edg": 69, "rejoign": 69, "nb_edg": 69, "parit": [69, 80, 148], "tien": [69, 147], "r\u00e9duisent": 69, "justif": [69, 82], "descendr": 69, "d\u00e9doubl": 69, "g\u00e9ograph": 69, "edges_from": 69, "total_possible_edg": 69, "fromi2": 69, "new_": 69, "new_d": 69, "535221": 69, "778": 69, "1138": 69, "21316": 69, "538415": 69, "1228": 69, "2258": 69, "545218": 69, "1717": 69, "3748": 69, "557001": 69, "2118": 69, "5500": 69, "574194": 69, "2442": [69, 113], "7470": 69, "602050": 69, "2726": 69, "9624": 69, "642132": 69, "2900": 69, "11810": 69, "3258634178614415": 69, "admissibl": 69, "dedan": [69, 111, 154], "d\u00e9fil": [69, 111], "build_possibl": 69, "i1": [69, 80, 160, 162], "i2": [69, 80, 160, 162], "ajust": 69, "009382623381497467": 69, "5290": 69, "248170388440608": 69, "initc": 69, "undesired": 69, "912505": 69, "400": [69, 88, 110, 143], "928070": 69, "938916": 69, "1627": [69, 91], "2244": 69, "957763": 69, "1676": 69, "3644": 69, "976823": 69, "1341": 69, "4989": 69, "020697": 69, "833": 69, "5977": 69, "042415": 69, "427": 69, "6489": 69, "062800": 69, "187": [69, 112], "6716": 69, "088837": 69, "6815": 69, "112715": 69, "6856": 69, "138552": 69, "6874": 69, "168428": 69, "197202": 69, "relient": 69, "refair": [69, 133], "122002169199727": 69, "661698849016764": 69, "Mon": 69, "satisfact": 69, "combl": 69, "coinc": [69, 181], "risque": 69, "pourait": 69, "probl\u00e8mat": 69, "making": 69, "directed": 69, "vingtain": 69, "334": 69, "1511": 69, "width": [69, 110, 133, 143, 144, 145, 168, 174], "eulerian_path": 69, "hierholz": 69, "odd": 69, "1327": 69, "10585": 69, "1383": 69, "1423": 69, "133": 69, "1470": 69, "168": 69, "1523": 69, "1589": 69, "1655": 69, "1722": 69, "1796": 69, "1863": 69, "207": [69, 82, 91], "1919": 69, "164": 69, "2003": [69, 181], "2027": 69, "2038": 69, "2039": 69, "2040": 69, "0016168196457467584": 69, "002915457386378182": 69, "004107201738406607": 69, "138": 69, "005201454147672404": 69, "010775423696863674": 69, "street": 69, "016229655482986917": 69, "08264740074165475": 69, "026299568900906643": 69, "jump": 69, "08193964999861593": 69, "ar\u00eat": 69, "provient": [69, 168, 174, 176, 178], "d\u00e9patouill": 69, "entrant": 69, "ramen": 69, "c\u00e9sar": [70, 140, 141], "d\u00e9calag": [70, 140, 147, 174, 175], "babbag": 70, "\u00e9tudi": [70, 75, 83, 109, 119, 152], "cons\u00e9cut": [70, 92, 103, 144, 183], "apparaiss": [70, 147], "cryptanalys": 70, "diviseur": [70, 174], "crypt": [70, 126, 127], "d\u00e9crypt": [70, 126, 127], "code_vigener": [70, 140, 141], "message_cod": [70, 140, 141], "ord": [70, 75, 76, 109, 140, 141, 174], "chr": [70, 75, 109, 140, 141, 174], "decodevigener": 70, "codevigener": 70, "pgcd": 70, "decodevigenerelongueurcl": 70, "DES": [70, 147], "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd": 70, "egv": 70, "mem": 70, "resultat": [70, 80, 168], "etre": [70, 147], "decodevigenerecl": 70, "d\u00e9cod": [70, 96, 141], "2l": 70, "3l": 70, "cassevigener": 70, "condamn": 70, "gutenberg": [70, 152], "hugo_dernier_jour_condamn": 70, "218451": 70, "ind\u00e9sir": [70, 175, 183], "7000": 70, "cle_cod": 70, "td_node_2006": 71, "td_node_2007": 71, "td_node_2008": 71, "td_node_2009": 71, "td_node_2010": 71, "td_note_2010_rattrap": 71, "td_node_2011": 71, "td_node_2012": 71, "td_node_2013": 71, "td_note_2013_rattrap": 71, "td_note_2014": 71, "td_node_2015": 71, "td_node_2016": 71, "td_node_2017": 71, "broken": 71, "td_node_2018": 71, "td_node_2019": 71, "td_node_2020": 71, "td_node_2021": 71, "td_node_2022": 71, "td_note_2022_rattrapag": 71, "td_note_2022_rattrapage2": 71, "td_node_2023": 71, "1a": [71, 132, 133], "novembr": 71, "d\u00e9cembr": [71, 147], "2015": [71, 72, 150, 151], "rattrapag": 71, "oral": 71, "f\u00e9vri": 71, "octobr": [71, 157, 159], "2021": 71, "interrog": [71, 160], "septembr": [71, 147], "mul2014": 72, "cosinus": 72, "9899924966004454": [72, 146, 147], "ecir": 72, "ex": [72, 87, 88, 140], "kayak": [72, 73], "kakak": 72, "aill": 72, "contient_": 72, "2i": [72, 115, 174], "12093467645909634": 72, "est_tri": [72, 111], "est_trie_nocopy": 72, "1000000000": [72, 163], "pas_de_voyel": 73, "aeiouy": [73, 77, 82], "bonjour": 73, "revoir": [73, 168], "bnjr": 73, "rvr": 73, "mat_dict": 73, "9289682539682538": 73, "581": 73, "4676254832484": 73, "19981": 73, "20000": [73, 82], "39980": 73, "40000": 73, "30000": [73, 125], "59978": 73, "60000": 73, "79979": 73, "80000": 73, "119977": 73, "120000": 73, "70000": 73, "139977": 73, "140000": [73, 82], "159978": 73, "160000": [73, 82], "90000": 73, "179974": 73, "180000": [73, 82], "abcdef": 73, "1er": 73, "3em": 73, "afbecd": 73, "kkaay": 73, "strang": 73, "deviennent": [73, 146, 166], "dictionnaire_depart": 73, "dictionnaire_retourn": 73, "it\u00e9reur": 73, "dict_item": [73, 122, 175], "paress": 73, "aper\u00e7oit": [73, 119, 130, 175], "input": [73, 74, 76, 77, 82, 92, 163, 164, 174], "68beadeaff45": 73, "0x0000000006f305e8": 73, "86215c660090": 73, "subscript": 73, "7191411125634257": 73, "ii": [73, 118, 156], "3177321667311": 73, "1024": [73, 100], "2036": 73, "4083": 73, "4096": 73, "8178": 73, "8192": 73, "16369": 73, "16384": [73, 175], "32752": 73, "32768": 73, "65519": 73, "65536": 73, "131054": 73, "131072": 73, "262125": 73, "262144": 73, "524268": 73, "524288": 73, "nameerror": [74, 77, 160, 163, 174], "9f18cbb91429": 74, "ma_fonct": 74, "y2": [74, 85, 86, 89, 90, 94, 107, 124], "dehor": [74, 124, 140, 154, 160], "expliciti": 74, "ext": [74, 183], "495000": 74, "42400f095e8c": 74, "unsupported": [74, 160], "655479e1d45c": 74, "assignment": [74, 77, 175], "immut": [74, 154, 173], "ma_list": 74, "d3addcc3bdbd": 74, "indexerror": [74, 76, 77, 160, 163, 174], "1eb96223c6dd": 74, "due": 74, "5607f3ee5543": 74, "\u00e9toil": [74, 181], "26184474654812057": 74, "star": 74, "29749469599416334": 74, "305837286201697": 74, "make_squar": 75, "alic": 75, "bob": 75, "jean": [75, 109], "Ma": [75, 146], "myster": 75, "impr\u00e9visibl": [75, 175, 181], "u_": [75, 160], "conjectur": [75, 134, 135], "syracus": 75, "6893f4ac9402": 76, "58b7566d9294": 76, "d\u00e9vient": 76, "2f84bd962211": 76, "elu": 76, "somme_caracter": 76, "225cea37f121": 76, "implicitly": 76, "un_sur_d": 76, "pto": 76, "plant": [77, 163], "systemt": 77, "ced82ea8013": 77, "b85136f11268": 77, "maj_voy": 77, "ambig\u00fc": [77, 103], "produis": [77, 82, 174], "6b8ba89606bb": 77, "unhash": [77, 175], "accolad": [77, 175], "pyythoon": 77, "double_voy": 77, "populating": [78, 79, 82], "interact": [78, 79, 82], "namespac": [78, 79, 82], "construit_m": [78, 79, 83], "pointij": [78, 79], "th": [78, 79, 85, 86, 110, 113, 121], "phas": [78, 79, 81, 176], "tinc": [78, 79], "dessin_m": [78, 79], "_subplot": [78, 79], "axessubplot": [78, 79], "0x10128a58": 78, "0x9491390": 78, "0x87cef28": 79, "voisins_a_valeurs_null": 79, "tous_voisins_a_valeurs_null": 79, "liste_point": 79, "fonction_coloriag": 79, "j0": [79, 116], "\u00e9tag": 79, "acolori": 79, "doublon": [79, 130], "surface_colorie": 79, "fonction_coloriage_1000": 79, "0x14675b00": 79, "3258": 79, "0x1bc6a630": 79, "q1": 80, "uen": 80, "q2": 80, "ajoute_point": 80, "q3": 80, "adj": 80, "q4": 80, "successeurs_dico": 80, "q5": 80, "suites_chemin": 80, "q6": 80, "chemins2": 80, "q7": 80, "q8": 80, "adjacence8": 80, "che": 80, "sugger": [80, 82, 83, 87, 88, 110, 122, 126, 127, 129, 130, 131, 141, 152, 168, 175], "garde_3_el": 80, "word2dict": 80, "pyt": 80, "pyth": 80, "pytho": 80, "two_words2dict": 80, "mot1": 80, "mot2": 80, "piton": 80, "pito": 80, "pit": 80, "add_edge_hv": 80, "edge1": 80, "j1": [80, 160], "edge2": 80, "j2": [80, 160], "2pq": 80, "ajoute_diagonal": 80, "effac": [80, 174, 176, 181], "loop_on_edg": 80, "misejour": 80, "q9": 80, "trie_parit": 80, "carreau": 81, "pression": [81, 168, 181], "touch": [81, 143, 168, 174, 181], "invest": 82, "argent": 82, "rx": 82, "0404": 82, "0612080000000002": 82, "banqu": [82, 160], "pr\u00eat": [82, 181], "annuel": 82, "mensuel": [82, 148], "capital": 82, "rembours": 82, "mensual": 82, "decompose_mensualit": 82, "029": 82, "570": [82, 86], "6769646931234": 82, "429": [82, 119], "32303530687665": 82, "emprunteur": 82, "int\u00earet": 82, "km": [82, 89, 90], "cap": [82, 126, 127], "r\u00e9sulat": 82, "mensualit": 82, "666666666666668": 82, "459": 82, "63104825975415": 82, "int\u00e9ret": 82, "d\u00e9cro\u00eetr": 82, "consacr": [82, 181], "12y": 82, "somme_maximal": 82, "183000": 82, "pai": [82, 174], "somme_maximale_step": 82, "150000": 82, "186": 82, "170000": 82, "190000": 82, "139000": 82, "141000": 82, "142000": 82, "174": 82, "143000": 82, "144000": 82, "145000": 82, "146000": 82, "147000": 82, "182": [82, 112, 129], "148000": 82, "183": 82, "149000": 82, "185": 82, "151000": 82, "152000": 82, "153000": 82, "154000": 82, "155000": 82, "194": 82, "156000": 82, "196": [82, 131, 164], "157000": 82, "158000": 82, "159000": 82, "201": 82, "161000": 82, "162000": 82, "206": 82, "163000": 82, "164000": 82, "209": 82, "165000": 82, "210": [82, 91], "166000": 82, "212": 82, "167000": 82, "214": 82, "168000": 82, "215": 82, "169000": 82, "171000": 82, "172000": 82, "173000": 82, "174000": 82, "175000": 82, "176000": 82, "177000": 82, "178000": 82, "179000": 82, "181000": 82, "182000": 82, "tomb": [82, 89, 90, 111, 144, 145, 151, 155, 160, 168], "somme_maximale_mois_step": 82, "l0": [82, 160], "175312": 82, "312": 82, "175625": 82, "175937": 82, "176250": 82, "176562": 82, "176875": 82, "177187": 82, "177500": 82, "177812": 82, "178125": 82, "178437": 82, "178750": 82, "179062": 82, "179375": 82, "179687": 82, "180312": 82, "180625": 82, "180937": 82, "181250": 82, "181562": 82, "181875": 82, "182187": 82, "parisien": 82, "sl": [82, 154], "d\u00e9pens": [82, 133], "financi": 82, "apprtement": 82, "\u00e9conomis": 82, "rm": [40, 43, 82], "econom": 82, "eco": 82, "nbm": 82, "015": [82, 117], "25862": 82, "65218705509": 82, "carri": 82, "professionnel": 82, "metr": [82, 131], "parisen": 82, "tier": 82, "salair": [82, 147], "d\u00e9pass": [82, 144, 145], "exam2016_valu": 82, "bascul": 82, "8000": 82, "offrir": 82, "surface_max": 82, "faill": [82, 175, 176], "a40a30": 82, "2600": 82, "inflat": [82, 148], "egg": [82, 121], "esprit": [82, 109, 147], "somme_maximale_dicho": 82, "k_max": 82, "182199": 82, "99817640134": 82, "michel": [82, 104], "perd": [82, 118, 119, 122, 129, 138, 169, 175], "carnet": 82, "importun": 82, "impromptus": 82, "conson": 82, "volontair": [82, 164], "adel": 82, "gerard": 82, "transforme_numero": 82, "prenom": [82, 154, 169, 174, 179], "numero": [82, 168], "0664342267": 82, "0646342267": 82, "0660342467": 82, "oui": [82, 88, 137, 160, 174], "transforme_numero_enver": 82, "affront": 82, "9b3e94b6565": 82, "unorder": 82, "comparison": 82, "cat\u00e9goriel": 83, "epsilon_": [83, 84, 87, 88], "partial": [83, 84], "nuag": [83, 87, 88, 129, 153], "generate_xy": 83, "gauss": [13, 83, 98, 130, 131, 157, 159], "996890181837922": 83, "8750295096923186": 83, "264526460045277": 83, "324063943726332": 83, "718648422500299": 83, "052469543647318": 83, "442689562115705": 83, "861870829036456": 83, "13558433730903707": 83, "5754835901808546": 83, "59230695209076": 83, "6209924216651825": 83, "610357428256408": 83, "3202733390571373": 83, "678403330137792": 83, "96766236219644": 83, "427259745518597": 83, "385862058140737": 83, "273956381823456": 83, "938275166261537": 83, "calcule_exyxyx2": 83, "sx": 83, "sxy": 83, "sx2": 83, "523441805914873": 83, "850511796328412": 83, "88928454527569": 83, "98854258182378": 83, "grandeur": [83, 132, 147], "calcule_ab": 83, "5446995618974346": 83, "859128128176218": 83, "generate_caty": 83, "cat": 83, "132157444058703": 83, "088324149707968": 83, "16315983779393228": 83, "9717657424738734": 83, "843197432779423": 83, "7204386278807904": 83, "89226869979884": 83, "16605748011543708": 83, "02903894820027486": 83, "5787816483863786": 83, "num\u00e9ros": [83, 132, 176], "numero_cat": 83, "ic": 83, "extra": [83, 175], "convert_numpy": 83, "mc": 83, "15485572": 83, "37882494": 83, "37124634": 83, "77476221": 83, "03305199": 83, "92499253": 83, "14818418": 83, "09988478": 83, "alpha_": 83, "yp": [83, 129], "multinomial": [83, 98], "0084452843428675": 83, "155449750270483": 83, "1132607428792447": 83, "897729973062269": 83, "7637316114791164": 83, "566787193134299": 83, "848567708215508": 83, "722503065860707": 83, "8043492141543047": 83, "675781652825997": 83, "histogram_cat": 83, "moyenne_cat": 83, "69914235934335": 83, "4591978296957873": 83, "080382539688736": 83, "induis": 83, "z_i": [83, 84], "obs2": [83, 110], "7763568394002505e": 83, "covari": 83, "bigm": 83, "00844528": 83, "08038254": 83, "07193726": 83, "15544975": 83, "45919783": 83, "69625192": 83, "11326074": 83, "65406291": 83, "89772997": 83, "81734743": 83, "76373161": 83, "69546622": 83, "cov": 83, "62221004e": 83, "56972711e": 83, "24829301e": 83, "53176124e": 83, "77901369e": 83, "00966261e": 83, "92890933e": 83, "54535166e": 83, "40725030e": 83, "24510807e": 83, "66666667e": 83, "77777778e": 83, "88888889e": 83, "applymap": 83, "697": 83, "525": 83, "532": 83, "478": 83, "010": [83, 119], "178": [83, 119], "089": 83, "w_i": [83, 84], "obs3": 83, "829591905722086": 83, "2193824894893863": 83, "calcule_erreur": 83, "4723463712054069": 83, "100975199731273": 83, "modal": 83, "prob": [83, 125], "pred": [83, 89, 90, 133, 156], "pr\u00e9dir": 83, "categorical": 83, "outill": 83, "regress": 83, "ensemble_aleatoir": 84, "x_m": 84, "notin": 84, "longleftrightarrow": [84, 131], "regression_lineair": 84, "00141843": 84, "matrice_diagonal": 84, "w_1": [84, 132, 133], "w_n": [84, 132, 133], "beta_": 84, "wx": 84, "wy": 84, "regression_lineaire_pondere": 84, "xt": 84, "01240451": 84, "reciprocal": 84, "calcule_z": 84, "01330469e": 84, "26315789e": 84, "54545455e": 84, "22580645e": 84, "85185185e": 84, "47058824e": 84, "14942529e": 84, "07526882e": 84, "retour": [84, 175, 183], "13052808": 84, "82243581": 84, "104": [84, 132, 164, 175], "79608014": 84, "21524459": 84, "851019446": 84, "25815451": 84, "36420567": 84, "12644545": 84, "255554539": 84, "09141327": 84, "220626093": 84, "0777948": 84, "219023635": 84, "07639404": 84, "21901041": 84, "07631459": 84, "218994922": 84, "07622156": 84, "218976948": 84, "07611358": 84, "1737": 84, "1215": 84, "2110733": 84, "05276833": 84, "1196": 84, "55478823": 84, "77739411": 84, "1190": 84, "4919578": 84, "7459789": 84, "1183": 84, "56462833": 84, "28231416": 84, "1179": 84, "7931558": 84, "iteratively": 84, "reweighted": 84, "\u00e9tendr": [84, 87, 168, 176], "vectoriel": 84, "reprenon": 84, "e_2": 84, "e_1": 84, "retomb": 84, "absolu": [84, 85, 86, 90, 168, 174, 176], "ressort": 84, "minor": 84, "atteign": 84, "0465": 84, "posent": [84, 160], "aligned": [84, 175], "dim": [84, 103], "escali": [85, 86], "0x1f893f9e518": 85, "014962888038782651": 85, "020462778257442693": 85, "022310859639508962": 85, "03078728731371605": 85, "03153252863972433": 85, "somme_diff": [85, 86], "y_k": [85, 86], "476": [85, 119], "2380000000092": 85, "56022222223197": 85, "distance_list": [85, 86], "list_x": [85, 86], "list_y": [85, 86], "custom": [85, 91], "494": [85, 164], "7982222222412": 85, "711": 85, "6476814159435": 85, "552": [85, 86], "0x1f893ea57b8": 85, "histoir": [85, 111], "reproductibl": 85, "618": 85, "0710615624871": 85, "0x1f8943ece80": 85, "d\u00e9barrass": [85, 86], "somme_diff_ab": 85, "difference_ab": 85, "optimise_ab": [85, 86], "recalcul": [85, 86, 143], "histogramme_y": 85, "somme_diff_histogramm": 85, "optimise_rapid": [85, 86], "retranch": 85, "4096814159292": 85, "40968141593424": 85, "contiendront": 85, "fer": [85, 140, 147, 148, 160, 168, 175], "0x1f8944d3ba8": 85, "nuage2": 85, "0x1c0e33655f8": 86, "15754": 86, "105018618644": 86, "19898": 86, "600443365925": 86, "6383487080093": 86, "553": [86, 115], "2184": 86, "8079894060775": 86, "0x1c0e4c6f208": 86, "5154656398129": 86, "156": [86, 106, 129, 143], "7106930739271": 86, "0x1c0e4c90940": 86, "946": 86, "grav": 86, "t\u00f4t": [86, 106, 166], "delta_": 86, "782": 86, "somme_diff2": 86, "difference2": 86, "optimise2": 86, "628": 86, "y_1": 86, "y_2": 86, "y2_1": 86, "y2_2": 86, "13082": 86, "574312018376": 86, "574312018447": 86, "soin": [87, 88, 89, 90, 168], "random_mat": [87, 88], "21542897": 87, "02478399": 87, "89552004": 87, "24733264": 87, "393163": 87, "40164738": 87, "32997878": 87, "70660631": 87, "20765567": 87, "43301488": 87, "d\u00e9correl": [87, 88], "m_1": [87, 88, 92], "build_m1": [87, 88], "26184685": 87, "41751593": 87, "53354327": 87, "34849608": 87, "96298222": 87, "51815696": 87, "58374784": 87, "71569523": 87, "12326482": 87, "conclus": [87, 88, 119], "remis": [87, 88, 168], "v_x": [87, 88], "v_y": [87, 88], "mean_no_nan": [87, 88], "05543522": 87, "0564421": 87, "nanmean": [87, 88], "build_m2": [87, 88], "entourent": 87, "m_3": [87, 88], "fill_column": 87, "col": [87, 88, 160], "nlin": 87, "argsort": 87, "reverse_ord": 87, "bmat": 87, "build_m3": [87, 88], "18717541": 87, "d3": [87, 88, 109], "115": [87, 175], "16303767944946": 87, "990990757306854": 87, "calcul_norm": 87, "puc": [87, 88], "oreil": [87, 88], "experient": [87, 88], "repetit": [87, 88], "25531314": 87, "070392": 87, "57432808": 87, "73422968": 87, "43834865": 87, "07553875": 87, "49648148": 87, "11340377": 87, "116": [87, 174], "28344822": 87, "90363643": 87, "90465816": 87, "88595361": 87, "117": [87, 117, 118, 128], "28824424": 87, "05673836": 87, "37972659": 87, "28703801": 87, "97835736": 87, "49136146": 87, "70723528": 87, "34848088": 87, "\u00e9cart": [87, 88, 89, 90, 181], "10112512": 87, "1306255": 87, "94022724": 87, "91916954": 87, "96721215": 87, "14121786": 87, "35629971": 87, "99870181": 87, "48138722": 87, "00467304": 87, "ratio2": 87, "nerreur": [87, 88], "tend": [87, 88, 143], "build_m3_just1": 87, "imin": 87, "imax": 87, "pr\u00e9alabl": [87, 132, 175, 176], "corrcoef": [87, 88], "495": [87, 88], "979253": 87, "308262": 87, "616462": 87, "496": [87, 88], "980323": 87, "790158": 87, "667422": 87, "497": [87, 88], "977415": 87, "050925": 87, "430873": 87, "498": [87, 88, 175], "980746": 87, "885168": 87, "995820": 87, "978955": 87, "935248": 87, "137125": 87, "56987627": 88, "87585938": 88, "21230699": 88, "85706677": 88, "32971056": 88, "31614371": 88, "99469359": 88, "63550262": 88, "90844194": 88, "84040783": 88, "48750338": 88, "92138266": 88, "59978536": 88, "22258934": 88, "72143302": 88, "02229479": 88, "52222862": 88, "1157862": 88, "97598417": 88, "01928312": 88, "09388639": 88, "plus_proch": 88, "colnan": 88, "plus_proche_rapid": 88, "amin": 88, "399": 88, "83806507": 88, "88020645836853": 88, "054794671768933": 88, "9707": 88, "2287": 88, "93113166": 88, "65407502": 88, "59161999": 88, "20763444": 88, "36123306": 88, "49474066": 88, "20767715": 88, "72341549": 88, "99591576": 88, "28602503": 88, "35006845": 88, "18103292": 88, "775306": 88, "15330721": 88, "44248685": 88, "80699951": 88, "70774305": 88, "74452936": 88, "59144759": 88, "22093401": 88, "600": 88, "700": 88, "800": [88, 115], "35913762": 88, "46902292": 88, "02940671": 88, "50112628": 88, "06988804": 88, "66400287": 88, "02826212": 88, "6163169": 88, "98007237": 88, "7964768": 88, "978472": 88, "787724": 88, "693286": 88, "980944": 88, "399139": 88, "579552": 88, "979960": 88, "064428": 88, "893382": 88, "977117": 88, "492200": 88, "140280": 88, "981207": 88, "797778": 88, "785862": 88, "rond": [89, 150], "sall": [89, 90], "23606797749979": [89, 174], "585786437626905": 89, "04987562112089": 89, "cercl": [89, 90, 168], "04023026006364461": 89, "613278941761477": 89, "polair": [89, 174], "table_alea_pol": 89, "2697993898932539": 89, "07781479211233774": 89, "104239515207136": 89, "7109081402403072": 89, "46932352351540807": 89, "3259610442266929": 89, "1743368223886739": 89, "2821629999494295": 89, "skip_": [89, 90], "list_tabl": [89, 90], "7403604958859722": 89, "mur": [89, 90, 132], "151393678876878": 89, "0883943109284333": 89, "2251498896276685": 89, "9591970274173125": 89, "8759281350069976": 89, "8362221630472657": 89, "7566611650530053": 89, "0002849316792242": 89, "5208215962264875": 89, "537577072452744": 89, "650373925673775": 89, "339568894819979": 89, "31652883529303466": 89, "256221251336387": 89, "diametr": 89, "5565818929001787": 89, "05896867240161785": 89, "5288969098327476": 89, "28733719348942466": 89, "6110699282390006": 89, "32241732345580165": 89, "14909553247181195": 89, "9356539992681199": 89, "026230694145464417": 89, "2908024901550055": 89, "4975323234658624": 89, "06918255935350293": 89, "60937258121247": 89, "16579629631884596": 89, "22654870937824634": 89, "12601838486539685": 89, "651232619461013": 89, "05440550117493803": 89, "25693188063963546": 89, "044795815889184576": 89, "07316443943516515": 89, "8533292769508105": 89, "0525413549133239": 89, "patch": [40, 89, 90, 107], "circl": [89, 130], "add_artist": [89, 90], "position": [89, 90, 168], "quadrillag": [89, 90], "hexagonal": [89, 150, 151], "spiral": [89, 90], "improve_distrib": [89, 90], "pjp": [89, 90], "best_sol": [89, 90], "351": [89, 112, 164], "16110855450954664": 89, "13158100390586172": 89, "2384176552949989": 89, "218691822411302": 89, "19838094003303594": 89, "2162723387696761": 89, "20826241454101815": 89, "350": 89, "2094900548253301": 89, "diagramm": [89, 90], "triangul": 89, "delaunay": 89, "voronoi": [89, 90], "voronoi_plot_2d": [89, 90], "vor": [89, 90], "triplot": 89, "simplic": 89, "points2": [89, 90], "vor2": [89, 90], "dela2": 89, "triangl": [89, 90, 148, 151], "\u00e9quilat\u00e9ral": [89, 90, 151], "fronti": [89, 90, 95], "peux": [89, 90], "zon": [89, 90, 174, 181], "points_in_circl": 89, "sklearn": [89, 90, 110, 128, 129], "clust": [89, 90], "n_cluster": [89, 90], "copy_x": [89, 90], "n_in": [89, 90], "n_job": [89, 90], "precompute_dist": [89, 90], "random_stat": [89, 90], "tol": [89, 90], "predict": [89, 90, 128, 129], "cluster": [89, 90], "cluster_centers_": [89, 90], "distance_n_t": [89, 90], "22015129672480682": 89, "13834146640009876": 89, "mixtur": [89, 90], "gaussianmixtur": [89, 90], "gau": [89, 90], "means_": [89, 90], "gaussian": [89, 90], "21874003784217044": 89, "2c": 90, "908190224838399": 90, "7798369055014547": 90, "6047310701361788": 90, "538160002945912": 90, "7983390011407794": 90, "6871544213644984": 90, "4887075948495667": 90, "511831256978005": 90, "1962115931817596": 90, "6710676955082597": 90, "8642968594855169": 90, "32893230449174": 90, "500463237472049": 90, "1547646758902923": 90, "7606012466424747": 90, "019429938832147": 90, "6514056477386534": 90, "596586600954664": 90, "05123812953078399": 90, "05320587377518926": 90, "37467460315675805": 90, "4937702081221422": 90, "3485943522613466": 90, "6259118658008394": 90, "1764558984440392": 90, "6004143527243244": 90, "4008125902558497": 90, "052940751769248395": 90, "547095264138868": 90, "7525281574947777": 90, "6243952889602158": 90, "2784959002399452": 90, "16893417347025785": 90, "15965080092875694": 90, "5866949933059173": 90, "6062900542195173": 90, "43564615941411566": 90, "26135901810381923": 90, "2792244176019283": 90, "7961649730497629": 90, "28673576049151195": 90, "08784118387851514": 90, "2840288333247212": 90, "7893555701617381": 90, "6299236074366998": 90, "19575062032543844": 90, "facecolor": 90, "rectangulair": 90, "07797442236028274": 90, "17084871553555847": 90, "16055223380264586": 90, "22481137276979984": 90, "points_in_rectangl": 90, "19622641509433936": 90, "2016527778991591": 90, "14695957901204992": 90, "trompeur": 90, "v\u00e9rit": [91, 147], "covid": [91, 96], "435": 91, "2322": 91, "642": 91, "3128": 91, "3580": 91, "1041": 91, "4188": 91, "1251": 91, "695": 91, "452": 91, "608": 91, "1104": 91, "1105": 91, "966": 91, "1106": [91, 119], "1107": 91, "1108": 91, "erron": [91, 92, 163, 174], "exponentiel": [91, 175], "donnees_artificiel": 91, "dayofyear": 91, "exponential": 91, "examen2021": 91, "dure": 91, "nt": [91, 178], "98965342710248": 91, "lifelin": 91, "kaplanmeierfitt": 91, "kmf": 91, "portail": 91, "propagation_n": 91, "propagation_vaccin": 91, "propagation_n_vaccin": 91, "prop": 91, "immunis": 91, "3h": 91, "passent": [91, 146, 160], "p4": 91, "mesure_temps_fonct": 92, "10280692000000005": 92, "bc": 92, "189998290": 92, "18042000": 92, "009560690999999987": 92, "009846866999999992": 92, "001004321000000008": 92, "n_op": 92, "m1_shap": 92, "m2_shap": 92, "185998326": 92, "n_ops_3": 92, "sh1": 92, "sh2": 92, "sh3": 92, "m1_m2m3": 92, "m1m2_m3": 92, "36084000": 92, "testing": [92, 95, 118, 158], "assert_almost_equal": [92, 118, 158], "produit3": 92, "0011657070000000048": 92, "0011010209999999887": 92, "n_ops_4": 92, "sh4": 92, "m1_m2m3m4": 92, "m1m2_m3m4": 92, "m1m2m3_m4": 92, "11331640": 92, "produit4": 92, "000988687999999982": 92, "010446371000000027": 92, "008082993999999956": 92, "0008713240000000155": 92, "0009054390000000013": 92, "m_n": 92, "mm_i": 92, "verront": 92, "n_ops_n": 92, "unexpected": [92, 99, 101, 118], "best_cost": 92, "best_pos": 92, "product_n": 92, "bot": 92, "0009734980000000349": 92, "0009873739999999031": 92, "m5": [92, 168], "9697854": 92, "probl\u00e9mat": [92, 160], "n_ops_n_opt": 92, "product_n_opt": 92, "0010903469999999516": 92, "0009383259999999893": 92, "01018160299999991": 92, "calcu": 92, "suivr": [37, 92, 101, 160, 168, 174, 176], "longtemp": 92, "hauteur": [93, 143, 151, 168], "mati": 93, "surface_br": 93, "brique_optimal": 93, "surf": 93, "additionnel": 93, "brique_optimale_surplus": 93, "4471428571428575": 93, "4285714285714286": 93, "exclur": 93, "producteur": 93, "\u00e9coul": [93, 134, 135, 171, 178], "marchandis": 93, "surface_brique2": 93, "brique_optimale_surplus_deux_litr": 93, "surf1": 93, "surf2": 93, "6938095238095245": 93, "7857142857142858": 93, "envoi": [93, 113, 119, 136, 160, 163, 168, 174, 176, 181], "maxxy": 94, "seg": 94, "tree3": 94, "rl": 94, "tree_recurs": 94, "level": [94, 160, 174], "all_seg": 94, "iter_seg": 94, "new_seg": 94, "tree3_al": 94, "re_rnd": 94, "rl_rnd": 94, "a3": [94, 137], "tree_recursive_al": 94, "tirage_al": 95, "n_ru": 95, "n_med": 95, "07629544": 95, "9432004": 95, "52035232": 95, "47051663": 95, "89432851": 95, "07652123": 95, "01653439": 95, "99436816": 95, "1499065": 95, "10758634": 95, "29317605": 95, "76729661": 95, "97237465": 95, "25573414": 95, "60399214": 95, "72086801": 95, "76951744": 95, "75725811": 95, "6663647": 95, "92848284": 95, "07308657": 95, "11122628": 95, "92539686": 95, "48536534": 95, "43820312": 95, "26151317": 95, "74683167": 95, "40646889": 95, "92033983": 95, "88312987": 95, "emp\u00each": [95, 104, 172, 174, 175, 181], "83198031": 95, "96466894": 95, "77179962": 95, "85889438": 95, "8461793": 95, "57370393": 95, "40531662": 95, "22456834": 95, "23536145": 95, "57466486": 95, "82197491": 95, "41002286": 95, "49221173": 95, "36141496": 95, "80702793": 95, "88495069": 95, "04168846": 95, "84550633": 95, "93752849": 95, "91062519": 95, "07690611": 95, "86261363": 95, "32681556": 95, "66757055": 95, "0931767": 95, "69200264": 95, "69223434": 95, "52616512": 95, "57965512": 95, "63777092": 95, "91082466": 95, "23438729": 95, "53420279": 95, "27127587": 95, "62954985": 95, "80840816": 95, "39845012": 95, "48835731": 95, "34532585": 95, "3555345": 95, "94993319": 95, "31340719": 95, "59626523": 95, "351522": 95, "19644616": 95, "00989466": 95, "51327456": 95, "70491577": 95, "52817942": 95, "25799275": 95, "assert_allclos": 95, "test_dist": 95, "tolist": [95, 103, 118], "nm": [95, 143], "plus_proche_medecin": 95, "p_min": 95, "p_max": 95, "floor": [95, 181], "test_grill": 95, "map_grille_indic": 95, "xi": 95, "test_map": 95, "pairwise_distance_grill": 95, "gx": 95, "gy": 95, "test_distance_grill": 95, "415": 95, "470": 95, "8018622000236064": 95, "8201483000302687": 95, "8459657999919727": 95, "8035789999994449": 95, "8155568999936804": 95, "026652099972125143": 95, "01595849997829646": 95, "01231670001288876": 95, "012164799962192774": 95, "011980499955825508": 95, "imaginon": [95, 133, 136, 160], "situ": [95, 111, 174, 176], "extr\u00eam": 95, "plus_proche_medecin_grill": 95, "mg": 95, "co\u00efncident": 95, "irait": 95, "techniqu": [95, 106, 118, 178], "nearest": [95, 168], "closest": 95, "illustrent": 96, "\u00e9labor": [96, 176], "briqu": [96, 174], "streaming": 96, "bjkst": 96, "apart": [96, 146, 174, 178], "sird": 96, "cass": [96, 124, 132, 140, 141], "vigener": [96, 98], "mors": [96, 153], "cryptag": [96, 178], "homomorphic": 96, "craig": 96, "gentry": 96, "2a": [96, 175], "d\u00e9": [13, 98], "rotat": [13, 98, 153], "contingent": [31, 32, 98], "gin": 98, "pickl": [98, 110, 176, 178, 179], "scraping": [8, 98], "pokemon": [8, 98], "devin": [98, 147], "langu": [98, 163, 172], "bigarr": 98, "magiqu": 98, "annot": 99, "manipulent": [99, 160, 162, 172, 176], "mypy": 99, "incoh\u00e9rent": 99, "formatt": [99, 175, 181], "ruff": 99, "fac": [99, 108, 130, 147, 160], "0x7fec374f5ed0": 99, "de_autr": 99, "sigma_or_n": [99, 101], "nouvel_ensembl": [99, 101], "attrap": [99, 164, 168], "rotation1": [99, 108], "rotation2": [99, 108], "test_rotation1": [99, 108], "de0": [99, 108], "assertionerror": [99, 124], "test_rotation2": [99, 108], "addict": 103, "4x4": [103, 144], "creer_jeu": 103, "position_libr": 103, "nombre_aleatoir": 103, "joue_ligne_colon": 103, "lc": 103, "non_null": 103, "non_null2": 103, "joue_coup": 103, "coup_suiv": 103, "c2048": 103, "__repr__": [103, 160, 168], "calcule_scor": 103, "62it": 103, "84it": 103, "coll": [103, 149], "c2048_4": 103, "sharey": 103, "sharex": 103, "\u00e9leg": [104, 122, 136, 160, 181], "dictionnairr": 104, "lat": 104, "846651": 104, "lng": 104, "285811": 104, "orthographi": [104, 163], "autocomplet": 104, "radius": 104, "6371": 104, "dlat": 104, "radian": 104, "dlon": 104, "atan2": [104, 160, 174], "station1": 104, "station2": 104, "emil": 104, "zol": 104, "847030": 104, "295262": 104, "6928550943713419": 104, "oblig": [104, 147, 160, 161], "rigid": 104, "__rshift__": [104, 160], "retir": [105, 146, 168, 181], "proposent": [105, 136, 146, 160, 168, 176], "diff\u00e9": 105, "minis": 105, "appendleft": [105, 169], "2462739999955374e": 105, "0353370000029826e": 105, "81406999999308e": 105, "796050000029936e": 105, "953019999920797e": 105, "313129999987723e": 105, "568269999956101e": 105, "580999999987398e": 105, "447889999933977e": 105, "401670000057492e": 105, "71205999999438e": 105, "6167699999641626e": 105, "fen": 105, "977897000002485e": 105, "178353999994215e": 105, "823300000178278e": 105, "471699999769044e": 105, "712876000006872e": 105, "798504000003959e": 105, "035500000005414e": 105, "195899999918766e": 105, "84480600000461e": 105, "923587000006591e": 105, "347799999479321e": 105, "471000000601634e": 105, "162": 106, "105": [106, 168], "405": 106, "simulation_multinomial": 106, "library": 106, "ale": [106, 147], "430": 106, "pc": 106, "poids_cumul": 106, "poids_cumule_tr": 106, "009419400001206668": 106, "007181299999501789": 106, "010566299999481998": 106, "0066910000023199245": 106, "007558699999208329": 106, "006804499997087987": 106, "poids_tr": 106, "00013789999866276048": 106, "00010370000018156134": 106, "0004912999975204002": 106, "00014940000255592167": 106, "950000170036219e": 106, "0002525000018067658": 106, "nomrbr": 106, "06869539999752305": 106, "00884070000029169": 106, "08114130000103614": 106, "0094169999974838": 106, "06719900000098278": 106, "01211440000042785": 106, "stockag": 106, "pch": 107, "add_patch": 107, "polygon": 107, "surface_invers": 107, "6325000000000005": 107, "surface_inverse_dicho": 107, "63232421875": 107, "x3": 107, "y3": 107, "surface_inv_t": 107, "63234375": 107, "d\u00e9fectu": 107, "surface_inv_math": 107, "6324555320336759": 107, "3675444679663242": 107, "152": [107, 114], "coloriage_diagonal": 107, "concr\u00e9tis": 107, "comprom": 107, "exo_d": 108, "am\u00e8nent": 108, "nouveau_d": 108, "tourne_d": 108, "\u00e9thiqu": 109, "valjean": 109, "coset": 109, "fantin": 109, "marius": 109, "pontmercy": 109, "gavroch": 109, "th\u00e9nardi": 109, "antagon": 109, "javert": 109, "monsieur": [109, 113, 154, 162], "madam": 109, "babet": 109, "claquesous": 109, "montparn": 109, "gueulem": 109, "brujon": 109, "bamatabois": 109, "victurnien": 109, "amis": 109, "enjolr": 109, "combeferr": 109, "courfeyrac": 109, "prouvair": 109, "feuilly": 109, "bahorel": 109, "lesgl": 109, "joly": 109, "grantair": 109, "secondair": [109, 181], "ami": 109, "favourit": 109, "dahli": 109, "z\u00e9phin": 109, "f\u00e9lix": 109, "tholomyes": 109, "listoli": 109, "fameuil": 109, "blachevel": 109, "fauchelevent": 109, "mabeuf": 109, "azelm": 109, "toussaint": 109, "luc": 109, "gillenormand": 109, "georg": [109, 169], "\u00e9v\u00eaqu": 109, "myriel": 109, "baptistin": 109, "mme": 109, "magloir": 109, "gerv": 109, "modulo": [109, 163, 175], "congruentiel": 109, "22695477": 109, "c_n": 109, "\u00e9niem": [109, 183], "hashlib": [109, 178], "unsigned": 109, "5381": 109, "exp\u00e9rient": [109, 136, 160, 174, 175], "voi": [109, 142], "ds_legend": 109, "repartit": 109, "sha256": 109, "encod": [109, 172, 175, 176], "digest": 109, "d4": 109, "light_hash": 109, "d5": 109, "load_ir": 110, "load_dat": 110, "feature_nam": 110, "fleur": 110, "target_nam": 110, "sepal": 110, "length": [110, 183], "petal": 110, "virginic": 110, "148": [110, 125], "n5": 110, "setos": 110, "n4": 110, "lengt": 110, "florid": 110, "georgi": 110, "alask": 110, "quebec": 110, "versicolor": 110, "ireland": 110, "jacent": 110, "plat": [110, 146], "d\u00e9criv": [110, 175], "localis": 110, "flatbuffer": 110, "messagepack": 110, "coloriage_carr": 110, "histogramme_rapid": 110, "dummy": [110, 113], "exercice_json_xml": 110, "tableau_contingent": 110, "nbheap": 110, "classes_2048": 110, "profile_gin": 110, "pivot_gauss": [110, 116, 158], "profiling_exampl": 110, "exercice_p": 110, "code_multinomial": 110, "code_liste_tupl": 110, "tri_nlnd": 110, "structures_donnees_convers": 110, "virtuel": [100, 110], "json_text": 110, "res2": 110, "html_text": 110, "to_html": 110, "thead": 110, "styl": [110, 118, 120, 164, 175], "tbody": [110, 121], "df_html": 110, "read_html": 110, "df_locat": 110, "merged": 110, "450": [110, 119, 120, 133], "df_locations2": 110, "dfe": 110, "engin": 110, "openpyxl": [110, 176], "myzip": 110, "kernel": [110, 118], "crashed": 110, "executing": 110, "previous": [110, 168], "review": 110, "identify": 110, "failur": 110, "click": 110, "href": [110, 121, 147], "aka": 110, "vscodejupyterkernelcrash": 110, "viewoutput": 110, "glob": [110, 160, 163, 164, 174, 175, 176, 178, 183], "enregist": 110, "contig\u00fc": 110, "sock": 110, "sotck": 110, "reviendront": 110, "communiqu": [110, 113, 132, 179], "tripl": [111, 168], "surface_cerl": 111, "surface_cercl": 111, "53981633974483": 111, "p_i": 111, "quart": 111, "inscrit": [111, 152, 181], "estimation_p": 111, "dedans_enti": 111, "216": 111, "surface_cercle_p": 111, "tri_al": 111, "dommag": 111, "tri_alea2": 111, "m\u00e8nen": 111, "tri_alea3": 111, "eval_c": 111, "cs": 111, "ec": [111, 147], "14it": 111, "alentour": 111, "regular": [112, 146, 183], "exrp": 112, "normaliz": [112, 152, 153], "unicod": [112, 172], "unicodedat": 112, "strip_accent": 112, "nfd": [112, 129], "t\u00eatu": 112, "tetu": 112, "text_sans_accent": 112, "findall": [112, 121, 146, 147, 183], "za": [112, 183], "signifi": [112, 154, 160, 162, 163, 168, 175, 178, 181], "extract_words_lettr": 112, "nje": 112, "nqui": 112, "ngolf": 112, "nlanc": 112, "ndan": 112, "npaix": 112, "nque": 112, "nsilenc": 112, "02d": 112, "h\u00e9t\u00e9rogen": 113, "m\u00e9anism": 113, "reconstruir": 113, "lis": [113, 176], "141592653589793": [113, 178], "comp": 113, "314": 113, "320": [113, 122], "conteneur": [113, 175], "wikidat": 113, "magoo": 113, "creator": 113, "millard": 113, "kaufman": 113, "hubley": 113, "cartoon": 113, "aventur": 113, "c\u00e9lebr": 113, "neuf": [113, 136, 175], "simplejson": 113, "ijson": 113, "wikidatawik": 113, "entit": [113, 160, 174], "latest": 113, "lexem": 113, "bz2": 113, "l4": 113, "lemm": 113, "windsurf": 113, "lexicalcategory": 113, "q24905": 113, "q1860": 113, "p5238": 113, "malgr": [113, 164, 174, 175], "orjson": 113, "mainsnak": 113, "snaktyp": 113, "datavalu": 113, "entity": 113, "numeric": [113, 128, 175], "3324": 113, "l3324": 113, "wikibas": 113, "entityid": 113, "datatyp": 113, "qualifi": 113, "p1545": 113, "2a1ced1dca90648ea7e306acbadd74fc81a10722": 113, "faad30b0": 113, "421c": 113, "803a": 113, "c1fd": 113, "b9a99a0eb35d": 113, "18537": 113, "l18537": 113, "7241753c62a310cf84895620ea82250dcea65835": 113, "d15285a1": 113, "4880": 113, "7a9b": 113, "bb1f": 113, "85403e1a785": 113, "p5187": 113, "monolingualtext": 113, "d4a63d17": 113, "43e": 113, "749d": 113, "5860": 113, "21b90feb83f7": 113, "windsurfing": 113, "grammaticalfeatur": 113, "q10345583": 113, "f3": 113, "q110786": 113, "q3910936": 113, "q51929074": 113, "f4": 113, "windsurfed": 113, "q1392475": 113, "f5": 113, "q1230649": 113, "f6": 113, "gloss": 113, "planch": [113, 147], "u00e0": 113, "voil": 113, "meluncur": 113, "angin": 113, "zh": 113, "u6ed1": 113, "u6d6a": 113, "u98a8": 113, "u5e06": 113, "hant": 113, "tw": 113, "u00e1": 113, "u00edng": 113, "hong": 113, "ph": 113, "u00e2ng": 113, "u0e40": 113, "u0e25": 113, "u0e48": 113, "u0e19": 113, "u0e27": 113, "u0e34": 113, "u0e14": 113, "u0e4c": 113, "u0e0b": 113, "u0e23": 113, "u0e1f": 113, "tg": 113, "u0441": 113, "u0451": 113, "u0440": 113, "u0444": 113, "u0438": 113, "u043d": 113, "u0433": 113, "u0431": 113, "u043e": 113, "u0437": 113, "u0448": 113, "u0430": 113, "u043c": 113, "u043b": 113, "u04e3": 113, "fi": [43, 113, 168, 176], "purjelautaill": 113, "p5137": 113, "191051": 113, "q191051": 113, "13e5f498": 113, "4deb": 113, "ea41": 113, "4d60": 113, "02c852b88b4c": 113, "p5972": 113, "l144039": 113, "7218013f": 113, "b84b": 113, "40fa": 113, "b57b": 113, "bc1ba2239bb8": 113, "pageid": 113, "54387040": 113, "lastrevid": 113, "1710596079": 113, "22t19": 113, "34z": 113, "l314": 113, "q1084": 113, "q7026": 113, "p5185": 113, "1775415": 113, "q1775415": 113, "45650151": 113, "4ed8": 113, "025d": 113, "e36ef22e6a2": 113, "q146786": 113, "54387050": 113, "684359491": 113, "24t07": 113, "21z": 113, "verbeux": [101, 113, 179], "abandon": [113, 147], "dict2xml": 113, "restreint": 113, "lde": 113, "dill": [113, 176], "getstat": 113, "et_setstat": 113, "num": [114, 168], "count1": 114, "count2": 114, "count3": 114, "cytoolz": 114, "count4": 114, "swap": 115, "echang": 115, "entas": 115, "dessine_t": 115, "_heapify_max_bottom": 115, "_heapify_max_up": 115, "topk_min": 115, "_heapify_max_bottom_posit": 115, "_heapify_max_up_posit": 115, "topk_min_posit": 115, "ext_test_cas": [115, 116], "20001": 115, "div_by_numb": 115, "01it": 115, "averag": [115, 116], "deviat": [115, 116], "min_exec": [115, 116], "max_exec": [115, 116], "ttim": [115, 116], "context_siz": [115, 116], "warmup_tim": [115, 116], "001400": 115, "000271": 115, "001090": 115, "001892": 115, "014000": 115, "001138": 115, "002110": 115, "000517": 115, "001622": 115, "003214": 115, "021104": 115, "001633": 115, "001967": 115, "000299": 115, "001747": 115, "002545": 115, "019669": 115, "002969": 115, "3000": [115, 117], "002692": 115, "000611": 115, "002081": 115, "003779": 115, "026925": 115, "003983": 115, "4000": 115, "003096": 115, "000276": 115, "002660": 115, "003578": 115, "030960": 115, "003305": 115, "33it": 115, "008493": 115, "001842": 115, "006837": 115, "013038": 115, "084926": 115, "014053": 115, "009114": 115, "002111": 115, "007600": 115, "013480": 115, "091137": 115, "022466": 115, "650": 115, "011651": 115, "003198": 115, "008757": 115, "017215": 115, "116511": 115, "010779": 115, "011374": 115, "001973": 115, "009725": 115, "016044": 115, "113739": 115, "012545": 115, "950": 115, "016104": 115, "003647": 115, "011865": 115, "022728": 115, "161042": 115, "018794": 115, "1100": 115, "_heapify_max_up_position_simpl": 115, "topk_min_position_simpl": 115, "58650968": 116, "72315516": 116, "9137217": 116, "04526746": 116, "70012278": 116, "87604076": 116, "92402115": 116, "36865515": 116, "00362559": 116, "26361505": 116, "pivot_gauss2": 116, "pivot_gauss3": 116, "numpy1": 116, "numpy2": 116, "17it": 116, "000051": 116, "000028": 116, "000125": 116, "000512": 116, "000728": 116, "000045": 116, "000021": 116, "000094": 116, "000447": 116, "000046": 116, "000024": 116, "000110": 116, "000197": 116, "001367": 116, "000253": 116, "001134": 116, "000540": 116, "000623": 116, "002258": 116, "011340": 116, "003184": 116, "001312": 116, "000678": 116, "000639": 116, "002858": 116, "013121": 116, "001035": 116, "000375": 116, "000184": 116, "000233": 116, "000818": 116, "003753": 116, "001292": 116, "001557": 116, "001094": 116, "000686": 116, "003803": 116, "015571": 116, "016613": 116, "000404": 116, "000062": 116, "000331": 116, "000553": 116, "004045": 116, "000364": 116, "000471": 116, "000037": 116, "000440": 116, "000545": 116, "004713": 116, "000482": 116, "003798": 116, "001491": 116, "002594": 116, "007715": 116, "037978": 116, "018972": 116, "001324": 116, "000265": 116, "001054": 116, "002030": 116, "013239": 116, "001341": 116, "000820": 116, "000190": 116, "000602": 116, "001140": 116, "008200": 116, "000651": 116, "004260": 116, "001177": 116, "002724": 116, "006471": 116, "042603": 116, "005198": 116, "001690": 116, "000268": 116, "001100": 116, "002116": 116, "016902": 116, "001080": 116, "009320": 116, "002581": 116, "005762": 116, "013509": 116, "093197": 116, "015497": 116, "001664": 116, "000133": 116, "001458": 116, "001827": 116, "016641": 116, "001309": 116, "005314": 116, "001348": 116, "003848": 116, "008252": 116, "053141": 116, "016670": 116, "001629": 116, "000216": 116, "001459": 116, "002045": 116, "016286": 116, "001499": 116, "011036": 116, "003890": 116, "007070": 116, "018254": 116, "110356": 116, "017467": 116, "002637": 116, "000582": 116, "001846": 116, "003606": 116, "026375": 116, "002417": 116, "021563": 116, "003232": 116, "017314": 116, "029488": 116, "215629": 116, "028747": 116, "004673": 116, "001109": 116, "003391": 116, "005935": 116, "046730": 116, "005792": 116, "profilag": 117, "concentr": 117, "_gini_sort": 117, "_gini_in": 117, "spy": [117, 118], "centiem": 117, "souv": 117, "ralent": [117, 118, 181], "profiler": 117, "disabl": [117, 118, 119, 128], "sortby": [117, 118], "print_stat": [117, 118, 119, 128], "ordered": [117, 118, 119, 128], "ncall": [117, 118, 119, 128], "tottim": [117, 118, 119, 128], "percall": [117, 118, 119, 128], "cumtim": [117, 118, 119, 128], "lineno": [117, 118, 119, 128, 164, 166], "venv": [117, 146], "python3": [43, 117, 118, 146, 164, 168], "interactiveshel": [117, 118, 128], "3472": [117, 118], "run_cod": [117, 118, 128], "exec": [43, 117, 128, 160, 163, 164, 175, 178], "usr": [117, 118, 146, 164], "codeop": [117, 118, 128], "__call__": [117, 118, 128], "ipykernel_23329": 117, "1877708867": 117, "1359775409": 117, "contextlib": [117, 118], "next": [42, 117, 134, 135, 160, 163, 174], "traitlet": [117, 118], "692": [117, 118], "__get__": [117, 118], "compilerop": [117, 118, 146], "extra_flag": [117, 118], "getattr": [117, 118, 128], "3424": [117, 118], "654": [117, 118], "listcomp": [117, 118, 119, 128, 160], "1229": [117, 118], "user_global_n": [117, 118], "_lsprof": [117, 119], "11038": 117, "682": 117, "841": 117, "132": [37, 117], "4034582288": 117, "024": 117, "436": 117, "003": [117, 119], "909": 117, "002": 117, "914": 117, "058": 117, "060": 117, "007": [117, 118], "398": 117, "392": 117, "013": [117, 119], "026": 117, "008": 117, "_gini_final_fast": 117, "gini_fast": 117, "017": 117, "543": 117, "1862792531": 117, "866": 117, "867": 117, "528": 117, "530": 117, "070": 117, "stop": 117, "output_html": 117, "_gini_cumsum2": 117, "_gini_cumsum2b": 117, "gini2": 117, "023": 117, "239060152": 117, "124": 117, "926": 117, "898": 117, "905": 117, "057": 117, "040": 117, "042": 117, "908": 117, "649": 117, "651": 117, "030": 117, "076": 117, "_gini_cumsum3b": 117, "total0": 117, "total1": 117, "_gini_cumsum3": 117, "gini3": 117, "022": [117, 119], "1743022160": 117, "059": 117, "064": 117, "921": 117, "917": 117, "012": 117, "699": 117, "028": [117, 119], "077": 117, "essayent": 118, "upload": 118, "wikimedi": 118, "9f": 118, "convolutionandpooling": 118, "signal": [118, 181, 183], "convolve2d": 118, "img": [118, 121], "11111111": 118, "000002": 118, "000004": 118, "convolve_na": 118, "9999995": 118, "000001": 118, "convolve_naive2": 118, "999998": 118, "retournent": [118, 175, 183], "test_unitair": 118, "decimal": [118, 174], "devien": 118, "_get_indic": 118, "_is_out": 118, "im2col_na": 118, "kernel_shap": 118, "fill_valu": 118, "mismatch": 118, "output_shap": 118, "middl": 118, "kernel_siz": 118, "data_siz": 118, "i_dat": 118, "i_kernel": 118, "t_dat": 118, "t_kernel": 118, "i_out": 118, "convolve_im2col_na": 118, "conv": 118, "999996": 118, "test_unitaire2": 118, "dirnam": [118, 176], "exec_prefix": 118, "profile_cod": 118, "133426": 118, "722": [118, 181], "361": [118, 119], "ipykernel_7262": 118, "3679460054": 118, "3311625431": 118, "88200": 118, "44100": 118, "fromnumeric": [118, 119, 128], "2979": 118, "_wrapreduct": [118, 119, 128], "dictcomp": [118, 119], "2974": 118, "_prod_dispatch": 118, "profileur": [118, 119], "rentr": [118, 147, 168], "text_prof": 118, "pre": 118, "whit": 118, "00042": 118, "92883": 118, "00273": 118, "92841": 118, "35591": 118, "92471": 118, "00016": 118, "00087": 118, "00575": 118, "00169": 118, "00488": 118, "00035": 118, "ict": 118, "meth": [118, 160], "00065": 118, "unc": 118, "00203": 118, "ufunc": [118, 119, 128], "28951": 118, "46552": 118, "176400": 118, "09528": 118, "08072": 118, "09562": 118, "00026": 118, "00009": 118, "00011": 118, "00040": 118, "00068": 118, "00022": 118, "00098": 118, "176600": 118, "09539": 118, "88300": 118, "08095": 118, "proc\u00e8dent": 118, "interromp": 118, "enregistrent": [118, 166], "marqueur": 118, "interrompu": [118, 174], "interrompr": [118, 154, 168, 172, 174], "sampling": [118, 133], "d\u00e9buggag": 118, "im2col_recurs": 118, "im2col_naive_implement": 118, "fall_back_dim": 118, "func": [118, 119, 168], "torch": 118, "nn": 118, "unfold": 118, "padding": 118, "below": 118, "switch": 118, "k0": 118, "mini_kernel": 118, "mini_shap": 118, "cached": 118, "cc2": 118, "new_shap": 118, "resh": 118, "convolve_im2col_recurs": 118, "test_unitaire3": 118, "r\u00e9impl\u00e9ment": 119, "9644453525543213": 119, "density": 119, "sigma2": 119, "001481771469116211": 119, "doprofil": 119, "normpath": [119, 128], "getcwd": [119, 168, 176], "base_prefix": 119, "dump_stat": 119, "10000000": 119, "6027283668518066": 119, "00013383": 119, "_distn_infrastructur": 119, "1958": 119, "142": 119, "_continuous_distn": 119, "_pdf": 119, "_norm_pdf": 119, "093": 119, "_multiarray_umath": 119, "implement_array_funct": 119, "048": 119, "__array_function__": 119, "function_bas": 119, "1912": [119, 130, 131], "_insert": 119, "975": 119, "_support_mask": 119, "putmask": 119, "021": 119, "559": 119, "argsreduc": 119, "2406": 119, "2307": 119, "604": 119, "broadcast_array": 119, "stride_trick": 119, "480": [119, 122], "546": 119, "340": 119, "_broadcast_to": 119, "_ufunc_config": 119, "seterr": 119, "atleast_1d": 119, "shape_bas": 119, "416": 119, "_broadcast_shap": 119, "geterr": 119, "538": 119, "seterrobj": 119, "geterrobj": 119, "345": [119, 175], "genexpr": 119, "asarray": 119, "1965": 119, "542": 119, "promote_typ": 119, "425": 119, "_argcheck": 119, "_maybe_view_as_subclass": 119, "2302": 119, "_any_dispatch": 119, "multiarray": 119, "1961": 119, "_shape_dispatch": 119, "ndit": 119, "1908": 119, "_place_dispatch": 119, "_get_support": 119, "asanyarray": 119, "_parse_arg": 119, "_atleast_1d_dispatch": 119, "2401": 119, "_all_dispatch": 119, "_broadcast_arrays_dispatch": 119, "1882781982421875": 119, "ipykernel_29119": 119, "200996087": 119, "guis": 119, "\u00e9voqu": [120, 163], "fatal": 120, "dicho": 120, "liste_trie": 120, "recherche_dichotomique_recurs": 120, "parametres": 120, "para\u00eetr": [120, 160], "recherche_dichotomique_recursive2": 120, "pok\u00e9mon": 121, "pokemondb": 121, "demandon": 121, "721": 121, "pok\u00e9dex": 121, "training": [121, 129], "breeding": 121, "databas": 121, "dossi": 121, "shutil": [121, 178], "bs4": 121, "utilison": 121, "agent": 121, "mozill": 121, "req": 121, "pokedex": 121, "header": 121, "beautifulsoup": 121, "lxml": 121, "liste_pokemon": 121, "span": [121, 183], "infocard": 121, "lg": 121, "get_pag": 121, "pokemon_nam": 121, "url_pokemon": 121, "get_cara_pokemon": 121, "defaultdict": 121, "vital": 121, "table_body": 121, "findchildren": 121, "findchild": 121, "gettext": 121, "bulbasaur": 121, "ivysaur": 121, "venusaur": 121, "charmand": 121, "charmeleon": 121, "charizard": 121, "squirtl": 121, "spec": 121, "height": [121, 168], "abilit": 121, "ev": [121, 147, 168], "catch": 121, "rat": 121, "gend": 121, "hp": 121, "attack": 121, "defens": 121, "sp": [121, 129], "atk": 121, "speed": 121, "grass": 121, "seed": 121, "kg": 121, "lb": 121, "overgrowchlorophyll": 121, "hidden": 121, "ability": 121, "yellow": 121, "0226": 121, "gold": 121, "silv": 121, "cryst": 121, "pok\u00e9ball": 121, "medium": 121, "slow": 121, "monst": 121, "femal": 121, "884": 121, "140": 121, "0002": 121, "0227": 121, "0003": 121, "0228": 121, "0004": 121, "fir": 121, "lizard": 121, "blazesolar": 121, "0229": 121, "dragon": 121, "0005": 121, "flam": 121, "0230": 121, "artwork": 121, "jpg": 121, "out_fil": 121, "copyfileobj": 121, "butterfre": 121, "spearow": 121, "skimag": 121, "imio": 121, "imread": 121, "imshow": 121, "get_xax": 121, "get_yax": 121, "amus": 122, "gh": 122, "er": [122, 156], "recontruir": 122, "36960": 122, "cpython": 122, "dv": 122, "devrion": 122, "max_j": 122, "r\u00e9present": 122, "arr": [122, 145], "r\u00e9f\u00e9renc": [122, 160], "\u00e9norm": 122, "9x8": 122, "amat": 122, "aarr": 122, "00984": 122, "00112": 122, "nb_lin": 122, "nb_col": 122, "chi_2": [37, 123], "facteur": 123, "bullet": 123, "n_": 123, "asymptot": 123, "libert": [123, 147, 181], "pr\u00e9f\u00e9rent": [123, 160, 174, 175], "evident": 123, "chi2_contingency": 123, "chi2": 123, "pvalu": 123, "168598503892621": 123, "4045712090580829": 123, "nj": 123, "nij": 123, "52941176": 123, "88235294": 123, "58823529": 123, "47058824": 123, "61764706": 123, "16176471": 123, "impens": 124, "milli": 124, "unit_test": 124, "valeur_attendu": 124, "tour_prend_piec": 124, "test_tour_prend_piec": 124, "tour_prend_piece_tupl": 124, "test_tour_prend_piece_tupl": 124, "_tour_prend_piec": 124, "colori": 124, "find_neighbour": 124, "coloring": 124, "next_cas": 124, "tour_prend_piece_obstacl": 124, "test_": 124, "assurent": 124, "\u00e9crivent": [124, 176], "testent": 124, "pytest": 124, "commencenc": 124, "test_tour_prend_piece_obstacle_except": 124, "sorted_hist": 125, "recontruit": 125, "sorted_en": 125, "sort_with_hist": 125, "sort_with_nohist": 125, "immpl\u00e9ment": 125, "smoothsort": 125, "slowest": 125, "took": 125, "fastest": 125, "quoiqu": 125, "sort_with_nohist_nocopy": 125, "tableaux_aleatoir": 125, "enss": 125, "fonc": [125, 164], "1e10": [125, 131], "nlnn": 125, "6e": 125, "grossi": [125, 152], "403": 125, "1096": 125, "2980": 125, "8103": 125, "22026": 125, "59874": 125, "162754": 125, "442413": 125, "df100": 125, "dfm": 125, "1e9": 125, "homomorph": [126, 127], "pr\u00e9serv": [126, 127], "fully": [126, 127], "encrypt": [126, 127], "keygen": [126, 127], "secret": [126, 127], "sk": [126, 127], "eta": [126, 127], "publiqu": [126, 127, 178], "pk": [126, 127], "tau": [126, 127], "gamm": [126, 127], "rho": [126, 127, 174], "x_0": [126, 127], "r_p": [126, 127], "2r": [126, 127], "c_t": [126, 127], "decrypt": [126, 127], "rem\u00e9di": [128, 160, 174, 181], "memory_profil": 128, "make_classif": [128, 129], "datax": [128, 129], "datay": [128, 129], "n_featur": [128, 129], "n_class": [128, 129], "n_clusters_per_class": [128, 129], "n_inform": [128, 129], "85382076": 128, "22046675": 128, "24910001": 128, "94596312": 128, "66829759": 128, "20552856": 128, "72023578": 128, "84674932": 128, "26846378": 128, "20075415": 128, "59306412": 128, "88866079": 128, "76923866": 128, "32519462": 128, "94535057": 128, "47877141": 128, "2276281": 128, "02957725": 128, "85438519": 128, "55194846": 128, "58758523": 128, "80964683": 128, "32608346": 128, "12806316": 128, "3248342": 128, "06996005": 128, "31117628": 128, "99525892": 128, "47020431": 128, "13399841": 128, "kneighborsclassifi": [128, 129], "brut": [128, 129, 168], "x27": 128, "environment": [40, 128], "rerun": 128, "trust": 128, "unabl": [128, 164, 183], "loading": 128, "nbview": 128, "kneighborsclassifierkneighborsclassifi": 128, "python3105_x64": 128, "445": [128, 164], "143": 128, "3397": 128, "xav": 128, "appdat": 128, "ipykernel_22912": 128, "2929265561": 128, "__home_": 128, "github_fork": 128, "_classif": 128, "predict_prob": 128, "_bas": 128, "730": 128, "kneighbor": 128, "metric": 128, "_pairwise_distances_reduct": 128, "_dispatch": 128, "165": 128, "508": 128, "_validate_dat": 128, "check_array": 128, "_assert_all_finit": 128, "2177": 128, "is_usable_for": 128, "448": 128, "_config": 128, "get_config": 128, "1140": 128, "_wrapfunc": 128, "threadpool_limit": 128, "threadpoolctl": 128, "lim": 128, "_method": 128, "_sum": 128, "valid_metric": 128, "412": 128, "414": [128, 130], "813": 128, "joblib": [128, 180], "411": 128, "effective_n_job": 128, "1406": 128, "check_is_fitted": 128, "ctyp": 128, "get_active_backend": 128, "818": 128, "num_thread": 128, "856": 128, "set_num_thread": 128, "333": 128, "_num_sampl": 128, "restore_original_limit": 128, "846": 128, "get_num_thread": 128, "1368": 128, "_is_fitted": 128, "etudi": [128, 178], "pairwise_dist": 128, "acp": 129, "what_to_measur": 129, "32456439999987197": 129, "nf_set": 129, "nob": 129, "ys": 129, "nf": 129, "dt2": 129, "ball_tre": 129, "003455999999459891": 129, "020609700000022713": 129, "002304800000274554": 129, "029963799999677576": 129, "002105900000060501": 129, "04159559999970952": 129, "0038469000000986853": 129, "06434530000024097": 129, "0027813999995487393": 129, "0x1c7734ed060": 129, "0033596000002944493": 129, "029927999999927124": 129, "0036015000005136244": 129, "10796130000017001": 129, "00941289999991568": 129, "3117673000006107": 129, "adjoint": 129, "random_sparse_matrix": 129, "ratio_spars": 129, "resiz": [129, 168], "nnz": 129, "what_to_measure_spars": 129, "nb_spars": 129, "sparse_ratio": 129, "09028749999924912": 129, "568506300000081": 129, "9546476190476191": 129, "6447933999997986": 129, "9173545454545454": 129, "9383225999999922": 129, "616280500000357": 129, "77778": 129, "977762700000312": 129, "mesuron": 129, "model_select": 129, "train_test_spl": 129, "what_to_measure_perf": 129, "x_train": 129, "x_test": 129, "y_train": 129, "y_test": 129, "good": [129, 141], "003669900000204507": 129, "158": 129, "perf": 129, "0022122999998828163": 129, "0009547999998176238": 129, "0017370000005030306": 129, "00210730000071635": 129, "003134900000077323": 129, "classifieur": 129, "concordent": 129, "revenon": 129, "hyperplan": 129, "inert": 129, "x_j": 129, "pca": 129, "what_to_measure_perf_acp": 129, "acp_dim": 129, "t1o": 129, "t2o": 129, "goodo": 129, "n_component": 129, "t0": 129, "x_train_pc": 129, "fit_transform": 129, "x_test_pc": 129, "0022221999997782405": 129, "0010087999999086605": 129, "029213499999968917": 129, "p_noacp": 129, "y_noacp": 129, "dt_noacp": 129, "perf_noacp": 129, "dt_train": 129, "dt_predict": 129, "0020304999998188578": 129, "0021592000002783607": 129, "0010569000005489215": 129, "0015843000001041219": 129, "0009798000000955653": 129, "002628299999742012": 129, "0023179999998319545": 129, "013047299999925599": 129, "0009872000000541448": 129, "018462199999703444": 129, "eton": 129, "transfer": [129, 172], "conseerv": 129, "p_1": 130, "p_2": 130, "absurd": [130, 131], "constuir": [130, 175], "contred": 130, "matrix_distance_7398": [130, 131], "data_help": [130, 131, 146, 147, 152, 153], "boulogn": [130, 131], "billancourt": [130, 131], "beauv": [130, 131], "85597": [130, 131], "courbevoi": [130, 131], "sevran": [130, 131], "26564": [130, 131], "colomb": [130, 131], "alfortvill": [130, 131], "36843": [130, 131], "bagneux": [130, 131], "marcq": [130, 131], "baroeul": [130, 131], "233455": [130, 131], "suresn": [130, 131], "gennevilli": [130, 131], "10443": [130, 131], "charlevill": [130, 131], "mezier": [130, 131], "bordeau": [130, 131], "neq": 130, "\u00e9chapp": [130, 147, 175], "djikstr": 130, "skieur": [130, 131], "rentrent": 130, "magasin": 130, "lou": 130, "convient": [130, 174, 178], "min_": [130, 132, 133], "t_i": [130, 131], "arrang": 130, "t_1": 130, "t_2": 130, "t_n": [130, 131], "viennent": [100, 130, 181], "hlin": [130, 176], "t_3": 130, "t_4": 130, "t_": 130, "s_3": 130, "s_4": 130, "s_5": 130, "s_6": 130, "s_7": 130, "sigma_m": 130, "ski": [130, 131], "4496565125341727": 130, "6181478314088333": 130, "6472124781567143": 130, "689855001829289": 130, "7069363711449275": 130, "720882923000757": 130, "7315603136077902": 130, "757295341401446": 130, "806174917827697": 130, "8273604346819485": 130, "539691655662206": 130, "5677016209991443": 130, "651632433144162": 130, "6723990573029228": 130, "6967500647083442": 130, "6991707543184964": 130, "7173171973288348": 130, "764722044308385": 130, "789682343736771": 130, "8113678294188096": 130, "8872585832253812": 130, "8910607675180564": 130, "893354126537998": 130, "9435870591562554": 130, "9577834515908243": 130, "caract\u00e8ris": 130, "vision": 130, "compr\u00e9hens": [130, 160, 175], "redond": [130, 160], "v_0": 130, "sum_v": 130, "agorithm": 130, "dikjstr": 130, "fe": [130, 147], "1684": 130, "3437": 130, "348": 130, "3980": 130, "686": 130, "698": 130, "d\u00e9compress": [130, 176], "7zip": 130, "pysens": 130, "mac": [130, 176], "tar": 130, "60050": 130, "2290": [130, 131], "2363": [130, 131], "2346": [130, 131], "2025": [130, 131], "2140": [130, 131], "2428": [130, 131], "2201": [130, 131], "2506": [130, 131], "2425": [130, 131], "2557": [130, 131], "vil": 131, "rejoindr": 131, "7888": 131, "keyerror": [131, 163, 183], "m\u00e9zi": 131, "816197": 131, "813197": 131, "795670": 131, "skis": 131, "t_j": 131, "t_k": 131, "nec\u00e9ssair": 131, "restreindr": 131, "301415513544109": 131, "graph_notebook_sk": 131, "xymatrix": 131, "stratifi": [132, 133], "tmoertel": 132, "round": [132, 133, 174], "v_1": [132, 133, 174], "v_n": [132, 133], "v_": [132, 133], "w_": [132, 133], "couvr": [132, 133, 178], "brib": [132, 133], "prisoner": [132, 133], "royaum": 132, "prison": [132, 133], "vivent": [132, 147], "rel\u00e2ch": [132, 168, 181], "liber": [132, 181], "parlent": 132, "veil": 132, "susceptibl": [132, 160, 163, 168, 175, 178, 183], "relach": 132, "actif": [132, 181], "x_k": 132, "k_i": 132, "_t": 132, "k_a": 132, "k_t": 132, "affirm": [133, 147], "sol": 133, "inter": 133, "benjamin": 133, "donnot": 133, "new_intervall": 133, "mymax": 133, "fondamental": [133, 175], "oracl": 133, "esoudr": 133, "priso": 133, "groupkfold": 133, "stratified": 133, "codeforc": [134, 135], "483a": [134, 135], "geologist": [134, 135], "sometim": [134, 135], "rainfall": [134, 135], "drainag": [134, 135], "basin": [134, 135], "given": [134, 135, 174], "elev": [134, 135], "dimensional": [134, 135], "altitud": [134, 135, 160], "rul": [134, 135], "wat": [134, 135], "neighboring": [134, 135], "sink": [134, 135], "ti": [134, 135, 183], "north": [134, 135], "west": [134, 135], "east": [134, 135], "south": [134, 135], "drain": [134, 135], "directly": [134, 135], "indirectly": [134, 135], "labeled": [134, 135], "concatenated": [134, 135, 168], "bottom": [134, 135, 168], "resulting": [134, 135], "lexicographically": [134, 135], "smallest": [134, 135], "western": [134, 135], "alway": [134, 135, 166, 174, 178], "lead": [134, 135], "evil": [134, 135], "leagu": [134, 135], "bad": [134, 135, 168], "hors": [134, 135], "recently": [134, 135], "been": [134, 135], "far": [134, 135], "backstabbing": [134, 135], "decided": [134, 135], "department": [134, 135], "separat": [134, 135], "troublesom": [134, 135], "member": [134, 135], "being": [134, 135, 178], "thoroughbred": [134, 135], "isn": [134, 135], "his": [134, 135], "valuabl": [134, 135], "figuring": [134, 135], "himself": [134, 135], "got": [134, 135], "loyal": [134, 135], "henchman": [134, 135], "uva": [134, 135], "10911": [134, 135], "job": [134, 135], "forming": [134, 135], "quiz": [134, 135], "mca": [134, 135], "cpci": [134, 135], "championship": [134, 135], "student": [134, 135], "interested": [134, 135], "participat": [134, 135], "consisting": [134, 135], "memb": [134, 135], "near": [134, 135], "sure": [134, 135], "x_3": [134, 135], "minimized": [134, 135], "adn": 135, "fulkerson": 135, "flot": 135, "dispens": 136, "enrich": 136, "d\u00e9crir": [136, 148], "cart": [136, 154, 174], "physiqu": [136, 176], "atout": 136, "tarot": 136, "fastidi": [136, 137, 138, 152, 160, 175, 178, 181], "mesparametr": 136, "pas_gradient": 136, "fonction_any": 136, "pronom": 136, "0x7fb13a470c10": 136, "autre_point": 136, "appliq": 136, "carremag": [136, 137], "rattach": 136, "4031242374328485": 136, "lx": 136, "738793548317167": 136, "000000000010186": 136, "est_nul": 136, "somme_ligne_colonne_diagonal": 137, "coefficient_un": 137, "est_mag": 137, "tous_les_carre_na": 137, "tous_les_carre_naif2": 137, "stop_aft": 137, "tous_les_carres_permut": 137, "firstn": 137, "devenu": 137, "380064799999673": 137, "tous_les_carres_permutation_ligne12_meme_somm": 137, "435667799996736": 137, "5677748000016436": 137, "tous_les_carr": 137, "version1": 138, "fonction1": [138, 168], "fonction2": [138, 174], "fonction3": 138, "fonction_final": 138, "version2": 138, "tirage_aleatoir": [138, 139], "precedent": [138, 139, 168, 174, 175], "moyenne_tirag": [138, 139], "joueur": [138, 144, 181], "jou": [138, 145, 146, 147, 154, 174, 181], "tricheur": 138, "piecetruque": [138, 139], "piecetruqueemix": [138, 139], "al\u00e9atoiremnt": 138, "truque": [138, 139, 160], "d\u00e9cryptag": [140, 141], "reproduisent": 140, "polynom": 140, "2x": 140, "log_bas": 140, "9999999999999996": 140, "965784284662087": 140, "lettre_suiv": [140, 141], "valeur_absolu": 140, "bizarr": [102, 140, 143], "acroym": 140, "compact": [140, 150, 151], "timecomplexity": 140, "pr\u00e9dictibl": 140, "aeco": 140, "eddard": [140, 141], "catelyn": [140, 141], "robb": [140, 141], "sansa": [140, 141], "arya": [140, 141], "brandon": [140, 141], "rickon": [140, 141], "theon": [140, 141], "rorbert": [140, 141], "cersei": [140, 141], "tywin": [140, 141], "jaim": [140, 141], "tyrion": [140, 141], "sha": [140, 141], "bron": [140, 141], "lancel": [140, 141], "joffrey": [140, 141], "sandor": [140, 141], "vary": [140, 141], "renly": [140, 141], "mots_lettre_posit": [140, 141], "dictionnaire_bien_chois": [140, 141], "construis": 140, "reformul": 140, "concevoir": [140, 160, 168, 176, 181], "jenesuispascod": [140, 141], "mhqhvxlvsdvfrgh": [140, 141], "dop": [140, 141], "traduit": [140, 174, 175, 183], "dictionnaire_chois": 141, "pr\u00e9par": [141, 147], "dictionair": 141, "unordered_map": 141, "stl": 141, "accessing": 141, "code_cesar": 141, "mschgjlgedgrrrt": 141, "d\u00e9lim": 142, "int_a": 142, "6145744834544478": [142, 143], "ave": [143, 147], "2320146802585272": 143, "integrale_precis": 143, "val0": 143, "5050000000000003": 143, "2196877891927724": 143, "piano": 143, "int2": [143, 146], "integrale_precise_2n": 143, "5000454610560389": 143, "81920": 143, "2169740198498182": 143, "int_0": 143, "xdx": 143, "discontinu": 143, "marg": [143, 146], "underset": 143, "incertitud": 143, "interval": 143, "max_fp": 143, "last_f": 143, "fx": 143, "md": 143, "integrale_precise_derive": 143, "5004995004994989": 143, "integrale_bizarr": 143, "px": 143, "0625": 143, "2857142857142856": 143, "partout": [143, 152, 174], "rationnel": 143, "tombent": 143, "integrale_mc": 143, "5443922662659958": 143, "integrale_mc_precis": 143, "moy0": 143, "5001005538840249": 143, "i_n": 143, "16m": 143, "16e4": 143, "500765653300686": 143, "885": 143, "populair": [144, 145], "create_gam": 145, "gameover1": 145, "masked_not_equal": 145, "gameov": 145, "gam": 145, "process_lin": 145, "prev": 145, "update_gam": 145, "reversed": 145, "grammair": [146, 148, 174, 183], "interag": 146, "capteur": 146, "tsv": [146, 176], "fallu": [146, 160], "literal": [146, 175], "pr\u00e9vus": [146, 163], "permanent": [146, 181], "vocat": [146, 147, 181], "condens": 146, "pyramide_bigarre": 146, "td2_1": [146, 155], "classes_heritage_correct": 146, "lemonde5": [146, 153], "voeux83": [146, 147], "classes_carre_mag": 146, "lemonde3": [146, 153], "blogny1": [146, 153], "blog3": [146, 153], "nytimes5": [146, 153], "classes_carre_magique_correct": 146, "integrale_rectangle_correct": 146, "nytimes2": [146, 153], "voeux05": [146, 147], "module_file_regex": 146, "__pycache__": [146, 176, 178], "lemonde1": [146, 153], "nytimes8": [146, 153], "voeux06": [146, 147], "dictionnaire_vigener": 146, "voeux": [146, 147], "lemonde9": [146, 153], "voeux08": [146, 147], "texte_langue_correct": 146, "nytimes1": [146, 153], "voeux01": [146, 147], "premiers_pas_correct": 146, "nytimes9": [146, 153], "voeux74": [146, 147], "j2048": 146, "voeux75": [146, 147], "elpais2": [146, 153], "lequipe1": [146, 153], "voeux94": [146, 147], "lemonde7": [146, 153], "lemonde10": [146, 153], "seance4_excel": [146, 147], "arthur_charpentier2": [146, 152, 153], "afp2": [146, 152, 153], "inconnu2": [146, 153], "pyramide_bigarree_correct": 146, "afp1": [146, 152, 153], "lemonde8": [146, 153], "elpais5": [146, 153], "hex": [146, 150, 151, 175], "module_file_regex_correct": 146, "nytimes3": [146, 153], "voeux89": [146, 147], "arthur_charpentier3": [146, 152, 153], "voeux87": [146, 147], "lemonde11": [146, 153], "elpais4": [146, 153], "nytimes7": [146, 153], "lemonde2": [146, 153], "inconnu1": [146, 153], "lequipe2": [146, 153], "premiers_p": 146, "lemonde6": [146, 153], "blog1": [146, 153], "voeux09": [146, 147], "voeux90": [146, 147], "elpais7": [146, 153], "exemple_fichi": 146, "elpais6": [146, 153], "texte_langu": 146, "integrale_rectangl": 146, "voeux07": [146, 147], "classes_heritag": 146, "arthur_charpentier1": [146, 152, 153], "lemonde4": [146, 153], "blog2": [146, 153], "dictionnaire_vigenere_correct": 146, "variable_boucle_test": 146, "nytimes6": [146, 153], "elpais3": [146, 153], "variable_boucle_tests_correct": 146, "j2048_correct": 146, "nytimes4": [146, 153], "voeux79": [146, 147], "elpais1": [146, 153], "pragmat": 146, "reconnu": 146, "exportent": 146, "grop": 146, "volum": 146, "3x3": [146, 147], "gz": 146, "wav": 146, "mp3": [146, 176, 183], "ogg": 146, "musiqu": [146, 183], "mp4": 146, "vorb": 146, "vid\u00e9o": 146, "b\u00e9n\u00e9fic": 146, "v\u00f4tr": 146, "5403023058681398": [146, 147], "\u00eate": [146, 147], "n\u00e9": [146, 151, 171], "fonction_cos_sequent": [146, 147], "dynload": 146, "4161468365471424": [146, 147], "recharg": [146, 147, 174, 178], "async_helper": 146, "autocall": 146, "builtin_trap": 146, "completerlib": 146, "pr\u00e9ambul": 146, "1903": 146, "1957": 146, "indiff\u00e9rent": 146, "securit": [146, 147], "insecurit": [146, 147], "mako": [146, 147], "templating": [146, 147], "dimanch": [146, 147], "seance4_excel_mat": 147, "6414749515069115": 147, "4096411389655439": 147, "7991926327688407": 147, "9918119068265183": 147, "07379598399157106": 147, "4290244325276996": 147, "9337274118746318": 147, "17483162769873706": 147, "6159652170653446": 147, "4835251137894401": 147, "date1": 147, "2013": 147, "date0": 147, "birth": 147, "1975": [147, 171], "weekday": 147, "lund": [147, 171], "monmodule2": 147, "monmodule3": 147, "Mes": 147, "cher": 147, "compatriot": 147, "peupl": 147, "rassembl": [147, 160], "respir": 147, "rythm": 147, "bat": 147, "coeur": 147, "f\u00eat": 147, "no\u00ebl": 147, "participent": 147, "joi": 147, "retrouvaill": 147, "chaleur": 147, "familial": 147, "amical": 147, "toulous": 147, "\u00e9preuv": 147, "solidar": 147, "amiti": 147, "nation": 147, "m\u00e9tropol": 147, "euro": 147, "vivr": 147, "ignorecas": 147, "voul": 147, "soldat": 147, "engag": 147, "constru": 147, "victim": 147, "salu": 147, "reconnaiss": 147, "avancent": 147, "avan": 147, "souffranc": 147, "gouvern": 147, "\u00e9prouv": 147, "tristess": 147, "foi": 147, "profon": 147, "craint": 147, "\u00e9prouvent": 147, "angoiss": 147, "\u00e9treint": 147, "peur": 147, "exasper": 147, "entreprendr": 147, "int\u00e9": 147, "fiert": 147, "brutal": 147, "efforc": 147, "agi": 147, "souc": [147, 168], "d\u00e9fendr": 147, "fra": 147, "enver": 147, "tromp": [147, 163], "trah": 147, "hypocris": 147, "cess": [147, 160, 174, 176, 181], "urg": 147, "fond": [147, 168], "risquent": [147, 168], "leu": 147, "doulour": 147, "cett": 147, "responsab": 147, "prot": 147, "devo": 147, "persuad": 147, "fragil": 147, "d\u00e9battr": 147, "r\u00e9form": 147, "lyc": 147, "p\u00e9nal": 147, "ministr": 147, "fran\u00e7ois": 147, "fillon": 147, "cepen": 147, "hommag": 147, "froid": 147, "partenair": 147, "renonc": [147, 175], "boulevers": 147, "conduir": 147, "r\u00e9publ": 147, "redon": 147, "JE": 147, "vais": 147, "VOUS": 147, "NE": 147, "ennui": 147, "AI": 147, "dej": 147, "decrit": 147, "ET": 147, "DE": 147, "PAR": 147, "QUE": 147, "MES": 147, "SOIENT": 147, "LES": 147, "AU": 147, "LA": 147, "societ": 147, "francais": 147, "SOIT": 147, "fraternit": 147, "EST": 147, "AUX": 147, "agriculteur": 147, "artisan": 147, "entrepris": [147, 175], "devront": [147, 174], "examin": 147, "QU": 147, "EN": 147, "CE": 147, "rol": 147, "LUI": 147, "LE": 147, "tourment": 147, "OU": 147, "NOUS": 147, "vivon": 147, "appa": 147, "PAS": 147, "AVEZ": 147, "ILS": 147, "ONT": 147, "recu": 147, "AVEC": 147, "SUIS": 147, "antill": 147, "etaient": 147, "couvert": 147, "LEUR": 147, "EUX": 147, "NOS": 147, "departem": 147, "a_l_etrang": 147, "QUI": 147, "malheur": 147, "accident": 147, "SONT": 147, "hopital": 147, "egal": 147, "salut": 147, "travailleur": 147, "imm": 147, "chretien": 147, "TU": 147, "SOIES": 147, "UNE": 147, "accueil": 147, "POUR": 147, "president": 147, "1976": [147, 183], "grandeu": 147, "ELLE": 147, "SUR": 147, "entent": 147, "ren": 147, "aymon": 147, "SES": 147, "echangent": 147, "conduit": 147, "MON": 147, "1979": 147, "SON": 147, "revien": 147, "afriqu": 147, "terr": 147, "ME": 147, "union": [147, 175], "soviet": 147, "urss": 147, "six": [147, 175, 183], "UN": 147, "prepar": 147, "av": 147, "UNS": 147, "promet": 147, "fa": 147, "soutiendr": 147, "\u00e9quilibr": 147, "lass": 147, "invit": [147, 174], "\u00e2g\u00e9": 147, "fratern": 147, "ardemment": 147, "reprennent": [147, 175], "\u00e9lect": 147, "pr\u00e9sidentiel": 147, "\u00e9tabl": 147, "candidat": 147, "na\u00eetr": 147, "conf\u00e9der": 147, "dign": 147, "chanti": 147, "tribun": 147, "der": 147, "frapp": 147, "r\u00e9alit": [147, 160, 174], "dois": 147, "redir": 147, "admir": 147, "\u00e9quipag": 147, "r\u00e9confort": 147, "accompl": 147, "qual": 147, "dissoc": 147, "naguer": 147, "pa": 147, "apprendr": 147, "gra": 147, "\u00e9cout": [147, 175, 181], "enac": 147, "ins\u00e9cur": 147, "r\u00e9forment": 147, "rvic": 147, "achat": 147, "\u00e9nerg": 147, "immigr": 147, "banlieu": 147, "r\u00e9nov": 147, "organ": 147, "recour": [147, 175], "isra\u00ebl": 147, "palestinien": 147, "patr": 147, "python_": 147, "doctyp": 147, "noj": 147, "vector": 147, "enabled": 147, "disabled": [147, 168, 181], "sticky": [147, 168], "pinned": 147, "toc": 147, "page_str": 147, "creativecommon": 147, "deed": 147, "af": 147, "programmeertaal": 147, "programmiersprach": 147, "d8": 147, "a8": 147, "a7": 147, "d9": 147, "8a": 147, "86_": 147, "ba": 147, "a9_": 147, "a9": 147, "e0": 147, "a6": 147, "a5": 147, "ast": 147, "az": 147, "proqraml": 147, "9fd": 147, "b1rma_dil": 147, "azb": 147, "8c": 147, "ul": 147, "endfor": 147, "tpl": 147, "ch\u00f4mag": 148, "incident": [148, 160, 174, 178], "aiguillag": [148, 181], "incompr\u00e9hensibl": 148, "torchon": 148, "serviet": 148, "factoriel": [148, 149, 174], "fautiv": 149, "195": [149, 164], "premmi": 149, "4037913": 149, "biodivers": [150, 151], "biodiversite_tri2": [150, 151], "boul": [150, 151], "empil": [150, 151, 168, 181], "pyramide_num2": 151, "scatter_demo": 151, "rgb": 151, "typiqu": [152, 164], "oeuvr": 152, "litt\u00e9rair": 152, "m\u00e9langent": 152, "\u00e9tiquet": 152, "read_fil": [152, 153], "conclur": [152, 175], "admetton": 152, "disposon": 152, "infaillibl": 152, "dup": 152, "d\u00e9licat": 153, "read_file_enc": 153, "enc": [153, 172], "corbeau": 153, "bec": 153, "fromag": [153, 160], "ma\u00eetr": 153, "renard": 153, "odeur": [153, 160], "allech": 153, "Lui": 153, "visibl": [153, 168, 176], "souhaiton": 153, "\u00ee": 153, "histogram2": 153, "pourrion": 153, "007751937984496124": 153, "06976744186046512": 153, "17829457364341086": 153, "03875968992248062": 153, "031007751937984496": 153, "08527131782945736": 153, "023255813953488372": 153, "10077519379844961": 153, "07751937984496124": 153, "05426356589147287": 153, "015503875968992248": 153, "0067247820672478205": 153, "007575757575757576": 153, "007012142979305627": 153, "02588801926550271": 153, "004853022739877981": 153, "010752688172043012": 153, "007556675062972292": 153, "010554089709762533": 153, "029830508474576273": 153, "01349112426035503": 153, "005625270445694505": 153, "005441436539246361": 153, "00224408769204212": 153, "009715025906735751": 153, "0051919661155895615": 153, "00016849199663016007": 153, "010804020100502512": 153, "007139797229758675": 153, "0021551724137931034": 153, "0055272108843537416": 153, "0014691478942213516": 153, "004875076173065204": 153, "0044822949350067235": 153, "007034547444114429": 153, "0020463847203274215": 153, "0034299968818210166": 153, "008162299639202697": 153, "00572041473006793": 153, "005029013539651838": 153, "030130034887408817": 153, "031933508311461065": 153, "02547634339541854": 153, "03934426229508197": 153, "035542582417582416": 153, "030610255410411385": 153, "04194094414143314": 153, "03151779230210603": 153, "03840526700804682": 153, "lemond": 153, "journal": 153, "lem": 153, "text_other": 153, "ha": 153, "wrap": 153, "nplusieur": 154, "anything": 154, "trou": 154, "sloan": 154, "obtent": [154, 163, 175], "list1": 154, "list2": 154, "alourd": 154, "interrupt": 154, "d\u00e9nou": 154, "sybillin": 154, "lesqueel": 154, "experim": 154, "curieux": 155, "log2": 155, "456217": 155, "931568569324174": 155, "134146": 155, "166639": 155, "922092": 155, "728522": 155, "162931": 155, "741312": 155, "195045": 155, "642304": 155, "685730": 155, "d\u00e9tien": 160, "banqui": 160, "d\u00e9tenu": 160, "rectifi": 160, "intern": [160, 177], "forment": 160, "pr\u00e9d\u00e9fin": [160, 164, 181, 183], "transposit": 160, "exhaust": [160, 168, 174, 175, 176], "instanti": 160, "classe_vid": 160, "run_python_script_139986789729472": [], "run_python_script_139986788060928": [], "ob\u00e9it": [160, 163, 174], "imit": 160, "methode1": 160, "397204094": 160, "2147483647": 160, "nb2": 160, "pourvu": 160, "run_python_script_139986789853120": [], "d\u00e9couvrent": 160, "progressivent": 160, "classe2": 160, "classe1": 160, "autonom": [160, 168], "destructeur": 160, "destruct": [160, 168], "__del__": 160, "r\u00e9initialisent": 160, "__module__": 160, "chapitr": [160, 163, 168, 169, 174, 175, 176, 178, 181], "__bases__": 160, "run_python_script_139986788810496": [], "__weakref__": [160, 168, 178], "weak": [160, 168, 178], "pydoc": 160, "essai_class": 160, "__delattr__": 160, "__dir__": 160, "__eq__": [101, 102, 160], "__format__": 160, "__ge__": 160, "__gt__": 160, "__hash__": [160, 175], "__init_subclass__": 160, "__le__": 160, "__ne__": 160, "__new__": 160, "__reduce__": 160, "__reduce_ex__": 160, "__sizeof__": 160, "__subclasshook__": 160, "ensemble_el": 160, "nouvelle_cl": 160, "run_python_script_139986789849280": [], "nombre_complex": 160, "get_modul": 160, "instar": [160, 174, 175, 183], "dor\u00e9nav": [160, 163, 174], "__iadd__": 160, "\u00e9toff": 160, "attard": 160, "__getitem__": 160, "__setitem__": 160, "point_espac": [160, 163], "l\u00e8vent": 160, "_z": 160, "run_python_script_139986787580928": [], "arr\u00eatent": 160, "cmp": [160, 174], "__contains__": 160, "__len__": 160, "__abs__": 160, "lev": 160, "__delitem__": 160, "__int__": 160, "__float__": 160, "__complex__": 160, "__div__": 160, "__mul__": 160, "__sub__": 160, "__pow__": 160, "__lshift__": 160, "__idiv__": 160, "__imul__": 160, "__isub__": 160, "__ipow__": 160, "__ilshift__": 160, "__irshift__": 160, "exsit": 160, "moder": 160, "rightsid": 160, "leftsid": 160, "LS": 160, "__radd__": 160, "__rlshift__": 160, "__iter__": [160, 163], "visit": [160, 174, 181], "__next__": 160, "stopiter": [160, 163, 174], "class_it": [160, 163], "_in": [160, 163], "_n": [160, 163], "affichent": 160, "ck": 160, "isntanc": 160, "incremente_rnd": 160, "classmethod": 160, "meth3": 160, "meth4": 160, "essai_cl": 160, "meth2": 160, "croir": 160, "pseudo": [160, 174], "d\u00e9truir": [160, 164, 168], "imaginair": 160, "conj": 160, "conjugu": 160, "set_modul": 160, "get_argu": 160, "set_argu": 160, "get_conjugu": 160, "866025": 160, "0471975512": 160, "09439510239": 160, "0471975511965976": 160, "0943951023931953": 160, "descend": 160, "nom_copy": 160, "nom_inst": 160, "creationdestruct": 160, "d\u00e9truit": [160, 163, 164, 168], "classe_inclus": 160, "attr": 160, "re\u00e7oiv": [160, 168], "fonction_l": 160, "attribu": [160, 174, 175], "garbag": [160, 163, 164, 178, 181], "collector": [160, 163, 164, 178, 181], "__deepcopy__": 160, "memo": [160, 164], "objet1": 160, "objet2": 160, "o3": 160, "pointent": 160, "rencontrent": 160, "circulair": [160, 176], "r\u00e9solvent": 160, "artific": 160, "soupl": [160, 168, 175], "gag": 160, "t3": 160, "785401300000558": [], "6901625999998942": [], "7032609999996566": [], "atribut": 160, "pil": [160, 163, 165, 181], "cent_tirag": 160, "truqu": 160, "reproduit": [160, 174], "piece_normal": 160, "piece_truque": 160, "devion": 160, "redevient": 160, "piece_tres_truque": 160, "alter": [160, 175, 178], "resolu": [160, 163], "inherited": 160, "rubriqu": 160, "ira": 160, "run_python_script_139986787957184": [], "h\u00e9ritent": 160, "offrait": 160, "appellent": [160, 181], "ancetr": 160, "h\u00e9riti": 160, "aver": [160, 174, 175], "dilemm": 160, "cub": 160, "repren": [160, 168], "fonction_somme_list": 160, "fonction_somme_dict": 160, "fonction_somm": 160, "undeuxtrois": 160, "incorpor": [160, 174], "indentationerror": [160, 163, 174], "unindent": [160, 174], "confond": [160, 174], "seilf": 160, "decoup": 160, "gruyer": 160, "fr2": 160, "fr3": 160, "g3": 160, "8333333333333334": 160, "61538461538461": 160, "76923076923077": 160, "7923076923076924": 160, "get_lin": 160, "get_col": 160, "get_submat": 160, "set_submat": 160, "matricelist": 160, "matricedict": 160, "produitclass": 160, "produitstrassen": 160, "architectur": [160, 172], "pattern": [43, 160, 168, 183], "facilit": [160, 181], "statiqu": 161, "lanag": 162, "deux_entiers_somm": 162, "deux_entiers_multipl": 162, "pr\u00e3": 162, "deux_enti": 162, "deuxenti": 162, "accroch": [100, 162, 181], "plu": 162, "disparit": [162, 168], "\u00e3": 162, "taient": 162, "m\u00e3\u00aame": 162, "deuxentiersmodif": 162, "anodin": 162, "run_python_script_139986790844416": [], "baseexcept": 163, "run_python_script_139986787314496": [], "produisent": [163, 181], "pr\u00e9voit": [163, 168], "dirig": [163, 168], "intercept": [163, 164, 168, 174, 175], "48606594010979": 163, "0822096637057887j": 163, "accol": 163, "surviennent": [163, 166, 172], "orthograph": [163, 183], "inexist": [163, 168], "importerror": [163, 168], "inappropri": 163, "oserror": 163, "unicodeerror": 163, "arithmeticerror": 163, "standarderror": 163, "was": [163, 164], "d\u00e9rivent": 163, "davantag": [163, 175], "repr": [163, 168, 174], "racine_carre": 163, "run_python_script_139986790411136": [], "interrompt": 163, "momentan": 163, "ouvert": [163, 176], "closed": 163, "intervenu": 163, "pr\u00e9mun": 163, "manager": 163, "premi\u00e8rel": 164, "demeur": [164, 174], "foncb": 164, "foncc": 164, "format_stack": 164, "runpy": 164, "_run_module_as_main": 164, "_run_cod": 164, "main_global": 164, "run_global": 164, "systemex": 164, "326": 164, "build_main": 164, "argv": 164, "app": 164, "force_all": 164, "build_updat": 164, "builder": 164, "to_build": 164, "310": 164, "updated_docnam": 164, "417": 164, "_read_serial": 164, "docnam": 164, "438": 164, "read_doc": 164, "reader": 164, "parser": 164, "statemachin": 164, "inputlin": 164, "rst": [164, 176], "statemachinew": 164, "input_lin": 164, "input_offset": 164, "next_stat": 164, "check_lin": 164, "3024": 164, "lstrip": 164, "new_subsect": 164, "newabsoffset": 164, "nested_pars": 164, "state_machin": 164, "block": [164, 174], "2785": 164, "underlin": [164, 168], "2355": 164, "explicit_markup": 164, "nodelist": 164, "blank_finish": 164, "explicit_construct": 164, "2367": 164, "expmatch": 164, "2104": 164, "run_direct": 164, "2154": 164, "directive_inst": 164, "run_python_script": 164, "run_python_script_139986791981312": [], "raise_except": 164, "insidef": 164, "exc_typ": 164, "exc_valu": 164, "exc_traceback": 164, "exc_info": 164, "format_tb": 164, "run_python_script_139986791977280": [], "extract_tb": 164, "pr\u00e9cieux": 164, "flask": [164, 180], "excellent": [164, 168], "product": 164, "run_python_script_139986793117056": [], "run_python_script_139986793060800": [], "run_python_script_139986791875328": [], "fautif": 164, "file_to_read": 164, "filenotfounderror": [164, 183], "download_content": 164, "read_fromf_fil": 164, "unicodeencodeerror": 164, "\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9": 164, "\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0": 164, "run_python_script_139986791939904": [], "codec": 164, "ascii_decod": 164, "unicodedecodeerror": 164, "0xc3": 164, "ordinal": 164, "soup\u00e7on": 166, "deprecationwarning": 166, "subsist": 166, "expos": [166, 168], "agac": 166, "fxn": 166, "deprecated": 166, "catch_warning": 166, "simplefilt": 166, "monwarning": 166, "mass": [166, 176], "activ": [166, 168, 181], "d\u00e9bugg": [166, 181], "attaqu": 166, "tkint": [167, 174, 178, 181], "disposit": [167, 176, 178, 181], "convivial": 168, "demandent": 168, "clavi": [168, 174], "clic": [168, 181], "sour": [168, 181], "wxpython": 168, "rich": 168, "pyqt5": 168, "pyqt4": 168, "verion": 168, "jol": 168, "licenc": 168, "graphical": 168, "forum": 168, "discuss": 168, "stackoverflow": 168, "named": 168, "sudo": [42, 168], "tk": [168, 174, 181], "troubl": 168, "Du": 168, "entrem\u00eal": [168, 181], "widget": 168, "pilotent": 168, "contr\u00f4lent": 168, "zone_text": 168, "enrob": 168, "mainloop": [168, 174, 181], "doiv": 168, "config": [40, 42, 168, 181], "gris": [168, 178], "button": [168, 174, 181], "interdir": [168, 176, 181], "gif": 168, "photoimag": 168, "chameau": 168, "entry": [168, 174], "delet": [40, 168], "pos1": 168, "pos2": 168, "differ": 168, "nsecond": 168, "checkbutton": 168, "intvar": 168, "radiobutton": 168, "d\u00e9coch": 168, "deselect": 168, "semblabl": [168, 175, 183], "case1": 168, "case2": 168, "case3": 168, "agiront": 168, "intitul": 168, "listbox": 168, "cliqu": [168, 181], "select_set": 168, "select_clear": 168, "curselect": 168, "indextkk": 168, "adjoindr": [168, 181], "fram": 168, "parent": [101, 168, 178], "scrollbar": 168, "yscrollcommand": 168, "yview": 168, "sid": [168, 174], "tix": 168, "exportselect": 168, "itemconfig": 168, "ttk": 168, "print_fil": 168, "canv": 168, "pixel": 168, "create_lin": 168, "create_rectangl": 168, "create_text": 168, "b\u00e9zi": 168, "assis": 168, "smooth": 168, "gray": 168, "polic": 168, "arial": 168, "arborent": 168, "cnf": 168, "kw": 168, "unbound": 168, "specified": 168, "keyword": [168, 174], "allowed": 168, "activebackground": 168, "activeforeground": 168, "anchor": 168, "background": 168, "bitmap": 168, "borderwidth": 168, "cursor": 168, "disabledforeground": 168, "foreground": 168, "highlightbackground": 168, "highlightcolor": 168, "highlightthickness": 168, "justify": 168, "padx": 168, "pady": 168, "relief": 168, "repeatdelay": 168, "repeatinterval": 168, "takefocus": 168, "textvari": 168, "wraplength": 168, "specific": 168, "compound": 168, "overrelief": 168, "souci": 168, "attendus": 168, "both": 168, "pack_forget": 168, "r\u00e9appara\u00eetr": 168, "re\u00e7u": [168, 174, 176], "columnspan": 168, "rowspan": 168, "grid_forget": 168, "place_forget": 168, "d\u00e9crivent": [168, 174], "focus_set": 168, "pointill": 168, "change_legend": 168, "augmentent": 168, "attach": [168, 174, 176, 181, 183], "mouv": 168, "muet": 168, "ctrl": 168, "alt": 168, "suppr": 168, "keysym": 168, "x_root": 168, "y_root": 168, "occur": 168, "keypress": 168, "keyreleas": 168, "keyboard": 168, "buttonpress": 168, "buttonreleas": 168, "motion": 168, "enter": 168, "leav": [100, 168, 178], "mousewheel": 168, "mous": 168, "visibility": 168, "unmap": 168, "focusin": 168, "focusout": 168, "circulat": 168, "gravity": 168, "reparent": 168, "destroy": [168, 174], "activat": 168, "deactivat": 168, "callback": 168, "registered": 168, "bind": [168, 181], "bind_all": 168, "bind_class": 168, "tag_bind": 168, "brac": 168, "serial": 168, "pressed": 168, "exposed": 168, "keycod": 168, "occurred": 168, "screen": 168, "send_event": 168, "keysym_num": 168, "mov": 168, "curseur": 168, "mod2": 168, "mod3": 168, "mod4": 168, "m4": 168, "button1": 168, "mod5": 168, "button2": 168, "button3": 168, "button4": 168, "b4": 168, "button5": 168, "b5": 168, "mod1": 168, "pressing": 168, "omitted": 168, "virtual": 168, "astring": 168, "arbitrary": 168, "event_generat": [168, 181], "appear": 168, "shortly": 168, "after": 168, "invoked": 168, "specif": [168, 174], "additionally": 168, "unbind": 168, "leak": 168, "returned": 168, "affiche_touche_presse": 168, "evt": 168, "presse": 168, "9261224": 168, "exemple_bind": 168, "python26": 168, "933": 168, "_bind": 168, "_w": 168, "_tkint": 168, "tclerror": 168, "Sa": [168, 174], "d\u00e9sact": [168, 181], "unbind_all": 168, "xsyntax": 168, "p\u00e9ripher": 168, "toplevel": 168, "add_cascad": 168, "mainmenu": 168, "msousmenu": 168, "add_command": 168, "sm1": 168, "sm2": 168, "ajoute_bouton": 168, "deiconify": 168, "geometry": 168, "iconify": 168, "ic\u00f4n": 168, "withdraw": 168, "compl\u00e8tent": 168, "progressbar": 168, "treeview": 168, "dirtre": 168, "fileselectbox": 168, "in\u00e9vit": [168, 181], "win": [168, 181], "appartiennent": 168, "simultan": [168, 174, 175, 181], "nouvelle_fenetr": 168, "sec": 168, "quit": 168, "fenetr": 168, "fileselect": 168, "get_list": 168, "isdir": [168, 176], "listf": 168, "ch": [168, 181], "lifil": 168, "lid": 168, "wm_titl": 168, "fli": 168, "update_chemin": 168, "update_list": 168, "update_sel": 168, "cget": 168, "isol": [168, 174, 176], "gestion": [168, 178], "\u00e9v\u00e9nementiel": 168, "diss\u00e9min": 168, "espion": 168, "r\u00e9activ": [168, 181], "scientif": 168, "lap": 168, "millisecond": [168, 171, 181], "after_cancel": 168, "personnifi": 168, "substitu": [168, 174], "malistbox": 168, "bg": 168, "itemconfigur": 168, "prolong": 168, "mafenetr": 168, "commande_bouton1": 168, "commande_bouton2": 168, "lab": 168, "pointeur": 168, "r\u00e9cept": 168, "consult": 168, "intervenus": 168, "offrent": [168, 175], "feront": 168, "mafenetreseq": 168, "perso": 168, "rooty": 168, "conservent": 169, "classeperson": 169, "_field": 169, "comptag": 169, "agil": 169, "flagr": 169, "append_time_list": 169, "append_time_dequ": 169, "05263450000074954": [], "042822200000045996": [], "ao\u00fbt": 171, "312000": 171, "12614": 171, "712000": 171, "000081": [], "17478": 171, "calendar": [171, 178], "itermonthdays2": 171, "timestamp": 171, "expriment": 171, "compr\u00e9hensibl": 171, "fromtimestamp": 171, "1694771738": [], "0079732": [], "domin": 172, "japon": 172, "asiat": 172, "cp1252": [172, 175], "deviendr": 172, "e\u00e9": 172, "sb": 172, "platform": [172, 178], "getdefaultencoding": 172, "getdefaultlocal": 172, "0x7f518c9095a0": [], "en_us": 172, "contr\u00f4l": [172, 176], "ordereddict": 173, "namedtupl": 173, "\u00e9l\u00e9mentair": 174, "aisanc": 174, "acquer": 174, "ruptur": 174, "combinent": 174, "nuanc": 174, "reconna\u00eetr": 174, "inconnus": 174, "iskeyword": 174, "until": 174, "kwlist": 174, "async": 174, "await": 174, "nonlocal": 174, "ajoutent": 174, "particuili": 174, "grammar": 174, "absent": 174, "affil": 174, "condition2": 174, "condition3": 174, "instruction5": 174, "instruction6": 174, "instruction7": 174, "instruction8": 174, "transcrivent": 174, "prioritair": 174, "juxtapos": [174, 175, 183], "press": [174, 181], "repons": 174, "rget": 174, "nopass": 174, "indented": 174, "scrupul": 174, "d\u00e9guis": 174, "cran": 174, "pr\u00e9matur": 174, "convertibl": 174, "run_python_script_139986801541952": [], "collag": 174, "eratosthen": 174, "d\u00e9nich": 174, "3i": 174, "ray": 174, "run_python_script_139986795763840": [], "mauv": 174, "endroitsfootnot": 174, "expert": 174, "morceau": [174, 175, 183], "coordonnees_polair": 174, "tangent": 174, "414214": 174, "118034": 174, "434949": 174, "565051": 174, "commander_carte_orang": 174, "chequ": 174, "problem_zon": 174, "surpren": 174, "retor": 174, "valeur_": 174, "param_": 174, "identit": 174, "portent": 174, "run_python_script_139986797996096": [], "required": 174, "positional": 174, "ndigit": 174, "floating": 174, "digit": 174, "may": [40, 174], "negat": 174, "pho": 174, "r\u00e9percuss": 174, "r\u00e9percut": 174, "somme_n_premier_term": 174, "statut": 174, "ininterrompu": 174, "fact": 174, "factorielle_non_recurs": 174, "run_python_script_139986794201920": [], "portee_vari": 174, "run_python_script_139986794588992": [], "opposit": 174, "locale_global": 174, "affiche_pair": 174, "fonction_local": 174, "run_python_script_139986796630016": [], "ind\u00e9termin": 174, "liste_valeur_1": 174, "liste_valeur_p": 174, "nom_1": 174, "nom_q": 174, "v_q": 174, "n\u00e9cess": 174, "nom_fonct": 174, "reprendr": 174, "fonction_yield": 174, "run_python_script_139986796177344": [], "4142135623730951": 174, "78539816339744828": 174, "7853981633974483": 174, "agreg": 174, "synonym": 174, "perl": 174, "est_pair": 174, "0x7f5137c146d0": [], "issubclass": 174, "varient": 175, "typag": 175, "desquel": 175, "sc": 175, "suivront": [175, 176], "maint": 175, "repris": 175, "privileg": 175, "\u00e9num": 175, "impossibil": 175, "expliquent": 175, "comprennent": 175, "opertor": 175, "zz": 175, "guillemet": 175, "interchange": 175, "1morceau": 175, "commod": 175, "recoll": 175, "pourcentag": 175, "usit": 175, "lexical": 175, "567": 175, "ed": 175, "med": 175, "eniem": 175, "endswith": 175, "printf": 175, "formatting": 175, "concis": 175, "transcrit": 175, "abra": 175, "cad": 175, "abracadabr": 175, "coordinat": 175, "24n": 175, "81w": 175, "coord": 175, "centered": 175, "aleft": 175, "alignedb": 175, "oct": 175, "1234567890": 175, "101010": 175, "0x2a": 175, "0o52": 175, "0b101010": 175, "indroduit": 175, "excentr": 175, "notabl": 175, "formattag": 175, "run_python_script_139986620353472": [], "1j": 175, "2j": 175, "fromhex": 175, "2ef0": 175, "f1f2": 175, "xf0": 175, "xf1": 175, "xf2": 175, "sigl": 175, "soupless": 175, "compare_key": 175, "run_python_script_139986450028032": [], "verron": 175, "dison": 175, "ensemb": 175, "litt\u00e9ral": 175, "juxtaposit": 175, "0x7f5136892480": [], "l3": 175, "surprendr": 175, "1111": 175, "dress": 175, "dinv": 175, "parcout": 175, "dicionnair": 175, "cledict": 175, "0x0120db90": 175, "18930576": 175, "0x120db90": 175, "hexad\u00e9cimal": 175, "n\u00e9cessitent": [175, 178], "donnent": 175, "st\u00e9thoscop": 175, "5555555555555554": 175, "__wd__": 175, "__builtins__": [175, 178], "reviendr": 175, "divmod": 175, "transpara\u00eetr": 175, "traduir": 175, "influenc": 175, "concepteur": 176, "puissent": 176, "textuel": 176, "reportlab": 176, "allong": [176, 178], "perturb": 176, "separated": 176, "ppend": 176, "ead": 176, "tampon": 176, "flush": 176, "technolog": [176, 181], "diverg": 176, "d\u00e9coupag": 176, "d\u00e9cryptent": 176, "relu": 176, "acaracter": 176, "r\u00e9pandus": 176, "exemplezip": 176, "fz": 176, "infolist": 176, "date_tim": 176, "file_siz": 176, "testzip": 176, "zip_deflated": 176, "zip_stored": 176, "nom_fichier_dans_zip": 176, "joint": 176, "couron": 176, "succes": 176, "spammeur": 176, "smtplib": 176, "mim": 176, "multipart": 176, "mimemultipart": 176, "mimebas": 176, "mimetext": 176, "formatdat": 176, "envoyer_mail": 176, "aqui": 176, "msg": 176, "localtim": 176, "set_payload": 176, "encode_base64": 176, "add_head": 176, "attachment": 176, "basenam": 176, "smtp": 176, "gmail": 176, "ehlo": 176, "starttl": 176, "login": 176, "mot_de_p": 176, "sendmail": 176, "as_string": 176, "destinatair": 176, "manuel": 176, "centain": 176, "journ": 176, "r\u00e9organis": 176, "musical": 176, "compl\u00e9mentair": 176, "mutagen": [176, 183], "famili": 176, "osx": 176, "d\u00e9bouchent": 176, "abspath": 176, "commonprefix": 176, "getatim": 176, "getmtim": 176, "getctim": 176, "getsiz": 176, "isab": 176, "isfil": 176, "splitext": 176, "chdir": 176, "mkdir": 176, "makedir": 176, "repfinal": 176, "renam": 176, "rmdir": 176, "liste_fichier_repertoir": 176, "ob\u00e9iss": 176, "rep": 176, "fo": 176, "gitignor": 176, "gitattribut": 176, "appveyor": 176, "yml": 176, "_latex": 176, "ruff_cach": 176, "temp_notebook": 176, "circlec": 176, "jug": 176, "relir": 176, "judici": 176, "rawiobas": 176, "affili": 176, "quinz": 176, "soul\u00e8vent": 176, "modil": 176, "1415692": 176, "fb": 176, "sauvegard": 176, "abcdedf": 176, "chain": 176, "calcule_norm": 176, "dic": 176, "830951894845301": 176, "nom_modul": 178, "diff\u00e9renc": 178, "pyc": 178, "traduct": 178, "bytecod": 178, "exemple_class": 178, "__import__": 178, "nom_module_sans_extens": 178, "absolus": 178, "python36_x64": 178, "exe": 178, "__all__": 178, "inh\u00e9rent": 178, "posix": 178, "depending": 178, "unlink": 178, "eith": 178, "posixpath": 178, "ntpath": 178, "curd": 178, "representing": 178, "pard": 178, "pathnam": 178, "separator": 178, "extsep": 178, "altsep": 178, "alternat": 178, "pathsep": 178, "linesep": 178, "defpath": 178, "execut": [43, 178], "devnull": 178, "devic": 178, "program": 178, "stand": 178, "opend": 178, "module1": 178, "module2": 178, "_frozen_importlib": 178, "frozen": 178, "_imp": 178, "_thread": 178, "_warning": 178, "_weakref": 178, "python_cour": 178, "englob": 178, "mesmodul": 178, "part1": 178, "niveaud": 178, "part2": 178, "niveaudeuxb": 178, "subpackage1": 178, "modulex": 178, "subpackage2": 178, "moduley": 178, "pr\u00e9install": 178, "fur": [178, 183], "asyncio": [178, 180], "socket": 178, "cgi": 178, "cmath": 178, "gc": [178, 181], "getopt": 178, "htmllib": 178, "pathlib": 178, "sqlite3": 178, "gestionnair": 178, "threading": [178, 181], "dom": 178, "infegal": 178, "esp": 178, "141964": [], "carlo": 178, "integrale_monte_carlo": 178, "6664643080133164": [], "simpliqu": 178, "interfa\u00e7ag": 178, "h\u00e9bergent": 178, "maintenus": 178, "ponctuel": 178, "ambiti": 178, "tensorflow": 178, "setup": 178, "apppliqu": 179, "run_python_script_139986778962560": [], "0x7f513639add0": [], "ultrajson": 179, "restaur": 179, "crucial": 179, "d\u00e9chiffr": 179, "librar": 179, "multithreading": 180, "bibliograph": 180, "gevent": 180, "uvloop": 180, "blazing": 180, "networking": 180, "sanic": 180, "cython": 180, "openmp": [180, 181], "2004": 181, "microprocesseur": 181, "transistor": 181, "multicoeur": 181, "disjoint": 181, "entam": 181, "processus": 181, "achev": 181, "asynchron": 181, "communiquent": 181, "synchronisent": 181, "monthread": 181, "proviennent": 181, "exager": 181, "etat": 181, "temporis": 181, "ojet": 181, "diziem": 181, "ind\u00e9fin": 181, "is_set": 181, "dixiem": 181, "verrous": 181, "indexfrr": 181, "veulent": 181, "11111111112222222222": 181, "acquir": 181, "entrem\u00ealent": 181, "sien": 181, "b\u00e2t": 181, "thread_fin": 181, "thread_resultat": 181, "lance_thread": 181, "legnd": 181, "text2": 181, "thread_fini_fonct": 181, "transit": [13, 98, 181], "concernent": 181, "envoient": 181, "put": 181, "\u00e9tranger": 181, "get_now": 181, "put_now": 181, "qsiz": 181, "chevauchent": 181, "soumettr": 181, "subm": 181, "max_work": 181, "prim": 181, "112272535095293": 181, "112582705942171": 181, "115280095190773": 181, "115797848077099": 181, "1099726899285419": 181, "sqrt_n": 181, "ind\u00e9chiffr": 181, "logg": 181, "logger": 181, "get_logg": 181, "getlogg": 181, "setlevel": 181, "asctim": 181, "threadnam": 181, "levelnam": 181, "streamhandl": 181, "stdout": 181, "setformatt": 181, "addhandl": 181, "fh": 181, "filehandl": 181, "current_thread": 181, "end1": 181, "end2": 181, "end3": 181, "thread_0": 181, "thread_1": 181, "515": [], "322": [], "328": [], "promess": 181, "bient\u00f4t": 181, "as_completed": 181, "compliquent": 181, "parallel_numpy_dot": 181, "vb": 181, "06460040965832": [], "distribute_sum": 181, "inlass": 181, "enclench": 181, "distrinct": 181, "d\u00e9velopeur": 181, "multithread": 181, "nogil": 181, "parallelism": 181, "parallelizing": 181, "interp\u00e9teur": 181, "pythonnet": 181, "py4j": 181, "pyjnius": 181, "nuir": 181, "pluriel": 183, "singuli": 183, "formulair": 183, "1913": 183, "1978": 183, "1914": 183, "1941": 183, "1980": 183, "int\u00e9resson": 183, "r\u00e9pondent": 183, "0123456789": 183, "z0": 183, "taxinom": 183, "tax": 183, "quadrupl": 183, "vba": 183, "vbatd1_4": 183, "absenc": 183, "suspens": 183, "yoyo": 183, "dupont": 183, "tc": 183, "repl": 183, "valident": 183, "flag": 183, "chanson": 183, "track03": 183, "track": 183, "audiotrack": 183, "pist": 183, "audiop": 183, "audio": 183, "heart": 183, "heartland": 183, "heartach": 183, "ache": 183, "easyid3": 183, "infomp3": 183, "tag": [40, 183], "all_fil": 183, "repertoir": 183, "heart_notitle_mot": 183, "liheart": 183, "notitl": 183, "nbmot": 183, "nbsong": 183, "album": 183, "tracknumb": 183, "moymot": 183, "nom_du_group": 183, "groupdict": 183, "trouve_toute_fonct": 183, "expm": 183, "get_function_list_definit": 183, "ndef": 183, "z_": 183, "z_0": 183, "get_function_list_call": 183, "detection_fonction_pas_appele": 183, "sfil": 183, "funcdef": 183, "funccal": 183, "fonction_inutil": 183, "errno": 183, "nbl": [], "title2": [], "61155": [], "61151": [], "81204": [], "11048": [], "11047": [], "70155": [], "20044": [], "20043": [], "50108": [], "81194": [], "run_python_script_139790434528256": 44, "0x7f2397449d20": 44, "run_python_script_139790439231360": 160, "run_python_script_139790824496064": 160, "run_python_script_139790824492096": 160, "run_python_script_139790827215360": 160, "run_python_script_139790815204096": 160, "run_python_script_139790814825088": 160, "425443400000404": 160, "882326799999646": 160, "8523537999999462": 160, "run_python_script_139790808247680": 160, "run_python_script_139790762984000": 163, "run_python_script_139790729949760": 163, "run_python_script_139790762541696": 163, "run_python_script_139790764159936": 164, "run_python_script_139790762644608": 164, "run_python_script_139790761486464": 164, "run_python_script_139790765229312": 164, "run_python_script_139790765136896": 164, "run_python_script_139790764137216": 164, "04626930000085849": 169, "046163399999386456": 169, "376500": 171, "1694773424": 171, "3852384": 171, "0x7f23af8255a0": 172, "run_python_script_139790771044928": 174, "run_python_script_139790774741248": 174, "run_python_script_139790771996544": 174, "run_python_script_139790773971072": 174, "run_python_script_139790773826368": 174, "run_python_script_139790774231296": 174, "run_python_script_139790726141376": 174, "0x7f239535fb80": 174, "run_python_script_139790821887168": 175, "run_python_script_139790826146304": 175, "0x7f2395e22500": 175, "142168": 178, "6669828348425172": 178, "run_python_script_139790780218176": 179, "0x7f239552d120": 179, "760": 181, "639": 181, "554": 181, "765": 181, "728": 181, "664": 181, "939": 181, "05499599590244": 181, "test_compos": 101, "__matmul__": 101, "affair": 101, "go\u00fbt": 101, "decompos": 101, "applique_decomposition_identit": 101, "test_decompose1": 101, "test_decompose2": 101, "considered": 101, "textwrap": [100, 102], "profondeur_maximal": [100, 102], "pleft": [100, 102], "pright": [100, 102], "61100": 7, "61097": 7, "81140": 7, "11034": 7, "11033": 7, "70105": 7, "20037": 7, "20036": 7, "50067": 7, "81132": 7, "03061224": 37, "95408163": 37, "93877551": 37, "92346939": 37, "8877551": 37, "83163265": 37, "7755102": 37, "71938776": 37, "range_lik": 100, "0x7f1dc597b220": 100, "\u00e9met": 100, "random_generator": 100, "15382301030555623": 100, "8963148242847391": 100, "5960121288362235": 100, "20451752514212185": 100, "8937299506306294": 100, "leave_generator": 100, "add_al": 100, "bcdefghijkl": 100, "al\u00e9aatoir": 100, "numeros": 100, "3732": 100, "04it": 100, "2136": 100, "80it": 100, "profondeur_somme_count": 102, "sleft": 102, "cleft": 102, "sright": 102, "cright": 102, "6666666666666667": 102, "manil": 38, "jenkin": [38, 41], "remote_nam": 40, "url_repo": 40, "upstream_dmlc": 40, "dmlc": 40, "xgboost": 40, "repo": 40, "branchpy": 40, "machinelearning": 40, "cscod": 40, "ish": 40, "pathspec": 40, "includ": 40, "predictor": 40, "new_branch": 40, "upstream": 40, "localpath": 40, "hard": 40, "foreach": 40, "anoth": [40, 43], "mad": 40, "fetch": 40, "banch": 40, "insid": 40, "sync": 40, "assuming": 40, "reposity": 40, "ongoing": 40, "away": 40, "retain": 40, "seem": 40, "renamed": 40, "renaming": 40, "own": 40, "moved": 40, "tagged": 40, "declar": 40, "onnx": 40, "extended": 40, "sparsecheckout": 40, "echo": [40, 42, 43], "_unittest": 40, "pyproject": 40, "toml": 40, "cominf": 40, "stor": [40, 43], "onnx_extended": [40, 43], "thistag": 40, "openjdk": 42, "jdk": 42, "wget": 42, "pkg": [42, 43], "sh": [42, 43], "deb": 42, "purg": [42, 43], "nano": 42, "chown": 42, "consol": 42, "collapsing": 42, "usesecurity": 42, "security": 42, "ls": 43, "cd": 43, "autoremov": 43, "aptitud": 43, "dpkg": 43, "xarg": 43, "files0": 43, "sed": 43, "rn": 43, "causing": 43, "mtim": 43, "fuser": 43, "ncdu": 43, "sfdisk": 43, "lht": 43, "human": 43, "readabl": 43, "shc": 43, "heavy": 43, "folder": 43, "rh": 43, "kill": 43, "pid": 43, "eo": 43, "envvar": 43, "noteook": 48, "remuner": 156, "renumer": 156, "distance_1": 156, "test_distance_1": 156, "fdist": 156, "remunner": 156, "distance_n": 156, "test_distance_n": 156, "iji": 156, "distance_levenstein": 156, "distance_levenstein_alignment": 156, "remunereer": 156, "rennnumer": 156, "munereer": 156, "rennnum": 156, "e\u00e9\u00eae": 156, "distance_levenstein_alignment_accent": 156, "r\u00e9munner": 156, "r\u00e9mu": 156, "ner": 156, "renuumer": 156, "eye": 158, "test_pivot_gauss": 158}, "objects": {"teachpyx.examples": [[2, 0, 0, "-", "classiques"], [2, 0, 0, "-", "construction_classique"], [5, 0, 0, "-", "numpysex"]], "teachpyx.examples.classiques": [[2, 1, 1, "", "commentaire_accentues"], [2, 1, 1, "", "dictionnaire_modifie_dans_la_boucle"], [2, 1, 1, "", "dix_entiers_carre"], [2, 1, 1, "", "repetition_a_eviter"], [2, 1, 1, "", "str2date"]], "teachpyx.examples.construction_classique": [[2, 1, 1, "", "compte"], [2, 1, 1, "", "construit_matrice_carree"], [2, 1, 1, "", "enumerate_permutations"], [2, 1, 1, "", "enumerate_permutations_recursive"], [2, 1, 1, "", "integrale"], [2, 1, 1, "", "mat2text"], [2, 1, 1, "", "mat2vect"], [2, 1, 1, "", "minindex"], [2, 1, 1, "", "recherche"], [2, 1, 1, "", "recherche_dichotomique"], [2, 1, 1, "", "somme"], [2, 1, 1, "", "text2mat"], [2, 1, 1, "", "triindex"], [2, 1, 1, "", "vect2mat"]], "teachpyx.examples.numpysex": [[5, 1, 1, "", "numpy_matrix2list"], [5, 1, 1, "", "numpy_types"]], "teachpyx.faq": [[3, 0, 0, "-", "faq_exception"], [3, 0, 0, "-", "faq_numpy"], [3, 0, 0, "-", "faq_python"]], "teachpyx.faq.faq_exception": [[3, 1, 1, "", "call_stack"]], "teachpyx.faq.faq_numpy": [[3, 1, 1, "", "to_float32"]], "teachpyx.faq.faq_python": [[3, 2, 1, "", "Distribution"], [3, 3, 1, "", "PQPipError"], [3, 1, 1, "", "class_getitem"], [3, 1, 1, "", "difference_div"], [3, 1, 1, "", "entier_grande_taille"], [3, 1, 1, "", "enumerate_regex_search"], [3, 1, 1, "", "get_day_name"], [3, 1, 1, "", "get_installed_distributions"], [3, 1, 1, "", "get_month_name"], [3, 1, 1, "", "get_package_info"], [3, 1, 1, "", "get_packages_list"], [3, 1, 1, "", "information_about_package"], [3, 1, 1, "", "list_of_installed_packages"], [3, 1, 1, "", "property_example"], [3, 1, 1, "", "python_path"], [3, 1, 1, "", "same_variable"], [3, 1, 1, "", "sortable_class"], [3, 1, 1, "", "stringio"]], "teachpyx.practice": [[6, 0, 0, "-", "rues_paris"]], "teachpyx.practice.rues_paris": [[6, 1, 1, "", "bellman"], [6, 1, 1, "", "connected_components"], [6, 1, 1, "", "distance_haversine"], [6, 1, 1, "", "distance_paris"], [6, 1, 1, "", "euler_path"], [6, 1, 1, "", "eulerien_extension"], [6, 1, 1, "", "get_data"], [6, 1, 1, "", "graph_degree"], [6, 1, 1, "", "kruskal"], [6, 1, 1, "", "possible_edges"]], "teachpyx.tools": [[7, 1, 1, "", "decompress_zip"], [7, 1, 1, "", "download_and_unzip"], [7, 1, 1, "", "draw_diagram"], [7, 0, 0, "-", "profiling"], [7, 1, 1, "", "total_size"]], "teachpyx.tools.profiling": [[7, 2, 1, "", "ProfileNode"], [7, 1, 1, "", "profile"], [7, 1, 1, "", "profile2df"], [7, 1, 1, "", "profile2graph"]], "teachpyx.tools.profiling.ProfileNode": [[7, 4, 1, "", "add_called_by"], [7, 4, 1, "", "add_calls_to"], [7, 4, 1, "", "as_dict"], [7, 4, 1, "", "filter_node_"], [7, 4, 1, "", "get_root"], [7, 5, 1, "", "key"], [7, 4, 1, "", "to_json"], [7, 4, 1, "", "to_text"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:exception", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python fonction"], "2": ["py", "class", "Python classe"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python m\u00e9thode"], "5": ["py", "property", "Python propri\u00e9t\u00e9"]}, "titleterms": {"chang": [0, 101, 117, 124], "log": 0, "0": [0, 103], "3": [0, 8, 13, 33, 34, 45, 54, 62, 63, 74, 80, 81, 82, 92, 94, 101, 103, 111, 112, 117, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 154, 155, 178], "1": [0, 8, 13, 33, 34, 45, 54, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 95, 103, 111, 112, 116, 117, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 154, 160, 174, 178], "survol": 1, "algorithm": [1, 27, 49, 51, 52, 53, 55, 57, 63, 69, 95, 96, 98, 106, 115, 130, 132, 133, 134, 135, 156, 174], "ordre": [1, 53, 57, 64, 174], "grandeur": 1, "comprendr": 1, "co\u00fbt": [1, 27, 85, 86, 92, 95, 105, 115, 140, 156], "mot": [1, 44, 55, 56, 62, 112, 140, 156], "cl\u00e9": [1, 44, 140, 175], "catalogu": 1, "problem": [1, 16, 45, 51, 54, 57, 61, 64, 68, 69, 96, 103, 132, 133, 150, 151, 181], "np": [1, 96], "complet": [1, 96, 103, 137, 183], "id\u00e9": [1, 61, 62, 135, 150, 151], "d\u00e9monstr": [1, 84], "lien": [1, 36], "articl": [1, 14], "livr": 1, "Pour": [1, 124], "entra\u00een": 1, "googl": 1, "recommand": 1, "exampl": [2, 5], "construction_class": 2, "teachpyx": [2, 3, 6], "classiqu": [2, 4, 66, 160, 168, 169, 170, 174], "python": [2, 44, 46, 48, 49, 51, 98, 101, 116, 146, 147, 148, 149, 160, 174, 175, 181, 184], "accept": [2, 46], "accent": [2, 46, 49, 156, 176], "modifi": [2, 44, 45, 95, 170, 174, 175], "dictionnair": [2, 8, 44, 45, 62, 66, 105, 109, 114, 122, 140, 141, 160, 170, 175], "parcour": [2, 67, 69, 96, 170], "Quelle": [2, 3, 46, 117], "diff\u00e9rent": [2, 3, 44, 46, 55, 56, 95, 156], "entre": [2, 3, 34, 44, 46, 55, 56, 95, 113], "return": [2, 44, 46, 140], "print": [2, 44, 46, 175], "calcul": [2, 19, 27, 32, 33, 35, 39, 44, 52, 53, 54, 58, 60, 64, 65, 66, 68, 92, 93, 94, 95, 111, 123, 142, 143, 152, 153, 170], "somm": [2, 58, 93, 109, 170], "dix": [2, 170], "premi": [2, 36, 60, 61, 63, 69, 102, 106, 109, 115, 133, 134, 135, 148, 149, 170, 181], "entier": [2, 126, 127, 170, 175], "carr": [2, 107, 136, 137, 170], "evit": [2, 170], "effectu": [2, 92, 170], "m\u00eam": [2, 36, 55, 56, 57, 92, 95, 115, 146, 156, 170], "appel": [2, 45, 160, 164, 170, 174], "deux": [2, 18, 55, 56, 62, 64, 87, 92, 93, 95, 117, 122, 160, 170], "fois": [2, 93, 170], "convers": [2, 17, 170, 175], "cha\u00een": [2, 26, 44, 45, 105, 170, 175], "caracter": [2, 26, 44, 45, 170, 172, 175, 183], "datetim": [2, 170, 171], "comptag": [2, 170], "fonction": [2, 4, 16, 25, 34, 35, 36, 39, 44, 45, 52, 60, 62, 63, 85, 86, 92, 93, 95, 103, 107, 111, 113, 117, 121, 125, 138, 139, 140, 141, 143, 160, 168, 170, 173, 174, 175, 183], "comm": [2, 85, 86, 170], "parametr": [2, 44, 45, 60, 61, 85, 86, 170, 174], "matric": [2, 31, 35, 53, 59, 66, 69, 87, 88, 92, 95, 103, 122, 170, 175], "vecteur": [2, 170], "minimum": [2, 170], "posit": [2, 103, 170], "recherch": [2, 44, 120, 140, 147, 154, 155, 170], "index": [2, 33, 34, 35, 36, 170], "dichotom": [2, 58, 82, 120, 154, 155, 170], "tri": [2, 8, 53, 62, 63, 85, 86, 106, 111, 125, 170], "gard": [2, 64, 170], "initial": [2, 17, 170], "faq": [3, 4, 46], "faq_python": 3, "divis": [3, 46], "Quel": [3, 46], "enti": [3, 46], "plus": [3, 28, 46, 52, 56, 57, 58, 62, 63, 65, 66, 87, 88, 92, 93, 95, 102, 113, 117, 124, 125, 128, 129, 130, 131, 136, 137, 142, 143, 154, 155, 164, 176, 181, 183], "grand": [3, 46, 52, 58, 62, 102, 128, 129], "tabul": [3, 46], "espac": [3, 46, 68, 95], "comment": [3, 46], "iter": [3, 25, 46, 91, 100, 120, 160, 163, 174], "r\u00e9sultat": [3, 46, 52, 60, 89, 90, 92, 95, 168], "express": [3, 8, 46, 68, 112, 146, 147, 182, 183], "r\u00e9guli": [3, 8, 46, 68, 112, 146, 147, 182, 183], "r\u00e9cuper": [3, 34, 36, 46, 60, 164], "nom": [3, 46, 176, 178], "jour": [3, 34, 36, 46], "part": [3, 24, 33, 40, 46, 148, 149, 154, 155], "dat": [3, 34, 46, 51, 171], "mois": [3, 46], "list": [3, 18, 19, 27, 44, 45, 46, 94, 105, 122, 140, 154, 160, 168, 174, 175, 176, 178], "modul": [3, 26, 44, 45, 46, 49, 67, 110, 117, 146, 147, 177, 178], "install": [3, 42, 46, 49], "pourquoi": [3, 46, 62, 92], "pand": [3, 8, 23, 34, 36, 46], "numpy": [3, 5, 8, 22, 32, 33, 35, 36, 37, 46, 116, 123], "march": [3, 33, 46, 60, 178], "sous": [3, 9, 46, 58, 168], "window": [3, 9, 46], "pip": [3, 46], "obten": [3, 46, 121, 163], "inform": [3, 46, 175, 181], "packag": [3, 43, 46, 49], "propriet": [3, 45, 46, 160], "\u00e9vit": [3, 46], "sy": [3, 46], "path": [3, 46], "append": [3, 46], "quand": [3, 46, 143], "d\u00e9velopp": [3, 46], "Qu": [3, 46, 138], "typ": [3, 5, 35, 36, 44, 45, 46, 160, 163, 164, 175], "immuabl": [3, 44, 45, 46, 175], "immut": [3, 45, 46, 175], "class": [3, 16, 25, 36, 44, 45, 46, 98, 99, 101, 102, 103, 104, 136, 137, 138, 139, 160, 161, 162, 163, 168], "sortabl": [3, 46], "a": [3, 17, 40, 43, 46, 92, 96, 103, 107, 183], "quoi": [3, 46, 107, 146, 183], "sert": [3, 46, 107, 146, 183], "stringio": [3, 46], "faq_except": 3, "faq_numpy": 3, "cod": [4, 10, 16, 44, 70, 78, 82, 84, 117, 140, 141], "inclus": [4, 160], "dan": [4, 44, 57, 64, 92, 95, 103, 105, 140, 146, 147, 168, 176], "librair": 4, "construct": [4, 78, 79, 94, 138, 160, 168, 169, 170, 174], "impl\u00e9ment": [4, 22, 55, 118, 126, 127, 144, 145], "exercic": [4, 19, 27, 33, 34, 48, 62, 63, 68, 71, 80, 82, 83, 84, 91, 92, 93, 95, 98, 111, 112, 117, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 154, 155], "numpysex": 5, "oper": [5, 21, 32, 33, 34, 35, 44, 45, 92, 101, 104, 105, 136, 137, 160, 174], "matrix": [5, 32, 33], "Quels": [5, 46], "support": [5, 46], "practic": 6, "rues_par": 6, "tool": 7, "decompress_zip": 7, "download_and_unzip": 7, "draw_diagram": 7, "total_siz": 7, "profiling": [7, 8, 98, 117, 118, 119], "2022": [8, 9, 14, 94, 95], "11": [8, 13, 82], "31": [8, 13], "rappel": [8, 13], "feuill": [8, 13, 34, 102], "rout": [8, 13], "s\u00e9anc": [8, 13, 71, 97, 159], "7": [8, 36, 103, 130, 131, 147, 154, 155], "9": 8, "introduct": [8, 49, 52, 168], "2": [8, 13, 33, 34, 45, 54, 59, 62, 63, 68, 72, 73, 74, 76, 77, 80, 81, 82, 83, 86, 88, 90, 91, 92, 103, 111, 112, 116, 117, 120, 122, 123, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 154, 160, 178], "14": [8, 74, 75], "programm": [8, 27, 39, 44, 45, 48, 96, 130, 131, 133, 137, 178], "dynam": [8, 34, 96, 130, 131, 133, 174], "voyageur": [8, 67], "commerc": [8, 28, 67], "21": [8, 84], "4": [8, 13, 21, 33, 34, 62, 63, 79, 80, 81, 92, 103, 112, 117, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 154, 156], "28": 8, "graph": [8, 34, 36, 53, 59, 60, 91, 96, 103], "5": [8, 13, 34, 62, 80, 103, 117, 130, 131, 146, 147, 154, 155], "10": [8, 73], "s\u00e9rialis": [8, 25, 26, 113, 179], "test": [8, 39, 44, 45, 49, 56, 64, 95, 124, 154, 155, 174], "unitair": [8, 44, 56, 95, 124], "6": [8, 34, 62, 77, 103, 130, 131, 146, 147, 154, 155], "12": [8, 9, 85, 86], "webscrapping": 8, "19": 8, "top": [8, 63], "k": [8, 63, 128, 129], "8": [8, 13, 103, 130, 131, 147], "26": [8, 72, 76, 95], "07": 9, "utilis": [9, 39, 44, 62, 63, 95, 111, 112, 117, 138, 140, 141, 162, 163, 168], "cartopy": 9, "wsl": 9, "2023": [10, 11, 12, 13, 14, 157], "08": [10, 11], "03": 10, "jam": 10, "09": [11, 12], "\u00e9nigm": [11, 16, 21], "hermion": 11, "06": 12, "ensa": 12, "collect": 14, "p\u00e9riss": 14, "galler": 15, "exempl": [15, 33, 101, 119, 160, 163, 174, 175, 176, 178, 183], "L": 16, "einstein": 16, "r\u00e9solu": 16, "permut": [16, 64, 67, 99, 101], "La": [16, 35, 36, 58, 130, 143, 151], "rul": 16, "explic": 16, "descript": 16, "float": [17, 154], "probability": 17, "float64": 17, "x": [17, 65, 88, 95, 101], "float32": 17, "interval": 17, "length": 17, "distribu": [17, 34, 35], "an": 17, "answer": 17, "to": [17, 40], "the": [17, 40], "question": [17, 81, 162], "similar": 17, "what": 17, "about": 17, "not": [17, 40, 71, 78, 79, 80, 81, 82, 83, 84], "strict": 17, "comparison": 17, "conclus": [17, 83], "Le": [18, 44, 163, 184], "gil": [18, 181], "parallel": 18, "Un": [18, 28, 52, 101, 103, 104, 105, 124, 156, 175, 178, 181], "autr": [18, 19, 44, 85, 103, 111, 117, 122, 124, 138, 146, 147, 160, 168, 171, 179], "sc\u00e9nario": 18, "hypercub": 19, "q1": [19, 24, 35, 36, 53, 55, 57, 60, 64, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 109, 110, 113, 118, 128, 129, 152, 153], "tripl": 19, "r\u00e9curs": [19, 45, 85, 86, 120, 140, 174], "q2": [19, 24, 35, 36, 53, 55, 57, 60, 64, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 109, 110, 113, 118, 128, 129, 152, 153], "comparaison": [19, 58, 174], "q3": [19, 24, 35, 36, 53, 55, 60, 64, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 109, 110, 113, 118, 128, 129, 152, 153], "pr\u00e9cis": [19, 27, 52, 142, 143], "q4": [19, 24, 35, 36, 53, 55, 60, 64, 73, 74, 75, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 109, 110, 118, 152, 153], "astuc": [20, 39, 44], "lambd": [20, 34, 44, 174], "function": [20, 34], "mathador": 21, "point": [22, 34, 45, 67, 85, 86, 92, 95, 178], "acced": 22, "\u00e9l\u00e9ment": [22, 33, 52, 63, 78, 105, 109, 140, 174], "particuli": [22, 35], "groupby": 23, "valeur": [23, 35, 36, 45, 53, 87, 88, 115, 140, 163, 174], "manqu": [23, 87, 88], "dam": 24, "json": [25, 26, 110, 113, 179], "ecritur": [25, 44, 146, 174, 176], "lectur": [25, 34, 44, 48, 146, 176], "limit": 25, "rapid": [25, 58, 62, 63, 65, 92, 113, 117, 125, 136, 137, 142, 143], "pickl": [25, 113], "Les": [25, 44, 63, 69, 130, 151, 163, 168, 174, 183], "r\u00e9duir": 25, "taill": [25, 52, 95, 124], "cas": [25, 52, 92, 95, 103, 156, 168, 175, 178], "binair": [25, 176, 179], "g\u00e9ner": [25, 33, 59, 100, 109, 156, 166, 174], "protobuf": [26, 110], "schem": 26, "compil": [26, 160, 174], "import": [26, 45, 168, 178], "cr\u00e9": [26, 34, 35, 95, 146, 168], "plusieur": [26, 34, 168, 174, 178], "expliqu": [27, 62, 84], "cop": [27, 44, 160, 175, 176], "erreur": [27, 36, 44, 60, 163, 164], "logiqu": [27, 122, 174], "h\u00e9ritag": [27, 44, 45, 103, 138, 139, 160, 163], "doubl": 27, "r\u00e9flex": 28, "autour": [28, 160], "voyag": 28, "tsp": [28, 64], "Des": [28, 39, 44, 124], "vill": [28, 64], "tir": [28, 64, 67, 95], "hasard": [28, 123], "crois": [28, 34], "noeud": 28, "d\u00e9part": [28, 36], "const": [28, 45, 111, 175], "peu": [28, 35, 52], "al\u00e9atoir": [28, 33, 53, 59, 64, 67, 85, 86, 87, 88, 94, 95, 100, 103, 111], "comput": 29, "tim": 29, "datafram": [30, 31, 34, 36, 175], "matriciel": [32, 33, 35, 66], "optimis": [33, 60, 61, 85, 86, 92, 93, 106, 179], "array": 33, "creation": 33, "notion": [33, 113, 140, 181], "datatyp": 33, "dimens": [33, 66, 95, 122, 128, 129], "slicing": 33, "fancy": 33, "indexing": 33, "view": 33, "contr": 33, "copy": [33, 160], "manipul": [33, 34, 36, 175, 176], "shap": 33, "echiqui": 33, "cribl": 33, "erathosthen": 33, "broadcasting": [33, 35], "r\u00e9duct": 33, "algebr": 33, "lin\u00e9air": [33, 58], "simpl": [33, 55, 98, 160, 174, 181], "nombr": [33, 45, 52, 54, 59, 92, 103, 134, 135, 174, 175], "statist": 33, "retrouv": [33, 92], "ser": [33, 34, 36, 60], "scipy": [33, 123], "simul": [33, 60, 61, 96, 106], "r\u00e9gress": 33, "estim": [33, 52, 60, 61, 91], "maximis": 33, "vraisembl": 33, "r\u00e9f\u00e9rent": 33, "el\u00e9ment": [33, 34], "r\u00e9pons": [33, 34, 35, 36, 53, 55, 57, 60, 62, 63, 64, 109, 110, 111, 112, 117], "\u00e9critur": [34, 110, 124], "notat": [34, 175], "symbol": 34, "fichi": [34, 44, 49, 146, 147, 152, 153, 172, 176, 178], "excel": [34, 110, 146, 147], "filtr": 34, "union": 34, "sort": [34, 177], "group": [34, 183], "by": 34, "join": 34, "pivot": [34, 116, 158], "filt": 34, "merg": 34, "fusion": [34, 36], "tableau": [34, 35, 37, 44, 103, 122, 123], "moyen": [34, 85, 86, 87, 88, 102], "Avec": [34, 95, 156], "san": [34, 68, 111, 176], "plot": 34, "don": [34, 36, 39, 44, 60, 69, 85, 86, 91, 95, 98, 103, 110, 122, 130, 132, 133, 179], "nuag": [34, 85, 86], "matplotlib": 34, "mariag": 34, "annex": 34, "\u00e9cart": 34, "mari": 34, "version": [35, 36, 48, 59, 63, 79, 82, 107, 115, 120, 124], "court": [35, 36, 71, 101, 130, 131], "enonc": [35, 36, 51, 53, 54, 55, 57, 58, 60, 62, 63, 64, 65, 68, 71, 72, 73, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 110, 111, 112, 117], "ma\u00eetris": [35, 36], "slic": 35, "nan": [35, 36], "chi_2": 35, "contingent": [35, 37, 123], "veut": [35, 60], "ident": [35, 52, 95], "million": 35, "dev": 35, "appliqu": [35, 58, 91, 118], "stopcovid": 35, "cr\u00e9ation": [36, 103, 175], "lign": [36, 103, 112, 160, 168], "colon": [36, 87, 103], "ver": 36, "modif": [36, 40], "Une": [36, 69, 102, 103, 104, 106, 118, 124], "warning": [36, 166], "fr\u00e9quent": [36, 44, 170], "On": [36, 60, 92], "covid": [36, 60], "r\u00e9gion": [36, 60], "\u00e2ge": [36, 60], "refair": 36, "graphiqu": [36, 39, 44, 167, 181], "pr\u00e9c\u00e9dent": [36, 62, 117], "votr": 36, "fair": [36, 95, 136, 137], "diff\u00e9renci": 36, "liss": 36, "tabl": [36, 45, 109], "pet": [36, 63, 124, 125], "apart": [36, 59, 67, 136], "q5": [36, 60, 74, 75, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 109, 110, 118, 152, 153], "cart": 36, "quelqu": [39, 84, 109], "conseil": [39, 44], "\u00e9crir": [39, 44, 56, 57, 60, 93, 95, 113], "petit": [39, 44, 52, 60, 93, 111], "Pas": 39, "variabl": [39, 43, 44, 45, 140, 154, 155, 173, 174, 175], "global": [39, 45, 174, 181], "s\u00e9par": [39, 44, 130, 131, 134, 135], "charg": [39, 44], "interfac": [39, 44, 167, 181], "truc": [39, 44], "prec": 41, "cheat": [38, 40, 42, 43, 44], "sheet": [38, 40, 42, 43, 44], "langag": [44, 46, 98, 160, 174, 175, 184], "numer": [44, 52, 89, 90], "boucl": [44, 45, 49, 117, 154, 155, 174, 175], "for": [44, 45, 174], "whil": [44, 45, 174], "enumerat": 44, "zip": [44, 122, 175, 176], "map": 44, "d\u00e9finit": [44, 45, 126, 127, 160, 174, 175, 178], "yield": 44, "d\u00e9clar": [44, 45, 160, 174], "attribut": [44, 45, 136, 137, 160, 178], "m\u00e9thod": [44, 45, 62, 104, 136, 137, 138, 142, 143, 160, 168, 172, 175], "statiqu": [44, 45, 160], "instanc": [44, 160], "d\u00e9cor": 44, "text": [44, 68, 110, 146, 147, 152, 153, 168, 176], "except": [44, 45, 124, 163, 164, 165], "confus": 44, "guillemet": 44, "rang": [44, 175], "initialis": 44, "trois": [44, 49, 92, 94, 136, 137, 174], "partag": [44, 181], "moteur": 44, "syntax": [45, 160, 163, 174, 175, 178, 183], "d1": [45, 160, 174, 175, 178], "entr\u00e9": [45, 177, 178], "d10": [45, 175], "frozenset": [45, 175], "d2": [45, 160, 174, 175], "instantiaion": [45, 160], "d3": [45, 160, 174, 175], "d4": [45, 160, 174, 175], "port": [45, 174], "d5": [45, 160, 174, 175], "tupl": [45, 105, 175], "local": [40, 45, 140, 174], "d6": [45, 160, 174, 175], "mutabl": [45, 175], "d7": [45, 160, 175], "d8": [45, 160, 175], "surcharg": [45, 160, 174], "d9": [45, 175], "set": [45, 175], "figur": 45, "s1": [45, 160, 163, 174, 178], "attrap": [45, 163], "s10": [45, 160], "s11": [45, 160], "s12": [45, 160], "s13": [45, 160], "__copy__": [45, 160], "s14": [45, 160], "fig": [45, 160], "s15": [45, 160], "s16": [45, 160], "h\u00e9rit": [45, 160], "s2": [45, 160, 163, 174, 178], "instanci": [45, 160], "instruct": [45, 163, 174], "pass": [45, 174], "lev": [45, 163], "s3": [45, 160, 174, 178], "s4": [45, 160, 174], "s5": [45, 160, 174], "extens": [45, 49, 174, 175, 178], "s6": [45, 160, 174], "constructeur": [45, 160], "s7": [45, 160, 174], "s8": [45, 160, 174], "__str__": [45, 160], "d\u00e9faut": [45, 172, 174], "s9": [45, 160, 174], "ind\u00e9fin": [45, 174], "En": [47, 111], "diagonal": [47, 107], "compl": [47, 48], "apprendr": 48, "concept": [49, 174], "s\u00e9quenc": [49, 58, 168, 175], "notebook": [49, 51], "licens": 50, "tous": [51, 62, 94, 95, 112, 135, 136, 137], "correct": [51, 71, 72, 73, 74, 75, 76, 77, 79, 92, 96, 98, 121, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155], "examen": 51, "streaming": 52, "bjkst": 52, "distinct": 52, "universal": 52, "hashing": 52, "collis": 52, "temp": [52, 58, 62, 66, 95, 113, 118, 143], "stream": [52, 113], "h_1": 52, "h_2": 52, "\u00e9gal": 52, "o\u00f9": [52, 95], "hash": [52, 109], "d\u00e9pend": 52, "epsilon": 52, "compos": [53, 59], "connex": [53, 59], "construir": [53, 62, 147], "adjacent": [53, 59], "symetr": 53, "propr": [53, 146, 147, 163], "croiss": 53, "fait": 53, "suiv": [53, 94, 103], "retourn": [53, 67, 92, 93, 95], "fa\u00e7on": [54, 128, 129], "mont": [54, 143], "\u00e9chel": 54, "solut": [54, 58, 63, 65, 68, 69, 132, 133, 135, 150, 151], "distanc": [55, 56, 64, 67, 85, 86, 94, 95, 104, 156], "\u00e9dit": [55, 56, 156], "longueur": [55, 56, 156], "alambiqu": 55, "pag": [55, 147], "wikipedi": 55, "na\u00efv": [56, 58, 118, 132], "tres": [56, 98], "si": [56, 57, 64, 117], "proch": [56, 88, 95, 128, 129], "alor": 56, "ff": 56, "f": [56, 175], "ph": 56, "person": 56, "sait": 56, "algo": 129, "ordonnanc": 57, "d\u00e9termin": [57, 103], "peut": [57, 113, 118], "ex\u00e9cut": 57, "t\u00e2ch": 57, "Et": 57, "dur": [57, 91, 159], "vocabulair": 59, "li": 59, "puissanc": 59, "trouv": [59, 62, 135, 136, 137, 146, 147], "model": [60, 61], "sird": [60, 61], "q0": 60, "dessin": [60, 78, 79, 85, 86, 94, 115], "propag": 60, "v\u00e9rifi": [60, 126, 127], "cel": [60, 62], "synthet": 60, "q6": [60, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 109, 110], "r\u00e9el": [60, 175], "cumul": 60, "\u00e9pid\u00e9miolog": 61, "visualis": [61, 67], "second": [61, 95, 118, 124, 133, 135, 168], "jeux": [62, 107, 172], "suffix": 62, "commun": [62, 168, 178], "partagent": 62, "constuir": 62, "assoc": 62, "chaqu": [62, 63, 95], "lettr": [62, 109, 112], "termin": [62, 112], "ci": 62, "mesur": [62, 66, 95, 128, 129, 143], "pris": 62, "tel": 62, "pouss": 62, "loin": [62, 124, 154, 155], "tout": [63, 64, 67, 68, 103, 113, 163, 178], "prend": [63, 110], "choix": 63, "s\u00e9lect": 63, "perf_count": 63, "compar": [63, 113, 118], "vitesss": 63, "traveling": 64, "salesman": 64, "chois": 64, "chemin": [64, 67, 69, 102, 130, 131, 176], "rel": 64, "invers": 64, "am\u00e9lior": [64, 117], "moiti": 64, "possibl": [64, 65, 92, 117, 174], "plais": 64, "produit": [66, 92, 132, 133], "creus": 66, "\u00e9leg": 66, "affich": [67, 102], "tqdm": 67, "d\u00e9cod": 68, "mors": 68, "traduir": 68, "contient": [68, 117], "alphabet": 68, "minimis": 68, "transcript": 68, "interpret": [68, 181], "ru": [69, 95], "paris": 69, "etap": 69, "bellman": 69, "kruskall": 69, "eul\u00e9rien": 69, "optimal": [69, 93], "vari": 69, "sen": [69, 160], "interd": 69, "gaph": 69, "orient": 69, "windy": 69, "postman": 69, "cass": 70, "vigener": [70, 140, 141], "minut": [71, 97], "1a": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "e": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "interrog": [72, 73, 74, 75, 76, 77], "\u00e9crit": [72, 73, 74, 75, 76, 77, 81, 159], "septembr": [72, 76], "2014": [72, 73, 74, 75, 80], "octobr": [73, 87, 88, 89, 90, 95, 156], "novembr": [74, 75, 77, 78, 79, 91, 92, 93], "2015": [76, 77, 81, 82], "td": [78, 79, 80, 81, 82, 83, 84], "27": [78, 79], "2012": [78, 79], "coloriag": [78, 79, 107], "spiral": [78, 79], "ajout": [78, 103, 124, 160, 174, 176, 178], "roug": [78, 93], "d\u00e9cembr": [80, 82, 83, 85, 86], "rattrapag": [81, 93, 94], "\u00e9nonc": 81, "oral": 81, "lou": 82, "achet": 82, "appart": 82, "q7": [82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 109, 110], "exo": 82, "q8": [82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95], "q9": [82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95], "num\u00e9ros": 82, "t\u00e9l\u00e9phon": 82, "16": 83, "2016": 83, "q10": [83, 84, 85, 86, 87, 88, 89, 90, 92, 95], "f\u00e9vri": 84, "2017": [84, 85, 86], "commentair": [84, 160, 174, 175], "\u00e9chantillon": [85, 86, 87, 88], "encor": [85, 86], "seuil": 86, "23": [87, 88], "2018": [87, 88], "m1": [87, 88, 92], "m2": [87, 88, 92], "m3": [87, 88, 92], "norm": [87, 88], "r\u00e9p\u00e9tit": [87, 88], "22": [89, 90], "2019": [89, 90], "distance_t": [89, 90], "distance_bord": [89, 90], "table_al": [89, 90], "n_table_al": [89, 90], "table_proch": [89, 90], "distance_n_tables_al": [89, 90], "meilleur_table_al": [89, 90], "plot_tabl": [89, 90], "vorono\u00ef": [89, 90], "kmean": [89, 90], "24": 91, "2020": 91, "gu\u00e9rison": 91, "kaplan": 91, "mei": 91, "courb": 91, "publiqu": 91, "apres": 91, "T": 91, "vaccin": 91, "heur": 91, "variat": 91, "2021": [92, 93], "multipl": [40, 92, 126, 127, 160, 175, 183], "lent": 92, "ecrir": [92, 95], "meilleur": 92, "option": 92, "v\u00e9rif": [92, 95], "mesure_temp": 92, "m4": 92, "pench": 92, "N": 92, "combien": [92, 117], "r\u00e9soudr": 92, "remarqu": 92, "lor": [92, 174], "15": 93, "volum": 93, "air": 93, "surfac": [93, 107, 111], "briqu": 93, "fac": 93, "inclut": 93, "n\u00e9cessair": 93, "coll": 93, "extrem": 93, "bouteil": 93, "litr": 93, "larg": 93, "bleu": 93, "gross": 93, "mar": 94, "segment": 94, "niveau": 94, "arbre": [94, 100, 102], "Y": 95, "lorsqu": [95, 168], "2x2": 95, "indic": [95, 115], "m\u00e9decin": 95, "grill": 95, "10x10": 95, "quadrill": 95, "coordon": [95, 151], "dictionair": 95, "case_grill": 95, "pairwise_dist": 95, "1000x2": 95, "100x2": 95, "faux": 95, "corrig": 95, "conna\u00eetr": 96, "structur": [98, 110, 122], "outil": 98, "jeu": [99, 103, 108, 124, 144, 145], "d\u00e9": [99, 108], "rotat": [99, 108], "circuit": [99, 108], "De": 99, "2048": [103, 144, 145], "d\u00e9composit": [101, 103], "libr": 103, "pourvu": 103, "perdu": 103, "aggreg": 103, "jou": 103, "coup": 103, "sach": 103, "direct": 103, "scor": [103, 152, 153], "fais": 103, "derni": [103, 118], "fin": [103, 174], "strateg": [103, 144, 145], "illustr": 103, "bref": 104, "aper\u00e7u": 104, "station": 104, "m\u00e9tro": 104, "ensembl": [105, 125, 154, 175, 183], "insert": 105, "dequ": [105, 169], "loi": 106, "multinomial": 106, "poid": 106, "bootstrap": 106, "colori": 107, "proport": 107, "couvert": 107, "math\u00e9mat": 107, "retour": 107, "\u00e7a": [107, 110, 146, 183], "r\u00e9partit": [109, 130], "hashag": 109, "pseudo": 109, "light": 109, "xml": [110, 113], "format": [110, 113, 134, 135, 146, 171, 175, 176], "csv": 110, "relir": 110, "essai": 110, "html": 110, "sql": 110, "sas": 110, "non": [110, 154, 155, 174, 175], "trop": 110, "plac": [110, 168], "zippon": 110, "inspir": 110, "cercl": 111, "pi": 111, "ni": 111, "aucun": 111, "parfait": 111, "machin": 111, "extrair": 112, "remplac": 112, "rim": 112, "elles": 112, "ail": 112, "flux": 113, "lir": [113, 152, 153], "gros": 113, "d\u00e9s\u00e9rialis": 113, "histogramm": [114, 122, 152, 153], "heap": 115, "transform": 115, "tas": 115, "chos": [115, 179], "lieu": 115, "simplifi": [115, 174], "gauss": [116, 158], "vitess": 116, "gin": 117, "profil": [117, 119], "_gini_final": 117, "savoir": 117, "_gini_cumsum": 117, "convolu": 118, "ex\u00e9cu": [118, 178], "im2col": 118, "nouveau": 118, "\u00e9xecu": 118, "d\u00e9duir": 118, "profilag": 118, "\u00e9ven": [118, 168], "\u00e9chantillonnag": 118, "Que": 118, "pouv": 118, "dir": 118, "bizarrer": 119, "web": 121, "scraping": 121, "pokemon": 121, "caract\u00e9rist": 121, "imag": 121, "D": [122, 168], "revers": 122, "spars": [122, 128, 129], "m\u00e9moir": 122, "chi": 123, "formul": 123, "obstacl": 124, "\u00e9chiqui": 124, "aller": [124, 128, 129, 154, 155], "pr\u00e9vu": 125, "\u00e9volu": 125, "cryptag": [126, 127], "homomorphic": [126, 127], "craig": [126, 127], "gentry": [126, 127], "stabl": [126, 127], "addit": [126, 127], "impl\u00e9mentent": [126, 127], "voisin": [128, 129], "nn": [128, 129], "perform": [128, 129], "featur": [128, 129], "imagin": [128, 129], "vit": [128, 129], "2a": 129, "observ": 129, "skis": 130, "facult": [130, 131], "prolong": [130, 131], "degr": [130, 131], "facebook": [130, 131], "puzzl": [132, 133, 134, 135], "scalair": [132, 133], "moin": 132, "recouvr": [132, 133], "soudoi": [132, 133], "prisonni": [132, 133], "d\u00e9coupag": [132, 133], "intelligent": [132, 133], "bas": [132, 133], "approch": 133, "watershed": [134, 135], "bagarreur": [134, 135], "bin\u00f4m": [134, 135], "magiqu": [136, 137], "suit": [136, 137], "piec": [138, 139, 160], "normal": [138, 139, 174], "truqu": [138, 139], "mer": 138, "mixt": [138, 139], "d\u00e9tail": 140, "ordon": 140, "crypt": [140, 141], "d\u00e9crypt": [140, 141], "selon": [140, 141], "int\u00e9gral": [142, 143], "rectangl": [142, 143], "r\u00e9calcitr": 143, "carlo": 143, "arr\u00eat": 143, "gagn": [144, 145], "regl": [144, 145], "with": [43, 146], "rightarrow": [146, 147], "cherch": [146, 147], "motif": [146, 147], "url": 147, "wikip\u00e9di": 147, "trac": [150, 151], "pyramid": [150, 151], "bigarr": [150, 151], "couleur": 151, "devin": [152, 153], "langu": [152, 153], "normalis": [152, 153], "int": 154, "str": [154, 175], "compact": 154, "pr\u00e9sent": 160, "apport": 160, "implicit": 160, "aid": 160, "inclu": 160, "deepcopy": 160, "monnai": 160, "issubclass": 160, "isinst": 160, "C": [162, 181], "oblig": 162, "princip": 163, "lanc": [163, 168], "try": 163, "imbriqu": 163, "d\u00e9fin": 163, "d\u00e9riv": 163, "personnalis": [163, 166, 168], "aberr": 163, "pieg": 163, "usag": 164, "pil": 164, "call": 164, "stack": 164, "messag": [164, 168, 181], "explicit": 164, "convent": 164, "logging": 166, "intercept": 166, "tkint": 168, "objet": [168, 175, 176], "zon": 168, "bouton": 168, "sais": 168, "coch": 168, "rond": 168, "radio": 168, "barr": 168, "d\u00e9fil": 168, "combobox": 168, "canev": 168, "menus": 168, "disposit": 168, "fen\u00eatr": 168, "emplac": [168, 178], "pack": 168, "grid": 168, "even": 168, "principal": 168, "focus": 168, "press": 168, "associ": 168, "menu": 168, "pr\u00e9d\u00e9fin": 168, "contr\u00f4l": 168, "bo\u00eet": 168, "dialogu": 168, "standard": 168, "compt": 168, "rebour": 168, "communiqu": 168, "ordereddict": 169, "namedtupl": 169, "count": 169, "n\u00e9gat": 170, "encoding": [172, 176], "condens": 174, "tru": 174, "b1": 174, "pilotag": 174, "continu": 174, "break": 174, "else": 174, "suppress": [174, 176], "identif": 174, "eval": [174, 175], "exec": 174, "indent": 174, "usuel": 174, "rien": 175, "bool\u00e9en": 175, "formatag": 175, "particul": 175, "r": 175, "complex": [175, 176], "byt": 175, "bytearray": 175, "collag": 175, "concaten": 175, "dict": 175, "repr": 175, "fourn": 175, "affect": 175, "hi\u00e9rarch": 175, "intern": [175, 178], "accentu": 175, "mod": 176, "gestion": 176, "pratiqu": 178, "Ce": 178, "cycliqu": 178, "cour": 178, "arborescent": 178, "paquetag": 178, "relat": 178, "extern": 178, "parall\u00e9lis": 180, "thread": 181, "synchronis": 181, "attent": 181, "fil": [40, 43, 181], "multithreading": 181, "concurrent": 181, "futur": 181, "blocag": 181, "async": 181, "await": 181, "asyncio": 181, "lock": 181, "cython": 181, "m\u00e9lang": 181, "jav": 181, "bibliograph": 181, "assembl": 183, "nomm": 183, "older": 48, "transit": 101, "composit": 101, "transposit": 101, "d\u00e9m\u00eal": 101, "repr\u00e9sent": 102, "jet": 102, "profondeur": [100, 102], "maximal": [100, 102], "depuis": 102, "racin": 102, "jusqu": 102, "intermed": 102, "is": 102, "git": 40, "add": 40, "remot": 40, "submodul": 40, "checkout": 40, "specific": 40, "from": 40, "creat": 40, "new": 40, "branch": 40, "push": 40, "repository": 40, "remov": [40, 43], "reset": [40, 42], "updat": 40, "fix": 40, "mov": 40, "rebas": 40, "upsteam": 40, "and": 40, "eras": 40, "history": 40, "clon": 40, "of": 40, "all": 40, "jenkin": 42, "plugin": 42, "start": 42, "restart": 42, "password": 42, "linux": 43, "classic": 43, "error": 43, "clean": 43, "temporary": 43, "hard": 43, "driv": 43, "process": 43, "environment": 43, "other": 43, "presqu": 156, "levenshtein": 156, "align": 156, "noteook": 159}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Survol algorithmique": [[1, "survol-algorithmique"]], "Ordres de grandeur": [[1, "ordres-de-grandeur"]], "Comprendre le co\u00fbt d\u2019un algorithme": [[1, "comprendre-le-cout-d-un-algorithme"]], "Mot-cl\u00e9": [[1, "mot-cle"]], "Catalogue d\u2019algorithmes": [[1, "catalogue-d-algorithmes"]], "Probl\u00e8mes NP-complets": [[1, "problemes-np-complets"]], "Id\u00e9e pour d\u00e9monstrer qu\u2019un probl\u00e8me est NP-complet": [[1, "idee-pour-demonstrer-qu-un-probleme-est-np-complet"]], "Liens": [[1, "liens"]], "Articles sur des algorithmes": [[1, "articles-sur-des-algorithmes"]], "Livres": [[1, "livres"]], "Pour s\u2019entra\u00eener": [[1, "pour-s-entrainer"]], "Google\u2019s recommandations": [[1, "google-s-recommandations"]], "examples.construction_classique": [[2, "examples-construction-classique"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "Python n\u2019accepte pas les accents": [[2, "indexfaqref-python0"], [46, "index-faqref-0-6"]], "Modifier un dictionnaire en le parcourant": [[2, "indexexref-Base -0"], [170, "index-exref-1-1"]], "Quelle est la diff\u00e9rence entre return et print ?": [[2, "indexfaqref-python1"], [46, "index-faqref-0-10"]], "calcul de la somme des dix premiers entiers au carr\u00e9": [[2, "indexexref-Base0"], [170, "index-exref-0-1"]], "Eviter d\u2019effectuer le m\u00eame appel deux fois": [[2, "indexexref-Base -1"], [170, "index-exref-1-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en datetime": [[2, "indexexref-Base1"], [170, "index-exref-0-4"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "comptage": [[2, "indexexref-Base2"], [170, "index-exref-0-2"]], "fonction comme param\u00e8tre": [[2, "indexexref-Base3"], [170, "index-exref-0-8"]], "conversion d\u2019une matrice en cha\u00eene de caract\u00e8res": [[2, "indexexref-Base4"], [170, "index-exref-0-6"]], "conversion d\u2019une matrice en un vecteur": [[2, "indexexref-Base5"], [170, "index-exref-0-7"]], "minimum avec position": [[2, "indexexref-Base6"], [170, "index-exref-0-9"]], "recherche avec index": [[2, "indexexref-Base7"], [170, "index-exref-0-10"]], "recherche dichotomique": [[2, "indexexref-Base8"], [170, "index-exref-0-11"]], "calcul d\u2019une somme": [[2, "indexexref-Base9"], [170, "index-exref-0-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en matrice": [[2, "indexexref-Base10"], [170, "index-exref-0-5"]], "tri, garder les positions initiales": [[2, "indexexref-Base11"], [170, "index-exref-0-12"]], "conversion d\u2019un vecteur en une matrice": [[2, "indexexref-Base12"], [170, "index-exref-0-3"]], "faq": [[3, "faq"]], "teachpyx.faq.faq_python": [[3, "module-teachpyx.faq.faq_python"]], "Quelle est la diff\u00e9rence entre / et // - division ?": [[3, "indexfaqref-python0"], [46, "index-faqref-0-9"]], "Quel est l\u2019entier le plus grand ?": [[3, "indexfaqref-python1"], [46, "index-faqref-0-8"]], "Tabulations ou espace ?": [[3, "indexfaqref-python2"], [46, "index-faqref-0-14"]], "Comment it\u00e9rer sur les r\u00e9sultats d\u2019une expression r\u00e9guli\u00e8re ?": [[3, "indexfaqref-python3"], [46, "index-faqref-0-2"]], "R\u00e9cup\u00e9rer le nom du jour \u00e0 partir d\u2019une date": [[3, "indexfaqref-python4"], [46, "index-faqref-0-12"]], "R\u00e9cup\u00e9rer le nom du mois \u00e0 partir d\u2019une date": [[3, "indexfaqref-python5"], [46, "index-faqref-0-13"]], "R\u00e9cup\u00e9rer la liste des modules install\u00e9s": [[3, "indexfaqref-python6"], [46, "index-faqref-0-11"]], "Pourquoi l\u2019installation de pandas (ou numpy)\nne marche pas sous Windows avec pip ?": [[3, "indexfaqref-python7"], [46, "index-faqref-0-5"]], "Obtenir des informations sur les packages install\u00e9s": [[3, "indexfaqref-python8"], [46, "index-faqref-0-4"]], "propri\u00e9t\u00e9": [[3, "indexfaqref-python9"], [46, "index-faqref-0-15"]], "Comment \u00e9viter sys.path.append\u2026 quand on d\u00e9veloppe un module ?": [[3, "indexfaqref-python10"], [46, "index-faqref-0-3"]], "Qu\u2019est-ce qu\u2019un type immuable ou immutable ?": [[3, "indexfaqref-python11"], [46, "index-faqref-0-7"]], "Classe sortable": [[3, "indexfaqref-python12"], [46, "index-faqref-0-1"]], "A quoi sert un ``StringIO`` ?": [[3, "indexfaqref-python13"], [46, "index-faqref-0-0"]], "teachpyx.faq.faq_exception": [[3, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_numpy": [[3, "module-teachpyx.faq.faq_numpy"]], "Code inclus dans cette librairie": [[4, "code-inclus-dans-cette-librairie"]], "Constructions classiques": [[4, null], [160, "constructions-classiques"], [168, "constructions-classiques"], [169, "constructions-classiques"], [170, "constructions-classiques"], [174, "constructions-classiques"]], "Fonctions impl\u00e9ment\u00e9es pour les exercices": [[4, null]], "FAQ": [[4, null], [46, "faq"]], "examples.numpysex": [[5, "module-teachpyx.examples.numpysex"]], "op\u00e9rations avec numpy.matrix": [[5, "indexexref-numpy0"], [32, "index-exref-0-0"]], "Quels sont les types que numpy supporte ?": [[5, "indexfaqref-numpy0"], [46, "index-faqref-1-0"]], "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)": [[9, "utilisation-de-cartopy-sous-windows-sous-wsl"]], "2023-08-03 : Code Jam": [[10, "code-jam"]], "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne": [[11, "l-enigme-d-hermionne"]], "Gallerie d\u2019exemples": [[15, "gallerie-d-exemples"]], "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution": [[16, "l-enigme-d-einstein-et-sa-resolution"]], "Fonction permutation": [[16, "fonction-permutation"]], "La classe Rule": [[16, "la-classe-rule"]], "Explicit rules": [[16, "explicit-rules"]], "Description du probl\u00e8me avec ce code": [[16, "description-du-probleme-avec-ce-code"]], "Float Conversion": [[17, "float-conversion"]], "Probability (float64)x == (float32)x": [[17, "probability-float64-x-float32-x"]], "Interval length distribution": [[17, "interval-length-distribution"]], "An answer to the initial question": [[17, "an-answer-to-the-initial-question"]], "An answer to a similar question: what about not strict comparison?": [[17, "an-answer-to-a-similar-question-what-about-not-strict-comparison"]], "Conclusion": [[17, "conclusion"], [83, "Conclusion"]], "Le GIL": [[18, "le-gil"]], "Deux listes en parallel": [[18, "deux-listes-en-parallel"]], "Un autre sc\u00e9nario": [[18, "un-autre-scenario"]], "Hypercube et autres exercices": [[19, "hypercube-et-autres-exercices"]], "Q1 - triple r\u00e9cursivit\u00e9": [[19, "q1-triple-recursivite"]], "Q2 - comparaison de listes": [[19, "q2-comparaison-de-listes"]], "Q3 - pr\u00e9cision des calculs": [[19, "q3-precision-des-calculs"]], "Q4 - hypercube": [[19, "q4-hypercube"]], "Astuces avec les lambda functions": [[20, "astuces-avec-les-lambda-functions"]], "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations": [[21, "mathador-enigme-a-4-operations"]], "Points d\u2019impl\u00e9mentation avec numpy": [[22, "points-d-implementation-avec-numpy"]], "acc\u00e9der \u00e0 un \u00e9l\u00e9ment en particulier": [[22, "acceder-a-un-element-en-particulier"]], "Pandas et groupby": [[23, "pandas-et-groupby"]], "groupby et valeur manquantes": [[23, "groupby-et-valeur-manquantes"]], "Parties de dames": [[24, "parties-de-dames"]], "Q1": [[24, "q1"], [64, "Q1"], [72, "Q1"], [72, "id1"], [73, "Q1"], [73, "id1"], [74, "Q1"], [74, "id1"], [74, "id6"], [75, "Q1"], [76, "Q1"], [76, "id1"], [77, "Q1"], [77, "id1"], [79, "Q1"], [82, "Q1"], [82, "id1"], [82, "id3"], [83, "Q1"], [84, "Q1"], [91, "Q1"], [57, "Q1"]], "Q2": [[24, "q2"], [64, "Q2"], [72, "Q2"], [72, "id2"], [73, "Q2"], [73, "id2"], [74, "Q2"], [74, "id2"], [74, "id7"], [75, "Q2"], [76, "Q2"], [76, "id2"], [77, "Q2"], [77, "id2"], [79, "Q2"], [82, "Q2"], [82, "id2"], [82, "id4"], [83, "Q2"], [84, "Q2"], [57, "Q2"]], "Q3": [[24, "q3"], [64, "Q3"], [72, "Q3"], [72, "id3"], [73, "Q3"], [73, "id3"], [74, "Q3"], [74, "id3"], [74, "id8"], [75, "Q3"], [76, "Q3"], [76, "id3"], [77, "Q3"], [77, "id3"], [79, "Q3"], [82, "Q3"], [83, "Q3"], [84, "Q3"]], "Q4": [[24, "q4"], [64, "Q4"], [73, "Q4"], [73, "id4"], [74, "Q4"], [74, "id4"], [74, "id9"], [75, "Q4"], [82, "Q4"], [83, "Q4"], [83, "id1"], [84, "Q4"]], "S\u00e9rialisation": [[25, "serialisation"], [179, "serialisation"]], "JSON": [[25, "json"], [179, "json"]], "Ecriture (json)": [[25, "ecriture-json"]], "Lecture (json)": [[25, "lecture-json"]], "Limite": [[25, "limite"]], "S\u00e9rialisation rapide": [[25, "serialisation-rapide"]], "Pickle": [[25, "pickle"]], "Ecriture (pickle)": [[25, "ecriture-pickle"]], "Lecture (pickle)": [[25, "lecture-pickle"]], "Les classes": [[25, "les-classes"]], "R\u00e9duire la taille": [[25, "reduire-la-taille"]], "Cas des fonctions": [[25, "cas-des-fonctions"]], "Binaire": [[25, "binaire"], [179, "binaire"]], "Fonction et JSON": [[25, "fonction-et-json"]], "Cas des it\u00e9rateurs": [[25, "cas-des-iterateurs"]], "Cas des g\u00e9n\u00e9rateurs": [[25, "cas-des-generateurs"]], "S\u00e9rialisation avec protobuf": [[26, "serialisation-avec-protobuf"]], "Sch\u00e9ma": [[26, "schema"]], "Compilation": [[26, "compilation"]], "Import du module cr\u00e9\u00e9": [[26, "import-du-module-cree"]], "S\u00e9rialisation en cha\u00eene de caract\u00e8res": [[26, "serialisation-en-chaine-de-caracteres"]], "Plusieurs cha\u00eenes de caract\u00e8res": [[26, "plusieurs-chaines-de-caracteres"]], "S\u00e9rialisation JSON": [[26, "serialisation-json"]], "Exercices expliqu\u00e9s de programmation": [[27, "exercices-expliques-de-programmation"]], "Copie de listes": [[27, "copie-de-listes"]], "Erreur de logique": [[27, "erreur-de-logique"]], "Co\u00fbt d\u2019un algorithme": [[27, "cout-d-un-algorithme"]], "H\u00e9ritage double": [[27, "heritage-double"]], "Pr\u00e9cision des calculs": [[27, "precision-des-calculs"]], "R\u00e9flexions autour du voyage de commerce (TSP)": [[28, "reflexions-autour-du-voyage-de-commerce-tsp"]], "Des villes tir\u00e9es au hasard": [[28, "des-villes-tirees-au-hasard"]], "Croisements": [[28, "croisements"]], "Noeud de d\u00e9part constant": [[28, "noeud-de-depart-constant"]], "Un peu d\u2019al\u00e9atoire en plus": [[28, "un-peu-d-aleatoire-en-plus"]], "Computation times": [[29, "computation-times"]], "Dataframes": [[30, "dataframes"]], "Matrices et DataFrames": [[31, "matrices-et-dataframes"], [175, "matrices-et-dataframes"]], "DataFrame et Graphes": [[34, "DataFrame-et-Graphes"]], "DataFrame": [[34, "DataFrame"]], "Series": [[34, "Series"]], "DataFrame (pandas)": [[34, "DataFrame-(pandas)"]], "Lecture et \u00e9criture de DataFrame": [[34, "Lecture-et-\u00e9criture-de-DataFrame"]], "DataFrame et Index": [[34, "DataFrame-et-Index"]], "Notation avec le symbole :": [[34, "Notation-avec-le-symbole-:"]], "Exercice 1 : cr\u00e9er un fichier Excel": [[34, "Exercice-1-:-cr\u00e9er-un-fichier-Excel"], [34, "id1"]], "Manipuler un DataFrame": [[34, "Manipuler-un-DataFrame"]], "6 op\u00e9rations : filtrer, union, sort, group by, join, pivot": [[34, "6-op\u00e9rations-:-filtrer,-union,-sort,-group-by,-join,-pivot"]], "filter": [[34, "filter"]], "union": [[34, "union"]], "sort": [[34, "sort"]], "group by": [[34, "group-by"]], "join (merge ou fusion)": [[34, "join-(merge-ou-fusion)"]], "pivot (tableau crois\u00e9 dynamique)": [[34, "pivot-(tableau-crois\u00e9-dynamique)"]], "Lambda fonctions": [[34, "Lambda-fonctions"]], "Exercice 2 : lambda fonction": [[34, "Exercice-2-:-lambda-fonction"]], "Exercice 3 : moyennes par groupes": [[34, "Exercice-3-:-moyennes-par-groupes"], [34, "id2"]], "Avec ou sans index": [[34, "Avec-ou-sans-index"]], "Dates": [[34, "Dates"], [171, "dates"]], "Plot(s)": [[34, "Plot(s)"]], "R\u00e9cup\u00e9ration des donn\u00e9es": [[34, "R\u00e9cup\u00e9ration-des-donn\u00e9es"]], "Exercice 4 : nuage de points": [[34, "Exercice-4-:-nuage-de-points"]], "Exercice 5 : graphe d\u2019une distribution avec pandas": [[34, "Exercice-5-:-graphe-d'une-distribution-avec-pandas"]], "matplotlib": [[34, "matplotlib"]], "Exercice 6 : distribution des mariages par jour": [[34, "Exercice-6-:-distribution-des-mariages-par-jour"], [34, "id3"]], "Annexes": [[34, "Annexes"]], "Cr\u00e9er un fichier Excel avec plusieurs feuilles": [[34, "Cr\u00e9er-un-fichier-Excel-avec-plusieurs-feuilles"]], "El\u00e9ments de r\u00e9ponses pour les exercices": [[34, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"], [33, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"]], "Exercice 2 : lambda function": [[34, "Exercice-2-:-lambda-function"]], "Exercice 4 : \u00e9cart entre les mari\u00e9s": [[34, "Exercice-4-:-\u00e9cart-entre-les-mari\u00e9s"]], "Exercice 5 : graphe de la distribution avec pandas": [[34, "Exercice-5-:-graphe-de-la-distribution-avec-pandas"]], "Calcul matriciel avec numpy (version courte)": [[35, "Calcul-matriciel-avec-numpy-(version-courte)"]], "Enonc\u00e9": [[35, "Enonc\u00e9"], [36, "Enonc\u00e9"], [53, "Enonc\u00e9"], [55, "Enonc\u00e9"], [58, "Enonc\u00e9"], [60, "Enonc\u00e9"], [63, "Enonc\u00e9"], [64, "Enonc\u00e9"], [65, "Enonc\u00e9"], [110, "Enonc\u00e9"], [111, "Enonc\u00e9"], [112, "Enonc\u00e9"], [117, "Enonc\u00e9"], [57, "Enonc\u00e9"], [62, "Enonc\u00e9"]], "La ma\u00eetrise du slice": [[35, "La-ma\u00eetrise-du-slice"]], "La ma\u00eetrise du nan": [[35, "La-ma\u00eetrise-du-nan"], [36, "La-ma\u00eetrise-du-nan"]], "La ma\u00eetrise des types": [[35, "La-ma\u00eetrise-des-types"], [36, "La-ma\u00eetrise-des-types"]], "La ma\u00eetrise du broadcasting": [[35, "La-ma\u00eetrise-du-broadcasting"]], "La ma\u00eetrise des index": [[35, "La-ma\u00eetrise-des-index"], [36, "La-ma\u00eetrise-des-index"]], "La ma\u00eetrise des op\u00e9rations et des fonctions": [[35, "La-ma\u00eetrise-des-op\u00e9rations-et-des-fonctions"]], "Q1 : calculer la valeur du \\chi_2 d\u2019un tableau de contingence": [[35, "Q1-:-calculer-la-valeur-du-\\chi_2-d'un-tableau-de-contingence"], [35, "id1"]], "Q2 : calculer une distribution un peu particuli\u00e8re": [[35, "Q2-:-calculer-une-distribution-un-peu-particuli\u00e8re"], [35, "id2"]], "Q3 : on veut cr\u00e9er une matrice identit\u00e9 un million par un million": [[35, "Q3-:-on-veut-cr\u00e9er-une-matrice-identit\u00e9-un-million-par-un-million"], [35, "id3"]], "Q4 : vous devez cr\u00e9er l\u2019application StopCovid": [[35, "Q4-:-vous-devez-cr\u00e9er-l'application-StopCovid"], [35, "id4"]], "R\u00e9ponses": [[35, "R\u00e9ponses"], [36, "R\u00e9ponses"], [53, "R\u00e9ponses"], [55, "R\u00e9ponses"], [60, "R\u00e9ponses"], [63, "R\u00e9ponses"], [64, "R\u00e9ponses"], [110, "R\u00e9ponses"], [111, "R\u00e9ponses"], [112, "R\u00e9ponses"], [117, "R\u00e9ponses"], [57, "R\u00e9ponses"], [62, "R\u00e9ponses"]], "Manipulation de donn\u00e9es avec pandas (version courte)": [[36, "Manipulation-de-donn\u00e9es-avec-pandas-(version-courte)"]], "Cr\u00e9ation d\u2019un dataframe": [[36, "Cr\u00e9ation-d'un-dataframe"]], "La ma\u00eetrise des index des lignes": [[36, "La-ma\u00eetrise-des-index-des-lignes"]], "La ma\u00eetrise des index des colonnes": [[36, "La-ma\u00eetrise-des-index-des-colonnes"]], "Lien vers numpy": [[36, "Lien-vers-numpy"]], "Cr\u00e9ation de colonnes": [[36, "Cr\u00e9ation-de-colonnes"]], "Modifications de valeurs": [[36, "Modifications-de-valeurs"]], "Une erreur ou warning fr\u00e9quent": [[36, "Une-erreur-ou-warning-fr\u00e9quent"]], "La ma\u00eetrise des fonctions": [[36, "La-ma\u00eetrise-des-fonctions"]], "On r\u00e9cup\u00e8re les donn\u00e9es du COVID par r\u00e9gion et par \u00e2ge et premier graphe": [[36, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"], [60, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"]], "Q1 : refaire le graphique pr\u00e9c\u00e9dent pour votre classe d\u2019\u00e2ge": [[36, "Q1-:-refaire-le-graphique-pr\u00e9c\u00e9dent-pour-votre-classe-d'\u00e2ge"], [36, "id1"]], "Q2 : faire de m\u00eame avec les s\u00e9ries diff\u00e9renci\u00e9es": [[36, "Q2-:-faire-de-m\u00eame-avec-les-s\u00e9ries-diff\u00e9renci\u00e9es"], [36, "id2"]], "Q3 : faire de m\u00eame avec des s\u00e9ries liss\u00e9es sur sur 7 jours": [[36, "Q3-:-faire-de-m\u00eame-avec-des-s\u00e9ries-liss\u00e9es-sur-sur-7-jours"], [36, "id3"]], "Q4 : fusion de tables par d\u00e9partements": [[36, "Q4-:-fusion-de-tables-par-d\u00e9partements"], [36, "id4"]], "Petit apart\u00e9": [[36, "Petit-apart\u00e9"]], "Q5 : une carte ?": [[36, "Q5-:-une-carte-?"]], "Quelques conseils pour \u00e9crire un programme": [[39, "quelques-conseils-pour-ecrire-un-programme"]], "Des petites fonctions": [[39, "des-petites-fonctions"], [44, "des-petites-fonctions"]], "Pas de variables globales": [[39, "pas-de-variables-globales"]], "S\u00e9parer les calculs, le chargement des donn\u00e9es, l\u2019interface graphique": [[39, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"], [44, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"]], "Utiliser des fonctions de tests": [[39, "utiliser-des-fonctions-de-tests"]], "Trucs et astuces": [[39, "trucs-et-astuces"], [44, "trucs-et-astuces"]], "Cheat sheet: Python": [[44, "cheat-sheet-python"]], "Le langage": [[44, "le-langage"]], "Les variables": [[44, "les-variables"]], "Les types immuables": [[44, "les-types-immuables"]], "Les types modifiables": [[44, "les-types-modifiables"]], "Liste": [[44, "liste"], [168, "liste"], [175, "liste"]], "Dictionnaire": [[44, "dictionnaire"], [175, "dictionnaire"]], "Tableaux num\u00e9riques": [[44, "tableaux-numeriques"]], "Tests et boucles": [[44, "tests-et-boucles"]], "Tests": [[44, "tests"], [174, "tests"]], "for ou while": [[44, "for-ou-while"]], "Fonction enumerate": [[44, "fonction-enumerate"]], "Fonction zip": [[44, "fonction-zip"]], "Fonction map": [[44, "fonction-map"]], "Autres mot-cl\u00e9s": [[44, "autres-mot-cles"]], "Fonctions": [[44, "fonctions"], [140, "Fonctions"], [174, "fonctions"], [183, "fonctions"]], "D\u00e9finition, param\u00e8tres": [[44, "definition-parametres"]], "mot-cl\u00e9 lambda": [[44, "mot-cle-lambda"]], "mot-cl\u00e9 yield": [[44, "mot-cle-yield"]], "Classes": [[44, "classes"], [103, "Classes"], [160, "classes"], [161, "classes"], [98, null]], "D\u00e9claration d\u2019une classe": [[44, "declaration-d-une-classe"]], "Attributs et m\u00e9thodes": [[44, "attributs-et-methodes"]], "M\u00e9thodes statiques": [[44, "methodes-statiques"]], "Op\u00e9rateurs": [[44, "operateurs"], [104, "Op\u00e9rateurs"], [160, "operateurs"]], "Copie d\u2019instances": [[44, "copie-d-instances"], [160, "copie-d-instances"]], "H\u00e9ritage": [[44, "heritage"], [160, "heritage"]], "D\u00e9corateur": [[44, "decorateur"]], "Fichiers": [[44, "fichiers"], [146, "Fichiers"], [172, "fichiers"], [176, "fichiers"]], "Ecriture dans un fichier texte": [[44, "ecriture-dans-un-fichier-texte"]], "Lecture dans un fichier texte": [[44, "lecture-dans-un-fichier-texte"]], "Modules": [[44, "modules"], [146, "Modules"]], "Exceptions": [[44, "exceptions"], [163, "exceptions"], [165, "exceptions"]], "Erreurs, confusions fr\u00e9quentes": [[44, "erreurs-confusions-frequentes"]], "Variables": [[44, "variables"], [175, "variables"]], "Cha\u00eene de caract\u00e8res = tableau de caract\u00e8res": [[44, "chaine-de-caracteres-tableau-de-caracteres"]], "Guillemets ou pas": [[44, "guillemets-ou-pas"]], "Boucles": [[44, "boucles"], [174, "boucles"]], "range ou pas range": [[44, "range-ou-pas-range"]], "Initialisation": [[44, "initialisation"]], "Diff\u00e9rence entre print et return": [[44, "difference-entre-print-et-return"]], "Trois conseils pour \u00e9crire un programme": [[44, "trois-conseils-pour-ecrire-un-programme"]], "Utiliser des tests unitaires": [[44, "utiliser-des-tests-unitaires"]], "Partager du code": [[44, "partager-du-code"]], "Moteurs de recherche": [[44, "moteurs-de-recherche"]], "Syntaxes et d\u00e9finitions": [[45, "syntaxes-et-definitions"]], "D\u00e9finitions": [[45, "definitions"]], "D\u00e9finition D1 : classe": [[45, "index-mathdef-0-1"], [160, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : point d\u2019entr\u00e9e du programme": [[45, "index-mathdef-0-2"], [178, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : test": [[45, "index-mathdef-0-3"], [174, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : variable": [[45, "index-mathdef-0-4"], [175, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D10 : frozenset": [[45, "index-mathdef-0-5"], [175, "indexmathe-D\u00e9finition9"]], "D\u00e9finition D2 : constante": [[45, "index-mathdef-0-6"], [175, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : fonction": [[45, "index-mathdef-0-7"], [174, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : instantiaion": [[45, "index-mathdef-0-8"], [160, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D3 : fonction r\u00e9cursive": [[45, "index-mathdef-0-9"], [174, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : m\u00e9thode": [[45, "index-mathdef-0-10"], [160, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : type immuable (ou immutable)": [[45, "index-mathdef-0-11"], [175, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D4 : attribut": [[45, "index-mathdef-0-12"], [160, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : cha\u00eene de caract\u00e8res": [[45, "index-mathdef-0-13"], [175, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : port\u00e9e d\u2019un variable": [[45, "index-mathdef-0-14"], [174, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D5 : m\u00e9thode statique": [[45, "index-mathdef-0-15"], [160, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : tuple": [[45, "index-mathdef-0-16"], [175, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : variable locale": [[45, "index-mathdef-0-17"], [174, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D6 : attribut statique": [[45, "index-mathdef-0-18"], [160, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : type modifiable (ou mutable)": [[45, "index-mathdef-0-19"], [175, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : variable globale": [[45, "index-mathdef-0-20"], [174, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D7 : h\u00e9ritage": [[45, "index-mathdef-0-21"], [160, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D7 : liste": [[45, "index-mathdef-0-22"], [175, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D8 : dictionnaire": [[45, "index-mathdef-0-23"], [175, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D8 : surcharge": [[45, "index-mathdef-0-24"], [160, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D9 : set": [[45, "index-mathdef-0-25"], [175, "indexmathe-D\u00e9finition8"]], "Figures": [[45, "figures"]], "Probl\u00e8mes": [[45, "problemes"], [51, "problemes"], [51, null]], "Syntaxe": [[45, "syntaxe"], [160, "syntaxe"], [183, "syntaxe"]], "Syntaxe S1 : Attraper une exception": [[45, "index-mathdef-3-26"], [163, "indexmathe-Syntaxe0"]], "Syntaxe S1 : D\u00e9claration d\u2019une classe": [[45, "index-mathdef-3-27"], [160, "indexmathe-Syntaxe0"]], "Syntaxe S1 : Tests": [[45, "index-mathdef-3-28"], [174, "indexmathe-Syntaxe0"]], "Syntaxe S1 : importer un module (1)": [[45, "index-mathdef-3-29"], [178, "indexmathe-Syntaxe0"]], "Syntaxe S10 : D\u00e9claration d\u2019un attribut statique": [[45, "index-mathdef-3-30"], [160, "indexmathe-Syntaxe9"]], "Syntaxe S11 : D\u00e9claration d\u2019une propri\u00e9t\u00e9": [[45, "index-mathdef-3-31"], [160, "indexmathe-Syntaxe10"]], "Syntaxe S12 : D\u00e9claration d\u2019une propri\u00e9t\u00e9 (2)": [[45, "index-mathdef-3-32"], [160, "indexmathe-Syntaxe11"]], "Syntaxe S13 : D\u00e9claration de l\u2019op\u00e9rateur __copy__": [[45, "index-mathdef-3-33"], [160, "indexmathe-Syntaxe12"]], "Syntaxe S14 : D\u00e9claration d\u2019attributs fig\u00e9s": [[45, "index-mathdef-3-34"], [160, "indexmathe-Syntaxe13"]], "Syntaxe S15 : H\u00e9ritage": [[45, "index-mathdef-3-35"], [160, "indexmathe-Syntaxe14"]], "Syntaxe S16 : Surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[45, "index-mathdef-3-36"], [160, "indexmathe-Syntaxe15"]], "Syntaxe S2 : Instanciation d\u2019une classe": [[45, "index-mathdef-3-37"], [160, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Instruction pass": [[45, "index-mathdef-3-38"], [174, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Lever une exception": [[45, "index-mathdef-3-39"], [163, "indexmathe-Syntaxe1"]], "Syntaxe S2 : importer un module (2)": [[45, "index-mathdef-3-40"], [178, "indexmathe-Syntaxe1"]], "Syntaxe S3 : Boucle while": [[45, "index-mathdef-3-41"], [174, "indexmathe-Syntaxe2"]], "Syntaxe S3 : D\u00e9claration d\u2019une m\u00e9thode": [[45, "index-mathdef-3-42"], [160, "indexmathe-Syntaxe2"]], "Syntaxe S3 : importer un module (3)": [[45, "index-mathdef-3-43"], [178, "indexmathe-Syntaxe2"]], "Syntaxe S4 : Appel d\u2019une m\u00e9thode": [[45, "index-mathdef-3-44"], [160, "indexmathe-Syntaxe3"]], "Syntaxe S4 : Boucle for": [[45, "index-mathdef-3-45"], [174, "indexmathe-Syntaxe3"]], "Syntaxe S5 : D\u00e9claration d\u2019un attribut": [[45, "index-mathdef-3-46"], [160, "indexmathe-Syntaxe4"]], "Syntaxe S5 : Liste en extension": [[45, "index-mathdef-3-47"], [174, "indexmathe-Syntaxe4"]], "Syntaxe S6 : D\u00e9claration d\u2019un constructeur": [[45, "index-mathdef-3-48"], [160, "indexmathe-Syntaxe5"]], "Syntaxe S6 : D\u00e9claration d\u2019une fonction": [[45, "index-mathdef-3-49"], [174, "indexmathe-Syntaxe5"]], "Syntaxe S7 : Appel d\u2019un constructeur": [[45, "index-mathdef-3-50"], [160, "indexmathe-Syntaxe6"]], "Syntaxe S7 : Appel d\u2019une fonction": [[45, "index-mathdef-3-51"], [174, "indexmathe-Syntaxe6"]], "Syntaxe S8 : D\u00e9claration de l\u2019op\u00e9rateur __str__": [[45, "index-mathdef-3-52"], [160, "indexmathe-Syntaxe7"]], "Syntaxe S8 : Valeurs par d\u00e9faut": [[45, "index-mathdef-3-53"], [174, "indexmathe-Syntaxe7"]], "Syntaxe S9 : D\u00e9claration d\u2019une m\u00e9thode statique": [[45, "index-mathdef-3-54"], [160, "indexmathe-Syntaxe8"]], "Syntaxe S9 : Nombre ind\u00e9fini de param\u00e8tres": [[45, "index-mathdef-3-55"], [174, "indexmathe-Syntaxe8"]], "Tables": [[45, "tables"]], "Langage Python": [[46, "langage-python"]], "numpy": [[46, "numpy"]], "Introduction": [[49, "introduction"], [52, "Introduction"], [168, "introduction"]], "Installation de Python": [[49, "installation-de-python"]], "Installation d\u2019extensions ou modules ou packages": [[49, "installation-d-extensions-ou-modules-ou-packages"]], "Accents": [[49, "accents"]], "Trois concepts, s\u00e9quence, test, boucle": [[49, "trois-concepts-sequence-test-boucle"]], "Algorithmes": [[49, "algorithmes"], [51, "algorithmes"], [51, null], [51, null], [96, "algorithmes"]], "Fichier ou notebook": [[49, "fichier-ou-notebook"]], "Algorithmes de streaming, BJKST": [[52, "Algorithmes-de-streaming,-BJKST"]], "Estimer le nombre d\u2019\u00e9l\u00e9ments distincts: l\u2019algorithme BJKST": [[52, "Estimer-le-nombre-d'\u00e9l\u00e9ments-distincts:-l'algorithme-BJKST"]], "Universal hashing": [[52, "Universal-hashing"]], "Collisions": [[52, "Collisions"]], "Algorithme BJKST": [[52, "Algorithme-BJKST"]], "R\u00e9sultats num\u00e9riques": [[52, "R\u00e9sultats-num\u00e9riques"]], "Temps de calcul en fonction de la taille du stream": [[52, "Temps-de-calcul-en-fonction-de-la-taille-du-stream"]], "Un peu plus sur la pr\u00e9cision de l\u2019estimateur": [[52, "Un-peu-plus-sur-la-pr\u00e9cision-de-l'estimateur"]], "h_1 et h_2 \u00e9gales \u00e0 l\u2019identit\u00e9": [[52, "h_1-et-h_2-\u00e9gales-\u00e0-l'identit\u00e9"]], "cas o\u00f9 la taille du hash est petite": [[52, "cas-o\u00f9-la-taille-du-hash-est-petite"]], "cas o\u00f9 la taille de hash est plus grande": [[52, "cas-o\u00f9-la-taille-de-hash-est-plus-grande"]], "la taille de hash d\u00e9pend de la pr\u00e9cision \\epsilon": [[52, "la-taille-de-hash-d\u00e9pend-de-la-pr\u00e9cision-\\epsilon"]], "Graphe et Composantes connexes": [[53, "Graphe-et-Composantes-connexes"]], "Q1 : construire une matrice d\u2019adjacence sym\u00e9trique al\u00e9atoire": [[53, "Q1-:-construire-une-matrice-d'adjacence-sym\u00e9trique-al\u00e9atoire"], [53, "id1"]], "Q2 : calculer les valeurs propres et les trier par ordre croissant": [[53, "Q2-:-calculer-les-valeurs-propres-et-les-trier-par-ordre-croissant"], [53, "id2"]], "Q3 : que fait l\u2019algorithme suivant": [[53, "Q3-:-que-fait-l'algorithme-suivant"], [53, "id3"]], "Q4 : construire un algorithme qui retourne les composantes connexes d\u2019un graphe": [[53, "Q4-:-construire-un-algorithme-qui-retourne-les-composantes-connexes-d'un-graphe"], [53, "id4"]], "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.": [[54, "Calculer-le-nombre-de-fa\u00e7ons-de-monter-une-\u00e9chelle."]], "Enonc\u00e9s": [[54, "Enonc\u00e9s"], [68, "Enonc\u00e9s"], [71, "enonces"], [96, null], [98, null]], "Enonc\u00e9 1": [[54, "Enonc\u00e9-1"], [72, "Enonc\u00e9-1"], [73, "Enonc\u00e9-1"], [74, "Enonc\u00e9-1"], [75, "Enonc\u00e9-1"], [76, "Enonc\u00e9-1"], [77, "Enonc\u00e9-1"]], "Enonc\u00e9 2": [[54, "Enonc\u00e9-2"], [72, "Enonc\u00e9-2"], [73, "Enonc\u00e9-2"], [74, "Enonc\u00e9-2"], [76, "Enonc\u00e9-2"], [77, "Enonc\u00e9-2"]], "Enonc\u00e9 3": [[54, "Enonc\u00e9-3"], [74, "Enonc\u00e9-3"]], "Solutions": [[54, "Solutions"], [68, "Solutions"]], "Solution au probl\u00e8me 1": [[54, "Solution-au-probl\u00e8me-1"], [68, "Solution-au-probl\u00e8me-1"]], "Solution au probl\u00e8me 2": [[54, "Solution-au-probl\u00e8me-2"]], "Solution au probl\u00e8me 3": [[54, "Solution-au-probl\u00e8me-3"]], "Distance d\u2019\u00e9dition": [[55, "Distance-d'\u00e9dition"], [56, "Distance-d'\u00e9dition"]], "Q1 : Distance simple entre deux mots de m\u00eame longueur": [[55, "Q1-:-Distance-simple-entre-deux-mots-de-m\u00eame-longueur"], [55, "id1"]], "Q2 : Distance simple entre deux mots de longueur diff\u00e9rente": [[55, "Q2-:-Distance-simple-entre-deux-mots-de-longueur-diff\u00e9rente"], [55, "id2"]], "Q3 : Distance alambiqu\u00e9e\u2026": [[55, "Q3-:-Distance-alambiqu\u00e9e..."], [55, "id3"]], "Q4 : impl\u00e9menter l\u2019algorithme de la page wikipedia": [[55, "Q4-:-impl\u00e9menter-l'algorithme-de-la-page-wikipedia"], [55, "id4"]], "Distance entre deux mots de m\u00eame longueur et tests unitaires": [[56, "Distance-entre-deux-mots-de-m\u00eame-longueur-et-tests-unitaires"]], "Distance na\u00efve": [[56, "Distance-na\u00efve"]], "Distance tr\u00e8s na\u00efve": [[56, "Distance-tr\u00e8s-na\u00efve"]], "Distance entre deux mots de longueur diff\u00e9rente mais pas si diff\u00e9rente": [[56, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente-mais-pas-si-diff\u00e9rente"]], "Distance entre deux mots de longueur diff\u00e9rente": [[56, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente"]], "Test unitaires": [[56, "Test-unitaires"]], "m et n sont tr\u00e8s proches, et alors ?": [[56, "m-et-n-sont-tr\u00e8s-proches,-et-alors-?"]], "ff, f, ph, f\u2026 plus personne ne sait \u00e9crire": [[56, "ff,-f,-ph,-f...-plus-personne-ne-sait-\u00e9crire"]], "La sous-s\u00e9quence de plus grande somme": [[58, "La-sous-s\u00e9quence-de-plus-grande-somme"]], "Solution na\u00efve": [[58, "Solution-na\u00efve"], [132, "Solution-na\u00efve"]], "Solution plus rapide": [[58, "Solution-plus-rapide"]], "Solution dichotomique": [[58, "Solution-dichotomique"]], "Solution lin\u00e9aire": [[58, "Solution-lin\u00e9aire"]], "Comparaison des temps de calcul": [[58, "Comparaison-des-temps-de-calcul"]], "Application": [[58, "Application"]], "Graphes al\u00e9atoires": [[59, "Graphes-al\u00e9atoires"]], "Graphe al\u00e9atoire - matrice d\u2019adjacence al\u00e9atoire": [[59, "Graphe-al\u00e9atoire---matrice-d'adjacence-al\u00e9atoire"]], "Vocabulaire li\u00e9 aux graphes": [[59, "Vocabulaire-li\u00e9-aux-graphes"]], "Apart\u00e9 : matrice d\u2019adjacence \u00e0 la puissance n": [[59, "Apart\u00e9-:-matrice-d'adjacence-\u00e0-la-puissance-n"]], "Trouver le nombre de composantes connexes": [[59, "Trouver-le-nombre-de-composantes-connexes"]], "G\u00e9n\u00e9ration d\u2019un graphe al\u00e9atoire": [[59, "G\u00e9n\u00e9ration-d'un-graphe-al\u00e9atoire"]], "Version 1": [[59, "Version-1"]], "Version 2": [[59, "Version-2"]], "Simulation COVID": [[60, "Simulation-COVID"]], "Mod\u00e8le SIRD": [[60, "Mod\u00e8le-SIRD"]], "Q0 : une petite fonction pour dessiner": [[60, "Q0-:-une-petite-fonction-pour-dessiner"]], "Q1 : \u00e9crire une fonction qui calcule la propagation": [[60, "Q1-:-\u00e9crire-une-fonction-qui-calcule-la-propagation"]], "Q2 : on veut estimer les param\u00e8tres du mod\u00e8le, une fonction d\u2019erreur ?": [[60, "Q2-:-on-veut-estimer-les-param\u00e8tres-du-mod\u00e8le,-une-fonction-d'erreur-?"]], "Q3 : optimisation": [[60, "Q3-:-optimisation"]], "Q4 : dessiner les r\u00e9sultats": [[60, "Q4-:-dessiner-les-r\u00e9sultats"]], "Q5 : v\u00e9rifier que cela marche sur des donn\u00e9es synth\u00e9tiques": [[60, "Q5-:-v\u00e9rifier-que-cela-marche-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Q6 : sur des donn\u00e9es r\u00e9elles": [[60, "Q6-:-sur-des-donn\u00e9es-r\u00e9elles"], [60, "id1"]], "Q1 : propagation": [[60, "Q1-:-propagation"]], "Q2 : s\u00e9rie cumul\u00e9es et fonction erreur": [[60, "Q2-:-s\u00e9rie-cumul\u00e9es-et-fonction-erreur"]], "Q3, Q4, Q5 : optimisation sur des donn\u00e9es synth\u00e9tiques": [[60, "Q3,-Q4,-Q5-:-optimisation-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)": [[61, "Mod\u00e8le-\u00e9pid\u00e9miologique-(SIRD)"]], "Simulation": [[61, "Simulation"], [96, null]], "Visualisation": [[61, "Visualisation"], [67, "Visualisation"]], "Estimation des param\u00e8tres": [[61, "Estimation-des-param\u00e8tres"]], "Premi\u00e8re id\u00e9e": [[61, "Premi\u00e8re-id\u00e9e"], [135, "Premi\u00e8re-id\u00e9e"]], "Seconde id\u00e9e : probl\u00e8mes d\u2019optimisation": [[61, "Seconde-id\u00e9e-:-probl\u00e8mes-d'optimisation"]], "Les k premiers \u00e9l\u00e9ments (top k)": [[63, "Les-k-premiers-\u00e9l\u00e9ments-(top-k)"]], "Exercice 1 : on trie tout et on prend les k plus petit": [[63, "Exercice-1-:-on-trie-tout-et-on-prend-les-k-plus-petit"], [63, "id1"]], "Exercice 2 : version plus rapide au choix": [[63, "Exercice-2-:-version-plus-rapide-au-choix"], [63, "id2"]], "Exercice 3 : algorithme de s\u00e9lection": [[63, "Exercice-3-:-algorithme-de-s\u00e9lection"], [63, "id3"]], "Exercice 4 : utiliser la fonction perf_counter pour comparer les vitessses de chaque solution": [[63, "Exercice-4-:-utiliser-la-fonction-perf_counter-pour-comparer-les-vitessses-de-chaque-solution"], [63, "id4"]], "TSP - Traveling Salesman Problem": [[64, "TSP---Traveling-Salesman-Problem"]], "Q1 : choisir une permutation al\u00e9atoire des villes et calculer la distance du chemin qui les relie dans cet ordre": [[64, "Q1-:-choisir-une-permutation-al\u00e9atoire-des-villes-et-calculer-la-distance-du-chemin-qui-les-relie-dans-cet-ordre"]], "Q2 : tirer deux villes al\u00e9atoirement, les inverser, garder la permutation si elle am\u00e9liore la distance": [[64, "Q2-:-tirer-deux-villes-al\u00e9atoirement,-les-inverser,-garder-la-permutation-si-elle-am\u00e9liore-la-distance"]], "Q3 : choisir deux villes al\u00e9atoirement, permuter une des deux moiti\u00e9s\u2026": [[64, "Q3-:-choisir-deux-villes-al\u00e9atoirement,-permuter-une-des-deux-moiti\u00e9s..."]], "Q4 : tester toutes les permutations possibles\u2026 je plaisante\u2026": [[64, "Q4-:-tester-toutes-les-permutations-possibles...-je-plaisante..."]], "Calculer x**n le plus rapidement possible": [[65, "Calculer-x**n-le-plus-rapidement-possible"]], "Solution": [[65, "Solution"]], "Produit matriciel avec une matrice creuse": [[66, "Produit-matriciel-avec-une-matrice-creuse"]], "Matrice creuse et dictionnaire": [[66, "Matrice-creuse-et-dictionnaire"]], "Calcul de la dimension": [[66, "Calcul-de-la-dimension"]], "Produit matriciel classique": [[66, "Produit-matriciel-classique"]], "Produit matriciel plus \u00e9l\u00e9gant": [[66, "Produit-matriciel-plus-\u00e9l\u00e9gant"]], "Mesure du temps": [[66, "Mesure-du-temps"], [143, "Mesure-du-temps"]], "Dictionnaires de dictionnaires": [[66, "Dictionnaires-de-dictionnaires"]], "Apart\u00e9 sur le voyageur de commerce": [[67, "Apart\u00e9-sur-le-voyageur-de-commerce"]], "Tirer des points al\u00e9atoirement et les afficher": [[67, "Tirer-des-points-al\u00e9atoirement-et-les-afficher"]], "Distance d\u2019un chemin": [[67, "Distance-d'un-chemin"]], "Parcourir toutes les permutations": [[67, "Parcourir-toutes-les-permutations"]], "Module tqdm": [[67, "Module-tqdm"]], "Retournement": [[67, "Retournement"]], "D\u00e9coder du Morse sans espaces": [[68, "D\u00e9coder-du-Morse-sans-espaces"]], "Exercice 1 : Traduire un texte Morse qui ne contient pas d\u2019espace": [[68, "Exercice-1-:-Traduire-un-texte-Morse-qui-ne-contient-pas-d'espace"]], "Exercice 2 : calculer l\u2019alphabet qui minimise une transcription": [[68, "Exercice-2-:-calculer-l'alphabet-qui-minimise-une-transcription"]], "Solution au probl\u00e8me 2 avec des expressions r\u00e9guli\u00e8res": [[68, "Solution-au-probl\u00e8me-2-avec-des-expressions-r\u00e9guli\u00e8res"]], "Solution au probl\u00e8me 2 : toutes les interpr\u00e9tations": [[68, "Solution-au-probl\u00e8me-2-:-toutes-les-interpr\u00e9tations"]], "Parcourir les rues de Paris": [[69, "Parcourir-les-rues-de-Paris"]], "Les donn\u00e9es": [[69, "Les-donn\u00e9es"], [130, "Les-donn\u00e9es"]], "Une premi\u00e8re solution au premier probl\u00e8me": [[69, "Une-premi\u00e8re-solution-au-premier-probl\u00e8me"]], "Etape 1 : la matrice Bellman": [[69, "Etape-1-:-la-matrice-Bellman"]], "Kruskall": [[69, "Kruskall"]], "Chemin Eul\u00e9rien": [[69, "Chemin-Eul\u00e9rien"]], "Algorithme optimal": [[69, "Algorithme-optimal"]], "Variantes": [[69, "Variantes"]], "Sens interdit et gaphe orient\u00e9": [[69, "Sens-interdit-et-gaphe-orient\u00e9"]], "Windy postman problem": [[69, "Windy-postman-problem"]], "Casser le code de Vigen\u00e8re": [[70, "Casser-le-code-de-Vigen\u00e8re"]], "Exercices minut\u00e9s": [[71, "exercices-minutes"]], "S\u00e9ances not\u00e9es": [[71, "seances-notees"]], "Corrections": [[71, "corrections"]], "Exercices courts": [[71, "exercices-courts"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014": [[72, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014": [[73, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-10-octobre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014": [[74, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"], [75, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"]], "Q5": [[74, "Q5"], [74, "id5"], [74, "id10"], [75, "Q5"], [79, "Q5"], [82, "Q5"], [83, "Q5"], [83, "id2"], [84, "Q5"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015": [[76, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2015"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015": [[77, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-6-novembre-2015"]], "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)": [[78, "1A.e---TD-not\u00e9,-27-novembre-2012-(\u00e9l\u00e9ments-de-code-pour-le-coloriage)"]], "construction de la spirale": [[78, "construction-de-la-spirale"], [79, "construction-de-la-spirale"]], "dessin de la spirale": [[78, "dessin-de-la-spirale"], [79, "dessin-de-la-spirale"]], "ajouter du rouge": [[78, "ajouter-du-rouge"]], "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)": [[79, "1A.e---TD-not\u00e9,-27-novembre-2012-(coloriage,-correction)"]], "version 1": [[79, "version-1"], [79, "id1"]], "version 4": [[79, "version-4"], [79, "id2"]], "Q4 : spirale": [[79, "Q4-:-spirale"]], "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014": [[80, "1A.e---TD-not\u00e9,-5-d\u00e9cembre-2014"]], "Exercice 1": [[80, "Exercice-1"], [83, "Exercice-1"], [84, "Exercice-1"], [140, "Exercice-1"], [141, "Exercice-1"], [130, "Exercice-1"], [131, "Exercice-1"]], "Exercice 2": [[80, "Exercice-2"], [83, "Exercice-2"], [91, "Exercice-2"], [141, "Exercice-2"], [130, "Exercice-2"], [131, "Exercice-2"]], "Exercice 3": [[80, "Exercice-3"], [130, "Exercice-3"], [131, "Exercice-3"]], "Exercice 4": [[80, "Exercice-4"], [130, "Exercice-4"], [131, "Exercice-4"]], "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)": [[81, "1A.e---TD-not\u00e9-2015-rattrapage-(\u00e9nonc\u00e9,-\u00e9crit-et-oral)"]], "Question 1": [[81, "Question-1"]], "Question 2": [[81, "Question-2"]], "Question 3": [[81, "Question-3"]], "Question 4": [[81, "Question-4"]], "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015": [[82, "1A.e---TD-not\u00e9,-11-d\u00e9cembre-2015"]], "Exercice 1 : Louer ou acheter un appartement ?": [[82, "Exercice-1-:-Louer-ou-acheter-un-appartement-?"]], "Q6": [[82, "Q6"], [83, "Q6"], [83, "id3"], [84, "Q6"]], "Q7 exo 1": [[82, "Q7-exo-1"]], "Q7 exo 2": [[82, "Q7-exo-2"]], "Q8": [[82, "Q8"], [83, "Q8"], [83, "id5"], [84, "Q8"]], "Q9 version dichotomique de Q4": [[82, "Q9-version-dichotomique-de-Q4"]], "Exercice 2 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[82, "Exercice-2-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "Exercice 3 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[82, "Exercice-3-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016": [[83, "1A.e---TD-not\u00e9,-16-d\u00e9cembre-2016"]], "Q7": [[83, "Q7"], [83, "id4"], [84, "Q7"], [109, "Q7"]], "Q9": [[83, "Q9"], [83, "id6"], [84, "Q9"]], "Q10": [[83, "Q10"], [83, "id7"], [84, "Q10"], [88, "Q10"]], "Q1 - Q2 - Q3": [[83, "Q1---Q2---Q3"]], "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017": [[84, "1A.e---TD-not\u00e9,-21-f\u00e9vrier-2017"]], "Quelques explications et d\u00e9monstrations": [[84, "Quelques-explications-et-d\u00e9monstrations"]], "Quelques commentaires sur le code": [[84, "Quelques-commentaires-sur-le-code"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)": [[85, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(1)"]], "Q1 - \u00e9chantillon al\u00e9atoire": [[85, "Q1---\u00e9chantillon-al\u00e9atoire"], [86, "Q1---\u00e9chantillon-al\u00e9atoire"], [87, "Q1---\u00e9chantillon-al\u00e9atoire"], [88, "Q1---\u00e9chantillon-al\u00e9atoire"]], "Q1 - dessiner le nuage de points - donn\u00e9e": [[85, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"], [86, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"]], "Q2 - tri": [[85, "Q2---tri"], [86, "Q2---tri"]], "Q3 - moyenne": [[85, "Q3---moyenne"], [86, "Q3---moyenne"], [87, "Q3---moyenne"], [88, "Q3---moyenne"]], "Q4 - distance": [[85, "Q4---distance"], [86, "Q4---distance"]], "Q5 - fonction comme param\u00e8tre": [[85, "Q5---fonction-comme-param\u00e8tre"], [86, "Q5---fonction-comme-param\u00e8tre"]], "Q6 - optimiser": [[85, "Q6---optimiser"], [86, "Q6---optimiser"]], "Q7 - optimisation encore": [[85, "Q7---optimisation-encore"], [86, "Q7---optimisation-encore"]], "Q8 - fonction r\u00e9cursive": [[85, "Q8---fonction-r\u00e9cursive"], [86, "Q8---fonction-r\u00e9cursive"]], "Q9 - co\u00fbt": [[85, "Q9---co\u00fbt"]], "Q10 - autre nuage de points": [[85, "Q10---autre-nuage-de-points"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)": [[86, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(2)"]], "Q9 - seuil": [[86, "Q9---seuil"]], "Q10 - co\u00fbt": [[86, "Q10---co\u00fbt"]], "1A.e - Enonc\u00e9 23 octobre 2018 (1)": [[87, "1A.e---Enonc\u00e9-23-octobre-2018-(1)"]], "Q2 - matrice m1": [[87, "Q2---matrice-m1"], [88, "Q2---matrice-m1"]], "Q4 - matrice m2": [[87, "Q4---matrice-m2"], [88, "Q4---matrice-m2"]], "Q5 - matrice m3": [[87, "Q5---matrice-m3"]], "Q6 - norme": [[87, "Q6---norme"]], "Q7 - r\u00e9p\u00e9tition": [[87, "Q7---r\u00e9p\u00e9tition"]], "Q8 - plus de valeurs manquantes": [[87, "Q8---plus-de-valeurs-manquantes"]], "Q9 - 1 valeur manquante ?": [[87, "Q9---1-valeur-manquante-?"]], "Q10 - plus de deux colonnes ?": [[87, "Q10---plus-de-deux-colonnes-?"]], "1A.e - Enonc\u00e9 23 octobre 2018 (2)": [[88, "1A.e---Enonc\u00e9-23-octobre-2018-(2)"]], "Q5 - x le plus proche": [[88, "Q5---x-le-plus-proche"]], "Q6 - matrice m3": [[88, "Q6---matrice-m3"]], "Q7 - norme": [[88, "Q7---norme"]], "Q8 - r\u00e9p\u00e9tition": [[88, "Q8---r\u00e9p\u00e9tition"]], "Q9 - plus de valeurs manquantes": [[88, "Q9---plus-de-valeurs-manquantes"]], "1A.e - Enonc\u00e9 22 octobre 2019 (1)": [[89, "1A.e---Enonc\u00e9-22-octobre-2019-(1)"]], "Q1 - distance_table": [[89, "Q1---distance_table"], [90, "Q1---distance_table"]], "Q2 - distance_bord": [[89, "Q2---distance_bord"], [90, "Q2---distance_bord"]], "Q3 - table_alea": [[89, "Q3---table_alea"], [90, "Q3---table_alea"]], "Q4 - n_table_alea": [[89, "Q4---n_table_alea"], [90, "Q4---n_table_alea"]], "Q5 - table_proches": [[89, "Q5---table_proches"], [90, "Q5---table_proches"]], "Q6 - distance_n_tables_alea": [[89, "Q6---distance_n_tables_alea"], [90, "Q6---distance_n_tables_alea"]], "Q7 - meilleur_table_alea": [[89, "Q7---meilleur_table_alea"], [90, "Q7---meilleur_table_alea"]], "Q8 - r\u00e9sultat num\u00e9rique": [[89, "Q8---r\u00e9sultat-num\u00e9rique"], [90, "Q8---r\u00e9sultat-num\u00e9rique"]], "Q9 - plot_tables": [[89, "Q9---plot_tables"], [90, "Q9---plot_tables"]], "Q10 \u2026": [[89, "Q10-..."], [90, "Q10-..."]], "Q10 - Vorono\u00ef": [[89, "Q10---Vorono\u00ef"], [90, "Q10---Vorono\u00ef"]], "Q10 - KMeans": [[89, "Q10---KMeans"], [90, "Q10---KMeans"]], "1A.e - Enonc\u00e9 22 octobre 2019 (2)": [[90, "1A.e---Enonc\u00e9-22-octobre-2019-(2)"]], "1A - Enonc\u00e9 24 novembre 2020": [[91, "1A---Enonc\u00e9-24-novembre-2020"]], "Exercice 1 : gu\u00e9rison": [[91, "Exercice-1-:-gu\u00e9rison"]], "Q2 : dur\u00e9e de gu\u00e9rison": [[91, "Q2-:-dur\u00e9e-de-gu\u00e9rison"]], "Q3 : estimateur Kaplan-Meier (1)": [[91, "Q3-:-estimateur-Kaplan-Meier-(1)"]], "Q4 : courbe de Kaplan-Meier": [[91, "Q4-:-courbe-de-Kaplan-Meier"]], "Q5 : graphe": [[91, "Q5-:-graphe"]], "Q6 : application aux donn\u00e9es publiques": [[91, "Q6-:-application-aux-donn\u00e9es-publiques"]], "Q1 : t + 1": [[91, "Q1-:-t-+-1"]], "Q2 : apr\u00e8s T it\u00e9ration": [[91, "Q2-:-apr\u00e8s-T-it\u00e9ration"]], "Q3 : vaccin": [[91, "Q3-:-vaccin"]], "Q4 : apr\u00e8s T heures": [[91, "Q4-:-apr\u00e8s-T-heures"]], "Q5 : variation": [[91, "Q5-:-variation"]], "1A - Enonc\u00e9 3 novembre 2021": [[92, "1A---Enonc\u00e9-3-novembre-2021"]], "Exercice 1 : multiplication de matrices": [[92, "Exercice-1-:-multiplication-de-matrices"]], "Q1 : Pourquoi (m1 @ m2) @ m3 est-il plus lent que m1 @ (m2 @ m3) ? (2 points)": [[92, "Q1-:-Pourquoi-(m1-@-m2)-@-m3-est-il-plus-lent-que-m1-@-(m2-@-m3)-?-(2-points)"]], "Q2 : Ecrire une fonction qui calcule le nombre d\u2019operations dans une multiplication de deux matrices (2 points)": [[92, "Q2-:-Ecrire-une-fonction-qui-calcule-le-nombre-d'operations-dans-une-multiplication-de-deux-matrices-(2-points)"]], "Q3 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de deux matrices et la meilleure option (2 points)": [[92, "Q3-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-deux-matrices-et-la-meilleure-option-(2-points)"]], "Q4 : Ecrire une fonction qui effectue le produit de trois matrices le plus rapidement possible (2 points)": [[92, "Q4-:-Ecrire-une-fonction-qui-effectue-le-produit-de-trois-matrices-le-plus-rapidement-possible-(2-points)"]], "Q5 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps (2 points)": [[92, "Q5-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-(2-points)"]], "Q6 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de 4 matrices et la meilleure option (3 points)": [[92, "Q6-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-4-matrices-et-la-meilleure-option-(3-points)"]], "Q7 : Ecrire une fonction qui effectue le produit de 4 matrices le plus rapidement possible (3 points)": [[92, "Q7-:-Ecrire-une-fonction-qui-effectue-le-produit-de-4-matrices-le-plus-rapidement-possible-(3-points)"]], "Q8 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps et la matrice m4. (2 points)": [[92, "Q8-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-et-la-matrice-m4.-(2-points)"]], "Q9 : On se penche sur le cas \u00e0 une multiplication de N matrices, combien y a-t-il de multiplications de 2 matrices ? (2 points)": [[92, "Q9-:-On-se-penche-sur-le-cas-\u00e0-une-multiplication-de-N-matrices,-combien-y-a-t-il-de-multiplications-de-2-matrices-?-(2-points)"]], "Q10 : R\u00e9soudre l\u2019optimisation de multiplication de N matrices.": [[92, "Q10-:-R\u00e9soudre-l'optimisation-de-multiplication-de-N-matrices."]], "Remarques lors de la correction": [[92, "Remarques-lors-de-la-correction"]], "1A - Enonc\u00e9 15 novembre 2021 - rattrapage": [[93, "1A---Enonc\u00e9-15-novembre-2021---rattrapage"]], "Exercice 1 : optimisation de volume": [[93, "Exercice-1-:-optimisation-de-volume"]], "Q1 : \u00e9crire une fonction qui calcule l\u2019aire d\u2019une surface": [[93, "Q1-:-\u00e9crire-une-fonction-qui-calcule-l'aire-d'une-surface"]], "Q2 : \u00e9crire une fonction qui calcule le volume d\u2019une brique": [[93, "Q2-:-\u00e9crire-une-fonction-qui-calcule-le-volume-d'une-brique"]], "Q3 : \u00e9crire une fonction qui retourne la somme des surfaces des faces d\u2019une brique": [[93, "Q3-:-\u00e9crire-une-fonction-qui-retourne-la-somme-des-surfaces-des-faces-d'une-brique"]], "Q4 : la brique optimale": [[93, "Q4-:-la-brique-optimale"]], "Q5 : on inclut la surface n\u00e9cessaire pour coller les extremit\u00e9s": [[93, "Q5-:-on-inclut-la-surface-n\u00e9cessaire-pour-coller-les-extremit\u00e9s"]], "Q6 : une bouteille de deux litres deux fois plus large": [[93, "Q6-:-une-bouteille-de-deux-litres-deux-fois-plus-large"]], "Q7 : petite brique en bleue, grosse brique en rouge": [[93, "Q7-:-petite-brique-en-bleue,-grosse-brique-en-rouge"]], "1A - Enonc\u00e9 3 mars 2022- rattrapage": [[94, "1A---Enonc\u00e9-3-mars-2022--rattrapage"]], "Dessin d\u2019une liste de segments": [[94, "Dessin-d'une-liste-de-segments"]], "Distance d\u2019un segment": [[94, "Distance-d'un-segment"]], "Calcul du segment suivant": [[94, "Calcul-du-segment-suivant"]], "Calcul des trois segments suivants": [[94, "Calcul-des-trois-segments-suivants"]], "Construction de tous les niveaux de l\u2019arbre": [[94, "Construction-de-tous-les-niveaux-de-l'arbre"]], "Construction de trois segments al\u00e9atoires": [[94, "Construction-de-trois-segments-al\u00e9atoires"]], "Construction d\u2019un arbre al\u00e9atoire": [[94, "Construction-d'un-arbre-al\u00e9atoire"]], "1A - Enonc\u00e9 26 octobre 2022": [[95, "1A---Enonc\u00e9-26-octobre-2022"]], "Exercice 1 : calcul de distances": [[95, "Exercice-1-:-calcul-de-distances"]], "Q1 : tirer deux matrices al\u00e9atoires pour X et Y, de tailles diff\u00e9rentes": [[95, "Q1-:-tirer-deux-matrices-al\u00e9atoires-pour-X-et-Y,-de-tailles-diff\u00e9rentes"]], "Q2 : calculer tous les distances entre X et Y": [[95, "Q2-:-calculer-tous-les-distances-entre-X-et-Y"]], "Q3 : \u00e9crire un test unitaire qui v\u00e9rifie le r\u00e9sultat lorsque X est la matrice identit\u00e9 2x2": [[95, "Q3-:-\u00e9crire-un-test-unitaire-qui-v\u00e9rifie-le-r\u00e9sultat-lorsque-X-est-la-matrice-identit\u00e9-2x2"]], "Q4 : quel est le co\u00fbt de l\u2019algorithme en fonction des dimensions de X et Y ?": [[95, "Q4-:-quel-est-le-co\u00fbt-de-l'algorithme-en-fonction-des-dimensions-de-X-et-Y-?"]], "Q5 : Ecrire une fonction qui retourne l\u2019indice du m\u00e9decin le plus proche pour chaque rue": [[95, "Q5-:-Ecrire-une-fonction-qui-retourne-l'indice-du-m\u00e9decin-le-plus-proche-pour-chaque-rue"]], "Q6 : on cr\u00e9e une grille 10x10 pour quadriller l\u2019espace. Ecrire une fonction qui calcule les coordonn\u00e9es de la grille pour un point donn\u00e9.": [[95, "Q6-:-on-cr\u00e9e-une-grille-10x10-pour-quadriller-l'espace.-Ecrire-une-fonction-qui-calcule-les-coordonn\u00e9es-de-la-grille-pour-un-point-donn\u00e9."]], "Q7 : \u00e9crire une fonction qui cr\u00e9\u00e9 un dictionaire { case_grille : indices }.": [[95, "Q7-:-\u00e9crire-une-fonction-qui-cr\u00e9\u00e9-un-dictionaire-{-case_grille-:-indices-}."]], "Q8 : modifier la fonction pairwise_distance pour ne calculer que les distances des points dans la m\u00eame case": [[95, "Q8-:-modifier-la-fonction-pairwise_distance-pour-ne-calculer-que-les-distances-des-points-dans-la-m\u00eame-case"]], "Q9 : Mesurer le temps pour deux matrices 1000x2, 100x2 ?": [[95, "Q9-:-Mesurer-le-temps-pour-deux-matrices-1000x2,-100x2-?"]], "Q10 : le r\u00e9sultat est utilis\u00e9 pour retourner le m\u00e9decin le plus proche ? Avec la seconde fonction, o\u00f9 les r\u00e9sultats sont-ils faux et que faire pour corriger ?": [[95, "Q10-:-le-r\u00e9sultat-est-utilis\u00e9-pour-retourner-le-m\u00e9decin-le-plus-proche-?-Avec-la-seconde-fonction,-o\u00f9-les-r\u00e9sultats-sont-ils-faux-et-que-faire-pour-corriger-?"]], "S\u00e9ances minut\u00e9es": [[97, "seances-minutees"]], "2048 et les classes": [[103, "2048-et-les-classes"]], "D\u00e9composition du probl\u00e8me": [[103, "D\u00e9composition-du-probl\u00e8me"]], "0 - Cr\u00e9ation de la matrice de jeu": [[103, "0---Cr\u00e9ation-de-la-matrice-de-jeu"]], "2 - D\u00e9termination de toutes les cases libres": [[103, "2---D\u00e9termination-de-toutes-les-cases-libres"]], "1 - Ajout d\u2019un nombre al\u00e9atoire dans {2,4} \u00e0 une position al\u00e9atoire pourvu qu\u2019elle soit libre": [[103, "1---Ajout-d'un-nombre-al\u00e9atoire-dans-{2,4}-\u00e0-une-position-al\u00e9atoire-pourvu-qu'elle-soit-libre"]], "3 - A-t-on perdu ?": [[103, "3---A-t-on-perdu-?"]], "5 - Aggr\u00e8ge les nombres dans un tableau que ce soit une ligne ou une colonne": [[103, "5---Aggr\u00e8ge-les-nombres-dans-un-tableau-que-ce-soit-une-ligne-ou-une-colonne"]], "4 - Joue un coup sachant une direction donn\u00e9e": [[103, "4---Joue-un-coup-sachant-une-direction-donn\u00e9e"]], "6 - score": [[103, "6---score"]], "7 - coup suivant": [[103, "7---coup-suivant"]], "8 - la fonction faisant tout": [[103, "8---la-fonction-faisant-tout"]], "Classe compl\u00e8te": [[103, "Classe-compl\u00e8te"]], "Un dernier graphe pour finir": [[103, "Un-dernier-graphe-pour-finir"]], "Une autre strat\u00e9gie pour illustrer l\u2019h\u00e9ritage": [[103, "Une-autre-strat\u00e9gie-pour-illustrer-l'h\u00e9ritage"]], "Un bref aper\u00e7u des classes": [[104, "Un-bref-aper\u00e7u-des-classes"]], "Une station de m\u00e9tro": [[104, "Une-station-de-m\u00e9tro"]], "Une distance": [[104, "Une-distance"]], "M\u00e9thode": [[104, "M\u00e9thode"]], "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations": [[105, "Liste,-tuple,-ensemble,-dictionnaire,-liste-cha\u00een\u00e9e,-co\u00fbt-des-op\u00e9rations"]], "Insertion avec list et deque": [[105, "Insertion-avec-list-et-deque"]], "Un \u00e9l\u00e9ment dans un ensemble": [[105, "Un-\u00e9l\u00e9ment-dans-un-ensemble"]], "Simuler une loi multinomiale": [[106, "Simuler-une-loi-multinomiale"]], "Algorithme de simulation": [[106, "Algorithme-de-simulation"]], "Une premi\u00e8re optimisation : tri des poids": [[106, "Une-premi\u00e8re-optimisation-:-tri-des-poids"]], "Optimisation bootstrap": [[106, "Optimisation-bootstrap"]], "Jeux de coloriage": [[107, "Jeux-de-coloriage"]], "Colorier un carr\u00e9 \u00e0 proportion": [[107, "Colorier-un-carr\u00e9-\u00e0-proportion"]], "Colorier en diagonale": [[107, "Colorier-en-diagonale"]], "Fonction de la surface couverte": [[107, "Fonction-de-la-surface-couverte"]], "Version math\u00e9matique": [[107, "Version-math\u00e9matique"]], "Retour au coloriage": [[107, "Retour-au-coloriage"]], "A quoi \u00e7a sert ?": [[107, "A-quoi-\u00e7a-sert-?"], [183, "a-quoi-ca-sert"]], "Jeu de d\u00e9, rotation sur un circuit": [[108, "Jeu-de-d\u00e9,-rotation-sur-un-circuit"]], "R\u00e9partition, table de hashage": [[109, "R\u00e9partition,-table-de-hashage"]], "Q1 - premi\u00e8re lettre": [[109, "Q1---premi\u00e8re-lettre"]], "Q2 - somme": [[109, "Q2---somme"]], "Q3 - pseudo g\u00e9n\u00e9rateur": [[109, "Q3---pseudo-g\u00e9n\u00e9rateur"]], "Q4 - hash": [[109, "Q4---hash"]], "Q5 - light hash": [[109, "Q5---light-hash"]], "Q6 - r\u00e9partition": [[109, "Q6---r\u00e9partition"]], "Q7 - dictionnaire": [[109, "Q7---dictionnaire"]], "Quelques \u00e9l\u00e9ments de r\u00e9ponses": [[109, "Quelques-\u00e9l\u00e9ments-de-r\u00e9ponses"]], "Premi\u00e8re lettre": [[109, "Premi\u00e8re-lettre"]], "Somme": [[109, "Somme"]], "Pseudo": [[109, "Pseudo"]], "Hash": [[109, "Hash"]], "Light hash": [[109, "Light-hash"]], "JSON - XML": [[110, "JSON---XML"]], "Q1 : \u00e9criture des donn\u00e9es au format CSV": [[110, "Q1-:-\u00e9criture-des-donn\u00e9es-au-format-CSV"], [110, "id1"]], "Q2 : \u00e9criture des donn\u00e9es au format JSON": [[110, "Q2-:-\u00e9criture-des-donn\u00e9es-au-format-JSON"], [110, "id2"]], "Q3 : relire les donn\u00e9es avec le module json": [[110, "Q3-:-relire-les-donn\u00e9es-avec-le-module-json"], [110, "id3"]], "Q4 : essayez avec les format XML (ou HTML), SQL, SAS, Excel\u2026": [[110, "Q4-:-essayez-avec-les-format-XML-(ou-HTML),-SQL,-SAS,-Excel..."], [110, "id4"]], "Q5 : donn\u00e9es non structur\u00e9es": [[110, "Q5-:-donn\u00e9es-non-structur\u00e9es"], [110, "id5"]], "Q6 : le texte, \u00e7a prend trop de place, zippons": [[110, "Q6-:-le-texte,-\u00e7a-prend-trop-de-place,-zippons"], [110, "id6"]], "Q7 : que vous inspire protobuf ?": [[110, "Q7-:-que-vous-inspire-protobuf-?"], [110, "id7"]], "Calculs de surface et autres calculs": [[111, "Calculs-de-surface-et-autres-calculs"]], "Exercice 1 : calcul de la surface d\u2019un cercle": [[111, "Exercice-1-:-calcul-de-la-surface-d'un-cercle"]], "1.1 En utilisant la constante pi": [[111, "1.1-En-utilisant-la-constante-pi"]], "1.2 Sans utiliser pi ni aucune autre fonction": [[111, "1.2-Sans-utiliser-pi-ni-aucune-autre-fonction"]], "Exercice 2 : tri al\u00e9atoire": [[111, "Exercice-2-:-tri-al\u00e9atoire"]], "Exercice 3 : petits calculs parfaits pour une machine": [[111, "Exercice-3-:-petits-calculs-parfaits-pour-une-machine"]], "1.1. calcul de la surface d\u2019un cercle avec pi": [[111, "1.1.-calcul-de-la-surface-d'un-cercle-avec-pi"]], "1.2. calcul de la surface d\u2019un cercle sans pi ou autre fonction": [[111, "1.2.-calcul-de-la-surface-d'un-cercle-sans-pi-ou-autre-fonction"]], "2. tri al\u00e9atoire": [[111, "2.-tri-al\u00e9atoire"]], "3. petits calculs parfaits pour une machine": [[111, "3.-petits-calculs-parfaits-pour-une-machine"]], "Expressions r\u00e9guli\u00e8res": [[112, "Expressions-r\u00e9guli\u00e8res"], [146, "Expressions-r\u00e9guli\u00e8res"], [182, "expressions-regulieres"], [183, "expressions-regulieres"]], "Exercice 1 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots": [[112, "Exercice-1-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots"], [112, "id1"]], "Exercice 2 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots se terminant par la lettre s": [[112, "Exercice-2-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots-se-terminant-par-la-lettre-s"], [112, "id2"]], "Exercice 3 : utiliser les expression r\u00e9guli\u00e8res pour remplacer tous les \u00ab\u00a0de\u00a0\u00bb en 2": [[112, "Exercice-3-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-remplacer-tous-les-%22de%22-en-2"], [112, "id3"]], "Exercice 4 : utiliser les expression r\u00e9guli\u00e8res pour extraire les lignes des rimes en elle ou elles ou aile ou ailes": [[112, "Exercice-4-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-les-lignes-des-rimes-en-elle-ou-elles-ou-aile-ou-ailes"], [112, "id4"]], "S\u00e9rialisation avec JSON, XML, pickle": [[113, "S\u00e9rialisation-avec-JSON,-XML,-pickle"]], "Notion de stream ou flux": [[113, "Notion-de-stream-ou-flux"]], "Q1: quelle est la fonction la plus rapide ?": [[113, "Q1:-quelle-est-la-fonction-la-plus-rapide-?"]], "Format JSON": [[113, "Format-JSON"]], "Q1. lire du json": [[113, "Q1.-lire-du-json"]], "Q2: \u00e9crire du json": [[113, "Q2:-\u00e9crire-du-json"]], "Q3: gros json": [[113, "Q3:-gros-json"]], "XML": [[113, "XML"]], "pickle": [[113, "pickle"]], "Q1: comparer le temps de s\u00e9rialisation entre pickle et json": [[113, "Q1:-comparer-le-temps-de-s\u00e9rialisation-entre-pickle-et-json"]], "Q2: comparer le temps de d\u00e9s\u00e9rialisation entre pickle et json": [[113, "Q2:-comparer-le-temps-de-d\u00e9s\u00e9rialisation-entre-pickle-et-json"]], "Peut-on tout s\u00e9rialiser ?": [[113, "Peut-on-tout-s\u00e9rialiser-?"]], "Histogramme et dictionnaire": [[114, "Histogramme-et-dictionnaire"]], "Heap": [[115, "Heap"]], "Transformer en tas": [[115, "Transformer-en-tas"]], "Dessiner un tas": [[115, "Dessiner-un-tas"]], "Premi\u00e8re version": [[115, "Premi\u00e8re-version"]], "M\u00eame chose avec les indices au lieu des valeurs": [[115, "M\u00eame-chose-avec-les-indices-au-lieu-des-valeurs"]], "Co\u00fbt de l\u2019algorithme": [[115, "Co\u00fbt-de-l'algorithme"]], "Version simplifi\u00e9e": [[115, "Version-simplifi\u00e9e"]], "Pivot de gauss avec numpy": [[116, "Pivot-de-gauss-avec-numpy"]], "Python": [[116, "Python"], [51, "python"], [51, null], [51, null]], "Numpy 1": [[116, "Numpy-1"]], "Numpy 2": [[116, "Numpy-2"]], "Vitesse": [[116, "Vitesse"]], "Profiling la fonction Gini": [[117, "Profiling-la-fonction-Gini"]], "Exercice 1 : profiler le code pr\u00e9c\u00e9dent": [[117, "Exercice-1-:-profiler-le-code-pr\u00e9c\u00e9dent"], [117, "id1"]], "Exercice 2 : changer la fonction _gini_final si possible en plus rapide": [[117, "Exercice-2-:-changer-la-fonction-_gini_final-si-possible-en-plus-rapide"], [117, "id2"]], "Exercice 3 : vous am\u00e9liorez la fonction _gini_final, profilez pour savoir de combien ?": [[117, "Exercice-3-:-vous-am\u00e9liorez-la-fonction-_gini_final,-profilez-pour-savoir-de-combien-?"], [117, "id3"]], "Exercice 4 : utiliser d\u2019autres modules de profiling": [[117, "Exercice-4-:-utiliser-d'autres-modules-de-profiling"], [117, "id4"]], "Exercice 5 : la fonction _gini_cumsum contient deux boucles. Quelle est la plus rapide ?": [[117, "Exercice-5-:-la-fonction-_gini_cumsum-contient-deux-boucles.-Quelle-est-la-plus-rapide-?"], [117, "id5"]], "Profiling, application \u00e0 la convolution": [[118, "Profiling,-application-\u00e0-la-convolution"]], "Impl\u00e9mentation na\u00efve": [[118, "Impl\u00e9mentation-na\u00efve"]], "Q1: comparer les temps d\u2019ex\u00e9cution": [[118, "Q1:-comparer-les-temps-d'ex\u00e9cution"]], "Q2: comparer avec une seconde impl\u00e9mentation": [[118, "Q2:-comparer-avec-une-seconde-impl\u00e9mentation"]], "im2col": [[118, "im2col"]], "Q3: comparer \u00e0 nouveau les temps d\u2019\u00e9xecution": [[118, "Q3:-comparer-\u00e0-nouveau-les-temps-d'\u00e9xecution"]], "Profiling": [[118, "Profiling"], [98, null]], "Q4: que peut-on en d\u00e9duire ?": [[118, "Q4:-que-peut-on-en-d\u00e9duire-?"]], "Profilage : \u00e9v\u00e9nements ou \u00e9chantillonnage": [[118, "Profilage-:-\u00e9v\u00e9nements-ou-\u00e9chantillonnage"]], "Une derni\u00e8re impl\u00e9mentation": [[118, "Une-derni\u00e8re-impl\u00e9mentation"]], "Q5: Que pouvez-vous dire de cette derni\u00e8re impl\u00e9mentation ?": [[118, "Q5:-Que-pouvez-vous-dire-de-cette-derni\u00e8re-impl\u00e9mentation-?"]], "Exemple de profiling": [[119, "Exemple-de-profiling"]], "Bizarrerie": [[119, "Bizarrerie"]], "Profiler": [[119, "Profiler"]], "Recherche dichotomique": [[120, "Recherche-dichotomique"]], "Version it\u00e9rative": [[120, "Version-it\u00e9rative"]], "Version r\u00e9cursive": [[120, "Version-r\u00e9cursive"]], "Version r\u00e9cursive 2": [[120, "Version-r\u00e9cursive-2"]], "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre": [[122, "D'une-structure-de-donn\u00e9es-\u00e0-l'autre"]], "histogramme et dictionnaire": [[122, "histogramme-et-dictionnaire"]], "liste \u00e0 dictionnaire": [[122, "liste-\u00e0-dictionnaire"]], "dictionnaire \u00e0 liste": [[122, "dictionnaire-\u00e0-liste"]], "dictionnaire et deux listes": [[122, "dictionnaire-et-deux-listes"]], "deux listes et dictionnaires": [[122, "deux-listes-et-dictionnaires"]], "zip reverse": [[122, "zip-reverse"]], "matrices et dictionnaires": [[122, "matrices-et-dictionnaires"]], "liste de listes et dictionnaires": [[122, "liste-de-listes-et-dictionnaires"]], "dictionnaires et liste de listes": [[122, "dictionnaires-et-liste-de-listes"]], "matrice sparse": [[122, "matrice-sparse"]], "matrices et tableaux": [[122, "matrices-et-tableaux"]], "2 dimensions logiques, 1 dimension en m\u00e9moire": [[122, "2-dimensions-logiques,-1-dimension-en-m\u00e9moire"]], "du tableau \u00e0 la liste de listes": [[122, "du-tableau-\u00e0-la-liste-de-listes"]], "Calculer un chi 2 sur un tableau de contingence": [[123, "Calculer-un-chi-2-sur-un-tableau-de-contingence"]], "formule": [[123, "formule"]], "tableau au hasard": [[123, "tableau-au-hasard"]], "calcul avec scipy": [[123, "calcul-avec-scipy"]], "calcul avec numpy": [[123, "calcul-avec-numpy"]], "Tri plus rapide que pr\u00e9vu": [[125, "Tri-plus-rapide-que-pr\u00e9vu"]], "trier un plus petit ensemble": [[125, "trier-un-plus-petit-ensemble"]], "\u00e9volution en fonction de n": [[125, "\u00e9volution-en-fonction-de-n"]], "Cryptage homomorphic de Craig Gentry": [[126, "Cryptage-homomorphic-de-Craig-Gentry"]], "D\u00e9finition du cryptage": [[126, "D\u00e9finition-du-cryptage"], [127, "D\u00e9finition-du-cryptage"]], "Exercice 1 : impl\u00e9menter le cryptage": [[126, "Exercice-1-:-impl\u00e9menter-le-cryptage"], [127, "Exercice-1-:-impl\u00e9menter-le-cryptage"]], "Exercice 2 : v\u00e9rifier que le cryptage est stable par addition et multiplication": [[126, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"], [127, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"]], "Exercice 3 : impl\u00e9mententer l\u2019addition enti\u00e8re": [[126, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"], [127, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"]], "Exercice 4 : impl\u00e9menter la multiplication enti\u00e8re": [[126, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"], [127, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"]], "Cryptage homomorphic de Craig Gentry - correction": [[127, "Cryptage-homomorphic-de-Craig-Gentry---correction"]], "Plus proches voisins en grande dimension": [[128, "Plus-proches-voisins-en-grande-dimension"]], "Q1 : k-nn : mesurer la performance": [[128, "Q1-:-k-nn-:-mesurer-la-performance"], [129, "Q1-:-k-nn-:-mesurer-la-performance"]], "Q2 : k-nn avec sparse features": [[128, "Q2-:-k-nn-avec-sparse-features"], [129, "Q2-:-k-nn-avec-sparse-features"]], "Q3 : Imaginez une fa\u00e7on d\u2019aller plus vite ?": [[128, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"], [129, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"]], "2A.algo - Plus proches voisins en grande dimension - correction": [[129, "2A.algo---Plus-proches-voisins-en-grande-dimension---correction"]], "dimension": [[129, "dimension"]], "observations": [[129, "observations"]], "Puzzles algorithmiques (1)": [[132, "Puzzles-algorithmiques-(1)"]], "Produits scalaires": [[132, "Produits-scalaires"], [133, "Produits-scalaires"]], "Solution moins na\u00efve": [[132, "Solution-moins-na\u00efve"]], "Probl\u00e8me de recouvrement": [[132, "Probl\u00e8me-de-recouvrement"], [133, "Probl\u00e8me-de-recouvrement"]], "Soudoyer les prisonniers": [[132, "Soudoyer-les-prisonniers"], [133, "Soudoyer-les-prisonniers"]], "D\u00e9coupage intelligent d\u2019une base de donn\u00e9es": [[132, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"], [133, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"]], "Puzzles algorithmes (1) - correction": [[133, "Puzzles-algorithmes-(1)---correction"]], "Premi\u00e8re solution": [[133, "Premi\u00e8re-solution"]], "Seconde solution": [[133, "Seconde-solution"]], "Approche par programmation dynamique": [[133, "Approche-par-programmation-dynamique"]], "Puzzles algorithmiques (2)": [[134, "Puzzles-algorithmiques-(2)"]], "Exercice 1 : nombres premiers": [[134, "Exercice-1-:-nombres-premiers"], [135, "Exercice-1-:-nombres-premiers"]], "Exercice 2 : watersheds": [[134, "Exercice-2-:-watersheds"], [135, "Exercice-2-:-watersheds"]], "Exercice 3 : s\u00e9paration des bagarreurs": [[134, "Exercice-3-:-s\u00e9paration-des-bagarreurs"], [135, "Exercice-3-:-s\u00e9paration-des-bagarreurs"]], "Exercice 4 : formation de bin\u00f4mes": [[134, "Exercice-4-:-formation-de-bin\u00f4mes"], [135, "Exercice-4-:-formation-de-bin\u00f4mes"]], "Puzzles algorithmes (2) - correction": [[135, "Puzzles-algorithmes-(2)---correction"]], "Seconde id\u00e9e : les trouver tous ?": [[135, "Seconde-id\u00e9e-:-les-trouver-tous-?"]], "solution": [[135, "solution"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique": [[136, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique"]], "Apart\u00e9 sur les classes": [[136, "Apart\u00e9-sur-les-classes"]], "Classes, attributs, op\u00e9rateurs": [[136, "Classes,-attributs,-op\u00e9rateurs"]], "Exercice 1 : carr\u00e9 magique": [[136, "Exercice-1-:-carr\u00e9-magique"], [137, "Exercice-1-:-carr\u00e9-magique"]], "M\u00e9thodes": [[136, "M\u00e9thodes"], [160, "methodes"], [172, "methodes"]], "Exercice 2 : \u00e0 faire \u00e0 trois, carr\u00e9 magique (suite)": [[136, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"], [137, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"]], "Exercice 3 : trouver tous les carr\u00e9s magiques": [[136, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"], [137, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"]], "Exercice 4 : faire plus rapide": [[136, "Exercice-4-:-faire-plus-rapide"], [137, "Exercice-4-:-faire-plus-rapide"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)": [[137, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique-(correction)"]], "Programme complet": [[137, "Programme-complet"]], "Classes, h\u00e9ritage": [[138, "Classes,-h\u00e9ritage"]], "Qu\u2019est-ce que l\u2019h\u00e9ritage ?": [[138, "Qu'est-ce-que-l'h\u00e9ritage-?"]], "Exercice 1 : pi\u00e8ce normale": [[138, "Exercice-1-:-pi\u00e8ce-normale"], [139, "Exercice-1-:-pi\u00e8ce-normale"]], "Exercice 2 : pi\u00e8ce truqu\u00e9e": [[138, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"], [139, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"]], "Utiliser des m\u00e9thodes de la classe m\u00e8re": [[138, "Utiliser-des-m\u00e9thodes-de-la-classe-m\u00e8re"]], "Exercice 3 : Pi\u00e8ce mixte": [[138, "Exercice-3-:-Pi\u00e8ce-mixte"], [139, "Exercice-3-:-Pi\u00e8ce-mixte"]], "Autre construction avec des fonctions": [[138, "Autre-construction-avec-des-fonctions"]], "Exercice 4 : pi\u00e8ce mixte avec des fonctions": [[138, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"], [139, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"]], "Classes, h\u00e9ritage (correction)": [[139, "Classes,-h\u00e9ritage-(correction)"]], "Dictionnaires, fonctions, code de Vigen\u00e8re": [[140, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re"]], "Fonctions dans le d\u00e9tail": [[140, "Fonctions-dans-le-d\u00e9tail"]], "Variable locale": [[140, "Variable-locale"]], "Mot-cl\u00e9 return": [[140, "Mot-cl\u00e9-return"]], "Fonction r\u00e9cursive": [[140, "Fonction-r\u00e9cursive"], [174, "fonction-recursive"]], "Dictionnaires": [[140, "Dictionnaires"]], "cl\u00e9 - valeur": [[140, "cl\u00e9---valeur"]], "notions de co\u00fbt": [[140, "notions-de-co\u00fbt"]], "ordonner les \u00e9l\u00e9ments d\u2019un dictionnaire": [[140, "ordonner-les-\u00e9l\u00e9ments-d'un-dictionnaire"]], "Exercice 2 : recherche dans une liste": [[140, "Exercice-2-:-recherche-dans-une-liste"]], "Exercice 3 : utilisation d\u2019un dictionnaire": [[140, "Exercice-3-:-utilisation-d'un-dictionnaire"], [141, "Exercice-3-:-utilisation-d'un-dictionnaire"]], "Exercice 4 : crypter de d\u00e9crypter selon Vigen\u00e8re": [[140, "Exercice-4-:-crypter-de-d\u00e9crypter-selon-Vigen\u00e8re"]], "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)": [[141, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re-(correction)"]], "Exercice 4 : crypter et d\u00e9crypter selon Vigen\u00e8re": [[141, "Exercice-4-:-crypter-et-d\u00e9crypter-selon-Vigen\u00e8re"]], "Int\u00e9grale et la m\u00e9thode des rectangles": [[142, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles"]], "Calcul de l\u2019int\u00e9grale": [[142, "Calcul-de-l'int\u00e9grale"], [143, "Calcul-de-l'int\u00e9grale"]], "Calcul de pr\u00e9cision": [[142, "Calcul-de-pr\u00e9cision"], [143, "Calcul-de-pr\u00e9cision"]], "Calcul plus rapide": [[142, "Calcul-plus-rapide"], [143, "Calcul-plus-rapide"]], "Int\u00e9grale et la m\u00e9thode des rectangles - correction": [[143, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles---correction"]], "La fonction r\u00e9calcitrante": [[143, "La-fonction-r\u00e9calcitrante"]], "Calcul de Monte Carlo": [[143, "Calcul-de-Monte-Carlo"]], "Quand s\u2019arr\u00eater ?": [[143, "Quand-s'arr\u00eater-?"]], "2048 - strat\u00e9gie gagnante": [[144, "2048---strat\u00e9gie-gagnante"]], "Exercice 1 : impl\u00e9menter les r\u00e8gles du jeu": [[144, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"], [145, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"]], "Exercice 2 : impl\u00e9menter une strat\u00e9gie": [[144, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"], [145, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"]], "2048 - strat\u00e9gie gagnante - correction": [[145, "2048---strat\u00e9gie-gagnante---correction"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res": [[146, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res"]], "Ecriture": [[146, "Ecriture"], [176, "ecriture"]], "Lecture": [[146, "Lecture"], [176, "lecture"]], "with": [[146, "with"]], "\u00e0 quoi \u00e7a sert ?": [[146, "\u00e0-quoi-\u00e7a-sert-?"]], "Exercice 1 : Excel \\rightarrow Python \\rightarrow Excel": [[146, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"], [147, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"]], "Autres formats de fichiers": [[146, "Autres-formats-de-fichiers"]], "Exercice 2 : trouver un module (1)": [[146, "Exercice-2-:-trouver-un-module-(1)"]], "Exercice 3 : trouver un module (2)": [[146, "Exercice-3-:-trouver-un-module-(2)"], [147, "Exercice-3-:-trouver-un-module-(2)"]], "Module qu\u2019on cr\u00e9e soi-m\u00eame": [[146, "Module-qu'on-cr\u00e9e-soi-m\u00eame"]], "Exercice 4 : son propre module": [[146, "Exercice-4-:-son-propre-module"], [147, "Exercice-4-:-son-propre-module"]], "Exercice 5 : chercher un motif dans un texte": [[146, "Exercice-5-:-chercher-un-motif-dans-un-texte"], [147, "Exercice-5-:-chercher-un-motif-dans-un-texte"]], "Exercice 6 : chercher un autre motif dans un texte": [[146, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"], [147, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)": [[147, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res-(correction)"]], "Exercice 7 : recherche les urls dans une page wikip\u00e9dia": [[147, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"]], "Exercice 8 : construire un texte \u00e0 motif": [[147, "Exercice-8-:-construire-un-texte-\u00e0-motif"]], "Premiers pas en Python": [[148, "Premiers-pas-en-Python"]], "Partie 1": [[148, "Partie-1"]], "Partie 2": [[148, "Partie-2"], [149, "Partie-2"]], "Partie 3": [[148, "Partie-3"], [149, "Partie-3"]], "Premiers pas en Python (correction)": [[149, "Premiers-pas-en-Python-(correction)"]], "Tracer une pyramide bigarr\u00e9e": [[150, "Tracer-une-pyramide-bigarr\u00e9e"]], "Probl\u00e8me": [[150, "Probl\u00e8me"], [151, "Probl\u00e8me"]], "Id\u00e9e de la solution": [[150, "Id\u00e9e-de-la-solution"], [151, "Id\u00e9e-de-la-solution"]], "Tracer une pyramide bigarr\u00e9e - correction": [[151, "Tracer-une-pyramide-bigarr\u00e9e---correction"]], "Les coordonn\u00e9es": [[151, "Les-coordonn\u00e9es"]], "La couleur": [[151, "La-couleur"]], "Deviner la langue d\u2019un texte": [[152, "Deviner-la-langue-d'un-texte"]], "Q1 : lire un fichier": [[152, "Q1-:-lire-un-fichier"], [153, "Q1-:-lire-un-fichier"]], "Q2 : histogramme": [[152, "Q2-:-histogramme"], [153, "Q2-:-histogramme"]], "Q3 : normalisation": [[152, "Q3-:-normalisation"], [153, "Q3-:-normalisation"]], "Q4 : calcul": [[152, "Q4-:-calcul"], [153, "Q4-:-calcul"]], "Q5 : score": [[152, "Q5-:-score"], [153, "Q5-:-score"]], "Deviner la langue d\u2019un texte (correction)": [[153, "Deviner-la-langue-d'un-texte-(correction)"]], "Variables, boucles, tests": [[154, "Variables,-boucles,-tests"]], "Partie 1 : variables, int, float, str, list": [[154, "Partie-1-:-variables,-int,-float,-str,-list"]], "Partie 2 : Tests": [[154, "Partie-2-:-Tests"]], "Partie 3 : boucles": [[154, "Partie-3-:-boucles"]], "Partie 4 : les listes compactes, les ensembles": [[154, "Partie-4-:-les-listes-compactes,-les-ensembles"]], "Partie 5 : recherche non dichotomique (exercice)": [[154, "Partie-5-:-recherche-non-dichotomique-(exercice)"], [155, "Partie-5-:-recherche-non-dichotomique-(exercice)"]], "Partie 6 : Recherche dichotomique": [[154, "Partie-6-:-Recherche-dichotomique"]], "Partie 7 : pour aller plus loin": [[154, "Partie-7-:-pour-aller-plus-loin"]], "Variables, boucles, tests (correction)": [[155, "Variables,-boucles,-tests-(correction)"]], "Partie 3 : boucles (exercice)": [[155, "Partie-3-:-boucles-(exercice)"]], "Partie 6 : recherche dichotomique (exercice)": [[155, "Partie-6-:-recherche-dichotomique-(exercice)"]], "Partie 7 : pour aller plus loin (exercice)": [[155, "Partie-7-:-pour-aller-plus-loin-(exercice)"]], "Pr\u00e9sentation des classes : m\u00e9thodes et attributs": [[160, "presentation-des-classes-methodes-et-attributs"]], "D\u00e9finition, d\u00e9claration": [[160, "definition-declaration"]], "Attributs": [[160, "attributs"]], "Constructeur": [[160, "constructeur"]], "Apport du langage python": [[160, "apport-du-langage-python"]], "Liste des attributs": [[160, "liste-des-attributs"]], "Attributs implicites": [[160, "attributs-implicites"]], "Commentaires, aide": [[160, "commentaires-aide"]], "Classe incluse": [[160, "classe-incluse"]], "It\u00e9rateurs": [[160, "iterateurs"], [174, "iterateurs"]], "M\u00e9thodes, attributs statiques et ajout de m\u00e9thodes": [[160, "methodes-attributs-statiques-et-ajout-de-methodes"]], "M\u00e9thode statique": [[160, "methode-statique"]], "Attributs statiques": [[160, "attributs-statiques"]], "Ajout de m\u00e9thodes": [[160, "ajout-de-methodes"]], "Propri\u00e9t\u00e9s": [[160, "proprietes"]], "Copie d\u2019instance de classe simple": [[160, "copie-d-instance-de-classe-simple"]], "Copie d\u2019instance de classes incluant d\u2019autres classes": [[160, "copie-d-instance-de-classes-incluant-d-autres-classes"]], "Listes et dictionnaires": [[160, "listes-et-dictionnaires"]], "copy et deepcopy": [[160, "copy-et-deepcopy"]], "Attributs fig\u00e9s": [[160, "attributs-figes"]], "Exemple autour de pi\u00e8ces de monnaie": [[160, "exemple-autour-de-pieces-de-monnaie"]], "Sens de l\u2019h\u00e9ritage (2)": [[160, "sens-de-l-heritage-2"]], "H\u00e9ritage multiple": [[160, "heritage-multiple"]], "Fonctions issubclass et isinstance": [[160, "fonctions-issubclass-et-isinstance"]], "Compilation de classes": [[160, "compilation-de-classes"]], "Surcharge d\u2019op\u00e9rateur sur des types": [[160, "surcharge-d-operateur-sur-des-types"]], "Sens de l\u2019h\u00e9ritage (1)": [[160, "sens-de-l-heritage-1"]], "Deux lign\u00e9es d\u2019h\u00e9ritages": [[160, "deux-lignees-d-heritages"]], "Questions": [[162, "questions"]], "C\u2019est oblig\u00e9 d\u2019utiliser les classes ?": [[162, "c-est-oblige-d-utiliser-les-classes"]], "Principe des exceptions": [[163, "principe-des-exceptions"]], "Attraper toutes les erreurs": [[163, "attraper-toutes-les-erreurs"]], "Obtenir le type d\u2019erreur, attraper un type d\u2019exception": [[163, "obtenir-le-type-d-erreur-attraper-un-type-d-exception"]], "Lancer une exception": [[163, "lancer-une-exception"]], "H\u00e9ritage et exception": [[163, "heritage-et-exception"]], "Instructions try, except imbriqu\u00e9es": [[163, "instructions-try-except-imbriquees"]], "D\u00e9finir ses propres exceptions": [[163, "definir-ses-propres-exceptions"]], "D\u00e9river une classe d\u2019exception": [[163, "deriver-une-classe-d-exception"]], "Personnalisation d\u2019une classe d\u2019exception": [[163, "personnalisation-d-une-classe-d-exception"]], "Exemples d\u2019utilisation des exceptions": [[163, "exemples-d-utilisation-des-exceptions"]], "Les it\u00e9rateurs": [[163, "les-iterateurs"]], "Exception ou valeur aberrante": [[163, "exception-ou-valeur-aberrante"]], "Le pi\u00e8ge des exceptions": [[163, "le-piege-des-exceptions"]], "Usage": [[164, "usage"]], "Pile d\u2019appel ou call stack": [[164, "pile-d-appel-ou-call-stack"]], "R\u00e9cup\u00e9ration de la pile d\u2019appel": [[164, "recuperation-de-la-pile-d-appel"]], "Message d\u2019erreur plus explicite": [[164, "message-d-erreur-plus-explicite"]], "Type d\u2019exception": [[164, "type-d-exception"]], "Conventions": [[164, "conventions"]], "Warning et logging": [[166, "warning-et-logging"]], "Warnings": [[166, "warnings"]], "G\u00e9n\u00e9rer un warning": [[166, "generer-un-warning"]], "Intercepter un warning": [[166, "intercepter-un-warning"]], "Warning personnalis\u00e9": [[166, "warning-personnalise"]], "Logging": [[166, "logging"]], "Interfaces graphiques": [[167, "interfaces-graphiques"]], "tkinter": [[168, "tkinter"]], "Les objets": [[168, "les-objets"]], "Zone de texte": [[168, "zone-de-texte"]], "Bouton": [[168, "bouton"]], "Zone de saisie": [[168, "zone-de-saisie"]], "Zone de saisie \u00e0 plusieurs lignes": [[168, "zone-de-saisie-a-plusieurs-lignes"]], "Case \u00e0 cocher": [[168, "case-a-cocher"]], "Case ronde ou bouton radio": [[168, "case-ronde-ou-bouton-radio"]], "Liste avec barre de d\u00e9filement, Combobox": [[168, "liste-avec-barre-de-defilement-combobox"]], "Canevas": [[168, "canevas"]], "Menus": [[168, "menus"]], "M\u00e9thodes communes": [[168, "methodes-communes"]], "Disposition des objets dans une fen\u00eatre": [[168, "disposition-des-objets-dans-une-fenetre"]], "Emplacements": [[168, "emplacements"]], "M\u00e9thode pack": [[168, "methode-pack"]], "M\u00e9thode grid": [[168, "methode-grid"]], "M\u00e9thode place": [[168, "methode-place"]], "Sous-fen\u00eatre": [[168, "sous-fenetre"]], "Ev\u00e9nements": [[168, "evenements"]], "Fen\u00eatre principale": [[168, "fenetre-principale"]], "Focus": [[168, "focus"]], "Lancer une fonction lorsqu\u2019un bouton est press\u00e9": [[168, "lancer-une-fonction-lorsqu-un-bouton-est-presse"]], "Associer n\u2019importe quel \u00e9v\u00e9nement \u00e0 un objet": [[168, "associer-n-importe-quel-evenement-a-un-objet"]], "Menu": [[168, "menu"]], "Fonctions pr\u00e9d\u00e9finies": [[168, "fonctions-predefinies"]], "D\u2019autres fen\u00eatres et contr\u00f4les": [[168, "d-autres-fenetres-et-controles"]], "Cr\u00e9er une seconde bo\u00eete de dialogues": [[168, "creer-une-seconde-boite-de-dialogues"]], "Fen\u00eatres standard": [[168, "fenetres-standard"]], "Compte \u00e0 rebours": [[168, "compte-a-rebours"]], "Contr\u00f4les personnalis\u00e9s : utilisation des classes": [[168, "controles-personnalises-utilisation-des-classes"]], "Fen\u00eatres personnalis\u00e9es : utilisation des classes": [[168, "fenetres-personnalisees-utilisation-des-classes"]], "S\u00e9quence d\u2019\u00e9v\u00e9nements": [[168, "sequence-d-evenements"]], "Communiquer un r\u00e9sultat par message": [[168, "communiquer-un-resultat-par-message"]], "OrderedDict": [[169, "ordereddict"]], "namedtuple": [[169, "namedtuple"]], "Counter": [[169, "counter"]], "deque": [[169, "deque"]], "Constructions fr\u00e9quentes": [[170, "constructions-frequentes"]], "Constructions n\u00e9gatives": [[170, "constructions-negatives"]], "datetime": [[171, "datetime"]], "Autres formats de date": [[171, "autres-formats-de-date"]], "Encoding et jeux de caract\u00e8res": [[172, "encoding-et-jeux-de-caracteres"]], "Jeux de caract\u00e8res": [[172, "jeux-de-caracteres"]], "Encodings par d\u00e9faut": [[172, "encodings-par-defaut"]], "Variables et fonctions": [[173, "variables-et-fonctions"]], "Syntaxe du langage Python (boucles, tests, fonctions)": [[174, "syntaxe-du-langage-python-boucles-tests-fonctions"]], "Les trois concepts des algorithmes": [[174, "les-trois-concepts-des-algorithmes"]], "D\u00e9finition et syntaxe": [[174, "definition-et-syntaxe"]], "Comparaisons possibles": [[174, "comparaisons-possibles"]], "Op\u00e9rateurs logiques": [[174, "operateurs-logiques"]], "Ecriture condens\u00e9e (test)": [[174, "ecriture-condensee-test"]], "Exemple (test)": [[174, "exemple-test"]], "None, True et 1": [[174, "none-true-et-1"]], "Passer, instruction pass": [[174, "passer-instruction-pass"]], "Boucle B1 : test": [[174, "indexmathe-Boucle0"]], "Boucle while": [[174, "boucle-while"]], "Boucle for": [[174, "boucle-for"]], "Listes, boucle for, liste en extension": [[174, "listes-boucle-for-liste-en-extension"]], "Plusieurs variables de boucles": [[174, "plusieurs-variables-de-boucles"]], "Ecriture condens\u00e9e (for)": [[174, "ecriture-condensee-for"]], "Pilotage d\u2019une boucle : continue": [[174, "pilotage-d-une-boucle-continue"]], "Pilotage d\u2019une boucle : break": [[174, "pilotage-d-une-boucle-break"]], "Fin normale d\u2019une boucle : else": [[174, "fin-normale-d-une-boucle-else"]], "Suppression ou ajout d\u2019\u00e9l\u00e9ments lors d\u2019une boucle": [[174, "suppression-ou-ajout-d-elements-lors-d-une-boucle"]], "D\u00e9finition, syntaxe": [[174, "definition-syntaxe"]], "Exemple (for)": [[174, "exemple-for"]], "Param\u00e8tres avec des valeurs par d\u00e9faut": [[174, "parametres-avec-des-valeurs-par-defaut"]], "Ordre des param\u00e8tres": [[174, "ordre-des-parametres"]], "Surcharge de fonction": [[174, "surcharge-de-fonction"]], "Commentaires": [[174, "commentaires"]], "Param\u00e8tres modifiables": [[174, "parametres-modifiables"]], "Port\u00e9e des variables, des param\u00e8tres": [[174, "portee-des-variables-des-parametres"]], "Port\u00e9e des fonctions": [[174, "portee-des-fonctions"]], "Nombre de param\u00e8tres variable": [[174, "nombre-de-parametres-variable"]], "Ecriture simplifi\u00e9e pour des fonctions simples : lambda": [[174, "ecriture-simplifiee-pour-des-fonctions-simples-lambda"]], "Fonctions g\u00e9n\u00e9rateur": [[174, "fonctions-generateur"]], "Identificateur appelable": [[174, "identificateur-appelable"]], "Compilation dynamique (eval)": [[174, "compilation-dynamique-eval"]], "Compilation dynamique (compile, exec)": [[174, "compilation-dynamique-compile-exec"]], "Indentation": [[174, "indentation"]], "Fonctions usuelles": [[174, "fonctions-usuelles"]], "Types et variables du langage python": [[175, "types-et-variables-du-langage-python"]], "Types immuables (ou immutable)": [[175, "types-immuables-ou-immutable"]], "Type \u00ab\u00a0rien\u00a0\u00bb ou None": [[175, "type-rien-ou-none"]], "Nombres r\u00e9els et entiers": [[175, "nombres-reels-et-entiers"]], "Bool\u00e9en": [[175, "booleen"]], "Cha\u00eene de caract\u00e8res": [[175, "chaine-de-caracteres"]], "Cr\u00e9ation d\u2019une cha\u00eene de caract\u00e8res - str": [[175, "creation-d-une-chaine-de-caracteres-str"]], "Manipulation d\u2019une cha\u00eene de caract\u00e8res": [[175, "manipulation-d-une-chaine-de-caracteres"]], "Formatage d\u2019une cha\u00eene de caract\u00e8res": [[175, "formatage-d-une-chaine-de-caracteres"]], "Syntaxe %": [[175, "syntaxe"]], "M\u00e9thode format": [[175, "methode-format"]], "Notation f{}": [[175, "notation-f"]], "Un cas particuler %r ou {!r}": [[175, "un-cas-particuler-r-ou-r"]], "tuple": [[175, "tuple"]], "Nombres complexes": [[175, "nombres-complexes"]], "bytes": [[175, "bytes"]], "Types modifiables ou mutable": [[175, "types-modifiables-ou-mutable"]], "bytearray": [[175, "bytearray"]], "D\u00e9finition et m\u00e9thodes (list)": [[175, "definition-et-methodes-list"]], "Exemples (list)": [[175, "exemples-list"]], "Fonction range": [[175, "fonction-range"]], "Boucles et listes": [[175, "boucles-et-listes"]], "Collage de s\u00e9quences, fonction zip": [[175, "collage-de-sequences-fonction-zip"]], "Concat\u00e9nation de cha\u00eene de caract\u00e8res": [[175, "concatenation-de-chaine-de-caracteres"]], "Copie": [[175, "copie"]], "D\u00e9finition et m\u00e9thodes (dict)": [[175, "definition-et-methodes-dict"]], "Exemples (dict)": [[175, "exemples-dict"]], "Copie (dict)": [[175, "copie-dict"]], "Cl\u00e9s de type modifiable": [[175, "cles-de-type-modifiable"]], "Ensemble ou set": [[175, "ensemble-ou-set"]], "Extensions": [[175, "extensions"]], "Fonction print, repr et conversion en cha\u00eene de caract\u00e8res": [[175, "fonction-print-repr-et-conversion-en-chaine-de-caracteres"]], "Fonction eval": [[175, "eval-fonction-chapitre-deux"]], "Informations fournies par python": [[175, "informations-fournies-par-python"]], "Affectations multiples": [[175, "affectations-multiples"]], "Hi\u00e9rarchie des objets": [[175, "hierarchie-des-objets"]], "Objets internes": [[175, "objets-internes"]], "Commentaires accentu\u00e9s": [[175, "commentaires-accentues"]], "Format texte": [[176, "format-texte"]], "Ecriture en mode \u00ab\u00a0ajout\u00a0\u00bb": [[176, "ecriture-en-mode-ajout"]], "Encoding et les accents": [[176, "encoding-et-les-accents"]], "Fichiers zip": [[176, "fichiers-zip"]], "Lecture (zip)": [[176, "lecture-zip"]], "Ecriture (zip)": [[176, "ecriture-zip"]], "Manipulation de fichiers": [[176, "manipulation-de-fichiers"]], "Gestion des noms de chemins": [[176, "gestion-des-noms-de-chemins"]], "Copie, suppression": [[176, "copie-suppression"]], "Liste de fichiers": [[176, "liste-de-fichiers"]], "Sans format ou format binaire": [[176, "sans-format-ou-format-binaire"]], "Ecriture dans un fichier binaire": [[176, "ecriture-dans-un-fichier-binaire"]], "Lecture d\u2019un fichier binaire": [[176, "lecture-d-un-fichier-binaire"]], "Exemple fichier binaire": [[176, "exemple-fichier-binaire"]], "Objets plus complexes": [[176, "objets-plus-complexes"]], "Entr\u00e9es, Sorties, Modules": [[177, "entrees-sorties-modules"]], "Module ou extension": [[178, "module-ou-extension"]], "Un module": [[178, "un-module"]], "Exemple": [[178, "exemple"]], "Importer un module": [[178, "importer-un-module"]], "Nom d\u2019un module": [[178, "nom-d-un-module"]], "Modules et fichiers": [[178, "modules-et-fichiers"]], "Emplacement d\u2019un module": [[178, "emplacement-d-un-module"]], "Attributs communs \u00e0 tout module": [[178, "attributs-communs-a-tout-module"]], "Cas pratiques": [[178, "cas-pratiques"]], "Ce qui ne marche pas : les import cycliques": [[178, "ce-qui-ne-marche-pas-les-import-cycliques"]], "Ajouter un module en cours d\u2019ex\u00e9cution": [[178, "ajouter-un-module-en-cours-d-execution"]], "Liste des modules import\u00e9s": [[178, "liste-des-modules-importes"]], "Plusieurs modules et fichiers": [[178, "plusieurs-modules-et-fichiers"]], "Arborescence de modules, paquetage": [[178, "arborescence-de-modules-paquetage"]], "Import relatif": [[178, "import-relatif"]], "Modules internes": [[178, "modules-internes"]], "Modules externes": [[178, "modules-externes"]], "Optimisation": [[179, "optimisation"]], "S\u00e9rialiser autre chose que des donn\u00e9es": [[179, "serialiser-autre-chose-que-des-donnees"]], "Parall\u00e9lisation": [[180, "parallelisation"]], "Threads": [[181, "threads"]], "Premier thread": [[181, "premier-thread"]], "Synchronisation": [[181, "synchronisation"]], "Attente": [[181, "attente"]], "Partage d\u2019informations": [[181, "partage-d-informations"]], "Interface graphique": [[181, "interface-graphique"]], "Files de messages": [[181, "files-de-messages"]], "Multithreading plus simple": [[181, "multithreading-plus-simple"]], "concurrent.futures": [[181, "concurrent-futures"]], "Notion de futures": [[181, "notion-de-futures"]], "Un probl\u00e8me de blocage": [[181, "un-probleme-de-blocage"]], "async - await - asyncio": [[181, "async-await-asyncio"]], "GIL - Global Interpreter Lock": [[181, "gil-global-interpreter-lock"]], "cython : un m\u00e9lange de python et C": [[181, "cython-un-melange-de-python-et-c"]], "C#, Java": [[181, "c-java"]], "Bibliographie": [[181, "bibliographie"]], "Les ensembles de caract\u00e8res": [[183, "les-ensembles-de-caracteres"]], "Les multiplicateurs": [[183, "les-multiplicateurs"]], "Groupes": [[183, "groupes"]], "Assembler les caract\u00e8res": [[183, "assembler-les-caracteres"]], "Exemple plus complet": [[183, "exemple-plus-complet"]], "Groupes nomm\u00e9s": [[183, "groupes-nommes"]], "Le langage Python": [[184, "le-langage-python"]], "2022-11-31 : rappel feuille de route 2022": [[8, "rappel-feuille-de-route-2022"]], "S\u00e9ance 1 - 7-9 - introduction, dictionnaire": [[8, "seance-1-7-9-introduction-dictionnaire"]], "S\u00e9ance 2 - 14-9 - programmation dynamique, voyageur de commerce": [[8, "seance-2-14-9-programmation-dynamique-voyageur-de-commerce"]], "S\u00e9ance 3 - 21-9 - numpy, pandas": [[8, "seance-3-21-9-numpy-pandas"]], "S\u00e9ance 4 - 28-9 - graphes": [[8, "seance-4-28-9-graphes"]], "S\u00e9ance 5 - 5-10 - s\u00e9rialisation, tests unitaires, profiling": [[8, "seance-5-5-10-serialisation-tests-unitaires-profiling"]], "S\u00e9ance 6 - 12-10 - expressions r\u00e9guli\u00e8res, webscrapping": [[8, "seance-6-12-10-expressions-regulieres-webscrapping"]], "S\u00e9ance 7 - 19-10 - top k, tri": [[8, "seance-7-19-10-top-k-tri"]], "S\u00e9ance 8 - 26-10 - graphes": [[8, "seance-8-26-10-graphes"]], "2023-09-06 : ENSAE": [[12, "ensae"]], "Calcul Matriciel, Optimisation": [[33, "Calcul-Matriciel,-Optimisation"]], "Numpy arrays": [[33, "Numpy-arrays"]], "Creation d\u2019un array: notion de datatype, et dimensions": [[33, "Creation-d'un-array:-notion-de-datatype,-et-dimensions"]], "Indexation, Slicing, Fancy indexing": [[33, "Indexation,-Slicing,-Fancy-indexing"]], "View contre Copy": [[33, "View-contre-Copy"]], "Manipulation de shape": [[33, "Manipulation-de-shape"]], "Exercice 1 : Echiquier et Crible d\u2019Erathosth\u00e8ne": [[33, "Exercice-1-:-Echiquier-et-Crible-d'Erathosth\u00e8ne"]], "Manipulation et Op\u00e9rations sur les arrays": [[33, "Manipulation-et-Op\u00e9rations-sur-les-arrays"]], "Op\u00e9rations \u00e9l\u00e9ment par \u00e9l\u00e9ment": [[33, "Op\u00e9rations-\u00e9l\u00e9ment-par-\u00e9l\u00e9ment"]], "Broadcasting": [[33, "Broadcasting"]], "R\u00e9ductions": [[33, "R\u00e9ductions"]], "Alg\u00e8bre lin\u00e9aire": [[33, "Alg\u00e8bre-lin\u00e9aire"]], "Exemples simples": [[33, "Exemples-simples"]], "Numpy Matrix": [[33, "Numpy-Matrix"]], "G\u00e9n\u00e9ration de nombres al\u00e9atoires et statistiques": [[33, "G\u00e9n\u00e9ration-de-nombres-al\u00e9atoires-et-statistiques"]], "Exercice 2 : marches al\u00e9atoires": [[33, "Exercice-2-:-marches-al\u00e9atoires"]], "Exercice 3 : retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires": [[33, "Exercice-3-:-retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires"]], "Optimisation avec scipy": [[33, "Optimisation-avec-scipy"]], "Exercice 4 : simulation, r\u00e9gression, estimation par maximisation de la vraisemblance": [[33, "Exercice-4-:-simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance"]], "R\u00e9f\u00e9rences": [[33, "R\u00e9f\u00e9rences"]], "En diagonal": [[47, "en-diagonal"]], "Compl\u00e9ments": [[47, null], [48, null]], "Tous les notebooks": [[51, "tous-les-notebooks"]], "Enonc\u00e9 - Correction": [[51, "enonce-correction"]], "Data": [[51, "data"], [51, null]], "Correction d\u2019examens": [[51, "correction-d-examens"]], "Examens": [[51, null]], "Probl\u00e8me d\u2019ordonnancement": [[57, "Probl\u00e8me-d'ordonnancement"]], "Q1 : \u00e9crire un algorithme qui d\u00e9termine dans quel ordre on peut ex\u00e9cuter les t\u00e2ches.": [[57, "Q1-:-\u00e9crire-un-algorithme-qui-d\u00e9termine-dans-quel-ordre-on-peut-ex\u00e9cuter-les-t\u00e2ches."]], "Q2 : Et si les t\u00e2ches n\u2019ont plus la m\u00eame dur\u00e9e ?": [[57, "Q2-:-Et-si-les-t\u00e2ches-n'ont-plus-la-m\u00eame-dur\u00e9e-?"]], "Jeux de dictionnaires, plus grand suffixe commun": [[62, "Jeux-de-dictionnaires,-plus-grand-suffixe-commun"]], "Exercice 1 : trouver les deux mots qui partagent le plus grand suffixe en commun": [[62, "Exercice-1-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun"], [62, "id1"]], "Exercice 2 : constuire un dictionnaire qui associe \u00e0 chaque lettre tous les mots se terminant par celle-ci": [[62, "Exercice-2-:-constuire-un-dictionnaire-qui-associe-\u00e0-chaque-lettre-tous-les-mots-se-terminant-par-celle-ci"], [62, "id2"]], "Exercice 3 : trouver les deux mots qui partagent le plus grand suffixe en commun en utilisant le dictionnaire pr\u00e9c\u00e9dent": [[62, "Exercice-3-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun-en-utilisant-le-dictionnaire-pr\u00e9c\u00e9dent"], [62, "id3"]], "Exercice 4 : mesurer le temps pris par chaque fonction": [[62, "Exercice-4-:-mesurer-le-temps-pris-par-chaque-fonction"], [62, "id4"]], "Exercice 5 : expliquer pourquoi telle m\u00e9thode est plus rapide.": [[62, "Exercice-5-:-expliquer-pourquoi-telle-m\u00e9thode-est-plus-rapide."], [62, "id5"]], "Exercice 6 : pousser l\u2019id\u00e9e plus loin et construire un trie": [[62, "Exercice-6-:-pousser-l'id\u00e9e-plus-loin-et-construire-un-trie"], [62, "id6"]], "A conna\u00eetre": [[96, null]], "Programmation dynamique": [[96, null]], "Probl\u00e8me NP-complets": [[96, null]], "Graphes": [[96, null]], "A parcourir": [[96, null]], "Correction": [[96, null], [121, "Correction"], [98, null]], "Web-Scraping - pokemon": [[121, "Web-Scraping---pokemon"]], "Fonction pour obtenir les caract\u00e9ristiques de pokemons": [[121, "Fonction-pour-obtenir-les-caract\u00e9ristiques-de-pokemons"]], "les images de pokemon": [[121, "les-images-de-pokemon"]], "Tests unitaires": [[124, "Tests-unitaires"]], "Un petit jeu": [[124, "Un-petit-jeu"]], "Une autre \u00e9criture": [[124, "Une-autre-\u00e9criture"]], "Des obstacles\u2026": [[124, "Des-obstacles..."]], "Ajouter d\u2019autres tests unitaires pour cette seconde version": [[124, "Ajouter-d'autres-tests-unitaires-pour-cette-seconde-version"]], "Changer la taille de l\u2019\u00e9chiquier": [[124, "Changer-la-taille-de-l'\u00e9chiquier"]], "Pour aller plus loin": [[124, "Pour-aller-plus-loin"]], "Tester une exception": [[124, "Tester-une-exception"]], "Programmation dynamique et plus court chemin": [[130, "Programmation-dynamique-et-plus-court-chemin"]], "Algorithme du plus court chemin": [[130, "Algorithme-du-plus-court-chemin"]], "La r\u00e9partition des skis": [[130, "La-r\u00e9partition-des-skis"]], "Exercice facultatif": [[130, "Exercice-facultatif"], [131, "Exercice-facultatif"]], "Exercice 5": [[130, "Exercice-5"], [131, "Exercice-5"]], "Exercice 6": [[130, "Exercice-6"], [131, "Exercice-6"]], "Exercice 7": [[130, "Exercice-7"], [131, "Exercice-7"]], "Exercice 8": [[130, "Exercice-8"], [131, "Exercice-8"]], "Prolongements : degr\u00e9 de s\u00e9paration sur Facebook": [[130, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"], [131, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"]], "Programmation dynamique et plus court chemin (correction)": [[131, "Programmation-dynamique-et-plus-court-chemin-(correction)"]], "Collections d\u2019articles p\u00e9rissables": [[14, "collections-d-articles-perissables"]], "2023": [[14, null], [157, "id1"]], "2022": [[14, null]], "Jeu de d\u00e9, rotation sur un circuit (classes)": [[99, "Jeu-de-d\u00e9,-rotation-sur-un-circuit-(classes)"]], "De": [[99, "De"]], "Permutation": [[99, "Permutation"]], "Classe Permutation et d\u00e9composition en transitions": [[101, "Classe-Permutation-et-d\u00e9composition-en-transitions"]], "Composition": [[101, "Composition"]], "Op\u00e9rateur == et @": [[101, "Op\u00e9rateur-==-et-@"]], "D\u00e9composition": [[101, "D\u00e9composition"]], "Transposition": [[101, "Transposition"]], "Un exemple court pour d\u00e9m\u00ealer ce qui est chang\u00e9": [[101, "Un-exemple-court-pour-d\u00e9m\u00ealer-ce-qui-est-chang\u00e9"]], "Python 3.x": [[101, "Python-3.x"]], "tools": [[7, "tools"]], "decompress_zip": [[7, "decompress-zip"]], "download_and_unzip": [[7, "download-and-unzip"]], "draw_diagram": [[7, "draw-diagram"]], "total_size": [[7, "total-size"]], "profiling": [[7, "module-teachpyx.tools.profiling"]], "teachpyx.practice.rues_paris": [[6, "module-teachpyx.practice.rues_paris"]], "2023-11-31 : rappel feuille de route 2023": [[13, "rappel-feuille-de-route-2023"]], "S\u00e9ance 1": [[13, "seance-1"]], "S\u00e9ance 2": [[13, "seance-2"]], "S\u00e9ance 3": [[13, "seance-3"]], "S\u00e9ance 4": [[13, "seance-4"]], "S\u00e9ance 5": [[13, "seance-5"]], "S\u00e9ance 8": [[13, "seance-8"]], "Calcul matriciel": [[32, "calcul-matriciel"]], "Numpy et tableau de contingence": [[37, "Numpy-et-tableau-de-contingence"]], "Cheat Sheets": [[38, "cheat-sheets"]], "Cheat Sheet on Git": [[40, "cheat-sheet-on-git"]], "Add a remote": [[40, "add-a-remote"]], "Add a submodule": [[40, "add-a-submodule"]], "Checkout a specific file from a remote": [[40, "checkout-a-specific-file-from-a-remote"]], "Create a new local branch": [[40, "create-a-new-local-branch"]], "Create a new remote branch": [[40, "create-a-new-remote-branch"]], "Push modification to remote repository": [[40, "push-modification-to-remote-repository"]], "Remove a submodule": [[40, "remove-a-submodule"]], "Reset a branch": [[40, "reset-a-branch"]], "Reset a submodule": [[40, "reset-a-submodule"]], "Update a branch": [[40, "update-a-branch"]], "Update a submodule": [[40, "update-a-submodule"]], "Update a submodule to the remote branch": [[40, "update-a-submodule-to-the-remote-branch"]], "Fix submodules": [[40, "fix-submodules"]], "Move multiple files": [[40, "move-multiple-files"]], "Rebase a branch to upsteam branch": [[40, "rebase-a-branch-to-upsteam-branch"]], "Rebase a branch to upsteam branch and erase history": [[40, "rebase-a-branch-to-upsteam-branch-and-erase-history"]], "Clone a part of a repository, not all": [[40, "clone-a-part-of-a-repository-not-all"]], "Pr\u00e9cis": [[41, "precis"]], "Cheat Sheet on Jenkins": [[42, "cheat-sheet-on-jenkins"]], "Installation": [[42, "installation"]], "Plugins": [[42, "plugins"]], "Start, Restart": [[42, "start-restart"]], "Reset passwords": [[42, "reset-passwords"]], "Cheat Sheet on Linux": [[43, "cheat-sheet-on-linux"]], "Classic": [[43, "classic"]], "Remove packages": [[43, "remove-packages"]], "Error with a package": [[43, "error-with-a-package"]], "Clean temporary files": [[43, "clean-temporary-files"]], "Hard drive": [[43, "hard-drive"]], "Processes": [[43, "processes"]], "Environment variable": [[43, "environment-variable"]], "Others": [[43, "others"]], "Apprendre la programmation avec Python": [[48, "apprendre-la-programmation-avec-python"]], "Lectures": [[48, null]], "Exercices": [[48, null]], "Older versions": [[48, "older-versions"]], "Exercices sur le langage python": [[98, "exercices-sur-le-langage-python"]], "Structure de donn\u00e9es": [[98, null]], "algorithmes tr\u00e8s simples": [[98, null]], "Outils": [[98, null]], "It\u00e9rateur": [[100, "It\u00e9rateur"]], "G\u00e9n\u00e9ration d\u2019un arbre al\u00e9atoire": [[100, "G\u00e9n\u00e9ration-d'un-arbre-al\u00e9atoire"]], "Profondeur maximale": [[100, "Profondeur-maximale"]], "Une classe pour repr\u00e9senter un arbre": [[102, "Une-classe-pour-repr\u00e9senter-un-arbre"]], "Premier jet": [[102, "Premier-jet"]], "Afficher l\u2019arbre": [[102, "Afficher-l'arbre"]], "Profondeur maximale : le plus grand chemin depuis la racine jusqu\u2019aux feuilles": [[102, "Profondeur-maximale-:-le-plus-grand-chemin-depuis-la-racine-jusqu'aux-feuilles"]], "Profondeur moyenne ?": [[102, "Profondeur-moyenne-?"]], "Interm\u00e8de : is ou == ?": [[102, "Interm\u00e8de-:-is-ou-==-?"]], "Distance d\u2019\u00e9dition (4 octobre)": [[156, "Distance-d'\u00e9dition-(4-octobre)"]], "distance avec des mots de m\u00eame longueur": [[156, "distance-avec-des-mots-de-m\u00eame-longueur"]], "Distance avec des mots presque de m\u00eame longueur": [[156, "Distance-avec-des-mots-presque-de-m\u00eame-longueur"]], "Cas g\u00e9n\u00e9rique": [[156, "Cas-g\u00e9n\u00e9rique"]], "Co\u00fbt algorithmique": [[156, "Co\u00fbt-algorithmique"]], "Distance de Levenshtein": [[156, "Distance-de-Levenshtein"]], "Avec alignement": [[156, "Avec-alignement"]], "Un co\u00fbt diff\u00e9rent pour les accents": [[156, "Un-co\u00fbt-diff\u00e9rent-pour-les-accents"]], "Pivot de Gauss": [[158, "Pivot-de-Gauss"]], "Noteooks \u00e9crits durant les s\u00e9ances": [[159, "noteooks-ecrits-durant-les-seances"]], "Change Logs": [[0, "change-logs"]], "0.3.1": [[0, "id1"]], "License": [[50, "license"]]}, "indexentries": {"algorithme": [[1, "index-0"]], "culture": [[1, "index-0"]], "culture algorithmique": [[1, "index-0"]], "commentaire_accentues() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.commentaire_accentues"]], "compte() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.compte"]], "construit_matrice_carree() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.construit_matrice_carree"]], "dictionnaire_modifie_dans_la_boucle() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dictionnaire_modifie_dans_la_boucle"]], "dix_entiers_carre() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dix_entiers_carre"]], "enumerate_permutations() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations"]], "enumerate_permutations_recursive() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations_recursive"]], "integrale() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.integrale"]], "mat2text() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2text"]], "mat2vect() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2vect"]], "minindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.minindex"]], "module": [[2, "module-teachpyx.examples.classiques"], [2, "module-teachpyx.examples.construction_classique"], [3, "module-teachpyx.faq.faq_exception"], [3, "module-teachpyx.faq.faq_numpy"], [3, "module-teachpyx.faq.faq_python"], [5, "module-teachpyx.examples.numpysex"], [6, "module-teachpyx.practice.rues_paris"], [7, "module-teachpyx.tools.profiling"], [178, "index-0"]], "recherche() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche"]], "recherche_dichotomique() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche_dichotomique"]], "repetition_a_eviter() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.repetition_a_eviter"]], "somme() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.somme"]], "str2date() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.str2date"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "text2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.text2mat"]], "triindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.triindex"]], "vect2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.vect2mat"]], "distribution (classe dans teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.Distribution"]], "pqpiperror": [[3, "teachpyx.faq.faq_python.PQPipError"]], "call_stack() (dans le module teachpyx.faq.faq_exception)": [[3, "teachpyx.faq.faq_exception.call_stack"]], "class_getitem() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.class_getitem"]], "difference_div() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.difference_div"]], "entier_grande_taille() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.entier_grande_taille"]], "enumerate_regex_search() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.enumerate_regex_search"]], "get_day_name() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_day_name"]], "get_installed_distributions() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_installed_distributions"]], "get_month_name() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_month_name"]], "get_package_info() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_package_info"]], "get_packages_list() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_packages_list"]], "information_about_package() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.information_about_package"]], "list_of_installed_packages() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.list_of_installed_packages"]], "property_example() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.property_example"]], "python_path() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.python_path"]], "same_variable() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.same_variable"]], "sortable_class() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.sortable_class"]], "stringio() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.stringio"]], "teachpyx.faq.faq_exception": [[3, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_numpy": [[3, "module-teachpyx.faq.faq_numpy"]], "teachpyx.faq.faq_python": [[3, "module-teachpyx.faq.faq_python"]], "to_float32() (dans le module teachpyx.faq.faq_numpy)": [[3, "teachpyx.faq.faq_numpy.to_float32"]], "numpy_matrix2list() (dans le module teachpyx.examples.numpysex)": [[5, "teachpyx.examples.numpysex.numpy_matrix2list"]], "numpy_types() (dans le module teachpyx.examples.numpysex)": [[5, "teachpyx.examples.numpysex.numpy_types"]], "teachpyx.examples.numpysex": [[5, "module-teachpyx.examples.numpysex"]], "bellman() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.bellman"]], "connected_components() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.connected_components"]], "distance_haversine() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.distance_haversine"]], "distance_paris() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.distance_paris"]], "euler_path() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.euler_path"]], "eulerien_extension() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.eulerien_extension"]], "get_data() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.get_data"]], "graph_degree() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.graph_degree"]], "kruskal() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.kruskal"]], "possible_edges() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.possible_edges"]], "teachpyx.practice.rues_paris": [[6, "module-teachpyx.practice.rues_paris"]], "profilenode (classe dans teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.ProfileNode"]], "add_called_by() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.add_called_by"]], "add_calls_to() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.add_calls_to"]], "as_dict() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.as_dict"]], "decompress_zip() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.decompress_zip"]], "download_and_unzip() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.download_and_unzip"]], "draw_diagram() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.draw_diagram"]], "filter_node_() (m\u00e9thode statique teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.filter_node_"]], "get_root() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.get_root"]], "key (propri\u00e9t\u00e9 teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.key"]], "profile() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile"]], "profile2df() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile2df"]], "profile2graph() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile2graph"]], "teachpyx.tools.profiling": [[7, "module-teachpyx.tools.profiling"]], "to_json() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.to_json"]], "to_text() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.to_text"]], "total_size() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.total_size"]], "ubuntu": [[9, "index-0"]], "wsl": [[9, "index-0"]], "cartopy": [[9, "index-0"]], "code jam": [[10, "index-0"]], "harry potter": [[11, "index-0"]], "hermionne": [[11, "index-0"]], "\u00e9nigme": [[11, "index-0"]], "dataframe": [[31, "index-0"]], "matrice": [[31, "index-0"]], "cheat sheet": [[38, "index-0"], [44, "index-0"]], "conseil": [[39, "index-0"]], "boucle": [[49, "index-0"], [174, "indexmathe-Boucle0"], [174, "index-3"]], "s\u00e9quence": [[49, "index-0"]], "test": [[49, "index-0"], [174, "index-0"]], "d\u00e9finition": [[160, "indexmathe-D\u00e9finition0"], [160, "indexmathe-D\u00e9finition1"], [160, "indexmathe-D\u00e9finition2"], [160, "indexmathe-D\u00e9finition3"], [160, "indexmathe-D\u00e9finition4"], [160, "indexmathe-D\u00e9finition5"], [160, "indexmathe-D\u00e9finition6"], [160, "indexmathe-D\u00e9finition7"], [174, "indexmathe-D\u00e9finition0"], [174, "indexmathe-D\u00e9finition1"], [174, "indexmathe-D\u00e9finition2"], [174, "indexmathe-D\u00e9finition3"], [174, "indexmathe-D\u00e9finition4"], [174, "indexmathe-D\u00e9finition5"], [175, "indexmathe-D\u00e9finition0"], [175, "indexmathe-D\u00e9finition1"], [175, "indexmathe-D\u00e9finition2"], [175, "indexmathe-D\u00e9finition3"], [175, "indexmathe-D\u00e9finition4"], [175, "indexmathe-D\u00e9finition5"], [175, "indexmathe-D\u00e9finition6"], [175, "indexmathe-D\u00e9finition7"], [175, "indexmathe-D\u00e9finition8"], [175, "indexmathe-D\u00e9finition9"], [178, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d1 : classe": [[160, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : instantiaion": [[160, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : m\u00e9thode": [[160, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : attribut": [[160, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : m\u00e9thode statique": [[160, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : attribut statique": [[160, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : h\u00e9ritage": [[160, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : surcharge": [[160, "indexmathe-D\u00e9finition7"]], "syntaxe": [[160, "indexmathe-Syntaxe0"], [160, "indexmathe-Syntaxe1"], [160, "indexmathe-Syntaxe10"], [160, "indexmathe-Syntaxe11"], [160, "indexmathe-Syntaxe12"], [160, "indexmathe-Syntaxe13"], [160, "indexmathe-Syntaxe14"], [160, "indexmathe-Syntaxe15"], [160, "indexmathe-Syntaxe2"], [160, "indexmathe-Syntaxe3"], [160, "indexmathe-Syntaxe4"], [160, "indexmathe-Syntaxe5"], [160, "indexmathe-Syntaxe6"], [160, "indexmathe-Syntaxe7"], [160, "indexmathe-Syntaxe8"], [160, "indexmathe-Syntaxe9"], [163, "indexmathe-Syntaxe0"], [163, "indexmathe-Syntaxe1"], [174, "indexmathe-Syntaxe0"], [174, "indexmathe-Syntaxe1"], [174, "indexmathe-Syntaxe2"], [174, "indexmathe-Syntaxe3"], [174, "indexmathe-Syntaxe4"], [174, "indexmathe-Syntaxe5"], [174, "indexmathe-Syntaxe6"], [174, "indexmathe-Syntaxe7"], [174, "indexmathe-Syntaxe8"], [178, "indexmathe-Syntaxe0"], [178, "indexmathe-Syntaxe1"], [178, "indexmathe-Syntaxe2"]], "syntaxe s1 : d\u00e9claration d'une classe": [[160, "indexmathe-Syntaxe0"]], "syntaxe s10 : d\u00e9claration d'un attribut statique": [[160, "indexmathe-Syntaxe9"]], "syntaxe s11 : d\u00e9claration d'une propri\u00e9t\u00e9": [[160, "indexmathe-Syntaxe10"]], "syntaxe s12 : d\u00e9claration d'une propri\u00e9t\u00e9 (2)": [[160, "indexmathe-Syntaxe11"]], "syntaxe s13 : d\u00e9claration de l'op\u00e9rateur __copy__": [[160, "indexmathe-Syntaxe12"]], "syntaxe s14 : d\u00e9claration d'attributs fig\u00e9s": [[160, "indexmathe-Syntaxe13"]], "syntaxe s15 : h\u00e9ritage": [[160, "indexmathe-Syntaxe14"]], "syntaxe s16 : surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[160, "indexmathe-Syntaxe15"]], "syntaxe s2 : instanciation d'une classe": [[160, "indexmathe-Syntaxe1"]], "syntaxe s3 : d\u00e9claration d'une m\u00e9thode": [[160, "indexmathe-Syntaxe2"]], "syntaxe s4 : appel d'une m\u00e9thode": [[160, "indexmathe-Syntaxe3"]], "syntaxe s5 : d\u00e9claration d'un attribut": [[160, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'un constructeur": [[160, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'un constructeur": [[160, "indexmathe-Syntaxe6"]], "syntaxe s8 : d\u00e9claration de l'op\u00e9rateur __str__": [[160, "indexmathe-Syntaxe7"]], "syntaxe s9 : d\u00e9claration d'une m\u00e9thode statique": [[160, "indexmathe-Syntaxe8"]], "__copy__": [[160, "index-13"]], "__dict__": [[160, "index-6"]], "class": [[160, "index-0"]], "commentaire": [[160, "index-7"], [174, "index-10"], [175, "index-3"], [175, "index-54"]], "constructeur": [[160, "index-4"]], "copy": [[160, "index-13"], [160, "index-15"], [175, "index-41"], [175, "index-45"]], "deepcopy": [[160, "index-15"], [175, "index-41"]], "def": [[160, "index-3"]], "destructeur": [[160, "index-5"]], "dir": [[160, "index-8"]], "garbage collector": [[160, "index-14"], [163, "index-13"]], "help": [[160, "index-7"]], "h\u00e9ritage": [[160, "index-17"], [163, "index-9"]], "instance": [[160, "index-2"]], "issubclass": [[160, "index-18"]], "m\u00e9thode statique": [[160, "index-11"]], "op\u00e9rateur retourn\u00e9": [[160, "index-9"]], "pass": [[160, "index-1"], [174, "index-2"]], "propri\u00e9t\u00e9": [[160, "index-12"]], "self": [[160, "index-3"]], "s\u00e9rialisation": [[160, "index-16"], [176, "index-5"], [179, "index-0"]], "yield": [[160, "index-10"], [174, "index-14"]], "attribut": [[162, "index-0"]], "attributeerror": [[163, "index-5"]], "importerror": [[163, "index-5"]], "indentationerror": [[163, "index-4"]], "indexerror": [[163, "index-6"]], "keyerror": [[163, "index-6"]], "nameerror": [[163, "index-5"]], "oserror": [[163, "index-7"]], "syntaxerror": [[163, "index-4"]], "syntaxe s1 : attraper une exception": [[163, "indexmathe-Syntaxe0"]], "syntaxe s2 : lever une exception": [[163, "indexmathe-Syntaxe1"]], "typeerror": [[163, "index-6"]], "unicodeerror": [[163, "index-7"]], "valueerror": [[163, "index-6"]], "__str__": [[163, "index-10"]], "as": [[163, "index-3"]], "context manager": [[163, "index-14"]], "division par z\u00e9ro": [[163, "index-0"]], "except": [[163, "index-2"]], "exception": [[163, "index-0"]], "it\u00e9rateur": [[163, "index-11"], [174, "index-14"], [174, "index-6"]], "pile d'appels": [[163, "index-1"]], "pile d'ex\u00e9cution": [[163, "index-1"]], "raise": [[163, "index-8"]], "try": [[163, "index-2"]], "valeur aberrante": [[163, "index-12"]], "test unitaire": [[166, "index-1"]], "warning": [[166, "index-0"]], "checkbutton": [[168, "index-5"]], "entry": [[168, "index-1"], [168, "index-3"]], "intvar": [[168, "index-6"]], "listbox": [[168, "index-7"]], "radiobutton": [[168, "index-6"]], "text": [[168, "index-4"]], "bouton": [[168, "index-2"]], "bouton radio": [[168, "index-6"]], "case \u00e0 cocher": [[168, "index-5"]], "compte \u00e0 rebours": [[168, "index-8"]], "widget": [[168, "index-0"]], "zone de saisie": [[168, "index-3"]], "zone de saisie \u00e0 plusieurs lignes": [[168, "index-4"]], "zone de texte": [[168, "index-1"]], "jeux de caract\u00e8res": [[172, "index-0"]], ":": [[174, "index-0"], [174, "index-3"]], "boucle b1 : test": [[174, "indexmathe-Boucle0"]], "d\u00e9finition d1 : test": [[174, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : fonction": [[174, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : fonction r\u00e9cursive": [[174, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : port\u00e9e d'un variable": [[174, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : variable locale": [[174, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : variable globale": [[174, "indexmathe-D\u00e9finition5"]], "stopiteration": [[174, "index-6"]], "syntaxe s1 : tests": [[174, "indexmathe-Syntaxe0"]], "syntaxe s2 : instruction pass": [[174, "indexmathe-Syntaxe1"]], "syntaxe s3 : boucle while": [[174, "indexmathe-Syntaxe2"]], "syntaxe s4 : boucle for": [[174, "indexmathe-Syntaxe3"]], "syntaxe s5 : liste en extension": [[174, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'une fonction": [[174, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'une fonction": [[174, "indexmathe-Syntaxe6"]], "syntaxe s8 : valeurs par d\u00e9faut": [[174, "indexmathe-Syntaxe7"]], "syntaxe s9 : nombre ind\u00e9fini de param\u00e8tres": [[174, "indexmathe-Syntaxe8"]], "affectations multiples": [[174, "index-7"]], "boucle infinie": [[174, "index-4"]], "break": [[174, "index-9"]], "compile": [[174, "index-16"]], "continue": [[174, "index-8"]], "elif": [[174, "index-0"]], "else": [[174, "index-0"]], "enumerate": [[174, "index-21"]], "eval": [[174, "index-15"], [175, "index-49"]], "exec": [[174, "index-16"]], "fonction r\u00e9cursive": [[174, "index-12"]], "for": [[174, "index-3"], [174, "index-5"]], "g\u00e9n\u00e9rateur": [[174, "index-14"]], "if": [[174, "index-0"]], "in": [[174, "index-3"], [175, "index-15"], [175, "index-25"], [175, "index-35"], [175, "index-44"]], "indentation": [[174, "index-17"]], "lambda": [[174, "index-13"]], "map": [[174, "index-18"]], "passage par adresse": [[174, "index-11"]], "priorit\u00e9 des op\u00e9rateurs": [[174, "index-1"], [175, "index-10"]], "r\u00e9cursivit\u00e9": [[174, "index-12"]], "sorted": [[174, "index-20"]], "while": [[174, "index-3"]], "zip": [[174, "index-19"], [175, "index-39"]], "\"": [[175, "index-17"]], "\"\"\"": [[175, "index-17"]], "#": [[175, "index-54"]], "%": [[175, "index-22"], [175, "index-8"]], "%d": [[175, "index-22"]], "%f": [[175, "index-22"]], "%s": [[175, "index-22"]], "&": [[175, "index-47"], [175, "index-8"]], "'": [[175, "index-17"]], "'''": [[175, "index-17"]], "*": [[175, "index-20"], [175, "index-25"], [175, "index-35"], [175, "index-8"]], "**": [[175, "index-8"]], "*=": [[175, "index-20"], [175, "index-25"], [175, "index-35"], [175, "index-8"]], "+": [[175, "index-20"], [175, "index-25"], [175, "index-35"], [175, "index-8"]], "+=": [[175, "index-20"], [175, "index-25"], [175, "index-35"], [175, "index-8"]], "-": [[175, "index-8"]], "-=": [[175, "index-8"]], "/": [[175, "index-8"]], "//": [[175, "index-11"]], "/=": [[175, "index-8"]], "<": [[175, "index-14"]], "<<": [[175, "index-8"]], "<=": [[175, "index-14"]], "=": [[175, "index-14"], [175, "index-52"]], "==": [[175, "index-14"]], ">": [[175, "index-14"]], ">=": [[175, "index-14"]], ">>": [[175, "index-8"]], "d\u00e9finition d1 : variable": [[175, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d10 : frozenset": [[175, "indexmathe-D\u00e9finition9"]], "d\u00e9finition d2 : constante": [[175, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : type immuable (ou immutable)": [[175, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : cha\u00eene de caract\u00e8res": [[175, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : tuple": [[175, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : type modifiable (ou mutable)": [[175, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : liste": [[175, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : dictionnaire": [[175, "indexmathe-D\u00e9finition7"]], "d\u00e9finition d9 : set": [[175, "indexmathe-D\u00e9finition8"]], "false": [[175, "index-12"]], "none": [[175, "index-6"]], "true": [[175, "index-12"]], "[:]": [[175, "index-20"], [175, "index-25"], [175, "index-35"], [175, "index-44"]], "[]": [[175, "index-20"], [175, "index-25"], [175, "index-35"], [175, "index-44"]], "\\": [[175, "index-17"], [175, "index-4"]], "\\%": [[175, "index-18"]], "\\\\": [[175, "index-18"]], "\\n": [[175, "index-18"]], "\\r": [[175, "index-18"]], "\\t": [[175, "index-18"]], "__builtins__": [[175, "index-50"]], "__doc__": [[175, "index-50"]], "__file__": [[175, "index-50"]], "__name__": [[175, "index-50"]], "affectation multiple": [[175, "index-52"]], "and": [[175, "index-13"]], "append": [[175, "index-35"]], "arrondi": [[175, "index-9"]], "b\"\"": [[175, "index-29"]], "b''": [[175, "index-29"]], "backslash": [[175, "index-4"]], "bool": [[175, "index-12"]], "bytearray": [[175, "index-33"]], "bytes": [[175, "index-27"]], "cha\u00eene de caract\u00e8res": [[175, "index-16"]], "cl\u00e9": [[175, "index-43"]], "comparaison": [[175, "index-14"]], "complex": [[175, "index-26"]], "concat\u00e9nation": [[175, "index-40"]], "constante": [[175, "index-2"]], "conversion": [[175, "index-9"]], "copie": [[175, "index-41"], [175, "index-45"]], "count": [[175, "index-21"], [175, "index-28"]], "decode": [[175, "index-30"]], "del": [[175, "index-44"]], "dict": [[175, "index-42"]], "dictionnaire": [[175, "index-42"]], "division enti\u00e8re": [[175, "index-11"]], "divmod": [[175, "index-53"]], "encode": [[175, "index-30"]], "endswith": [[175, "index-21"], [175, "index-28"]], "entier": [[175, "index-7"]], "extend": [[175, "index-35"]], "extra caract\u00e8re": [[175, "index-18"]], "find": [[175, "index-21"], [175, "index-28"]], "float": [[175, "index-7"]], "format": [[175, "index-23"]], "formattage": [[175, "index-22"]], "formmattage": [[175, "index-23"]], "fromhex": [[175, "index-29"]], "frozen set": [[175, "index-47"]], "get": [[175, "index-44"]], "getsizeof": [[175, "index-32"]], "id": [[175, "index-46"]], "identificateur": [[175, "index-1"]], "immuable": [[175, "index-5"]], "immutable": [[175, "index-5"]], "index": [[175, "index-35"]], "insert": [[175, "index-35"]], "int": [[175, "index-7"]], "is": [[175, "index-15"]], "items": [[175, "index-44"]], "join": [[175, "index-21"], [175, "index-28"]], "keys": [[175, "index-44"]], "len": [[175, "index-35"], [175, "index-44"]], "list": [[175, "index-34"]], "liste": [[175, "index-34"]], "liste en extension": [[175, "index-38"]], "lower": [[175, "index-21"]], "max": [[175, "index-35"], [175, "index-44"]], "min": [[175, "index-35"], [175, "index-44"]], "modifiable": [[175, "index-31"]], "mutable": [[175, "index-31"]], "not": [[175, "index-13"], [175, "index-35"]], "op\u00e9rateur": [[175, "index-13"], [175, "index-14"], [175, "index-15"], [175, "index-20"], [175, "index-25"], [175, "index-35"], [175, "index-8"]], "or": [[175, "index-13"]], "pop": [[175, "index-35"], [175, "index-44"]], "print": [[175, "index-48"]], "r\"\"": [[175, "index-19"]], "r''": [[175, "index-19"]], "range": [[175, "index-37"]], "replace": [[175, "index-28"]], "repr": [[175, "index-48"]], "reverse": [[175, "index-35"]], "r\u00e9el": [[175, "index-7"]], "set": [[175, "index-47"]], "sort": [[175, "index-35"], [175, "index-36"]], "split": [[175, "index-21"], [175, "index-28"]], "startswith": [[175, "index-21"], [175, "index-28"]], "str": [[175, "index-16"]], "string": [[175, "index-16"]], "tuple": [[175, "index-24"]], "type": [[175, "index-1"], [175, "index-51"]], "type modifiable": [[175, "index-31"]], "type mutable": [[175, "index-31"]], "upper": [[175, "index-21"]], "valeur": [[175, "index-43"]], "values": [[175, "index-44"]], "variable": [[175, "index-0"]], "|": [[175, "index-8"]], "encoding": [[176, "index-3"]], "fichier": [[176, "index-0"]], "format binaire": [[176, "index-4"]], "format texte": [[176, "index-1"]], "ressource": [[176, "index-2"]], "d\u00e9finition d1 : point d'entr\u00e9e du programme": [[178, "indexmathe-D\u00e9finition0"]], "syntaxe s1 : importer un module (1)": [[178, "indexmathe-Syntaxe0"]], "syntaxe s2 : importer un module (2)": [[178, "indexmathe-Syntaxe1"]], "syntaxe s3 : importer un module (3)": [[178, "indexmathe-Syntaxe2"]], "import": [[178, "index-2"]], "point d'entr\u00e9e": [[178, "index-1"]], "py": [[178, "index-3"]], "pyc": [[178, "index-3"]], "protobuf": [[179, "index-1"]], "gil": [[180, "index-0"]], "global lock interpreter": [[180, "index-0"]], "asyncio": [[180, "index-1"]], "gevent": [[180, "index-1"]], "uvloop": [[180, "index-1"]], "event": [[181, "index-2"]], "lock": [[181, "index-3"]], "futures": [[181, "index-5"]], "parall\u00e9lisation": [[181, "index-0"]], "promesses": [[181, "index-5"]], "promises": [[181, "index-5"]], "queue": [[181, "index-4"]], "sleep": [[181, "index-1"]], "synchronisation": [[181, "index-0"]], "thread": [[181, "index-0"]], "t\u00e2ches": [[181, "index-5"]], "verrou": [[181, "index-3"]]}})