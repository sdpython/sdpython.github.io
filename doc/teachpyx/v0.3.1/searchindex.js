Search.setIndex({"docnames": ["CHANGELOGS", "algorithm_culture", "api/classique", "api/faqs", "api/index", "api/numpysex", "api/practice/rues_paris", "api/tools", "articles/2022-11-31-route2022", "articles/2022-12-07-cartopy", "articles/2023-08-03-code-jam", "articles/2023-08-09-hermionne", "articles/2023-09-06-ensae", "articles/2023-11-31-route2023", "articles/index", "auto_examples/index", "auto_examples/plot_einstein_riddle", "auto_examples/plot_float_and_double_rouding", "auto_examples/plot_gil_example", "auto_examples/plot_hypercube", "auto_examples/plot_lambda_function", "auto_examples/plot_matador", "auto_examples/plot_numpy_tricks", "auto_examples/plot_pandas_groupby", "auto_examples/plot_partie_dame", "auto_examples/plot_serialisation_examples", "auto_examples/plot_serialisation_protobuf", "auto_examples/plot_tarabiscote", "auto_examples/plot_tsp", "auto_examples/sg_execution_times", "c_data/dataframes", "c_data/index", "c_data/matrices", "c_data/nb_array", "c_data/nb_dataframe", "c_data/nb_numpy", "c_data/nb_pandas", "c_resume/conseil_programmes", "c_resume/index", "c_resume/python_sheet", "i_ex", "i_faq", "i_index", "index", "introduction", "license", "notebook_gallery", "practice/algo-base/BJKST", "practice/algo-base/exercice_compose_connexe", "practice/algo-base/exercice_echelle", "practice/algo-base/exercice_edit_distance", "practice/algo-base/exercice_editdist", "practice/algo-base/exercice_ordonnancement", "practice/algo-base/exercice_plus_grande_somme", "practice/algo-base/exercice_random_graph", "practice/algo-base/exercice_simulation_covid", "practice/algo-base/exercice_simulation_covid_simple", "practice/algo-base/exercice_suffix", "practice/algo-base/exercice_topk", "practice/algo-base/exercice_tsp", "practice/algo-base/exercice_xn", "practice/algo-base/matrix_dictionary", "practice/algo-base/tsp_aparte", "practice/algo-compose/exercice_morse", "practice/algo-compose/paris_parcours", "practice/algo-compose/vigenere", "practice/exams", "practice/exams/interro_rapide_20_minutes_2014_09", "practice/exams/interro_rapide_20_minutes_2014_10", "practice/exams/interro_rapide_20_minutes_2014_11", "practice/exams/interro_rapide_20_minutes_2014_12", "practice/exams/interro_rapide_20_minutes_2015_09", "practice/exams/interro_rapide_20_minutes_2015_11", "practice/exams/td_note_2013_bout_de_code_coloriage", "practice/exams/td_note_2013_coloriage_correction", "practice/exams/td_note_2015", "practice/exams/td_note_2015_rattrapage_enonce", "practice/exams/td_note_2016", "practice/exams/td_note_2017", "practice/exams/td_note_2017_2", "practice/exams/td_note_2018_1", "practice/exams/td_note_2018_2", "practice/exams/td_note_2019_1", "practice/exams/td_note_2019_2", "practice/exams/td_note_2020_1", "practice/exams/td_note_2020_2", "practice/exams/td_note_2021", "practice/exams/td_note_2022", "practice/exams/td_note_2022_rattrapage", "practice/exams/td_note_2022_rattrapage2", "practice/exams/td_note_2023", "practice/index_algo", "practice/index_exam", "practice/index_python", "practice/py-base/classe_de", "practice/py-base/classe_permutation", "practice/py-base/classe_tree", "practice/py-base/classes_2048", "practice/py-base/classes_metro", "practice/py-base/code_liste_tuple", "practice/py-base/code_multinomial", "practice/py-base/coloriage_carre", "practice/py-base/de_rotation", "practice/py-base/exercice_hash", "practice/py-base/exercice_json_xml", "practice/py-base/exercice_pi", "practice/py-base/exercice_regex", "practice/py-base/exercice_serialisation_json", "practice/py-base/histogramme_rapide", "practice/py-base/nbheap", "practice/py-base/pivot_gauss", "practice/py-base/profile_gini", "practice/py-base/profiling_conv", "practice/py-base/profiling_example", "practice/py-base/recherche_dichotomique", "practice/py-base/scrapping", "practice/py-base/structures_donnees_conversion", "practice/py-base/tableau_contingence", "practice/py-base/tests_unitaires", "practice/py-base/tri_nlnd", "practice/tds-algo/gentry_integer_encryption", "practice/tds-algo/gentry_integer_encryption_correction", "practice/tds-algo/knn_high_dimension", "practice/tds-algo/knn_high_dimension_correction", "practice/tds-algo/plus_court_chemin", "practice/tds-algo/plus_court_chemin_correction", "practice/tds-algo/puzzle_algo_1", "practice/tds-algo/puzzle_algo_1_correction", "practice/tds-algo/puzzle_algo_2", "practice/tds-algo/puzzle_algo_2_correction", "practice/tds-base/classes_carre_magique", "practice/tds-base/classes_carre_magique_correction", "practice/tds-base/classes_heritage", "practice/tds-base/classes_heritage_correction", "practice/tds-base/dictionnaire_vigenere", "practice/tds-base/dictionnaire_vigenere_correction", "practice/tds-base/integrale_rectangle", "practice/tds-base/integrale_rectangle_correction", "practice/tds-base/j2048", "practice/tds-base/j2048_correction", "practice/tds-base/module_file_regex", "practice/tds-base/module_file_regex_correction", "practice/tds-base/premiers_pas", "practice/tds-base/premiers_pas_correction", "practice/tds-base/pyramide_bigarree", "practice/tds-base/pyramide_bigarree_correction", "practice/tds-base/texte_langue", "practice/tds-base/texte_langue_correction", "practice/tds-base/variable_boucle_tests", "practice/tds-base/variable_boucle_tests_correction", "py/c_classes/classes", "py/c_classes/index", "py/c_classes/questions", "py/c_exception/exception", "py/c_exception/exception_ext", "py/c_exception/index", "py/c_exception/warning", "py/c_gui/index", "py/c_gui/tkinter", "py/c_lang/collections", "py/c_lang/constructions", "py/c_lang/dates", "py/c_lang/encoding", "py/c_lang/index", "py/c_lang/syntaxe", "py/c_lang/types", "py/c_module/files", "py/c_module/index", "py/c_module/module", "py/c_module/serialization", "py/c_parallelisation/index", "py/c_parallelisation/thread", "py/c_regex/index", "py/c_regex/regex", "py/index"], "filenames": ["CHANGELOGS.rst", "algorithm_culture.rst", "api/classique.rst", "api/faqs.rst", "api/index.rst", "api/numpysex.rst", "api/practice/rues_paris.rst", "api/tools.rst", "articles/2022-11-31-route2022.rst", "articles/2022-12-07-cartopy.rst", "articles/2023-08-03-code-jam.rst", "articles/2023-08-09-hermionne.rst", "articles/2023-09-06-ensae.rst", "articles/2023-11-31-route2023.rst", "articles/index.rst", "auto_examples/index.rst", "auto_examples/plot_einstein_riddle.rst", "auto_examples/plot_float_and_double_rouding.rst", "auto_examples/plot_gil_example.rst", "auto_examples/plot_hypercube.rst", "auto_examples/plot_lambda_function.rst", "auto_examples/plot_matador.rst", "auto_examples/plot_numpy_tricks.rst", "auto_examples/plot_pandas_groupby.rst", "auto_examples/plot_partie_dame.rst", "auto_examples/plot_serialisation_examples.rst", "auto_examples/plot_serialisation_protobuf.rst", "auto_examples/plot_tarabiscote.rst", "auto_examples/plot_tsp.rst", "auto_examples/sg_execution_times.rst", "c_data/dataframes.rst", "c_data/index.rst", "c_data/matrices.rst", "c_data/nb_array.ipynb", "c_data/nb_dataframe.ipynb", "c_data/nb_numpy.ipynb", "c_data/nb_pandas.ipynb", "c_resume/conseil_programmes.rst", "c_resume/index.rst", "c_resume/python_sheet.rst", "i_ex.rst", "i_faq.rst", "i_index.rst", "index.rst", "introduction.rst", "license.rst", "notebook_gallery.rst", "practice/algo-base/BJKST.ipynb", "practice/algo-base/exercice_compose_connexe.ipynb", "practice/algo-base/exercice_echelle.ipynb", "practice/algo-base/exercice_edit_distance.ipynb", "practice/algo-base/exercice_editdist.ipynb", "practice/algo-base/exercice_ordonnancement.ipynb", "practice/algo-base/exercice_plus_grande_somme.ipynb", "practice/algo-base/exercice_random_graph.ipynb", "practice/algo-base/exercice_simulation_covid.ipynb", "practice/algo-base/exercice_simulation_covid_simple.ipynb", "practice/algo-base/exercice_suffix.ipynb", "practice/algo-base/exercice_topk.ipynb", "practice/algo-base/exercice_tsp.ipynb", "practice/algo-base/exercice_xn.ipynb", "practice/algo-base/matrix_dictionary.ipynb", "practice/algo-base/tsp_aparte.ipynb", "practice/algo-compose/exercice_morse.ipynb", "practice/algo-compose/paris_parcours.ipynb", "practice/algo-compose/vigenere.ipynb", "practice/exams.rst", "practice/exams/interro_rapide_20_minutes_2014_09.ipynb", "practice/exams/interro_rapide_20_minutes_2014_10.ipynb", "practice/exams/interro_rapide_20_minutes_2014_11.ipynb", "practice/exams/interro_rapide_20_minutes_2014_12.ipynb", "practice/exams/interro_rapide_20_minutes_2015_09.ipynb", "practice/exams/interro_rapide_20_minutes_2015_11.ipynb", "practice/exams/td_note_2013_bout_de_code_coloriage.ipynb", "practice/exams/td_note_2013_coloriage_correction.ipynb", "practice/exams/td_note_2015.ipynb", "practice/exams/td_note_2015_rattrapage_enonce.ipynb", "practice/exams/td_note_2016.ipynb", "practice/exams/td_note_2017.ipynb", "practice/exams/td_note_2017_2.ipynb", "practice/exams/td_note_2018_1.ipynb", "practice/exams/td_note_2018_2.ipynb", "practice/exams/td_note_2019_1.ipynb", "practice/exams/td_note_2019_2.ipynb", "practice/exams/td_note_2020_1.ipynb", "practice/exams/td_note_2020_2.ipynb", "practice/exams/td_note_2021.ipynb", "practice/exams/td_note_2022.ipynb", "practice/exams/td_note_2022_rattrapage.ipynb", "practice/exams/td_note_2022_rattrapage2.ipynb", "practice/exams/td_note_2023.ipynb", "practice/index_algo.rst", "practice/index_exam.rst", "practice/index_python.rst", "practice/py-base/classe_de.ipynb", "practice/py-base/classe_permutation.ipynb", "practice/py-base/classe_tree.ipynb", "practice/py-base/classes_2048.ipynb", "practice/py-base/classes_metro.ipynb", "practice/py-base/code_liste_tuple.ipynb", "practice/py-base/code_multinomial.ipynb", "practice/py-base/coloriage_carre.ipynb", "practice/py-base/de_rotation.ipynb", "practice/py-base/exercice_hash.ipynb", "practice/py-base/exercice_json_xml.ipynb", "practice/py-base/exercice_pi.ipynb", "practice/py-base/exercice_regex.ipynb", "practice/py-base/exercice_serialisation_json.ipynb", "practice/py-base/histogramme_rapide.ipynb", "practice/py-base/nbheap.ipynb", "practice/py-base/pivot_gauss.ipynb", "practice/py-base/profile_gini.ipynb", "practice/py-base/profiling_conv.ipynb", "practice/py-base/profiling_example.ipynb", "practice/py-base/recherche_dichotomique.ipynb", "practice/py-base/scrapping.ipynb", "practice/py-base/structures_donnees_conversion.ipynb", "practice/py-base/tableau_contingence.ipynb", "practice/py-base/tests_unitaires.ipynb", "practice/py-base/tri_nlnd.ipynb", "practice/tds-algo/gentry_integer_encryption.ipynb", "practice/tds-algo/gentry_integer_encryption_correction.ipynb", "practice/tds-algo/knn_high_dimension.ipynb", "practice/tds-algo/knn_high_dimension_correction.ipynb", "practice/tds-algo/plus_court_chemin.ipynb", "practice/tds-algo/plus_court_chemin_correction.ipynb", "practice/tds-algo/puzzle_algo_1.ipynb", "practice/tds-algo/puzzle_algo_1_correction.ipynb", "practice/tds-algo/puzzle_algo_2.ipynb", "practice/tds-algo/puzzle_algo_2_correction.ipynb", "practice/tds-base/classes_carre_magique.ipynb", "practice/tds-base/classes_carre_magique_correction.ipynb", "practice/tds-base/classes_heritage.ipynb", "practice/tds-base/classes_heritage_correction.ipynb", "practice/tds-base/dictionnaire_vigenere.ipynb", "practice/tds-base/dictionnaire_vigenere_correction.ipynb", "practice/tds-base/integrale_rectangle.ipynb", "practice/tds-base/integrale_rectangle_correction.ipynb", "practice/tds-base/j2048.ipynb", "practice/tds-base/j2048_correction.ipynb", "practice/tds-base/module_file_regex.ipynb", "practice/tds-base/module_file_regex_correction.ipynb", "practice/tds-base/premiers_pas.ipynb", "practice/tds-base/premiers_pas_correction.ipynb", "practice/tds-base/pyramide_bigarree.ipynb", "practice/tds-base/pyramide_bigarree_correction.ipynb", "practice/tds-base/texte_langue.ipynb", "practice/tds-base/texte_langue_correction.ipynb", "practice/tds-base/variable_boucle_tests.ipynb", "practice/tds-base/variable_boucle_tests_correction.ipynb", "py/c_classes/classes.rst", "py/c_classes/index.rst", "py/c_classes/questions.rst", "py/c_exception/exception.rst", "py/c_exception/exception_ext.rst", "py/c_exception/index.rst", "py/c_exception/warning.rst", "py/c_gui/index.rst", "py/c_gui/tkinter.rst", "py/c_lang/collections.rst", "py/c_lang/constructions.rst", "py/c_lang/dates.rst", "py/c_lang/encoding.rst", "py/c_lang/index.rst", "py/c_lang/syntaxe.rst", "py/c_lang/types.rst", "py/c_module/files.rst", "py/c_module/index.rst", "py/c_module/module.rst", "py/c_module/serialization.rst", "py/c_parallelisation/index.rst", "py/c_parallelisation/thread.rst", "py/c_regex/index.rst", "py/c_regex/regex.rst", "py/index.rst"], "titles": ["Change Logs", "Survol algorithmique", "examples.construction_classique", "faq", "Code inclus dans cette librairie", "examples.numpysex", "teachpyx.practice.rues_paris", "tools", "2022-11-31 : rappel feuille de route 2022", "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)", "2023-08-03 : Code Jam", "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne", "2023-09-06 : ENSAE", "2023-11-31 : rappel feuille de route 2023", "Collections d\u2019articles p\u00e9rissables", "Gallerie d\u2019exemples", "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution", "Float Conversion", "Le GIL", "Hypercube et autres exercices", "Astuces avec les lambda functions", "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations", "Points d\u2019impl\u00e9mentation avec numpy", "Pandas et groupby", "Parties de dames", "S\u00e9rialisation", "S\u00e9rialisation avec protobuf", "Exercices expliqu\u00e9s de programmation", "R\u00e9flexions autour du voyage de commerce (TSP)", "Computation times", "Dataframes", "Matrices et DataFrames", "Calcul matriciel", "Calcul Matriciel, Optimisation", "DataFrame et Graphes", "Calcul matriciel avec numpy (version courte)", "Manipulation de donn\u00e9es avec pandas (version courte)", "Quelques conseils pour \u00e9crire un programme", "Pr\u00e9cis", "Cheat sheet: Python", "Syntaxes et d\u00e9finitions", "FAQ", "En diagonal", "Apprendre la programmation avec Python", "Introduction", "License", "Tous les notebooks", "Algorithmes de streaming, BJKST", "Graphe et Composantes connexes", "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.", "Distance d\u2019\u00e9dition", "Distance entre deux mots de m\u00eame longueur et tests unitaires", "Probl\u00e8me d\u2019ordonnancement", "La sous-s\u00e9quence de plus grande somme", "Graphes al\u00e9atoires", "Simulation COVID", "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)", "Jeux de dictionnaires, plus grand suffixe commun", "Les k premiers \u00e9l\u00e9ments (top k)", "TSP - Traveling Salesman Problem", "Calculer x**n le plus rapidement possible", "Produit matriciel avec une matrice creuse", "Apart\u00e9 sur le voyageur de commerce", "D\u00e9coder du Morse sans espaces", "Parcourir les rues de Paris", "Casser le code de Vigen\u00e8re", "Exercices minut\u00e9s", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014", "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015", "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015", "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)", "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)", "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014", "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)", "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015", "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016", "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)", "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)", "1A.e - Enonc\u00e9 23 octobre 2018 (1)", "1A.e - Enonc\u00e9 23 octobre 2018 (2)", "1A.e - Enonc\u00e9 22 octobre 2019 (1)", "1A.e - Enonc\u00e9 22 octobre 2019 (2)", "1A - Enonc\u00e9 24 novembre 2020", "1A - Enonc\u00e9 3 novembre 2021", "1A - Enonc\u00e9 15 novembre 2021 - rattrapage", "1A - Enonc\u00e9 3 mars 2022- rattrapage", "1A - Enonc\u00e9 26 octobre 2022", "Algorithmes", "S\u00e9ances minut\u00e9es", "Exercices sur le langage python", "Jeu de d\u00e9, rotation sur un circuit (classes)", "Classe Permutation et d\u00e9composition en transitions", "Une classe pour repr\u00e9senter un arbre", "2048 et les classes", "Un bref aper\u00e7u des classes", "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations", "Simuler une loi multinomiale", "Jeux de coloriage", "Jeu de d\u00e9, rotation sur un circuit", "R\u00e9partition, table de hashage", "JSON - XML", "Calculs de surface et autres calculs", "Expressions r\u00e9guli\u00e8res", "S\u00e9rialisation avec JSON, XML, pickle", "Histogramme et dictionnaire", "Heap", "Pivot de gauss avec numpy", "Profiling la fonction Gini", "Profiling, application \u00e0 la convolution", "Exemple de profiling", "Recherche dichotomique", "Web-Scraping - pokemon", "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre", "Calculer un chi 2 sur un tableau de contingence", "Tests unitaires", "Tri plus rapide que pr\u00e9vu", "Cryptage homomorphic de Craig Gentry", "Cryptage homomorphic de Craig Gentry - correction", "Plus proches voisins en grande dimension", "2A.algo - Plus proches voisins en grande dimension - correction", "Programmation dynamique et plus court chemin", "Programmation dynamique et plus court chemin (correction)", "Puzzles algorithmiques (1)", "Puzzles algorithmes (1) - correction", "Puzzles algorithmiques (2)", "Puzzles algorithmes (2) - correction", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique", "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)", "Classes, h\u00e9ritage", "Classes, h\u00e9ritage (correction)", "Dictionnaires, fonctions, code de Vigen\u00e8re", "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)", "Int\u00e9grale et la m\u00e9thode des rectangles", "Int\u00e9grale et la m\u00e9thode des rectangles - correction", "2048 - strat\u00e9gie gagnante", "2048 - strat\u00e9gie gagnante - correction", "Modules, fichiers, expressions r\u00e9guli\u00e8res", "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)", "Premiers pas en Python", "Premiers pas en Python (correction)", "Tracer une pyramide bigarr\u00e9e", "Tracer une pyramide bigarr\u00e9e - correction", "Deviner la langue d\u2019un texte", "Deviner la langue d\u2019un texte (correction)", "Variables, boucles, tests", "Variables, boucles, tests (correction)", "Classes", "Classes", "Questions", "Exceptions", "Usage", "Exceptions", "Warning et logging", "Interfaces graphiques", "tkinter", "Constructions classiques", "Constructions classiques", "Dates", "Encoding et jeux de caract\u00e8res", "Variables et fonctions", "Syntaxe du langage Python (boucles, tests, fonctions)", "Types et variables du langage python", "Fichiers", "Entr\u00e9es, Sorties, Modules", "Module ou extension", "S\u00e9rialisation", "Parall\u00e9lisation", "Threads", "Expressions r\u00e9guli\u00e8res", "Expressions r\u00e9guli\u00e8res", "Le langage Python"], "terms": {"24": [0, 16, 22, 33, 34, 35, 36, 39, 47, 53, 54, 55, 58, 65, 66, 68, 69, 75, 77, 79, 80, 84, 85, 87, 104, 112, 116, 123, 130, 134, 137, 140, 141, 148, 161], "25": [0, 7, 16, 27, 33, 34, 35, 36, 47, 48, 54, 55, 58, 64, 65, 69, 75, 77, 78, 80, 84, 85, 87, 104, 105, 112, 113, 116, 117, 123, 130, 134, 137, 140, 141, 143, 148, 150, 154, 161], "26": [0, 33, 34, 35, 36, 39, 47, 54, 55, 58, 59, 63, 64, 65, 66, 68, 69, 75, 77, 83, 84, 85, 87, 103, 104, 112, 116, 119, 123, 130, 134, 135, 137, 140, 147, 150, 154, 161], "27": [0, 2, 33, 34, 35, 36, 47, 54, 58, 64, 66, 69, 75, 79, 82, 84, 85, 86, 87, 104, 112, 116, 130, 134, 137, 150, 160, 161], "28": [0, 21, 33, 34, 35, 36, 39, 47, 54, 58, 64, 69, 75, 79, 82, 84, 85, 86, 87, 104, 107, 112, 115, 123, 130, 134, 137, 140, 141, 143, 161], "29": [0, 33, 34, 35, 36, 47, 54, 64, 69, 75, 77, 79, 84, 86, 87, 104, 112, 122, 130, 134, 140, 141, 161, 164], "30": [0, 16, 22, 28, 33, 34, 35, 36, 47, 54, 55, 64, 65, 69, 75, 77, 78, 86, 87, 101, 104, 110, 112, 134, 140, 141, 147, 148, 158, 161, 165, 173], "31": [0, 12, 14, 22, 33, 34, 35, 36, 47, 64, 69, 75, 83, 86, 87, 104, 111, 112, 134, 137, 141, 148, 150, 161, 164], "32": [0, 2, 17, 22, 33, 34, 35, 36, 47, 53, 54, 60, 64, 69, 75, 97, 103, 104, 112, 113, 116, 122, 141, 148, 160, 165, 166], "33": [0, 22, 33, 34, 35, 36, 53, 69, 75, 83, 89, 103, 104, 112, 122, 134, 137, 148], "34": [0, 22, 33, 34, 35, 36, 49, 54, 57, 64, 69, 71, 75, 77, 79, 88, 104, 106, 107, 112, 134, 141, 147, 148, 150], "35": [0, 17, 33, 34, 35, 36, 41, 47, 64, 69, 75, 97, 100, 112, 119, 134, 141, 147], "36": [0, 33, 36, 64, 75, 83, 112, 134, 141, 143, 161, 165], "ajout": [0, 2, 3, 6, 19, 27, 33, 34, 35, 39, 40, 41, 44, 51, 53, 55, 58, 64, 67, 68, 69, 70, 71, 74, 75, 77, 78, 80, 82, 83, 84, 85, 87, 89, 94, 99, 104, 107, 112, 114, 116, 119, 130, 131, 133, 135, 139, 140, 142, 143, 147, 148, 151, 152, 153, 154, 158, 161, 165, 169, 171, 173], "exercic": [0, 1, 10, 12, 15, 24, 29, 30, 32, 60, 76, 91, 92, 107, 115, 144, 145, 150, 164], "exist": [0, 1, 2, 3, 16, 24, 25, 28, 33, 34, 35, 36, 37, 39, 41, 44, 48, 53, 54, 55, 59, 60, 62, 64, 72, 90, 94, 95, 107, 112, 116, 117, 119, 124, 125, 127, 128, 129, 130, 134, 140, 141, 143, 148, 150, 153, 154, 158, 160, 162, 164, 165, 166, 168, 169, 170, 171], "22": [0, 9, 16, 22, 33, 34, 35, 36, 47, 54, 55, 58, 64, 66, 69, 72, 75, 77, 78, 80, 83, 86, 87, 104, 112, 115, 116, 117, 122, 123, 130, 134, 137, 140, 148, 154, 161, 165, 173], "exempl": [0, 2, 3, 16, 19, 26, 27, 28, 34, 37, 39, 41, 42, 43, 44, 47, 51, 56, 63, 65, 68, 71, 72, 75, 77, 80, 81, 84, 85, 90, 93, 99, 103, 111, 115, 116, 118, 119, 124, 126, 129, 130, 132, 134, 136, 140, 141, 144, 145, 148, 154, 155, 158, 159, 160, 161, 162, 169, 171], "mathador": [0, 15, 29], "21": [0, 1, 16, 22, 33, 35, 36, 47, 49, 54, 55, 58, 66, 69, 71, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 100, 101, 104, 110, 111, 112, 116, 123, 130, 134, 137, 140, 143, 148, 161, 164, 173], "refactoring": 0, "L": [1, 2, 3, 9, 11, 15, 19, 24, 26, 27, 29, 33, 34, 35, 36, 37, 39, 41, 43, 44, 47, 48, 49, 53, 54, 55, 56, 57, 58, 60, 63, 64, 69, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 107, 112, 114, 118, 119, 123, 124, 125, 129, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 150, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 173], "part": [1, 2, 5, 13, 15, 16, 19, 21, 27, 28, 29, 32, 34, 37, 39, 40, 44, 47, 53, 54, 55, 56, 57, 58, 59, 64, 69, 76, 77, 78, 80, 81, 83, 84, 85, 86, 90, 97, 100, 107, 111, 112, 114, 116, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 137, 139, 140, 141, 146, 147, 150, 153, 154, 158, 160, 161, 164, 165, 166, 168, 169, 171, 173], "math\u00e9mat": [1, 2, 12, 34, 39, 44, 55, 69, 107, 150, 160, 164, 165, 168], "On": [1, 2, 3, 6, 16, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 37, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 171, 173], "toujour": [1, 2, 3, 5, 19, 25, 28, 33, 34, 35, 37, 39, 40, 41, 44, 47, 49, 51, 54, 55, 57, 58, 64, 67, 70, 77, 87, 88, 96, 98, 101, 107, 111, 114, 116, 123, 130, 132, 134, 135, 140, 141, 146, 147, 150, 152, 153, 154, 158, 160, 164, 165, 166, 168, 171, 173], "\u00e9tat": [1, 3, 34, 41, 61, 70, 76, 77, 101, 142, 158, 164, 171], "initial": [1, 6, 28, 33, 34, 47, 58, 64, 77, 102, 107, 112, 116, 119, 126, 135, 140, 154, 166, 168], "arriv": [1, 2, 16, 20, 34, 49, 53, 55, 64, 69, 141, 142, 150, 153, 154, 158, 160, 164, 165, 166, 171], "apres": [1, 2, 6, 16, 18, 24, 27, 28, 34, 37, 39, 41, 54, 58, 61, 63, 69, 70, 75, 76, 77, 82, 83, 84, 85, 87, 103, 105, 107, 124, 132, 134, 140, 141, 150, 154, 158, 164, 165, 166, 168, 171, 173], "ser": [1, 2, 3, 19, 24, 25, 32, 39, 41, 47, 51, 53, 58, 63, 64, 69, 75, 77, 78, 86, 90, 95, 103, 114, 125, 130, 135, 137, 141, 142, 146, 148, 150, 153, 154, 156, 158, 160, 164, 165, 166, 168, 171], "oper": [1, 2, 3, 12, 15, 17, 27, 29, 36, 41, 68, 71, 75, 90, 93, 112, 116, 119, 120, 121, 141, 142, 143, 148, 151, 153, 158, 160, 161, 165, 166, 169], "connu": [1, 33, 44, 47, 53, 54, 55, 64, 118, 135, 148, 150, 158, 164, 166], "final": [1, 34, 36, 39, 47, 61, 75, 78, 79, 97, 112, 115, 116, 150, 156, 164, 165, 168, 171, 173], "Cette": [1, 2, 3, 27, 34, 39, 40, 41, 44, 47, 50, 55, 61, 63, 64, 65, 68, 69, 70, 77, 94, 95, 100, 103, 105, 109, 112, 116, 132, 141, 146, 150, 153, 154, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171], "d\u00e9pend": [1, 19, 27, 34, 39, 44, 52, 55, 57, 61, 70, 77, 100, 101, 103, 105, 107, 116, 123, 130, 134, 135, 148, 150, 156, 161, 164, 165, 168, 171], "Elle": [1, 2, 3, 26, 35, 36, 37, 39, 40, 41, 44, 49, 53, 64, 67, 79, 100, 107, 109, 112, 113, 116, 124, 127, 132, 134, 137, 150, 158, 164, 166, 168, 169, 171, 173], "peut": [1, 2, 3, 5, 6, 11, 16, 19, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 49, 53, 54, 55, 56, 57, 58, 61, 63, 64, 68, 69, 71, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 111, 114, 116, 117, 118, 119, 124, 125, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 148, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 173], "inclur": [1, 25, 39, 53, 112, 150, 152, 158, 164, 165, 168, 173], "al\u00e9atoir": [1, 19, 32, 34, 35, 47, 53, 55, 58, 61, 76, 79, 84, 85, 91, 100, 117, 120, 121, 123, 124, 137, 139, 140, 150, 168, 171], "parl": [1, 28, 33, 63, 141, 169], "lorsqu": [1, 2, 3, 19, 24, 25, 27, 28, 33, 34, 36, 37, 39, 40, 41, 44, 47, 50, 51, 52, 58, 59, 60, 63, 67, 69, 75, 77, 79, 80, 95, 98, 100, 107, 112, 113, 114, 116, 125, 130, 131, 132, 134, 140, 142, 146, 148, 149, 150, 153, 154, 156, 160, 162, 164, 165, 166, 168, 169, 171, 173], "d\u00e9montr": [1, 27, 124], "s\u00e9quenc": [1, 19, 47, 48, 50, 54, 63, 91, 107, 119, 120, 121, 124, 129, 140, 147, 148, 162, 164, 169, 171, 173], "produit": [1, 2, 3, 5, 25, 28, 32, 33, 39, 41, 48, 69, 70, 72, 80, 81, 82, 83, 91, 94, 95, 112, 132, 133, 143, 148, 150, 152, 153, 154, 156, 158, 160, 164, 166, 169, 171], "men": [1, 27, 77, 80, 81, 103, 141, 150, 158, 171], "souhait": [1, 2, 3, 19, 20, 24, 33, 34, 39, 41, 49, 51, 53, 54, 58, 64, 72, 75, 77, 79, 80, 81, 88, 90, 95, 97, 101, 103, 111, 118, 124, 126, 127, 130, 132, 134, 137, 138, 140, 141, 148, 150, 154, 156, 158, 160, 164, 165, 166, 168], "Il": [1, 2, 3, 9, 10, 11, 16, 19, 21, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 94, 96, 99, 101, 102, 103, 106, 107, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 171, 173], "grand": [1, 6, 8, 10, 11, 19, 27, 28, 33, 34, 35, 36, 37, 39, 44, 48, 49, 55, 58, 59, 61, 64, 65, 69, 70, 75, 76, 77, 78, 80, 81, 85, 88, 90, 91, 95, 99, 100, 106, 109, 111, 112, 116, 135, 137, 140, 141, 148, 150, 152, 153, 158, 162, 164, 165, 166, 168, 171, 173], "variet": [1, 36, 140], "d\u00e9j\u00e0": [1, 28, 33, 34, 39, 40, 44, 54, 58, 63, 64, 82, 83, 87, 119, 134, 140, 141, 148, 150, 153, 164, 165, 166, 168, 169, 171, 173], "r\u00e9solus": [1, 158], "util": [1, 19, 27, 33, 34, 37, 39, 51, 55, 58, 62, 79, 90, 91, 94, 96, 106, 122, 132, 134, 140, 150, 153, 156, 158, 164, 165, 166, 171], "conna\u00eetr": [1, 2, 3, 39, 41, 49, 61, 64, 88, 150, 158, 159, 160, 165, 166, 173], "C": [1, 2, 3, 5, 7, 11, 18, 21, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 69, 72, 75, 77, 78, 80, 83, 84, 85, 88, 90, 94, 95, 96, 100, 101, 103, 104, 105, 107, 111, 112, 113, 114, 116, 119, 120, 121, 122, 124, 125, 126, 127, 130, 134, 135, 137, 139, 140, 141, 146, 148, 150, 151, 153, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 173], "aut": [1, 39, 51, 54, 68, 75, 79, 80, 88, 125, 130, 132, 134, 135, 150, 158, 164, 165, 166, 171], "outil": [1, 39, 44, 48, 94, 104, 112, 122, 140, 141, 150, 153], "disponibl": [1, 9, 25, 34, 35, 36, 39, 43, 44, 64, 78, 86, 99, 141, 150, 158, 165, 168], "cr\u00e9": [1, 3, 5, 18, 22, 25, 27, 32, 33, 36, 39, 40, 41, 44, 48, 52, 54, 55, 61, 64, 67, 69, 75, 84, 85, 95, 97, 116, 118, 119, 122, 123, 124, 130, 132, 134, 135, 139, 141, 147, 148, 150, 153, 156, 164, 165, 166, 171], "propr": [1, 3, 25, 27, 33, 35, 36, 39, 41, 54, 63, 150, 155, 156, 158, 164, 165, 169, 171], "Qu": [1, 28, 64, 100, 118, 122, 137, 148], "raison": [1, 5, 19, 28, 36, 37, 39, 41, 67, 69, 72, 75, 77, 90, 123, 125, 130, 141, 146, 148, 150, 158, 164], "fair": [1, 2, 3, 25, 26, 27, 31, 33, 34, 35, 37, 39, 40, 41, 44, 47, 48, 49, 51, 52, 55, 56, 58, 59, 61, 63, 64, 66, 72, 77, 78, 80, 81, 82, 83, 87, 94, 95, 98, 100, 101, 106, 107, 111, 112, 116, 117, 119, 123, 124, 127, 132, 137, 139, 140, 141, 142, 143, 147, 148, 150, 153, 154, 158, 160, 161, 162, 164, 165, 166, 168, 170, 171, 173], "suppos": [1, 2, 6, 24, 36, 39, 44, 49, 52, 53, 55, 58, 59, 63, 64, 65, 68, 75, 77, 78, 79, 80, 81, 86, 87, 88, 90, 101, 105, 114, 116, 118, 119, 124, 125, 126, 132, 135, 137, 150, 158, 160, 164, 165, 166, 171], "dispos": [1, 39, 64, 75, 77, 78, 79, 84, 85, 90, 111, 124, 126, 130, 150, 154, 158, 165, 166, 168], "seul": [1, 2, 9, 11, 16, 19, 24, 33, 34, 35, 36, 39, 44, 47, 48, 54, 55, 57, 58, 62, 63, 64, 69, 72, 79, 82, 83, 86, 90, 100, 104, 105, 107, 116, 123, 126, 130, 131, 132, 134, 135, 140, 141, 142, 148, 150, 153, 158, 160, 162, 164, 165, 166, 168, 169, 171, 173], "machin": [1, 5, 12, 35, 41, 43, 44, 58, 62, 101, 104, 112, 171], "La": [1, 2, 3, 9, 19, 20, 24, 25, 27, 28, 31, 33, 34, 37, 39, 40, 41, 44, 47, 49, 50, 51, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 94, 95, 97, 98, 100, 102, 104, 105, 106, 107, 109, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 125, 130, 131, 132, 134, 136, 139, 140, 141, 142, 143, 146, 148, 149, 150, 153, 154, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 173], "m\u00e9moir": [1, 3, 5, 25, 33, 35, 36, 41, 47, 49, 104, 107, 140, 150, 158, 159, 162, 164, 165, 166, 169], "plus": [1, 2, 5, 8, 9, 10, 11, 12, 16, 18, 19, 20, 21, 23, 24, 25, 27, 33, 34, 35, 36, 37, 39, 43, 44, 48, 49, 50, 54, 55, 56, 59, 63, 64, 65, 67, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 84, 85, 86, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 112, 113, 116, 120, 121, 126, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 155, 156, 158, 159, 160, 162, 164, 165, 168, 169, 170], "Le": [1, 2, 3, 5, 12, 15, 16, 19, 20, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90, 94, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 173], "temp": [1, 2, 3, 10, 18, 25, 27, 28, 33, 34, 35, 36, 41, 44, 52, 54, 55, 62, 64, 68, 69, 72, 74, 77, 79, 80, 81, 87, 99, 101, 104, 108, 111, 113, 116, 119, 122, 123, 129, 130, 131, 138, 139, 140, 141, 142, 145, 148, 150, 153, 158, 160, 164, 165, 166, 168, 169, 171, 173], "calcul": [1, 3, 5, 6, 8, 12, 18, 20, 28, 31, 34, 36, 38, 41, 44, 50, 51, 52, 54, 56, 57, 58, 64, 65, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 93, 96, 100, 101, 103, 107, 111, 112, 113, 116, 119, 120, 121, 123, 124, 125, 126, 127, 134, 140, 142, 143, 150, 152, 153, 158, 161, 164, 165, 166, 168, 170, 171], "leqsl": [1, 17, 49, 53, 68, 79, 105, 124, 125, 126, 127, 128, 129, 137], "10": [1, 2, 3, 5, 6, 7, 9, 16, 17, 19, 22, 23, 24, 27, 28, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 122, 123, 124, 125, 128, 129, 130, 131, 132, 134, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 158, 159, 160, 161, 164, 165, 166, 168, 171, 173], "o": [1, 2, 5, 7, 21, 25, 27, 28, 32, 34, 35, 51, 53, 57, 58, 59, 62, 63, 67, 68, 69, 75, 78, 80, 81, 84, 85, 87, 90, 100, 106, 109, 114, 119, 120, 121, 123, 124, 135, 137, 141, 147, 149, 150, 158, 164, 165, 169], "2": [1, 2, 3, 5, 6, 7, 11, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 39, 41, 47, 48, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 64, 65, 66, 70, 73, 74, 79, 80, 82, 84, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 112, 113, 115, 118, 119, 122, 123, 126, 127, 136, 137, 144, 145, 146, 147, 149, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 171, 173], "15": [1, 7, 19, 27, 28, 33, 34, 35, 36, 47, 51, 53, 54, 55, 57, 58, 61, 63, 64, 66, 68, 69, 70, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 97, 100, 101, 104, 108, 110, 111, 112, 115, 116, 119, 123, 124, 125, 130, 134, 137, 141, 143, 145, 147, 148, 149, 150, 158, 161, 165, 171, 173], "3": [1, 2, 3, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 39, 41, 43, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 94, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 136, 137, 139, 144, 145, 146, 147, 150, 152, 153, 156, 158, 159, 160, 161, 162, 164, 165, 166, 170, 171, 173], "7": [1, 2, 3, 7, 11, 17, 20, 23, 27, 28, 33, 34, 35, 37, 39, 41, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 130, 131, 132, 135, 137, 139, 143, 146, 147, 150, 154, 159, 160, 161, 164, 165, 166, 171, 173], "ln": [1, 27, 33, 34, 53, 55, 57, 58, 67, 75, 80, 81, 100, 109, 119, 150], "8": [1, 2, 17, 19, 26, 27, 28, 33, 34, 35, 36, 39, 41, 44, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 122, 123, 130, 131, 137, 139, 140, 143, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 171, 173], "nombreux": [1, 16, 33, 34, 39, 44, 47, 48, 55, 95, 112, 130, 140, 150, 158, 164, 166, 168], "non": [1, 2, 3, 6, 7, 12, 16, 17, 18, 19, 21, 22, 24, 25, 33, 34, 35, 39, 41, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 67, 68, 69, 70, 75, 80, 81, 82, 83, 84, 85, 87, 88, 94, 95, 96, 97, 99, 100, 101, 103, 107, 113, 116, 117, 118, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 137, 140, 141, 150, 152, 153, 154, 156, 158, 159, 160, 166, 168, 169, 171, 173], "d\u00e9compos": [1, 2, 27, 60, 77, 95, 130, 135, 160], "comm": [1, 3, 9, 10, 16, 19, 24, 25, 27, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 50, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 67, 68, 69, 70, 71, 75, 77, 78, 79, 82, 83, 84, 85, 87, 90, 94, 95, 98, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 116, 117, 123, 124, 130, 132, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 161, 162, 164, 165, 166, 168, 169, 171, 173], "suit": [1, 2, 13, 19, 20, 27, 33, 34, 36, 39, 40, 44, 47, 49, 51, 52, 54, 56, 59, 63, 64, 69, 70, 71, 77, 79, 80, 81, 82, 83, 87, 98, 100, 103, 105, 112, 113, 114, 117, 124, 134, 137, 140, 149, 150, 153, 154, 156, 158, 160, 162, 164, 165, 166, 168, 169, 171, 173], "alpha": [1, 6, 33, 36, 48, 63, 78, 82, 83, 84, 85, 125, 144, 145], "bet": [1, 33, 36, 55, 56, 79, 168], "1": [1, 2, 3, 5, 6, 7, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 36, 37, 39, 41, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 65, 66, 73, 81, 83, 85, 89, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 136, 137, 143, 144, 145, 146, 147, 149, 152, 153, 154, 156, 158, 159, 160, 161, 162, 165, 166, 169, 171, 173], "chaqu": [1, 2, 3, 6, 16, 18, 19, 20, 24, 27, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 51, 52, 53, 54, 55, 56, 59, 63, 64, 65, 68, 69, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 95, 100, 103, 104, 106, 107, 111, 112, 113, 114, 120, 121, 124, 125, 126, 130, 134, 135, 137, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 162, 164, 165, 166, 168, 171, 173], "term": [1, 19, 39, 40, 53, 82, 83, 97, 119, 123, 150, 164, 165, 166, 169, 171, 173], "correspond": [1, 3, 33, 34, 39, 41, 47, 48, 53, 55, 69, 70, 75, 77, 78, 80, 81, 114, 124, 125, 140, 148, 150, 153, 154, 158, 161, 162, 164, 165, 166, 168, 173], "in": [1, 2, 3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 33, 34, 36, 37, 39, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 164, 165, 166, 168, 170, 171, 173], "mathbb": [1, 17, 33, 47, 78, 79, 80, 81, 82, 83, 105, 120, 121, 126, 137], "N": [1, 27, 28, 33, 34, 35, 47, 48, 51, 54, 55, 56, 57, 63, 68, 69, 75, 82, 83, 84, 85, 86, 90, 99, 100, 101, 105, 117, 124, 125, 126, 128, 129, 135, 137, 141, 142, 158, 164], "probem": 1, "combinatoir": [1, 124], "r\u00e9sum": [1, 2, 34, 39, 40, 77, 150, 153, 160, 164, 165, 171, 173], "quadrat": [1, 79, 125], "cel": [1, 2, 3, 5, 9, 16, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 39, 40, 41, 44, 51, 52, 53, 54, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 74, 75, 77, 78, 80, 81, 82, 83, 87, 88, 90, 95, 97, 98, 100, 101, 102, 104, 107, 108, 111, 112, 115, 116, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 139, 140, 141, 142, 145, 146, 148, 149, 150, 152, 153, 154, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 173], "d\u00fb": [1, 67], "programm": [1, 2, 3, 12, 15, 16, 19, 21, 24, 26, 28, 29, 33, 34, 38, 41, 44, 51, 53, 55, 63, 67, 68, 69, 70, 71, 72, 75, 78, 80, 81, 88, 98, 99, 101, 111, 112, 113, 116, 118, 130, 134, 140, 141, 142, 143, 146, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 169, 171, 173], "dynam": [1, 12, 53, 55, 63, 150, 165], "dan": [1, 2, 3, 6, 11, 12, 16, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 37, 40, 41, 42, 43, 44, 47, 48, 51, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 135, 137, 138, 139, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 168, 169, 171, 173], "plupart": [1, 2, 3, 34, 41, 64, 68, 79, 104, 107, 114, 130, 132, 137, 146, 148, 150, 153, 154, 156, 158, 160, 165, 166, 168, 171], "cas": [1, 2, 3, 16, 19, 20, 24, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 51, 53, 54, 55, 58, 61, 63, 64, 65, 69, 72, 75, 76, 77, 78, 79, 80, 82, 83, 86, 88, 95, 100, 105, 112, 113, 114, 116, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 132, 134, 135, 137, 138, 139, 140, 141, 143, 148, 150, 153, 154, 160, 164, 166, 167, 169, 171, 173], "obtient": [1, 5, 32, 33, 49, 75, 79, 80, 81, 82, 83, 87, 135, 150, 161, 164], "avoir": [1, 2, 16, 24, 34, 37, 39, 40, 41, 44, 48, 52, 55, 63, 64, 69, 77, 82, 86, 100, 103, 104, 124, 132, 134, 135, 141, 142, 146, 150, 153, 154, 156, 158, 160, 164, 165, 166, 168, 169, 171], "transform": [1, 2, 3, 5, 32, 35, 41, 54, 55, 56, 57, 61, 63, 68, 77, 78, 79, 81, 103, 112, 116, 123, 139, 160, 162, 164, 166], "form": [1, 2, 16, 19, 24, 33, 34, 36, 39, 44, 52, 68, 73, 74, 84, 85, 88, 104, 107, 116, 124, 125, 126, 128, 129, 130, 140, 141, 150, 153, 156, 158, 164, 165, 166, 168, 169, 171, 173], "r\u00e9current": [1, 19, 49, 53, 54, 58, 75, 87, 104, 124, 150, 158], "\u00e9crit": [1, 3, 19, 27, 28, 33, 37, 39, 41, 44, 66, 79, 80, 81, 82, 95, 98, 101, 103, 107, 111, 118, 132, 139, 140, 142, 146, 148, 150, 153, 156, 158, 159, 162, 164, 165, 166, 168, 169, 171, 173], "faut": [1, 2, 3, 16, 19, 21, 24, 25, 26, 27, 33, 34, 35, 36, 37, 39, 41, 43, 44, 47, 52, 53, 55, 56, 57, 58, 60, 61, 63, 64, 68, 69, 71, 75, 77, 80, 81, 82, 83, 86, 88, 90, 95, 96, 98, 99, 102, 103, 106, 107, 111, 112, 114, 115, 116, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 156, 158, 159, 160, 162, 164, 165, 166, 168, 169, 171, 173], "solut": [1, 16, 20, 21, 24, 27, 28, 33, 34, 36, 37, 39, 56, 59, 62, 72, 75, 76, 77, 79, 82, 84, 85, 87, 88, 91, 101, 102, 106, 107, 124, 125, 131, 132, 150, 153, 158, 164, 165, 166, 169, 171], "\u00e9l\u00e9ment": [1, 2, 3, 5, 8, 12, 19, 25, 27, 32, 34, 35, 37, 39, 40, 41, 48, 53, 54, 57, 66, 68, 69, 70, 72, 75, 79, 80, 81, 91, 94, 95, 107, 109, 111, 114, 115, 116, 118, 119, 123, 131, 135, 139, 142, 148, 149, 150, 153, 154, 158, 159, 160, 165, 166, 168, 169, 171, 173], "sach": [1, 16, 63, 135, 150, 173], "conna\u00eet": [1, 44, 55, 58, 84, 85, 147, 150, 164, 168], "0": [1, 2, 3, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 171, 173], "dichotom": [1, 12, 58, 60, 64, 80, 82, 83, 93, 103, 135, 164], "coup": [1, 2, 34, 50, 53, 61, 64, 77, 80, 81, 118, 132, 139, 141, 158, 160, 165], "deux": [1, 3, 5, 6, 10, 11, 16, 19, 22, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 39, 41, 44, 47, 48, 49, 52, 53, 54, 55, 58, 61, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 91, 95, 97, 99, 100, 102, 104, 105, 109, 112, 114, 117, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 156, 158, 161, 162, 164, 165, 166, 168, 169, 170, 171, 173], "iter": [1, 2, 6, 7, 19, 28, 33, 39, 53, 54, 56, 58, 59, 60, 61, 64, 68, 71, 80, 81, 84, 85, 95, 96, 113, 124, 125, 130, 137, 139, 143, 148, 149, 151, 160, 165, 169, 171], "tabl": [1, 8, 34, 42, 63, 75, 84, 85, 93, 101, 104, 115, 117, 134, 135, 140, 150, 158, 164, 165, 168], "hashag": [1, 8, 47, 93, 134, 135], "D\u00e8s": [1, 2, 41], "sort": [1, 2, 3, 7, 17, 24, 33, 35, 36, 39, 41, 44, 48, 51, 53, 55, 56, 58, 61, 63, 64, 67, 69, 75, 77, 78, 80, 81, 84, 85, 86, 91, 94, 100, 105, 112, 119, 124, 125, 126, 130, 134, 137, 141, 143, 149, 150, 153, 156, 158, 160, 162, 164, 165, 166, 168, 171, 174], "puissanc": [1, 12, 39, 60, 75, 153, 164, 165, 171], "entier": [1, 3, 5, 19, 24, 33, 34, 35, 36, 37, 39, 41, 44, 47, 48, 52, 53, 57, 58, 67, 69, 75, 80, 81, 100, 114, 127, 128, 129, 134, 142, 143, 150, 152, 153, 158, 159, 161, 163, 164, 166], "attendr": [1, 18, 158, 171], "trivial": [1, 49], "tel": [1, 2, 12, 25, 34, 39, 48, 53, 54, 56, 64, 77, 78, 79, 80, 81, 95, 100, 105, 106, 107, 119, 120, 121, 124, 125, 126, 128, 129, 132, 134, 137, 140, 141, 143, 146, 150, 158, 160, 164, 165, 166, 168, 170, 173], "strassen": [1, 150], "multipl": [1, 5, 6, 27, 32, 33, 37, 39, 55, 65, 67, 69, 75, 77, 78, 105, 137, 152, 164], "matric": [1, 5, 8, 25, 27, 32, 33, 34, 36, 41, 43, 52, 55, 68, 73, 74, 75, 78, 79, 86, 91, 107, 112, 113, 117, 124, 125, 139, 140, 141, 150, 163, 166], "807": [1, 150], "celui": [1, 2, 3, 16, 18, 20, 24, 25, 27, 28, 34, 39, 41, 44, 63, 64, 77, 79, 80, 81, 95, 96, 115, 116, 124, 125, 130, 140, 141, 146, 148, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 173], "marco": 1, "bodrato": 1, "a": [1, 2, 5, 7, 11, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 39, 40, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 94, 95, 96, 98, 99, 100, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172], "lik": [1, 17], "matrix": [1, 16, 35, 61], "suited": 1, "for": [1, 2, 3, 7, 9, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 33, 34, 36, 37, 38, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 165, 166, 168, 171, 173], "squaring": 1, "and": [1, 3, 7, 16, 17, 19, 24, 25, 34, 39, 41, 45, 47, 48, 49, 50, 54, 55, 57, 58, 64, 69, 72, 73, 74, 75, 77, 79, 80, 81, 94, 97, 100, 102, 105, 109, 110, 112, 118, 128, 129, 130, 131, 135, 140, 147, 150, 154, 158, 164, 165, 166, 168, 169, 171], "high": 1, "pow": [1, 115], "comput": [1, 6, 112, 122], "minimal": [1, 33, 53, 64, 75, 88, 94], "tri": [1, 7, 12, 27, 34, 35, 39, 44, 63, 64, 67, 75, 79, 82, 83, 93, 103, 109, 114, 124, 125, 134, 135, 148, 149, 156, 164, 165], "g\u00e9ner": [1, 26, 32, 34, 35, 36, 39, 47, 68, 78, 79, 80, 81, 82, 83, 86, 100, 104, 139, 140, 146, 150, 153, 154, 158, 165, 168, 169, 171], "dir": [1, 2, 3, 19, 25, 27, 39, 41, 44, 47, 53, 57, 58, 63, 64, 68, 71, 72, 77, 82, 83, 105, 106, 116, 122, 123, 125, 130, 140, 141, 142, 146, 148, 149, 150, 154, 158, 162, 164, 165, 166, 168, 171, 173], "san": [1, 2, 19, 21, 24, 27, 33, 35, 36, 39, 40, 44, 47, 51, 54, 58, 59, 61, 65, 67, 68, 72, 75, 82, 83, 86, 87, 90, 91, 94, 101, 116, 117, 118, 123, 124, 132, 134, 141, 142, 146, 150, 153, 154, 156, 158, 160, 164, 165, 167, 168, 169, 170, 171, 173], "hypothes": [1, 124], "don": [1, 2, 3, 6, 8, 12, 16, 20, 24, 25, 26, 27, 28, 30, 31, 33, 38, 40, 41, 44, 47, 53, 54, 56, 57, 63, 67, 71, 73, 75, 77, 78, 83, 84, 85, 87, 95, 98, 102, 107, 112, 119, 122, 123, 130, 134, 135, 140, 141, 142, 147, 148, 150, 152, 153, 154, 158, 160, 161, 164, 165, 166, 167, 168, 171, 173], "En": [1, 2, 13, 18, 27, 32, 33, 34, 39, 40, 43, 44, 47, 53, 54, 60, 63, 70, 72, 75, 77, 79, 98, 100, 104, 106, 107, 113, 124, 125, 126, 131, 137, 141, 142, 148, 150, 153, 154, 156, 158, 160, 164, 165, 166, 168, 171], "revanch": [1, 39, 54, 86, 107, 142, 150, 153, 158, 164, 166, 171], "o\u00f9": [1, 2, 3, 10, 33, 34, 36, 39, 40, 41, 44, 48, 49, 51, 52, 53, 54, 57, 58, 64, 68, 70, 71, 77, 79, 80, 81, 82, 83, 88, 94, 103, 104, 114, 119, 122, 123, 124, 126, 127, 130, 135, 137, 140, 141, 142, 148, 149, 150, 153, 156, 158, 160, 162, 164, 165, 166, 168, 169, 171, 173], "issu": [1, 17, 34, 36, 50, 54, 77, 86, 107, 124, 154, 166], "ensembl": [1, 2, 6, 16, 24, 25, 33, 34, 39, 40, 44, 47, 48, 50, 53, 54, 55, 57, 58, 59, 64, 68, 70, 78, 79, 80, 81, 82, 83, 84, 85, 88, 93, 94, 95, 100, 104, 109, 116, 120, 121, 124, 126, 127, 130, 131, 134, 137, 140, 143, 150, 153, 154, 158, 159, 160, 162, 164, 166, 168, 169], "fin": [1, 2, 3, 19, 26, 33, 34, 39, 40, 41, 44, 47, 51, 52, 57, 58, 59, 64, 71, 75, 77, 82, 83, 95, 99, 100, 101, 105, 106, 107, 113, 114, 142, 143, 148, 149, 150, 158, 160, 165, 166, 168, 171, 173], "cardinal": [1, 47], "meilleur": [1, 2, 28, 34, 47, 49, 51, 52, 53, 59, 62, 64, 75, 77, 78, 82, 83, 84, 85, 88, 97, 105, 124, 125, 141, 146, 150, 165, 166], "revient": [1, 16, 19, 20, 64, 67, 69, 80, 94, 95, 102, 107, 119, 124, 135, 150, 165, 166, 169, 171], "histogramm": [1, 34, 78, 80, 81, 93, 119], "inf\u00e9rieur": [1, 2, 18, 19, 33, 48, 54, 58, 64, 69, 77, 78, 79, 114, 137, 148, 160, 164, 165], "inf": [1, 33, 58], "blog": [1, 14], "fast": [1, 17, 34, 170], "interesect": 1, "of": [1, 3, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 41, 45, 53, 55, 61, 69, 71, 72, 77, 80, 81, 83, 87, 90, 101, 104, 107, 108, 109, 111, 112, 113, 119, 122, 123, 128, 129, 131, 135, 137, 147, 150, 154, 158, 160, 164, 168, 169], "sorted": [1, 2, 54, 63, 64, 79, 100, 111, 119, 140, 147, 148, 160, 164], "list": [1, 2, 5, 6, 7, 12, 16, 20, 24, 25, 28, 33, 34, 36, 37, 47, 48, 53, 54, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 84, 87, 93, 94, 95, 100, 102, 107, 108, 109, 111, 113, 114, 115, 119, 124, 125, 126, 128, 129, 130, 131, 135, 137, 139, 140, 141, 147, 149, 153, 154, 159, 160, 161, 169, 171, 173], "using": [1, 16, 36, 158, 171], "sse": 1, "instruct": [1, 2, 3, 9, 34, 36, 39, 41, 44, 53, 67, 69, 70, 80, 81, 112, 116, 134, 140, 142, 143, 148, 150, 156, 158, 160, 162, 165, 166, 168, 171], "simpl": [1, 2, 3, 16, 20, 21, 27, 34, 35, 36, 39, 41, 44, 47, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 67, 75, 77, 78, 82, 83, 85, 95, 104, 107, 109, 113, 114, 116, 122, 123, 124, 130, 131, 134, 137, 138, 139, 140, 141, 142, 146, 153, 156, 158, 160, 165, 166, 168, 169, 170, 173], "intersect": [1, 126, 165], "montr": [1, 27, 33, 39, 49, 51, 53, 57, 63, 79, 82, 83, 98, 113, 125, 128, 129, 130, 132, 134, 141, 149, 150, 153, 158, 159, 162, 164, 165, 166, 168, 171, 173], "comment": [1, 12, 16, 24, 25, 33, 34, 36, 37, 47, 52, 54, 55, 57, 61, 63, 64, 72, 80, 81, 83, 87, 104, 105, 107, 109, 112, 117, 122, 130, 131, 132, 134, 138, 139, 146, 150, 154, 158, 162, 164, 165, 166, 168, 169, 171, 173], "optimis": [1, 26, 31, 32, 35, 47, 58, 62, 63, 79, 90, 107, 111, 112, 113, 119, 124, 130, 131, 144, 145, 159, 165, 167], "impl\u00e9ment": [1, 2, 3, 5, 6, 15, 19, 28, 29, 33, 35, 36, 41, 44, 51, 58, 61, 64, 75, 76, 80, 81, 82, 83, 95, 96, 99, 100, 103, 105, 108, 110, 113, 114, 116, 119, 132, 147, 150, 156, 160, 164, 165, 168, 170, 171], "introduis": 1, "notion": [1, 3, 12, 41, 47, 49, 53, 63, 79, 165], "partit": [1, 165], "peu": [1, 3, 25, 33, 34, 36, 39, 41, 43, 44, 48, 51, 52, 54, 56, 57, 58, 61, 64, 69, 70, 72, 75, 78, 84, 85, 86, 87, 95, 100, 101, 103, 107, 109, 111, 114, 116, 122, 123, 130, 134, 136, 141, 147, 150, 153, 156, 158, 164, 165, 166, 168, 169, 171], "parall\u00e9lis": [1, 171, 174], "object": [1, 3, 7, 16, 17, 19, 24, 25, 28, 34, 36, 39, 40, 41, 55, 63, 64, 68, 69, 71, 89, 94, 95, 96, 107, 111, 112, 113, 122, 124, 125, 130, 134, 146, 150, 158, 164, 165, 168, 169, 171, 173], "tous": [1, 2, 3, 6, 16, 18, 19, 20, 24, 27, 28, 33, 34, 35, 39, 40, 41, 42, 44, 47, 48, 51, 53, 54, 56, 58, 63, 64, 68, 75, 77, 80, 81, 87, 88, 91, 95, 96, 99, 111, 118, 124, 126, 127, 134, 135, 140, 141, 149, 150, 153, 158, 160, 161, 164, 165, 166, 168, 169, 171, 173], "lesquel": [1, 19, 33, 34, 51, 54, 64, 119, 128, 129, 150, 164, 166], "con\u00e7us": [1, 168], "distanc": [1, 6, 8, 12, 28, 35, 56, 64, 65, 75, 82, 83, 84, 85, 91, 123, 124, 125, 127, 128, 129], "\u00e9dit": [1, 8, 12, 91, 127], "sert": [1, 2, 20, 27, 31, 33, 36, 39, 40, 56, 64, 67, 88, 90, 95, 110, 117, 130, 132, 134, 135, 137, 141, 142, 150, 152, 153, 158, 164, 165, 166, 171, 172], "entre": [1, 5, 24, 31, 33, 36, 47, 48, 54, 56, 57, 58, 59, 63, 64, 65, 72, 75, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91, 101, 109, 116, 123, 124, 125, 128, 129, 131, 134, 137, 138, 140, 141, 142, 143, 148, 150, 153, 158, 160, 161, 164, 165, 166, 168, 169, 171, 173], "utilis": [1, 2, 3, 5, 13, 14, 16, 20, 21, 24, 25, 27, 33, 34, 35, 36, 38, 40, 41, 44, 47, 48, 51, 55, 61, 63, 64, 67, 68, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 87, 88, 91, 94, 96, 100, 103, 104, 107, 109, 112, 113, 115, 116, 118, 119, 123, 124, 127, 130, 131, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 154, 155, 156, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 173], "trouv": [1, 2, 3, 11, 16, 21, 27, 28, 33, 35, 36, 37, 39, 41, 44, 53, 56, 58, 59, 62, 63, 64, 65, 69, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100, 101, 106, 114, 123, 125, 126, 127, 128, 134, 144, 145, 148, 149, 150, 158, 160, 161, 164, 165, 166, 168, 171, 173], "proch": [1, 25, 47, 59, 77, 78, 84, 85, 91, 124, 141, 150, 158, 159, 165, 166, 169], "autr": [1, 2, 3, 8, 9, 11, 15, 16, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 41, 44, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 63, 64, 65, 67, 68, 69, 71, 75, 78, 79, 81, 82, 83, 84, 85, 87, 90, 93, 94, 95, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 113, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 142, 143, 146, 147, 148, 149, 152, 153, 154, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173], "condit": [1, 19, 33, 34, 36, 39, 40, 45, 47, 69, 70, 109, 124, 134, 137, 148, 150, 158, 164, 165, 166, 168, 171], "sim": [1, 19, 33, 53, 55, 56, 120, 121, 135, 137, 149, 150], "4": [1, 2, 3, 5, 7, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 36, 39, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 136, 137, 138, 139, 142, 143, 144, 145, 147, 149, 150, 153, 156, 158, 159, 160, 161, 164, 165, 166, 168, 170, 171, 173], "Que": [1, 27, 33, 34, 57, 69, 70, 71, 72, 79, 106, 113, 122, 124, 140, 146, 148], "quand": [1, 2, 20, 33, 34, 39, 44, 51, 57, 61, 77, 78, 86, 88, 104, 105, 113, 118, 122, 126, 140, 141, 147, 149, 153, 160, 165, 171], "milliard": [1, 47], "Ce": [1, 2, 3, 12, 18, 19, 27, 28, 33, 35, 36, 39, 40, 41, 43, 44, 47, 53, 55, 57, 59, 62, 63, 64, 67, 70, 75, 77, 78, 82, 83, 86, 87, 88, 90, 91, 94, 95, 100, 101, 105, 116, 123, 124, 125, 127, 134, 135, 137, 140, 141, 146, 147, 148, 150, 153, 154, 158, 159, 160, 161, 162, 164, 165, 166, 171, 173], "facil": [1, 16, 19, 24, 25, 28, 34, 36, 37, 39, 43, 44, 47, 54, 64, 75, 88, 101, 103, 107, 108, 109, 111, 112, 119, 124, 125, 150, 158, 162, 164, 165, 166, 168, 169, 171, 173], "si": [1, 2, 3, 5, 6, 12, 18, 19, 20, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 49, 50, 53, 54, 55, 57, 58, 60, 61, 64, 65, 67, 69, 70, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 100, 105, 107, 112, 116, 117, 118, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 148, 149, 150, 153, 154, 156, 158, 160, 162, 164, 165, 166, 168, 169, 171, 173], "repr\u00e9sent": [1, 2, 5, 13, 19, 24, 27, 33, 34, 35, 41, 52, 54, 55, 57, 61, 63, 64, 68, 73, 74, 84, 85, 93, 102, 107, 109, 116, 125, 135, 141, 147, 150, 152, 158, 160, 162, 164, 165, 166, 169], "vecteur": [1, 35, 39, 48, 78, 79, 82, 83, 84, 85, 100, 113, 116, 123, 150, 165], "voir": [1, 2, 3, 9, 12, 16, 19, 25, 28, 33, 34, 39, 41, 44, 47, 52, 57, 58, 59, 63, 64, 65, 78, 80, 81, 82, 83, 95, 97, 100, 103, 105, 116, 127, 130, 135, 138, 140, 141, 142, 148, 150, 156, 158, 160, 164, 165, 166, 169, 171], "word2vec": 1, "auto": [1, 84, 85], "encoder": [1, 166], "veut": [1, 2, 3, 25, 33, 34, 36, 37, 39, 41, 43, 49, 51, 53, 54, 57, 64, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 95, 97, 99, 106, 116, 118, 122, 123, 124, 125, 128, 129, 130, 132, 134, 137, 139, 141, 142, 146, 147, 148, 149, 153, 160, 165, 168, 171, 173], "compar": [1, 2, 17, 18, 19, 33, 34, 35, 39, 44, 51, 55, 57, 64, 77, 82, 83, 97, 99, 102, 111, 114, 117, 119, 123, 137, 146, 148, 150, 153, 158, 160, 164, 165, 166], "model": [1, 33, 36, 54, 58, 77, 78, 91, 122, 123, 165], "ranking": 1, "pouvoir": [1, 6, 47, 51, 58, 63, 88, 96, 107, 111, 124, 130, 132, 139, 141, 142, 148, 150, 158, 164, 165, 166, 169, 171], "visuel": [1, 3, 28, 41, 57, 158], "r\u00e9sultat": [1, 2, 6, 19, 20, 22, 24, 27, 28, 33, 34, 35, 36, 37, 39, 40, 44, 49, 51, 52, 54, 57, 58, 69, 70, 73, 74, 75, 78, 80, 81, 82, 86, 94, 100, 103, 105, 107, 111, 112, 114, 118, 120, 121, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 148, 149, 150, 153, 156, 160, 164, 165, 166, 168, 169, 171, 173], "Quel": [1, 27, 68, 80, 81, 140], "mieux": [1, 2, 8, 21, 27, 28, 37, 39, 55, 58, 61, 63, 78, 80, 81, 83, 90, 101, 104, 107, 109, 111, 140, 142, 150, 158, 160, 168, 169, 171], "affich": [1, 2, 3, 6, 27, 33, 34, 39, 40, 41, 44, 51, 53, 54, 64, 69, 70, 78, 87, 105, 130, 140, 141, 142, 148, 149, 150, 153, 156, 158, 160, 161, 162, 164, 165, 166, 168, 171, 173], "moteur": [1, 34, 37, 78, 140, 158, 166], "recherch": [1, 4, 12, 24, 34, 37, 53, 58, 59, 63, 64, 77, 78, 80, 83, 93, 95, 103, 106, 125, 135, 140, 153, 158, 164, 165, 166, 173], "oeil": [1, 33, 34, 165], "humain": [1, 142, 171], "sais": [1, 63, 141, 164, 166], "rapid": [1, 2, 3, 19, 24, 26, 27, 33, 34, 35, 39, 41, 44, 47, 54, 61, 64, 77, 80, 81, 82, 83, 90, 91, 93, 99, 100, 101, 105, 108, 112, 114, 118, 134, 135, 140, 141, 147, 150, 156, 158, 160, 165, 168, 169, 170, 171], "diff\u00e9rent": [1, 11, 16, 19, 24, 25, 28, 33, 34, 35, 36, 37, 40, 48, 49, 57, 58, 63, 75, 77, 80, 81, 83, 85, 86, 87, 98, 99, 100, 103, 106, 108, 116, 124, 125, 130, 131, 134, 137, 140, 142, 143, 148, 150, 153, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 171, 173], "tout": [1, 2, 3, 6, 7, 11, 12, 16, 19, 21, 24, 25, 27, 28, 33, 34, 35, 36, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 61, 64, 65, 67, 72, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 94, 95, 100, 102, 103, 104, 105, 109, 113, 115, 116, 118, 119, 123, 124, 125, 126, 127, 130, 131, 134, 135, 137, 140, 141, 142, 145, 146, 150, 154, 156, 158, 160, 162, 164, 165, 166, 169, 171, 173], "fusion": [1, 12, 58, 75, 104, 119], "algo": [1, 91], "bucket": 1, "bull": 1, "complex": [1, 3, 16, 39, 41, 44, 47, 51, 64, 107, 140, 142, 150, 158, 164, 168, 169], "lempel": 1, "ziv": 1, "python": [1, 3, 5, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 38, 40, 42, 58, 67, 68, 71, 72, 75, 78, 79, 80, 81, 94, 97, 98, 99, 100, 103, 106, 107, 111, 112, 114, 115, 116, 117, 118, 119, 130, 131, 132, 135, 147, 148, 151, 152, 153, 154, 156, 158, 159, 160, 162, 163, 166, 168, 169, 170, 173], "implement": [1, 112, 135], "kullback": 1, "leibl": 1, "divergent": 1, "kl": 1, "ucb": 1, "index": [1, 39, 55, 57, 58, 69, 71, 72, 86, 90, 99, 104, 107, 110, 134, 141, 150, 153, 164, 165, 168], "matriciel": [1, 5, 8, 19, 31, 87, 91, 112], "winograd": 1, "minimum": [1, 28, 33, 35, 49, 51, 53, 54, 67, 79, 84, 85, 86, 90, 126, 127], "filtering": 1, "convolu": [1, 8, 93], "im2col": 1, "r\u00e9arrang": 1, "divis": [1, 2, 27, 33, 34, 39, 47, 48, 53, 65, 69, 77, 79, 82, 83, 105, 111, 114, 120, 121, 126, 134, 136, 149, 152, 153, 164, 165], "reign": 1, "branch": 1, "bound": [1, 33, 158], "the": [1, 3, 5, 6, 7, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 36, 41, 45, 47, 51, 55, 63, 73, 74, 77, 104, 106, 111, 112, 119, 120, 121, 122, 126, 127, 128, 129, 150, 154, 158, 168, 171], "ultimat": 1, "planar": 1, "convex": [1, 79], "hull": 1, "relectur": [1, 25, 44, 150, 166, 169], "kirkpatrick": 1, "seidel": 1, "prun": [1, 80, 81], "search": [1, 3, 7, 41, 168, 173], "an": [1, 3, 6, 7, 34, 35, 44, 45, 77, 78, 128, 129, 141, 154, 158, 164, 171], "finding": 1, "point": [1, 2, 15, 19, 27, 28, 29, 33, 39, 53, 56, 63, 64, 78, 79, 82, 83, 84, 85, 105, 112, 123, 130, 137, 140, 141, 142, 147, 148, 150, 154, 158, 160, 164, 165, 166, 171, 173], "set": [1, 3, 7, 16, 34, 36, 39, 41, 47, 48, 54, 57, 63, 74, 94, 99, 102, 118, 148, 150, 154, 158, 159, 164, 171], "d\u00e9termin": [1, 2, 6, 19, 24, 27, 33, 39, 64, 65, 77, 78, 79, 80, 81, 87, 111, 124, 140, 141, 142, 146, 148, 150, 156, 158, 160, 164, 165, 168, 171, 173], "envelopp": 1, "h": [1, 19, 25, 34, 47, 57, 63, 78, 82, 83, 84, 85, 86, 97, 103, 107, 135, 137, 147, 150, 158, 159, 161, 165, 166, 169, 171], "nombr": [1, 2, 3, 5, 6, 10, 19, 20, 21, 27, 28, 32, 34, 35, 37, 39, 41, 44, 48, 50, 51, 53, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 86, 88, 90, 91, 96, 99, 100, 103, 104, 106, 107, 108, 109, 113, 114, 116, 118, 119, 120, 121, 122, 123, 126, 127, 130, 131, 134, 135, 137, 139, 140, 142, 143, 146, 148, 149, 150, 153, 156, 158, 160, 161, 162, 163, 166, 168, 169, 171, 173], "segment": [1, 53, 59, 64, 126, 136, 150], "court": [1, 3, 8, 12, 19, 25, 28, 30, 31, 32, 34, 41, 48, 50, 51, 55, 59, 63, 64, 71, 72, 75, 91, 92, 101, 118, 119, 140, 146, 150, 164, 165, 166], "chemin": [1, 3, 8, 12, 28, 41, 48, 49, 54, 63, 75, 91, 112, 137, 140, 154, 158, 168], "graph": [1, 6, 7, 12, 13, 28, 30, 31, 33, 47, 52, 57, 63, 64, 75, 96, 112, 124, 129, 145, 150, 158], "ordonnanc": [1, 8, 91], "permut": [1, 2, 11, 13, 21, 27, 28, 51, 58, 77, 78, 88, 93, 105, 125, 126, 127, 131, 134, 140, 153], "sattolo": 1, "voyageur": [1, 12, 28, 59, 91], "commerc": [1, 12, 15, 29, 47, 59, 91], "hamiltonien": [1, 28], "lir": [1, 2, 3, 5, 34, 35, 39, 41, 43, 48, 77, 106, 111, 116, 124, 135, 140, 141, 150, 153, 154, 156, 158, 160, 162, 164, 165, 166, 168, 169], "larg": [1, 28, 47], "scal": 1, "traveling": [1, 8, 91], "salesman": [1, 8, 62, 91], "tourn": [1, 27, 58, 94, 102, 134, 171], "v\u00e9hicul": 1, "extens": [1, 6, 9, 31, 35, 50, 54, 64, 79, 107, 140, 147, 150, 158, 163, 166, 167, 173], "affect": [1, 2, 27, 33, 39, 44, 51, 59, 103, 134, 143, 148, 150, 153, 158, 160, 164, 168, 171], "m\u00e9thod": [1, 2, 3, 12, 24, 27, 33, 34, 41, 47, 56, 58, 61, 65, 68, 69, 71, 78, 82, 83, 93, 94, 95, 97, 100, 107, 112, 116, 122, 123, 129, 135, 140, 141, 151, 152, 153, 160, 163, 164, 166, 168, 171, 173], "hongrois": [1, 129], "arbre": [1, 12, 54, 57, 63, 75, 93, 103, 109, 147], "poid": [1, 6, 64, 79, 150], "miminum": [1, 49], "kruskal": [1, 4, 6, 12, 64], "bor\u016fvk": 1, "sac": 1, "dos": 1, "structur": [1, 2, 3, 7, 19, 34, 35, 36, 39, 41, 54, 57, 64, 109, 130, 134, 135, 140, 150, 160, 165, 166, 168], "cha\u00een": [1, 34, 36, 50, 67, 68, 69, 71, 77, 93, 94, 107, 124, 130, 134, 140, 142, 143, 146, 147, 148, 150, 153, 158, 159, 162, 163, 164, 166, 168, 169, 171, 173], "def": [1, 2, 3, 7, 16, 17, 18, 19, 20, 24, 25, 27, 28, 33, 34, 35, 37, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 123, 127, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 146, 147, 150, 152, 153, 154, 156, 158, 159, 160, 164, 165, 166, 168, 169, 171, 173], "hachag": [1, 34, 47], "distribu": [1, 3, 4, 9, 33, 41, 44, 47, 54, 100, 103, 105, 116, 117, 119, 124, 158, 171], "suffix": [1, 8, 91, 165], "tre": [1, 16, 135, 141, 150], "b": [1, 2, 3, 7, 16, 20, 21, 23, 25, 26, 27, 33, 34, 39, 40, 41, 44, 47, 49, 50, 51, 55, 56, 57, 58, 59, 63, 64, 68, 69, 70, 71, 75, 78, 79, 84, 85, 88, 89, 94, 95, 96, 99, 100, 101, 103, 106, 114, 116, 124, 125, 127, 128, 129, 134, 135, 136, 137, 141, 147, 148, 149, 150, 153, 158, 159, 160, 164, 165, 166, 168, 169, 171, 173], "x": [1, 2, 3, 7, 19, 20, 25, 27, 28, 33, 34, 35, 39, 40, 41, 47, 48, 53, 55, 57, 61, 63, 67, 68, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 91, 97, 100, 101, 103, 108, 109, 112, 113, 116, 118, 119, 120, 121, 123, 126, 127, 130, 134, 136, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 153, 158, 160, 164, 165, 166, 168, 171, 173], "tas": [1, 58, 104], "heap": [1, 58, 93], "fibonacc": [1, 49], "judy": 1, "array": [1, 17, 22, 25, 27, 32, 35, 36, 39, 47, 48, 52, 53, 54, 55, 56, 58, 62, 70, 78, 79, 82, 83, 84, 85, 86, 90, 97, 100, 101, 110, 112, 113, 116, 117, 122, 124, 125, 128, 129, 137, 139, 169, 171], "sit": [1, 3, 9, 12, 26, 34, 35, 41, 43, 44, 56, 65, 86, 111, 112, 113, 115, 122, 126, 127, 128, 129, 140, 145, 146, 154, 156, 161, 165, 168, 173], "mapping": [1, 34, 78], "int": [1, 3, 6, 7, 17, 19, 24, 33, 34, 35, 39, 41, 47, 54, 57, 61, 69, 71, 73, 74, 77, 80, 81, 86, 94, 95, 97, 101, 102, 103, 119, 136, 137, 139, 140, 141, 143, 150, 153, 164, 165, 169, 171], "efficac": [1, 2, 22, 24, 33, 54, 57, 58, 61, 63, 64, 69, 75, 97, 104, 119, 150, 159, 160, 164, 169, 171], "traditionnel": [1, 43], "propriet": [1, 39, 48, 54, 123, 124, 132, 137], "cach": [1, 3, 27, 34, 37, 39, 41, 80, 81, 87, 150, 152, 164, 165], "processeur": [1, 35, 112, 164, 171], "compos": [1, 8, 12, 21, 39, 64, 91, 95, 112, 158, 164, 165, 168], "connex": [1, 6, 8, 12, 64, 91, 156], "parcour": [1, 16, 19, 28, 39, 47, 53, 57, 59, 61, 65, 67, 68, 75, 90, 96, 107, 116, 130, 131, 134, 137, 148, 150, 153, 164, 165, 171], "profondeur": [1, 75], "largeur": [1, 54, 75, 88, 116, 158], "orient": [1, 39, 48, 54, 104, 165], "acycl": [1, 75], "degr": [1, 6, 48, 54, 64, 117, 134, 164], "floyd": [1, 129], "flukerson": 1, "cut": [1, 76], "maximum": [1, 5, 32, 33, 35, 39, 52, 53, 63, 65, 77, 79, 86, 90, 97], "bi": [1, 33, 129, 141, 150, 158], "pagerank": 1, "appari": [1, 34, 64, 125, 129], "edmond": [1, 64], "blossum": 1, "hopcroft": [1, 129], "karp": [1, 129], "blossom": [1, 129], "5": [1, 2, 3, 5, 6, 7, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 32, 33, 35, 36, 39, 41, 44, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 132, 134, 135, 137, 139, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 158, 159, 160, 161, 164, 165, 166, 168, 171, 173], "couplag": [1, 64, 129], "gal": 1, "shapley": 1, "mariag": [1, 84, 85], "stabl": [1, 33, 36], "robinson": 1, "fould": 1, "robustess": 1, "r\u00e9seau": [1, 47, 54, 124], "quantifying": 1, "robustness": 1, "metro": [1, 36], "network": [1, 63], "d\u00e9tect": [1, 27, 39, 117, 119, 141, 147, 150, 153, 154, 158, 161, 164, 173], "motif": [1, 106, 144, 145], "fr\u00e9quent": [1, 2, 25, 34, 38, 47, 58, 63, 65, 87, 107, 112, 116, 134, 140, 146, 150, 153, 158, 162, 163, 164, 165, 166, 169, 171], "fp": 1, "growth": [1, 115], "text": [1, 2, 3, 7, 16, 19, 21, 28, 34, 36, 37, 40, 41, 44, 47, 52, 57, 65, 78, 79, 93, 106, 107, 111, 112, 132, 134, 137, 142, 148, 153, 154, 160, 162, 164, 165, 167, 168, 169, 171, 173], "knuth": 1, "morr": 1, "pratt": 1, "rabin": 1, "jaccard": 1, "gramm": 1, "aho": 1, "corasick": 1, "auss": [1, 2, 3, 12, 16, 19, 20, 25, 26, 27, 28, 33, 34, 35, 36, 39, 40, 41, 44, 51, 54, 55, 58, 63, 64, 82, 83, 84, 87, 88, 95, 100, 103, 105, 111, 112, 113, 116, 118, 124, 125, 134, 137, 141, 143, 146, 148, 150, 153, 154, 156, 158, 160, 164, 165, 166, 168, 169, 171, 173], "commentz": 1, "walt": 1, "burrow": 1, "wheel": [1, 9, 158], "aprior": 1, "apprentissag": [1, 123, 126, 158], "regl": [1, 16, 35, 39, 51, 124, 137, 140, 141, 150, 154, 156, 158, 164, 165, 166], "associ": [1, 2, 16, 34, 35, 39, 40, 44, 48, 57, 61, 69, 78, 84, 85, 112, 116, 125, 134, 137, 143, 150, 153, 159, 160, 161, 164, 165, 166, 168, 171, 173], "boi": 1, "moor": 1, "string": [1, 7, 26, 33, 34, 39, 40, 106, 107, 113, 128, 129, 140, 158, 164, 165, 166, 168], "simplex": 1, "lin\u00e9air": [1, 32, 47, 58, 78, 79, 80, 81, 82, 83, 103, 109, 119, 123, 158, 168], "thes": [1, 7, 128, 129, 158], "neld": [1, 33], "mead": [1, 33], "codag": 1, "huffman": [1, 63], "lz77": 1, "lz78": 1, "bootstrap": 1, "intervall": [1, 2, 17, 19, 35, 39, 53, 55, 64, 79, 80, 81, 82, 100, 120, 121, 126, 127, 136, 137, 160, 168, 171], "confianc": [1, 137], "filtr": [1, 6, 111, 166, 173], "bloom": 1, "woodbury": 1, "identity": [1, 35, 90], "blockwis": 1, "invers": [1, 5, 16, 25, 27, 28, 32, 33, 34, 39, 47, 55, 77, 87, 95, 107, 116, 131, 140, 141, 145, 150, 153, 158, 162, 165, 166, 169, 171], "toom": 1, "cook": 1, "canopy": 1, "clustering": 1, "lru": 1, "last": [1, 2, 3, 37, 39, 41, 58, 59, 61, 68, 69, 71, 72, 77, 82, 150, 153, 154, 158, 160, 164, 165, 173], "recent": [1, 2, 3, 37, 39, 41, 68, 69, 71, 72, 77, 150, 153, 154, 158, 160, 164, 165, 173], "used": [1, 7, 16, 168], "yield": [1, 25, 68, 115, 119, 150, 164], "m\u00e9mo\u00efz": 1, "fonction": [1, 3, 6, 12, 18, 19, 20, 24, 26, 27, 28, 33, 38, 41, 44, 48, 49, 50, 51, 53, 56, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 93, 94, 95, 98, 100, 103, 106, 109, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 130, 131, 136, 139, 140, 146, 147, 148, 152, 153, 154, 156, 159, 161, 162, 166, 168, 169, 171, 174], "fonctionnel": [1, 24, 39, 44, 150], "r\u00e9curs": [1, 2, 16, 39, 49, 50, 51, 53, 75, 87, 107, 124, 127, 165, 166, 171], "kahan": 1, "summat": [1, 128, 129], "probabil": [1, 105], "probabilistic": 1, "dat": [1, 2, 6, 23, 25, 26, 33, 36, 42, 47, 55, 56, 86, 104, 106, 107, 110, 112, 115, 135, 140, 141, 150, 158, 163, 165, 166, 168, 169, 173], "web": [1, 2, 8, 39, 41, 44, 93, 140, 141, 156, 161, 169, 170], "analytic": 1, "mining": 1, "compress": [1, 48, 63, 107, 140, 166], "lzfse": 1, "lzma": 1, "squash": 1, "benchmark": [1, 33], "inspir": [1, 16, 19, 33, 54, 63, 64, 75, 79, 84, 85, 100, 103, 118, 124, 127, 141, 144, 145], "quantiqu": [1, 12, 44], "quantum": 1, "inspired": 1, "classical": 1, "recommend": 1, "system": [1, 3, 33, 34, 41, 48, 53, 55, 63, 78, 79, 120, 121, 161, 162, 165, 166, 168, 171, 173], "beaucoup": [1, 5, 6, 11, 16, 19, 34, 35, 39, 40, 41, 43, 44, 51, 54, 57, 61, 69, 70, 75, 77, 81, 83, 99, 100, 112, 116, 119, 124, 130, 131, 134, 135, 140, 141, 142, 147, 150, 152, 158, 162, 165, 166, 169, 171, 173], "projet": [1, 36, 130, 152, 168], "thealgorithm": 1, "modul": [1, 2, 5, 7, 18, 19, 25, 32, 33, 34, 37, 38, 64, 68, 69, 71, 72, 77, 78, 79, 80, 81, 93, 94, 99, 100, 103, 106, 107, 112, 115, 116, 118, 122, 124, 147, 150, 153, 154, 156, 158, 159, 160, 161, 164, 165, 166, 169, 170, 171, 173, 174], "classiqu": [1, 5, 32, 33, 41, 58, 59, 63, 88, 140, 148, 151, 157, 163], "binair": [1, 39, 47, 54, 60, 78, 80, 88, 96, 107, 109, 123, 141, 165, 167], "mersen": 1, "heapsort": 1, "distingu": [1, 3, 34, 39, 41, 54, 64, 98, 134, 140, 146, 150, 164, 165], "trois": [1, 2, 11, 16, 24, 27, 34, 38, 53, 57, 61, 63, 65, 75, 95, 98, 102, 114, 128, 129, 132, 134, 140, 141, 142, 145, 148, 150, 153, 158, 160, 163, 165, 166, 168, 171, 173], "class": [1, 7, 8, 12, 13, 26, 27, 33, 34, 38, 44, 55, 67, 75, 103, 104, 107, 115, 116, 122, 124, 125, 141, 148, 156, 159, 161, 162, 164, 165, 166, 168, 169, 171, 173, 174], "p": [1, 7, 16, 17, 19, 26, 39, 47, 54, 57, 58, 62, 63, 65, 75, 77, 82, 83, 86, 90, 94, 95, 97, 99, 100, 103, 107, 111, 112, 113, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 133, 134, 137, 141, 147, 148, 150, 159, 164, 166, 173], "Un": [1, 3, 6, 8, 16, 19, 21, 24, 26, 27, 33, 34, 35, 36, 39, 40, 41, 48, 52, 57, 65, 68, 77, 78, 80, 81, 82, 83, 84, 85, 93, 94, 106, 107, 109, 116, 120, 121, 126, 130, 134, 138, 139, 140, 142, 143, 144, 146, 147, 148, 150, 156, 158, 162, 164, 166, 167, 169], "appartient": [1, 24, 53, 54, 79, 100, 112, 116, 150, 158, 164, 165, 173], "\u00eatre": [1, 2, 3, 16, 25, 27, 28, 33, 34, 36, 37, 39, 40, 41, 44, 47, 48, 51, 54, 55, 61, 63, 64, 65, 69, 75, 77, 79, 80, 81, 82, 83, 86, 87, 94, 95, 106, 107, 109, 111, 112, 114, 116, 117, 118, 124, 125, 126, 130, 134, 135, 136, 140, 141, 146, 147, 148, 150, 153, 156, 158, 160, 162, 164, 165, 166, 168, 171, 173], "d\u00e9cid": [1, 19, 39, 51, 63, 64, 87, 141, 153], "polyn\u00f4mial": [1, 28, 62, 124, 129], "d\u00e9cis": 1, "turing": 1, "polynomial": [1, 64], "rapport": [1, 16, 44, 47, 64, 80, 81, 83, 87, 111, 119, 123, 132, 150, 152, 158, 164, 170, 171], "taill": [1, 27, 33, 34, 35, 39, 44, 57, 58, 63, 65, 75, 79, 80, 81, 84, 85, 86, 103, 105, 109, 116, 119, 124, 125, 126, 137, 148, 149, 150, 158, 164, 165, 166, 169, 171], "entr\u00e9": [1, 3, 24, 32, 33, 41, 43, 47, 86, 94, 95, 103, 118, 134, 140, 141, 148, 150, 153, 154, 158, 160, 162, 164, 174], "impliqu": [1, 18, 25, 33, 35, 39, 40, 55, 67, 83, 100, 150, 158, 164, 166], "possibl": [1, 2, 3, 5, 6, 10, 16, 19, 23, 25, 27, 28, 33, 34, 36, 39, 40, 41, 44, 48, 49, 50, 53, 54, 55, 56, 63, 64, 70, 77, 83, 84, 85, 86, 90, 91, 97, 101, 104, 105, 107, 116, 120, 121, 123, 124, 125, 128, 129, 131, 132, 134, 140, 141, 142, 146, 147, 150, 153, 154, 156, 158, 160, 162, 165, 166, 168, 169, 171, 173], "v\u00e9rifi": [1, 6, 19, 24, 27, 36, 37, 39, 44, 47, 51, 53, 54, 63, 67, 69, 79, 80, 81, 82, 83, 88, 94, 95, 96, 106, 116, 131, 139, 156, 158, 164, 165, 166, 168, 171, 173], "admet": [1, 79, 137], "capabl": [1, 19, 62, 95, 146, 150, 158, 166, 168, 171], "pr\u00e9cis": [1, 3, 26, 33, 34, 39, 40, 41, 44, 52, 77, 79, 82, 83, 87, 100, 105, 130, 141, 142, 150, 153, 154, 158, 162, 164, 165, 166, 168, 169, 171, 173], "r\u00e9duct": [1, 35, 89], "f": [1, 2, 3, 7, 17, 20, 25, 26, 33, 34, 36, 39, 41, 47, 49, 52, 53, 57, 59, 63, 64, 69, 70, 73, 74, 77, 79, 80, 81, 94, 95, 100, 102, 103, 107, 112, 118, 124, 130, 134, 135, 136, 137, 140, 141, 143, 147, 148, 150, 153, 154, 158, 160, 162, 164, 166, 168, 171, 173], "bpp": 1, "objet": [1, 2, 3, 12, 16, 18, 22, 33, 34, 39, 40, 41, 95, 98, 107, 115, 116, 130, 132, 134, 135, 147, 150, 153, 157, 159, 160, 161, 164, 168, 169, 171, 173], "th\u00e9or": [1, 150], "informat": [1, 16, 27, 39, 98, 107, 130, 137, 150, 152, 162, 164, 166], "th\u00e9oriqu": [1, 47], "d\u00e9fin": [1, 3, 6, 16, 19, 20, 24, 27, 33, 35, 36, 39, 40, 41, 48, 52, 54, 80, 82, 83, 94, 95, 98, 100, 107, 124, 130, 134, 140, 141, 147, 148, 150, 154, 155, 156, 158, 162, 164, 165, 166, 168, 169, 171, 173], "acronym": [1, 134], "vient": [1, 27, 53, 63, 64, 72, 99, 100, 114, 130, 133, 142, 150, 158, 164, 166], "bounded": 1, "error": [1, 55, 154], "tim": [1, 3, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 47, 54, 57, 58, 60, 61, 87, 99, 100, 111, 112, 113, 117, 119, 122, 123, 128, 129, 131, 135, 147, 150, 158, 161, 168, 171], "encor": [1, 3, 20, 24, 27, 33, 34, 39, 41, 44, 47, 51, 53, 56, 57, 58, 61, 64, 65, 71, 72, 82, 83, 90, 94, 95, 102, 111, 124, 125, 126, 130, 131, 141, 145, 146, 150, 152, 156, 159, 164, 165, 166, 168, 171, 173], "irr\u00e9solu": 1, "Une": [1, 2, 3, 16, 19, 20, 24, 34, 39, 40, 41, 44, 47, 49, 50, 52, 56, 58, 59, 61, 63, 69, 75, 77, 82, 83, 84, 85, 93, 94, 101, 105, 108, 116, 123, 127, 130, 132, 134, 137, 142, 143, 150, 153, 158, 160, 161, 164, 165, 166, 168, 169, 171, 173], "preuv": 1, "cour": [1, 34, 39, 54, 55, 60, 86, 99, 117, 140, 153, 158, 164, 165, 166, 171], "logiqu": [1, 16, 34, 39, 40, 140, 152, 158, 165, 169], "423": 1, "m\u00eam": [1, 3, 5, 11, 16, 18, 19, 20, 22, 24, 25, 27, 28, 33, 34, 35, 37, 39, 40, 41, 44, 49, 54, 55, 57, 58, 62, 64, 65, 67, 69, 75, 77, 78, 80, 81, 83, 84, 85, 86, 91, 95, 98, 99, 100, 104, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 130, 131, 132, 134, 135, 137, 139, 141, 142, 143, 147, 148, 150, 153, 154, 158, 161, 162, 164, 165, 166, 168, 169, 171, 173], "r\u00e9duir": [1, 20, 34, 39, 44, 145, 148, 165, 166, 169], "fa\u00e7on": [1, 2, 3, 6, 11, 16, 19, 25, 26, 28, 33, 34, 35, 41, 43, 44, 48, 51, 53, 54, 55, 58, 60, 61, 64, 68, 71, 72, 78, 79, 80, 82, 84, 85, 87, 89, 90, 91, 95, 98, 99, 100, 101, 103, 104, 107, 111, 112, 116, 117, 124, 130, 134, 140, 141, 146, 147, 149, 150, 153, 154, 158, 160, 162, 164, 165, 166, 168, 170, 171], "dont": [1, 2, 3, 16, 24, 27, 34, 35, 39, 40, 41, 47, 53, 54, 68, 82, 83, 84, 85, 88, 94, 95, 103, 114, 116, 118, 124, 126, 137, 141, 146, 147, 150, 153, 154, 158, 160, 162, 164, 165, 166, 168, 171, 173], "cherch": [1, 2, 3, 19, 24, 33, 34, 36, 39, 41, 44, 53, 56, 58, 63, 64, 65, 75, 77, 78, 79, 82, 83, 84, 85, 88, 90, 95, 97, 100, 105, 111, 114, 115, 118, 120, 121, 124, 127, 128, 129, 134, 136, 143, 146, 148, 149, 150, 152, 153, 158, 160, 164, 165, 168, 173], "puiss": [1, 16, 77, 126, 140, 141, 150, 158], "r\u00e9ciproqu": [1, 2, 24, 39, 77, 101, 107, 134, 150, 158, 162, 164, 165, 166, 169], "premi": [1, 3, 5, 6, 8, 11, 12, 16, 19, 20, 24, 27, 28, 32, 33, 34, 35, 39, 40, 41, 44, 47, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 67, 68, 69, 71, 72, 75, 77, 78, 80, 81, 82, 84, 85, 87, 88, 89, 91, 93, 95, 98, 101, 102, 104, 107, 111, 114, 116, 119, 123, 124, 125, 131, 132, 134, 139, 140, 141, 145, 146, 148, 149, 150, 153, 154, 156, 158, 162, 164, 165, 166, 168, 169, 170, 173], "lequel": [1, 3, 6, 34, 39, 41, 44, 47, 49, 52, 64, 70, 124, 125, 129, 134, 135, 150, 159, 162, 164, 165, 166, 168, 171], "compl\u00e9tud": 1, "th\u00e9orem": [1, 95, 137], "stephen": 1, "sat": 1, "\u00e9quivalent": [1, 2, 16, 19, 20, 24, 28, 34, 39, 79, 99, 102, 123, 125, 126, 127, 128, 129, 130, 140, 150, 153, 158, 160, 164, 165, 166, 170, 173], "pr\u00e9sentent": [1, 107, 140, 158, 166], "sous": [1, 2, 14, 24, 33, 34, 36, 39, 40, 44, 47, 48, 50, 57, 64, 65, 68, 73, 74, 91, 104, 107, 116, 124, 125, 126, 130, 140, 141, 148, 150, 153, 156, 164, 165, 166, 168, 169, 171, 173], "or": [1, 2, 3, 7, 16, 27, 28, 33, 36, 39, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 68, 69, 71, 75, 79, 80, 81, 82, 83, 88, 94, 102, 104, 112, 118, 122, 126, 127, 128, 129, 132, 133, 137, 153, 158, 160, 164, 165, 168, 169, 173], "acc": 1, "v\u00e9rif": [1, 19, 24, 27, 33, 34, 37, 39, 44, 47, 48, 50, 51, 52, 55, 61, 63, 64, 67, 68, 69, 75, 77, 78, 80, 81, 82, 94, 95, 100, 109, 116, 124, 137, 139, 140, 149, 150, 154, 158, 164, 165, 168, 171, 173], "claus": [1, 16, 148, 153, 164], "vee_k": 1, "y_": [1, 17], "1k": 1, "wedg": 1, "n_k": 1, "k": [1, 2, 5, 6, 19, 24, 25, 32, 33, 34, 39, 47, 49, 53, 54, 55, 57, 60, 61, 63, 64, 65, 68, 69, 70, 77, 78, 80, 81, 82, 83, 84, 85, 90, 91, 95, 100, 101, 109, 110, 112, 116, 119, 125, 126, 127, 134, 135, 137, 147, 149, 150, 160, 164, 165, 173], "ik": [1, 28, 54], "x_i": [1, 33, 47, 78, 79, 80, 81, 82, 83, 120, 121, 123, 137], "neg": [1, 34], "pass": [1, 2, 3, 12, 18, 19, 21, 23, 24, 25, 27, 28, 33, 34, 36, 39, 41, 48, 53, 55, 58, 59, 64, 69, 77, 80, 81, 82, 95, 101, 104, 106, 111, 112, 113, 115, 116, 118, 122, 123, 124, 127, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 148, 149, 150, 153, 156, 158, 160, 162, 165, 166, 168, 169, 170, 171, 173], "\u00e9valu": [1, 27, 33, 66, 164, 165], "sup\u00e9rieur": [1, 2, 44, 54, 58, 64, 77, 78, 79, 81, 82, 83, 114, 148, 158, 160, 164, 165, 166], "certain": [1, 3, 25, 28, 34, 35, 36, 37, 39, 41, 44, 47, 53, 68, 77, 99, 114, 115, 124, 130, 132, 137, 140, 141, 146, 150, 152, 153, 156, 158, 161, 164, 165, 166, 168, 169, 171, 173], "seuil": [1, 6, 47, 64], "wikip\u00e9di": [1, 34, 50, 107, 144, 145], "version": [1, 2, 3, 8, 9, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 41, 44, 50, 53, 61, 63, 75, 80, 81, 100, 107, 108, 111, 112, 131, 132, 137, 141, 143, 147, 148, 150, 158, 159, 160, 162, 164, 165, 166, 168, 171, 173], "fran\u00e7ais": 1, "learning": [1, 5, 12, 33, 41, 43, 58, 112], "concept": [1, 27, 39, 130, 150, 152, 158, 163, 171], "statist": [1, 32, 34, 54, 111, 112, 117, 147], "introduct": [1, 34, 43, 55, 157], "to": [1, 3, 5, 7, 9, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 41, 45, 55, 64, 71, 78, 104, 106, 112, 122, 128, 129, 135, 150, 153, 154, 158, 164, 165, 166, 168, 173], "\u00e9chantillon": [1, 33, 34, 64, 124], "markov": 1, "central": [1, 2, 137, 160], "flow": [1, 128, 129], "blossom5": 1, "matching": 1, "local": [1, 3, 20, 39, 115, 122, 150, 154, 162, 169, 171], "max": [1, 5, 17, 32, 33, 34, 35, 36, 39, 47, 51, 52, 53, 55, 57, 59, 61, 64, 79, 82, 83, 85, 90, 94, 96, 97, 105, 109, 116, 127, 131, 137, 148, 150, 164, 165, 173], "smoothed": 1, "expand": [1, 158], "geometric": 1, "embedding": 1, "partitioning": 1, "partitionning": 1, "read": [1, 17, 25, 26, 34, 36, 65, 107, 115, 140, 141, 147, 154, 162, 166, 169, 171, 173], "optimized": 1, "period": 1, "order": [1, 16, 33, 82, 107, 128, 129, 150, 153], "preserving": 1, "recurs": [1, 16, 80, 81, 112, 134], "gram": 1, "hashing": 1, "is": [1, 3, 7, 16, 17, 19, 25, 33, 35, 36, 45, 50, 51, 53, 55, 56, 57, 58, 59, 63, 68, 69, 72, 80, 81, 82, 83, 87, 88, 94, 96, 101, 106, 112, 118, 122, 127, 128, 129, 137, 150, 158, 164, 165, 168, 169, 171, 173], "pairwis": [1, 90], "independent": 1, "at": [1, 3, 7, 16, 25, 28, 33, 34, 39, 47, 68, 73, 74, 80, 81, 87, 94, 123, 128, 129, 130, 141, 158, 162, 164, 165, 169], "best": [1, 16, 53, 55, 57, 62, 77, 83, 84, 85, 106, 125, 127], "hash": [1, 107, 135], "featur": [1, 141], "classif": [1, 123, 146], "malwar": 1, "detect": [1, 36, 141, 147], "computing": 1, "deriv": 1, "tensor": 1, "express": [1, 27, 33, 34, 39, 40, 45, 75, 79, 93, 94, 101, 116, 124, 150, 164, 165, 166, 168, 174], "prec": [1, 27, 33, 43, 49, 53, 68, 69, 75, 77, 116, 124, 134, 136, 137, 154, 156, 158, 162, 164, 165, 173], "op\u00e9rationnel": [1, 3, 41], "robert": 1, "faur": 1, "bernard": [1, 141], "lemair": 1, "christoph": 1, "picouleau": 1, "programming": [1, 10, 126], "pearl": 1, "jon": 1, "bentley": 1, "3rd": 1, "edit": [1, 3, 26, 51, 158], "thom": 1, "cormen": 1, "charl": [1, 65, 98], "e": [1, 5, 7, 19, 24, 25, 27, 32, 33, 34, 35, 36, 39, 47, 50, 57, 58, 63, 64, 65, 66, 86, 89, 94, 96, 103, 106, 115, 116, 119, 124, 125, 126, 134, 135, 139, 141, 142, 143, 146, 147, 148, 150, 153, 154, 158, 159, 164, 165, 166, 168, 169, 171, 173], "leiserson": 1, "ronald": 1, "rivest": 1, "clifford": 1, "stein": 1, "128": [1, 53, 60, 75, 97, 154], "compr": [1, 2, 35, 39, 41, 131, 132, 134, 141, 150, 158, 164, 165, 173], "cod": [1, 2, 3, 5, 7, 9, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 47, 51, 59, 63, 64, 66, 68, 69, 70, 72, 78, 80, 81, 82, 83, 87, 88, 91, 93, 94, 95, 102, 103, 104, 107, 112, 113, 116, 120, 121, 122, 126, 127, 128, 129, 130, 132, 140, 141, 142, 148, 150, 152, 153, 154, 156, 158, 160, 162, 164, 165, 166, 168, 169, 171], "vi": [1, 2, 3, 9, 25, 33, 34, 41, 51, 77, 99, 126, 140, 141, 150, 158, 164, 166, 169, 171], "accompagn": [1, 3, 41], "r\u00e9pertoir": [1, 3, 6, 39, 41, 118, 140, 158, 166, 168, 173], "github": [1, 6, 12, 25, 33, 34, 35, 36, 37, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 158, 168], "tryalgo": 1, "document": [1, 33, 34, 36, 45, 116, 140, 150, 153, 158, 162, 165, 168, 171], "r\u00e9solu": [1, 11, 15, 29, 54, 63, 91, 104, 165], "Des": [1, 12, 38, 44, 165], "appliqu": [1, 2, 6, 8, 25, 27, 34, 39, 40, 44, 47, 50, 51, 55, 59, 63, 77, 78, 87, 93, 94, 95, 98, 102, 106, 107, 111, 117, 124, 130, 140, 146, 148, 149, 150, 153, 154, 158, 160, 164, 165, 166, 168, 169, 171, 173], "efficient": [1, 35, 64], "practical": 1, "preconditioning": 1, "solving": 1, "laplacian": 1, "survey": 1, "driven": 1, "dictionary": [1, 2, 3, 6, 7, 64, 150, 158, 160, 165, 168], "based": [1, 7, 55, 128, 129], "method": [1, 7, 16, 33, 36, 111, 112, 113, 122, 150, 153, 154, 158, 165, 168], "3d": [1, 33], "modeling": 1, "project": [1, 3, 33], "eul": [1, 33, 64], "archiv": 1, "jam": [1, 14, 28, 33, 36, 39, 53, 68, 69, 76, 77, 100, 107, 126, 127, 128, 129, 134, 141, 150, 153, 154, 158, 164, 165, 171, 173], "2020": [1, 36, 55, 66], "2019": [1, 66], "2018": [1, 66, 107], "2017": [1, 66, 161], "earli": 1, "leetcod": 1, "comp\u00e9tit": 1, "recensent": [1, 86], "plusieur": [1, 3, 16, 19, 28, 33, 35, 36, 37, 39, 41, 44, 47, 48, 52, 78, 79, 81, 82, 83, 84, 85, 88, 97, 108, 111, 118, 124, 125, 127, 129, 130, 132, 137, 139, 140, 141, 147, 148, 150, 153, 162, 165, 166, 167, 170, 171, 173], "ci": [1, 2, 9, 25, 28, 33, 35, 36, 39, 41, 44, 47, 50, 52, 56, 58, 63, 69, 75, 77, 79, 80, 81, 86, 88, 95, 101, 107, 115, 116, 119, 123, 124, 130, 140, 142, 146, 150, 153, 154, 156, 158, 159, 160, 161, 164, 165, 166, 168, 169, 171, 173], "southwestern": 1, "europ": [1, 141], "regional": 1, "contest": 1, "swerc": 1, "pr\u00e9c\u00e9dent": [1, 8, 12, 13, 24, 33, 34, 39, 40, 49, 50, 51, 52, 53, 54, 56, 58, 59, 64, 75, 77, 78, 79, 80, 81, 82, 83, 88, 97, 100, 102, 105, 116, 118, 123, 127, 132, 134, 135, 136, 140, 143, 145, 148, 150, 153, 154, 158, 162, 164, 165, 166, 168, 171, 173], "acm": 1, "icpc": 1, "liv": 1, "castor": 1, "jeun": [1, 141], "coding": [1, 2, 26, 41, 44, 140, 141, 158, 162, 165], "you": [1, 17, 128, 129, 150], "should": [1, 17, 112], "know": [1, 5, 16], "least": [1, 16, 79, 87], "one": [1, 3, 5, 32, 33, 34, 35, 78, 79, 112, 113, 128, 129, 158], "languag": [1, 36, 52, 57, 107, 141, 147, 165, 169], "really": 1, "wel": [1, 7], "it": [1, 7, 17, 25, 28, 33, 55, 62, 64, 84, 85, 123, 128, 129, 150, 158, 164], "preferably": 1, "be": [1, 2, 3, 7, 16, 33, 36, 45, 55, 112, 128, 129, 141, 158, 160, 164], "jav": 1, "ok": [1, 17, 150, 158, 164], "too": [1, 128, 129, 164], "sinc": [1, 128, 129], "pretty": 1, "similar": 1, "will": [1, 55, 128, 129, 158], "expected": [1, 17, 54, 55, 94, 117, 164], "writ": [1, 17, 26, 34, 36, 39, 104, 107, 140, 141, 147, 153, 154, 166], "som": [1, 16, 17], "your": 1, "interview": 1, "amount": 1, "detail": [1, 2, 41, 44, 104, 158, 165], "about": [1, 2, 3, 5, 27, 39, 51, 54, 75, 78, 95, 102, 124, 128, 129, 158, 160, 165, 169, 171], "favorit": 1, "sorting": [1, 165], "how": [1, 3, 17, 33, 34, 41, 78, 128, 129, 135, 154, 165], "do": [1, 9, 26, 33, 45, 68, 69, 128, 129, 141, 150, 154, 164, 165], "bubbl": 1, "log": [1, 33, 43, 47, 55, 68, 78, 104, 119, 134, 137, 141, 149, 154, 156, 166, 168, 171], "two": [1, 16, 17, 33, 34, 55, 87, 128, 129], "say": 1, "quick": [1, 33], "merg": [1, 36, 45, 104], "can": [1, 2, 3, 7, 17, 25, 33, 41, 71, 154, 158, 159, 160], "highly": 1, "useful": 1, "situat": [1, 150, 152, 164, 171], "wher": [1, 3, 33, 34, 128, 129, 158], "impractical": 1, "so": [1, 17, 45, 55, 128, 129], "tak": [1, 35], "look": [1, 33], "hashtabl": 1, "arguably": 1, "singl": [1, 36], "most": [1, 2, 3, 37, 39, 41, 68, 69, 71, 72, 77, 128, 129, 150, 153, 154, 158, 160, 164, 165, 168, 173], "import": [1, 2, 3, 5, 7, 16, 17, 18, 21, 22, 23, 25, 27, 28, 32, 33, 34, 35, 36, 39, 41, 44, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 159, 160, 161, 162, 164, 165, 166, 169, 171, 173], "known": 1, "mankind": 1, "absolutely": 1, "they": [1, 158, 168], "work": [1, 26], "able": 1, "only": [1, 3, 7, 168], "spac": [1, 47, 112], "basic": [1, 5, 41], "construct": [1, 54, 79, 111, 124, 140, 141, 151, 157, 163, 165, 171, 173], "traversal": 1, "manipul": [1, 8, 12, 18, 19, 27, 30, 31, 32, 39, 40, 44, 107, 130, 140, 148, 150, 153, 162, 164, 167, 168], "familiariz": 1, "yourself": 1, "with": [1, 2, 3, 7, 16, 17, 18, 26, 33, 34, 36, 39, 41, 45, 47, 65, 104, 107, 112, 115, 122, 123, 124, 128, 129, 141, 147, 153, 154, 156, 158, 162, 164, 165, 166, 171], "binary": [1, 166], "ary": 1, "familiar": 1, "typ": [1, 2, 16, 24, 25, 26, 33, 34, 37, 38, 47, 54, 68, 69, 72, 77, 94, 95, 98, 99, 104, 107, 111, 112, 113, 115, 116, 125, 129, 130, 132, 134, 135, 140, 142, 143, 148, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 171, 173], "balanced": 1, "wheth": [1, 45, 158], "red": [1, 36, 47, 73, 74, 97, 115, 158], "black": [1, 94, 158], "splay": 1, "avl": [1, 135], "implemented": 1, "understand": 1, "treetraversal": 1, "bf": 1, "df": [1, 7, 17, 23, 34, 36, 48, 55, 56, 58, 61, 77, 82, 83, 86, 97, 103, 104, 109, 110, 115, 119, 124, 125, 141, 165], "different": [1, 3, 16, 17, 34, 80, 81, 128, 129, 168], "between": [1, 17, 128, 129, 168], "inord": 1, "postord": 1, "preord": 1, "are": [1, 16, 17, 33, 112, 128, 129, 158, 165, 168], "ther": [1, 16, 128, 129], "way": [1, 3, 6, 33, 34, 41, 106, 128, 129], "represent": [1, 7, 107, 122], "memory": [1, 7, 158], "pointer": 1, "adjacency": 1, "each": [1, 16, 33, 34, 35, 53, 55, 61, 80, 81, 83, 90, 101, 107, 108, 109, 119, 122, 128, 129, 131, 137, 147, 158], "pros": 1, "con": [1, 54, 141], "breadth": 1, "first": [1, 7, 33, 109, 128, 129, 158], "depth": [1, 57], "their": [1, 7, 128, 129], "computational": 1, "complexity": [1, 135], "tradeoff": 1, "them": [1, 3, 16, 35, 168], "real": 1, "if": [1, 2, 3, 7, 16, 17, 19, 21, 24, 25, 26, 27, 28, 34, 37, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 118, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 147, 148, 149, 150, 153, 154, 158, 160, 164, 165, 166, 168, 169, 171, 173], "get": [1, 2, 3, 25, 26, 33, 34, 39, 51, 61, 63, 64, 69, 78, 108, 111, 112, 115, 116, 119, 125, 131, 134, 135, 147, 150, 158, 160, 164, 165, 169, 171], "chanc": [1, 65, 86, 107, 141, 168], "try": [1, 19, 21, 24, 25, 33, 34, 35, 36, 39, 40, 50, 68, 72, 77, 79, 86, 94, 122, 125, 139, 141, 142, 150, 154, 159, 164, 165, 169, 173], "study": [1, 17], "up": [1, 17, 34, 39], "fanci": 1, "such": [1, 3, 128, 129, 173], "dijkstr": 1, "other": [1, 7, 45, 147, 158], "many": [1, 16, 17, 33, 55, 112, 128, 129, 164], "especially": 1, "famous": 1, "knapsack": 1, "recogniz": 1, "when": [1, 6, 9, 128, 129, 158], "ask": 1, "disguis": 1, "find": [1, 7, 16, 17, 39, 65, 115, 165, 173], "out": [1, 7, 17, 26, 34, 45, 69, 71, 72, 128, 129, 150, 154, 164], "whatnp": 1, "mean": [1, 33, 34, 35, 36, 47, 53, 55, 56, 61, 79, 80, 81, 82, 83, 84, 85, 86, 90, 101, 107, 108, 109, 113, 119, 122, 131, 137, 147, 150], "mathematic": 1, "interviewer": 1, "discret": [1, 78], "math": [1, 16, 27, 33, 34, 67, 68, 73, 74, 84, 89, 98, 105, 107, 119, 124, 134, 136, 137, 140, 141, 143, 149, 150, 154, 164, 168, 171], "question": [1, 16, 27, 33, 34, 35, 39, 44, 53, 56, 58, 59, 63, 64, 67, 68, 70, 75, 77, 78, 80, 82, 83, 84, 85, 87, 104, 115, 136, 142, 148, 150, 151, 158, 164, 171], "this": [1, 3, 7, 16, 17, 45, 51, 122, 128, 129, 158, 164, 168, 171], "mor": [1, 5, 35, 104], "prevalent": 1, "than": [1, 16, 17, 33, 119, 128, 129], "compan": 1, "becaus": 1, "counting": 1, "probability": 1, "101": [1, 33, 36], "surround": 1, "us": 1, "spend": [1, 128, 129], "befor": [1, 16], "refreshing": 1, "teaching": 1, "essential": 1, "combinatoric": 1, "choos": [1, 128, 129], "ilk": 1, "operating": 1, "process": [1, 3, 7, 173], "thread": [1, 18, 37, 158, 168, 170], "concurrency": 1, "lock": [1, 18, 158, 170], "mutex": 1, "semaphor": [1, 171], "monitor": 1, "knowabout": 1, "deadlock": 1, "livelock": 1, "avoid": [1, 16, 64, 173], "what": [1, 3, 9, 33, 41, 106, 128, 129, 158, 168], "resourc": [1, 55, 158], "need": [1, 17], "context": [1, 153, 154, 164, 171], "switching": 1, "initiated": 1, "by": [1, 3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 111, 112, 113, 122, 128, 129, 141, 153, 158, 168], "underlying": 1, "hardwar": 1, "littl": [1, 5], "scheduling": 1, "world": [1, 34, 39], "rapidly": 1, "moving": 1, "toward": 1, "mult": 1, "cor": [1, 34, 36, 53, 111, 112, 113, 122, 127, 140, 154], "fundamental": 1, "modern": 1, "inform": [1, 2, 6, 16, 24, 25, 26, 27, 34, 39, 40, 44, 48, 51, 65, 82, 83, 94, 104, 107, 112, 115, 116, 140, 143, 150, 153, 154, 156, 158, 160, 162, 164, 166, 168, 169, 173], "design": [1, 150, 171], "distributed": 1, "parallel": [1, 52, 82, 83, 116, 122, 158, 170, 171], "commentaire_accentu": [2, 4, 41], "sourc": [2, 3, 5, 6, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 37, 39, 41, 43, 154, 158, 164, 168], "aid": [2, 24, 28, 33, 39, 47, 52, 57, 58, 63, 79, 101, 112, 140, 141, 144, 145, 146, 153, 158, 164, 165, 166, 168, 171, 173], "contient": [2, 11, 19, 24, 27, 33, 34, 35, 36, 39, 40, 43, 48, 49, 53, 64, 67, 69, 72, 75, 77, 90, 107, 116, 119, 124, 125, 130, 131, 132, 135, 140, 142, 146, 147, 148, 150, 153, 154, 158, 160, 162, 164, 165, 166, 168, 171, 173], "assur": [2, 33, 39, 44, 49, 64, 77, 103, 112, 118, 158, 168, 169, 171], "langag": [2, 3, 5, 12, 24, 25, 27, 31, 33, 34, 35, 36, 38, 40, 42, 43, 44, 57, 58, 67, 68, 78, 80, 81, 95, 98, 100, 107, 111, 112, 116, 118, 130, 131, 132, 140, 141, 142, 147, 148, 151, 152, 153, 154, 156, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173], "con\u00e7u": [2, 41, 44, 166, 168], "anglais": [2, 3, 16, 35, 40, 41, 48, 54, 62, 107, 111, 146, 147, 162, 165, 166, 169, 173], "fait": [2, 3, 10, 12, 16, 18, 20, 21, 24, 25, 27, 28, 33, 34, 35, 39, 40, 41, 43, 44, 47, 49, 50, 52, 54, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 86, 88, 90, 94, 95, 98, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 116, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 140, 141, 142, 145, 148, 150, 153, 158, 160, 161, 164, 165, 166, 168, 169, 171], "alphabet": [2, 27, 41, 57, 65, 70, 134, 164], "ponctuat": [2, 41], "compris": [2, 24, 41, 165, 173], "d\u00e9clench": [2, 3, 33, 39, 41, 69, 72, 77, 81, 134, 143, 149, 150, 153, 156, 158, 164, 165, 171], "erreur": [2, 3, 25, 28, 33, 34, 35, 37, 38, 40, 41, 44, 47, 51, 67, 69, 70, 71, 72, 77, 78, 79, 80, 82, 83, 87, 94, 95, 98, 117, 118, 124, 134, 137, 142, 143, 148, 149, 150, 155, 156, 158, 160, 162, 164, 165], "fil": [2, 3, 7, 29, 37, 39, 41, 44, 45, 71, 77, 124, 150, 153, 154, 158, 160, 164, 165, 166, 168, 170, 173], "faq_cvxopt": [2, 41], "py": [2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 41, 44, 54, 55, 75, 111, 112, 113, 122, 137, 140, 141, 145, 154, 158, 160, 164, 165, 166, 168], "lin": [2, 3, 7, 28, 32, 33, 34, 37, 39, 41, 44, 68, 71, 74, 80, 81, 107, 111, 139, 150, 153, 154, 156, 158, 160, 164, 165, 168, 173], "syntaxerror": [2, 39, 41, 44, 71, 153, 164, 165], "utf": [2, 26, 34, 36, 41, 44, 65, 103, 107, 140, 141, 147, 154, 158, 162, 165, 166], "starting": [2, 41, 165], "\u00e8": [2, 41, 57, 147], "but": [2, 16, 17, 27, 33, 41, 44, 45, 112, 158, 165], "no": [2, 17, 41, 44, 45, 69, 106, 123, 141, 150, 158, 165, 173], "encoding": [2, 34, 36, 39, 41, 44, 78, 107, 140, 141, 147, 154, 163, 165], "declared": [2, 41, 44, 165], "see": [2, 6, 7, 33, 41, 44, 65, 112, 158, 160, 165], "http": [2, 3, 6, 16, 33, 34, 36, 41, 44, 52, 55, 57, 64, 65, 79, 86, 100, 104, 107, 112, 115, 124, 125, 140, 141, 146, 147, 165], "org": [2, 3, 16, 33, 36, 41, 44, 52, 57, 79, 100, 112, 122, 141, 165], "dev": [2, 12, 33, 34, 41, 53, 61, 63, 79, 80, 81, 83, 90, 101, 107, 108, 109, 119, 122, 131, 137, 141, 147, 158, 165, 168], "pep": [2, 33, 41, 44, 79, 165], "0263": [2, 41, 44, 165], "Pour": [2, 3, 9, 16, 19, 24, 25, 26, 27, 28, 33, 34, 35, 37, 39, 41, 44, 47, 48, 49, 51, 53, 54, 55, 59, 61, 63, 64, 65, 67, 68, 69, 72, 75, 78, 79, 80, 81, 82, 83, 85, 86, 88, 90, 95, 97, 100, 101, 106, 107, 111, 113, 115, 116, 119, 120, 121, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 146, 148, 150, 153, 154, 158, 160, 162, 164, 165, 166, 168, 169, 171, 173], "r\u00e9soudr": [2, 11, 33, 41, 55, 58, 64, 75, 124, 129, 150, 165, 171], "interpr\u00e9teur": [2, 3, 18, 39, 40, 41, 44, 58, 94, 97, 112, 143, 150, 153, 154, 164, 165, 168], "peuvent": [2, 25, 34, 37, 39, 40, 41, 44, 47, 64, 69, 82, 83, 94, 107, 124, 126, 134, 148, 150, 153, 158, 160, 162, 164, 165, 166, 168, 171], "appara\u00eetr": [2, 26, 39, 41, 64, 109, 150, 158, 164, 165, 166], "\u00e9crir": [2, 3, 19, 20, 24, 27, 34, 35, 38, 41, 44, 47, 53, 60, 61, 63, 64, 71, 76, 77, 82, 83, 84, 85, 95, 98, 99, 103, 105, 108, 116, 117, 124, 130, 131, 132, 134, 136, 137, 140, 141, 142, 143, 146, 148, 149, 150, 154, 158, 160, 162, 164, 165, 166, 168, 169, 171, 173], "lign": [2, 3, 5, 10, 24, 25, 27, 32, 33, 34, 35, 39, 41, 44, 47, 48, 52, 53, 54, 57, 61, 63, 64, 69, 71, 72, 74, 75, 77, 79, 82, 83, 87, 90, 94, 104, 107, 111, 112, 116, 124, 126, 130, 131, 134, 135, 139, 140, 141, 142, 143, 148, 149, 153, 154, 159, 160, 162, 164, 165, 166, 168, 171, 173], "latin": [2, 41, 141, 147, 162, 165], "Ou": [2, 14, 20, 34, 39, 41, 55, 71, 72, 79, 95, 104, 130, 158, 164, 165, 166], "chinois": [2, 41, 64, 147], "\u00e9diteur": [2, 3, 41, 44, 162, 165, 166], "scit": [2, 3, 41], "window": [2, 14, 36, 39, 44, 158, 162, 165, 166], "conseil": [2, 33, 34, 38, 41, 64, 78, 132, 141, 150, 160, 164, 165, 168, 171, 173], "ferm": [2, 33, 39, 41, 88, 140, 153, 154, 166], "fichi": [2, 3, 26, 36, 38, 41, 55, 93, 104, 107, 118, 124, 125, 150, 153, 154, 158, 160, 161, 163, 164, 165, 167, 171, 173], "puis": [2, 3, 9, 22, 28, 34, 35, 36, 39, 41, 44, 47, 51, 55, 56, 59, 64, 65, 68, 75, 80, 81, 82, 84, 85, 86, 95, 97, 100, 105, 110, 119, 134, 135, 137, 140, 149, 150, 156, 158, 160, 164, 165, 166, 168, 169, 171, 173], "r\u00e9ouvr": [2, 41, 166], "trait": [2, 3, 24, 27, 34, 41, 47, 53, 63, 77, 80, 106, 119, 124, 135, 141, 153, 158, 164, 165, 166, 170, 171, 173], "encodag": [2, 41, 153, 162], "norm": [2, 39, 41, 105, 113, 130, 147, 150], "internet": [2, 3, 25, 34, 39, 41, 43, 44, 47, 63, 64, 107, 115, 140, 141, 146, 154, 158, 165, 166, 168, 169, 171], "pourquoi": [2, 5, 19, 27, 33, 36, 39, 47, 51, 53, 55, 58, 63, 64, 69, 71, 72, 82, 83, 101, 107, 116, 130, 134, 140, 142, 150, 153, 158, 164, 165, 166, 168, 171, 173], "pr\u00e9fer": [2, 3, 25, 27, 39, 41, 44, 68, 75, 77, 116, 146, 150, 153, 154, 156, 158, 160, 164, 165, 166, 168, 169], "partag": [2, 33, 34, 37, 40, 41, 44, 51, 57, 150, 158], "pag": [2, 3, 33, 34, 35, 36, 39, 41, 44, 64, 103, 107, 111, 115, 122, 134, 135, 140, 144, 145, 146, 164, 165, 168, 170, 171, 173], "dictionnaire_modifie_dans_la_boucl": [2, 4, 160], "boucl": [2, 12, 18, 19, 24, 27, 28, 34, 35, 37, 38, 53, 54, 57, 58, 61, 64, 67, 68, 69, 70, 71, 72, 75, 77, 80, 81, 93, 100, 105, 117, 131, 142, 150, 153, 154, 156, 158, 160, 163, 171], "parcourt": [2, 25, 28, 39, 53, 57, 58, 64, 69, 70, 131, 158, 160, 164, 166], "\u00e9vit": [2, 24, 28, 35, 36, 37, 39, 53, 54, 59, 61, 63, 64, 67, 69, 75, 77, 79, 82, 84, 85, 97, 102, 127, 130, 134, 137, 141, 145, 150, 158, 160, 161, 162, 164, 165, 166, 168, 169, 171, 173], "contain": [2, 16, 87, 130, 135, 158, 160], "supprim": [2, 3, 34, 36, 39, 41, 54, 64, 69, 124, 140, 148, 150, 154, 156, 158, 160, 164, 165, 166, 168, 171], "ancien": [2, 132, 141, 150, 158, 160], "d\u00e9but": [2, 3, 34, 35, 36, 37, 39, 41, 52, 54, 64, 77, 99, 107, 113, 114, 150, 158, 159, 160, 164, 165, 168, 171, 173], "rang": [2, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 33, 34, 36, 37, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 99, 100, 101, 102, 105, 108, 109, 110, 111, 112, 113, 116, 117, 119, 123, 124, 125, 127, 130, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 153, 154, 158, 159, 160, 164, 166, 168, 171], "v": [2, 20, 33, 34, 40, 48, 57, 61, 63, 64, 68, 70, 78, 81, 82, 88, 95, 96, 109, 114, 116, 119, 124, 125, 126, 127, 132, 133, 134, 135, 141, 147, 148, 149, 150, 153, 158, 160, 164, 173], "item": [2, 39, 57, 61, 63, 64, 68, 69, 70, 75, 78, 90, 103, 104, 107, 108, 112, 113, 115, 116, 119, 134, 147, 150, 159, 160, 165], "del": [2, 25, 39, 55, 58, 69, 72, 84, 112, 118, 140, 148, 150, 160, 164, 165, 166], "pr\u00e9viennent": [2, 160], "intervient": [2, 27, 47, 153, 160, 164, 169], "tard": [2, 34, 37, 39, 47, 146, 153, 156, 158, 160, 164, 165, 171], "valeur": [2, 6, 19, 20, 27, 33, 34, 37, 39, 44, 47, 53, 55, 56, 57, 61, 68, 69, 70, 71, 75, 77, 78, 79, 80, 81, 85, 86, 100, 110, 111, 113, 116, 119, 120, 121, 124, 132, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 158, 159, 160, 161, 162, 165, 166, 168], "numer": [2, 3, 19, 27, 31, 33, 34, 40, 41, 44, 70, 77, 78, 82, 83, 100, 113, 118, 124, 130, 137, 140, 146, 148, 150, 160, 164, 165, 166, 169, 170, 173], "inattendu": [2, 140, 154, 160, 164], "traceback": [2, 3, 37, 39, 41, 68, 69, 71, 72, 77, 150, 153, 154, 158, 160, 164, 165, 173], "call": [2, 3, 7, 37, 39, 41, 68, 69, 71, 72, 77, 111, 112, 113, 122, 150, 153, 155, 158, 160, 164, 165, 173], "session1": [2, 160], "176": [2, 77, 97, 160], "liste_modifie_dans_la_boucl": [2, 160], "169": [2, 55, 154, 160], "runtimeerror": [2, 64, 87, 160, 165], "changed": [2, 64, 160, 165], "siz": [2, 7, 26, 28, 33, 47, 48, 52, 56, 64, 82, 83, 109, 144, 145, 158, 160, 165, 166], "during": [2, 64, 160, 165], "stock": [2, 25, 35, 36, 40, 44, 47, 88, 99, 104, 111, 116, 134, 135, 142, 152, 160, 165, 166, 169, 173], "ensuit": [2, 16, 24, 33, 34, 36, 44, 58, 59, 64, 102, 103, 104, 111, 114, 130, 134, 137, 146, 150, 152, 153, 158, 160, 164, 165, 169, 171, 173], "rem": [2, 113, 160], "append": [2, 16, 17, 18, 19, 21, 26, 33, 36, 39, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75, 77, 78, 82, 83, 84, 85, 86, 90, 95, 96, 97, 99, 100, 104, 105, 109, 110, 112, 113, 115, 116, 118, 119, 123, 125, 127, 131, 132, 133, 135, 139, 140, 144, 145, 148, 150, 158, 159, 160, 164, 165, 166, 168, 171, 173], "r": [2, 3, 16, 19, 25, 26, 28, 33, 34, 36, 39, 41, 47, 51, 53, 54, 55, 56, 57, 58, 60, 63, 65, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 94, 102, 104, 105, 107, 112, 113, 120, 121, 124, 125, 127, 128, 129, 135, 140, 141, 143, 144, 145, 147, 148, 150, 154, 158, 160, 162, 164, 166, 168, 169, 171, 173], "autoris": [2, 63, 81, 95, 141, 150, 158, 160, 161, 164, 166, 168, 171], "absten": [2, 160], "ains": [2, 34, 39, 47, 67, 71, 75, 83, 103, 123, 143, 149, 150, 153, 154, 158, 160, 164, 165, 166, 171], "habitud": [2, 44, 141, 160, 164], "serv": [2, 25, 33, 34, 36, 39, 40, 55, 77, 78, 80, 81, 109, 134, 141, 150, 158, 160, 164, 165, 166, 173], "dix_entiers_carr": [2, 4, 41, 160], "renvoi": [2, 3, 5, 6, 7, 33, 34, 47, 70, 150, 158], "r\u00e9el": [2, 3, 27, 35, 37, 39, 41, 47, 77, 104, 116, 130, 148, 149, 150, 161, 163, 164, 166, 169], "standard": [2, 3, 12, 24, 25, 33, 34, 39, 41, 107, 130, 135, 140, 150, 153, 159, 162, 164, 166, 168, 171], "moment": [2, 20, 33, 41, 44, 52, 77, 94, 101, 107, 137, 141, 142, 148, 150, 158, 162, 164, 165, 166, 171], "impact": [2, 7, 39, 40, 41, 44, 164, 165], "d\u00e9roul": [2, 34, 41, 63, 158, 164, 166], "mot": [2, 20, 34, 41, 63, 65, 68, 71, 72, 75, 91, 103, 132, 135, 140, 141, 142, 146, 150, 153, 158, 160, 164, 165, 166, 168, 171, 173], "cl\u00e9": [2, 19, 20, 24, 34, 36, 40, 41, 61, 64, 65, 68, 69, 70, 78, 98, 116, 118, 120, 121, 132, 135, 140, 142, 146, 150, 153, 160, 164, 166, 168, 171, 173], "rencontr": [2, 39, 41, 134, 150, 153, 164, 166, 168], "commenc": [2, 3, 16, 19, 33, 39, 40, 41, 44, 49, 51, 52, 63, 64, 67, 70, 77, 78, 86, 87, 102, 116, 127, 134, 137, 140, 141, 146, 148, 149, 158, 164, 165, 166, 171, 173], "quitt": [2, 41, 141, 146, 149, 164], "transmet": [2, 41], "modif": [2, 27, 28, 33, 34, 37, 39, 41, 44, 48, 50, 55, 59, 64, 69, 75, 82, 83, 106, 109, 132, 134, 135, 150, 158, 161, 164, 165, 166, 168, 171], "votr": [2, 3, 19, 41, 44, 72, 77, 79, 83, 99, 118, 130, 141, 146, 166, 168, 169], "algorithm": [2, 6, 10, 12, 13, 16, 19, 24, 28, 39, 41, 42, 43, 51, 53, 54, 59, 62, 63, 65, 68, 69, 75, 77, 79, 80, 81, 84, 85, 87, 89, 95, 103, 105, 112, 114, 118, 119, 122, 123, 125, 132, 137, 148, 149, 150, 153, 160, 163, 173], "sp\u00e9cif": [2, 27, 33, 34, 39, 41, 86, 130, 150, 158, 159, 162, 166, 168, 169, 170], "diff\u00e8rent": [2, 160], "mani": [2, 3, 16, 27, 33, 34, 39, 40, 41, 47, 95, 108, 124, 143, 150, 153, 154, 158, 160, 162, 164, 165, 166, 169, 171], "i": [2, 5, 16, 17, 18, 19, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 39, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 164, 165, 166, 168, 171], "11": [2, 3, 7, 12, 14, 16, 22, 27, 28, 33, 34, 36, 39, 41, 44, 47, 48, 49, 51, 53, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 95, 97, 101, 104, 105, 109, 110, 111, 112, 116, 117, 119, 123, 125, 135, 137, 140, 141, 143, 147, 148, 150, 153, 154, 160, 161, 164, 165], "D": [2, 7, 27, 34, 47, 49, 54, 55, 56, 63, 70, 76, 93, 94, 96, 99, 103, 120, 121, 127, 135, 141, 159, 160, 165, 166, 168, 169, 173], "abreg": [2, 9, 39, 143, 160, 165], "sum": [2, 5, 17, 23, 32, 33, 34, 35, 36, 37, 39, 48, 52, 53, 54, 55, 56, 59, 64, 67, 68, 69, 71, 78, 79, 80, 81, 86, 90, 100, 105, 112, 117, 122, 123, 131, 132, 133, 134, 143, 147, 160, 164, 165, 173], "repetition_a_evit": [2, 4, 160], "a_evit": 2, "fals": [2, 3, 6, 7, 16, 23, 24, 33, 34, 35, 36, 39, 41, 48, 51, 52, 54, 55, 59, 61, 65, 67, 86, 87, 97, 102, 104, 105, 112, 115, 118, 130, 131, 135, 150, 153, 158, 164, 165, 171], "r\u00e9p\u00e9tit": [2, 53, 63, 65, 142, 148, 164, 165, 166, 168, 171], "varianc": [2, 27, 54, 69, 78, 79, 82, 83, 137, 160], "observ": [2, 28, 34, 55, 56, 78, 79, 80, 81, 100, 117, 119, 122, 126, 127, 145, 148, 158, 160, 171], "moyen": [2, 3, 18, 25, 27, 33, 36, 39, 41, 47, 53, 55, 56, 69, 77, 78, 79, 116, 123, 126, 132, 133, 136, 137, 142, 145, 149, 150, 158, 160, 164, 166, 168, 173], "len": [2, 16, 17, 19, 24, 26, 27, 28, 33, 34, 39, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 87, 95, 97, 99, 100, 101, 103, 104, 105, 106, 109, 111, 112, 113, 114, 115, 116, 118, 119, 123, 125, 131, 132, 133, 134, 135, 139, 140, 148, 149, 150, 156, 158, 160, 162, 164, 165, 166, 168, 173], "variance_a_evit": [2, 160], "ob": [2, 48, 56, 58, 61, 78, 97, 104, 118, 160], "passag": [2, 27, 33, 39, 69, 99, 100, 124, 148, 160, 162, 164, 165, 166], "rien": [2, 3, 11, 18, 28, 34, 39, 41, 67, 77, 82, 83, 90, 94, 98, 105, 115, 130, 140, 141, 148, 150, 152, 158, 160, 164, 166, 168, 171], "chang": [2, 3, 6, 20, 28, 33, 34, 35, 36, 39, 41, 43, 44, 47, 48, 52, 54, 56, 58, 59, 64, 78, 82, 83, 86, 90, 94, 100, 115, 124, 131, 132, 135, 141, 145, 149, 150, 156, 158, 159, 160, 162, 164, 165, 166, 171], "vaut": [2, 24, 37, 39, 55, 61, 69, 70, 71, 78, 79, 104, 107, 130, 134, 148, 149, 150, 158, 160, 164, 165, 168, 169, 171], "variabl": [2, 3, 20, 24, 27, 33, 34, 35, 38, 41, 44, 47, 54, 67, 69, 70, 72, 77, 78, 82, 83, 93, 94, 98, 99, 100, 104, 105, 111, 116, 117, 126, 130, 131, 135, 137, 140, 142, 143, 150, 152, 153, 154, 158, 160, 162, 166, 168, 169, 171, 174], "moy": [2, 78, 137, 164], "co\u00fbt": [2, 5, 19, 24, 28, 34, 41, 51, 53, 57, 58, 60, 61, 64, 67, 68, 69, 75, 82, 83, 93, 100, 114, 116, 119, 123, 124, 125, 135, 148, 149, 150], "alor": [2, 3, 19, 27, 33, 34, 39, 41, 44, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 67, 77, 78, 79, 109, 112, 116, 119, 124, 127, 128, 129, 135, 137, 139, 141, 150, 153, 154, 158, 160, 164, 165, 166, 168, 171], "endroit": [2, 39, 44, 64, 80, 104, 150, 154, 156, 158, 162, 164, 165, 166, 168, 171], "survient": [2, 77, 150, 153, 154, 158, 164, 165, 171], "suiv": [2, 3, 6, 12, 16, 19, 20, 27, 33, 34, 35, 36, 37, 39, 41, 44, 49, 53, 55, 57, 61, 63, 64, 65, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 91, 93, 95, 100, 105, 106, 107, 111, 112, 114, 116, 118, 119, 125, 126, 127, 128, 129, 132, 134, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 173], "major": [2, 35, 116, 137, 152], "argument": [2, 3, 20, 23, 33, 34, 39, 68, 80, 81, 118, 128, 129, 132, 133, 146, 150, 153, 158, 164, 165, 166, 168, 171], "retourn": [2, 3, 5, 6, 19, 22, 27, 28, 32, 33, 34, 37, 39, 40, 41, 49, 51, 53, 58, 59, 61, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 94, 95, 103, 109, 114, 116, 118, 127, 129, 132, 134, 135, 145, 146, 148, 150, 153, 154, 158, 159, 160, 161, 162, 164, 165, 166, 171, 173], "quelqu": [2, 3, 5, 16, 22, 27, 28, 32, 33, 34, 35, 38, 39, 41, 44, 47, 51, 54, 55, 57, 58, 59, 61, 63, 64, 67, 68, 69, 70, 72, 75, 78, 80, 84, 85, 88, 91, 95, 101, 102, 106, 107, 112, 118, 134, 139, 140, 141, 142, 148, 150, 153, 158, 160, 161, 164, 165, 166, 168, 171], "chos": [2, 25, 27, 28, 34, 39, 44, 57, 58, 59, 63, 64, 67, 68, 70, 78, 87, 95, 98, 107, 112, 113, 116, 132, 137, 139, 141, 142, 150, 152, 153, 158, 161, 164, 165, 166, 167, 168, 171], "tru": [2, 3, 7, 16, 17, 24, 26, 33, 34, 35, 36, 39, 41, 47, 48, 51, 52, 54, 55, 58, 59, 61, 63, 64, 65, 67, 77, 84, 85, 86, 87, 94, 95, 97, 100, 102, 105, 109, 112, 115, 118, 127, 130, 131, 134, 135, 139, 140, 141, 147, 148, 150, 153, 156, 158, 165, 166, 171], "leaf": [2, 54], "guess": 2, "str2dat": [2, 4, 160], "fmt": [2, 7, 171], "Y": [2, 24, 33, 63, 77, 78, 79, 80, 81, 82, 83, 101, 111, 140, 141, 158, 160, 161, 165], "convert": [2, 3, 5, 7, 25, 34, 35, 36, 39, 71, 77, 78, 86, 94, 107, 112, 124, 134, 140, 141, 143, 150, 153, 160, 161, 162, 164, 165, 166, 168, 169], "format": [2, 12, 17, 25, 33, 34, 36, 39, 47, 49, 53, 55, 60, 61, 63, 77, 78, 109, 115, 123, 130, 141, 148, 150, 153, 156, 158, 160, 162, 163, 167, 168, 169, 171, 173], "genr": [2, 141, 150, 160, 164, 173], "souvent": [2, 3, 27, 33, 34, 36, 37, 39, 41, 43, 44, 47, 51, 54, 58, 69, 72, 77, 79, 82, 83, 97, 98, 101, 111, 112, 114, 118, 130, 134, 140, 142, 148, 150, 153, 154, 156, 158, 159, 160, 164, 165, 166, 168, 169, 171, 173], "pein": [2, 67, 141, 149, 160], "retrouv": [2, 10, 32, 34, 36, 55, 56, 58, 65, 78, 80, 111, 116, 127, 134, 135, 140, 148, 150, 158, 160, 164, 165, 166, 171, 173], "besoin": [2, 3, 25, 27, 33, 34, 39, 41, 44, 58, 61, 64, 75, 77, 87, 95, 109, 116, 130, 134, 141, 142, 150, 154, 156, 160, 162, 165, 166, 168, 169, 171], "strftim": [2, 3, 41, 160, 161], "dt": [2, 3, 41, 55, 56, 61, 86, 123, 160], "strptim": [2, 34, 160], "16": [2, 3, 16, 27, 28, 33, 34, 35, 36, 39, 41, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 66, 68, 69, 70, 72, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 95, 97, 100, 101, 103, 104, 110, 111, 112, 116, 123, 130, 131, 137, 139, 140, 141, 143, 145, 148, 149, 150, 160, 161, 162, 164, 165], "01": [2, 7, 19, 27, 33, 34, 36, 47, 48, 64, 78, 79, 82, 83, 105, 160], "2014": [2, 34, 66, 128, 129, 160], "compt": [2, 3, 4, 19, 23, 27, 34, 41, 51, 52, 53, 55, 64, 65, 68, 69, 77, 78, 80, 81, 82, 83, 86, 87, 88, 96, 105, 108, 111, 116, 118, 130, 134, 141, 142, 146, 150, 156, 159, 160, 164, 165, 166, 168, 171, 173], "li": [2, 16, 19, 27, 39, 53, 55, 69, 99, 114, 116, 141, 148, 150, 152, 158, 160, 164, 165, 166, 168, 169, 173], "occurrent": [2, 19, 39, 65, 146, 160, 165], "tableau": [2, 19, 22, 24, 27, 40, 48, 52, 54, 58, 67, 71, 75, 80, 83, 93, 95, 99, 102, 105, 107, 109, 111, 115, 119, 124, 125, 126, 127, 130, 131, 135, 139, 148, 149, 153, 160, 165, 166, 171, 173], "Par": [2, 3, 19, 27, 28, 33, 34, 36, 39, 41, 44, 53, 54, 65, 67, 68, 69, 77, 79, 87, 119, 124, 140, 148, 149, 150, 153, 158, 160, 162, 164, 165, 166, 171, 173], "pourr": [2, 28, 33, 34, 36, 40, 52, 53, 56, 57, 58, 59, 63, 64, 69, 77, 80, 81, 87, 94, 97, 103, 106, 107, 118, 124, 135, 136, 140, 141, 146, 150, 153, 154, 156, 158, 160, 164, 165, 166, 171], "popular": [2, 160, 168], "discour": [2, 140, 141, 160], "polit": [2, 160], "\u00e9tendu": [2, 158, 160, 164], "vocabulair": [2, 130, 160], "not": [2, 3, 7, 8, 12, 13, 16, 19, 25, 26, 27, 33, 34, 38, 39, 45, 47, 48, 51, 54, 55, 57, 59, 61, 64, 68, 69, 70, 72, 87, 90, 92, 96, 97, 103, 112, 117, 124, 126, 128, 129, 131, 136, 137, 140, 141, 147, 149, 150, 153, 154, 158, 160, 164, 165, 166, 169, 171, 173], "else": [2, 3, 16, 17, 19, 25, 39, 40, 41, 44, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 67, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 94, 95, 96, 97, 101, 103, 105, 108, 109, 112, 114, 116, 118, 123, 125, 127, 130, 131, 132, 133, 134, 137, 139, 142, 147, 148, 149, 150, 153, 154, 158, 160, 165, 166, 168, 169], "appropri": [2, 39, 150, 160], "puisqu": [2, 22, 33, 36, 55, 58, 61, 63, 64, 67, 69, 70, 75, 82, 100, 105, 111, 112, 119, 134, 137, 149, 150, 153, 158, 160, 164, 165, 171], "faudr": [2, 3, 27, 34, 35, 39, 41, 48, 55, 56, 58, 63, 70, 77, 82, 83, 84, 85, 86, 87, 90, 95, 106, 107, 124, 134, 146, 150, 158, 160, 164, 165, 168, 171, 173], "ceux": [2, 3, 16, 33, 35, 39, 41, 43, 44, 51, 55, 64, 72, 87, 111, 124, 130, 141, 142, 150, 153, 158, 160, 164, 165, 166, 168, 169, 171, 173], "immuabl": [2, 99, 134, 148, 159, 160, 163, 164, 166], "illustr": [2, 33, 34, 114, 134, 150, 158, 160, 165, 166, 168, 173], "mat": [2, 5, 22, 25, 32, 35, 39, 48, 51, 52, 54, 61, 68, 72, 73, 74, 75, 76, 82, 83, 116, 123, 131, 140, 141, 150, 160, 166, 169], "str": [2, 3, 6, 7, 16, 21, 39, 41, 62, 69, 71, 77, 94, 95, 96, 103, 107, 131, 139, 140, 141, 143, 150, 153, 158, 160, 162, 164, 166, 168, 169, 171, 173], "tupl": [2, 3, 6, 7, 16, 19, 33, 34, 39, 41, 63, 64, 69, 87, 90, 93, 112, 116, 118, 134, 148, 150, 159, 160, 164, 166], "Les": [2, 3, 5, 8, 10, 11, 12, 16, 18, 20, 22, 23, 24, 27, 33, 34, 35, 36, 37, 38, 40, 41, 44, 47, 48, 54, 55, 57, 61, 62, 63, 65, 71, 77, 79, 84, 85, 86, 87, 90, 91, 93, 95, 98, 103, 106, 107, 111, 112, 115, 116, 118, 119, 125, 126, 130, 134, 135, 137, 138, 140, 141, 142, 143, 147, 148, 150, 152, 156, 157, 160, 162, 163, 165, 166, 168, 169, 171], "why": [2, 160], "key": [2, 4, 7, 34, 39, 63, 64, 87, 90, 103, 116, 125, 127, 158, 160, 164, 165], "\u00e9gal": [2, 3, 5, 19, 27, 28, 32, 33, 34, 35, 36, 39, 40, 41, 48, 51, 53, 54, 55, 56, 63, 64, 71, 77, 78, 79, 80, 81, 87, 88, 90, 95, 98, 105, 107, 109, 111, 112, 114, 115, 116, 120, 121, 126, 130, 135, 137, 141, 148, 150, 156, 158, 159, 160, 164, 165, 166, 168, 171, 173], "vouloir": [2, 68, 141, 158, 160], "m\u00e9moris": [2, 27, 39, 49, 69, 70, 127, 130, 150, 154, 156, 158, 160, 171, 173], "ident": [2, 11, 22, 36, 39, 44, 49, 57, 58, 59, 64, 77, 82, 87, 94, 95, 97, 103, 111, 116, 134, 138, 139, 150, 153, 158, 160, 162, 164, 165, 166, 168, 173], "doit": [2, 3, 6, 27, 34, 36, 37, 39, 40, 41, 44, 47, 51, 55, 64, 68, 77, 78, 81, 82, 83, 84, 85, 87, 94, 107, 116, 118, 120, 121, 124, 127, 130, 132, 135, 142, 148, 150, 153, 158, 160, 162, 164, 165, 166, 168, 169, 173], "enumerat": [2, 48, 53, 54, 55, 58, 64, 65, 68, 71, 75, 77, 78, 82, 84, 85, 94, 95, 104, 106, 107, 109, 115, 116, 125, 134, 135, 141, 148, 149, 154, 156, 159, 160, 164, 166], "S": [2, 19, 34, 39, 40, 47, 55, 56, 63, 64, 75, 77, 82, 88, 114, 120, 121, 124, 135, 139, 148, 150, 153, 158, 160, 161, 164, 165, 168, 173], "suff": [2, 3, 9, 24, 27, 39, 41, 44, 49, 53, 55, 58, 60, 64, 67, 69, 70, 75, 77, 78, 79, 80, 82, 83, 87, 88, 100, 125, 130, 131, 135, 137, 142, 148, 150, 158, 160, 162, 164, 165, 168, 171, 173], "just": [2, 3, 16, 25, 28, 33, 41, 53, 61, 80, 82, 95, 105, 112, 132, 152, 153, 160, 164, 165], "\u00e9critur": [2, 3, 5, 19, 22, 25, 26, 31, 32, 33, 39, 41, 60, 88, 95, 98, 107, 116, 132, 140, 143, 148, 150, 152, 153, 160, 164, 165, 166, 168, 169, 173], "construit_matrice_carre": [2, 4], "construit": [2, 6, 27, 34, 39, 48, 50, 53, 57, 64, 68, 73, 74, 75, 78, 83, 94, 105, 126, 127, 141, 150, 158, 164, 165, 166, 171], "rempl": [2, 47, 72, 76, 124, 125, 134, 148, 166, 168, 173], "z\u00e9ro": [2, 27, 33, 34, 39, 47, 53, 149, 153, 158, 165], "dimens": [2, 19, 24, 27, 34, 35, 36, 39, 54, 79, 82, 88, 91, 112, 114, 117, 130, 145, 150, 158, 165, 166], "enumerate_permut": [2, 4], "enumer": 2, "enumerate_permutations_recurs": [2, 4], "integral": [2, 4, 137, 160], "int\u00e9gral": [2, 3, 39, 41, 77, 93, 168, 171, 173], "rienmann": [2, 137], "born": [2, 64, 137], "recevoir": [2, 77, 140, 150, 153, 158, 160, 164], "inclut": [2, 27, 39, 40, 53, 80, 81, 127, 130, 150, 153, 160, 164, 165, 166, 168, 171], "calcul_n_valeur": [2, 150, 160], "prend": [2, 3, 27, 34, 41, 47, 49, 51, 55, 62, 64, 68, 71, 74, 77, 82, 83, 84, 85, 95, 98, 100, 103, 108, 111, 116, 117, 118, 125, 145, 146, 150, 158, 160, 164, 165, 166], "fonction_carr": [2, 160], "fonction_cub": [2, 160], "ex\u00e9cut": [2, 3, 20, 26, 27, 37, 39, 40, 41, 44, 64, 68, 69, 80, 81, 94, 97, 111, 112, 118, 141, 142, 148, 150, 153, 154, 156, 158, 160, 164, 165, 166, 168, 171], "re": [2, 16, 18, 21, 25, 26, 36, 48, 55, 57, 58, 61, 62, 63, 67, 68, 74, 75, 77, 78, 79, 82, 83, 86, 87, 89, 90, 104, 106, 109, 110, 112, 113, 119, 122, 127, 131, 135, 139, 140, 141, 147, 150, 160, 165, 166, 168, 169, 171, 173], "l1": [2, 3, 27, 41, 148, 150, 160, 164, 165], "9": [2, 16, 17, 19, 26, 27, 28, 33, 34, 35, 36, 39, 41, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 125, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 143, 147, 148, 149, 150, 153, 154, 159, 160, 161, 164, 165, 171, 173], "l2": [2, 3, 27, 39, 41, 75, 148, 150, 160, 164, 165], "mat2text": [2, 4, 160], "sep_row": 2, "sep_col": 2, "fn": [2, 6, 7, 39, 65, 112, 160], "text2mat": [2, 4, 160], "s\u00e9par": [2, 38, 53, 63, 80, 81, 116, 126, 140, 143, 144, 145, 146, 147, 158, 160, 164, 165, 166, 173], "colon": [2, 5, 32, 34, 35, 39, 61, 79, 83, 104, 116, 124, 130, 139, 140, 150, 158, 160, 166, 173], "case11": [2, 160], "case12": [2, 160], "case13": [2, 160], "case21": [2, 160], "case22": [2, 160], "case23": [2, 160], "join": [2, 16, 21, 33, 36, 39, 52, 57, 63, 65, 71, 72, 94, 95, 96, 106, 109, 111, 113, 122, 131, 135, 140, 141, 154, 160, 164, 165, 166, 168, 173], "mat2vect": [2, 4, 160], "vect2mat": [2, 4, 160], "car": [2, 3, 18, 19, 20, 25, 27, 28, 33, 34, 35, 39, 40, 41, 44, 47, 49, 51, 53, 54, 56, 57, 58, 61, 63, 64, 68, 69, 71, 74, 75, 77, 78, 80, 81, 82, 83, 85, 87, 90, 94, 95, 100, 101, 105, 107, 112, 116, 119, 123, 125, 134, 137, 140, 142, 143, 145, 148, 150, 152, 153, 154, 156, 158, 160, 162, 164, 165, 166, 168, 169, 171], "donc": [2, 18, 19, 24, 27, 28, 33, 34, 35, 36, 39, 40, 47, 48, 54, 55, 56, 57, 58, 64, 65, 69, 75, 77, 79, 80, 86, 87, 88, 95, 96, 102, 105, 115, 123, 124, 125, 126, 127, 137, 141, 147, 149, 150, 153, 159, 160, 164, 165, 166, 168, 169, 171, 173], "indic": [2, 6, 19, 24, 28, 33, 34, 36, 37, 39, 40, 53, 58, 61, 64, 67, 71, 72, 75, 84, 85, 115, 116, 145, 148, 150, 153, 154, 158, 159, 160, 164, 165, 173], "bien": [2, 3, 9, 18, 24, 27, 33, 36, 41, 44, 47, 49, 50, 51, 52, 54, 58, 59, 63, 64, 67, 77, 80, 81, 82, 84, 85, 86, 96, 98, 100, 102, 104, 105, 111, 115, 116, 118, 124, 130, 141, 142, 143, 145, 147, 150, 153, 154, 156, 158, 160, 164, 165, 166], "s\u00fbr": [2, 27, 28, 51, 55, 58, 61, 64, 72, 77, 125, 130, 149, 160, 165, 166], "const": [2, 3, 18, 20, 33, 35, 41, 55, 78, 123, 130, 137, 150, 160, 161, 171], "Vous": [2, 33, 34, 35, 58, 63, 111, 124, 135, 140, 141, 160], "pouv": [2, 33, 35, 63, 77, 80, 81, 87, 111, 124, 135, 141, 146, 160], "reduc": [2, 16, 100, 112, 113, 122, 160], "from": [2, 3, 7, 16, 18, 21, 25, 26, 33, 34, 35, 36, 39, 40, 45, 48, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 68, 73, 74, 77, 79, 82, 84, 85, 86, 87, 89, 90, 97, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 122, 123, 124, 125, 127, 128, 129, 134, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 150, 154, 159, 160, 164, 166, 168, 169, 173], "functool": [2, 100, 160], "lambd": [2, 7, 15, 27, 29, 33, 53, 72, 78, 87, 108, 110, 111, 120, 121, 127, 132, 133, 136, 137, 160, 168], "minindex": [2, 4, 160], "min": [2, 17, 28, 33, 34, 39, 48, 50, 51, 53, 54, 58, 59, 61, 67, 73, 77, 78, 79, 82, 83, 87, 90, 94, 118, 124, 125, 127, 131, 160, 164, 165], "minium": [2, 160], "r\u00e9flex": [2, 15, 29, 91, 140, 146, 156, 160, 165], "recod": [2, 160], "conserv": [2, 3, 20, 25, 33, 34, 40, 41, 49, 61, 63, 75, 80, 116, 123, 127, 148, 149, 150, 159, 160, 164, 165, 166, 169], "434": [2, 113, 160], "43": [2, 22, 33, 34, 36, 64, 77, 81, 82, 106, 112, 115, 134, 147, 150, 160, 164], "6436": [2, 160], "Mais": [2, 27, 28, 34, 35, 39, 51, 53, 56, 57, 61, 63, 64, 65, 68, 69, 71, 90, 94, 95, 98, 114, 116, 119, 124, 134, 145, 146, 150, 154, 160, 165, 171, 173], "astuc": [2, 3, 15, 29, 35, 38, 41, 52, 53, 141, 160, 168, 171], "obten": [2, 26, 27, 33, 34, 39, 53, 58, 61, 101, 105, 109, 124, 125, 131, 134, 137, 140, 146, 150, 158, 160, 162, 164, 165, 166, 173], "reprogramm": [2, 158, 160], "chois": [2, 6, 27, 28, 33, 34, 35, 37, 39, 44, 47, 54, 55, 58, 63, 64, 76, 78, 82, 83, 84, 85, 87, 88, 97, 99, 102, 105, 117, 120, 121, 124, 125, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 150, 154, 158, 160, 164, 165, 166, 169, 173], "coupl": [2, 24, 33, 39, 40, 47, 48, 61, 75, 82, 83, 105, 111, 116, 134, 135, 148, 150, 153, 158, 160, 164, 165, 171, 173], "d\u00e9parteg": [2, 160], "exaequo": [2, 160], "45": [2, 33, 34, 36, 54, 64, 79, 90, 106, 112, 115, 143, 147, 160, 164, 165], "56": [2, 33, 36, 64, 78, 79, 82, 83, 132, 147, 150, 160, 171, 173], "permet": [2, 3, 11, 19, 24, 26, 27, 28, 31, 33, 34, 35, 36, 39, 41, 44, 47, 49, 50, 51, 57, 59, 65, 69, 77, 78, 79, 80, 81, 84, 85, 94, 95, 98, 100, 104, 107, 111, 112, 116, 117, 124, 130, 131, 132, 134, 135, 136, 140, 141, 142, 148, 150, 152, 153, 154, 156, 158, 160, 161, 162, 164, 165, 166, 168, 169, 171, 173], "\u00e7a": [2, 21, 35, 57, 59, 61, 62, 98, 112, 130, 134, 135, 152, 160, 162, 172], "pris": [2, 23, 24, 53, 137, 141, 142, 146, 156, 158, 160, 166], "aucun": [2, 24, 25, 35, 39, 40, 44, 47, 48, 51, 52, 54, 61, 63, 69, 77, 86, 124, 125, 140, 141, 150, 153, 154, 158, 160, 164, 165, 166, 168], "bout": [2, 39, 43, 44, 53, 57, 75, 77, 116, 137, 139, 140, 153, 159, 160, 165], "pr\u00e9senc": [2, 34, 44, 146, 150, 160, 165, 168, 173], "second": [2, 3, 5, 6, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 35, 39, 41, 44, 47, 49, 50, 51, 52, 53, 54, 57, 58, 61, 63, 64, 69, 75, 77, 78, 82, 83, 85, 87, 95, 97, 98, 100, 102, 111, 113, 114, 122, 123, 125, 131, 132, 134, 137, 139, 140, 141, 142, 143, 148, 150, 153, 154, 160, 161, 164, 165, 166, 168, 169, 171, 173], "probabl": [2, 33, 47, 48, 58, 65, 83, 86, 87, 100, 105, 112, 132, 150, 160], "faibl": [2, 47, 48, 58, 64, 119, 160], "recherche_dichotom": [2, 4, 104, 114, 160], "id\u00e9": [2, 19, 47, 48, 49, 51, 52, 53, 58, 60, 64, 75, 77, 84, 85, 89, 90, 100, 101, 107, 112, 118, 119, 123, 124, 146, 158, 160, 166], "\u00e9limin": [2, 11, 16, 63, 148, 160, 173], "moiti": [2, 28, 47, 51, 88, 114, 148, 149, 160], "whil": [2, 16, 17, 19, 26, 28, 47, 48, 49, 52, 54, 58, 59, 60, 61, 63, 64, 67, 68, 69, 70, 74, 75, 77, 82, 83, 84, 95, 97, 100, 101, 102, 103, 104, 105, 107, 109, 110, 112, 114, 118, 125, 127, 131, 137, 139, 148, 149, 150, 160, 165, 171, 173], "elif": [2, 3, 19, 39, 40, 41, 53, 54, 57, 70, 75, 78, 80, 81, 84, 85, 87, 94, 95, 97, 109, 114, 139, 148, 149, 150, 158, 160, 164], "interven": [2, 64, 87, 100, 150, 158, 160, 166, 171], "addit": [2, 27, 39, 63, 64, 69, 77, 105, 130, 142, 148, 150, 160, 164, 165], "schem": [2, 39, 68, 135, 150, 153, 158, 160, 164, 166, 169, 171], "initialis": [2, 6, 33, 35, 44, 47, 59, 94, 124, 127, 130, 150, 160, 164, 165], "6456": [2, 160], "6933": [2, 160], "integr": [2, 3, 12, 41, 118, 136, 137, 153, 160, 164, 165, 170, 171], "sen": [2, 6, 27, 28, 33, 35, 39, 53, 57, 58, 68, 71, 99, 102, 107, 141, 153, 158, 160, 161, 164, 166], "Et": [2, 3, 19, 20, 25, 26, 28, 34, 35, 39, 41, 44, 51, 54, 55, 58, 61, 69, 77, 82, 83, 84, 85, 87, 97, 98, 101, 102, 105, 107, 114, 116, 117, 130, 135, 136, 138, 141, 145, 152, 153, 156, 158, 159, 160, 164, 166, 168, 169, 171], "gr\u00e2c": [2, 39, 44, 84, 85, 150, 158, 160, 165, 166, 168, 169, 173], "s1": [2, 98, 107, 160], "s2": [2, 34, 39, 98, 160, 165, 166], "s3": [2, 160], "map": [2, 18, 72, 108, 119, 128, 129, 135, 158, 160, 164, 171], "avantag": [2, 141, 150, 158, 160, 164, 165, 166], "derni": [2, 23, 24, 28, 34, 36, 39, 40, 44, 53, 55, 57, 59, 61, 63, 64, 65, 67, 68, 71, 72, 75, 77, 82, 83, 84, 85, 103, 108, 124, 127, 132, 134, 135, 148, 150, 153, 154, 158, 160, 164, 165, 166, 168, 170, 171], "elles": [2, 3, 20, 24, 25, 31, 33, 36, 39, 40, 41, 44, 52, 55, 57, 64, 84, 85, 86, 87, 88, 123, 124, 134, 140, 141, 150, 152, 153, 158, 160, 164, 165, 166, 168, 171, 173], "\u00e9vitent": [2, 160], "cr\u00e9ation": [2, 33, 34, 39, 40, 54, 64, 132, 134, 140, 148, 150, 158, 160, 164, 166, 168, 171], "interm\u00e9diair": [2, 22, 39, 70, 71, 134, 135, 143, 153, 156, 160, 164, 165, 166, 169, 171], "prendr": [2, 18, 24, 27, 34, 35, 44, 47, 52, 55, 58, 64, 75, 103, 111, 118, 124, 134, 136, 140, 141, 146, 150, 160, 164, 165, 168, 173], "laquel": [2, 33, 35, 40, 44, 48, 64, 69, 70, 77, 88, 97, 111, 125, 132, 137, 148, 150, 158, 160, 164, 165, 171], "volumin": [2, 160, 165], "suivent": [2, 39, 55, 140, 141, 153, 158, 160, 164, 165, 166, 168, 173], "permettent": [2, 34, 37, 39, 40, 44, 47, 77, 94, 98, 112, 130, 140, 141, 148, 150, 152, 153, 156, 158, 160, 164, 165, 166, 168, 171, 173], "proced": [2, 39, 100, 104, 107, 114, 148, 150, 158, 160, 166, 168, 171], "r\u00e9cuper": [2, 26, 33, 35, 39, 40, 64, 65, 70, 86, 107, 115, 124, 125, 140, 141, 153, 155, 158, 159, 160, 161, 162, 164, 165, 166, 173], "depuis": [2, 3, 19, 23, 26, 33, 34, 35, 36, 39, 40, 41, 65, 86, 115, 124, 125, 130, 134, 150, 153, 158, 159, 160, 161, 162, 166, 168, 169, 171], "proven": [2, 3, 41, 158, 160, 171], "tableur": [2, 160, 166], "d\u00e9composit": [2, 13, 27, 33, 47, 93, 160], "split": [2, 7, 34, 39, 57, 103, 106, 111, 122, 124, 128, 129, 140, 141, 158, 160, 165, 166, 168, 173], "tres": [2, 3, 9, 21, 24, 25, 27, 28, 33, 34, 36, 37, 39, 41, 47, 48, 57, 58, 59, 61, 62, 64, 65, 68, 75, 78, 84, 85, 87, 90, 94, 96, 97, 104, 107, 112, 114, 116, 118, 119, 123, 124, 131, 134, 140, 141, 142, 148, 150, 153, 156, 158, 159, 160, 164, 165, 166, 168, 169], "travaill": [2, 33, 44, 77, 118, 141, 153, 160], "pand": [2, 12, 15, 16, 17, 29, 30, 31, 33, 48, 55, 56, 58, 61, 78, 82, 83, 86, 97, 103, 104, 109, 110, 115, 119, 124, 125, 141, 160, 165], "robust": [2, 160], "consider": [2, 3, 19, 24, 27, 33, 34, 36, 37, 39, 41, 49, 51, 53, 64, 68, 69, 77, 79, 80, 83, 84, 85, 87, 88, 109, 112, 116, 118, 125, 126, 127, 130, 134, 142, 146, 150, 152, 154, 158, 160, 164, 165, 168, 171, 173], "to_csv": [2, 34, 86, 104, 141, 160], "read_csv": [2, 16, 34, 36, 55, 86, 104, 124, 125, 141, 160], "direct": [2, 3, 24, 33, 34, 39, 44, 49, 54, 55, 64, 75, 76, 78, 112, 118, 128, 129, 130, 138, 139, 146, 148, 150, 153, 154, 160, 164, 165, 166], "enregistr": [2, 26, 34, 35, 39, 53, 104, 112, 115, 140, 141, 150, 160, 166, 168, 173], "excel": [2, 12, 39, 44, 160, 166], "read_excel": [2, 36, 104, 160], "to_excel": [2, 34, 104, 160], "triindex": [2, 4, 160], "quicksort": [2, 160], "consist": [2, 11, 20, 21, 28, 34, 39, 44, 49, 52, 53, 55, 59, 60, 63, 64, 75, 77, 78, 79, 84, 85, 95, 100, 107, 114, 124, 134, 137, 141, 146, 148, 150, 158, 160, 164, 165, 166, 168, 169, 171, 173], "pet": [2, 3, 5, 8, 19, 21, 23, 27, 33, 35, 39, 41, 47, 48, 51, 53, 55, 57, 64, 65, 67, 69, 75, 77, 82, 87, 88, 103, 106, 107, 117, 124, 132, 137, 142, 147, 153, 160, 164, 165], "\u00e9chang": [2, 18, 61, 75, 95, 107, 140, 150, 158, 160, 165, 166, 171], "plac": [2, 5, 16, 39, 41, 44, 63, 64, 75, 77, 80, 81, 95, 97, 113, 116, 118, 124, 141, 147, 148, 150, 160, 164, 165, 166, 168, 171, 173], "recomment": [2, 35, 82, 122, 123, 141, 147, 160, 171], "proc\u00e9dur": [2, 141, 160, 168], "troisiem": [2, 35, 39, 44, 51, 58, 75, 114, 131, 134, 140, 150, 153, 158, 160, 164, 165, 166, 171, 173], "jusqu": [2, 11, 16, 19, 28, 39, 44, 47, 51, 55, 57, 58, 64, 68, 69, 77, 95, 126, 137, 150, 153, 154, 158, 159, 160, 164, 165, 166, 171], "6": [2, 3, 6, 9, 11, 18, 20, 21, 25, 27, 28, 32, 33, 35, 36, 39, 41, 44, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 126, 129, 130, 131, 132, 133, 134, 135, 137, 139, 143, 150, 152, 156, 158, 159, 160, 161, 162, 164, 165, 171, 173], "exclu": [2, 19, 28, 39, 44, 67, 80, 81, 99, 143, 148, 158, 160, 164, 165], "pos": [2, 16, 27, 44, 56, 61, 63, 69, 75, 76, 78, 79, 82, 83, 84, 85, 87, 97, 103, 104, 109, 116, 125, 131, 150, 152, 158, 160, 166, 173], "ech": [2, 75, 160], "selon": [2, 33, 34, 36, 39, 40, 44, 55, 58, 64, 68, 80, 81, 82, 84, 85, 90, 97, 109, 112, 120, 121, 123, 130, 140, 148, 150, 153, 158, 160, 162, 164, 165, 166, 173], "timsort": [2, 119, 160], "parfois": [2, 16, 20, 25, 33, 36, 39, 44, 51, 77, 86, 95, 103, 122, 124, 132, 150, 153, 154, 156, 158, 159, 160, 162, 164, 165, 166, 168, 169, 171], "amen": [2, 64, 160], "parc": [2, 3, 24, 25, 34, 37, 39, 41, 44, 55, 58, 69, 130, 131, 141, 150, 153, 160, 164, 165], "moin": [2, 3, 5, 19, 27, 34, 39, 41, 44, 47, 49, 54, 55, 57, 59, 61, 66, 68, 77, 82, 83, 87, 90, 100, 101, 104, 105, 107, 111, 112, 114, 116, 119, 127, 130, 131, 132, 134, 140, 150, 153, 154, 156, 158, 160, 161, 162, 164, 165, 166, 171, 173], "applic": [2, 19, 150, 152, 160, 166], "tab": [2, 27, 67, 71, 75, 109, 160], "zero": [2, 17, 33, 39, 47, 153, 158, 160, 165], "trop": [2, 6, 19, 24, 33, 34, 36, 39, 44, 47, 51, 55, 58, 61, 64, 74, 77, 85, 87, 111, 112, 113, 130, 140, 153, 160, 164, 165, 166, 168, 169, 171], "succinct": [2, 160], "tab_posit": [2, 160], "vect": [2, 160], "ncol": [2, 82, 160], "dist": [3, 34, 54, 59, 62, 84, 85, 90, 124, 125, 166], "common": [3, 16, 112, 165, 168], "interfac": [3, 27, 33, 38, 41, 44, 150, 158, 164, 168, 170, 174], "old": [3, 39, 165], "except": [3, 17, 19, 21, 24, 25, 33, 34, 35, 36, 37, 38, 44, 49, 50, 61, 65, 68, 69, 72, 75, 77, 78, 79, 81, 82, 83, 86, 94, 107, 116, 125, 134, 139, 141, 142, 143, 150, 156, 158, 159, 164, 165, 166, 168, 169, 171, 173, 174], "pqpiperror": [3, 4], "arg": [3, 33, 58, 59, 78, 79, 124, 150, 154], "any": [3, 33, 45, 113, 150, 164], "raised": [3, 154], "following": [3, 7, 17, 33, 45, 128, 129, 154, 158], "function": [3, 6, 7, 15, 25, 29, 39, 103, 111, 112, 113, 122, 135, 154, 158, 162, 164, 168, 171, 173], "class_getitem": [3, 4], "show": [3, 7, 33, 41, 122], "enabl": [3, 111, 112, 113, 122], "instanc": [3, 7, 34, 40, 41, 67, 95, 98, 130, 151, 153, 158, 159, 164, 165, 168, 169, 171], "through": 3, "__class_getitem__": [3, 150], "difference_div": [3, 4, 41], "quotient": [3, 41], "div1": [3, 41], "div2": [3, 41], "div3": [3, 41], "div4": [3, 41], "print": [3, 5, 7, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 40, 44, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 83, 84, 85, 86, 87, 94, 95, 96, 97, 99, 100, 102, 104, 106, 107, 109, 111, 112, 113, 115, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 166, 168, 169, 171, 173], "rest": [3, 16, 24, 25, 28, 35, 39, 40, 41, 50, 54, 58, 59, 61, 64, 65, 69, 70, 77, 82, 90, 94, 106, 107, 116, 120, 121, 134, 137, 139, 140, 141, 150, 153, 156, 158, 164, 165, 166, 169, 171], "obtenu": [3, 28, 33, 39, 41, 53, 56, 77, 81, 102, 103, 137, 150, 166, 168], "entier_grande_taill": [3, 4, 41], "maxint": [3, 41], "new": [3, 16, 34, 39, 41, 147, 165], "De": [3, 16, 41, 48, 55, 64, 87, 100, 103, 130, 134, 140, 143, 150, 154, 158, 164, 165, 166, 168, 171], "getrandb": [3, 41], "random": [3, 17, 28, 33, 34, 35, 41, 47, 48, 53, 54, 55, 56, 58, 59, 61, 62, 64, 69, 72, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 97, 100, 105, 108, 109, 110, 119, 123, 124, 125, 132, 133, 137, 139, 141, 149, 150, 159, 168, 171], "getrandbit": [3, 41], "2048": [3, 41, 53, 68, 76, 93, 140], "Qui": [3, 16, 41, 57, 106], "2882159224557107513165483098383814837021447484558010147211921": [3, 41], "304219017212673656549681269862792029": [3, 41], "font": [3, 16, 18, 33, 39, 41, 51, 54, 82, 83, 140, 141, 150, 153, 158, 164, 165, 166, 171], "huit": [3, 41, 64, 165, 166, 173], "octet": [3, 5, 27, 41, 104, 107, 116, 141, 147, 162, 165, 166, 169], "Au": [3, 18, 20, 33, 34, 41, 53, 54, 80, 130, 150, 165, 168, 171], "del\u00e0": [3, 6, 34, 41, 47, 77, 124, 171], "librair": [3, 5, 25, 31, 33, 35, 36, 37, 41, 42, 103, 107, 113, 118, 154, 165, 170], "gmpy2": [3, 41], "recommand": [3, 34, 39, 41, 44, 48, 66, 77, 116, 141, 150, 153, 158, 168], "20": [3, 6, 7, 16, 22, 23, 25, 28, 33, 34, 35, 36, 41, 47, 54, 55, 56, 58, 59, 64, 68, 69, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 100, 101, 104, 105, 109, 110, 112, 115, 116, 117, 123, 126, 130, 134, 136, 137, 140, 148, 149, 158, 161, 164, 165, 169, 171, 173], "40": [3, 16, 22, 24, 25, 33, 34, 36, 41, 47, 58, 64, 77, 79, 83, 86, 89, 110, 112, 116, 123, 137, 150, 158, 169, 173], "chiffr": [3, 19, 21, 39, 40, 41, 63, 65, 76, 77, 130, 131, 138, 140, 153, 165, 173], "overview": [3, 41, 158], "remplac": [3, 19, 33, 39, 41, 48, 53, 64, 69, 70, 75, 77, 82, 83, 97, 118, 130, 132, 134, 138, 140, 141, 148, 150, 152, 158, 164, 165, 166, 171, 173], "editeur": [3, 41], "bougent": [3, 41, 102], "essentiel": [3, 39, 41, 132, 164, 168, 171], "m\u00e9lang": [3, 41, 84, 85, 106, 150, 164], "aller": [3, 19, 27, 33, 41, 49, 53, 57, 67, 107, 111, 131, 135, 136, 137, 140, 164], "menu": [3, 41, 141], "option": [3, 7, 9, 33, 34, 36, 41, 44, 50, 54, 62, 63, 75, 82, 84, 85, 97, 101, 107, 115, 130, 150, 158, 165, 168, 173], "indent": [3, 39, 41, 96, 143, 150, 153, 163], "setting": [3, 41], "similair": [3, 34, 36, 41, 64, 124, 150, 164, 165, 171, 173], "enumerate_regex_search": [3, 4, 41], "exp": [3, 21, 33, 41, 63, 68, 113, 119, 141, 168, 173], "occurent": [3, 39, 108, 165], "parametr": [3, 5, 6, 7, 24, 27, 33, 34, 37, 51, 54, 64, 73, 74, 77, 79, 84, 85, 86, 87, 89, 94, 95, 98, 130, 132, 134, 141, 150, 152, 153, 158, 162, 165, 166, 168, 171, 173], "pars": [3, 26, 154, 166], "findit": [3, 41, 63, 106], "found": [3, 16, 34, 41], "petit": [3, 11, 19, 34, 38, 41, 52, 56, 57, 58, 64, 75, 77, 109, 116, 132, 136, 140, 141, 144, 145, 146, 158, 164, 165, 168, 173], "subtil": [3, 41, 140], "get_day_nam": [3, 4, 41], "return": [3, 5, 7, 16, 17, 18, 19, 20, 24, 25, 27, 28, 33, 34, 35, 37, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 123, 127, 130, 131, 132, 133, 135, 137, 139, 140, 141, 146, 147, 150, 152, 153, 154, 158, 159, 160, 164, 165, 166, 168, 169, 171, 173], "day": [3, 55, 141, 161], "nam": [3, 7, 16, 26, 34, 36, 40, 41, 69, 72, 98, 110, 115, 124, 125, 150, 154, 164, 165, 168, 171], "giv": 3, "datatim": 3, "month": 3, "datetim": [3, 34, 41, 55, 64, 141, 163, 165, 168], "2016": [3, 41, 45, 66], "friday": [3, 41], "get_installed_distribu": [3, 4], "local_only": 3, "skip": [3, 64], "include_edit": 3, "editables_only": 3, "user_only": 3, "use_cmd": 3, "installed": 3, "default": [3, 7, 25, 26, 39, 158, 164, 168, 169, 173], "current": [3, 54, 82, 104, 128, 129, 168], "virtualenv": 3, "low": [3, 17, 39, 57, 103, 128, 129, 165, 173], "ignor": [3, 141, 156, 162, 164], "compat": 3, "stdlib_pkg": 3, "report": 3, "user": [3, 115, 122, 158, 165], "directory": [3, 168, 173], "use": [3, 16, 17, 33, 45, 168], "updated": 3, "get_month_nam": [3, 4, 41], "january": [3, 41], "get_package_info": [3, 4], "start": [3, 10, 39, 47, 106, 111, 165, 171], "end": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 51, 53, 55, 70, 78, 79, 106, 124, 125, 137, 154, 158, 165, 171, 173], "retriev": 3, "he": [3, 128, 129], "all": [3, 7, 15, 16, 33, 45, 112, 113, 128, 129, 150, 168, 173], "get_packages_list": [3, 4], "dictionar": [3, 7], "information_about_packag": [3, 4, 41], "nouveau": [3, 36, 39, 41, 51, 55, 97, 98, 103, 107, 119, 124, 134, 140, 141, 150, 152, 158, 165, 166], "main": [3, 6, 34, 36, 39, 41, 64, 65, 86, 104, 107, 140, 141, 154, 171], "lent": [3, 27, 33, 41, 61, 68, 95, 107, 111, 112, 113, 123, 159, 165, 169], "incluent": [3, 39, 41, 165, 168], "matplotlib": [3, 17, 28, 33, 35, 36, 38, 41, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 73, 74, 77, 80, 81, 82, 83, 84, 85, 86, 89, 97, 100, 101, 103, 105, 109, 110, 115, 119, 123, 137, 141, 144, 145, 147], "scipy": [3, 32, 35, 38, 41, 59, 84, 85, 90, 100, 112, 113, 123, 130, 168], "scik": [3, 41, 118, 122, 156, 170], "learn": [3, 41, 118, 122, 156, 170], "linux": [3, 9, 26, 41, 44, 124, 158, 162, 165, 166], "compil": [3, 41, 63, 111, 112, 116, 122, 140, 141, 151, 153, 165, 168, 173], "met": [3, 24, 41, 72, 80, 81, 87, 94, 116, 131, 150, 158, 164], "implicit": [3, 34, 39, 41, 88, 97, 107, 140, 164, 165, 166], "contribu": [3, 41, 141, 168], "d\u00e9faut": [3, 9, 20, 33, 34, 36, 39, 41, 44, 67, 68, 79, 112, 134, 148, 149, 150, 158, 163, 165, 166, 168, 169, 171, 173], "attent": [3, 9, 18, 28, 33, 39, 41, 55, 64, 115, 141, 153, 162, 164, 168], "exact": [3, 34, 39, 41, 57, 77, 101, 112, 129, 135, 150, 158, 164], "compiling": [3, 41], "anacond": [3, 9, 12, 41, 44], "propos": [3, 5, 10, 24, 27, 34, 35, 41, 48, 55, 58, 63, 64, 66, 69, 75, 76, 77, 82, 83, 84, 85, 87, 90, 91, 99, 100, 102, 104, 107, 111, 117, 120, 121, 123, 124, 128, 129, 131, 132, 140, 141, 142, 147, 148, 150, 152, 153, 154, 158, 159, 164, 165, 166, 168, 170, 171], "pr\u00e9compil": [3, 41, 168], "cond": [3, 40, 41, 44, 141, 164], "module_compil": [3, 41], "list_of_installed_packag": [3, 4, 41], "licens": [3, 41, 43, 141], "summary": [3, 41], "powerful": [3, 41], "analys": [3, 41, 47, 55, 78, 165], "statistic": [3, 7, 41], "hom": [3, 25, 26, 41, 64, 111, 140, 154], "pydat": [3, 36, 41], "author": [3, 41, 45], "development": [3, 9, 41], "team": [3, 41, 128, 129], "email": [3, 26, 37, 39, 41, 166], "googlegroup": [3, 41], "com": [3, 6, 26, 34, 36, 41, 55, 64, 65, 86, 107, 124, 125, 140, 141, 146, 147, 166, 173], "bsd": [3, 41], "locat": [3, 6, 41, 104, 128, 129], "python35_x64": [3, 41], "lib": [3, 35, 41, 111, 112, 113, 122, 140, 154, 158], "requir": [3, 41], "dateutil": [3, 41, 55], "pytz": [3, 41], "freez": [3, 41], "r\u00e9pliqu": [3, 39, 41, 69], "environ": [3, 19, 33, 41, 44, 64, 68, 90, 165, 168], "docutil": [3, 41, 154], "jinja2": [3, 41, 140, 141], "markupsaf": [3, 41], "19": [3, 16, 27, 28, 33, 34, 35, 36, 41, 47, 52, 53, 54, 55, 58, 64, 69, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 100, 101, 104, 110, 111, 112, 113, 114, 115, 116, 119, 123, 130, 134, 137, 140, 141, 143, 148, 149, 150, 161, 164, 165, 173], "pygment": [3, 41], "sphinx": [3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 150, 154], "txt": [3, 34, 39, 41, 65, 124, 125, 140, 141, 146, 147, 153, 154, 162, 165, 166], "property_exampl": [3, 4, 41], "property": [3, 7, 16, 39, 40, 41, 107, 150, 158], "appel": [3, 18, 19, 24, 25, 27, 33, 35, 36, 39, 41, 51, 54, 58, 64, 65, 68, 81, 87, 95, 97, 98, 111, 112, 113, 124, 126, 130, 132, 134, 137, 140, 141, 148, 152, 153, 155, 156, 158, 161, 162, 165, 166, 168, 170, 171, 173], "attribut": [3, 7, 12, 16, 25, 27, 33, 41, 69, 93, 94, 98, 151, 152, 153, 158, 159, 166, 169, 171, 173], "classeavecproperty": [3, 41], "__init__": [3, 16, 25, 27, 39, 40, 41, 94, 95, 96, 97, 98, 111, 112, 113, 122, 130, 131, 132, 150, 152, 153, 154, 158, 166, 168, 169, 171], "self": [3, 16, 25, 27, 35, 39, 40, 41, 94, 95, 96, 97, 98, 130, 131, 132, 133, 150, 152, 153, 154, 158, 165, 166, 168, 169, 171], "_x": [3, 41, 150], "_y": [3, 41, 150], "norm2": [3, 41], "impossibl": [3, 16, 24, 25, 27, 28, 40, 41, 48, 54, 55, 61, 65, 69, 134, 150, 156, 164, 165, 166, 168, 169], "\u00e9criv": [3, 27, 41, 69, 112, 132, 134, 158, 165], "455": [3, 41, 122], "attributeerror": [3, 41, 69, 150, 153, 159], "python_path": [3, 4, 41], "pr\u00e9sent": [3, 6, 19, 20, 33, 34, 39, 41, 47, 55, 58, 78, 79, 90, 91, 95, 103, 104, 115, 118, 124, 134, 140, 141, 146, 148, 151, 153, 156, 158, 164, 165, 166, 168, 171, 173], "introduit": [3, 33, 34, 39, 41, 79, 95, 124, 134, 164, 168], "avant": [3, 16, 27, 34, 35, 36, 39, 41, 53, 54, 61, 64, 68, 77, 82, 83, 106, 107, 124, 126, 134, 139, 140, 141, 142, 150, 153, 158, 164, 165, 166, 168, 171], "fais": [3, 33, 34, 41, 58, 147, 150, 164, 165, 171], "trac": [3, 27, 34, 36, 41, 55, 64, 87, 93, 97, 147, 150, 154, 156, 166], "moncod": [3, 41], "monmodul": [3, 41, 140], "src": [3, 41, 52, 57], "fois": [3, 5, 16, 19, 25, 33, 35, 37, 39, 41, 44, 47, 50, 52, 53, 54, 56, 57, 58, 63, 64, 65, 67, 68, 69, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 90, 95, 99, 100, 101, 102, 111, 116, 119, 125, 127, 130, 131, 134, 135, 137, 139, 140, 141, 142, 148, 150, 152, 153, 156, 158, 159, 164, 165, 166, 168, 169, 170, 171, 173], "barb": [3, 41], "ailleur": [3, 33, 41, 44, 64, 105, 156, 164], "pythonpath": [3, 41], "same_vari": [3, 4, 41], "dit": [3, 19, 24, 28, 34, 39, 40, 47, 54, 55, 64, 65, 78, 79, 116, 130, 134, 137, 141, 150, 153, 158, 164, 165, 166, 171], "contiennent": [3, 24, 34, 115, 150, 159, 164, 165, 166, 168, 169, 171, 173], "modifi": [3, 27, 33, 34, 36, 37, 38, 41, 53, 55, 59, 64, 67, 69, 72, 75, 76, 77, 79, 80, 82, 87, 88, 99, 102, 107, 116, 118, 132, 140, 142, 148, 150, 152, 153, 154, 156, 158, 161, 163, 166, 168, 169, 171], "concern": [3, 34, 39, 41, 44, 141, 150, 153, 158, 162, 164, 165, 166, 171, 173], "principal": [3, 27, 35, 36, 39, 41, 43, 44, 116, 123, 134, 140, 142, 156, 165, 166, 168, 169, 171, 173], "float": [3, 6, 7, 15, 27, 29, 33, 35, 39, 41, 65, 82, 94, 112, 116, 124, 137, 140, 141, 153, 164, 165, 168, 173], "effectu": [3, 19, 24, 25, 27, 33, 34, 35, 36, 39, 41, 53, 58, 75, 77, 78, 84, 85, 116, 120, 121, 124, 126, 131, 135, 141, 150, 153, 158, 162, 164, 165, 166, 168, 169, 171, 173], "cop": [3, 33, 34, 36, 40, 41, 45, 47, 48, 59, 67, 68, 102, 148, 151, 164, 168, 169], "dictionnair": [3, 19, 24, 25, 34, 36, 41, 48, 63, 67, 68, 69, 70, 72, 75, 78, 91, 93, 98, 107, 124, 130, 146, 147, 152, 153, 159, 164, 166, 168, 169, 171, 173], "mutabl": [3, 41, 148, 163], "d\u00e9sign": [3, 24, 27, 33, 34, 35, 36, 39, 40, 41, 79, 99, 104, 107, 114, 130, 142, 150, 158, 162, 164, 165, 168, 171, 173], "emplac": [3, 41, 84, 85], "accessibl": [3, 40, 41, 86, 125, 140, 150, 158, 164, 165, 166, 168], "paur": [3, 41], "identifi": [3, 35, 39, 41, 158, 164, 165], "_immutable_": [3, 41], "_mutable_": [3, 41], "effet": [3, 24, 41, 47, 59, 77, 80, 100, 150, 158, 164, 165, 166, 168], "copi": [3, 36, 39, 41, 68, 82, 83, 97, 150, 165, 166], "explicit": [3, 16, 27, 33, 39, 40, 41, 67, 68, 87, 95, 107, 148, 150, 152, 153, 155, 158, 164, 165, 168, 171], "demand": [3, 37, 39, 41, 44, 67, 68, 78, 141, 148, 150, 158, 165, 173], "sequenc": [3, 41, 158, 165], "d\u00e9taill": [3, 36, 41, 64, 153], "parm": [3, 16, 24, 33, 41, 58, 68, 78, 86, 97, 102, 103, 124, 125, 134, 140, 150, 164, 165, 166, 168], "bool": [3, 6, 7, 33, 34, 39, 41, 94, 102, 159, 164], "byt": [3, 26, 41, 140, 154, 162, 166, 169], "frozenset": [3, 7, 41, 99], "dict": [3, 6, 7, 17, 25, 36, 39, 41, 47, 48, 55, 56, 57, 58, 63, 72, 78, 82, 83, 86, 89, 97, 99, 104, 110, 112, 113, 115, 116, 119, 135, 150, 159, 164, 169], "bytearray": [3, 41], "rendr": [3, 27, 41, 57, 64, 141, 158, 164], "__slots__": [3, 40, 41, 150, 165], "creat": [3, 7, 33, 41], "mak": [3, 41, 128, 129], "surcharg": [3, 33, 39, 41, 95, 132, 151, 166, 171], "__getattr__": [3, 41, 122], "__getattribute__": [3, 41, 150], "__setattr__": [3, 41, 150], "enfin": [3, 33, 41, 65, 87, 105, 141, 150, 158], "imbriquent": [3, 41], "uns": [3, 18, 41, 44, 54, 107, 141, 158, 166, 173], "deepcopy": [3, 16, 39, 41, 165], "recop": [3, 33, 41, 114, 148, 150, 165], "uniqu": [3, 6, 18, 33, 34, 35, 36, 39, 40, 41, 52, 54, 63, 68, 87, 94, 99, 104, 126, 128, 129, 130, 131, 135, 146, 148, 149, 150, 153, 158, 162, 164, 165, 166, 169, 171], "copy": [3, 16, 27, 28, 34, 36, 39, 41, 45, 47, 48, 54, 55, 58, 59, 63, 64, 67, 75, 79, 80, 82, 83, 84, 86, 95, 102, 103, 105, 110, 119, 164, 165, 166, 168, 171], "inclus": [3, 24, 28, 33, 39, 41, 42, 64, 72, 153, 158, 164, 165, 166, 173], "appliquent": [3, 39, 41, 119, 152, 158, 165, 173], "sortable_class": [3, 4, 41], "cl": [3, 7, 16, 25, 40, 119, 150, 169], "prononc": [3, 41], "o1": [3, 41, 150], "o2": [3, 41, 150], "macl": [3, 41], "__lt__": [3, 41, 150], "autre_inst": [3, 41], "jenesaisp": [3, 41], "jenesaispas2": [3, 41], "teturn": 3, "io": [3, 12, 16, 25, 26, 34, 41, 52, 57, 104, 107, 111, 112, 113, 115, 122, 154, 166, 169, 173], "disqu": [3, 41, 44, 107, 140, 141, 166, 168], "dur": [3, 33, 34, 36, 41, 55, 77, 87, 107, 140, 141, 161, 165, 166, 168, 171, 173], "ordin": [3, 11, 19, 27, 39, 40, 41, 44, 79, 107, 142, 154, 162, 165, 166, 168, 171], "automatis": [3, 41, 44, 142], "processur": [3, 41], "r\u00e9pet": [3, 24, 33, 37, 39, 41, 44, 65, 69, 77, 82, 83, 84, 85, 124, 125, 130, 139, 140, 141, 142, 148, 150, 164, 166], "processus_quotidien": [3, 41], "nom_fichi": [3, 41, 166], "nb": [3, 16, 18, 33, 34, 41, 49, 54, 59, 61, 64, 69, 73, 74, 75, 82, 83, 94, 97, 137, 150, 158, 164, 168], "open": [3, 12, 26, 33, 34, 36, 37, 39, 41, 107, 115, 124, 140, 141, 147, 153, 154, 162, 166, 171, 173], "recopi": [3, 22, 37, 39, 41, 107, 134, 150, 164, 165, 166, 168], "t\u00e9l\u00e9charg": [3, 6, 39, 41, 44, 107, 115, 140, 141, 146], "gigaoctet": [3, 41], "apercevoir": [3, 41, 164], "corrompu": [3, 41], "perdu": [3, 18, 39, 41, 116, 122, 140, 141, 143, 153, 166, 171], "heur": [3, 34, 41, 66, 141, 161, 168], "aur": [3, 24, 28, 33, 34, 39, 41, 57, 64, 80, 84, 85, 94, 129, 140, 141, 150, 153, 165, 166, 168], "voulu": [3, 41, 49, 72], "d\u00e8s": [3, 37, 39, 41, 44, 75, 77, 94, 95, 124, 132, 137, 141, 150, 153, 158, 165, 166], "invent": [3, 41], "stream": [3, 41, 111, 112, 113, 115, 122, 166], "flux": [3, 41, 47, 48], "data_stream": [3, 41], "__file__": [3, 41, 112, 113, 122, 165, 168, 173], "ligne1": [3, 41], "nligne2": [3, 41], "st": [3, 16, 39, 41, 63, 86, 107, 161, 162, 165], "call_stack": [3, 4], "to_float32": [3, 4], "exampl": [4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 41, 42, 49, 65, 88, 94, 148, 158, 160], "construction_class": [4, 42, 160], "teachpyx": [4, 5, 7, 12, 25, 32, 34, 36, 41, 42, 43, 44, 64, 65, 86, 107, 109, 110, 112, 116, 124, 125, 140, 141, 146, 147, 160], "somm": [4, 5, 17, 18, 19, 27, 32, 33, 34, 37, 39, 44, 48, 49, 50, 54, 55, 64, 68, 69, 71, 77, 80, 81, 91, 94, 116, 123, 130, 131, 135, 136, 137, 138, 141, 142, 143, 152, 164, 165, 168, 171, 173], "tool": [4, 42, 109, 112, 116, 124, 125, 140, 141, 146, 147], "decompress_zip": 4, "download_and_unzip": [4, 124, 125, 140, 141, 146, 147], "draw_diagram": [4, 109], "total_siz": [4, 116], "profiling": [4, 122], "profilenod": [4, 7], "add_called_by": [4, 7], "add_calls_to": [4, 7], "as_dict": [4, 7], "filter_node_": [4, 7], "get_root": [4, 7], "to_json": [4, 7, 104], "to_text": [4, 7, 112], "profil": [4, 7, 112, 122, 168], "profile2df": [4, 7], "profile2graph": [4, 7, 112], "practic": [4, 42, 64, 126, 128, 129], "rues_par": [4, 42, 64], "bellman": [4, 6, 124], "connected_component": [4, 6], "distance_haversin": [4, 6, 64, 98], "distance_par": [4, 6], "euler_path": [4, 6, 64], "eulerien_extens": [4, 6, 64], "get_dat": [4, 6, 64], "graph_degre": [4, 6], "possible_edg": [4, 6], "numpysex": [4, 32, 41, 42], "numpy_matrix2list": [4, 5, 32], "numpy_typ": [4, 5, 41], "faq_python": [4, 41], "stringio": [4, 16, 25, 104, 107, 111, 112, 113, 122, 169], "faq_except": 4, "faq_numpy": 4, "voic": [5, 10, 24, 27, 32, 33, 34, 36, 39, 72, 77, 99, 114, 150, 158, 164, 165, 166, 168, 171], "np": [5, 12, 28, 32, 33, 62, 64, 82, 83, 113], "shap": [5, 17, 22, 32, 34, 35, 36, 48, 52, 54, 55, 56, 58, 59, 62, 78, 79, 82, 83, 86, 87, 90, 97, 104, 105, 110, 112, 113, 115, 117, 118, 123, 124, 139, 171], "iv": [5, 32], "10x10": [5, 32, 33], "diag": [5, 32, 33, 79], "extrait": [5, 12, 22, 32, 33, 34, 36, 39, 65, 114, 142, 150, 164, 166, 173], "diagonal": [5, 24, 27, 32, 33, 43, 44, 48, 79, 125, 130], "dd": [5, 32, 55, 56], "transpos": [5, 32, 33, 34, 35, 79, 112, 150, 158], "mx": [5, 32, 80, 81], "diagflat": [5, 32], "bool\u00e9en": [5, 24, 32, 33, 34, 39, 158, 164], "avail": [5, 7], "bit": [5, 47, 120, 121, 165, 166], "thos": 5, "programmeur": [5, 39, 41, 150, 152, 158, 162, 166], "cherchent": [5, 41], "possed": [5, 33, 39, 41, 61, 65, 77, 141, 150, 153, 158, 165, 171], "255": [5, 34, 41, 150], "uint8": [5, 41], "expliqu": [5, 15, 19, 29, 36, 41, 58, 63, 77, 80, 81, 88, 116, 119, 137, 150, 153, 164, 165, 166], "float32": [5, 27, 36, 41, 112], "plut\u00f4t": [5, 20, 33, 34, 36, 37, 39, 41, 44, 54, 55, 68, 69, 75, 77, 82, 83, 87, 90, 94, 100, 111, 116, 119, 146, 147, 148, 150, 153, 154, 158, 164, 165, 166, 169, 171], "float64": [5, 33, 34, 35, 36, 41, 55, 171], "doubl": [5, 17, 41, 64, 68, 69, 72, 75, 87, 148, 158, 165, 166, 173], "prennent": [5, 41, 44, 104, 164], "co\u00fbteux": [5, 41, 99, 111, 112, 126, 150, 165, 166], "gpu": [5, 33, 41], "explaining": [5, 41], "fp64": [5, 41], "perform": [5, 35, 41, 47, 53, 101, 135, 136, 138, 159, 166, 171], "gpus": [5, 41], "edge": [6, 48, 54, 64, 75, 124, 125], "max_it": [6, 55, 84, 85], "allow": [6, 34, 158], "callabl": [6, 7, 164], "init": [6, 64, 84, 85], "verbos": [6, 7, 51, 64, 84, 85, 87, 102], "ford": [6, 64, 124], "noeud": [6, 48, 54, 57, 63, 64, 75, 96, 124], "maximal": [6, 33, 53, 70, 77, 116, 129, 135, 137, 171], "envisag": [6, 24, 64, 77, 87, 125, 129, 158, 166], "liaison": 6, "continu": [6, 12, 16, 33, 39, 44, 51, 52, 54, 55, 57, 58, 61, 63, 64, 75, 78, 82, 83, 84, 85, 88, 90, 95, 103, 118, 124, 137, 139, 141, 148, 149, 153, 154, 156, 173], "ex\u00e9cu": [6, 20, 39, 40, 44, 64, 71, 77, 87, 111, 119, 134, 140, 148, 150, 153, 154, 156, 158, 164, 165, 166, 171], "progres": 6, "arc": [6, 28, 48, 54, 64, 75, 164], "connected": 6, "component": [6, 168], "vertex": [6, 54], "id": [6, 26, 47, 52, 57, 107, 158, 164, 165], "lat1": [6, 98], "lng1": [6, 98], "lat2": [6, 98], "lng2": [6, 98], "haversin": [6, 64], "formul": [6, 33, 35, 44, 49, 78, 81, 88, 114], "euclidien": 6, "approch": [6, 19, 27, 28, 55, 64, 77, 79, 105, 124, 129, 173], "paris": [6, 34, 77, 91], "added_edg": [6, 64], "eulerian": [6, 64], "path": [6, 16, 26, 63, 64, 112, 113, 122, 140, 154, 158, 166, 168], "we": [6, 16, 17, 33, 64, 168], "assum": [6, 141], "every": [6, 34, 128, 129], "has": [6, 7, 17, 69, 87, 128, 129, 150, 158], "even": [6, 157], "degre": [6, 54, 117, 164], "added": [6, 64], "typing": 6, "eul\u00e9rien": 6, "coefficient": [6, 33, 35, 48, 54, 61, 64, 68, 77, 78, 79, 116, 123, 131, 134, 150], "max_segment": [6, 64], "longu": [6, 19, 50, 51, 52, 63, 64, 77, 87, 88, 137, 140, 150, 164, 165, 168, 169], "avanc": [6, 11, 47, 54, 141, 158, 164, 165], "url": [6, 7, 36, 55, 64, 65, 107, 115, 124, 125, 140, 146, 147], "sdpython": [6, 12, 34, 36, 52, 57, 64, 65, 86, 107, 124, 125, 140, 141, 146, 147], "raw": [6, 7, 34, 36, 55, 64, 65, 86, 107, 115, 124, 125, 140, 141, 146, 147], "_dat": [6, 34, 36, 64, 65, 86, 107, 124, 125, 140, 141, 146, 147], "paris_54000": [6, 64], "zip": [6, 7, 15, 21, 34, 50, 54, 64, 72, 78, 80, 81, 86, 104, 112, 124, 125, 140, 141, 146, 147, 164, 167, 168, 171], "dest": [6, 7], "timeout": [6, 7, 171], "keep": [6, 7, 64], "ru": [6, 91], "rightarrow": [6, 34, 64, 68, 71, 72, 79, 105], "cec": [6, 25, 27, 39, 40, 44, 47, 53, 67, 69, 70, 72, 88, 90, 95, 102, 116, 140, 150, 153, 156, 158, 164, 165, 166, 173], "test": [6, 12, 16, 24, 27, 33, 34, 38, 53, 55, 61, 64, 67, 68, 71, 77, 86, 91, 93, 95, 105, 112, 117, 124, 126, 131, 135, 139, 142, 147, 150, 154, 156, 163, 165, 166, 168], "estabishing": 6, "connect": [6, 12, 39, 45, 54, 75, 158, 166], "gard": [6, 11, 34, 35, 36, 39, 49, 53, 58, 61, 64, 65, 75, 80, 81, 82, 83, 87, 88, 106, 107, 154, 168, 171], "sinon": [6, 33, 39, 44, 48, 53, 54, 58, 59, 65, 67, 70, 74, 75, 77, 78, 87, 105, 114, 124, 134, 137, 139, 149, 158, 164, 165, 168, 171, 173], "1000": [6, 16, 17, 26, 33, 34, 35, 36, 39, 47, 48, 55, 58, 68, 74, 77, 79, 80, 81, 82, 83, 90, 99, 100, 105, 108, 109, 111, 116, 123, 130, 134, 140, 141, 158, 164, 165, 166], "construir": [6, 27, 33, 34, 35, 39, 49, 53, 59, 63, 64, 68, 78, 84, 85, 89, 90, 91, 112, 123, 124, 137, 140, 146, 150, 158, 161, 164, 165, 173], "uple": [6, 24, 39, 153, 161, 165, 173], "conten": [6, 33, 34, 39, 40, 44, 88, 107, 127, 130, 142, 150, 153, 158, 164, 165, 166, 173], "v1": [6, 59, 61, 64, 75, 124, 125, 148, 165], "v2": [6, 59, 61, 64, 75, 124, 125, 148, 165], "p1": [6, 16, 39, 95, 125, 130, 166], "coordon": [6, 24, 35, 36, 61, 64, 68, 83, 84, 85, 123, 130, 150, 153, 158, 164], "p2": [6, 16, 39, 95, 125, 130, 150, 166], "ressembl": [6, 34, 47, 51, 70, 75, 145, 148, 150, 166, 169], "threshold": [6, 112], "vol": [6, 64], "oiseau": [6, 16, 64], "duquel": 6, "symetr": [6, 34, 39, 52, 54, 64, 67, 134], "inclu": [6, 39, 40, 53, 61, 134, 161, 164, 165, 166, 168], "filenam": [7, 34, 111, 112, 113, 122, 141, 146, 147, 154, 156, 166], "unzip": [7, 34], "destin": [7, 27, 87, 171], "verbosity": 7, "decompressed": 7, "download": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34], "fold": [7, 166], "display": [7, 16, 34, 52, 53, 57, 63, 64, 77, 102, 111, 112, 114, 125, 127, 136, 137, 138, 139, 144, 145, 149], "progress": [7, 54, 55, 141], "unzipped": 7, "blockdiag": [7, 109], "pillow": 7, "draw": [7, 17, 54, 64, 89, 100, 103], "definit": 7, "valu": [7, 17, 33, 34, 36, 39, 47, 55, 58, 63, 64, 82, 86, 107, 110, 112, 116, 118, 124, 125, 141, 147, 158, 164, 165, 166], "additional": [7, 158], "g": [7, 33, 39, 54, 57, 63, 64, 90, 103, 111, 123, 127, 141, 147, 150, 158, 165, 168, 173], "handler": 7, "approximat": [7, 17], "footprint": 7, "content": [7, 26, 36, 39, 77, 141, 154, 166], "measur": 7, "recursivity": 7, "purpos": [7, 45], "total": [7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 47, 53, 55, 97, 111, 165], "automatically": 7, "builtin": [7, 111, 112, 113, 122, 150, 158, 164, 168], "container": [7, 99, 135, 165], "subcl": 7, "dequ": [7, 163], "add": [7, 26, 34, 47, 63, 78, 158], "iterat": 7, "over": [7, 33, 120, 121, 139], "somecontainerclass": 7, "othercontainerclass": 7, "get_el": 7, "activestat": 7, "referenced": 7, "getsizeof": [7, 116, 165], "func_nam": 7, "nc1": 7, "nc2": 7, "tin": [7, 112], "tall": 7, "numb": [7, 16, 17, 18, 22, 25, 26, 33, 90, 109, 110, 123, 158, 159, 164, 171], "spent": 7, "sub": [7, 34, 39, 58, 106, 165, 173], "pnod": 7, "called": [7, 128, 129, 158], "time_el": 7, "nod": [7, 54], "filter_nod": 7, "sort_key": 7, "sortkey": [7, 111, 112], "render": 7, "result": [7, 16, 17, 95, 112, 154, 171], "interpreted": 7, "then": [7, 16, 128, 129, 168], "loaded": 7, "datafram": [7, 8, 17, 23, 43, 48, 55, 56, 58, 61, 78, 82, 83, 86, 97, 103, 104, 107, 109, 110, 115, 119, 124, 163], "which": [7, 16, 17, 158], "remov": [7, 39, 47, 54, 106, 165, 166], "built": [7, 111, 112, 113, 122, 154, 164, 168], "small": 7, "row": [7, 16, 17, 24, 33, 34, 36, 52, 57, 82, 83, 96, 109, 115, 116, 124, 125, 128, 129, 131, 140, 141, 158], "static": 7, "info": [7, 51, 52, 57, 104, 122, 166, 171, 173], "filter": 7, "displayed": 7, "overwrit": 7, "held": 7, "boolean": [7, 33, 34, 158], "forget": 7, "root": [7, 33, 57, 109, 158, 164, 171], "as_str": 7, "kwarg": 7, "json": [7, 8, 12, 93, 140, 167], "into": [7, 128, 129], "dump": [7, 25, 107, 166, 169], "fct_width": [7, 112], "60": [7, 16, 33, 36, 47, 55, 77, 97, 110, 115, 123, 141, 147, 150, 158, 173], "fct": [7, 17, 20, 58, 80, 81, 87, 103], "cumul": [7, 33, 34, 53, 86, 100, 111, 112, 113, 122], "rootrem": 7, "as_df": 7, "return_result": 7, "execu": [7, 29], "pstat": [7, 111, 112, 113, 122], "stat": [7, 25, 33, 55, 95, 107, 111, 112, 113, 115, 117, 122, 154, 158, 168, 169, 171], "sort_stat": [7, 111, 112, 113, 122], "posit": [7, 16, 19, 28, 33, 34, 35, 36, 39, 44, 51, 53, 54, 55, 58, 65, 75, 76, 82, 83, 86, 87, 94, 95, 98, 102, 109, 114, 134, 135, 144, 145, 148, 149, 150, 153, 154, 158, 164, 165, 173], "parameter": 7, "cprofil": [7, 111, 112, 113, 122], "png": [7, 34, 53, 63, 64, 77, 102, 114, 125, 127, 136, 137, 138, 139, 140, 144, 145, 149, 173], "hir": 7, "pdf": [7, 113, 166], "clean_text": 7, "logf": [7, 16], "clean": [7, 112], "logging": [7, 155, 171], "onnx_array_ap": 7, "bench_ortmodule_nn_gpu6": 7, "prof": [7, 113], "pd": [7, 115], "pyinstru": [7, 111], "nic": [7, 34], "stack": [7, 33, 34, 63, 155], "sam": [7, 16, 17, 33, 34, 128, 129], "replicat": 7, "that": [7, 17, 33, 112, 128, 129, 168], "produced": 7, "her": [7, 16, 104, 150, 158, 168], "fct0": 7, "sleep": [7, 18, 87, 171], "fct1": 7, "fct2": 7, "fct3": 7, "fct4": 7, "00004": 7, "61207": [], "61203": [], "00001": 7, "81291": [], "11089": [], "00002": 7, "11088": [], "00003": 7, "70201": [], "20079": [], "20078": [], "50119": 17, "81281": [], "bas": [12, 16, 19, 25, 33, 35, 44, 47, 53, 58, 76, 82, 83, 91, 97, 104, 107, 112, 115, 122, 123, 134, 150, 153, 158, 159, 164, 165, 166, 168, 171], "exercice_suffix": [], "exercice_edit_dist": [], "exercice_hash": [], "classes_metro": 104, "aper\u00e7u": [8, 27, 93], "appr\u00e9hend": 8, "c_dat": [], "nb_numpy": [], "nb_pand": [], "exercice_compose_connex": [], "exercice_ordonnanc": [], "problem": [8, 12, 19, 21, 27, 28, 33, 39, 42, 44, 51, 53, 54, 55, 57, 61, 62, 70, 71, 75, 76, 77, 79, 82, 83, 86, 88, 90, 101, 103, 104, 107, 114, 123, 124, 128, 129, 130, 134, 140, 142, 146, 147, 149, 150, 153, 154, 156, 158, 161, 162, 165, 166, 169, 173], "autour": [8, 15, 19, 23, 27, 29, 39, 51, 56, 57, 64, 76, 91, 106, 148, 164, 171], "exercice_tsp": [], "td": [8, 12, 13, 56, 66, 104, 115, 124, 141, 146, 147], "plus_court_chemin": 75, "plus_court_chemin_correct": [], "exercice_serialisation_json": 104, "tests_unitair": [], "profiling_conv": [], "exercice_regex": 104, "scrapping": [], "exercice_topk": [], "r\u00e9vis": 8, "pr\u00e9vis": [8, 168], "\u00e9nonc": [8, 12, 27, 34, 48, 49, 64, 66, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 87, 91, 93, 107, 128, 129, 133, 135, 141], "ann\u00e9": [8, 12, 13, 34, 44, 77, 86, 140, 141, 152, 171, 173], "minut": [8, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 36, 43, 51, 64, 173], "install": [9, 26, 34, 36, 39, 111, 140, 141, 153, 156, 158, 168], "vrai": [9, 27, 33, 39, 47, 51, 53, 55, 56, 61, 63, 64, 67, 77, 95, 105, 109, 123, 134, 137, 141, 150, 158, 164, 165, 166, 169], "gageur": 9, "J": [9, 21, 28, 51, 63, 64, 67, 97, 103, 117, 141], "archived": 9, "unofficial": 9, "binar": 9, "packag": [9, 12, 26, 35, 111, 112, 113, 122, 140, 154, 158, 168, 170, 171], "maintenu": [9, 12, 44, 168], "veux": [9, 141], "comprendr": [9, 34, 39, 51, 55, 77, 112, 116, 131, 140, 142, 150, 153, 156, 158, 164, 165, 166], "travail": [9, 37, 39, 44, 52, 158], "ingrat": 9, "requiert": [9, 34, 37, 47, 82, 83, 158], "permen": 9, "gohlk": 9, "servic": [9, 141, 150, 169], "shut": 9, "down": [9, 128, 129], "viabl": 9, "ubuntu": [9, 26], "subsystem": 9, "ca": [9, 28, 35, 50, 51, 55, 61, 63, 64, 98, 101, 104, 107, 116, 145, 147, 158, 168], "march": [9, 24, 27, 28, 32, 34, 51, 54, 63, 65, 79, 80, 84, 85, 101, 104, 147, 150, 164, 165, 171], "d\u00e9marr": [9, 52, 171], "serveur": [9, 44, 166, 170], "notebook": [9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 169, 171], "jupyt": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 104, 122], "notebookapp": 9, "token": 9, "password": 9, "acced": [9, 24, 39, 44, 47, 56, 68, 107, 134, 150, 153, 158, 159, 165, 166, 169], "navig": [9, 44, 168], "visual": [9, 12, 44], "studio": [9, 12, 44], "remot": 9, "noyau": 9, "04": [9, 33, 34, 47, 55, 64, 115, 119, 123, 144, 145, 173], "googl": [10, 26, 37, 39, 64, 76, 126, 127, 128, 129], "organis": [10, 39, 98, 109, 141, 150, 152, 158, 166, 168], "concour": 10, "passion": [10, 141], "d\u00e9veloppeur": [10, 28, 154, 156], "assez": [10, 20, 33, 34, 39, 47, 49, 58, 61, 64, 70, 78, 88, 97, 107, 108, 109, 114, 122, 123, 136, 138, 139, 140, 150, 158, 161, 166, 168, 169], "complet": [10, 12, 19, 28, 33, 39, 44, 55, 62, 63, 64, 78, 82, 83, 95, 134, 140, 148, 150, 153, 158, 164, 165, 166], "sujet": [10, 12, 43, 51, 63, 64, 70, 77, 101, 164, 165, 166], "kick": 10, "logic": [10, 126], "personnag": [11, 103], "r\u00e9soud": [11, 16, 78, 79], "tom": [11, 16], "harry": [11, 16], "pott": [11, 16], "fiol": 11, "poison": [11, 115], "vin": 11, "orti": 11, "recul": 11, "imm\u00e9diat": [11, 39, 80, 153, 156, 166], "gauch": [11, 16, 24, 34, 53, 58, 97, 158, 165, 166, 168], "chacun": [11, 16, 24, 27, 33, 34, 50, 88, 100, 115, 126, 141, 146, 150, 158, 164, 165, 168, 171, 173], "contenus": [11, 146, 165], "ni": [11, 39, 40, 94, 95, 106, 117, 141, 150, 158, 162, 164, 165, 173], "enjeu": [11, 44, 169], "insurmont": 11, "einstein": [11, 15, 29, 91], "ma\u00eetris": [12, 44, 158, 164], "h\u00e9ritag": [12, 93, 95, 151, 152], "numpy": [12, 15, 17, 25, 27, 29, 31, 34, 38, 39, 42, 47, 48, 51, 52, 54, 55, 56, 57, 58, 59, 62, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 93, 97, 100, 101, 105, 107, 109, 112, 113, 116, 118, 122, 123, 139, 140, 165, 169, 171], "broadcasting": 12, "xml": [8, 12, 39, 93, 140, 166, 168, 169], "html": [12, 33, 36, 39, 52, 57, 100, 111, 112, 115, 122, 140, 141, 150, 166, 168, 169], "csv": [12, 36, 55, 86, 140, 141, 166, 168], "unitair": [12, 91, 93, 112, 156, 168], "unittest": [12, 118, 168], "git": [12, 166], "pull": 12, "request": [12, 34, 65, 107, 115, 141], "abord": [12, 19, 26, 27, 34, 35, 36, 39, 44, 47, 48, 49, 52, 53, 54, 55, 61, 62, 63, 64, 67, 75, 80, 81, 100, 106, 113, 119, 124, 130, 134, 135, 141, 146, 147, 150, 164, 165, 166, 168, 170, 171, 173], "Elles": [12, 33, 36, 39, 40, 44, 94, 111, 130, 140, 150, 158, 165, 168], "evalu": 12, "s\u00e9anc": [12, 33, 43, 124, 132, 140], "ressourc": [12, 44, 154, 166, 171], "doc": [12, 33, 36, 40, 52, 57, 100, 150], "algortihm": 12, "examen": [12, 42, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "www": [12, 34, 36, 55, 79, 86], "xavierdupr": [12, 34, 122], "fr": [12, 16, 34, 36, 55, 56, 63, 86, 107, 141, 150], "plan": [12, 34, 130], "2022": [12, 36, 55, 66, 107], "aspect": [12, 58, 99, 130, 158, 171], "r\u00e9uss": [12, 34, 37, 39, 51, 82, 83, 119], "getting": 12, "started": 12, "cheat": [12, 38], "sheet": [12, 34, 38], "minicond": [12, 44], "mamb": 12, "\u00e9conom": [12, 77], "logiciel": [12, 34, 39, 104, 140], "ing\u00e9nier": 12, "produir": [12, 71, 150, 153], "fiabl": [12, 47, 55, 118, 168], "collabor": 12, "demain": [12, 141, 142], "intelligent": [12, 43], "artificiel": [12, 36, 43, 84, 85, 86], "nvidi": 12, "hi": 12, "rappel": [12, 14, 33, 37, 39, 55, 64, 70, 88, 141, 158, 164, 165], "feuill": [12, 14, 16, 39, 54, 166], "rout": [12, 14, 36, 59, 64, 124], "_l": 13, "de_rot": [], "classe_d": [], "1h30": 13, "enonc": [13, 30, 32, 42], "09": [14, 16, 17, 27, 33, 34, 47, 55, 64, 109, 161, 165, 171, 173], "06": [14, 27, 33, 34, 47, 55, 77, 99, 165, 166], "ensa": [14, 64], "08": [14, 16, 17, 27, 33, 34, 36, 47, 55, 64, 99, 107, 109, 140, 171, 173], "\u00e9nigm": [14, 15, 29, 91], "hermion": [14, 16], "03": [14, 29, 34, 36, 47, 48, 55, 62, 79, 86, 97, 101, 105, 115, 123, 137, 173], "14": [16, 19, 22, 27, 28, 33, 34, 35, 36, 47, 48, 49, 51, 54, 55, 57, 58, 61, 63, 64, 66, 68, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 97, 100, 101, 104, 108, 109, 110, 112, 116, 117, 119, 123, 125, 126, 131, 134, 137, 141, 142, 143, 145, 148, 161, 164, 168, 173], "s\u00e9rialis": [15, 29, 93, 104, 150, 165, 166, 167, 168], "12": [14, 16, 17, 21, 22, 27, 28, 33, 34, 35, 36, 39, 47, 49, 51, 53, 54, 55, 56, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 97, 100, 101, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 119, 123, 125, 131, 140, 141, 143, 145, 148, 150, 161, 164, 165, 171], "r\u00e9guli": [67, 91, 93, 124, 135, 153, 158, 166, 168, 174], "webscrapping": [], "top": [34, 91, 128, 129, 158], "07": [14, 17, 27, 34, 35, 36, 47, 55, 64, 97, 99, 110, 115, 123, 144, 145], "cartopy": 14, "wsl": 14, "groupby": [15, 29, 34, 36, 86, 108], "gil": [15, 29, 170], "protobuf": [15, 29, 169], "convers": [15, 19, 25, 29, 35, 39, 86, 94, 107, 140, 141, 150, 153, 161, 164, 166, 169], "dam": [15, 29, 150], "hypercub": [15, 29, 164], "voyag": [15, 29, 91, 124], "tsp": [8, 15, 29, 91], "auto_examples_python": 15, "auto_examples_jupyt": 15, "gallery": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "generated": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 100, 158], "go": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 107], "full": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 112, 115, 122, 164, 171], "impl\u00e9mentatin": 16, "Je": [16, 33, 36, 51, 57, 63, 64, 70, 101, 104, 106, 140, 141, 145, 171], "reproduis": [16, 171], "cinq": [16, 27, 44, 63, 100, 105, 134, 158, 165, 168], "maison": 16, "couleur": [16, 24, 78, 130, 144, 150, 158], "vit": [16, 21, 27, 44, 53, 57, 58, 59, 75, 90, 114, 118, 131, 135, 136, 141, 158, 168], "person": [16, 26, 37, 39, 44, 45, 48, 55, 77, 86, 141, 159, 161, 165, 168, 169], "national": [16, 34, 115], "boit": 16, "boisson": 16, "fum": 16, "cigar": 16, "animal": [16, 57, 106], "domest": 16, "roug": [16, 36, 47, 57, 78, 106, 137, 158], "su\u00e9dois": 16, "chien": 16, "danois": 16, "th\u00e9": 16, "vert": [16, 36, 57, 78, 79, 105, 106, 123, 137], "blanch": [16, 137], "propri\u00e9tair": 16, "caf": 16, "pall": 16, "mall": 16, "jaun": [16, 158], "dunhill": 16, "centr": [16, 84, 85, 158, 164], "lait": [16, 88], "norv\u00e9gien": 16, "habit": 16, "homm": [16, 63, 141], "blend": 16, "c\u00f4t": [16, 27, 44, 58, 64, 80, 81, 85, 88, 90, 105, 116, 145, 148, 150], "chat": 16, "cheval": 16, "voisin": [16, 24, 75, 84, 85, 90, 91, 126, 158], "blu": [16, 36, 47, 73, 74, 85, 101, 115, 158], "mast": [16, 55, 158], "bier": 16, "allemand": 16, "princ": 16, "bleu": [16, 57, 78, 106, 158], "eau": [16, 128, 129], "poisson": 16, "essais": [16, 28, 84, 85, 171], "bon": [16, 27, 35, 36, 47, 61, 64, 65, 75, 80, 82, 83, 84, 85, 132, 140, 141, 144, 145, 146, 166], "papi": [16, 43], "reconstitu": 16, "d\u00e9duct": 16, "jeu": [13, 16, 24, 34, 44, 56, 76, 93, 123, 130, 158, 162], "puzzl": [16, 91], "configur": [16, 62, 86, 150, 158, 169], "piec": [16, 118, 126, 127, 166], "bord": [16, 24, 80, 84, 85, 104, 158], "embo\u00eet": 16, "ecrir": [16, 34, 67, 68, 71, 72, 75, 77, 78, 79, 80, 81, 84, 85, 103, 118, 124, 132, 136, 140, 142, 143, 146, 166, 171], "int\u00e9ress": [16, 19, 33, 39, 47, 56, 58, 75, 76, 100, 101, 137, 158, 164, 165, 166, 168, 173], "combinaison": [16, 34, 63, 164], "exprim": [16, 27, 123, 124, 141, 158], "notr": [16, 28, 78, 82, 86, 97, 122, 127, 130, 141], "d\u00e9crit": [16, 58, 64, 124, 134, 150, 153, 158, 164, 165, 168, 173], "num\u00e9ro": [16, 48, 54, 77, 78, 130, 150, 158, 165, 173], "compatibil": 16, "regroup": [16, 33, 35, 39, 59, 130, 150, 152, 153, 158, 164, 165, 166, 168, 169], "cat\u00e9gor": [16, 54, 55, 78, 165, 166], "ordon": [16, 34, 44, 82, 83, 97, 124, 150, 164], "exclus": [16, 150, 165], "compatibl": [16, 26, 171], "incompatibl": 16, "r\u00e9sult": [16, 34, 39, 158, 165], "possibil": [16, 24, 33, 39, 63, 88, 98, 130, 150, 158, 164, 165, 168], "oppos": [16, 33, 48, 94, 102, 164], "Avec": [16, 19, 24, 33, 36, 39, 44, 64, 82, 104, 112, 117, 120, 121, 126, 130, 140, 141, 148, 158, 162, 164, 165, 173], "2023": [16, 36, 39, 45, 55, 64, 86, 161, 165, 171], "\u00e9numer": [16, 33, 124, 143], "per": [16, 26, 33, 34, 35, 53, 61, 77, 80, 81, 83, 90, 101, 107, 108, 109, 119, 122, 131, 137, 141, 147], "cont": [16, 59, 86, 141], "break": [16, 26, 39, 54, 63, 64, 73, 74, 77, 82, 101, 104, 107, 109, 115, 118, 127, 139, 148, 149, 150, 158, 166, 168], "defin": [16, 17, 47], "constraint": 16, "described": 16, "enigm": 16, "gener": 16, "generat": 16, "triplet": [16, 19], "category": [16, 106, 156], "__str__": [16, 39, 94, 95, 96, 130, 131, 153, 166, 168], "__dict__": [16, 25, 39, 150, 158, 166, 168, 169], "al": [16, 65, 141], "260": [16, 34], "combin": [16, 34, 59, 139, 146], "cl1": [16, 164], "cl2": [16, 164], "nothing": 16, "everything": 16, "concaten": [16, 27, 33, 34, 36, 39, 158], "null": [16, 48, 68, 77, 82, 83, 110, 123, 124, 137, 153, 165, 166, 168], "param": [16, 40, 55, 65, 112, 150, 158], "incompatibility": 16, "propert": [16, 39, 158], "compatibility": 16, "combine_cross_set": 16, "set1": 16, "set2": 16, "ruleposit": 16, "overrid": 16, "ruleequivalent": 16, "equivalent": [16, 33, 112], "rulevoisin": 16, "neighbor": [16, 90, 122, 123, 128, 129], "ruleav": 16, "ruleensembl": 16, "element": [16, 34, 55, 87, 114, 150, 154], "categor": [16, 141], "tl": 16, "ttcouleur": 16, "blanc": [16, 24, 39, 40, 57, 106, 150, 165], "ttnationalit": 16, "norvegien": 16, "suedois": 16, "ttboisson": 16, "ttcigar": 16, "bluemast": 16, "ttanimal": 16, "gar": 16, "constituent": [16, 166], "pr\u00e9dicat": 16, "wikipedi": [16, 33, 36, 64, 107, 112, 117, 141], "wik": [16, 141], "calcul_des_pr": 16, "c3": [16, 34, 51, 131, 150], "a9dicat": 16, "_": [16, 26, 28, 33, 47, 51, 54, 64, 78, 79, 80, 81, 82, 83, 105, 120, 121, 123, 140, 147, 152, 173], "solv": [16, 33, 127], "Soit": [16, 28, 34, 64, 80, 81, 102, 124], "appara\u00eet": [16, 19, 36, 39, 54, 99, 132, 138, 140, 141, 142, 150, 156, 158, 164, 165, 166, 168, 169], "incompatibil": 16, "apparaissent": [16, 39, 147, 158, 164, 165, 166, 168], "describ": [16, 34], "defined": [16, 20, 69, 72, 150, 158, 164, 168], "abov": [16, 45, 154], "count": [16, 34, 39, 47, 54, 100, 108, 116, 139, 147, 163, 165, 173], "hous": [16, 128, 129], "color": [16, 28, 47, 73, 74, 78, 97, 101, 144, 145], "to_datafram": 16, "sr": 16, "head": [16, 17, 34, 36, 56, 58, 86, 97, 104, 109, 115, 124, 125, 141], "eploring": 16, "deepness": 16, "empty": [16, 35, 55, 78, 79, 84, 85, 90, 112, 171], "beginning": 16, "recursively": 16, "must": [16, 33, 87, 158, 168], "solved": 16, "unless": 16, "looking": 16, "possibilit": [16, 88], "much": [16, 128, 129], "research": 16, "could": [16, 33, 55], "represented": 16, "creating": 16, "check": [16, 17], "bringing": 16, "back": [16, 34, 55, 112], "50": [16, 17, 33, 34, 35, 36, 47, 53, 58, 69, 78, 81, 82, 84, 85, 90, 101, 102, 105, 106, 110, 112, 115, 122, 123, 128, 129, 141, 147, 150, 158, 164], "70": [16, 33, 36, 47, 53, 86, 110, 113], "80": [16, 36, 47, 54, 64, 86, 101, 105, 110, 115, 116, 119, 123, 154, 158, 164, 165], "90": [16, 17, 36, 47, 55, 64, 79, 86, 90, 105, 108, 141], "100": [16, 17, 18, 19, 22, 25, 26, 33, 34, 35, 36, 38, 47, 48, 53, 54, 55, 56, 57, 58, 61, 64, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 90, 97, 99, 100, 101, 105, 107, 109, 110, 112, 114, 115, 119, 123, 130, 132, 133, 137, 147, 150, 158, 159, 164, 165, 171], "110": [16, 19, 36, 108], "120": [16, 55, 101, 116, 158], "130": [16, 111, 112], "running": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "script": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 52, 57, 168], "757": [16, 33], "plot_einstein_riddl": [16, 29], "ipynb": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 104, 140], "cam": 17, "longrightarrow": 17, "hold": 17, "let": [17, 33, 63, 128, 129], "evaluat": [17, 120, 121], "equal": 17, "pyplot": [17, 28, 33, 34, 35, 36, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 73, 74, 80, 81, 82, 83, 84, 85, 86, 89, 97, 100, 101, 103, 105, 109, 115, 123, 137, 144, 145, 147], "plt": [17, 28, 33, 34, 35, 36, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 73, 74, 80, 81, 82, 83, 84, 85, 86, 89, 97, 100, 101, 103, 105, 109, 115, 123, 137, 144, 145, 147], "rnd": [17, 35, 48, 55, 82, 83, 86, 89, 100, 105, 109, 123, 150, 159], "100000000": 17, "dtyp": [17, 33, 34, 35, 36, 47, 54, 55, 86, 90, 97, 112, 124, 125, 139], "rnd32": 17, "astyp": [17, 33, 35, 36, 54, 86, 105, 112, 171], "very": 17, "revers": [17, 28, 39, 63, 95, 100, 125, 127, 164, 165], "rnd32b": 17, "delt": [17, 27, 34, 47, 51, 55, 77, 79, 158], "980232227667301e": 17, "9802322387695312e": 17, "1707908198488326e": 17, "999999997344628": 17, "hist": [17, 34, 35, 54, 108, 116, 119, 146, 147], "bin": [17, 34, 47, 165, 166], "49963": 17, "50274": 17, "49885": 17, "50054": 17, "49733": 17, "50129": 17, "49661": 17, "50152": 17, "49916": 17, "49935": 17, "49647": 17, "50099": 17, "50316": 17, "50319": 17, "49975": 17, "49752": 17, "49886": 17, "50382": 17, "50160": 17, "50238": 17, "50184": 17, "50064": 17, "49792": 17, "49787": 17, "49753": 17, "49994": 17, "49931": 17, "49798": 17, "49841": 17, "50086": 17, "50181": 17, "49978": 17, "50457": 17, "50287": 17, "49766": 17, "50253": 17, "50568": 17, "49901": 17, "49840": 17, "49741": 17, "49857": 17, "49760": 17, "50226": 17, "50138": 17, "50004": 17, "49938": 17, "50228": 17, "50084": 17, "49850": 17, "50082": 17, "49734": 17, "50173": 17, "49887": 17, "49621": 17, "49718": 17, "49805": 17, "50141": 17, "49961": 17, "50501": 17, "49761": 17, "50147": 17, "50197": 17, "49898": 17, "50178": 17, "50288": 17, "50483": 17, "49879": 17, "49811": 17, "49906": 17, "50340": 17, "49742": 17, "50052": 17, "49591": 17, "49824": 17, "49983": 17, "49990": 17, "50020": 17, "50390": 17, "49613": 17, "50192": 17, "50216": 17, "49993": 17, "50059": 17, "49688": 17, "50088": 17, "49866": 17, "49953": 17, "49624": 17, "50292": 17, "50012": 17, "49604": 17, "49483": 17, "50285": 17, "49823": 17, "50489": 17, "49709": 17, "49928": 17, "49746": 17, "50093": 17, "49853": 17, "49730": 17, "49813": 17, "50102": 17, "50302": 17, "49748": 17, "50388": 17, "50393": 17, "49655": 17, "49947": 17, "49643": 17, "49817": 17, "49908": 17, "49918": 17, "49683": 17, "49782": 17, "50497": 17, "49820": 17, "49987": 17, "50076": 17, "49816": 17, "49657": 17, "49921": 17, "49881": 17, "49648": 17, "49986": 17, "49888": 17, "49905": 17, "50332": 17, "50105": 17, "50166": 17, "50245": 17, "49731": 17, "50165": 17, "49809": 17, "50033": 17, "49802": 17, "50022": 17, "49839": 17, "49826": 17, "50247": 17, "50104": 17, "49592": 17, "50273": 17, "50137": 17, "50227": 17, "49907": 17, "50202": 17, "49952": 17, "49914": 17, "50235": 17, "50083": 17, "50450": 17, "49899": 17, "50036": 17, "49758": 17, "49950": 17, "49996": 17, "49790": 17, "50414": 17, "50297": 17, "49751": 17, "49480": 17, "49489": 17, "49785": 17, "49874": 17, "49945": 17, "50043": 17, "50145": 17, "49877": 17, "50278": 17, "49836": 17, "50107": 17, "49948": 17, "49279": 17, "49904": 17, "50017": 17, "50133": 17, "49863": 17, "50190": 17, "50115": 17, "49939": 17, "50015": 17, "49774": 17, "50035": 17, "50379": 17, "50003": 17, "50016": 17, "49788": 17, "50087": 17, "49708": 17, "50130": 17, "50260": 17, "49681": 17, "49662": 17, "50208": 17, "49763": 17, "50024": 17, "49744": 17, "50044": 17, "49674": 17, "49949": 17, "50261": 17, "50042": 17, "50134": 17, "49911": 17, "50275": 17, "49408": 17, "50177": 17, "49783": 17, "49968": 17, "50222": 17, "49849": 17, "50005": 17, "50396": 17, "50019": 17, "49992": 17, "49871": 17, "50161": 17, "99841": 17, "99472": 17, "99613": 17, "99570": 17, "100289": 17, "100046": 17, "100464": 17, "100077": 17, "99902": 17, "100140": 17, "99892": 17, "99336": 17, "100654": 17, "100032": 17, "99882": 17, "100233": 17, "99706": 17, "99981": 17, "100122": 17, "100066": 17, "100084": 17, "100226": 17, "99957": 17, "100230": 17, "99782": 17, "99795": 17, "99914": 17, "100052": 17, "99722": 17, "99873": 17, "99665": 17, "100297": 17, "100168": 17, "100247": 17, "100509": 17, "99821": 17, "100015": 17, "99970": 17, "100271": 17, "100113": 17, "99704": 17, "99924": 17, "99497": 17, "99879": 17, "100078": 17, "100590": 17, "100155": 17, "100030": 17, "100112": 17, "99917": 17, "99124": 17, "99846": 17, "100344": 17, "100118": 17, "99798": 17, "100236": 17, "100274": 17, "100051": 17, "100196": 17, "100043": 17, "100137": 17, "99984": 17, "99826": 17, "99716": 17, "99660": 17, "99822": 17, "100393": 17, "99941": 17, "99862": 17, "100641": 17, "100095": 17, "100088": 17, "99847": 17, "99198": 17, "99916": 17, "99414": 17, "100164": 17, "99949": 17, "100409": 17, "99758": 17, "99420": 17, "99787": 17, "99788": 17, "100121": 17, "99967": 17, "100436": 17, "99526": 17, "99854": 17, "99776": 17, "100049": 17, "100552": 17, "100275": 17, "100355": 17, "100448": 17, "99767": 17, "99811": 17, "100036": 17, "99458": 17, "100199": 17, "99557": 17, "100008": 17, "99978": [17, 68], "100061": 17, "99920": 17, "100161": 17, "100173": 17, "99995": 17, "99802": 17, "100134": 17, "99884": 17, "100519": 17, "100114": 17, "100338": 17, "100384": 17, "100487": 17, "100295": 17, "100353": 17, "149916": 17, "149310": 17, "150333": 17, "150416": 17, "149839": 17, "149529": 17, "149478": 17, "149822": 17, "150292": 17, "149622": 17, "150233": 17, "149203": 17, "149940": 17, "150204": 17, "149900": 17, "149963": 17, "150287": 17, "150257": 17, "150414": 17, "150056": 17, "149964": 17, "151025": 17, "149675": 17, "149890": 17, "151035": 17, "150350": 17, "149381": 17, "149941": 17, "150470": 17, "150331": 17, "149950": 17, "149953": 17, "150112": 17, "149990": 17, "150477": 17, "150156": 17, "150109": 17, "149977": 17, "150421": 17, "149519": 17, "151008": 17, "149814": 17, "149479": 17, "149595": 17, "150369": 17, "149581": 17, "150004": 17, "149167": 17, "150247": 17, "150415": 17, "150249": 17, "149402": 17, "149923": 17, "149681": 17, "150040": 17, "149639": 17, "149461": 17, "149496": 17, "150013": 17, "149688": 17, "150318": 17, "150323": 17, "174958": 17, "200380": 17, "200487": 17, "199979": 17, "199974": 17, "200539": 17, "199565": 17, "199848": 17, "199602": 17, "199515": 17, "200357": 17, "199935": 17, "200333": 17, "199853": 17, "200144": 17, "200925": 17, "199464": 17, "199975": 17, "200546": 17, "200259": 17, "200033": 17, "199956": 17, "200055": 17, "199891": 17, "199670": 17, "200423": 17, "199857": 17, "200214": 17, "199431": 17, "199938": 17, "199933": 17, "212276": 17, "250392": 17, "249715": 17, "249747": 17, "249827": 17, "250570": 17, "250006": 17, "249926": 17, "250680": 17, "250132": 17, "250351": 17, "250300": 17, "250327": 17, "250551": 17, "249389": 17, "250261": 17, "280722": 17, "300724": 17, "301269": 17, "300319": 17, "299673": 17, "300174": 17, "300393": 17, "300941": 17, "340075": 17, "349606": 17, "350175": 17, "351367": 17, "394785": 17, "399463": 17, "446456": 17, "547868": 17, "547248": 17, "447345": 17, "400413": 17, "394336": 17, "350453": 17, "350374": 17, "349853": 17, "340744": 17, "299696": 17, "299264": 17, "299623": 17, "299284": 17, "300180": 17, "299422": 17, "299690": 17, "281928": 17, "249661": 17, "250987": 17, "249624": 17, "249525": 17, "248930": 17, "251016": 17, "250459": 17, "250537": 17, "249421": 17, "249530": 17, "249440": 17, "249875": 17, "249011": 17, "249793": 17, "250569": 17, "212539": 17, "200256": 17, "200108": 17, "199669": 17, "199862": 17, "200887": 17, "199813": 17, "200385": 17, "200691": 17, "200857": 17, "200403": 17, "200283": 17, "199814": 17, "200289": 17, "200272": 17, "200454": 17, "200592": 17, "199948": 17, "199647": 17, "199503": 17, "200097": 17, "200132": 17, "199746": 17, "199954": 17, "199949": 17, "199618": 17, "200507": 17, "200126": 17, "199233": 17, "200287": 17, "175179": 17, "150726": 17, "149757": 17, "150029": 17, "150176": 17, "149998": 17, "150113": 17, "149526": 17, "149565": 17, "149543": 17, "149889": 17, "149088": 17, "149663": 17, "149666": 17, "150393": 17, "149490": 17, "150285": 17, "150222": 17, "150432": 17, "149297": 17, "150460": 17, "149597": 17, "150348": 17, "149642": 17, "150655": 17, "149625": 17, "150082": 17, "149435": 17, "149608": 17, "149885": 17, "149973": 17, "150121": 17, "150509": 17, "149865": 17, "150074": 17, "150354": 17, "148577": 17, "149716": 17, "149784": 17, "149172": 17, "150505": 17, "149303": 17, "150089": 17, "150644": 17, "150181": 17, "149798": 17, "149730": 17, "150859": 17, "149222": 17, "150063": 17, "151217": 17, "150147": 17, "149463": 17, "150120": 17, "150357": 17, "149538": 17, "150067": 17, "100091": 17, "99883": 17, "99982": 17, "100185": 17, "100085": 17, "99848": 17, "100011": 17, "99997": 17, "99872": 17, "99794": 17, "100504": 17, "100183": 17, "100429": 17, "99615": 17, "99806": 17, "100723": 17, "99747": 17, "99803": 17, "99654": 17, "99971": 17, "99572": 17, "100242": 17, "99756": 17, "99531": 17, "100722": 17, "99663": 17, "100108": 17, "99875": 17, "100462": 17, "99437": 17, "99581": 17, "100076": 17, "100186": 17, "100307": 17, "100105": 17, "100386": 17, "99829": 17, "99786": 17, "99972": 17, "99824": 17, "99928": 17, "99880": 17, "99724": 17, "99721": 17, "99739": 17, "100647": 17, "99951": 17, "99792": 17, "99698": 17, "99975": 17, "99938": 17, "99968": 17, "99515": 17, "100209": 17, "99309": 17, "100301": 17, "100103": 17, "100322": 17, "99192": 17, "100235": 17, "100017": 17, "99752": 17, "99516": 17, "99919": 17, "100142": 17, "99732": 17, "100298": 17, "99714": 17, "100146": 17, "100457": 17, "100696": 17, "100055": 17, "100280": 17, "100281": 17, "99773": 17, "99778": 17, "99540": 17, "100063": 17, "99904": 17, "100059": 17, "100266": 17, "100221": 17, "99878": 17, "99400": 17, "100034": 17, "100087": 17, "100174": 17, "100219": 17, "99889": 17, "99893": 17, "99386": 17, "99690": 17, "100326": 17, "100277": 17, "100292": 17, "99751": 17, "99994": 17, "100166": 17, "99851": 17, "99774": 17, "50030": 17, "49828": 17, "50470": 17, "49443": 17, "49982": 17, "50072": 17, "50144": 17, "50031": 17, "49959": 17, "50323": 17, "49980": 17, "50461": 17, "49985": 17, "49872": 17, "49933": 17, "50142": 17, "49749": 17, "49580": 17, "50557": 17, "50000": [17, 68], "50610": 17, "50520": 17, "50295": 17, "49884": 17, "49977": 17, "50317": 17, "50221": 17, "49889": 17, "49543": 17, "49727": 17, "50151": 17, "50334": 17, "50175": 17, "50195": 17, "50283": 17, "50174": 17, "50026": 17, "50154": 17, "49909": 17, "50127": 17, "49689": 17, "49846": 17, "50121": 17, "49808": 17, "50220": 17, "49868": 17, "49654": 17, "50366": 17, "50075": 17, "50249": 17, "49649": 17, "49867": 17, "49737": 17, "50365": 17, "50071": 17, "49927": 17, "50320": 17, "49960": 17, "49936": 17, "50112": 17, "49780": 17, "50464": 17, "49912": 17, "50179": 17, "49786": 17, "50417": 17, "50055": 17, "49747": 17, "49728": 17, "50298": 17, "50309": 17, "50013": 17, "49142": 17, "49869": 17, "49954": 17, "50056": 17, "49913": 17, "50358": 17, "49984": 17, "49997": 17, "50187": 17, "49762": 17, "50078": 17, "50196": 17, "50156": 17, "49832": 17, "50362": 17, "49653": 17, "50215": 17, "50100": 17, "50243": 17, "49859": 17, "50531": 17, "49923": 17, "50029": 17, "50236": 17, "49796": 17, "50574": 17, "49842": 17, "50040": 17, "50188": 17, "49951": 17, "49969": 17, "49509": 17, "50011": 17, "50354": 17, "50109": 17, "50242": 17, "50096": 17, "50014": 17, "49932": 17, "50350": 17, "49979": 17, "50255": 17, "49838": 17, "49891": 17, "50185": 17, "50209": 17, "50342": 17, "49903": 17, "49981": 17, "49970": 17, "50200": 17, "50456": 17, "50094": 17, "49865": 17, "50356": 17, "49937": 17, "50169": 17, "50444": 17, "50308": 17, "50257": 17, "49781": 17, "50079": 17, "50047": 17, "49641": 17, "49827": 17, "49515": 17, "50180": 17, "49897": 17, "49626": 17, "49704": 17, "49685": 17, "49989": 17, "50158": 17, "49797": 17, "50131": 17, "50117": 17, "50066": 17, "50296": 17, "50448": 17, "50279": 17, "98023223e": 17, "97427176e": 17, "96831130e": 17, "96831131e": 17, "97427177e": 17, "98023224e": 17, "barcontain": 17, "artist": [17, 173], "finally": [17, 164], "numper": 17, "remain": 17, "100000": [17, 18, 33, 34, 55, 58, 68, 73, 74, 99, 100, 111, 116, 166, 168, 171], "randint": [17, 28, 33, 34, 35, 47, 53, 54, 59, 61, 64, 69, 72, 75, 78, 79, 82, 83, 84, 85, 97, 100, 105, 108, 119, 132, 133, 139, 149, 150, 159, 171], "d32": 17, "d64": 17, "rais": [17, 37, 39, 40, 50, 61, 65, 77, 86, 87, 94, 95, 112, 118, 139, 150, 153, 154, 164, 173], "imagin": [17, 56, 80, 81, 97, 103, 125, 126, 137, 138, 139], "now": [17, 64, 161, 165], "want": [17, 33, 128, 129], "converted": 17, "find_interval": 17, "dx": [17, 62, 84, 85, 111, 116, 136], "ab": [17, 19, 33, 47, 48, 51, 73, 79, 80, 81, 83, 85, 87, 101, 110, 125, 130, 137, 141, 150, 152, 164, 165], "usually": 17, "x1": [17, 28, 33, 69, 84, 85, 89, 118], "x2": [17, 33, 69, 80, 81, 84, 85, 89, 101, 118, 134], "zeros": [17, 22, 33, 35, 47, 51, 54, 55, 56, 78, 82, 83, 86, 97, 112, 113, 118, 139], "2000": [17, 48, 55, 109, 111, 123, 171, 173], "6340828485576307e": 17, "9604587931971764e": 17, "37": [17, 33, 34, 36, 47, 63, 64, 77, 83, 97, 112, 131, 134, 141, 147, 164, 165], "57": [17, 33, 34, 36, 64, 82, 90, 108, 133, 147, 171], "103": [17, 33], "239": [17, 33, 34, 77, 158], "490": 17, "1039": 17, "63408285e": 17, "19565316e": 17, "38767224e": 17, "57969131e": 17, "77171039e": 17, "96372947e": 17, "15574854e": 17, "34776762e": 17, "53978670e": 17, "07318058e": 17, "19238249e": 17, "31158439e": 17, "43078630e": 17, "54998821e": 17, "66919012e": 17, "78839202e": 17, "90759393e": 17, "02679584e": 17, "14599775e": 17, "26519965e": 17, "38440156e": 17, "50360347e": 17, "62280538e": 17, "74200729e": 17, "86120919e": 17, "98041110e": 17, "09961301e": 17, "21881492e": 17, "33801682e": 17, "45721873e": 17, "57642064e": 17, "69562255e": 17, "81482445e": 17, "93402636e": 17, "05322827e": 17, "17243018e": 17, "29163209e": 17, "41083399e": 17, "53003590e": 17, "64923781e": 17, "76843972e": 17, "88764162e": 17, "00684353e": 17, "12604544e": 17, "24524735e": 17, "36444925e": 17, "48365116e": 17, "60285307e": 17, "72205498e": 17, "84125689e": 17, "96045879e": 17, "something": [17, 140, 146, 173], "ql": 17, "952199622072385e": 17, "estimat": [17, 47], "left": [17, 27, 33, 34, 35, 53, 58, 70, 77, 79, 87, 96, 109, 120, 121, 123, 124, 125, 126, 127, 136, 137, 158, 164, 165], "x_": [17, 55, 103, 120, 121, 137], "64": [17, 33, 34, 36, 47, 53, 60, 64, 75, 77, 86, 97, 110, 115, 166], "right": [17, 27, 33, 34, 35, 45, 47, 53, 58, 70, 77, 79, 87, 96, 104, 109, 120, 121, 123, 124, 125, 126, 127, 136, 137, 147, 158, 165], "inf_strict": 17, "f1": [17, 107, 166, 171], "f2": [17, 107, 166, 171, 173], "count_event": 17, "di": [17, 39, 54, 55, 56, 150], "1001": [17, 33, 68, 137], "ratio": [17, 47, 55, 61, 82, 83, 105, 123], "3569796598651465e": 17, "661": [17, 33], "1026": 17, "190": [17, 77], "1309179281937531e": 17, "837": 17, "993": 17, "290": [17, 34, 154], "7261378904009916e": 17, "889": 17, "1007": [17, 35], "390": 17, "32135785260823e": 17, "923": 17, "1016": 17, "9165778148154686e": 17, "942": 17, "991": [17, 33], "590": 17, "511797777022707e": 17, "938": 17, "987": 17, "690": 17, "1070177392299456e": 17, "929": [17, 33], "980": 17, "790": 17, "702237701437184e": 17, "957": 17, "999": [17, 27, 114, 164], "890": [17, 86, 165], "297457663644423e": 17, "979": 17, "1013": [17, 68], "990": 17, "892677625851661e": 17, "1025": 17, "952200e": 17, "028600": 17, "1014": 17, "190440e": 17, "033597": 17, "1012": 17, "785660e": 17, "047666": 17, "380880e": 17, "059761": 17, "1004": 17, "976100e": 17, "070157": 17, "955": 17, "plot": [17, 28, 30, 33, 35, 36, 47, 48, 53, 55, 56, 58, 59, 61, 62, 64, 73, 74, 80, 81, 82, 83, 84, 85, 86, 89, 97, 101, 103, 105, 109, 110, 119, 123, 137, 147], "axe": [17, 34, 55, 73, 74, 136, 158], "xlabel": [17, 47, 147], "logx": [17, 58], "inf_equal": 17, "df2": [17, 36, 86, 97, 104], "988": 17, "1006": [17, 35], "954": 17, "1011": [17, 165], "995": [17, 35], "1042": 17, "1020": 17, "994": 17, "1002": [17, 36, 74], "983": [17, 33], "ax": [17, 33, 34, 36, 47, 48, 54, 55, 56, 58, 59, 61, 62, 64, 73, 74, 82, 83, 84, 85, 86, 89, 97, 101, 103, 115, 123, 137, 144, 145, 147], "label": [17, 36, 47, 53, 57, 61, 64, 84, 86, 97, 101, 123, 128, 129, 147, 158, 164, 171], "sup_strict": 17, "df3": [17, 104], "660": 17, "998": [17, 81], "789": [17, 81, 154], "870": 17, "925": 17, "895": 17, "977": [17, 33], "1036": 17, "952": 17, "963": 17, "1034": 17, "030542": 17, "1015": 17, "045862": 17, "1003": [17, 86, 87], "061825": 17, "1019": 17, "072614": 17, "964": 17, "089910": 17, "sup_equal": 17, "df4": 17, "1052": 17, "1029": 17, "971": [17, 33], "1031": 17, "976": [17, 36], "984": [17, 47], "1023": 17, "981": 17, "inf_strict_neg": 17, "dfn": 17, "982": 17, "970": 17, "953": [17, 33, 113], "989": 17, "1021": 17, "1018": 17, "As": [17, 128, 129], "soon": 17, "rounded": 17, "inequality": 17, "long": [17, 18, 20, 34, 35, 39, 53, 57, 59, 63, 64, 69, 101, 103, 107, 112, 116, 119, 125, 131, 140, 146, 158, 165, 166, 171], "howev": 17, "handl": 17, "templat": [17, 141], "inequalit": 17, "easi": 17, "articl": [17, 33, 43, 55, 63, 64, 120, 121, 140, 144, 145, 146, 147, 150, 171], "according": 17, "processing": [17, 170], "cost": [17, 87], "versus": [17, 36], "44": [17, 22, 33, 34, 36, 64, 83, 106, 112, 147, 150, 161], "502": 17, "plot_float_and_double_rouding": [17, 26, 29], "global": [18, 19, 22, 24, 25, 26, 38, 39, 69, 90, 112, 150, 158, 170], "interpret": [18, 34, 51, 111, 112, 142, 148, 150, 153, 164, 165, 170], "verrou": [18, 171], "auquel": [18, 39, 99, 100, 112, 114, 158, 165, 168], "proteg": [18, 39, 40, 153, 171], "contr": [18, 56, 64, 107, 153, 171], "acces": [18, 19, 25, 26, 36, 39, 40, 103, 135, 150, 154, 158, 164, 166, 168, 171], "concurrentiel": [18, 171], "mesur": [18, 24, 25, 47, 53, 58, 77, 87, 103, 108, 111, 112, 113, 116, 119, 126, 131, 138, 141, 158, 168, 171, 173], "n\u00e9cessair": [18, 24, 27, 33, 34, 39, 40, 44, 53, 57, 58, 59, 64, 67, 69, 77, 79, 82, 83, 109, 111, 113, 118, 125, 137, 141, 148, 150, 153, 154, 156, 158, 164, 165, 166, 168, 169, 171], "timeit": [18, 22, 25, 26, 33, 34, 35, 53, 61, 77, 80, 81, 83, 90, 101, 103, 107, 108, 109, 112, 119, 122, 131, 137, 147, 159], "concurrent": 18, "futur": [18, 168], "threadpoolexecutor": [18, 171], "create_list": 18, "2903062000000318": 18, "run2": 18, "max_worker": [18, 171], "executor": [18, 171], "186134000000038": 18, "lanc": [18, 39, 40, 57, 64, 106, 154, 156, 166, 171], "synchronis": [18, 161, 170], "termin": [18, 39, 53, 75, 116, 134, 139, 140, 154, 158, 164, 165, 166, 171], "mettr": [18, 33, 39, 80, 82, 83, 100, 103, 125, 158, 164, 173], "jour": [18, 44, 48, 55, 56, 57, 65, 75, 80, 81, 86, 87, 106, 124, 125, 126, 139, 140, 141, 150, 158, 161, 165, 166, 168, 173], "impos": [18, 26, 28, 34, 107, 150, 158, 165, 169], "mis": [18, 27, 39, 44, 48, 53, 75, 80, 124, 139, 143, 150, 158, 165, 166, 168], "lieu": [18, 19, 27, 34, 49, 54, 90, 95, 130, 150, 158, 164, 168, 171, 173], "va": [18, 28, 33, 39, 44, 59, 64, 65, 67, 77, 79, 80, 82, 102, 124, 127, 131, 141, 149, 150, 156, 158, 164, 165, 166, 168, 171], "009": [18, 24, 111], "9424862000000758": 18, "run3": 18, "001": [18, 19, 27, 55, 89, 111, 112, 122, 130, 171], "3570157000001473": 18, "signific": 18, "788": [18, 111], "plot_gil_exampl": [18, 26, 29], "r\u00e9\u00e9crir": [19, 34, 37, 44, 87, 94, 132, 134, 150, 154], "u": [19, 25, 47, 57, 63, 65, 106, 114, 141, 147, 169], "compteur": [19, 105], "u_st": 19, "u_non_recurs": 19, "u0": 19, "u1": 19, "u2": 19, "tand": [19, 39, 150, 158, 164, 165, 166, 168], "\u00e8me": [19, 165], "cons\u00e9quent": [19, 27, 28, 33, 39, 53, 65, 77, 130, 149, 150, 153, 158, 164, 165, 168, 171, 173], "longueur": [19, 27, 28, 33, 34, 39, 53, 54, 57, 63, 64, 65, 69, 71, 77, 88, 89, 91, 107, 116, 124, 131, 135, 148, 162, 164, 165, 166, 171], "arr\u00eat": [19, 39, 81, 87, 100, 105, 111, 134, 140, 149, 153, 156, 164, 171], "compare_l": 19, "q": [19, 54, 57, 63, 75, 86, 120, 121, 126, 127, 141], "g\u00e9ometr": [19, 68, 69, 101], "frac": [19, 27, 33, 35, 47, 53, 55, 56, 58, 67, 68, 69, 70, 77, 78, 79, 81, 82, 83, 105, 117, 120, 121, 123, 126, 136, 137, 145, 149, 150], "sum_": [19, 33, 34, 35, 47, 53, 67, 68, 69, 78, 79, 80, 81, 82, 83, 105, 117, 120, 121, 123, 124, 125, 126, 127, 136, 137, 142, 143], "infty": [19, 68, 124], "convergent": [19, 33, 59, 70], "infin": [19, 43, 54, 58, 77, 124, 148, 154, 164, 173], "outr": [19, 39, 141, 158], "perm": [19, 34, 44, 45, 53, 58, 59, 62, 65, 95, 112, 152], "estim": [19, 32, 65, 77, 105, 137, 146, 150, 168], "suite_geometrique_1": 19, "1075": 19, "informaticien": [19, 152], "exp\u00e9riment": 19, "suite_geometrique_2": 19, "yold": 19, "55": [19, 33, 36, 49, 64, 78, 79, 88, 97, 137, 143, 147, 165], "reper": [19, 65, 87, 144, 145, 165], "17": [19, 21, 27, 28, 33, 34, 35, 47, 52, 54, 55, 58, 61, 63, 64, 68, 69, 70, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 97, 100, 101, 104, 110, 112, 113, 116, 117, 123, 124, 130, 137, 140, 143, 145, 148, 150, 154, 158, 161, 164, 165], "mainten": [19, 25, 27, 28, 31, 34, 44, 51, 55, 57, 61, 64, 79, 94, 102, 109, 112, 126, 130, 132, 134, 137, 141, 142, 148, 150, 158, 165, 171], "agit": [19, 33, 34, 39, 55, 59, 64, 75, 107, 112, 142, 143, 144, 145, 146, 150, 158, 164, 165, 166, 169, 171], "savoir": [19, 24, 28, 33, 34, 36, 39, 43, 55, 60, 66, 70, 75, 77, 94, 101, 112, 118, 122, 134, 142, 146, 147, 149, 150, 153, 158, 164, 165, 166, 171], "approxim": [19, 27, 36, 39, 55, 64, 78, 79, 81, 90, 136, 137], "devient": [19, 47, 53, 69, 116, 123, 150, 158, 164, 165, 168, 169, 171, 173], "nul": [19, 35, 39, 48, 54, 61, 69, 82, 111, 116, 123, 139, 153, 165], "1055": 19, "toutefois": [19, 116, 150, 154, 158, 164, 165], "indispens": [19, 39, 118, 130, 141, 150, 156, 164], "loin": [19, 63, 64, 112, 150, 164, 165, 166], "000": [19, 29, 33, 34, 35, 53, 78, 90, 101, 107, 108, 111, 112, 113, 119, 122, 137, 147, 165], "remarqu": [19, 33, 39, 54, 63, 64, 67, 75, 77, 79, 82, 83, 102, 150, 164, 165, 169, 171], "\u00e9volu": [19, 33, 39, 40, 44, 47, 51, 55, 58, 122, 156, 158, 164, 165, 166, 171, 173], "addition": [19, 69, 77, 97, 164], "valid": [19, 39, 47, 94, 112, 118, 119, 122, 130, 150, 158, 164, 165, 166, 173], "s_n": 19, "croiss": [19, 34, 35, 39, 53, 57, 64, 77, 79, 80, 81, 100, 101, 103, 124, 125, 134, 150, 164, 165], "u_i": [19, 137], "u_n": [19, 70, 150], "d\u00e9croiss": [19, 27, 39, 47, 57, 58, 79, 134, 137, 165], "chercheur": [19, 44], "success": [19, 33, 57, 137, 150, 158, 164, 165, 168], "01100111": 19, "011": [19, 111, 113], "111": [19, 35, 36, 64, 112], "hyper_cube_l": 19, "hyper_cube_dico": 19, "ind": [19, 90, 112, 141], "cle": [19, 39, 57, 65, 116, 134, 135], "choix": [19, 63, 64, 82, 87, 124, 125, 141, 146, 148, 150, 164, 165, 169], "hyper_cub": 19, "Sur": [19, 61, 67], "port": [19, 27, 34, 36, 39, 43, 134, 140, 150, 168, 171], "prior": [19, 20, 39, 58, 61, 78, 116, 137, 150, 168], "occurrence2": 19, "uplet": 19, "recevr": [19, 150], "fr\u00e9quenc": [19, 47, 65, 116, 134, 146, 147, 158, 171], "curios": 19, "occurrence3": 19, "hyper_cube_liste2": 19, "m2": [19, 27, 50, 51, 57, 61, 75, 80, 81, 86, 150, 158, 171], "occurrence4": 19, "hyper_cube_liste3": 19, "occurrence5": 19, "018": [19, 111], "plot_hypercub": [19, 26, 29], "esthet": 20, "fix": [20, 39, 47, 54, 77, 100, 116, 122, 134, 135, 152, 164, 165], "twoarg": 20, "onearg": 20, "retard": [20, 44, 168], "fcts_a": 20, "fcts_b": 20, "partagent": [20, 34, 158], "distinct": [20, 34, 48, 54, 78, 80, 81, 94, 100, 119, 159, 165], "pylint": 20, "surg": 20, "warning": [20, 54, 118, 155, 173], "w0640": 20, "loop": [20, 33, 34, 35, 37, 53, 54, 58, 61, 62, 77, 80, 81, 83, 90, 101, 107, 108, 109, 119, 122, 131, 137, 147, 171], "004": [20, 111, 112], "plot_lambda_funct": [20, 26, 29], "mont": [21, 77, 91, 168], "dout": [21, 28, 33, 39, 59, 75, 82, 83, 87, 90, 141, 146, 158, 164, 165], "itertool": [21, 62, 131], "op": [21, 165], "parenthes": [21, 39, 134, 143, 150, 153, 164, 165, 173], "pn": 21, "po": 21, "eval": 21, "zerodivisionerror": [21, 39, 153], "666": [21, 69], "plot_matador": [21, 29], "13": [22, 27, 28, 33, 34, 35, 36, 47, 49, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 97, 100, 101, 104, 109, 110, 111, 112, 115, 116, 119, 123, 125, 137, 141, 143, 147, 148, 150, 154, 158, 161, 164], "23": [22, 26, 33, 34, 35, 36, 47, 54, 55, 58, 64, 66, 69, 75, 77, 78, 80, 84, 85, 86, 87, 90, 104, 112, 113, 116, 123, 126, 130, 134, 137, 140, 147, 148, 161, 164, 165, 171], "41": [22, 33, 34, 36, 54, 90, 112, 115, 134, 147, 150, 164, 165], "42": [22, 33, 34, 36, 55, 64, 75, 79, 112, 134, 147, 150, 165], "0199993741698563e": 22, "05": [22, 25, 26, 27, 33, 34, 39, 47, 55, 58, 97, 100, 107, 161, 173], "599999763537198e": 22, "air": [22, 27, 28, 105, 136, 141], "n\u00e9anmoin": [22, 39, 44, 61, 64, 90, 94, 111, 132, 150, 153, 158, 159, 164, 165, 168, 169], "temporair": [22, 40, 165], "005": [22, 112, 113], "plot_numpy_trick": [22, 26, 29], "tour": [23, 59, 64, 102, 118, 130, 158, 164, 168], "nan": [23, 33, 34, 55, 82, 83, 86, 107, 110, 141], "disparu": 23, "comport": [23, 39, 47, 55, 80, 124, 150, 158, 165, 166], "attendu": [23, 28, 33, 37, 39, 75, 77, 87, 90, 100, 109, 111, 164, 171], "corrig": [23, 27, 28, 37, 39, 55, 69, 72, 86, 116, 142, 143, 154, 156], "tir": [23, 33, 34, 35, 54, 55, 56, 58, 72, 78, 82, 83, 84, 85, 100, 105, 116, 120, 121, 126, 127, 128, 129, 137, 139, 144, 145, 168, 171], "dropn": 23, "580": [23, 111], "plot_pandas_groupby": [23, 26, 29], "quar": 24, "pion": 24, "vingt": 24, "noir": [24, 57, 106, 137, 150, 158], "39": [24, 33, 34, 35, 36, 47, 51, 56, 57, 61, 63, 64, 65, 68, 69, 70, 71, 72, 75, 77, 78, 79, 83, 84, 85, 89, 90, 94, 98, 103, 104, 106, 107, 111, 112, 113, 115, 116, 117, 122, 123, 124, 125, 134, 135, 140, 141, 146, 147, 148], "dami": 24, "enti": [24, 33, 34, 35, 39, 44, 47, 49, 60, 69, 94, 95, 100, 114, 120, 121, 127, 130, 143, 148, 150, 153, 158, 164, 165, 166, 169, 171], "reli": [24, 28, 39, 43, 48, 54, 59, 63, 64, 86, 125, 150, 158, 164, 168, 171], "vitess": [24, 130, 169], "utilisent": [24, 33, 35, 39, 130, 135, 152, 165, 171], "sembl": [24, 36, 47, 48, 54, 83, 132], "r\u00e9pons": [24, 27, 30, 32, 39, 49, 68, 77, 78, 80, 81, 82, 83, 87, 91, 102, 127, 129, 131, 149, 158, 164, 166], "pratiqu": [24, 33, 44, 47, 63, 148, 156, 158, 159, 161, 164, 165, 167, 173], "voisinag": [24, 84, 85], "quatr": [24, 27, 34, 39, 55, 65, 69, 76, 102, 103, 112, 118, 134, 141, 142, 150, 153, 164, 165, 166, 170, 171, 173], "coin": [24, 158], "libr": [24, 86], "sait": [24, 27, 34, 44, 53, 58, 63, 64, 77, 82, 83, 84, 85, 86, 94, 95, 101, 112, 124, 137, 140, 143, 148, 153, 154, 164, 165, 171], "contenu": [24, 27, 39, 40, 43, 115, 140, 141, 149, 150, 158, 164, 165, 166, 168], "revu": [24, 53, 127, 149, 170], "occup": [24, 75, 126, 158, 162, 166, 171], "assembl": [24, 44, 119, 148, 166], "num\u00e9rot": [24, 54, 102, 126, 145], "99": [24, 27, 34, 36, 47, 61, 82, 86, 90, 97, 119, 147, 150, 164], "Quels": [24, 33, 124], "d\u00e9sir": [24, 27, 51, 132, 141, 150, 153, 158, 164, 165, 166, 168], "dix": [24, 44, 47, 87, 142, 146, 150, 164, 165], "vid": [24, 34, 39, 53, 59, 75, 76, 80, 126, 134, 138, 139, 148, 150, 158, 164, 165, 166, 168], "adversair": 24, "indiqu": [24, 25, 33, 34, 36, 39, 40, 44, 52, 53, 70, 77, 87, 94, 107, 126, 137, 140, 143, 146, 149, 150, 153, 156, 158, 164, 165, 166, 168, 169, 171], "d\u00e9plac": [24, 58, 70, 80, 114, 149, 158, 166], "pion_prendr": 24, "advers": 24, "haut": [24, 25, 35, 58, 82, 88, 97, 134, 153, 158, 164, 173], "\u00e9chou": [24, 51, 81, 150, 153, 168], "pion_prendre_dict": 24, "damier_dict": 24, "laiss": [24, 28, 39, 51, 63, 64, 77, 82, 83, 141, 145, 158, 165], "manqu": [24, 34, 35, 36, 39, 55, 64, 69, 113, 142, 143, 164, 165], "restent": [24, 36, 150], "\u00e9chiqui": [24, 33], "pion_prendre_list": 24, "carr": [24, 27, 33, 39, 76, 77, 78, 80, 81, 85, 88, 93, 105, 116, 117, 123, 140, 141, 142, 143, 148, 150, 164, 165, 168], "damier_list": 24, "extend": [24, 39, 64, 71, 75, 89, 165, 166], "pres": [24, 33, 36, 77, 85, 90, 101, 103, 109, 136, 140, 147, 150, 153, 158, 164, 165], "hor": [24, 70, 84, 85, 101, 130, 150], "devr": [24, 28, 33, 44, 57, 64, 70, 101, 147, 150, 162, 164, 165, 171], "pion_prendre_bord": 24, "accept": [24, 34, 39, 79, 123, 132, 150, 158, 164, 165, 166, 173], "n\u00e9gat": [24, 27, 53, 69, 77, 86, 153, 163, 164, 165, 173], "plot_partie_dam": [24, 26, 29], "explor": [25, 28, 64, 75, 101, 150, 166], "notemm": 25, "api": [25, 156, 169, 171], "bytesio": [25, 26, 169], "ujson": [25, 107], "cloudpickl": [25, 107], "record": [25, 34, 104, 156, 169], "nom": [25, 33, 34, 36, 39, 40, 44, 53, 64, 67, 98, 103, 104, 107, 115, 118, 134, 140, 141, 147, 148, 150, 153, 158, 159, 164, 165, 169, 171, 173], "xavi": [25, 34, 43, 45, 63, 148, 164, 169, 173], "pr\u00e9nom": [25, 34, 39, 70, 103, 135, 164, 166, 169], "age": [25, 161, 169], "buff": [25, 26, 104, 166, 169], "seq": [25, 140, 141, 169], "getvalu": [25, 26, 104, 107, 111, 112, 113, 122, 169], "pr": [25, 111, 112, 113, 122, 141, 169], "u00e9nom": [25, 169], "load": [25, 34, 104, 166, 169], "ndarray": [25, 112, 113, 122, 169], "serializ": [25, 169], "att": [25, 169], "jsonencod": [25, 169], "myencod": [25, 169], "classnam": [25, 169], "__class__": [25, 39, 150, 153, 169], "__name__": [25, 37, 39, 58, 140, 141, 150, 158, 165, 168, 169], "jsondecod": [25, 169], "mydecod": [25, 169], "decod": [25, 65, 107, 135, 141, 147, 154, 162, 165, 169], "dec": [25, 64, 95, 169], "isinst": [25, 57, 94, 95, 112, 113, 122, 148, 153, 164, 169], "obj": [25, 39, 150, 153, 154, 158, 164, 165, 169], "__main__": [25, 37, 39, 94, 130, 140, 141, 150, 154, 158, 164, 165, 168], "0x7fe460284970": 25, "altern": [25, 33, 100, 158, 166, 169], "0030194999999935135": 25, "00040850000000602904": 25, "Ces": [25, 34, 35, 37, 39, 40, 44, 53, 64, 66, 112, 124, 140, 141, 146, 148, 150, 158, 159, 162, 164, 165, 168, 169, 171, 173], "0006966999999917789": 25, "0003722999999951071": 25, "enlev": [25, 34, 37, 39, 44, 47, 64, 65, 71, 74, 77, 85, 97, 132, 140, 156, 158, 165, 166, 168, 169], "creation": [25, 158], "3099999999185457e": 25, "lu": [25, 33, 39, 63, 147, 162, 166], "x80": [25, 169], "x04": [25, 26, 169], "x95f": [25, 169], "x00": [25, 26, 169], "x94": [25, 169], "x8c": [25, 169], "x07record": [25, 169], "x03nom": [25, 169], "x06xavi": [25, 169], "x07pr": [25, 169], "xc3": [25, 169], "xa9nom": [25, 169], "x94h": [25, 169], "x05": [25, 26, 169], "x08langag": [25, 169], "x03c": [25, 169], "x03ag": [25, 169], "x94k": [25, 169], "x06python": [25, 169], "x0bk": [25, 169], "x14ueu": [25, 169], "suppl\u00e9mentair": [25, 27, 33, 39, 69, 150, 153, 158, 165, 168, 171], "x95": 25, "x08__main__": 25, "x01a": 25, "x93": 25, "x81": 25, "x03att": 25, "x01r": 25, "x94sb": 25, "0x7fe463e16b30": 25, "duppliqu": 25, "surtout": [25, 43, 57, 58, 75, 100, 116, 140, 150, 164, 165], "voluminu": 25, "att1": [25, 39, 169], "att2": [25, 39, 169], "x01b": 25, "x04att1": 25, "x04att2": 25, "x06ub": 25, "eviton": 25, "__getstate__": [25, 166, 169], "__setstate__": [25, 166, 169], "setattr": [25, 169], "0x7fe460284280": 25, "00044570000000021537": 25, "0003687999999897329": 25, "habituel": 25, "niveau": [25, 35, 47, 54, 58, 112, 150, 158, 159, 164, 166, 171], "comparaison": [25, 35, 39, 61, 97, 107, 148, 150, 161, 165], "pr\u00e9visibl": 25, "acc\u00e9ler": [25, 26, 27, 34, 59, 111, 112, 122, 123, 135, 165, 170], "protocol": [25, 26, 168], "highest_protocol": 25, "00046119999998950334": 25, "tent": [25, 57, 81, 106, 171], "myfunc": 25, "x01x": 25, "x01f": 25, "x06myfunc": 25, "x94u": 25, "0x7fe46396f5b0": 25, "contourn": [25, 64, 65, 158, 169], "obstacl": [25, 65, 169], "xfb": 25, "x01": [25, 26], "x17cloudpickl": 25, "x0e_make_funct": 25, "x03": [25, 26], "r_builtin_typ": 25, "x08codetyp": 25, "x85": 25, "x94r": 25, "x01k": 25, "x00k": 25, "x02kcc": 25, "x08": [25, 26], "x00d": 25, "x17": 25, "x94nk": 25, "x86": 25, "x8cj": 25, "xadupr": [25, 64, 111, 140, 154], "_doc": 25, "plot_serialisation_exampl": [25, 26, 29], "x94m": 25, "x97": 25, "x01c": 25, "x02": [25, 26], "x0b__package__": 25, "x08__name__": 25, "x94unnnt": 25, "x1ccloudpickl": 25, "cloudpickle_fast": 25, "x12_function_setstat": 25, "x19": 25, "x16h": 25, "x0f": 25, "x0c__qualname__": 25, "x0f__annotations__": 25, "x0e__kwdefaults__": 25, "x94n": 25, "x0c__defaults__": 25, "n__module__": 25, "x07__doc__": 25, "x0b__closure__": 25, "x17_cloudpickle_submodul": 25, "x0b__globals__": 25, "x86r0u": 25, "0x7fe46396f0a0": 25, "typeerror": [25, 33, 68, 69, 71, 72, 77, 94, 95, 112, 150, 153, 164, 165], "0x7fe46396f400": 25, "fonctionnent": [25, 36, 37, 39, 44, 91, 93, 140, 153, 158], "ens": [25, 27, 79, 95, 109, 116, 119, 150, 159, 164], "x953": 25, "x02it": 25, "x08builtin": 25, "x04it": 25, "x02e": 25, "x00bu": 25, "list_iterator": 25, "0x7fe463b12740": 25, "Ils": [25, 40, 44, 91, 104, 107, 118, 141, 150, 153, 156, 159, 162, 165, 166, 171], "ensgen": 25, "cannot": [25, 35], "generator": [25, 39, 68], "039": [25, 111], "lectur": [26, 33, 36, 38, 64, 106, 107, 168, 169, 171], "d\u00e9s\u00e9rialis": [26, 169], "r\u00e9alis": [26, 35, 36, 54, 77, 97, 101, 130, 150, 158], "strict": [26, 127, 143, 162, 169], "protoc": 26, "messag": [26, 33, 37, 39, 40, 44, 65, 88, 134, 135, 140, 141, 150, 153, 155, 156, 164, 165, 166, 170], "contrair": [26, 40, 44, 49, 51, 82, 83, 116, 129, 134, 150, 153, 158, 164, 165, 166, 168, 171], "gp": 26, "__version__": 26, "tutorial": [26, 38], "os": [26, 104, 112, 113, 115, 122, 140, 154, 158, 166, 168, 173], "sy": [26, 39, 64, 78, 111, 112, 113, 116, 140, 154, 159, 162, 165, 168, 171], "struct": [26, 166], "sphinx_runpython": [26, 39, 150, 154, 164, 169], "runpython": [26, 39, 150, 154, 164, 169], "run_cmd": 26, "json_format": 26, "messagetojson": 26, "parsejson": 26, "syntax": [26, 27, 33, 34, 39, 42, 71, 106, 140, 142, 143, 148, 152, 158, 163, 166, 169, 172], "proto2": 26, "optional": 26, "int32": [26, 36, 54, 86], "enum": 26, "phonetyp": 26, "mobil": 26, "phonenumb": 26, "repeated": 26, "phon": 26, "addressbook": 26, "peopl": 26, "debian": 26, "apt": [26, 158], "proto": 26, "w": [26, 36, 39, 48, 63, 78, 79, 104, 107, 124, 125, 126, 127, 135, 140, 141, 146, 147, 154, 156, 158, 166, 171, 173], "cmd": [26, 154, 158], "python_out": 26, "err": [26, 55, 154, 162], "wait": [26, 77, 171], "listd": [26, 104, 115, 140, 158, 166], "plot_tarabiscot": [26, 27, 29], "plot_serialisation_protobuf": [26, 29], "schema_pb2": 26, "internal": [26, 113], "build": [26, 118, 154], "_build": 26, "descriptor": [26, 150, 158, 168], "_descriptor": 26, "descriptor_pool": 26, "_descriptor_pool": 26, "symbol_databas": 26, "_symbol_databas": 26, "protoc_insertion_point": 26, "_sym_db": 26, "addserializedfil": 26, "x0cschem": 26, "x12": 26, "x08tutorial": 26, "xdb": 26, "x06person": 26, "x0c": 26, "x04nam": 26, "x18": 26, "x02id": 26, "x65mail": 26, "x06phon": 26, "x0b": 26, "x32": 26, "x1c": 26, "x1am": 26, "x0bphonenumb": 26, "x0e": 26, "x06numb": 26, "x04typ": 26, "x1a": 26, "x04hom": 26, "tphonetyp": 26, "x06mobil": 26, "x10": 26, "x04work": 26, "x41": 26, "x64": 26, "x64r": 26, "utlis": 26, "noq": 26, "e402": 26, "1234": 26, "john": [26, 107], "jdo": 26, "555": 26, "4321": 26, "serializetostring": 26, "x08john": 26, "xd2": 26, "x10jdo": 26, "x08555": 26, "0001368000002912595": 26, "fromstring": 26, "parsefromstring": 26, "00017549999938637484": 26, "479999971517827e": 26, "db": [26, 141], "5678": 26, "johnet": 26, "doet": 26, "jtdoet": 26, "example2": 26, "777": 26, "bytesiz": 26, "pack": [26, 164, 166, 171], "x017": 26, "x0fjohnet": 26, "xa": [26, 63], "x13jtdoet": 26, "x08777": 26, "db2": 26, "bsiz": 26, "unpack": [26, 164, 166], "015570000000479922": 26, "js": [26, 52, 57], "012188699999569508": 26, "501": [26, 58], "cens": [27, 86, 142, 153], "effect": [27, 150, 158, 159, 164], "identif": [27, 39, 40, 55, 119, 150, 158, 165, 168], "Ici": [27, 39, 87, 95, 98, 164, 165, 171], "d\u00e9signent": [27, 79, 150], "fall": [27, 72, 82, 83, 87, 112, 141], "escompt": 27, "mi": 27, "ordre": [27, 28, 33, 34, 35, 39, 57, 58, 61, 64, 70, 75, 79, 80, 81, 87, 95, 97, 103, 116, 124, 125, 126, 129, 132, 134, 148, 150, 159, 165, 171], "lor": [27, 28, 33, 34, 36, 39, 40, 44, 47, 53, 60, 64, 77, 91, 95, 107, 124, 125, 130, 134, 140, 141, 150, 152, 153, 156, 158, 165, 166, 168, 169, 171, 173], "quant": [27, 39, 94, 150, 164], "pieg": [27, 33], "entrer": [27, 158, 171], "n\u00e9cessit": [27, 39, 44, 67, 82, 125, 143, 150, 158, 166], "3n": [27, 70], "exigent": 27, "rar": [27, 37, 39, 44, 118, 140, 141, 150, 158, 162, 165, 166], "exig": [27, 47], "ver": [27, 39, 47, 54, 57, 75, 77, 79, 82, 83, 105, 137, 142, 150, 153, 158, 162, 164, 165, 166, 171], "con\u00e7oit": [27, 64, 150, 171], "debug": [27, 154, 171], "\u00e9tap": [27, 34, 39, 55, 57, 59, 64, 74, 79, 110, 114, 124, 125, 130, 158, 165, 166, 169, 173], "releas": [27, 156, 171], "\u00f4t\u00e9": [27, 57, 63, 77], "devenus": 27, "inutil": [27, 37, 39, 61, 67, 90, 131, 132, 156, 164, 171], "quantit": [27, 79, 81, 127, 146], "invisibl": [27, 158], "favoris": 27, "adapt": [27, 34, 61, 107, 119, 150, 171], "multitud": [27, 158], "rectangl": [27, 85, 93, 101, 150, 158], "h\u00e9rit": [27, 39, 97, 153, 156, 158, 164], "surfac": [27, 64, 74, 77, 93], "red\u00e9fin": [27, 39, 40, 107, 130, 150, 153], "para\u00eet": [27, 63, 97, 111, 116, 119, 146, 150, 152, 164, 166, 168, 173], "losang": 27, "Est": [27, 28, 33, 54, 77, 103, 112, 124, 131], "introduir": [27, 34, 143, 152, 158, 164, 171], "princip": [27, 33, 47, 55, 150, 155, 158, 166, 173], "angle": [27, 89, 158], "paraiss": 27, "g\u00e9n\u00e9ral": [27, 34, 39, 44, 80, 90, 119, 124, 141, 146, 148, 150, 153, 154, 158, 164, 165, 169, 171], "afin": [27, 39, 77, 80, 81, 88, 127, 141, 148, 150, 153, 158, 162, 164, 165, 166, 171, 173], "b\u00e9n\u00e9fici": 27, "contien": [27, 146, 150, 153, 168], "thet": [27, 33, 164], "cos": [27, 67, 73, 74, 84, 89, 98, 134, 136, 137, 140, 141, 150, 168], "sin": [27, 67, 73, 74, 84, 89, 98, 128, 129, 150], "183676841431136": 27, "fill": [27, 85, 112, 150, 158], "sens": [27, 107], "emploi": [27, 141, 150, 158, 164, 165], "31622776601683794": 27, "03162277660168379": 27, "9999": [27, 86], "0001": [27, 55, 79, 84, 85, 115], "99999": 27, "1e": [27, 48, 77, 101, 110, 137], "0031622776601683794": 27, "999999": [27, 112], "0000000000000002e": 27, "9999999": 27, "000316227766016838": 27, "99999999": 27, "999999999": 27, "0000000000000003e": 27, "1622776601683795e": 27, "9999999999": [27, 150], "99999999999": 27, "1622776601683796e": 27, "999999999999": 27, "9999999999999": 27, "1622776601683797e": 27, "99999999999999": 27, "0000000000000001e": 27, "999999999999999": 27, "162277660168379e": 27, "9999999999999999": [27, 150], "18": [27, 28, 33, 34, 35, 36, 41, 47, 52, 54, 55, 57, 58, 61, 64, 69, 70, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 94, 100, 101, 104, 110, 112, 115, 116, 123, 128, 129, 130, 131, 134, 137, 140, 141, 143, 145, 148, 149, 150, 160, 161, 173], "signif": [27, 33, 34, 35, 39, 40, 52, 64, 77, 83, 90, 111, 130, 140, 141, 142, 148, 150, 152, 153, 158, 159, 161, 164, 165, 166, 171, 173], "8999999985098839": 27, "3162277683729184": 27, "9900000002235174": 27, "0999999988824129": 27, "9990000000689179": 27, "0009999999": 27, "03162277551199656": 27, "9999000000098022": 27, "999999e": 27, "009999999509891484": 27, "9999900000011621": 27, "0031622774764217087": 27, "9999990000001162": 27, "0009999999418942008": 27, "999999900000013": 27, "0003162277453952373": 27, "999999990000001": 27, "999999525523424e": 27, "9999999990000001": 27, "162277439909038e": 27, "99999937286775e": 27, "162277516708525e": 27, "999999437919884e": 27, "162277525279896e": 27, "999999488741863e": 27, "162277498494361e": 27, "999999422567411e": 27, "162277503725911e": 27, "999999712080637e": 27, "1622776099917643e": 27, "matrice_carree_2": 27, "determin": [27, 65], "m1": [27, 50, 51, 55, 57, 61, 75, 80, 81, 158], "fauss": [27, 61, 112, 128, 129, 164], "M": [27, 33, 34, 48, 63, 77, 78, 79, 81, 82, 83, 86, 90, 103, 117, 124, 126, 131, 135, 137, 141, 147, 158, 161, 165, 173], "begin": [27, 33, 53, 55, 70, 78, 79, 87, 124, 125, 137, 150, 154], "cc": [27, 51, 82, 83, 112], "det": [27, 33], "T": [27, 33, 34, 35, 36, 39, 48, 54, 55, 58, 63, 78, 79, 82, 83, 103, 105, 109, 114, 117, 139, 153], "tr": [27, 95, 104, 115], "lambda_1": 27, "lambda_2": 27, "v\u00e9rifient": [27, 82, 83, 145, 173], "lll": 27, "\u00e9quat": [27, 55, 78, 79, 165], "discrimin": [27, 146], "polyn\u00f4m": [27, 134], "sqrt": [27, 33, 80, 81, 98, 137, 145, 150, 164, 168, 171], "valeurs_propr": 27, "9999990000110609": 27, "000000999988939": 27, "m_2": [27, 82, 83], "_2": 27, "99999999900000002828": 27, "000000001": 27, "Quelles": [27, 88, 124], "diagonalis": [27, 150], "faux": [27, 33, 128, 129, 150, 153, 164], "020": 27, "circuit": [13, 28, 64, 93], "intuit": [28, 36, 51, 75, 150], "forc": [28, 33, 53, 64, 80, 105, 125, 141, 158, 164, 165, 166, 168], "line2d": [28, 80, 81], "0x7fa94763ab90": 28, "\u00e9loign": [28, 33, 36, 84, 85, 90], "optimal": [28, 44, 62, 79, 80, 81, 87, 91, 124, 125, 129], "0x7fa96217dde0": 28, "constat": [28, 141], "croisent": [28, 59], "d\u00e9duit": [28, 60, 82, 109, 137], "am\u00e9lior": [28, 35, 51, 63, 123, 127, 150, 154, 164, 168], "d\u00e9crois": 28, "milieu": [28, 53, 79, 114, 148, 149], "diminu": [28, 34, 47, 124], "pair": [28, 34, 35, 39, 54, 57, 59, 64, 70, 75, 79, 84, 85, 90, 91, 93, 120, 121, 124, 125, 150, 158, 165], "dessous": [28, 36, 39, 69, 95, 119, 150, 158, 161, 165, 171], "x0": [28, 33], "y0": 28, "y1": [28, 69, 84, 85, 89, 118], "292330591173462": 28, "d0": [28, 55], "ordre2": 28, "xo": 28, "yo": [28, 173], "341397079008917": 28, "9548761833186405": 28, "8631425458159007": 28, "8456272108828561": 28, "0x7fa94c0d1180": 28, "voil\u00e0": [28, 140, 141], "supposon": [28, 53, 132], "faison": 28, "oublion": [28, 141], "137631508007717": 28, "graphiqu": [28, 34, 38, 44, 55, 64, 144, 146, 147, 150, 158, 164, 168, 170, 174], "8052001053865456": 28, "9739961042920614": 28, "8147617077948388": 28, "0x7fa94bfc29b0": 28, "concord": 28, "oubl": [28, 140, 142, 143, 164], "d\u00e9liber": 28, "bouclag": 28, "tendanc": 28, "gagn": [28, 39, 93, 112, 148, 159, 165, 169, 171], "boug": [28, 80, 84, 85, 138, 158], "weight": [28, 115], "bold": 28, "740352647987561": 28, "0081199538507615": 28, "9966224243230848": 28, "8728691050558798": 28, "522924291603524": 28, "pourt": [28, 33, 116, 137, 140, 150, 153], "correct": [8, 28, 33, 39, 42, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 118, 150, 153, 164, 165, 166], "tort": [28, 45], "empress": 28, "7214335447427036": 28, "2431331046193033": 28, "118929138241379": 28, "9399537486282151": 28, "848220111125475": 28, "8297080670435762": 28, "23407436285281968": 28, "23141818184855922": 28, "Pas": [28, 38, 51, 55, 58, 59, 109, 130], "parf": [28, 81], "conform": [28, 173], "mien": [28, 141], "inchang": [28, 150, 164, 165, 171], "parfait": [28, 47, 57, 164, 165], "voit": [28, 33, 34, 39, 47, 63, 82, 83, 87, 99, 100, 130, 153, 173], "circonst": [28, 140], "aurion": 28, "al\u00e9": [28, 84, 85], "permutation_rnd": 28, "8476621280516345": 28, "3199871306554722": 28, "8810707833443141": 28, "8575701970529361": 28, "8571236004366429": 28, "3037264087729815": 28, "03717707930068548": 28, "aberr": [28, 55, 79, 90], "syst\u00e9mat": 28, "913964651299246": 28, "294046515504576": 28, "2023764900880596": 28, "1982004152982153": 28, "187839655906766": 28, "1639354407467406": 28, "5484190781132359": 28, "363880751818936": 28, "recommenc": [28, 48, 59, 80, 81, 82, 83, 120, 121], "minit": 28, "n_permut": 28, "bordr": 28, "shuffl": [28, 119, 141], "8669800334772021": 28, "8449800420196413": 28, "8237571704989521": 28, "822760461350098": 28, "9551541397429326": 28, "4454818330167861": 28, "237": [28, 29, 34, 77], "plot_tsp": [28, 29], "00": [29, 33, 39, 48, 54, 55, 58, 62, 64, 78, 79, 86, 97, 105, 109, 110, 115, 123, 141], "auto_exampl": 29, "mb": [29, 53], "annex": [30, 168], "el\u00e9ment": [30, 32, 127, 129], "incontourn": [31, 35, 36, 165], "tant": [31, 34, 39, 48, 54, 59, 80, 81, 98, 124, 150, 164, 165, 166, 168, 171], "simplifient": 31, "echiqui": [32, 118], "cribl": [32, 164], "erathosthen": 32, "algebr": 32, "simul": [32, 78, 86, 93, 120, 121, 139, 150, 164, 168, 171], "r\u00e9gress": [32, 78, 79, 80], "maximis": [32, 80, 81, 97], "vraisembl": [32, 55], "r\u00e9f\u00e9rent": [32, 39, 150, 153, 164, 165, 166, 168, 171], "raccourc": [32, 39, 116, 150, 165], "original": [32, 36, 40, 41, 64, 82, 83, 116, 154, 160, 173], "docstring": [32, 41, 160], "d\u00e9di": [33, 44, 118], "aven": [33, 169], "deep": [33, 43, 112], "\u00e9merg": [33, 171], "offrant": 33, "vari": [33, 39, 58, 85, 88, 107, 124, 150, 165, 166], "cpu": 33, "pytorch": 33, "\u00e9mergent": 33, "usag": [33, 34, 39, 44, 47, 61, 107, 117, 140, 141, 142, 150, 155, 159, 165, 166, 170, 171], "standardis": 33, "presqu": [33, 49, 64, 80, 99, 123, 124, 134, 158, 164, 166, 171], "inlin": [33, 34, 35, 36, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 73, 74, 77, 80, 81, 82, 83, 84, 85, 100, 101, 103, 105, 109, 110, 119, 123, 137, 141, 144, 145, 147, 154], "convent": [33, 34, 35, 36, 39, 51, 98, 130, 140, 141, 148, 153, 155, 165], "Cet": [33, 77, 78, 79, 119, 144, 145, 149, 150, 153, 158, 164, 166, 168], "etc": [33, 47, 126, 168], "ndim": 33, "int64": [33, 34, 35, 36, 86, 90, 105, 112], "s\u00e9lection": [33, 34, 36, 47, 158, 166], "automat": [33, 34, 39, 82, 115, 140, 141, 146, 150, 158, 165, 166], "allez": [33, 58], "jet": [33, 34, 50, 64], "bb": [33, 50], "assign": [33, 34, 78, 168], "cast": 33, "casting": 33, "aa": [33, 50, 141, 159, 173], "dimmensionnel": 33, "aplat": 33, "1d": 33, "transposed": 33, "flatten": [33, 112], "flattened": 33, "multidimensionnel": [33, 78], "2d": [33, 106], "mask": [33, 34], "extrair": [33, 34, 53, 57, 173], "\u00e9lement": [33, 34, 47, 95, 105], "ar": [33, 116, 125, 141], "arang": [33, 47, 48, 54, 58, 82, 83, 88, 90, 101, 112], "idx": 33, "idx_bool": 33, "did": [33, 150], "match": [33, 150, 154, 164, 173], "indexed": 33, "along": 33, "corresponding": 33, "essai": [33, 35, 39, 44, 55, 56, 64, 79, 90, 97, 106, 107, 112, 148, 153, 154, 158, 162, 165, 166, 171], "list_python": 33, "integer": [33, 120, 121], "slic": [33, 36], "cr\u00e9on": 33, "step": [33, 77, 115], "flott": 33, "origin": [33, 52, 161], "shallow": 33, "fourn": [33, 34, 39, 64, 161, 168], "pi": [33, 34, 39, 58, 73, 74, 75, 84, 85, 89, 107, 113, 150, 168], "14159265": 33, "indirect": [33, 150, 153], "linspac": 33, "subsidiair": 33, "quoi": [33, 34, 39, 47, 51, 69, 78, 107, 130, 134, 135, 172], "71828183": 33, "silenci": [33, 156], "vicieux": 33, "output": [33, 153], "r\u00e2l": 33, "habitu": 33, "naturel": [33, 116], "coh\u00e9rent": [33, 39], "nuit": [33, 44, 141], "reten": [33, 39, 140, 159, 165, 166, 168, 171], "notanumb": 33, "slice_of_d": 33, "nslice_of_d": 33, "nd": 33, "fancy_indexed_subarray": 33, "nfancy_indexed_subarray": 33, "reshap": [33, 35, 78, 79, 90, 110, 112, 113, 117], "fortran": [33, 35, 100], "column": [33, 34, 36, 55, 56, 78, 82, 83, 86, 103, 104, 110, 115, 119, 141, 158], "connaissent": [33, 141], "matlab": 33, "jok": 33, "infer": [33, 55, 131], "zeros_lik": 33, "ones_lik": 33, "horizontal": [33, 47, 125, 158], "vertical": [33, 158], "concatenat": [33, 34, 47], "gmat": 33, "axis": [33, 34, 35, 36, 54, 55, 56, 58, 59, 79, 82, 83, 90, 117], "hstack": [33, 35, 78, 123], "vstack": [33, 35, 84, 85, 112], "8x8": [33, 118], "til": [33, 76], "extract": [33, 148], "ccccc": 33, "ccc": 33, "routin": [33, 168], "d\u00e9clar": [33, 34, 141, 165, 171], "allon": [33, 81, 141, 158], "arithmet": 33, "scalair": [33, 34], "effectuent": [33, 39, 164], "adopt": 33, "36787944": 33, "3890561": 33, "08553692": 33, "54": [33, 34, 36, 64, 97, 147], "59815003": 33, "provoqu": [33, 34, 37, 39, 44, 69, 71, 72, 134, 142, 154, 156, 164, 165, 168], "tmp": [33, 36, 54, 55, 111, 112, 113], "ipykernel_1096": 33, "2601360242": 33, "runtimewarning": 33, "divid": [33, 128, 129], "encountered": 33, "33333333": 33, "valueerror": [33, 35, 50, 112, 118, 153, 154, 164, 165], "operand": [33, 39, 69, 150], "broadcast": 33, "togeth": [33, 128, 129], "sep": [33, 34, 36, 39, 55, 86, 124, 125, 165, 168, 173], "commun": [8, 33, 34, 35, 51, 65, 91, 146, 150, 164, 165, 166, 169, 171], "dupliqu": [33, 104, 158], "newax": [33, 112], "38": [33, 34, 36, 71, 78, 83, 112, 134, 141], "r\u00e9duit": [33, 35, 39, 40, 51, 65, 75, 82, 83, 87, 114, 123, 131, 146, 158, 164], "existent": [33, 39, 44, 47, 54, 129, 134, 141, 150, 164, 165, 166], "unes": [33, 39, 52, 55, 72, 84, 85, 150, 153, 158, 164, 165], "op\u00e8rent": 33, "\u00e9ventail": 33, "particuli": [33, 34, 39, 47, 54, 58, 63, 94, 107, 113, 119, 141, 146, 150, 153, 154, 156, 158, 159, 164, 165, 166, 171], "qr": 33, "svd": 33, "commen\u00e7on": 33, "triangulair": [33, 54], "tril": 33, "vu": [33, 36, 55, 63, 98, 116, 124, 141, 150, 158, 165], "dot": [33, 35, 52, 57, 79, 171], "nouvel": [33, 34, 36, 39, 44, 47, 51, 59, 63, 86, 126, 134, 141, 150, 158, 164, 166, 168, 171], "whatsnew": 33, "465": 33, "dedicated": 33, "infix": 33, "operator": [33, 34, 150, 164], "linalg": [33, 48, 78, 79], "inv_a": 33, "inv": [33, 78, 79], "equat": 33, "46": [33, 34, 35, 36, 61, 77, 106, 112, 147, 150], "eig": [33, 48], "eigresult": 33, "eigenvalu": 33, "eigenvector": 33, "00000000e": [33, 79], "93038066e": 33, "22044605e": 33, "47": [33, 34, 36, 97, 112, 119, 122, 137, 164, 173], "eigval": 33, "sp\u00e9cialis": [33, 166], "traver": [33, 150, 158, 164, 166], "pens": [33, 36, 44, 47, 70, 114, 134, 141, 146, 150, 165, 173], "virgul": [33, 39, 165, 166], "indiquent": 33, "48": [33, 34, 36, 64, 79, 82, 86, 98, 106, 111, 112, 119, 147, 150], "symbol": [33, 39, 69, 79, 134, 140, 141, 147, 150, 164, 165, 166, 168, 171, 173], "49": [33, 34, 36, 82, 86, 112, 115, 164], "66": [33, 36, 47, 61, 89, 107, 134, 150], "81": [33, 36, 47, 83], "96": [33, 35, 47, 86, 105, 119, 134, 137], "102": [33, 35, 111, 112, 126, 171], "126": 33, "150": [33, 55, 58, 79, 80, 84, 85, 86, 105, 107, 109, 150], "51": [33, 34, 36, 64, 79, 101, 106, 147], "priorit": [33, 39, 164, 165], "52": [33, 34, 36, 79, 82, 83, 86, 115, 165], "l\u00e9ger": [33, 34, 49, 50, 64], "53": [33, 34, 36, 64, 74, 101, 106, 119, 122, 147, 150, 164], "rank": [33, 107], "matrix_rank": 33, "000000000000016": 33, "77475828e": 33, "10542736e": 33, "88178420e": 33, "66453526e": 33, "77635684e": [33, 78], "apport": [33, 77, 151, 171], "natif": 33, "tirag": [33, 35, 47, 54, 84, 85, 86, 100, 105, 132, 133, 150], "referent": [33, 100, 150, 158, 168], "randomnumpy": 33, "4x3": 33, "gaussien": 33, "randn": [33, 35, 56, 87, 109, 171], "normal": [33, 82, 83, 84, 85, 107, 137, 150, 152, 158, 168, 171], "94646743": 33, "00894075": 33, "06740407": 33, "12685385": 33, "29565984": 33, "15423585": 33, "28897528": 33, "91623823": 33, "161901": 33, "86416828": 33, "06260028": 33, "19651082": 33, "convaincr": [33, 47, 69, 106, 141, 171], "pur": [33, 100], "1e6": [33, 90, 150], "normalvariat": 33, "179": [33, 77], "ms": [33, 34, 47, 53, 61, 77, 80, 81, 83, 90, 104, 107, 109, 119, 122, 131, 137], "std": [33, 34, 35, 53, 61, 80, 81, 83, 90, 101, 107, 108, 109, 119, 122, 131, 137, 147, 171], "run": [33, 34, 35, 53, 61, 80, 81, 83, 90, 101, 107, 108, 109, 119, 122, 131, 137, 147, 154, 158, 171], "10000": [33, 55, 58, 68, 69, 77, 83, 89, 100, 105, 109, 119, 122, 123, 159], "\u00e9quiprob": 33, "racin": [33, 54, 148, 164, 165, 168], "instant": [33, 47, 55, 64, 154, 165], "amplitud": 33, "atteint": [33, 47], "combien": [33, 34, 36, 49, 69, 77, 84, 85, 88, 118, 134, 141], "dep": [33, 34, 36, 77, 81], "argmax": [33, 35, 122], "cumsum": [33, 34, 36, 100], "temporel": 33, "optimiz": [33, 80, 81, 130], "panel": [33, 34], "ad\u00e9quat": [33, 35, 164, 166], "viv": [33, 141], "tutoriel": [33, 34], "ga\u00ebl": 33, "varoqual": 33, "r\u00e9cent": [33, 141, 158, 164, 168, 170, 171], "solver": 33, "normalis": 33, "minimis": [33, 50, 64, 78, 79, 88, 124, 127, 150], "minimiz": [33, 130], "minimize_scalar": 33, "obtiendr": 33, "optimizeresult": 33, "d\u00e9velopp": [33, 51, 94, 156, 158, 165, 168, 169, 170], "toolbox": 33, "clair": [33, 39, 64, 70], "rafraich": 33, "bowl_peak": 33, "galler": [33, 34, 42], "contour3d_demo3": 33, "58": [33, 34, 36, 64, 80, 97, 106, 115, 122, 147, 171], "mpl_toolkit": 33, "mplot3d": 33, "axes3d": 33, "cm": [33, 104], "colormap": [33, 158], "min_val": 33, "max_val": 33, "figur": [33, 42, 100, 102, 114, 125, 130, 150, 158, 168, 171], "add_subplot": 33, "x_ax": 33, "y_ax": 33, "meshgrid": 33, "xy": [33, 47, 78, 79, 80, 81], "z": [33, 34, 39, 47, 57, 63, 71, 78, 103, 106, 120, 121, 134, 135, 142, 150, 164, 165, 173], "get_test_dat": 33, "plot_surfac": 33, "rstrid": 33, "cstrid": 33, "cset": 33, "contour": [33, 36], "zdir": 33, "offset": 33, "cmap": 33, "coolwarm": 33, "set_xlabel": [33, 34, 101, 123, 147], "set_xlim": [33, 73, 74, 84, 85, 89], "set_ylabel": [33, 101, 123, 147], "set_ylim": [33, 73, 74, 84, 85, 89], "set_zlabel": 33, "set_zlim": 33, "59": [33, 34, 36, 64, 106, 133, 147, 164, 171], "fun": 33, "cg": 33, "bfg": 33, "powel": 33, "cobyl": 33, "optim_r": 33, "nmethod": 33, "terminated": 33, "successfully": 33, "status": 33, "4052368582391728": 33, "690e": 33, "446e": 33, "nit": 33, "nfev": 33, "final_simplex": 33, "691e": 33, "814e": 33, "011e": 33, "052e": 33, "40523687026669025": 33, "670e": 33, "jac": 33, "863e": 33, "000e": 33, "njev": 33, "40523687025688715": 33, "451e": 33, "083e": 33, "hess_inv": 33, "287e": 33, "836e": 33, "154e": 33, "direc": 33, "854e": 33, "4052368678399868": 33, "892e": 33, "maxcv": 33, "norm_of_projected_gradient_": 33, "lt": [33, 34, 47, 48, 54, 55, 58, 64, 68, 69, 71, 72, 73, 74, 77, 80, 81, 94, 97, 104, 105, 107, 109, 110, 111, 112, 113, 122, 123, 125, 130, 141, 148], "_pgtol": 33, "4052368702662145": 33, "828e": 33, "360e": 33, "2x2": 33, "lbfgsinvhessproduct": 33, "gt": [33, 34, 47, 53, 57, 63, 68, 69, 71, 72, 73, 74, 75, 77, 80, 81, 94, 104, 107, 111, 112, 113, 122, 123, 125, 130, 141, 148], "4052": 33, "669": 33, "gradient": 33, "var": [33, 35, 36, 52, 57, 80, 119, 164, 166], "personnel": [33, 115], "optimum": 33, "reposent": 33, "relanc": [33, 63, 65, 141], "anneal": 33, "m\u00e9taheurist": 33, "61": [33, 36, 47, 64, 79, 81, 86, 90, 108, 123, 147, 150, 164], "69": [33, 34, 36, 47, 113], "197": [33, 55, 77, 101], "\u00b5": [33, 34, 35, 53, 61, 80, 81, 83, 90, 101, 107, 108, 109, 119, 137, 147], "386": 33, "346": [33, 106, 113], "118": 33, "940": 33, "147": [33, 104], "vraissembl": 33, "rescaled": 33, "62": [33, 34, 36, 79, 86, 101, 115, 132, 147], "shifted_scaled_bowlpeak": 33, "05000000677266441": 33, "500e": 33, "229e": 33, "918e": 33, "635e": 33, "407e": 33, "579e": 33, "02": [33, 34, 47, 48, 58, 77, 78, 140], "174e": 33, "72": [33, 36, 47, 97, 112], "hessien": 33, "x_1": [33, 40, 79, 128, 129, 164], "x_2": [33, 128, 129], "epsilon": [33, 78, 79, 82, 83], "mathcal": [33, 47, 120, 121], "moindr": [33, 77, 98, 158], "ordinair": [33, 39, 171], "mco": 33, "hat": [33, 78, 168], "densit": [33, 47], "mu": [33, 55, 56, 86], "sigm": [33, 94, 95, 124, 125, 126, 127], "overlin": 33, "equiv": 33, "exercis": [33, 38], "auteur": [33, 44, 72, 166, 173], "63": [33, 34, 36, 47, 80, 97, 115, 140, 164, 173], "exo1": 33, "chess": 33, "chess2": 33, "exo1b": 33, "idx_row": 33, "idx_col": 33, "wrong": 33, "also": [33, 158], "broadcasted": 33, "ix_": 33, "65": [33, 36, 47, 65, 86, 97, 115, 119, 123, 134, 135], "exo1c": 33, "is_prim": [33, 171], "67": [33, 36, 47, 69, 77, 79, 86, 122, 164], "71": [33, 36, 47, 75, 86, 90, 97, 112, 122, 150, 164], "73": [33, 36, 47, 64, 86, 107, 141, 150, 164], "79": [33, 36, 47, 83, 86, 90, 109, 119, 164], "83": [33, 36, 47, 79, 82, 83, 115, 164], "89": [33, 36, 47, 49, 64, 86, 88, 119, 122, 150, 164], "97": [33, 36, 47, 61, 64, 65, 70, 86, 87, 105, 108, 134, 164], "107": [33, 124], "109": [33, 35, 36, 64], "113": [33, 64, 111, 113], "127": 33, "131": [33, 79, 113], "137": 33, "139": [33, 100, 101, 111, 112], "149": [33, 104], "151": [33, 86], "157": 33, "163": [33, 36, 101], "167": 33, "173": [33, 77], "181": [33, 122], "191": [33, 77], "193": [33, 34, 77], "199": [33, 36, 77, 100], "211": 33, "223": [33, 34], "227": [33, 34, 62, 64, 77], "229": [33, 34, 77], "233": [33, 34, 49, 77, 142, 154], "241": [33, 34, 77], "251": [33, 34, 61, 105], "257": [33, 34, 137], "263": [33, 34], "269": [33, 34, 137], "271": [33, 34, 122], "277": [33, 34], "281": [33, 34], "283": [33, 34, 122], "293": [33, 34], "307": 33, "311": 33, "313": 33, "317": [33, 68], "331": 33, "337": 33, "347": [33, 34], "349": 33, "353": 33, "359": [33, 34], "367": 33, "373": [33, 36], "379": 33, "383": 33, "389": 33, "397": 33, "401": [33, 112], "409": 33, "419": 33, "421": 33, "431": [33, 154], "433": 33, "439": 33, "443": [33, 90], "449": 33, "457": 33, "461": [33, 111], "463": 33, "467": 33, "479": 33, "487": 33, "491": 33, "499": [33, 82, 83], "503": [33, 80], "509": [33, 61], "521": 33, "523": 33, "541": 33, "547": 33, "557": 33, "563": 33, "569": 33, "571": 33, "577": 33, "587": [33, 166], "593": 33, "599": 33, "601": 33, "607": 33, "613": 33, "617": 33, "619": 33, "631": 33, "641": 33, "643": 33, "647": [33, 122], "653": 33, "659": 33, "673": 33, "677": 33, "683": 33, "691": 33, "701": [33, 36, 111], "709": 33, "719": [33, 36], "727": 33, "733": 33, "739": [33, 36, 111], "743": 33, "751": 33, "761": [33, 36], "769": [33, 36], "773": 33, "787": [33, 81], "797": 33, "809": 33, "811": 33, "821": 33, "823": 33, "827": 33, "829": 33, "839": 33, "853": 33, "857": 33, "859": 33, "863": 33, "877": [33, 111], "881": 33, "883": [33, 55], "887": 33, "907": 33, "911": 33, "919": [33, 111], "937": 33, "941": [33, 113], "947": 33, "967": 33, "997": [33, 35, 81, 87], "barr": [33, 55, 63, 64, 71, 105], "961": 33, "n_walk": 33, "n_step": 33, "walk": [33, 57, 166, 173], "68": [33, 36, 47, 77, 80, 117], "hav": [33, 36, 128, 129, 158], "few": 33, "fig": [33, 36, 48, 55, 56, 58, 59, 62, 64, 82, 83, 84, 85, 86, 89, 97, 101, 103, 115, 123, 137, 144, 145, 147, 151, 169], "subplot": [33, 36, 47, 48, 54, 55, 56, 58, 59, 62, 64, 73, 74, 82, 83, 84, 85, 86, 89, 97, 101, 103, 115, 123, 137, 144, 145, 147], "figsiz": [33, 34, 36, 48, 54, 55, 56, 58, 59, 62, 64, 82, 83, 84, 85, 86, 89, 97, 100, 101, 103, 115, 123, 145, 147], "set_titl": [33, 34, 47, 59, 62, 64, 82, 83, 84, 85, 101], "squar": [33, 70, 79], "evolv": 33, "rms_posit": 33, "lw": [33, 86, 89], "fit": [33, 84, 85, 86, 122, 123], "highest": 33, "lowest": [33, 128, 129], "titl": [33, 36, 47, 48, 53, 55, 58, 97, 107, 109, 110, 154, 158, 164, 173], "wand": 33, "furth": [33, 104, 158], "hits_the_bound": 33, "2f": [33, 39, 47, 53, 62, 64, 165], "among": 33, "beyond": 33, "hit": 33, "first_hit": 33, "crossing": 33, "d\u00e9riv": [33, 55, 77, 78, 79, 137, 150, 171], "derive": 33, "2n": [33, 60, 68, 128, 129, 137], "n_sampl": 33, "x1_x2_ep": 33, "beta_hat": 33, "coef": [33, 110, 131, 150], "00346367": 33, "99844688": 33, "99958244": 33, "log_likelihood": 33, "sigma_squar": 33, "neg_log_likelihood_vectoriel": 33, "theta0": 33, "820124637851613": 33, "008e": 33, "402e": 33, "820e": 33, "ind\u00e9pend": [33, 37, 39, 40, 47, 54, 58, 102, 117, 164, 169, 171], "008188842074571": 33, "016697194262983": 33, "recet": 34, "cookbook": 34, "217": [34, 77], "inser": [34, 39, 51, 58, 59, 72, 88, 112, 124, 148, 150, 153, 156, 158, 159, 162, 164, 165, 168, 171, 173], "fen\u00eatr": [34, 126, 157, 164, 165, 171], "extern": [34, 140, 167], "spyd": 34, "sql": [34, 36], "million": [34, 61], "decr": [34, 35, 48, 50, 64, 78, 79, 114, 150, 158, 162, 164, 165, 168, 171, 173], "gros": [34, 55, 104, 166], "mo": [34, 44, 75, 141, 164], "patient": 34, "astuci": 34, "wrangling": 34, "working": 34, "missing": [34, 164], "218": 34, "ipython": [34, 52, 53, 57, 63, 64, 68, 69, 71, 72, 77, 102, 111, 112, 114, 122, 125, 127, 136, 137, 138, 139, 140, 144, 145, 149], "imag": [34, 53, 63, 64, 73, 74, 77, 102, 104, 112, 114, 125, 127, 136, 137, 138, 139, 141, 144, 145, 149, 158, 171, 173], "td2df": 34, "pr\u00e9vu": [34, 93, 150, 153, 158, 166], "bloc": [34, 142, 143, 152, 158, 164], "uni": [34, 141], "dimensionnel": 34, "219": [34, 64, 77], "hello": [34, 39], "220": [34, 77, 115], "missing1": 34, "missing2": 34, "city2cp_dict": 34, "paris14": 34, "75014": 34, "paris18": 34, "75018": 34, "malakoff": 34, "92240": 34, "6300": 34, "cit": [34, 39, 44, 55, 77, 164, 165, 171], "lien": [34, 38, 54, 55, 140, 150, 158, 166], "isnull": [34, 82], "notnull": 34, "221": [34, 35, 101, 137], "cities_list": 34, "paris12": 34, "vanv": 34, "cities2": 34, "\u00e9ventuel": [34, 87, 141], "222": [34, 77, 78], "75012": 34, "75": [34, 36, 47, 117, 122, 123, 124, 125, 173], "92": [34, 47, 64, 108, 119], "align": [34, 104, 143, 158, 164, 165], "paris13": 34, "224": [34, 77], "184480": 34, "12600": 34, "150028": 34, "150036": 34, "additionnent": 34, "nomm": [34, 36, 39, 44, 54, 142, 148, 150, 164, 165, 171], "225": 34, "postal": 34, "vill": [34, 64, 124, 125], "collect": [34, 40, 43, 54, 55, 99, 100, 108, 115, 116, 140, 147, 150, 159, 165], "apparent": [34, 119, 148, 158, 165], "226": [34, 77], "prix": [34, 77], "devis": 34, "euros": [34, 77], "228": [34, 77, 171], "230": [34, 77, 122, 150], "231": [34, 77], "aujourd": [34, 37, 39, 44, 47, 62, 140, 168], "hui": [34, 37, 39, 44, 47, 62, 140, 168], "ger": [34, 63, 76, 113, 153, 158, 162, 165, 166, 168, 171, 173], "section": [34, 150, 153, 154, 158, 164, 166, 171], "briev": 34, "reprend": [34, 50, 57, 59, 95, 111, 132, 150, 153, 158, 164, 165], "obligatoir": [34, 39, 44, 132, 148, 150, 152, 164], "accent": [34, 77, 106, 124, 153, 165], "232": [34, 64, 77, 109, 116], "regard": [34, 39, 47, 49, 54, 55, 57, 64, 77, 90, 111, 113, 116, 119, 131, 135, 140, 142, 147, 158], "xlsx": [34, 104], "special": 34, "bash": 34, "command": [34, 44, 104, 118, 124, 158, 164, 165, 166, 171], "caracter": [34, 36, 41, 44, 50, 51, 63, 65, 67, 68, 69, 71, 77, 94, 106, 107, 124, 130, 134, 140, 141, 142, 143, 146, 147, 148, 150, 153, 154, 158, 163, 164, 166, 168, 169, 171], "tail": [34, 36, 55, 82, 83, 86, 104], "df_marathon": 34, "marathon": 34, "anne": [34, 141], "2011": [34, 44], "7589": 34, "2010": [34, 141, 173], "7601": 34, "2009": [34, 44, 128, 129, 141], "7547": 34, "2008": [34, 126, 127], "7600": 34, "2007": 34, "7637": 34, "234": [34, 77, 154, 165], "000000": [34, 36, 150, 164], "1989": 34, "754875": 34, "7933": 34, "660167": 34, "028545": 34, "385": 34, "289830": 34, "1947": 34, "7382": 34, "1981": [34, 141], "7698": 34, "1991": 34, "7820": 34, "2001": [34, 109, 141], "8046": 34, "500000": [34, 150, 164, 165], "10028": 34, "235": [34, 77, 80], "iloc": [34, 36, 55, 82, 86], "236": [34, 77], "loc": [34, 36, 47, 104, 150, 153, 154, 164, 165], "238": [34, 77], "240": [34, 55, 77], "set_index": [34, 36, 55, 58, 82, 83, 103, 109], "dfi": [34, 36], "r\u00e9fer": [34, 39], "242": [34, 80], "243": 34, "dupr": [34, 43, 45, 164, 165, 169], "arrond": [34, 69, 164, 165], "cl\u00e9menc": 34, "reset_index": [34, 36, 86], "244": 34, "drop": [34, 36, 55, 58, 77, 86], "inplac": 34, "dfi2": 34, "plag": 34, "245": 34, "urllib": [34, 65, 107, 115, 141, 168], "246": 34, "2006": 34, "7683": 34, "247": 34, "2005": 34, "renomm": [34, 36, 152, 166], "248": [34, 86], "year": 34, "donnees_enquete_2003_televis": 34, "poidslog": 34, "ponder": [34, 79], "individuel": 34, "relat": [34, 36, 47, 48, 55, 78, 79, 86, 137, 158, 165, 166, 171], "poidsf": 34, "clt1freq": 34, "t\u00e9l\u00e9vis": 34, "clt2freq": 34, "unit": [34, 77, 141], "semain": [34, 36, 44, 140, 161], "mois": [34, 44, 55, 77, 161, 173], "renseign": [34, 39, 82, 83, 127, 150, 165, 171], "sauv": [34, 141, 166], "isnan": [34, 35, 82, 83], "apply": [34, 119], "filln": [34, 36], "249": 34, "jeux": [8, 34, 36, 44, 55, 64, 91, 93, 122, 123, 163, 171], "n_1": 34, "n_2": 34, "sas": 34, "250": [34, 47, 58, 84, 123], "amsterdam": 34, "london": 34, "boston": 34, "berlin": 34, "york": [34, 147], "chicago": 34, "fukuok": 34, "stockolm": 34, "1948": 34, "1949": [34, 107], "1950": 34, "1951": 34, "1952": 34, "1953": 34, "1954": 34, "1955": 34, "1956": 34, "chaining": 34, "indexing": [34, 35, 36, 68], "selecting": 34, "subset": [34, 120, 121], "1971": [34, 173], "112": 34, "7971": 34, "204": [34, 77], "8574": 34, "285": [34, 122], "8325": 34, "252": [34, 101], "query": 34, "253": [34, 81], "concat": [34, 36, 55], "254": [34, 77], "concat_lign": 34, "718": [34, 112], "concat_col": 34, "256": [34, 53, 60, 75, 141, 147, 162], "sort_valu": [34, 82, 83, 103], "ascending": 34, "7418": 34, "325": [34, 154], "202": [34, 77, 123], "7480": 34, "276": 34, "8047": 34, "caract\u00e9rist": [34, 44, 111, 158], "customis": 34, "gr": [34, 63, 86, 112, 173], "generic": 34, "dataframegroupby": 34, "0x7f59b93a0d90": 34, "258": 34, "sort_index": 34, "259": [34, 61], "37916": 34, "68673": 34, "7583": 34, "200000": [34, 55], "7630": 34, "333333": 34, "7652": 34, "555556": 34, "mention": [34, 150, 153, 154, 158, 165], "aggreg": [34, 36, 55, 100], "personnalis": 34, "261": 34, "max_enti": 34, "agg": [34, 100], "8134": 34, "7968": 34, "262": 34, "nsmallest": 34, "264": 34, "171": [34, 77, 122], "170": [34, 77, 108, 150], "324": 34, "357": 34, "74": [34, 36, 47, 64, 86, 101, 131], "200": [34, 47, 58, 64, 83, 84, 85, 101, 104, 112, 114, 116, 119, 123, 138, 139, 158], "265": 34, "7544": 34, "7578": 34, "7439": 34, "7552": 34, "7541": 34, "1999": 34, "7542": 34, "7518": 34, "7570": 34, "7510": 34, "7663": 34, "7681": 34, "1983": 34, "7897": 34, "1986": [34, 173], "7953": 34, "inner": 34, "droit": [34, 39, 47, 53, 58, 64, 97, 105, 126, 141, 142, 158, 164, 165, 166, 168], "merging": 34, "joining": 34, "jointur": 34, "patat": 34, "fort": [34, 39, 65, 87, 90, 123, 130, 141, 166], "correspondent": [34, 130, 137, 165, 173], "266": 34, "pay": [34, 77, 141], "267": [34, 78], "usa": 34, "germany": 34, "uk": 34, "franc": [34, 35, 36, 55, 65, 77, 90, 109, 141, 146, 147, 162, 165, 166], "268": 34, "dfavecpay": 34, "left_on": [34, 36, 104], "right_on": [34, 36, 104], "192": [34, 64, 123], "joindr": 34, "c_1": [34, 120, 121], "c_2": 34, "c_3": 34, "respect": [34, 47, 82, 83, 109, 132, 141, 150, 164, 165], "a_i": [34, 100, 126], "b_i": [34, 126], "c_i": [34, 54], "contiendr": [34, 39, 124, 150, 153, 165, 166, 168], "a1": [34, 47, 89, 131, 150], "b1": [34, 47, 131, 141, 158], "c1": [34, 50, 51, 75, 131, 150, 165], "b2": [34, 47, 131, 158], "c2": [34, 50, 51, 75, 85, 131, 150, 165], "a2": [34, 47, 89, 131, 150], "c4": [34, 51, 141], "b3": [34, 131, 158], "c5": [34, 141], "pivot_t": [34, 36], "reshaping": 34, "piv": [34, 110], "1967": 34, "1968": [34, 64], "1969": 34, "1987": 34, "1988": 34, "syntactic": 34, "sugar": 34, "2em": [34, 68], "270": 34, "thre": 34, "four": 34, "272": 34, "273": 34, "riemann": 34, "3328334999999999": 34, "na\u00efv": [34, 136], "mn": [34, 59, 106], "\u00e9vident": [34, 53, 58, 64, 70, 82, 109, 111, 146, 147, 150, 158, 164, 166, 168, 173], "klib": 34, "appui": [34, 37, 39, 142, 156, 158], "magic": 34, "cellul": [34, 35, 126, 127, 140, 148], "274": [34, 122], "big_df": 34, "cle1": [34, 39, 68, 165], "cle2": [34, 39, 68, 165], "275": 34, "932": 34, "oubli": [34, 53, 82, 83, 114, 140, 148, 149, 150, 164, 166, 168, 171], "391": [34, 154], "gain": [34, 90, 97, 168], "compliqu": [34, 52, 55, 58, 153, 169, 171, 173], "aaa": [34, 50, 63, 71, 173], "mm": [34, 173], "jj": [34, 173], "hh": 34, "ss": 34, "timedelt": [34, 55, 161], "278": 34, "recr\u00e9": [34, 64, 164, 165, 168], "1900": 34, "total_second": 34, "inse": 34, "naissanc": [34, 57, 106, 107, 161, 173], "d\u00e9ces": [34, 36, 55], "2012": [34, 66], "279": [34, 111, 112, 154], "zipfil": [34, 104, 166, 168], "client": [34, 141, 150], "download_and_sav": 34, "root_url": 34, "respons": [34, 115, 141], "urlopen": [34, 65, 107, 115, 141], "timeouterror": 34, "urlerror": 34, "badstatuslin": 34, "enseign": 34, "compl": 34, "wb": [34, 115, 141, 166], "outfil": 34, "extractall": 34, "etatcivil2012_mar2012_dbas": 34, "etatcivil2012_nais2012_dbas": 34, "etatcivil2012_dec2012_dbas": 34, "2407910": 34, "dbfread": 34, "280": [34, 101], "dbf": 34, "dbase2df": 34, "dbase_filenam": 34, "cp437": 34, "df_civil": 34, "mar2012": 34, "utf8": [34, 39, 141], "246123": 34, "anaish": 34, "depnaish": 34, "indnath": 34, "etamath": 34, "anaisf": 34, "depnaisf": 34, "indnatf": 34, "etamatf": 34, "amar": 34, "mmar": 34, "jsemain": 34, "depmar": 34, "depdom": 34, "tudom": 34, "tucom": 34, "nbenfcom": 34, "sp\u00e9cial": [34, 35, 44, 95, 165, 166, 173], "accentu": [34, 44, 141, 163], "r\u00e9pandu": [34, 39, 107, 140, 150, 164], "lit": [34, 39, 44, 52, 57, 94, 107, 166, 171], "vardf": 34, "varlist_mariag": 34, "libel": 34, "char": [34, 103, 158], "\u00e9pous": 34, "\u00e9poux": 34, "d\u00e9part": [34, 35, 49, 53, 54, 56, 60, 64, 119, 124, 130, 150, 158, 171], "domicil": [34, 86], "matrimonial": 34, "ant\u00e9rieur": 34, "enfant": [34, 95, 141], "tranch": 34, "urbain": 34, "absciss": [34, 83, 97, 136, 150], "\u00e2ge": [34, 47, 161], "mar": [34, 66], "femm": [34, 140, 141], "etant": [34, 47, 150, 153, 165, 168], "risqu": [34, 153], "lisibl": [34, 55, 95, 130, 148, 156, 158, 159, 164, 165, 166, 168, 169], "heatmap": 34, "282": 34, "visualiz": 34, "titr": [34, 44, 47, 55, 104, 141, 158, 171, 173], "grill": [34, 35, 76, 138, 158], "grid": 34, "superpos": [34, 55], "courb": [34, 53, 55, 136, 158], "284": 34, "as_index": 34, "kind": [34, 45, 55, 97], "bar": [34, 100, 103, 126], "fontsiz": 34, "legend": [34, 36, 47, 53, 55, 61, 84, 86, 101, 103, 123, 147, 164], "set_visibl": [34, 115], "l\u00e9gend": [34, 158, 171], "requ\u00eat": [34, 39, 78, 166], "r\u00e9partit": [8, 34, 84, 85, 93, 100], "excelwrit": 34, "existing": 34, "workbook": 34, "docu": [34, 39, 43, 44, 52, 57, 140, 141, 146, 154, 166, 168, 171], "df1000": 34, "286": [34, 122], "ton_example100": 34, "clos": [34, 39, 140, 153, 154, 166, 173], "287": [34, 122], "poidlog": 34, "unnamed": 34, "889422": 34, "4766": 34, "865201": 34, "310209": 34, "12381": 34, "589746": 34, "740070": 34, "14685": 34, "431344": 34, "775545": 34, "9516": 34, "049939": 34, "732512": 34, "3925": 34, "907588": 34, "288": [34, 165], "289": 34, "8403": 34, "7386": 34, "8397": 34, "502091": 34, "2690": 34, "961176": 34, "8398": 34, "306852": 34, "1644": 34, "574141": 34, "8399": 34, "501181": 34, "13405": 34, "104689": 34, "8400": 34, "382758": 34, "7410": 34, "905653": 34, "8401": 34, "343340": 34, "1840": 34, "132652": 34, "obtenus": [34, 64, 147], "291": [34, 122], "292": [34, 158], "294": 34, "select": [34, 158], "echantillon": 34, "830": 34, "295": 34, "7883": 34, "371429": 34, "7922": 34, "315789": 34, "7891": 34, "061224": 34, "7815": 34, "909091": 34, "8075": 34, "187500": 34, "296": [34, 106], "secondes_x": 34, "secondes_y": 34, "7937": 34, "028571": 34, "297": 34, "7466": 34, "8053": 34, "7871": 34, "7599": 34, "7661": 34, "7744": 34, "8456": 34, "7672": 34, "7665": 34, "7585": 34, "7515": 34, "7723": 34, "8163": 34, "7568": 34, "7722": 34, "7755": 34, "7508": 34, "7704": 34, "7519": 34, "7694": 34, "l\u00e0": [34, 35, 36, 37, 39, 55, 58, 64, 79, 84, 85, 150, 154], "298": 34, "pivmean": 34, "7695": 34, "161290": 34, "7928": 34, "560976": 34, "8133": 34, "393939": 34, "299": 34, "1612903225805": 34, "909090909091": 34, "371428571429": 34, "061224489796": 34, "315789473684": 34, "5609756097565": 34, "028571428571": 34, "1875": 34, "393939393939": 34, "courus": 34, "300": [34, 58, 83, 84, 85, 104, 107, 113, 141, 144, 145, 158], "0000": 34, "00000": 34, "16129": 34, "301": [34, 106], "1982": 34, "1984": 34, "1992": 34, "1985": 34, "84": [34, 36, 47, 86, 123, 141, 150], "1963": 34, "302": [34, 111], "ageh": 34, "agef": 34, "303": 34, "scatt": [34, 36, 84, 85, 97, 144, 145, 147], "304": 34, "hexbin": 34, "305": 34, "differencehf": 34, "306": 34, "dissem": 34, "repsem": 34, "secondary_y": 34, "fonctionnal": [35, 140, 150, 156, 158, 165, 166, 168, 173], "improb": [35, 82], "basiqu": 35, "blas": 35, "assembleur": 35, "peaufin": 35, "gr\u00e9": 35, "mat\u00e9riel": 35, "pren": [35, 64, 79, 141, 158], "r\u00e9ag": [35, 158, 171], "integ": 35, "matint": 35, "540": 35, "ns": [35, 36, 82, 83, 101, 107, 119, 137, 147], "matintf": 35, "549": 35, "1005": 35, "996": [35, 81], "1008": [35, 86], "1009": 35, "106": [35, 55], "95": [35, 47, 86, 89, 105, 108, 122, 137], "108": 35, "multipli": [35, 61, 64, 161, 165], "valent": 35, "rand": [35, 48, 55, 59, 79, 86, 90, 105, 110, 123], "squeez": 35, "expend_dim": 35, "argmin": [35, 59, 83, 90], "prod": [35, 112], "commm": 35, "chisquar": 35, "p_": 35, "o_": 35, "ij": [35, 48, 54, 117], "histogram": [35, 119, 146, 147], "empir": 35, "plein": [35, 55, 56, 57, 61, 63, 87, 106, 119, 130, 141, 158, 166, 171], "r\u00e9flech": [35, 44, 141], "csr_matrix": [35, 123], "re\u00e7oit": [35, 40, 44, 134, 150, 164, 165, 171], "t\u00e9l\u00e9phon": [35, 166], "portabl": [35, 168], "contact": 35, "chi_squar": 35, "pis": [35, 107], "keepdim": 35, "pj": 35, "pispj": 35, "chi": [35, 93], "5798254016266716": 35, "98556467": 35, "47377301": 35, "77148185": 35, "26135908": 35, "27373018": 35, "0240458": 35, "55360714": 35, "3575369": 35, "71740732": 35, "3260206": 35, "876020129318981": 35, "plusieurs_tirag": 35, "99594032": 35, "67914189": 35, "98105965": 35, "93181536": 35, "86827764": 35, "5000": [35, 47, 65, 109, 111, 123], "407": [35, 147], "785": 35, "1273": 35, "2135": 35, "437878": 35, "49408914": 35, "55030028": 35, "60651142": 35, "66272256": 35, "7189337": 35, "77514485": 35, "83135599": 35, "88756713": 35, "94377827": 35, "99998941": 35, "bref": [8, 35, 55, 93, 123], "tient": [35, 36, 55, 75, 80, 82, 83, 86, 107, 150, 158, 164], "sauf": [35, 39, 64, 126, 137, 150, 168, 171, 173], "gross": 35, "creus": [35, 36, 82, 83, 91], "spars": [35, 61], "concret": [35, 150, 153, 165, 171], "ide": 35, "1000000": [35, 99, 149, 150, 168], "setdiag": 35, "python395_x64": 35, "_index": 35, "125": [35, 137, 150], "sparseefficiencywarning": 35, "changing": 35, "sparsity": 35, "expens": 35, "lil_matrix": 35, "_set_arrayxarray": 35, "fou": 35, "rus": 35, "territoir": 35, "export": [36, 168], "col1": 36, "col2": 36, "schtroumph": 36, "schtroumphet": 36, "88": [36, 47, 64, 86, 105, 108, 141, 150, 158], "offre": [36, 141, 150, 164, 165], "impress": [36, 140], "souven": [36, 63, 81, 141, 164], "particular": [36, 40, 45, 128, 129, 150, 165, 166], "potentiel": [36, 58, 80], "sup055": 36, "notat": [36, 39, 60, 87, 117, 143, 164], "df1": 36, "col3": 36, "ipykernel_32232": 36, "3074685679": 36, "settingwithcopywarning": 36, "trying": 36, "row_index": 36, "col_index": 36, "instead": 36, "See": 36, "caveat": 36, "user_guid": 36, "returning": 36, "view": [36, 104], "avert": [36, 165], "stipul": [36, 77, 158, 168], "dispara\u00eetr": [36, 116, 156, 158], "cr\u00e9ent": [36, 158], "congestion": 36, "utilitair": 36, "isna": [36, 55], "to_datetim": [36, 55, 86], "isin": [36, 55], "filt": [36, 39, 111, 166], "pivot": [36, 58, 93, 141], "quantil": [36, 79, 80, 90], "adress": [36, 43, 44, 55, 141, 158, 162, 164], "hospitali": [36, 86], "\u00e9pidem": [36, 48, 55, 56, 86], "gouv": [36, 55, 56, 86], "dataset": [36, 55, 86, 104, 122, 123], "63352e38": [36, 86], "d353": [36, 86], "4b54": [36, 86], "bfd1": [36, 86], "f1b3ee1cabd7": [36, 86], "08c18e08": 36, "6780": 36, "452d": 36, "9b8c": 36, "ae244ad529b3": 36, "reg": [36, 63, 141, 164], "cl_age90": 36, "hosp": [36, 86], "hospconv": 36, "ssr_usld": 36, "rad": [36, 86], "dc": [36, 86], "219577": 36, "94": [36, 47, 55, 86, 88, 97], "387": [36, 55], "219578": 36, "536": 36, "219579": 36, "810": [36, 86], "129": [36, 100], "219580": 36, "888": [36, 158], "219581": 36, "388": 36, "121": [36, 111], "datetime64": 36, "agg_par_jour": 36, "26110": 36, "1452": 36, "14586": 36, "9311": 36, "1717663": 36, "271176": 36, "26239": 36, "1435": 36, "14707": 36, "9336": 36, "1718630": 36, "271254": 36, "26255": 36, "1465": 36, "14704": 36, "9323": 36, "763": 36, "1719634": 36, "271322": 36, "26253": 36, "1460": 36, "14680": 36, "9344": 36, "1720370": 36, "271394": 36, "26174": 36, "1413": 36, "14658": 36, "9354": 36, "749": 36, "1721380": 36, "271456": 36, "evolu": [36, 55, 82, 83], "hospitalis": [36, 55], "\u00e9chel": [36, 55, 91], "logarithm": [36, 55, 68, 114, 119, 134, 153], "logy": [36, 55, 58], "covid49": 36, "agg_par_jour49": 36, "372": [36, 109], "180": [36, 55, 77, 111, 112], "57846": 36, "1554": 36, "377": [36, 49], "184": [36, 116, 123], "57859": 36, "374": 36, "177": [36, 77, 100, 113], "57877": 36, "375": 36, "175": 36, "57889": 36, "57900": 36, "nag": 36, "diff": [36, 47, 56, 82, 83, 86, 119, 166, 171], "736": [36, 86], "1010": 36, "rolling": [36, 55], "cent": [36, 37, 39, 150], "roll": 36, "857143": 36, "142857": 36, "571429": 36, "428571": 36, "76": [36, 47, 82, 105, 154], "gen": [36, 51, 55], "h\u00f4pital": [36, 55], "gu\u00e9rison": [36, 55], "correl": [36, 82, 83], "r\u00e9anim": 36, "d\u00e9cal": [36, 39, 114, 134, 145, 164, 165], "dis": [36, 65, 141], "pic": 36, "77": [36, 47, 55, 64, 81, 86, 150], "714286": 36, "285714": 36, "78": [36, 47, 53, 105, 150], "data_last": 36, "ts": [36, 161], "dclag": 36, "shift": [36, 158], "realag": 36, "ts_cor": 36, "corr": [36, 82, 83], "delay": [36, 77, 86], "corr_dc": 36, "corr_r": 36, "m\u00e9dical": 36, "sir": [36, 55], "sex": 36, "338240": 36, "1766": 36, "338241": 36, "338242": 36, "338243": 36, "978": 36, "338244": 36, "4acad602": 36, "d8b1": 36, "4516": 36, "bc71": 36, "7d5574d5f33e": 36, "iso": [36, 141], "8859": [36, 141], "1911493942": 36, "dtypewarning": 36, "mixed": 36, "specify": [36, 55], "low_memory": 36, "extract_dat": [36, 55], "depart": 36, "region": [36, 55, 128, 129], "libelle_reg": 36, "libelle_dep": 36, "tx_incid": 36, "taux_occupation_sa": 36, "tx_pos": 36, "tx_incid_couleur": 36, "r_couleur": 36, "taux_occupation_sae_couleur": 36, "tx_pos_couleur": 36, "nb_orang": 36, "nb_roug": 36, "90390": 36, "93": [36, 47, 83, 87, 108], "provenc": 36, "alpe": 36, "c\u00e3": 36, "azur": 36, "vauclus": 36, "721489": 36, "orang": [36, 80], "90391": 36, "719256": 36, "90392": 36, "524887": 36, "90393": 36, "566028": 36, "90394": 36, "570747": 36, "chardet": [36, 141, 147], "covid19": [36, 55], "rb": [36, 141, 147, 166], "confident": [36, 141, 147], "issus": [36, 39], "openstreetmap": 36, "barycentr": [36, 150], "departement_french_2018": 36, "longitud": [36, 64, 165], "latitud": [36, 64, 165], "spher": [36, 64], "82": [36, 47, 115], "dep_pos": 36, "code_inse": 36, "nuts3": 36, "surf_km2": 36, "deplong": 36, "deplat": 36, "morbihan": 36, "fr524": 36, "6870": 36, "812320": 36, "846846": 36, "98": [36, 47, 53, 83, 86, 100, 105, 108, 119, 134], "doub": 36, "fr431": 36, "5256": 36, "362722": 36, "165964": 36, "jur": 36, "fr432": 36, "5049": 36, "697361": 36, "729368": 36, "ardech": 36, "fr712": 36, "5566": 36, "425582": 36, "752771": 36, "fr812": 36, "5875": 36, "179861": 36, "993601": 36, "last_extract_dat": 36, "indic_last": 36, "ain": 36, "348764": 36, "099799": 36, "alli": 36, "187644": 36, "393637": 36, "cantal": 36, "669045": 36, "051247": 36, "dr\u00f4m": 36, "167364": 36, "685239": 36, "018230": 36, "090620": 36, "dordogn": 36, "741203": 36, "104948": 36, "girond": 36, "575870": 36, "823614": 36, "land": [36, 128, 129, 173], "783793": 36, "965855": 36, "lot": [36, 128, 129], "garon": 36, "460747": 36, "367964": 36, "85": [36, 47, 54, 83, 86, 90, 108, 141, 150], "bigr1": 36, "bigr2": 36, "SAE": 36, "86": [36, 47, 77, 79, 83, 86, 90, 108, 141, 154, 165], "arden": 36, "640751": 36, "616226": 36, "constitu": [37, 39, 53, 61, 63, 77, 132, 164, 169], "r\u00e9utilis": [37, 39, 44, 52, 152, 158, 164], "r\u00e9part": [37, 39, 55, 64, 77, 103, 140, 168], "vglob": 37, "un_calcul": 37, "contors": 37, "bouton": [37, 39, 171], "somme_doubl": [37, 39], "test_somme_doubl": [37, 39], "quiconqu": [37, 39], "attend": [37, 39, 146, 158, 166, 171, 173], "comprend": [37, 39, 94], "bing": [37, 39], "envois": [37, 39], "confus": [38, 51, 63, 150, 164], "truc": 38, "charg": [38, 45, 140, 154, 158, 165], "crash": 38, "cours": [38, 168, 171], "programmer": 38, "suffisent": [39, 150], "d\u00e9couvr": [39, 71, 78, 111, 125, 126, 166, 171], "jun": 39, "gcc": 39, "derri": [39, 47], "espac": [39, 47, 51, 65, 77, 79, 91, 114, 116, 122, 124, 143, 150, 158, 159, 164, 165, 169, 173], "commentair": [39, 119, 143, 153, 162, 163, 171], "commencent": [39, 103, 118, 165, 166, 168], "vont": [39, 150, 166, 171], "help": [39, 111, 112, 132, 150, 153, 158, 164, 168], "encadr": [39, 82, 150, 165], "\u00e9tal": 39, "d\u00e9monstr": [39, 124], "sphinx_runpython_extens": [39, 150, 154, 164, 169], "pend": [39, 55, 113, 141, 153, 156, 158, 164, 171], "h\u00e9sit": [39, 142], "douteux": 39, "incorrect": [39, 71, 150], "lettr": [39, 40, 44, 63, 65, 68, 70, 71, 77, 134, 135, 140, 146, 147, 148, 158, 165, 173], "soulign": [39, 40, 150, 165], "minuscul": [39, 40, 165, 166], "majuscul": [39, 40, 72, 165, 166], "portion": [39, 40, 45, 134, 153, 164, 168, 171], "\u00e9tend": [39, 158, 165, 166], "\u00e9cras": [39, 166], "apostroph": [39, 165], "guill": 39, "crochet": [39, 109, 165, 173], "usuel": [39, 163], "bug": [39, 153], "145": [39, 55, 104], "\u00e9quivaut": [39, 140, 165], "allant": [39, 44, 164], "idem": [39, 158], "confondr": [39, 69, 71, 97, 165], "upper": [39, 65, 72, 103, 127, 165], "isalph": [39, 165], "isdig": [39, 153, 165], "replac": [39, 52, 57, 65, 68, 82, 112, 113, 115, 122, 141, 158, 165, 168, 173], "optionnel": [39, 158, 165], "maxspl": [39, 165, 173], "d\u00e9coup": [39, 53, 58, 63, 106, 111, 124, 158, 164, 165, 166, 173], "d\u00e9limiteur": [39, 164, 165], "coupur": [39, 50, 80, 81, 165], "agglutin": [39, 165], "facult": [39, 40, 150, 153, 164, 165, 173], "affichag": [39, 71, 94, 110, 112, 148, 150, 153, 158, 164, 165, 166, 171], "tronqu": [39, 153, 165], "d\u00e9cimal": [39, 161, 164, 165, 166], "123456789": [39, 165], "2e": 39, "14159": 39, "14e": 39, "suppress": [39, 150], "support": [39, 44, 68, 69, 159, 165, 171, 173], "iem": [39, 165], "2k": [39, 137, 165], "3k": [39, 165], "difficil": [39, 44, 84, 85, 123, 141, 143, 156, 164, 165, 171], "pr\u00e9voir": [39, 158, 165], "quelconqu": [39, 78, 80, 94, 125, 164, 165], "insert": [39, 58, 64, 112, 148, 158, 159, 165], "pop": [39, 58, 165], "\u00e9changent": [39, 158, 169], "assoc": [39, 54, 64, 71, 134, 153, 158, 164, 165, 171], "s\u00e9lect": [39, 64, 158, 165], "valeur1": [39, 68, 165], "valeur2": [39, 40, 68, 150, 165], "superflu": [39, 153, 165], "clear": [39, 165, 171], "updat": [39, 52, 63, 64, 103, 110, 165, 166], "d2": [39, 50, 75, 80, 82, 83, 103, 125], "d1": [39, 50, 75, 80], "setdefault": [39, 165], "popitem": 39, "net": [39, 48, 63, 115, 164, 165, 169], "contrepart": [39, 40, 150, 165], "encha\u00eenent": 39, "syumbol": 39, "xrang": 39, "li2": 39, "random_matrix": [39, 61], "__enter__": [39, 111, 112, 113], "__exit__": [39, 111, 112, 113, 122], "acceptent": [39, 150, 165], "Leur": [39, 150, 165], "exemple_fonct": [39, 40, 168], "p3": [39, 130, 150], "r1": [39, 80, 81, 90], "r2": [39, 80, 81, 84, 90], "re\u00e7oivent": [39, 158, 164], "doivent": [39, 40, 118, 130, 134, 150, 158, 164, 165, 168, 173], "follow": [39, 164], "int\u00e9rieur": [39, 40, 130, 134, 150, 153, 158, 164, 165, 166, 171, 173], "r\u00e9percu": 39, "ext\u00e9rieur": [39, 134, 150, 158, 164, 165, 170], "sein": [39, 44, 54, 150, 158, 165, 169, 171], "d\u00e9clin": 39, "iterate_double_on_list": 39, "run_python_script_139986840454144": [], "0x7f513a48c2e0": [], "rend": [39, 77, 122, 141, 150, 159, 164], "ma_cl": 39, "att3": 39, "att4": 39, "constructeur": [39, 94, 95, 130, 151, 153, 158, 166, 171], "calcule4": 39, "pr\u00e9ced": [39, 53, 150, 152, 164, 165, 166, 173], "invari": [39, 150], "mun": [39, 126, 158, 164], "recens": [39, 65, 150, 159, 162, 165, 168], "staticmethod": [39, 40, 150], "calcule_static": 39, "terminent": [39, 52, 165], "__": 39, "__add__": [39, 130, 131, 150], "soustract": [39, 130, 150, 161, 164, 165], "__cmp__": [39, 150], "int\u00e9r\u00eat": [39, 57, 77, 87, 100, 130, 141, 150, 165, 166], "majeur": [39, 80, 81, 107, 123], "ma_classe2": 39, "mer": [39, 57, 106, 141, 171], "simplif": [39, 98, 152], "makebold": 39, "wrapped": 39, "makeitalic": 39, "membr": [39, 124, 150], "_p": 39, "val": [39, 116, 137], "p_get": 39, "p_set": 39, "ouvr": [39, 166, 173], "mod": [39, 47, 80, 103, 112, 120, 121, 140, 150, 153, 164, 171], "ult\u00e9rieur": [39, 150, 165], "paragraph": [39, 106, 150, 153, 158, 164, 165, 166, 168, 170, 171, 173], "ouvertur": [39, 140, 166], "fermetur": [39, 166], "tabul": [39, 101, 158, 165, 166, 173], "sp\u00e9cifi": [39, 153, 156, 158, 162, 164, 165], "t\u00eat": [39, 96, 158], "valabl": [39, 164, 165], "readlin": [39, 124, 140, 141, 166, 173], "\u00e9cran": [39, 44, 140, 158, 165, 166], "backslash": 39, "marquent": [39, 166], "nettoyag": [39, 166], "l_net": [39, 166], "nettoi": [39, 112, 150, 166], "strip": [39, 124, 140, 141, 166], "balis": 39, "htmlpars": 39, "sax": [39, 168], "descript": [39, 64], "cadr": [39, 141, 164], "d\u00e9limit": [39, 166], "livr": [39, 43, 44, 91, 166], "hugo": [39, 166], "victor": [39, 166], "miser": [39, 166], "kessel": [39, 166], "joseph": [39, 166], "lion": [39, 166], "woolf": [39, 166], "virgini": [39, 166], "mr": [39, 103, 107, 166], "dalloway": [39, 166], "calvino": [39, 166], "italo": [39, 166], "baron": [39, 166], "perch": [39, 147, 166], "scind": [39, 158, 166], "geometr": 39, "deuxiem": [39, 64, 137], "geo": 39, "pseudonym": 39, "m\u00e9can": [39, 107, 148, 150, 153, 154, 158, 166, 171], "rattrap": [39, 153], "agir": [39, 153], "exc": [39, 153, 154], "rapportent": 39, "insoup\u00e7on": [39, 153], "imbriqu": [39, 68, 72, 73, 74, 164, 165], "aucunchiffr": [39, 153], "123a": [39, 153], "__doc__": [39, 150, 153, 165, 168], "runpythonerror": [39, 150, 153, 154, 164, 165, 173], "stdin": [39, 150, 173], "invalid": [39, 71], "abcdefghijklmnopqrstuvwxyz": [39, 103], "ef": 39, "entour": [39, 86, 158, 165], "r\u00e9sid": [39, 166], "simplifi": [39, 44, 51, 63, 72, 95, 110, 152], "pr\u00e9c\u00e8dent": 39, "calcul1": 39, "calcul2": 39, "calcul3": 39, "calculx": 39, "transm": [39, 63, 130, 164], "permettr": [39, 125, 141, 150, 165, 166, 171], "transmettr": [39, 104, 156, 164, 166, 169, 171], "cepend": [39, 58, 165, 166], "calcul4": 39, "essay": [39, 49, 65, 71, 77, 84, 85, 137, 147, 150, 153, 165, 171, 173], "ported": 39, "nonetyp": [39, 69], "dropbox": 39, "skydriv": 39, "googledr": 39, "propag": [39, 48, 86], "svn": 39, "tortoisesvn": 39, "histor": [39, 141], "caract\u00e9ris": [40, 165], "diff\u00e9renci": [40, 165], "poss\u00e8dent": [40, 150, 158, 165, 168, 171], "corp": [40, 150, 164], "privil\u00e9gi": [40, 141, 150, 165], "entra\u00een": [40, 141, 165], "comportent": [40, 150, 164], "recouvr": [40, 84, 85, 164], "duplicat": 40, "implic": 40, "target": [40, 104], "garant": [40, 47, 57, 77, 141, 165], "type_exception_1": [40, 153], "type_exception_": [40, 153], "type_exception_j": [40, 153], "type_exception_n": [40, 153], "apparu": [40, 87, 153, 165, 171], "nom_cl": [40, 150], "condition1": [40, 164], "instruction1": [40, 164], "instruction2": [40, 164], "instruction3": [40, 164], "instruction4": [40, 164], "importlib": [40, 168], "module_exempl": [40, 168], "exemple_vari": [40, 168], "reload": [40, 164, 168], "nom_class": [40, 150], "attribut_stat": [40, 150], "nom_method": [40, 150], "attribut_statique2": [40, 150], "nom_methode_st": [40, 150], "attribut_statique3": [40, 150], "valeur3": [40, 150], "nom_propriet": [40, 150], "fget": [40, 150], "fset": [40, 150], "fdel": [40, 150], "fget_vari": [40, 150], "fset_vari": [40, 150], "attribut_1": [40, 150], "attribut_n": [40, 150], "nom_ancetr": [40, 150], "nom_autre_method": [40, 150], "chez": [40, 56, 72, 141, 150], "anc\u00eatr": [40, 150], "sign": [40, 84, 85, 150, 152, 164, 166], "exception_typ": [40, 153], "ali": [40, 140, 168], "exemple_cl": [40, 150, 168], "param_1": [40, 150, 164], "param_n": [40, 150, 164], "d\u00e9commmand": [40, 168], "valeur_1": [40, 150, 164], "valeur_n": [40, 150, 164], "nom_attribut": [40, 150], "fonction_nom": [40, 164], "par_1": [40, 164], "par_n": [40, 164], "instruction_1": [40, 164], "instruction_n": [40, 164], "res_1": [40, 164], "res_n": [40, 164], "x_n": [40, 79, 103, 128, 129, 164], "valeur_2": [40, 164], "param_2": [40, 164], "faq": 42, "d\u00e9finit": [42, 56, 79, 134, 148, 158, 171, 173], "quas": [43, 44, 49, 59, 72, 80, 81, 90, 110, 140, 165], "picor": 43, "savent": [43, 142], "p\u00e9riss": 43, "survol": 43, "quotidien": 43, "langgag": 43, "transcript": [44, 150], "d\u00e9butent": [44, 72], "macos": 44, "souhaitent": [44, 165], "500": [44, 47, 64, 82, 83, 97, 104, 109, 123, 127], "alleg": 44, "officiel": [44, 140, 173], "gourmand": [44, 47, 166], "d\u00e9fault": [44, 116], "horm": [44, 150, 164, 166], "heureux": [44, 141], "pyp": [44, 168], "florileg": 44, "awesom": [44, 55], "pip": 44, "mond": [44, 57, 106, 141, 142, 147, 165, 169], "anglophon": [44, 153], "apparit": [44, 100, 150, 168], "ascii": [44, 154, 162, 165, 166], "charact": [44, 158], "xe9": [44, 165], "pourront": 44, "soulev": 44, "aiment": 44, "r\u00e9serv": [44, 140], "h\u00f4tel": 44, "train": [44, 94, 112, 154, 164, 165], "avion": [44, 141], "vieillot": 44, "obsolet": 44, "caus": [44, 104, 153, 154, 156, 165], "lisibil": [44, 158], "reproduir": 44, "autorisent": 44, "mauvais": [44, 47, 97, 153, 164], "publi": 44, "tenu": [44, 158], "enhanc": 44, "proposal": 44, "calendri": [44, 161, 168], "appuient": [44, 103], "assemblag": [44, 107, 148, 150, 158, 169, 171], "encha\u00een": [44, 139, 148, 164, 165, 171], "d\u00e9pendent": [44, 52, 164], "auxquel": [44, 57, 141], "capac": 44, "relev": [44, 141], "imper": [44, 150], "t\u00e2ch": [44, 98, 164, 165, 171, 173], "immens": [44, 47], "manquent": 44, "qualif": 44, "cultur": 44, "\u00e9col": 44, "fass": [44, 80, 81, 141], "cursus": 44, "scolair": 44, "intemporel": 44, "couvrent": 44, "mail": [44, 166], "s\u00e9cur": [44, 141], "serr": 44, "connaiss": [44, 65, 126, 164, 168], "actuel": [44, 59, 63, 80, 81, 150, 161, 171], "exit": 44, "vis": [44, 149, 166], "d\u00e9conseil": [44, 140, 164, 165, 166, 168], "copyright": 45, "permiss": [45, 154, 173], "hereby": 45, "granted": 45, "fre": 45, "obtaining": 45, "softwar": 45, "associated": 45, "deal": [45, 128, 129], "without": [45, 158], "restrict": [45, 154], "including": 45, "limit": [45, 54, 90, 131, 137, 158, 165, 171], "modify": 45, "publish": [45, 154], "distribut": 45, "sublicens": 45, "sel": [45, 158], "whom": 45, "furnished": 45, "subject": [45, 128, 129, 166], "notic": 45, "shall": 45, "included": 45, "substantial": 45, "provided": 45, "AS": 45, "warranty": 45, "implied": 45, "limited": 45, "warrant": 45, "merchantability": 45, "fitness": 45, "noninfring": 45, "event": [45, 158, 171], "holder": 45, "liabl": 45, "claim": [45, 107], "damag": 45, "liability": 45, "action": [45, 158, 171], "contract": [45, 77], "otherwis": [45, 128, 129], "arising": 45, "dealing": 45, "domain": [47, 154], "social": [47, 54, 124, 141], "connexion": 47, "pertinent": 47, "motiv": 47, "lourd": [47, 114], "facebook": 47, "formel": [47, 152], "consid\u00e9ron": 47, "univer": 47, "s_1": [47, 124], "s_2": [47, 124], "ldot": 47, "s_m": [47, 124, 125], "noton": 47, "contraint": [47, 63, 64, 107, 109, 131, 132, 150, 164, 171], "s\u00e9quentiel": [47, 107], "satisfair": 47, "d\u00e9tail": [47, 51, 80, 81, 82, 83, 104, 150, 158, 165], "actualis": 47, "toler": 47, "do\u00eet": 47, "lvert": 47, "rvert": 47, "leq": 47, "geq": 47, "m\u00e9dian": [47, 79], "Son": [47, 57, 100, 150, 158, 164, 166], "repos": [47, 57, 166], "pr\u00e9senton": 47, "correspondr": [47, 146, 173], "famill": [47, 103, 141], "universel": 47, "mapsto": 47, "uniform": [47, 78, 80, 81, 84, 85, 90, 100, 103, 137, 140], "Nous": [47, 79, 81, 115, 116, 125, 158, 165], "h_": 47, "mathrm": 47, "difficult": [47, 64, 141], "prenon": [47, 130], "arbitrair": 47, "4294967291": 47, "tiron": 47, "sampl": [47, 64, 107], "calculon": 47, "compton": 47, "p_collis": 47, "effectuon": 47, "confirm": 47, "reiter": 47, "r\u00e9it\u00e9ron": 47, "750": 47, "proportionnel": [47, 61, 100], "a_1": 47, "a_2": 47, "essayon": [47, 99, 116], "64bit": 47, "i8": 47, "univers": 47, "\u00e9chantillonag": 47, "b_": 47, "b_max": 47, "b_1": 47, "b_2": 47, "h1": [47, 173], "h2": 47, "initialison": 47, "464": 47, "z\u00e9ros": [47, 79, 97, 116], "divers": [47, 166], "consecut": 47, "trailing": 47, "modulus": 47, "lookup": 47, "mod_37bit_posit": 47, "decomposit": [47, 95, 123], "0b10": 47, "0b10000000000": 47, "0b1101": 47, "comparon": [47, 108], "rajouton": 47, "539": 47, "atteindr": [47, 118, 126, 148], "incr\u00e9ment": [47, 54, 142, 150], "parcouron": 47, "regardon": 47, "card": 47, "384": [47, 53, 81, 122], "remarquon": 47, "y_i": [47, 78, 79, 80, 81, 82, 83], "divisibl": 47, "big": [47, 61], "dernier": 47, "obtenon": 47, "regroupon": 47, "qualit": 47, "87": [47, 86, 109, 115, 119, 141], "2500": 47, "ep": 47, "median": [47, 79], "1f": 47, "axhlin": 47, "linestyl": 47, "0x7f1d715b2860": 47, "91": [47, 108], "observon": 47, "converg": [47, 77, 79, 105, 137], "augment": [47, 58, 64, 77, 82, 83, 116, 122, 123, 165, 171], "approx": [47, 136], "rappelon": 47, "pir": [47, 53, 58, 67, 109], "size_bound": 47, "satisfais": [47, 150], "effort": [47, 141, 145], "stad": 47, "removed": 47, "impair": [47, 54, 64, 75, 120, 121, 142, 143, 165], "rajout": 47, "cf": [47, 171], "estimated": 47, "nonzero": 47, "annotat": 47, "xytext": 47, "arrowprop": 47, "arrowstyl": 47, "ylabel": [47, 147], "616": 47, "rapproch": [47, 84, 85, 135, 164], "avis": [47, 72, 77], "pr\u00e9conisent": 47, "precis": [47, 101, 137, 164], "mod\u00e9lis": [48, 150], "consomm": 48, "vertic": [48, 64, 75], "extrem": [48, 54, 64, 80, 150], "apparten": [48, 54, 98, 150, 165], "m_": [48, 78, 87, 117], "v_i": 48, "v_j": 48, "ji": 48, "random_adjacency_matrix": 48, "taux": [48, 55, 77, 112, 142, 166], "remplissag": 48, "e_i": [48, 49], "e_j": 48, "random_symmetric_adjacency_matrix": 48, "rnd2": 48, "tqdm": [48, 54, 55, 58, 64, 97, 105, 109, 110, 123], "total_nb1": 48, "nb1": 48, "ravel": [48, 56, 59, 79, 82, 83, 86, 90, 113, 139], "emptyness": 48, "proport": 48, "73it": 48, "0000000e": 48, "4408921e": 48, "total_null": 48, "nb_null": 48, "82it": 48, "90it": 48, "connex_component": 48, "total_cnx": 48, "cnx": 48, "ny": [48, 147], "96it": 48, "accumul": [48, 77], "connex_components_indic": 48, "grenouill": 49, "bond": 49, "barreau": 49, "treiz": 49, "saut": [49, 77, 164], "\u00e9paisseur": [49, 89, 158], "ven": [49, 131, 139], "pu": [49, 141, 153], "144": 49, "e_": 49, "geqsl": [49, 53, 109, 125], "grenouille2": 49, "g1": [49, 173], "g2": [49, 150], "grenouille3": 49, "emprunt": [49, 77], "pr\u00e9d\u00e9cesseur": [49, 54], "remont": [49, 153], "levenshtein": 50, "hasard": [50, 56, 58, 59, 75, 84, 85, 97, 139, 168, 171], "tron\u00e7on": [50, 53], "distance_meme_longueur": 50, "abcef": 50, "abcde": 50, "mind": [50, 54], "bbb": 50, "distance_alambique": 50, "verlan": 50, "abc": [50, 57, 87, 103, 165], "ac": [50, 141], "levenstein": [50, 51, 129], "distance_alambiquee_levenstein": 50, "ace": 50, "t\u00e2ton": [51, 158], "occas": [51, 141, 147], "servent": [51, 134, 148, 158, 162, 164, 166, 173], "na\u00eff": 51, "pyramid": [51, 93], "restraint": 51, "distance1": 51, "imfo": 51, "distance2": 51, "m1_e": 51, "cab": 51, "abcd": [51, 166], "bcdef": 51, "aim": [51, 115, 141, 150], "distance2_verbos": 51, "disent": 51, "pirat": 51, "distance3": 51, "pimfos": 51, "fastid": 51, "convien": 51, "test_dist_equal": 51, "assert": [51, 90, 94, 95, 97, 102, 118, 150, 164], "test_distance1": 51, "test_dist_diff1": 51, "_a": [51, 126], "a_": [51, 54], "test_distance2": 51, "magnif": 51, "test_dist_diff2": 51, "_ab": 51, "ab_": 51, "a_b": 51, "test_distance3": 51, "pench": [51, 54, 86, 152, 161], "incroi": 51, "edit_dist": 51, "agraf": 51, "agra": 51, "test_edit_dist": 51, "r\u00e9muner": 51, "r\u00e9numer": 51, "voudr": [51, 78, 104, 141, 142, 150], "edit_distance2": 51, "cmp_char": 51, "test_special": 51, "test_edit_distance2": 51, "agraff": 51, "\u00e9leph": 51, "\u00e9lef": 51, "edit_distance3": 51, "ins_char": 51, "again": 51, "test_edit_distance3": 51, "adjacent": [52, 75, 126], "uuid": [52, 57], "plot_network": 52, "dessin": [52, 57, 59, 144, 145, 158], "graphviz": [52, 57], "lang": [52, 57, 169], "digraph": [52, 57], "rankd": 52, "lr": 52, "d\u00e9comment": [52, 57], "hdot": [52, 57], "uid": [52, 57], "uuid4": [52, 57], "viz": [52, 57], "div": [52, 57], "svggraph": [52, 57], "getelementbyid": [52, 57], "innerhtml": [52, 57], "Quelle": [52, 77, 103, 124, 136], "Ne": [52, 61], "f_": 52, "order_same_weight": 52, "mat2": [52, 61, 140, 150], "ten": [52, 64, 77, 81, 88, 99, 147, 150, 164, 166], "order_any_weight": 52, "durat": 52, "duract": 52, "new_end": 52, "subarray": 53, "l_1": 53, "l_2": 53, "l_n": 53, "l_k": 53, "max_": [53, 116, 137], "somme_partiel": 53, "plus_grande_sous_l": 53, "im": [53, 158], "jm": 53, "cout": [53, 75, 87], "l_j": 53, "plus_grande_sous_liste_n2": 53, "l_a": 53, "appartien": 53, "ll": [53, 70, 124, 137, 150, 165], "l_i": 53, "k_1": 53, "k_2": 53, "rcl": [53, 125], "r\u00e9union": 53, "jonction": 53, "plus_grande_sous_liste_nlnn2_r": 53, "ia": 53, "ja": 53, "ib": [53, 80, 81, 150], "jb": 53, "\u00e9tud": [53, 77, 165, 169], "plus_grande_sous_liste_nlnn2": 53, "160": [53, 122], "896": 53, "512": 53, "4608": 53, "n2": [53, 99], "leftrightarrow": 53, "ln_2": [53, 68, 114, 135, 149], "4f": 53, "cumul2": 53, "quatriem": [53, 134], "reven": [53, 64, 146, 158, 164, 168], "arrier": [53, 107, 150], "l_": 53, "sommemax": 53, "red\u00e9marr": 53, "plus_grande_sous_liste_n": 53, "el": [53, 63, 109, 150, 165], "li100": 53, "565": [53, 80], "134": 53, "drawdown": 53, "trading": 53, "pert": 53, "p\u00e9riod": [53, 55, 141], "anticip": 54, "binomial": 54, "adja": 54, "visualis": [54, 164], "networkx": [54, 64], "from_numpy_array": 54, "with_label": 54, "distrib": [54, 84, 85], "jouent": [54, 165, 173], "r\u00f4l": [54, 156, 164, 165, 173], "parcouru": [54, 64, 164], "successeur": [54, 75], "rel": [54, 150], "pr\u00e9decesseur": 54, "partent": [54, 64], "arrivent": 54, "sup\u00e9rieu": 54, "profond": [54, 150], "2_": 54, "sum_j": [54, 117, 123], "jk": 54, "pq": [54, 120, 121], "3_": 54, "adjan": 54, "coloriag": [54, 66, 93, 118], "c_j": 54, "maj": 54, "loi": [54, 58, 77, 78, 80, 81, 82, 83, 86, 90, 93, 117, 120, 121, 137, 140], "queu": [54, 171], "\u00e9paiss": 54, "lois": [54, 84, 85], "admettent": 54, "esper": [54, 64, 141], "etap": [54, 110, 124], "distribution_to_degree_list": 54, "deg": 54, "nh": 54, "random_graph": 54, "distribution_degre": 54, "n_it": [54, 56], "set_descript": [54, 62], "dj": 54, "warn": [54, 156, 173], "incomplet": 54, "ndegre": 54, "ncurrent": 54, "376": 54, "28it": 54, "ipykernel_17111": 54, "4037000715": 54, "userwarning": [54, 55, 156], "382": 54, "61it": [54, 55], "r\u00e9pond": [54, 56, 78, 107, 129, 136, 152, 164, 171], "criter": [54, 149, 168], "bloqu": [54, 140, 171], "a_t": 54, "voyon": [54, 80, 81, 142], "random_graph_remov": 54, "last_added": 54, "n_removed": 54, "dh": 54, "341": 54, "30it": 54, "strateg": [54, 77, 93, 170, 173], "distribution_degree_realis": 54, "sumd": 54, "rejet": 54, "d3a98a30": 55, "893f": 55, "47f7": 55, "96c5": 55, "2f4bcaaa0d71": 55, "total_cas_confirm": 55, "total_deces_hopital": 55, "total_deces_ehpad": 55, "total_cas_confirmes_ehpad": 55, "total_cas_possibles_ehpad": 55, "patients_reanim": 55, "patients_hospitalis": 55, "total_patients_guer": 55, "nouveaux_patients_hospitalis": 55, "nouveaux_patients_reanim": 55, "802": 55, "118431": 55, "28826": 55, "1233": 55, "19272": 55, "653050": 55, "756": 55, "803": 55, "118494": 55, "28837": 55, "1213": [55, 64], "18901": 55, "653734": 55, "804": 55, "118508": 55, "28844": 55, "1214": 55, "18935": 55, "653827": 55, "805": 55, "118633": 55, "28845": 55, "1199": 55, "18742": 55, "654775": 55, "900": [55, 83], "806": [55, 86], "118723": 55, "1173": 55, "18290": 55, "655984": 55, "set_yscal": 55, "courag": [55, 107, 141], "d\u00e9cro\u00eet": 55, "rigour": [55, 123], "death": 55, "country": 55, "githubusercontent": 55, "cssegisanddat": 55, "csse_covid_19_dat": 55, "csse_covid_19_time_ser": 55, "time_series_covid19_": 55, "s_global": 55, "eur": 55, "provinc": 55, "tf": 55, "extract_whole_dat": 55, "confirmed": 55, "recovered": 55, "popul": 55, "67e6": 55, "conc": [55, 169], "infected": 55, "saf": 55, "ipykernel_20449": 55, "102400080": 55, "parsed": 55, "individually": 55, "falling": 55, "ensur": 55, "parsing": 55, "consistent": 55, "pleas": [55, 104, 122], "161407": 55, "38591184": 55, "38429777": 55, "28408816": 55, "161450": 55, "38599330": 55, "38437880": 55, "28400670": 55, "161474": 55, "38606393": 55, "38444919": 55, "28393607": 55, "161501": 55, "38612201": 55, "38450700": 55, "28387799": 55, "161512": 55, "38618509": 55, "38456997": 55, "28381491": 55, "r\u00e9par": 55, "improvis": 55, "x_t": 55, "correct_ser": 55, "covid_modified": 55, "09it": 55, "342253": 55, "liss": 55, "recoup": [55, 64, 173], "compartimental": 55, "\u00e9pid\u00e9miolog": [55, 91], "contamin": [55, 86], "malad": [55, 141], "guer": [55, 86], "d\u00e9ced": [55, 86], "changent": [55, 123, 158, 162, 165], "dS": [55, 56], "nu": [55, 56, 86, 106], "dr": [55, 56, 125], "transmiss": 55, "plot_simul": 55, "day0": 55, "true_dat": 55, "infect": 55, "coch": [55, 164], "visibil": 55, "tdf": 55, "sob": 55, "iob": 55, "rob": 55, "dob": 55, "linewidth": 55, "s_0": 55, "i_0": 55, "r_0": 55, "d_0": 55, "connus": [55, 58, 91, 124, 150], "s0": 55, "9990": 55, "i0": [55, 74], "r0": 55, "\u00e9voluent": [55, 101, 158], "masqu": [55, 153, 158, 168], "confin": 55, "reconfin": 55, "temp\u00e9ratur": 55, "lisse_mar": 55, "28305367": 55, "1697884": 55, "1640875027069664": 55, "626756310367156": 55, "9857629613918629": 55, "533445387958945": 55, "pr\u00e9dict": [55, 58, 78, 122, 123], "transitoir": 55, "simulation_cumule": 55, "minimisent": [55, 79], "i_rang": 55, "beta_rang": 55, "mu_rang": 55, "nu_rang": 55, "error_fct": 55, "err_min": 55, "di0": 55, "i_t": 55, "j_t": 55, "cum": [55, 100], "gras": 55, "sim_opt": 55, "3f": [55, 78], "3g": 55, "3772": 55, "51it": [55, 97], "mal": [55, 59, 63, 64, 75, 115, 153, 164, 171], "188": [55, 77], "39it": 55, "sup": [55, 58, 95, 132, 137], "mort": [55, 140], "error_norm": 55, "m3": [55, 158], "45it": [55, 64], "aticl": 55, "modified": [55, 107], "contagion": 55, "italy": 55, "estimating": 55, "simulating": 55, "countr": 55, "s_t": 55, "s_": [55, 124, 125], "beta_t": 55, "d\u00e9duir": [55, 124], "incub": 55, "poursuit": [55, 141, 153, 164], "d\u00e9couvert": [55, 152], "forall": [55, 117, 124, 125, 137], "r_t": 55, "d_t": 55, "d_": 55, "inconnu": [55, 146, 165], "paramet": [55, 56, 158], "epidemic": 55, "identifying": 55, "unreported": 55, "inferent": 55, "modelling": 55, "forecasting": 55, "outbreak": 55, "seird": 55, "covidtrack": 55, "pyepidemic": 55, "pandemic": 55, "control": [55, 158], "modcov19": 55, "aftercovid": 55, "etrang": [56, 102, 116], "inacessibl": 56, "pann": 56, "ovh": 56, "inaccessibl": [56, 61], "909090909090908": 56, "8909090909090909": 56, "90909091": 56, "89090909": 56, "82883546": 56, "79298272": 56, "18909091": 56, "auparav": 56, "bruit": [56, 78, 79, 123], "simulation_bruite": 56, "90629495": 56, "90818313": 56, "0769856": 56, "10853633": 56, "84322669": 56, "77113049": 56, "17022418": 56, "21541865": 56, "sim_bruit": 56, "estimation_coefficient": 56, "645167": 56, "153483": 56, "113224": 56, "prouv": [56, 124], "distance_sim": 56, "1379327480825296": 56, "b0": 56, "m0": 56, "n0": [56, 112, 137], "distance0": 56, "mu0": 56, "nu0": 56, "175492030437819": 56, "21093122422461147": 56, "11141742761811038": 56, "12240477": 56, "1995322": 56, "09668045": 56, "06764482535407212": 56, "0880922396685696": 56, "dessus": [56, 77, 79, 86, 95, 107, 124, 130, 142, 158, 164, 165, 168, 171], "perdr": [57, 122, 141, 154], "poem": [57, 106], "arthur": [57, 106], "rimbaud": [57, 106], "voyel": [57, 68, 72, 77, 106], "latent": [57, 106], "corset": [57, 106], "velu": [57, 106], "mouch": [57, 106], "\u00e9clat": [57, 106], "bombillent": [57, 106], "puanteur": [57, 106], "cruel": [57, 106, 141], "golf": [57, 106], "ombre": [57, 106], "candeur": [57, 106], "vapeur": [57, 106], "glaci": [57, 106], "fier": [57, 106], "rois": [57, 106], "frisson": [57, 106], "ombel": [57, 106], "pourpr": [57, 106], "sang": [57, 106, 141], "crach": [57, 106], "rir": [57, 106], "levr": [57, 106], "bel": [57, 106, 158], "coler": [57, 106, 126], "ivress": [57, 106], "p\u00e9nitent": [57, 106], "cycl": [57, 106, 115], "vibr": [57, 106], "divin": [57, 106], "virid": [57, 106], "paix": [57, 106, 126, 141], "p\u00e2t": [57, 106], "sem": [57, 106], "rid": [57, 106], "alchim": [57, 106], "imprim": [57, 106, 171], "front": [57, 106, 171], "studieux": [57, 106], "supr\u00eam": [57, 106, 141], "clairon": [57, 106], "strideur": [57, 106], "\u00e9trang": [57, 106, 141, 150], "silenc": [57, 106], "travers": [57, 64, 106, 118], "ange": [57, 106], "omeg": [57, 106], "rayon": [57, 84, 105, 106, 141], "violet": [57, 106], "Ses": [57, 106], "yeux": [57, 106], "extract_word": [57, 106], "spl": 57, "perf_count": [57, 61, 87, 99, 100, 119, 123, 131, 150], "guid": [57, 150], "group": [57, 63, 65, 77, 95, 103, 106, 115, 128, 129, 158, 164], "exploit": [57, 158, 161, 162, 166, 168, 171], "suggest": [57, 63], "plus_grand_suffix_commun": 57, "longueur_max": 57, "meilleure_pair": 57, "meilleur_suffix": 57, "pareil": [57, 165], "suffix_map": 57, "\u00e9": [57, 103, 147], "ingr\u00e9dient": 57, "plus_grand_suffix_commun_dictionnair": 57, "debut": [57, 113, 165, 173], "5386918000003789": 57, "17898409999997966": 57, "n_x": 57, "sum_x": 57, "pr\u00e9fix": [57, 63, 141, 153, 165, 166, 168], "build_tr": 57, "zabc": 57, "\u00ea": 57, "\u00e2": 57, "illisibl": [57, 111, 156, 164, 166, 169], "partiqu": 57, "build_dot": 57, "predecessor": 57, "root_nam": 57, "set2374575491648": 57, "n2374575489600": 57, "e2374575503808": 57, "t2374575329600": 57, "a2374575329984": 57, "l2374575327296": 57, "fin2374494191824": 57, "i2374575817216": 57, "n2374575817280": 57, "e2374575817344": 57, "p2374575817408": 57, "a2374575326656": 57, "t2374575325312": 57, "a2374575330240": 57, "l2374575340416": 57, "c2374575339968": 57, "e2374575595200": 57, "plot_dot": 57, "plus_grand_suffix_commun_dictionnaire_tr": 57, "whole_tr": 57, "parcourus": 57, "23091779999958817": 57, "05081569999947533": 57, "topk_sortall": 58, "vois": [58, 72], "topk_idee1ou2": 58, "trich": 58, "d\u00e9brouill": [58, 140], "envisage": 58, "fairr": 58, "tris": 58, "interstic": 58, "topk_tri_select": 58, "kn": [58, 137], "topk_insert": 58, "\u00e9ven": [58, 156, 161, 165, 171], "prochain": [58, 77, 141, 156, 158, 164], "r\u00e9pondr": [58, 63, 77, 87, 107], "topk_fus": 58, "topk": [58, 109], "topk_select_recurs": 58, "topk_select": 58, "pivot_index": 58, "interviennent": [58, 153, 162], "measure_tim": [58, 109, 110], "repeat": [58, 90, 109, 110, 112], "t1": [58, 61, 118, 123, 150], "0023090000031515956": 58, "06701939999766182": 58, "017117299998062663": 58, "0257670000064536": 58, "010535299996263348": 58, "05852940000477247": 58, "perm10000": 58, "006514400003652554": 58, "0134890000044834": 58, "019539000000804663": 58, "041308899999421556": 58, "014250300002458971": 58, "062273499999719206": 58, "perm1000": 58, "71it": [58, 105], "000692": 58, "194126": 58, "003134": 58, "003230": 58, "013448": 58, "015127": 58, "000383": 58, "283472": 58, "001300": 58, "003163": 58, "022354": 58, "010969": 58, "000835": 58, "377026": 58, "001189": 58, "003169": 58, "022742": 58, "024926": 58, "000522": 58, "450699": 58, "001051": 58, "002952": 58, "045683": 58, "038119": 58, "000527": 58, "539852": 58, "001091": 58, "003602": 58, "038593": 58, "026605": 58, "gomm": 58, "affin": 58, "permn": 58, "70it": 58, "000620": 58, "000124": 58, "000111": 58, "000137": [58, 110], "000411": 58, "000030": [58, 110], "002329": 58, "000275": 58, "000402": 58, "000326": 58, "001340": 58, "000328": 58, "021377": 58, "001635": 58, "005340": 58, "001277": 58, "005500": 58, "005612": 58, "178028": 58, "011507": 58, "034768": 58, "008894": 58, "022889": 58, "066547": 58, "755049": 58, "115708": 58, "361258": 58, "099447": 58, "233724": 58, "paraissent": 58, "n\u00e9glige": [58, 83, 87, 137, 147, 159], "redessin": 59, "distance_vill": 59, "distance_tour": 59, "540451130306862": 59, "dessine_tour": 59, "r\u00e9dig": [59, 150, 165], "ameliore_tour": 59, "transmis": 59, "dist_min": 59, "nb_perm": 59, "nb_it": 59, "annul": [59, 78, 79, 158], "extraordinair": [59, 141], "ameliore_tour_renvers": 59, "p0": [59, 130], "crois": [59, 141], "spatial": [59, 84, 85, 90], "cdist": [59, 90], "build_permut": 59, "max_dist": 59, "arg_dist": 59, "entretien": [60, 91], "embauch": [60, 91], "extrapol": 60, "puissance2k": 60, "sum_k": 60, "a_k": 60, "prod_k": 60, "majoritair": [61, 146, 152], "maxj": 61, "inconv\u00e9nient": [61, 98, 107, 131, 150, 158, 171], "embarrass": 61, "produit_class": 61, "dim1": 61, "dim2": 61, "enquer": 61, "produit_eleg": 61, "k1": 61, "k2": [61, 137], "bigmat": 61, "sonne": 61, "mill": [61, 141], "sabord": 61, "avon": [61, 116, 125, 141, 158], "matrice_dicodico": 61, "matrice_dicodico_lc": 61, "song": 61, "produit_elegant_rapid": 61, "produit_elegant_rapide_transform": 61, "mat1": [61, 150], "t2": [61, 67, 105, 118, 123, 150], "dicodico": 61, "dico": [61, 65, 75, 159, 166], "008358499999303604": 61, "10761350000029779": 61, "2080854999985604": 61, "011978200000157813": 61, "28018710000105784": 61, "28202239999882295": 61, "06322960000034072": 61, "7310262999999395": 61, "21729559999948833": 61, "04302850000021863": 61, "25215659999958007": 61, "06354410000130883": 61, "24071189999813214": 61, "08784929999819724": 61, "23844240000107675": 61, "13118289999692934": 61, "2613874999988184": 61, "21261740000045393": 61, "2777879999994184": 61, "22135960000014165": 61, "2984610000021348": 61, "27173079999920446": 61, "28927499999917927": 61, "travelling": 62, "embl\u00e9mat": 62, "20256988": 62, "27603738": 62, "77763596": 62, "50108287": 62, "07482647": 62, "60880805": 62, "56075455": 62, "9637854": 62, "79735982": 62, "32773718": 62, "65017942": 62, "96827692": 62, "distance_chemin": 62, "dy": [62, 84, 85], "090536785820115": 62, "plot_point": 62, "impatient": 62, "0it": 62, "720it": 62, "89it": 62, "optimisation_retourn": 62, "siecl": 63, "tiret": 63, "330px": 63, "international_morse_cod": 63, "svg": [63, 112], "mn\u00e9motechn": 63, "d\u00e9codag": [63, 162], "r\u00e9duis": 63, "rit": [63, 166], "man": 63, "who": 63, "laugh": 63, "codingam": 63, "transcr": [63, 150], "eee": 63, "ooo": 63, "eel": 63, "oo": 63, "oooo": 63, "ooooo": 63, "word2mors": 63, "word": 63, "lison": 63, "ooooooo": 63, "ambigu": [63, 150, 165], "deven": [63, 77, 87, 165, 171], "rev_alph": 63, "reg_exp": 63, "hyperprob": 63, "souvien": [63, 141], "dec_exp": 63, "suffir": [63, 98, 100], "decode_mors": 63, "een": 63, "eeee": 63, "eb": 63, "DEE": 63, "gn": 63, "decode_morse_longer_first": 63, "flemm": 63, "plu\u00f4t": 63, "dr\u00f4l": 63, "patron": [63, 141], "ee": 63, "decompose_mors": 63, "letter": 63, "new_opt": 63, "prefix": [63, 165], "startswith": [63, 165], "dk": [63, 77], "dnt": 63, "dta": 63, "dtet": 63, "na": [63, 83, 96, 106], "naet": 63, "nek": 63, "nent": 63, "netet": 63, "nrt": 63, "tea": 63, "teaet": 63, "teek": 63, "teent": 63, "teet": 63, "teetet": 63, "tert": 63, "tft": 63, "tik": 63, "tint": [63, 147], "tit": 63, "titet": 63, "TUA": 63, "tuet": 63, "xet": 63, "explos": 63, "d\u00e9duis": [63, 80, 122], "t\u00e9l\u00e9graph": 63, "marqu": [63, 165, 171], "paus": 63, "soir": [64, 141], "initi": [64, 141], "\u00e9lev": [64, 67, 77, 82, 83, 86, 103, 130, 131], "particip": 64, "trajet": 64, "voitur": 64, "parcourent": [64, 116], "d\u00e9marrent": 64, "reviennent": [64, 158], "posti": 64, "inspect": 64, "already": [64, 112], "downloaded": 64, "146": [64, 104, 107], "carrefour": 64, "873361200000005": 64, "3236609": 64, "8730454": 64, "3235788": 64, "compren": 64, "03562501840766763": 64, "8741849": 64, "3239352": 64, "0937624742737696": 64, "suffis": [64, 65, 77, 137, 147, 150, 154, 164], "p\u00f4l": 64, "cart\u00e9sien": [64, 144, 145, 164], "porti": 64, "exp\u00e9rimental": 64, "premier": [64, 166], "ais": [64, 104, 150, 164], "id\u00e9al": [64, 88], "interdit": [64, 142, 143, 153, 165], "rendent": [64, 130, 156], "verr": 64, "impass": 64, "dem": [64, 69, 85], "sept": [64, 165], "pont": 64, "konigsberg": 64, "math\u00e9maticien": 64, "r\u00e9pondu": [64, 83], "rejoint": 64, "repart": 64, "nx": 64, "add_edg": 64, "rejoign": 64, "nb_edg": 64, "parit": [64, 75, 142], "tien": [64, 141], "r\u00e9duisent": 64, "justif": [64, 77], "descendr": 64, "d\u00e9doubl": 64, "g\u00e9ograph": 64, "edges_from": 64, "total_possible_edg": 64, "fromi2": 64, "new_": 64, "new_d": 64, "535221": 64, "778": 64, "1138": 64, "21316": 64, "538415": 64, "1228": 64, "2258": 64, "545218": 64, "1717": 64, "3748": 64, "557001": 64, "2118": 64, "5500": 64, "574194": 64, "2442": [64, 107], "7470": 64, "602050": 64, "2726": 64, "9624": 64, "642132": 64, "2900": 64, "11810": 64, "3258634178614415": 64, "admissibl": 64, "dedan": [64, 105, 148], "d\u00e9fil": [64, 105], "build_possibl": 64, "i1": [64, 75, 150, 152], "i2": [64, 75, 150, 152], "ajust": 64, "009382623381497467": 64, "5290": 64, "248170388440608": 64, "initc": 64, "undesired": 64, "912505": 64, "400": [64, 83, 104, 137], "928070": 64, "938916": 64, "1627": [64, 86], "2244": 64, "957763": 64, "1676": 64, "3644": 64, "976823": 64, "1341": 64, "4989": 64, "020697": 64, "833": 64, "5977": 64, "042415": 64, "427": 64, "6489": 64, "062800": 64, "187": [64, 106], "6716": 64, "088837": 64, "6815": 64, "112715": 64, "6856": 64, "138552": 64, "6874": 64, "168428": 64, "197202": 64, "relient": 64, "refair": [64, 127], "122002169199727": 64, "661698849016764": 64, "Mon": 64, "satisfact": 64, "combl": 64, "coinc": [64, 171], "risque": 64, "pourait": 64, "probl\u00e8mat": 64, "making": 64, "directed": 64, "vingtain": 64, "334": 64, "1511": 64, "width": [64, 104, 127, 137, 138, 139, 158, 164], "eulerian_path": 64, "hierholz": 64, "odd": 64, "1327": 64, "10585": 64, "1383": 64, "1423": 64, "133": 64, "1470": 64, "168": 64, "1523": 64, "1589": 64, "1655": 64, "1722": 64, "1796": 64, "1863": 64, "207": [64, 77, 86], "1919": 64, "164": 64, "2003": [64, 171], "2027": 64, "2038": 64, "2039": 64, "2040": 64, "0016168196457467584": 64, "002915457386378182": 64, "004107201738406607": 64, "138": 64, "005201454147672404": 64, "010775423696863674": 64, "street": 64, "016229655482986917": 64, "08264740074165475": 64, "026299568900906643": 64, "jump": 64, "08193964999861593": 64, "ar\u00eat": 64, "provient": [64, 158, 164, 166, 168], "d\u00e9patouill": 64, "entrant": 64, "ramen": 64, "c\u00e9sar": [65, 134, 135], "d\u00e9calag": [65, 134, 141, 164, 165], "babbag": 65, "\u00e9tudi": [65, 70, 78, 103, 113, 146], "cons\u00e9cut": [65, 87, 97, 138, 173], "apparaiss": [65, 141], "cryptanalys": 65, "diviseur": [65, 164], "crypt": [65, 120, 121], "d\u00e9crypt": [65, 120, 121], "code_vigener": [65, 134, 135], "message_cod": [65, 134, 135], "ord": [65, 70, 71, 103, 134, 135, 164], "chr": [65, 70, 103, 134, 135, 164], "decodevigener": 65, "codevigener": 65, "pgcd": 65, "decodevigenerelongueurcl": 65, "DES": [65, 141], "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd": 65, "egv": 65, "mem": 65, "resultat": [65, 75, 158], "etre": [65, 141], "decodevigenerecl": 65, "d\u00e9cod": [65, 91, 135], "2l": 65, "3l": 65, "cassevigener": 65, "condamn": 65, "gutenberg": [65, 146], "hugo_dernier_jour_condamn": 65, "218451": 65, "ind\u00e9sir": [65, 165, 173], "7000": 65, "cle_cod": 65, "td_node_2006": 66, "td_node_2007": 66, "td_node_2008": 66, "td_node_2009": 66, "td_node_2010": 66, "td_note_2010_rattrap": 66, "td_node_2011": 66, "td_node_2012": 66, "td_node_2013": 66, "td_note_2013_rattrap": 66, "td_note_2014": 66, "td_node_2015": 66, "td_node_2016": 66, "td_node_2017": 66, "broken": 66, "td_node_2018": 66, "td_node_2019": 66, "td_node_2020": 66, "td_node_2021": 66, "td_node_2022": 66, "td_note_2022_rattrapag": 66, "td_note_2022_rattrapage2": 66, "td_node_2023": 66, "1a": [66, 126, 127], "novembr": 66, "d\u00e9cembr": [66, 141], "2015": [66, 67, 144, 145], "rattrapag": 66, "oral": 66, "f\u00e9vri": 66, "octobr": 66, "2021": 66, "interrog": [66, 150], "septembr": [66, 141], "mul2014": 67, "cosinus": 67, "9899924966004454": [67, 140, 141], "ecir": 67, "ex": [67, 82, 83, 134], "kayak": [67, 68], "kakak": 67, "aill": 67, "contient_": 67, "2i": [67, 109, 164], "12093467645909634": 67, "est_tri": [67, 105], "est_trie_nocopy": 67, "1000000000": [67, 153], "pas_de_voyel": 68, "aeiouy": [68, 72, 77], "bonjour": 68, "revoir": [68, 158], "bnjr": 68, "rvr": 68, "mat_dict": 68, "9289682539682538": 68, "581": 68, "4676254832484": 68, "19981": 68, "20000": [68, 77], "39980": 68, "40000": 68, "30000": [68, 119], "59978": 68, "60000": 68, "79979": 68, "80000": 68, "119977": 68, "120000": 68, "70000": 68, "139977": 68, "140000": [68, 77], "159978": 68, "160000": [68, 77], "90000": 68, "179974": 68, "180000": [68, 77], "abcdef": 68, "1er": 68, "3em": 68, "afbecd": 68, "kkaay": 68, "strang": 68, "deviennent": [68, 140, 156], "dictionnaire_depart": 68, "dictionnaire_retourn": 68, "it\u00e9reur": 68, "dict_item": [68, 116, 165], "paress": 68, "aper\u00e7oit": [68, 113, 124, 165], "input": [68, 69, 71, 72, 77, 87, 153, 154, 164], "68beadeaff45": 68, "0x0000000006f305e8": 68, "86215c660090": 68, "subscript": 68, "7191411125634257": 68, "ii": [68, 112], "3177321667311": 68, "1024": 68, "2036": 68, "4083": 68, "4096": 68, "8178": 68, "8192": 68, "16369": 68, "16384": [68, 165], "32752": 68, "32768": 68, "65519": 68, "65536": 68, "131054": 68, "131072": 68, "262125": 68, "262144": 68, "524268": 68, "524288": 68, "nameerror": [69, 72, 150, 153, 164], "9f18cbb91429": 69, "ma_fonct": 69, "y2": [69, 80, 81, 84, 85, 89, 101, 118], "dehor": [69, 118, 134, 148, 150], "expliciti": 69, "ext": [69, 173], "495000": 69, "42400f095e8c": 69, "unsupported": [69, 150], "655479e1d45c": 69, "assignment": [69, 72, 165], "immut": [69, 148, 163], "ma_list": 69, "d3addcc3bdbd": 69, "indexerror": [69, 71, 72, 150, 153, 164], "1eb96223c6dd": 69, "due": 69, "5607f3ee5543": 69, "\u00e9toil": [69, 171], "26184474654812057": 69, "star": 69, "29749469599416334": 69, "305837286201697": 69, "make_squar": 70, "alic": 70, "bob": 70, "jean": [70, 103], "Ma": [70, 140], "myster": 70, "impr\u00e9visibl": [70, 165, 171], "u_": [70, 150], "conjectur": [70, 128, 129], "syracus": 70, "6893f4ac9402": 71, "58b7566d9294": 71, "d\u00e9vient": 71, "2f84bd962211": 71, "elu": 71, "somme_caracter": 71, "225cea37f121": 71, "implicitly": 71, "un_sur_d": 71, "pto": 71, "plant": [72, 153], "systemt": 72, "ced82ea8013": 72, "b85136f11268": 72, "maj_voy": 72, "ambig\u00fc": [72, 97], "produis": [72, 77, 164], "6b8ba89606bb": 72, "unhash": [72, 165], "accolad": [72, 165], "pyythoon": 72, "double_voy": 72, "populating": [73, 74, 77], "interact": [73, 74, 77], "namespac": [73, 74, 77], "construit_m": [73, 74, 78], "pointij": [73, 74], "th": [73, 74, 80, 81, 104, 107, 115], "phas": [73, 74, 76, 166], "tinc": [73, 74], "dessin_m": [73, 74], "_subplot": [73, 74], "axessubplot": [73, 74], "0x10128a58": 73, "0x9491390": 73, "0x87cef28": 74, "voisins_a_valeurs_null": 74, "tous_voisins_a_valeurs_null": 74, "liste_point": 74, "fonction_coloriag": 74, "j0": [74, 110], "\u00e9tag": 74, "acolori": 74, "doublon": [74, 124], "surface_colorie": 74, "fonction_coloriage_1000": 74, "0x14675b00": 74, "3258": 74, "0x1bc6a630": 74, "q1": 75, "uen": 75, "q2": 75, "ajoute_point": 75, "q3": 75, "adj": 75, "q4": 75, "successeurs_dico": 75, "q5": 75, "suites_chemin": 75, "q6": 75, "chemins2": 75, "q7": 75, "q8": 75, "adjacence8": 75, "che": 75, "sugger": [75, 77, 78, 82, 83, 104, 116, 120, 121, 123, 124, 125, 135, 146, 158, 165], "garde_3_el": 75, "word2dict": 75, "pyt": 75, "pyth": 75, "pytho": 75, "two_words2dict": 75, "mot1": 75, "mot2": 75, "piton": 75, "pito": 75, "pit": 75, "add_edge_hv": 75, "edge1": 75, "j1": [75, 150], "edge2": 75, "j2": [75, 150], "2pq": 75, "ajoute_diagonal": 75, "effac": [75, 164, 166, 171], "loop_on_edg": 75, "misejour": 75, "q9": 75, "trie_parit": 75, "carreau": 76, "pression": [76, 158, 171], "touch": [76, 137, 158, 164, 171], "invest": 77, "argent": 77, "rx": 77, "0404": 77, "0612080000000002": 77, "banqu": [77, 150], "pr\u00eat": [77, 171], "annuel": 77, "mensuel": [77, 142], "capital": 77, "rembours": 77, "mensual": 77, "decompose_mensualit": 77, "029": 77, "570": [77, 81], "6769646931234": 77, "429": [77, 113], "32303530687665": 77, "emprunteur": 77, "int\u00earet": 77, "km": [77, 84, 85], "cap": [77, 120, 121], "r\u00e9sulat": 77, "mensualit": 77, "666666666666668": 77, "459": 77, "63104825975415": 77, "int\u00e9ret": 77, "d\u00e9cro\u00eetr": 77, "consacr": [77, 171], "12y": 77, "somme_maximal": 77, "183000": 77, "pai": [77, 164], "somme_maximale_step": 77, "150000": 77, "186": 77, "170000": 77, "190000": 77, "139000": 77, "141000": 77, "142000": 77, "174": 77, "143000": 77, "144000": 77, "145000": 77, "146000": 77, "147000": 77, "182": [77, 106, 123], "148000": 77, "183": 77, "149000": 77, "185": 77, "151000": 77, "152000": 77, "153000": 77, "154000": 77, "155000": 77, "194": 77, "156000": 77, "196": [77, 125, 154], "157000": 77, "158000": 77, "159000": 77, "201": 77, "161000": 77, "162000": 77, "206": 77, "163000": 77, "164000": 77, "209": 77, "165000": 77, "210": [77, 86], "166000": 77, "212": 77, "167000": 77, "214": 77, "168000": 77, "215": 77, "169000": 77, "171000": 77, "172000": 77, "173000": 77, "174000": 77, "175000": 77, "176000": 77, "177000": 77, "178000": 77, "179000": 77, "181000": 77, "182000": 77, "tomb": [77, 84, 85, 105, 138, 139, 145, 149, 150, 158], "somme_maximale_mois_step": 77, "l0": [77, 150], "175312": 77, "312": 77, "175625": 77, "175937": 77, "176250": 77, "176562": 77, "176875": 77, "177187": 77, "177500": 77, "177812": 77, "178125": 77, "178437": 77, "178750": 77, "179062": 77, "179375": 77, "179687": 77, "180312": 77, "180625": 77, "180937": 77, "181250": 77, "181562": 77, "181875": 77, "182187": 77, "parisien": 77, "sl": [77, 148], "d\u00e9pens": [77, 127], "financi": 77, "apprtement": 77, "\u00e9conomis": 77, "rm": 77, "econom": 77, "eco": 77, "nbm": 77, "015": [77, 111], "25862": 77, "65218705509": 77, "carri": 77, "professionnel": 77, "metr": [77, 125], "parisen": 77, "tier": 77, "salair": [77, 141], "d\u00e9pass": [77, 138, 139], "exam2016_valu": 77, "bascul": 77, "8000": 77, "offrir": 77, "surface_max": 77, "faill": [77, 165, 166], "a40a30": 77, "2600": 77, "inflat": [77, 142], "egg": [77, 115], "esprit": [77, 103, 141], "somme_maximale_dicho": 77, "k_max": 77, "182199": 77, "99817640134": 77, "michel": [77, 98], "perd": [77, 112, 113, 116, 123, 132, 159, 165], "carnet": 77, "importun": 77, "impromptus": 77, "conson": 77, "volontair": [77, 154], "adel": 77, "gerard": 77, "transforme_numero": 77, "prenom": [77, 148, 159, 164, 169], "numero": [77, 158], "0664342267": 77, "0646342267": 77, "0660342467": 77, "oui": [77, 83, 131, 150, 164], "transforme_numero_enver": 77, "affront": 77, "9b3e94b6565": 77, "unorder": 77, "comparison": 77, "cat\u00e9goriel": 78, "epsilon_": [78, 79, 82, 83], "partial": [78, 79], "nuag": [78, 82, 83, 123, 147], "generate_xy": 78, "gauss": [78, 93, 124, 125], "996890181837922": 78, "8750295096923186": 78, "264526460045277": 78, "324063943726332": 78, "718648422500299": 78, "052469543647318": 78, "442689562115705": 78, "861870829036456": 78, "13558433730903707": 78, "5754835901808546": 78, "59230695209076": 78, "6209924216651825": 78, "610357428256408": 78, "3202733390571373": 78, "678403330137792": 78, "96766236219644": 78, "427259745518597": 78, "385862058140737": 78, "273956381823456": 78, "938275166261537": 78, "calcule_exyxyx2": 78, "sx": 78, "sxy": 78, "sx2": 78, "523441805914873": 78, "850511796328412": 78, "88928454527569": 78, "98854258182378": 78, "grandeur": [78, 126, 141], "calcule_ab": 78, "5446995618974346": 78, "859128128176218": 78, "generate_caty": 78, "cat": 78, "132157444058703": 78, "088324149707968": 78, "16315983779393228": 78, "9717657424738734": 78, "843197432779423": 78, "7204386278807904": 78, "89226869979884": 78, "16605748011543708": 78, "02903894820027486": 78, "5787816483863786": 78, "num\u00e9ros": [78, 126, 166], "numero_cat": 78, "ic": 78, "extra": [78, 165], "convert_numpy": 78, "mc": 78, "15485572": 78, "37882494": 78, "37124634": 78, "77476221": 78, "03305199": 78, "92499253": 78, "14818418": 78, "09988478": 78, "alpha_": 78, "yp": [78, 123], "multinomial": [78, 93], "0084452843428675": 78, "155449750270483": 78, "1132607428792447": 78, "897729973062269": 78, "7637316114791164": 78, "566787193134299": 78, "848567708215508": 78, "722503065860707": 78, "8043492141543047": 78, "675781652825997": 78, "histogram_cat": 78, "moyenne_cat": 78, "69914235934335": 78, "4591978296957873": 78, "080382539688736": 78, "induis": 78, "z_i": [78, 79], "obs2": [78, 104], "7763568394002505e": 78, "covari": 78, "bigm": 78, "00844528": 78, "08038254": 78, "07193726": 78, "15544975": 78, "45919783": 78, "69625192": 78, "11326074": 78, "65406291": 78, "89772997": 78, "81734743": 78, "76373161": 78, "69546622": 78, "cov": 78, "62221004e": 78, "56972711e": 78, "24829301e": 78, "53176124e": 78, "77901369e": 78, "00966261e": 78, "92890933e": 78, "54535166e": 78, "40725030e": 78, "24510807e": 78, "66666667e": 78, "77777778e": 78, "88888889e": 78, "applymap": 78, "697": 78, "525": 78, "532": 78, "478": 78, "010": [78, 113], "178": [78, 113], "089": 78, "w_i": [78, 79], "obs3": 78, "829591905722086": 78, "2193824894893863": 78, "calcule_erreur": 78, "4723463712054069": 78, "100975199731273": 78, "modal": 78, "prob": [78, 119], "pred": [78, 84, 85, 127], "pr\u00e9dir": 78, "categorical": 78, "outill": 78, "regress": 78, "ensemble_aleatoir": 79, "x_m": 79, "notin": 79, "longleftrightarrow": [79, 125], "regression_lineair": 79, "00141843": 79, "matrice_diagonal": 79, "w_1": [79, 126, 127], "w_n": [79, 126, 127], "beta_": 79, "wx": 79, "wy": 79, "regression_lineaire_pondere": 79, "xt": 79, "01240451": 79, "reciprocal": 79, "calcule_z": 79, "01330469e": 79, "26315789e": 79, "54545455e": 79, "22580645e": 79, "85185185e": 79, "47058824e": 79, "14942529e": 79, "07526882e": 79, "retour": [79, 165, 173], "13052808": 79, "82243581": 79, "104": [79, 126, 154, 165], "79608014": 79, "21524459": 79, "851019446": 79, "25815451": 79, "36420567": 79, "12644545": 79, "255554539": 79, "09141327": 79, "220626093": 79, "0777948": 79, "219023635": 79, "07639404": 79, "21901041": 79, "07631459": 79, "218994922": 79, "07622156": 79, "218976948": 79, "07611358": 79, "1737": 79, "1215": 79, "2110733": 79, "05276833": 79, "1196": 79, "55478823": 79, "77739411": 79, "1190": 79, "4919578": 79, "7459789": 79, "1183": 79, "56462833": 79, "28231416": 79, "1179": 79, "7931558": 79, "iteratively": 79, "reweighted": 79, "\u00e9tendr": [79, 82, 158, 166], "vectoriel": 79, "reprenon": 79, "e_2": 79, "e_1": 79, "retomb": 79, "absolu": [79, 80, 81, 85, 158, 164, 166], "ressort": 79, "minor": 79, "atteign": 79, "0465": 79, "posent": [79, 150], "aligned": [79, 165], "dim": [79, 97], "escali": [80, 81], "0x1f893f9e518": 80, "014962888038782651": 80, "020462778257442693": 80, "022310859639508962": 80, "03078728731371605": 80, "03153252863972433": 80, "somme_diff": [80, 81], "y_k": [80, 81], "476": [80, 113], "2380000000092": 80, "56022222223197": 80, "distance_list": [80, 81], "list_x": [80, 81], "list_y": [80, 81], "custom": [80, 86], "494": [80, 154], "7982222222412": 80, "711": 80, "6476814159435": 80, "552": [80, 81], "0x1f893ea57b8": 80, "histoir": [80, 105], "reproductibl": 80, "618": 80, "0710615624871": 80, "0x1f8943ece80": 80, "d\u00e9barrass": [80, 81], "somme_diff_ab": 80, "difference_ab": 80, "optimise_ab": [80, 81], "recalcul": [80, 81, 137], "histogramme_y": 80, "somme_diff_histogramm": 80, "optimise_rapid": [80, 81], "retranch": 80, "4096814159292": 80, "40968141593424": 80, "contiendront": 80, "fer": [80, 134, 141, 142, 150, 158, 165], "0x1f8944d3ba8": 80, "nuage2": 80, "0x1c0e33655f8": 81, "15754": 81, "105018618644": 81, "19898": 81, "600443365925": 81, "6383487080093": 81, "553": [81, 109], "2184": 81, "8079894060775": 81, "0x1c0e4c6f208": 81, "5154656398129": 81, "156": [81, 100, 123, 137], "7106930739271": 81, "0x1c0e4c90940": 81, "946": 81, "grav": 81, "t\u00f4t": [81, 100, 156], "delta_": 81, "782": 81, "somme_diff2": 81, "difference2": 81, "optimise2": 81, "628": 81, "y_1": 81, "y_2": 81, "y2_1": 81, "y2_2": 81, "13082": 81, "574312018376": 81, "574312018447": 81, "soin": [82, 83, 84, 85, 158], "random_mat": [82, 83], "21542897": 82, "02478399": 82, "89552004": 82, "24733264": 82, "393163": 82, "40164738": 82, "32997878": 82, "70660631": 82, "20765567": 82, "43301488": 82, "d\u00e9correl": [82, 83], "m_1": [82, 83, 87], "build_m1": [82, 83], "26184685": 82, "41751593": 82, "53354327": 82, "34849608": 82, "96298222": 82, "51815696": 82, "58374784": 82, "71569523": 82, "12326482": 82, "conclus": [82, 83, 113], "remis": [82, 83, 158], "v_x": [82, 83], "v_y": [82, 83], "mean_no_nan": [82, 83], "05543522": 82, "0564421": 82, "nanmean": [82, 83], "build_m2": [82, 83], "entourent": 82, "m_3": [82, 83], "fill_column": 82, "col": [82, 83, 150], "nlin": 82, "argsort": 82, "reverse_ord": 82, "bmat": 82, "build_m3": [82, 83], "18717541": 82, "d3": [82, 83, 103], "115": [82, 165], "16303767944946": 82, "990990757306854": 82, "calcul_norm": 82, "puc": [82, 83], "oreil": [82, 83], "experient": [82, 83], "repetit": [82, 83], "25531314": 82, "070392": 82, "57432808": 82, "73422968": 82, "43834865": 82, "07553875": 82, "49648148": 82, "11340377": 82, "116": [82, 164], "28344822": 82, "90363643": 82, "90465816": 82, "88595361": 82, "117": [82, 111, 112, 122], "28824424": 82, "05673836": 82, "37972659": 82, "28703801": 82, "97835736": 82, "49136146": 82, "70723528": 82, "34848088": 82, "\u00e9cart": [82, 83, 84, 85, 171], "10112512": 82, "1306255": 82, "94022724": 82, "91916954": 82, "96721215": 82, "14121786": 82, "35629971": 82, "99870181": 82, "48138722": 82, "00467304": 82, "ratio2": 82, "nerreur": [82, 83], "tend": [82, 83, 137], "build_m3_just1": 82, "imin": 82, "imax": 82, "pr\u00e9alabl": [82, 126, 165, 166], "corrcoef": [82, 83], "495": [82, 83], "979253": 82, "308262": 82, "616462": 82, "496": [82, 83], "980323": 82, "790158": 82, "667422": 82, "497": [82, 83], "977415": 82, "050925": 82, "430873": 82, "498": [82, 83, 165], "980746": 82, "885168": 82, "995820": 82, "978955": 82, "935248": 82, "137125": 82, "56987627": 83, "87585938": 83, "21230699": 83, "85706677": 83, "32971056": 83, "31614371": 83, "99469359": 83, "63550262": 83, "90844194": 83, "84040783": 83, "48750338": 83, "92138266": 83, "59978536": 83, "22258934": 83, "72143302": 83, "02229479": 83, "52222862": 83, "1157862": 83, "97598417": 83, "01928312": 83, "09388639": 83, "plus_proch": 83, "colnan": 83, "plus_proche_rapid": 83, "amin": 83, "399": 83, "83806507": 83, "88020645836853": 83, "054794671768933": 83, "9707": 83, "2287": 83, "93113166": 83, "65407502": 83, "59161999": 83, "20763444": 83, "36123306": 83, "49474066": 83, "20767715": 83, "72341549": 83, "99591576": 83, "28602503": 83, "35006845": 83, "18103292": 83, "775306": 83, "15330721": 83, "44248685": 83, "80699951": 83, "70774305": 83, "74452936": 83, "59144759": 83, "22093401": 83, "600": 83, "700": 83, "800": [83, 109], "35913762": 83, "46902292": 83, "02940671": 83, "50112628": 83, "06988804": 83, "66400287": 83, "02826212": 83, "6163169": 83, "98007237": 83, "7964768": 83, "978472": 83, "787724": 83, "693286": 83, "980944": 83, "399139": 83, "579552": 83, "979960": 83, "064428": 83, "893382": 83, "977117": 83, "492200": 83, "140280": 83, "981207": 83, "797778": 83, "785862": 83, "rond": [84, 144], "sall": [84, 85], "23606797749979": [84, 164], "585786437626905": 84, "04987562112089": 84, "cercl": [84, 85, 158], "04023026006364461": 84, "613278941761477": 84, "polair": [84, 164], "table_alea_pol": 84, "2697993898932539": 84, "07781479211233774": 84, "104239515207136": 84, "7109081402403072": 84, "46932352351540807": 84, "3259610442266929": 84, "1743368223886739": 84, "2821629999494295": 84, "skip_": [84, 85], "list_tabl": [84, 85], "7403604958859722": 84, "mur": [84, 85, 126], "151393678876878": 84, "0883943109284333": 84, "2251498896276685": 84, "9591970274173125": 84, "8759281350069976": 84, "8362221630472657": 84, "7566611650530053": 84, "0002849316792242": 84, "5208215962264875": 84, "537577072452744": 84, "650373925673775": 84, "339568894819979": 84, "31652883529303466": 84, "256221251336387": 84, "diametr": 84, "5565818929001787": 84, "05896867240161785": 84, "5288969098327476": 84, "28733719348942466": 84, "6110699282390006": 84, "32241732345580165": 84, "14909553247181195": 84, "9356539992681199": 84, "026230694145464417": 84, "2908024901550055": 84, "4975323234658624": 84, "06918255935350293": 84, "60937258121247": 84, "16579629631884596": 84, "22654870937824634": 84, "12601838486539685": 84, "651232619461013": 84, "05440550117493803": 84, "25693188063963546": 84, "044795815889184576": 84, "07316443943516515": 84, "8533292769508105": 84, "0525413549133239": 84, "patch": [84, 85, 101], "circl": [84, 124], "add_artist": [84, 85], "position": [84, 85, 158], "quadrillag": [84, 85], "hexagonal": [84, 144, 145], "spiral": [84, 85], "improve_distrib": [84, 85], "pjp": [84, 85], "best_sol": [84, 85], "351": [84, 106, 154], "16110855450954664": 84, "13158100390586172": 84, "2384176552949989": 84, "218691822411302": 84, "19838094003303594": 84, "2162723387696761": 84, "20826241454101815": 84, "350": 84, "2094900548253301": 84, "diagramm": [84, 85], "triangul": 84, "delaunay": 84, "voronoi": [84, 85], "voronoi_plot_2d": [84, 85], "vor": [84, 85], "triplot": 84, "simplic": 84, "points2": [84, 85], "vor2": [84, 85], "dela2": 84, "triangl": [84, 85, 142, 145], "\u00e9quilat\u00e9ral": [84, 85, 145], "fronti": [84, 85, 90], "peux": [84, 85], "zon": [84, 85, 164, 171], "points_in_circl": 84, "sklearn": [84, 85, 104, 122, 123], "clust": [84, 85], "n_cluster": [84, 85], "copy_x": [84, 85], "n_in": [84, 85], "n_job": [84, 85], "precompute_dist": [84, 85], "random_stat": [84, 85], "tol": [84, 85], "predict": [84, 85, 122, 123], "cluster": [84, 85], "cluster_centers_": [84, 85], "distance_n_t": [84, 85], "22015129672480682": 84, "13834146640009876": 84, "mixtur": [84, 85], "gaussianmixtur": [84, 85], "gau": [84, 85], "means_": [84, 85], "gaussian": [84, 85], "21874003784217044": 84, "2c": 85, "908190224838399": 85, "7798369055014547": 85, "6047310701361788": 85, "538160002945912": 85, "7983390011407794": 85, "6871544213644984": 85, "4887075948495667": 85, "511831256978005": 85, "1962115931817596": 85, "6710676955082597": 85, "8642968594855169": 85, "32893230449174": 85, "500463237472049": 85, "1547646758902923": 85, "7606012466424747": 85, "019429938832147": 85, "6514056477386534": 85, "596586600954664": 85, "05123812953078399": 85, "05320587377518926": 85, "37467460315675805": 85, "4937702081221422": 85, "3485943522613466": 85, "6259118658008394": 85, "1764558984440392": 85, "6004143527243244": 85, "4008125902558497": 85, "052940751769248395": 85, "547095264138868": 85, "7525281574947777": 85, "6243952889602158": 85, "2784959002399452": 85, "16893417347025785": 85, "15965080092875694": 85, "5866949933059173": 85, "6062900542195173": 85, "43564615941411566": 85, "26135901810381923": 85, "2792244176019283": 85, "7961649730497629": 85, "28673576049151195": 85, "08784118387851514": 85, "2840288333247212": 85, "7893555701617381": 85, "6299236074366998": 85, "19575062032543844": 85, "facecolor": 85, "rectangulair": 85, "07797442236028274": 85, "17084871553555847": 85, "16055223380264586": 85, "22481137276979984": 85, "points_in_rectangl": 85, "19622641509433936": 85, "2016527778991591": 85, "14695957901204992": 85, "trompeur": 85, "v\u00e9rit": [86, 141], "covid": [86, 91], "435": 86, "2322": 86, "642": 86, "3128": 86, "3580": 86, "1041": 86, "4188": 86, "1251": 86, "695": 86, "452": 86, "608": 86, "1104": 86, "1105": 86, "966": 86, "1106": [86, 113], "1107": 86, "1108": 86, "erron": [86, 87, 153, 164], "exponentiel": [86, 165], "donnees_artificiel": 86, "dayofyear": 86, "exponential": 86, "examen2021": 86, "dure": 86, "nt": [86, 168], "98965342710248": 86, "lifelin": 86, "kaplanmeierfitt": 86, "kmf": 86, "portail": 86, "propagation_n": 86, "propagation_vaccin": 86, "propagation_n_vaccin": 86, "prop": 86, "immunis": 86, "3h": 86, "passent": [86, 140, 150], "p4": 86, "mesure_temps_fonct": 87, "10280692000000005": 87, "bc": 87, "189998290": 87, "18042000": 87, "009560690999999987": 87, "009846866999999992": 87, "001004321000000008": 87, "n_op": 87, "m1_shap": 87, "m2_shap": 87, "185998326": 87, "n_ops_3": 87, "sh1": 87, "sh2": 87, "sh3": 87, "m1_m2m3": 87, "m1m2_m3": 87, "36084000": 87, "testing": [87, 90, 112], "assert_almost_equal": [87, 112], "produit3": 87, "0011657070000000048": 87, "0011010209999999887": 87, "n_ops_4": 87, "sh4": 87, "m1_m2m3m4": 87, "m1m2_m3m4": 87, "m1m2m3_m4": 87, "11331640": 87, "produit4": 87, "000988687999999982": 87, "010446371000000027": 87, "008082993999999956": 87, "0008713240000000155": 87, "0009054390000000013": 87, "m_n": 87, "mm_i": 87, "verront": 87, "n_ops_n": 87, "unexpected": [87, 94, 95, 112], "best_cost": 87, "best_pos": 87, "product_n": 87, "bot": 87, "0009734980000000349": 87, "0009873739999999031": 87, "m5": [87, 158], "9697854": 87, "probl\u00e9mat": [87, 150], "n_ops_n_opt": 87, "product_n_opt": 87, "0010903469999999516": 87, "0009383259999999893": 87, "01018160299999991": 87, "calcu": 87, "suivr": [87, 95, 150, 158, 164, 166], "longtemp": 87, "hauteur": [88, 137, 145, 158], "mati": 88, "surface_br": 88, "brique_optimal": 88, "surf": 88, "additionnel": 88, "brique_optimale_surplus": 88, "4471428571428575": 88, "4285714285714286": 88, "exclur": 88, "producteur": 88, "\u00e9coul": [88, 128, 129, 161, 168], "marchandis": 88, "surface_brique2": 88, "brique_optimale_surplus_deux_litr": 88, "surf1": 88, "surf2": 88, "6938095238095245": 88, "7857142857142858": 88, "envoi": [88, 107, 113, 130, 150, 153, 158, 164, 166, 171], "maxxy": 89, "seg": 89, "tree3": 89, "rl": 89, "tree_recurs": 89, "level": [89, 150, 164], "all_seg": 89, "iter_seg": 89, "new_seg": 89, "tree3_al": 89, "re_rnd": 89, "rl_rnd": 89, "a3": [89, 131], "tree_recursive_al": 89, "tirage_al": 90, "n_ru": 90, "n_med": 90, "07629544": 90, "9432004": 90, "52035232": 90, "47051663": 90, "89432851": 90, "07652123": 90, "01653439": 90, "99436816": 90, "1499065": 90, "10758634": 90, "29317605": 90, "76729661": 90, "97237465": 90, "25573414": 90, "60399214": 90, "72086801": 90, "76951744": 90, "75725811": 90, "6663647": 90, "92848284": 90, "07308657": 90, "11122628": 90, "92539686": 90, "48536534": 90, "43820312": 90, "26151317": 90, "74683167": 90, "40646889": 90, "92033983": 90, "88312987": 90, "emp\u00each": [90, 98, 162, 164, 165, 171], "83198031": 90, "96466894": 90, "77179962": 90, "85889438": 90, "8461793": 90, "57370393": 90, "40531662": 90, "22456834": 90, "23536145": 90, "57466486": 90, "82197491": 90, "41002286": 90, "49221173": 90, "36141496": 90, "80702793": 90, "88495069": 90, "04168846": 90, "84550633": 90, "93752849": 90, "91062519": 90, "07690611": 90, "86261363": 90, "32681556": 90, "66757055": 90, "0931767": 90, "69200264": 90, "69223434": 90, "52616512": 90, "57965512": 90, "63777092": 90, "91082466": 90, "23438729": 90, "53420279": 90, "27127587": 90, "62954985": 90, "80840816": 90, "39845012": 90, "48835731": 90, "34532585": 90, "3555345": 90, "94993319": 90, "31340719": 90, "59626523": 90, "351522": 90, "19644616": 90, "00989466": 90, "51327456": 90, "70491577": 90, "52817942": 90, "25799275": 90, "assert_allclos": 90, "test_dist": 90, "tolist": [90, 97, 112], "nm": [90, 137], "plus_proche_medecin": 90, "p_min": 90, "p_max": 90, "floor": [90, 171], "test_grill": 90, "map_grille_indic": 90, "xi": 90, "test_map": 90, "pairwise_distance_grill": 90, "gx": 90, "gy": 90, "test_distance_grill": 90, "415": 90, "470": 90, "8018622000236064": 90, "8201483000302687": 90, "8459657999919727": 90, "8035789999994449": 90, "8155568999936804": 90, "026652099972125143": 90, "01595849997829646": 90, "01231670001288876": 90, "012164799962192774": 90, "011980499955825508": 90, "imaginon": [90, 127, 130, 150], "situ": [90, 105, 164, 166], "extr\u00eam": 90, "plus_proche_medecin_grill": 90, "mg": 90, "co\u00efncident": 90, "irait": 90, "techniqu": [90, 100, 112, 168], "nearest": [90, 158], "closest": 90, "illustrent": 91, "\u00e9labor": [91, 166], "briqu": [91, 164], "streaming": 91, "bjkst": 91, "apart": [91, 140, 164, 168], "sird": 91, "cass": [91, 118, 126, 134, 135], "vigener": [91, 93], "mors": [91, 147], "cryptag": [91, 168], "homomorphic": 91, "craig": 91, "gentry": 91, "2a": [91, 165], "d\u00e9": [13, 93], "rotat": [13, 93, 147], "contingent": 93, "gin": 93, "pickl": [93, 104, 166, 168, 169], "scraping": [8, 93], "pokemon": [8, 93], "devin": [93, 141], "langu": [93, 153, 162], "bigarr": 93, "magiqu": 93, "annot": 94, "manipulent": [94, 150, 152, 162, 166], "mypy": 94, "incoh\u00e9rent": 94, "formatt": [94, 165, 171], "ruff": 94, "fac": [94, 102, 124, 141, 150], "0x7fec374f5ed0": 94, "de_autr": 94, "sigma_or_n": [94, 95], "nouvel_ensembl": [94, 95], "attrap": [94, 154, 158], "rotation1": [94, 102], "rotation2": [94, 102], "test_rotation1": [94, 102], "de0": [94, 102], "assertionerror": [94, 118], "test_rotation2": [94, 102], "addict": 97, "4x4": [97, 138], "creer_jeu": 97, "position_libr": 97, "nombre_aleatoir": 97, "joue_ligne_colon": 97, "lc": 97, "non_null": 97, "non_null2": 97, "joue_coup": 97, "coup_suiv": 97, "c2048": 97, "__repr__": [97, 150, 158], "calcule_scor": 97, "62it": 97, "84it": 97, "coll": [97, 143], "c2048_4": 97, "sharey": 97, "sharex": 97, "\u00e9leg": [98, 116, 130, 150, 171], "dictionnairr": 98, "lat": 98, "846651": 98, "lng": 98, "285811": 98, "orthographi": [98, 153], "autocomplet": 98, "radius": 98, "6371": 98, "dlat": 98, "radian": 98, "dlon": 98, "atan2": [98, 150, 164], "station1": 98, "station2": 98, "emil": 98, "zol": 98, "847030": 98, "295262": 98, "6928550943713419": 98, "oblig": [98, 141, 150, 151], "rigid": 98, "__rshift__": [98, 150], "retir": [99, 140, 158, 171], "proposent": [99, 130, 140, 150, 158, 166], "diff\u00e9": 99, "minis": 99, "appendleft": [99, 159], "2462739999955374e": 99, "0353370000029826e": 99, "81406999999308e": 99, "796050000029936e": 99, "953019999920797e": 99, "313129999987723e": 99, "568269999956101e": 99, "580999999987398e": 99, "447889999933977e": 99, "401670000057492e": 99, "71205999999438e": 99, "6167699999641626e": 99, "fen": 99, "977897000002485e": 99, "178353999994215e": 99, "823300000178278e": 99, "471699999769044e": 99, "712876000006872e": 99, "798504000003959e": 99, "035500000005414e": 99, "195899999918766e": 99, "84480600000461e": 99, "923587000006591e": 99, "347799999479321e": 99, "471000000601634e": 99, "162": 100, "105": [100, 158], "405": 100, "simulation_multinomial": 100, "library": 100, "ale": [100, 141], "430": 100, "pc": 100, "poids_cumul": 100, "poids_cumule_tr": 100, "009419400001206668": 100, "007181299999501789": 100, "010566299999481998": 100, "0066910000023199245": 100, "007558699999208329": 100, "006804499997087987": 100, "poids_tr": 100, "00013789999866276048": 100, "00010370000018156134": 100, "0004912999975204002": 100, "00014940000255592167": 100, "950000170036219e": 100, "0002525000018067658": 100, "nomrbr": 100, "06869539999752305": 100, "00884070000029169": 100, "08114130000103614": 100, "0094169999974838": 100, "06719900000098278": 100, "01211440000042785": 100, "stockag": 100, "pch": 101, "add_patch": 101, "polygon": 101, "surface_invers": 101, "6325000000000005": 101, "surface_inverse_dicho": 101, "63232421875": 101, "x3": 101, "y3": 101, "surface_inv_t": 101, "63234375": 101, "d\u00e9fectu": 101, "surface_inv_math": 101, "6324555320336759": 101, "3675444679663242": 101, "152": [101, 108], "coloriage_diagonal": 101, "concr\u00e9tis": 101, "comprom": 101, "exo_d": 102, "am\u00e8nent": 102, "nouveau_d": 102, "tourne_d": 102, "\u00e9thiqu": 103, "valjean": 103, "coset": 103, "fantin": 103, "marius": 103, "pontmercy": 103, "gavroch": 103, "th\u00e9nardi": 103, "antagon": 103, "javert": 103, "monsieur": [103, 107, 148, 152], "madam": 103, "babet": 103, "claquesous": 103, "montparn": 103, "gueulem": 103, "brujon": 103, "bamatabois": 103, "victurnien": 103, "amis": 103, "enjolr": 103, "combeferr": 103, "courfeyrac": 103, "prouvair": 103, "feuilly": 103, "bahorel": 103, "lesgl": 103, "joly": 103, "grantair": 103, "secondair": [103, 171], "ami": 103, "favourit": 103, "dahli": 103, "z\u00e9phin": 103, "f\u00e9lix": 103, "tholomyes": 103, "listoli": 103, "fameuil": 103, "blachevel": 103, "fauchelevent": 103, "mabeuf": 103, "azelm": 103, "toussaint": 103, "luc": 103, "gillenormand": 103, "georg": [103, 159], "\u00e9v\u00eaqu": 103, "myriel": 103, "baptistin": 103, "mme": 103, "magloir": 103, "gerv": 103, "modulo": [103, 153, 165], "congruentiel": 103, "22695477": 103, "c_n": 103, "\u00e9niem": [103, 173], "hashlib": [103, 168], "unsigned": 103, "5381": 103, "exp\u00e9rient": [103, 130, 150, 164, 165], "voi": [103, 136], "ds_legend": 103, "repartit": 103, "sha256": 103, "encod": [103, 162, 165, 166], "digest": 103, "d4": 103, "light_hash": 103, "d5": 103, "load_ir": 104, "load_dat": 104, "feature_nam": 104, "fleur": 104, "target_nam": 104, "sepal": 104, "length": [104, 173], "petal": 104, "virginic": 104, "148": [104, 119], "n5": 104, "setos": 104, "n4": 104, "lengt": 104, "florid": 104, "georgi": 104, "alask": 104, "quebec": 104, "versicolor": 104, "ireland": 104, "jacent": 104, "plat": [104, 140], "d\u00e9criv": [104, 165], "localis": 104, "flatbuffer": 104, "messagepack": 104, "coloriage_carr": 104, "histogramme_rapid": 104, "dummy": [104, 107], "exercice_json_xml": 104, "tableau_contingent": 104, "nbheap": 104, "classes_2048": 104, "profile_gin": 104, "pivot_gauss": [104, 110], "profiling_exampl": 104, "exercice_p": 104, "code_multinomial": 104, "code_liste_tupl": 104, "tri_nlnd": 104, "structures_donnees_convers": 104, "virtuel": 104, "json_text": 104, "res2": 104, "html_text": 104, "to_html": 104, "thead": 104, "styl": [104, 112, 114, 154, 165], "tbody": [104, 115], "df_html": 104, "read_html": 104, "df_locat": 104, "merged": 104, "450": [104, 113, 114, 127], "df_locations2": 104, "dfe": 104, "engin": 104, "openpyxl": [104, 166], "myzip": 104, "kernel": [104, 112], "crashed": 104, "executing": 104, "previous": [104, 158], "review": 104, "identify": 104, "failur": 104, "click": 104, "href": [104, 115, 141], "aka": 104, "vscodejupyterkernelcrash": 104, "viewoutput": 104, "glob": [104, 150, 153, 154, 164, 165, 166, 168, 173], "enregist": 104, "contig\u00fc": 104, "sock": 104, "sotck": 104, "reviendront": 104, "communiqu": [104, 107, 126, 169], "tripl": [105, 158], "surface_cerl": 105, "surface_cercl": 105, "53981633974483": 105, "p_i": 105, "quart": 105, "inscrit": [105, 146, 171], "estimation_p": 105, "dedans_enti": 105, "216": 105, "surface_cercle_p": 105, "tri_al": 105, "dommag": 105, "tri_alea2": 105, "m\u00e8nen": 105, "tri_alea3": 105, "eval_c": 105, "cs": 105, "ec": [105, 141], "14it": 105, "alentour": 105, "regular": [106, 140, 173], "exrp": 106, "normaliz": [106, 146, 147], "unicod": [106, 162], "unicodedat": 106, "strip_accent": 106, "nfd": [106, 123], "t\u00eatu": 106, "tetu": 106, "text_sans_accent": 106, "findall": [106, 115, 140, 141, 173], "za": [106, 173], "signifi": [106, 148, 150, 152, 153, 158, 165, 168, 171], "extract_words_lettr": 106, "nje": 106, "nqui": 106, "ngolf": 106, "nlanc": 106, "ndan": 106, "npaix": 106, "nque": 106, "nsilenc": 106, "02d": 106, "h\u00e9t\u00e9rogen": 107, "m\u00e9anism": 107, "reconstruir": 107, "lis": [107, 166], "141592653589793": [107, 168], "comp": 107, "314": 107, "320": [107, 116], "conteneur": [107, 165], "wikidat": 107, "magoo": 107, "creator": 107, "millard": 107, "kaufman": 107, "hubley": 107, "cartoon": 107, "aventur": 107, "c\u00e9lebr": 107, "neuf": [107, 130, 165], "simplejson": 107, "ijson": 107, "wikidatawik": 107, "entit": [107, 150, 164], "latest": 107, "lexem": 107, "bz2": 107, "l4": 107, "lemm": 107, "windsurf": 107, "lexicalcategory": 107, "q24905": 107, "q1860": 107, "p5238": 107, "malgr": [107, 154, 164, 165], "orjson": 107, "mainsnak": 107, "snaktyp": 107, "datavalu": 107, "entity": 107, "numeric": [107, 122, 165], "3324": 107, "l3324": 107, "wikibas": 107, "entityid": 107, "datatyp": 107, "qualifi": 107, "p1545": 107, "2a1ced1dca90648ea7e306acbadd74fc81a10722": 107, "faad30b0": 107, "421c": 107, "803a": 107, "c1fd": 107, "b9a99a0eb35d": 107, "18537": 107, "l18537": 107, "7241753c62a310cf84895620ea82250dcea65835": 107, "d15285a1": 107, "4880": 107, "7a9b": 107, "bb1f": 107, "85403e1a785": 107, "p5187": 107, "monolingualtext": 107, "d4a63d17": 107, "43e": 107, "749d": 107, "5860": 107, "21b90feb83f7": 107, "windsurfing": 107, "grammaticalfeatur": 107, "q10345583": 107, "f3": 107, "q110786": 107, "q3910936": 107, "q51929074": 107, "f4": 107, "windsurfed": 107, "q1392475": 107, "f5": 107, "q1230649": 107, "f6": 107, "gloss": 107, "planch": [107, 141], "u00e0": 107, "voil": 107, "meluncur": 107, "angin": 107, "zh": 107, "u6ed1": 107, "u6d6a": 107, "u98a8": 107, "u5e06": 107, "hant": 107, "tw": 107, "u00e1": 107, "u00edng": 107, "hong": 107, "ph": 107, "u00e2ng": 107, "u0e40": 107, "u0e25": 107, "u0e48": 107, "u0e19": 107, "u0e27": 107, "u0e34": 107, "u0e14": 107, "u0e4c": 107, "u0e0b": 107, "u0e23": 107, "u0e1f": 107, "tg": 107, "u0441": 107, "u0451": 107, "u0440": 107, "u0444": 107, "u0438": 107, "u043d": 107, "u0433": 107, "u0431": 107, "u043e": 107, "u0437": 107, "u0448": 107, "u0430": 107, "u043c": 107, "u043b": 107, "u04e3": 107, "fi": [107, 158, 166], "purjelautaill": 107, "p5137": 107, "191051": 107, "q191051": 107, "13e5f498": 107, "4deb": 107, "ea41": 107, "4d60": 107, "02c852b88b4c": 107, "p5972": 107, "l144039": 107, "7218013f": 107, "b84b": 107, "40fa": 107, "b57b": 107, "bc1ba2239bb8": 107, "pageid": 107, "54387040": 107, "lastrevid": 107, "1710596079": 107, "22t19": 107, "34z": 107, "l314": 107, "q1084": 107, "q7026": 107, "p5185": 107, "1775415": 107, "q1775415": 107, "45650151": 107, "4ed8": 107, "025d": 107, "e36ef22e6a2": 107, "q146786": 107, "54387050": 107, "684359491": 107, "24t07": 107, "21z": 107, "verbeux": [95, 107, 169], "abandon": [107, 141], "dict2xml": 107, "restreint": 107, "lde": 107, "dill": [107, 166], "getstat": 107, "et_setstat": 107, "num": [108, 158], "count1": 108, "count2": 108, "count3": 108, "cytoolz": 108, "count4": 108, "swap": 109, "echang": 109, "entas": 109, "dessine_t": 109, "_heapify_max_bottom": 109, "_heapify_max_up": 109, "topk_min": 109, "_heapify_max_bottom_posit": 109, "_heapify_max_up_posit": 109, "topk_min_posit": 109, "ext_test_cas": [109, 110], "20001": 109, "div_by_numb": 109, "01it": 109, "averag": [109, 110], "deviat": [109, 110], "min_exec": [109, 110], "max_exec": [109, 110], "ttim": [109, 110], "context_siz": [109, 110], "warmup_tim": [109, 110], "001400": 109, "000271": 109, "001090": 109, "001892": 109, "014000": 109, "001138": 109, "002110": 109, "000517": 109, "001622": 109, "003214": 109, "021104": 109, "001633": 109, "001967": 109, "000299": 109, "001747": 109, "002545": 109, "019669": 109, "002969": 109, "3000": [109, 111], "002692": 109, "000611": 109, "002081": 109, "003779": 109, "026925": 109, "003983": 109, "4000": 109, "003096": 109, "000276": 109, "002660": 109, "003578": 109, "030960": 109, "003305": 109, "33it": 109, "008493": 109, "001842": 109, "006837": 109, "013038": 109, "084926": 109, "014053": 109, "009114": 109, "002111": 109, "007600": 109, "013480": 109, "091137": 109, "022466": 109, "650": 109, "011651": 109, "003198": 109, "008757": 109, "017215": 109, "116511": 109, "010779": 109, "011374": 109, "001973": 109, "009725": 109, "016044": 109, "113739": 109, "012545": 109, "950": 109, "016104": 109, "003647": 109, "011865": 109, "022728": 109, "161042": 109, "018794": 109, "1100": 109, "_heapify_max_up_position_simpl": 109, "topk_min_position_simpl": 109, "58650968": 110, "72315516": 110, "9137217": 110, "04526746": 110, "70012278": 110, "87604076": 110, "92402115": 110, "36865515": 110, "00362559": 110, "26361505": 110, "pivot_gauss2": 110, "pivot_gauss3": 110, "numpy1": 110, "numpy2": 110, "17it": 110, "000051": 110, "000028": 110, "000125": 110, "000512": 110, "000728": 110, "000045": 110, "000021": 110, "000094": 110, "000447": 110, "000046": 110, "000024": 110, "000110": 110, "000197": 110, "001367": 110, "000253": 110, "001134": 110, "000540": 110, "000623": 110, "002258": 110, "011340": 110, "003184": 110, "001312": 110, "000678": 110, "000639": 110, "002858": 110, "013121": 110, "001035": 110, "000375": 110, "000184": 110, "000233": 110, "000818": 110, "003753": 110, "001292": 110, "001557": 110, "001094": 110, "000686": 110, "003803": 110, "015571": 110, "016613": 110, "000404": 110, "000062": 110, "000331": 110, "000553": 110, "004045": 110, "000364": 110, "000471": 110, "000037": 110, "000440": 110, "000545": 110, "004713": 110, "000482": 110, "003798": 110, "001491": 110, "002594": 110, "007715": 110, "037978": 110, "018972": 110, "001324": 110, "000265": 110, "001054": 110, "002030": 110, "013239": 110, "001341": 110, "000820": 110, "000190": 110, "000602": 110, "001140": 110, "008200": 110, "000651": 110, "004260": 110, "001177": 110, "002724": 110, "006471": 110, "042603": 110, "005198": 110, "001690": 110, "000268": 110, "001100": 110, "002116": 110, "016902": 110, "001080": 110, "009320": 110, "002581": 110, "005762": 110, "013509": 110, "093197": 110, "015497": 110, "001664": 110, "000133": 110, "001458": 110, "001827": 110, "016641": 110, "001309": 110, "005314": 110, "001348": 110, "003848": 110, "008252": 110, "053141": 110, "016670": 110, "001629": 110, "000216": 110, "001459": 110, "002045": 110, "016286": 110, "001499": 110, "011036": 110, "003890": 110, "007070": 110, "018254": 110, "110356": 110, "017467": 110, "002637": 110, "000582": 110, "001846": 110, "003606": 110, "026375": 110, "002417": 110, "021563": 110, "003232": 110, "017314": 110, "029488": 110, "215629": 110, "028747": 110, "004673": 110, "001109": 110, "003391": 110, "005935": 110, "046730": 110, "005792": 110, "profilag": 111, "concentr": 111, "_gini_sort": 111, "_gini_in": 111, "spy": [111, 112], "centiem": 111, "souv": 111, "ralent": [111, 112, 171], "profiler": 111, "disabl": [111, 112, 113, 122], "sortby": [111, 112], "print_stat": [111, 112, 113, 122], "ordered": [111, 112, 113, 122], "ncall": [111, 112, 113, 122], "tottim": [111, 112, 113, 122], "percall": [111, 112, 113, 122], "cumtim": [111, 112, 113, 122], "lineno": [111, 112, 113, 122, 154, 156], "venv": [111, 140], "python3": [111, 112, 140, 154, 158], "interactiveshel": [111, 112, 122], "3472": [111, 112], "run_cod": [111, 112, 122], "exec": [111, 122, 150, 153, 154, 165, 168], "usr": [111, 112, 140, 154], "codeop": [111, 112, 122], "__call__": [111, 112, 122], "ipykernel_23329": 111, "1877708867": 111, "1359775409": 111, "contextlib": [111, 112], "next": [111, 128, 129, 150, 153, 164], "traitlet": [111, 112], "692": [111, 112], "__get__": [111, 112], "compilerop": [111, 112, 140], "extra_flag": [111, 112], "getattr": [111, 112, 122], "3424": [111, 112], "654": [111, 112], "listcomp": [111, 112, 113, 122, 150], "1229": [111, 112], "user_global_n": [111, 112], "_lsprof": [111, 113], "11038": 111, "682": 111, "841": 111, "132": 111, "4034582288": 111, "024": 111, "436": 111, "003": [111, 113], "909": 111, "002": 111, "914": 111, "058": 111, "060": 111, "007": [111, 112], "398": 111, "392": 111, "013": [111, 113], "026": 111, "008": 111, "_gini_final_fast": 111, "gini_fast": 111, "017": 111, "543": 111, "1862792531": 111, "866": 111, "867": 111, "528": 111, "530": 111, "070": 111, "stop": 111, "output_html": 111, "_gini_cumsum2": 111, "_gini_cumsum2b": 111, "gini2": 111, "023": 111, "239060152": 111, "124": 111, "926": 111, "898": 111, "905": 111, "057": 111, "040": 111, "042": 111, "908": 111, "649": 111, "651": 111, "030": 111, "076": 111, "_gini_cumsum3b": 111, "total0": 111, "total1": 111, "_gini_cumsum3": 111, "gini3": 111, "022": [111, 113], "1743022160": 111, "059": 111, "064": 111, "921": 111, "917": 111, "012": 111, "699": 111, "028": [111, 113], "077": 111, "essayent": 112, "upload": 112, "wikimedi": 112, "9f": 112, "convolutionandpooling": 112, "signal": [112, 171, 173], "convolve2d": 112, "img": [112, 115], "11111111": 112, "000002": 112, "000004": 112, "convolve_na": 112, "9999995": 112, "000001": 112, "convolve_naive2": 112, "999998": 112, "retournent": [112, 165, 173], "test_unitair": 112, "decimal": [112, 164], "devien": 112, "_get_indic": 112, "_is_out": 112, "im2col_na": 112, "kernel_shap": 112, "fill_valu": 112, "mismatch": 112, "output_shap": 112, "middl": 112, "kernel_siz": 112, "data_siz": 112, "i_dat": 112, "i_kernel": 112, "t_dat": 112, "t_kernel": 112, "i_out": 112, "convolve_im2col_na": 112, "conv": 112, "999996": 112, "test_unitaire2": 112, "dirnam": [112, 166], "exec_prefix": 112, "profile_cod": 112, "133426": 112, "722": [112, 171], "361": [112, 113], "ipykernel_7262": 112, "3679460054": 112, "3311625431": 112, "88200": 112, "44100": 112, "fromnumeric": [112, 113, 122], "2979": 112, "_wrapreduct": [112, 113, 122], "dictcomp": [112, 113], "2974": 112, "_prod_dispatch": 112, "profileur": [112, 113], "rentr": [112, 141, 158], "text_prof": 112, "pre": 112, "whit": 112, "00042": 112, "92883": 112, "00273": 112, "92841": 112, "35591": 112, "92471": 112, "00016": 112, "00087": 112, "00575": 112, "00169": 112, "00488": 112, "00035": 112, "ict": 112, "meth": [112, 150], "00065": 112, "unc": 112, "00203": 112, "ufunc": [112, 113, 122], "28951": 112, "46552": 112, "176400": 112, "09528": 112, "08072": 112, "09562": 112, "00026": 112, "00009": 112, "00011": 112, "00040": 112, "00068": 112, "00022": 112, "00098": 112, "176600": 112, "09539": 112, "88300": 112, "08095": 112, "proc\u00e8dent": 112, "interromp": 112, "enregistrent": [112, 156], "marqueur": 112, "interrompu": [112, 164], "interrompr": [112, 148, 158, 162, 164], "sampling": [112, 127], "d\u00e9buggag": 112, "im2col_recurs": 112, "im2col_naive_implement": 112, "fall_back_dim": 112, "func": [112, 113, 158], "torch": 112, "nn": 112, "unfold": 112, "padding": 112, "below": 112, "switch": 112, "k0": 112, "mini_kernel": 112, "mini_shap": 112, "cached": 112, "cc2": 112, "new_shap": 112, "resh": 112, "convolve_im2col_recurs": 112, "test_unitaire3": 112, "r\u00e9impl\u00e9ment": 113, "9644453525543213": 113, "density": 113, "sigma2": 113, "001481771469116211": 113, "doprofil": 113, "normpath": [113, 122], "getcwd": [113, 158, 166], "base_prefix": 113, "dump_stat": 113, "10000000": 113, "6027283668518066": 113, "00013383": 113, "_distn_infrastructur": 113, "1958": 113, "142": 113, "_continuous_distn": 113, "_pdf": 113, "_norm_pdf": 113, "093": 113, "_multiarray_umath": 113, "implement_array_funct": 113, "048": 113, "__array_function__": 113, "function_bas": 113, "1912": [113, 124, 125], "_insert": 113, "975": 113, "_support_mask": 113, "putmask": 113, "021": 113, "559": 113, "argsreduc": 113, "2406": 113, "2307": 113, "604": 113, "broadcast_array": 113, "stride_trick": 113, "480": [113, 116], "546": 113, "340": 113, "_broadcast_to": 113, "_ufunc_config": 113, "seterr": 113, "atleast_1d": 113, "shape_bas": 113, "416": 113, "_broadcast_shap": 113, "geterr": 113, "538": 113, "seterrobj": 113, "geterrobj": 113, "345": [113, 165], "genexpr": 113, "asarray": 113, "1965": 113, "542": 113, "promote_typ": 113, "425": 113, "_argcheck": 113, "_maybe_view_as_subclass": 113, "2302": 113, "_any_dispatch": 113, "multiarray": 113, "1961": 113, "_shape_dispatch": 113, "ndit": 113, "1908": 113, "_place_dispatch": 113, "_get_support": 113, "asanyarray": 113, "_parse_arg": 113, "_atleast_1d_dispatch": 113, "2401": 113, "_all_dispatch": 113, "_broadcast_arrays_dispatch": 113, "1882781982421875": 113, "ipykernel_29119": 113, "200996087": 113, "guis": 113, "\u00e9voqu": [114, 153], "fatal": 114, "dicho": 114, "liste_trie": 114, "recherche_dichotomique_recurs": 114, "parametres": 114, "para\u00eetr": [114, 150], "recherche_dichotomique_recursive2": 114, "pok\u00e9mon": 115, "pokemondb": 115, "demandon": 115, "721": 115, "pok\u00e9dex": 115, "training": [115, 123], "breeding": 115, "databas": 115, "dossi": 115, "shutil": [115, 168], "bs4": 115, "utilison": 115, "agent": 115, "mozill": 115, "req": 115, "pokedex": 115, "header": 115, "beautifulsoup": 115, "lxml": 115, "liste_pokemon": 115, "span": [115, 173], "infocard": 115, "lg": 115, "get_pag": 115, "pokemon_nam": 115, "url_pokemon": 115, "get_cara_pokemon": 115, "defaultdict": 115, "vital": 115, "table_body": 115, "findchildren": 115, "findchild": 115, "gettext": 115, "bulbasaur": 115, "ivysaur": 115, "venusaur": 115, "charmand": 115, "charmeleon": 115, "charizard": 115, "squirtl": 115, "spec": 115, "height": [115, 158], "abilit": 115, "ev": [115, 141, 158], "catch": 115, "rat": 115, "gend": 115, "hp": 115, "attack": 115, "defens": 115, "sp": [115, 123], "atk": 115, "speed": 115, "grass": 115, "seed": 115, "kg": 115, "lb": 115, "overgrowchlorophyll": 115, "hidden": 115, "ability": 115, "yellow": 115, "0226": 115, "gold": 115, "silv": 115, "cryst": 115, "pok\u00e9ball": 115, "medium": 115, "slow": 115, "monst": 115, "femal": 115, "884": 115, "140": 115, "0002": 115, "0227": 115, "0003": 115, "0228": 115, "0004": 115, "fir": 115, "lizard": 115, "blazesolar": 115, "0229": 115, "dragon": 115, "0005": 115, "flam": 115, "0230": 115, "artwork": 115, "jpg": 115, "out_fil": 115, "copyfileobj": 115, "butterfre": 115, "spearow": 115, "skimag": 115, "imio": 115, "imread": 115, "imshow": 115, "get_xax": 115, "get_yax": 115, "amus": 116, "gh": 116, "er": 116, "recontruir": 116, "36960": 116, "cpython": 116, "dv": 116, "devrion": 116, "max_j": 116, "r\u00e9present": 116, "arr": [116, 139], "r\u00e9f\u00e9renc": [116, 150], "\u00e9norm": 116, "9x8": 116, "amat": 116, "aarr": 116, "00984": 116, "00112": 116, "nb_lin": 116, "nb_col": 116, "chi_2": 117, "facteur": 117, "bullet": 117, "n_": 117, "asymptot": 117, "libert": [117, 141, 171], "pr\u00e9f\u00e9rent": [117, 150, 164, 165], "evident": 117, "chi2_contingency": 117, "chi2": 117, "pvalu": 117, "168598503892621": 117, "4045712090580829": 117, "nj": 117, "nij": 117, "52941176": 117, "88235294": 117, "58823529": 117, "47058824": 117, "61764706": 117, "16176471": 117, "impens": 118, "milli": 118, "unit_test": 118, "valeur_attendu": 118, "tour_prend_piec": 118, "test_tour_prend_piec": 118, "tour_prend_piece_tupl": 118, "test_tour_prend_piece_tupl": 118, "_tour_prend_piec": 118, "colori": 118, "find_neighbour": 118, "coloring": 118, "next_cas": 118, "tour_prend_piece_obstacl": 118, "test_": 118, "assurent": 118, "\u00e9crivent": [118, 166], "testent": 118, "pytest": 118, "commencenc": 118, "test_tour_prend_piece_obstacle_except": 118, "sorted_hist": 119, "recontruit": 119, "sorted_en": 119, "sort_with_hist": 119, "sort_with_nohist": 119, "immpl\u00e9ment": 119, "smoothsort": 119, "slowest": 119, "took": 119, "fastest": 119, "quoiqu": 119, "sort_with_nohist_nocopy": 119, "tableaux_aleatoir": 119, "enss": 119, "fonc": [119, 154], "1e10": [119, 125], "nlnn": 119, "6e": 119, "grossi": [119, 146], "403": 119, "1096": 119, "2980": 119, "8103": 119, "22026": 119, "59874": 119, "162754": 119, "442413": 119, "df100": 119, "dfm": 119, "1e9": 119, "homomorph": [120, 121], "pr\u00e9serv": [120, 121], "fully": [120, 121], "encrypt": [120, 121], "keygen": [120, 121], "secret": [120, 121], "sk": [120, 121], "eta": [120, 121], "publiqu": [120, 121, 168], "pk": [120, 121], "tau": [120, 121], "gamm": [120, 121], "rho": [120, 121, 164], "x_0": [120, 121], "r_p": [120, 121], "2r": [120, 121], "c_t": [120, 121], "decrypt": [120, 121], "rem\u00e9di": [122, 150, 164, 171], "memory_profil": 122, "make_classif": [122, 123], "datax": [122, 123], "datay": [122, 123], "n_featur": [122, 123], "n_class": [122, 123], "n_clusters_per_class": [122, 123], "n_inform": [122, 123], "85382076": 122, "22046675": 122, "24910001": 122, "94596312": 122, "66829759": 122, "20552856": 122, "72023578": 122, "84674932": 122, "26846378": 122, "20075415": 122, "59306412": 122, "88866079": 122, "76923866": 122, "32519462": 122, "94535057": 122, "47877141": 122, "2276281": 122, "02957725": 122, "85438519": 122, "55194846": 122, "58758523": 122, "80964683": 122, "32608346": 122, "12806316": 122, "3248342": 122, "06996005": 122, "31117628": 122, "99525892": 122, "47020431": 122, "13399841": 122, "kneighborsclassifi": [122, 123], "brut": [122, 123, 158], "x27": 122, "environment": 122, "rerun": 122, "trust": 122, "unabl": [122, 154, 173], "loading": 122, "nbview": 122, "kneighborsclassifierkneighborsclassifi": 122, "python3105_x64": 122, "445": [122, 154], "143": 122, "3397": 122, "xav": 122, "appdat": 122, "ipykernel_22912": 122, "2929265561": 122, "__home_": 122, "github_fork": 122, "_classif": 122, "predict_prob": 122, "_bas": 122, "730": 122, "kneighbor": 122, "metric": 122, "_pairwise_distances_reduct": 122, "_dispatch": 122, "165": 122, "508": 122, "_validate_dat": 122, "check_array": 122, "_assert_all_finit": 122, "2177": 122, "is_usable_for": 122, "448": 122, "_config": 122, "get_config": 122, "1140": 122, "_wrapfunc": 122, "threadpool_limit": 122, "threadpoolctl": 122, "lim": 122, "_method": 122, "_sum": 122, "valid_metric": 122, "412": 122, "414": [122, 124], "813": 122, "joblib": [122, 170], "411": 122, "effective_n_job": 122, "1406": 122, "check_is_fitted": 122, "ctyp": 122, "get_active_backend": 122, "818": 122, "num_thread": 122, "856": 122, "set_num_thread": 122, "333": 122, "_num_sampl": 122, "restore_original_limit": 122, "846": 122, "get_num_thread": 122, "1368": 122, "_is_fitted": 122, "etudi": [122, 168], "pairwise_dist": 122, "acp": 123, "what_to_measur": 123, "32456439999987197": 123, "nf_set": 123, "nob": 123, "ys": 123, "nf": 123, "dt2": 123, "ball_tre": 123, "003455999999459891": 123, "020609700000022713": 123, "002304800000274554": 123, "029963799999677576": 123, "002105900000060501": 123, "04159559999970952": 123, "0038469000000986853": 123, "06434530000024097": 123, "0027813999995487393": 123, "0x1c7734ed060": 123, "0033596000002944493": 123, "029927999999927124": 123, "0036015000005136244": 123, "10796130000017001": 123, "00941289999991568": 123, "3117673000006107": 123, "adjoint": 123, "random_sparse_matrix": 123, "ratio_spars": 123, "resiz": [123, 158], "nnz": 123, "what_to_measure_spars": 123, "nb_spars": 123, "sparse_ratio": 123, "09028749999924912": 123, "568506300000081": 123, "9546476190476191": 123, "6447933999997986": 123, "9173545454545454": 123, "9383225999999922": 123, "616280500000357": 123, "77778": 123, "977762700000312": 123, "mesuron": 123, "model_select": 123, "train_test_spl": 123, "what_to_measure_perf": 123, "x_train": 123, "x_test": 123, "y_train": 123, "y_test": 123, "good": [123, 135], "003669900000204507": 123, "158": 123, "perf": 123, "0022122999998828163": 123, "0009547999998176238": 123, "0017370000005030306": 123, "00210730000071635": 123, "003134900000077323": 123, "classifieur": 123, "concordent": 123, "revenon": 123, "hyperplan": 123, "inert": 123, "x_j": 123, "pca": 123, "what_to_measure_perf_acp": 123, "acp_dim": 123, "t1o": 123, "t2o": 123, "goodo": 123, "n_component": 123, "t0": 123, "x_train_pc": 123, "fit_transform": 123, "x_test_pc": 123, "0022221999997782405": 123, "0010087999999086605": 123, "029213499999968917": 123, "p_noacp": 123, "y_noacp": 123, "dt_noacp": 123, "perf_noacp": 123, "dt_train": 123, "dt_predict": 123, "0020304999998188578": 123, "0021592000002783607": 123, "0010569000005489215": 123, "0015843000001041219": 123, "0009798000000955653": 123, "002628299999742012": 123, "0023179999998319545": 123, "013047299999925599": 123, "0009872000000541448": 123, "018462199999703444": 123, "eton": 123, "transfer": [123, 162], "conseerv": 123, "p_1": 124, "p_2": 124, "absurd": [124, 125], "constuir": [124, 165], "contred": 124, "matrix_distance_7398": [124, 125], "data_help": [124, 125, 140, 141, 146, 147], "boulogn": [124, 125], "billancourt": [124, 125], "beauv": [124, 125], "85597": [124, 125], "courbevoi": [124, 125], "sevran": [124, 125], "26564": [124, 125], "colomb": [124, 125], "alfortvill": [124, 125], "36843": [124, 125], "bagneux": [124, 125], "marcq": [124, 125], "baroeul": [124, 125], "233455": [124, 125], "suresn": [124, 125], "gennevilli": [124, 125], "10443": [124, 125], "charlevill": [124, 125], "mezier": [124, 125], "bordeau": [124, 125], "neq": 124, "\u00e9chapp": [124, 141, 165], "djikstr": 124, "skieur": [124, 125], "rentrent": 124, "magasin": 124, "lou": 124, "convient": [124, 164, 168], "min_": [124, 126, 127], "t_i": [124, 125], "arrang": 124, "t_1": 124, "t_2": 124, "t_n": [124, 125], "viennent": [124, 171], "hlin": [124, 166], "t_3": 124, "t_4": 124, "t_": 124, "s_3": 124, "s_4": 124, "s_5": 124, "s_6": 124, "s_7": 124, "sigma_m": 124, "ski": [124, 125], "4496565125341727": 124, "6181478314088333": 124, "6472124781567143": 124, "689855001829289": 124, "7069363711449275": 124, "720882923000757": 124, "7315603136077902": 124, "757295341401446": 124, "806174917827697": 124, "8273604346819485": 124, "539691655662206": 124, "5677016209991443": 124, "651632433144162": 124, "6723990573029228": 124, "6967500647083442": 124, "6991707543184964": 124, "7173171973288348": 124, "764722044308385": 124, "789682343736771": 124, "8113678294188096": 124, "8872585832253812": 124, "8910607675180564": 124, "893354126537998": 124, "9435870591562554": 124, "9577834515908243": 124, "caract\u00e8ris": 124, "vision": 124, "compr\u00e9hens": [124, 150, 165], "redond": [124, 150], "v_0": 124, "sum_v": 124, "agorithm": 124, "dikjstr": 124, "fe": [124, 141], "1684": 124, "3437": 124, "348": 124, "3980": 124, "686": 124, "698": 124, "d\u00e9compress": [124, 166], "7zip": 124, "pysens": 124, "mac": [124, 166], "tar": 124, "60050": 124, "2290": [124, 125], "2363": [124, 125], "2346": [124, 125], "2025": [124, 125], "2140": [124, 125], "2428": [124, 125], "2201": [124, 125], "2506": [124, 125], "2425": [124, 125], "2557": [124, 125], "vil": 125, "rejoindr": 125, "7888": 125, "keyerror": [125, 153, 173], "m\u00e9zi": 125, "816197": 125, "813197": 125, "795670": 125, "skis": 125, "t_j": 125, "t_k": 125, "nec\u00e9ssair": 125, "restreindr": 125, "301415513544109": 125, "graph_notebook_sk": 125, "xymatrix": 125, "stratifi": [126, 127], "tmoertel": 126, "round": [126, 127, 164], "v_1": [126, 127, 164], "v_n": [126, 127], "v_": [126, 127], "w_": [126, 127], "couvr": [126, 127, 168], "brib": [126, 127], "prisoner": [126, 127], "royaum": 126, "prison": [126, 127], "vivent": [126, 141], "rel\u00e2ch": [126, 158, 171], "liber": [126, 171], "parlent": 126, "veil": 126, "susceptibl": [126, 150, 153, 158, 165, 168, 173], "relach": 126, "actif": [126, 171], "x_k": 126, "k_i": 126, "_t": 126, "k_a": 126, "k_t": 126, "affirm": [127, 141], "sol": 127, "inter": 127, "benjamin": 127, "donnot": 127, "new_intervall": 127, "mymax": 127, "fondamental": [127, 165], "oracl": 127, "esoudr": 127, "priso": 127, "groupkfold": 127, "stratified": 127, "codeforc": [128, 129], "483a": [128, 129], "geologist": [128, 129], "sometim": [128, 129], "rainfall": [128, 129], "drainag": [128, 129], "basin": [128, 129], "given": [128, 129, 164], "elev": [128, 129], "dimensional": [128, 129], "altitud": [128, 129, 150], "rul": [128, 129], "wat": [128, 129], "neighboring": [128, 129], "sink": [128, 129], "ti": [128, 129, 173], "north": [128, 129], "west": [128, 129], "east": [128, 129], "south": [128, 129], "drain": [128, 129], "directly": [128, 129], "indirectly": [128, 129], "labeled": [128, 129], "concatenated": [128, 129, 158], "bottom": [128, 129, 158], "resulting": [128, 129], "lexicographically": [128, 129], "smallest": [128, 129], "western": [128, 129], "alway": [128, 129, 156, 164, 168], "lead": [128, 129], "evil": [128, 129], "leagu": [128, 129], "bad": [128, 129, 158], "hors": [128, 129], "recently": [128, 129], "been": [128, 129], "far": [128, 129], "backstabbing": [128, 129], "decided": [128, 129], "department": [128, 129], "separat": [128, 129], "troublesom": [128, 129], "member": [128, 129], "being": [128, 129, 168], "thoroughbred": [128, 129], "isn": [128, 129], "his": [128, 129], "valuabl": [128, 129], "figuring": [128, 129], "himself": [128, 129], "got": [128, 129], "loyal": [128, 129], "henchman": [128, 129], "uva": [128, 129], "10911": [128, 129], "job": [128, 129], "forming": [128, 129], "quiz": [128, 129], "mca": [128, 129], "cpci": [128, 129], "championship": [128, 129], "student": [128, 129], "interested": [128, 129], "participat": [128, 129], "consisting": [128, 129], "memb": [128, 129], "near": [128, 129], "sure": [128, 129], "x_3": [128, 129], "minimized": [128, 129], "adn": 129, "fulkerson": 129, "flot": 129, "dispens": 130, "enrich": 130, "d\u00e9crir": [130, 142], "cart": [130, 148, 164], "physiqu": [130, 166], "atout": 130, "tarot": 130, "fastidi": [130, 131, 132, 146, 150, 165, 168, 171], "mesparametr": 130, "pas_gradient": 130, "fonction_any": 130, "pronom": 130, "0x7fb13a470c10": 130, "autre_point": 130, "appliq": 130, "carremag": [130, 131], "rattach": 130, "4031242374328485": 130, "lx": 130, "738793548317167": 130, "000000000010186": 130, "est_nul": 130, "somme_ligne_colonne_diagonal": 131, "coefficient_un": 131, "est_mag": 131, "tous_les_carre_na": 131, "tous_les_carre_naif2": 131, "stop_aft": 131, "tous_les_carres_permut": 131, "firstn": 131, "devenu": 131, "380064799999673": 131, "tous_les_carres_permutation_ligne12_meme_somm": 131, "435667799996736": 131, "5677748000016436": 131, "tous_les_carr": 131, "version1": 132, "fonction1": [132, 158], "fonction2": [132, 164], "fonction3": 132, "fonction_final": 132, "version2": 132, "tirage_aleatoir": [132, 133], "precedent": [132, 133, 158, 164, 165], "moyenne_tirag": [132, 133], "joueur": [132, 138, 171], "jou": [132, 139, 140, 141, 148, 164, 171], "tricheur": 132, "piecetruque": [132, 133], "piecetruqueemix": [132, 133], "al\u00e9atoiremnt": 132, "truque": [132, 133, 150], "d\u00e9cryptag": [134, 135], "reproduisent": 134, "polynom": 134, "2x": 134, "log_bas": 134, "9999999999999996": 134, "965784284662087": 134, "lettre_suiv": [134, 135], "valeur_absolu": 134, "bizarr": [134, 137], "acroym": 134, "compact": [134, 144, 145], "timecomplexity": 134, "pr\u00e9dictibl": 134, "aeco": 134, "eddard": [134, 135], "catelyn": [134, 135], "robb": [134, 135], "sansa": [134, 135], "arya": [134, 135], "brandon": [134, 135], "rickon": [134, 135], "theon": [134, 135], "rorbert": [134, 135], "cersei": [134, 135], "tywin": [134, 135], "jaim": [134, 135], "tyrion": [134, 135], "sha": [134, 135], "bron": [134, 135], "lancel": [134, 135], "joffrey": [134, 135], "sandor": [134, 135], "vary": [134, 135], "renly": [134, 135], "mots_lettre_posit": [134, 135], "dictionnaire_bien_chois": [134, 135], "construis": 134, "reformul": 134, "concevoir": [134, 150, 158, 166, 171], "jenesuispascod": [134, 135], "mhqhvxlvsdvfrgh": [134, 135], "dop": [134, 135], "traduit": [134, 164, 165, 173], "dictionnaire_chois": 135, "pr\u00e9par": [135, 141], "dictionair": 135, "unordered_map": 135, "stl": 135, "accessing": 135, "code_cesar": 135, "mschgjlgedgrrrt": 135, "d\u00e9lim": 136, "int_a": 136, "6145744834544478": [136, 137], "ave": [137, 141], "2320146802585272": 137, "integrale_precis": 137, "val0": 137, "5050000000000003": 137, "2196877891927724": 137, "piano": 137, "int2": [137, 140], "integrale_precise_2n": 137, "5000454610560389": 137, "81920": 137, "2169740198498182": 137, "int_0": 137, "xdx": 137, "discontinu": 137, "marg": [137, 140], "underset": 137, "incertitud": 137, "interval": 137, "max_fp": 137, "last_f": 137, "fx": 137, "md": 137, "integrale_precise_derive": 137, "5004995004994989": 137, "integrale_bizarr": 137, "px": 137, "0625": 137, "2857142857142856": 137, "partout": [137, 146, 164], "rationnel": 137, "tombent": 137, "integrale_mc": 137, "5443922662659958": 137, "integrale_mc_precis": 137, "moy0": 137, "5001005538840249": 137, "i_n": 137, "16m": 137, "16e4": 137, "500765653300686": 137, "885": 137, "populair": [138, 139], "create_gam": 139, "gameover1": 139, "masked_not_equal": 139, "gameov": 139, "gam": 139, "process_lin": 139, "prev": 139, "update_gam": 139, "reversed": 139, "grammair": [140, 142, 164, 173], "interag": 140, "capteur": 140, "tsv": [140, 166], "fallu": [140, 150], "literal": [140, 165], "pr\u00e9vus": [140, 153], "permanent": [140, 171], "vocat": [140, 141, 171], "condens": 140, "pyramide_bigarre": 140, "td2_1": [140, 149], "classes_heritage_correct": 140, "lemonde5": [140, 147], "voeux83": [140, 141], "classes_carre_mag": 140, "lemonde3": [140, 147], "blogny1": [140, 147], "blog3": [140, 147], "nytimes5": [140, 147], "classes_carre_magique_correct": 140, "integrale_rectangle_correct": 140, "nytimes2": [140, 147], "voeux05": [140, 141], "module_file_regex": 140, "__pycache__": [140, 166, 168], "lemonde1": [140, 147], "nytimes8": [140, 147], "voeux06": [140, 141], "dictionnaire_vigener": 140, "voeux": [140, 141], "lemonde9": [140, 147], "voeux08": [140, 141], "texte_langue_correct": 140, "nytimes1": [140, 147], "voeux01": [140, 141], "premiers_pas_correct": 140, "nytimes9": [140, 147], "voeux74": [140, 141], "j2048": 140, "voeux75": [140, 141], "elpais2": [140, 147], "lequipe1": [140, 147], "voeux94": [140, 141], "lemonde7": [140, 147], "lemonde10": [140, 147], "seance4_excel": [140, 141], "arthur_charpentier2": [140, 146, 147], "afp2": [140, 146, 147], "inconnu2": [140, 147], "pyramide_bigarree_correct": 140, "afp1": [140, 146, 147], "lemonde8": [140, 147], "elpais5": [140, 147], "hex": [140, 144, 145, 165], "module_file_regex_correct": 140, "nytimes3": [140, 147], "voeux89": [140, 141], "arthur_charpentier3": [140, 146, 147], "voeux87": [140, 141], "lemonde11": [140, 147], "elpais4": [140, 147], "nytimes7": [140, 147], "lemonde2": [140, 147], "inconnu1": [140, 147], "lequipe2": [140, 147], "premiers_p": 140, "lemonde6": [140, 147], "blog1": [140, 147], "voeux09": [140, 141], "voeux90": [140, 141], "elpais7": [140, 147], "exemple_fichi": 140, "elpais6": [140, 147], "texte_langu": 140, "integrale_rectangl": 140, "voeux07": [140, 141], "classes_heritag": 140, "arthur_charpentier1": [140, 146, 147], "lemonde4": [140, 147], "blog2": [140, 147], "dictionnaire_vigenere_correct": 140, "variable_boucle_test": 140, "nytimes6": [140, 147], "elpais3": [140, 147], "variable_boucle_tests_correct": 140, "j2048_correct": 140, "nytimes4": [140, 147], "voeux79": [140, 141], "elpais1": [140, 147], "pragmat": 140, "reconnu": 140, "exportent": 140, "grop": 140, "volum": 140, "3x3": [140, 141], "gz": 140, "wav": 140, "mp3": [140, 166, 173], "ogg": 140, "musiqu": [140, 173], "mp4": 140, "vorb": 140, "vid\u00e9o": 140, "b\u00e9n\u00e9fic": 140, "v\u00f4tr": 140, "5403023058681398": [140, 141], "\u00eate": [140, 141], "n\u00e9": [140, 145, 161], "fonction_cos_sequent": [140, 141], "dynload": 140, "4161468365471424": [140, 141], "recharg": [140, 141, 164, 168], "async_helper": 140, "autocall": 140, "builtin_trap": 140, "completerlib": 140, "pr\u00e9ambul": 140, "1903": 140, "1957": 140, "indiff\u00e9rent": 140, "securit": [140, 141], "insecurit": [140, 141], "mako": [140, 141], "templating": [140, 141], "dimanch": [140, 141], "seance4_excel_mat": 141, "6414749515069115": 141, "4096411389655439": 141, "7991926327688407": 141, "9918119068265183": 141, "07379598399157106": 141, "4290244325276996": 141, "9337274118746318": 141, "17483162769873706": 141, "6159652170653446": 141, "4835251137894401": 141, "date1": 141, "2013": 141, "date0": 141, "birth": 141, "1975": [141, 161], "weekday": 141, "lund": [141, 161], "monmodule2": 141, "monmodule3": 141, "Mes": 141, "cher": 141, "compatriot": 141, "peupl": 141, "rassembl": [141, 150], "respir": 141, "rythm": 141, "bat": 141, "coeur": 141, "f\u00eat": 141, "no\u00ebl": 141, "participent": 141, "joi": 141, "retrouvaill": 141, "chaleur": 141, "familial": 141, "amical": 141, "toulous": 141, "\u00e9preuv": 141, "solidar": 141, "amiti": 141, "nation": 141, "m\u00e9tropol": 141, "euro": 141, "vivr": 141, "ignorecas": 141, "voul": 141, "soldat": 141, "engag": 141, "constru": 141, "victim": 141, "salu": 141, "reconnaiss": 141, "avancent": 141, "avan": 141, "souffranc": 141, "gouvern": 141, "\u00e9prouv": 141, "tristess": 141, "foi": 141, "profon": 141, "craint": 141, "\u00e9prouvent": 141, "angoiss": 141, "\u00e9treint": 141, "peur": 141, "exasper": 141, "entreprendr": 141, "int\u00e9": 141, "fiert": 141, "brutal": 141, "efforc": 141, "agi": 141, "souc": [141, 158], "d\u00e9fendr": 141, "fra": 141, "enver": 141, "tromp": [141, 153], "trah": 141, "hypocris": 141, "cess": [141, 150, 164, 166, 171], "urg": 141, "fond": [141, 158], "risquent": [141, 158], "leu": 141, "doulour": 141, "cett": 141, "responsab": 141, "prot": 141, "devo": 141, "persuad": 141, "fragil": 141, "d\u00e9battr": 141, "r\u00e9form": 141, "lyc": 141, "p\u00e9nal": 141, "ministr": 141, "fran\u00e7ois": 141, "fillon": 141, "cepen": 141, "hommag": 141, "froid": 141, "partenair": 141, "renonc": [141, 165], "boulevers": 141, "conduir": 141, "r\u00e9publ": 141, "redon": 141, "JE": 141, "vais": 141, "VOUS": 141, "NE": 141, "ennui": 141, "AI": 141, "dej": 141, "decrit": 141, "ET": 141, "DE": 141, "PAR": 141, "QUE": 141, "MES": 141, "SOIENT": 141, "LES": 141, "AU": 141, "LA": 141, "societ": 141, "francais": 141, "SOIT": 141, "fraternit": 141, "EST": 141, "AUX": 141, "agriculteur": 141, "artisan": 141, "entrepris": [141, 165], "devront": [141, 164], "examin": 141, "QU": 141, "EN": 141, "CE": 141, "rol": 141, "LUI": 141, "LE": 141, "tourment": 141, "OU": 141, "NOUS": 141, "vivon": 141, "appa": 141, "PAS": 141, "AVEZ": 141, "ILS": 141, "ONT": 141, "recu": 141, "AVEC": 141, "SUIS": 141, "antill": 141, "etaient": 141, "couvert": 141, "LEUR": 141, "EUX": 141, "NOS": 141, "departem": 141, "a_l_etrang": 141, "QUI": 141, "malheur": 141, "accident": 141, "SONT": 141, "hopital": 141, "egal": 141, "salut": 141, "travailleur": 141, "imm": 141, "chretien": 141, "TU": 141, "SOIES": 141, "UNE": 141, "accueil": 141, "POUR": 141, "president": 141, "1976": [141, 173], "grandeu": 141, "ELLE": 141, "SUR": 141, "entent": 141, "ren": 141, "aymon": 141, "SES": 141, "echangent": 141, "conduit": 141, "MON": 141, "1979": 141, "SON": 141, "revien": 141, "afriqu": 141, "terr": 141, "ME": 141, "union": [141, 165], "soviet": 141, "urss": 141, "six": [141, 165, 173], "UN": 141, "prepar": 141, "av": 141, "UNS": 141, "promet": 141, "fa": 141, "soutiendr": 141, "\u00e9quilibr": 141, "lass": 141, "invit": [141, 164], "\u00e2g\u00e9": 141, "fratern": 141, "ardemment": 141, "reprennent": [141, 165], "\u00e9lect": 141, "pr\u00e9sidentiel": 141, "\u00e9tabl": 141, "candidat": 141, "na\u00eetr": 141, "conf\u00e9der": 141, "dign": 141, "chanti": 141, "tribun": 141, "der": 141, "frapp": 141, "r\u00e9alit": [141, 150, 164], "dois": 141, "redir": 141, "admir": 141, "\u00e9quipag": 141, "r\u00e9confort": 141, "accompl": 141, "qual": 141, "dissoc": 141, "naguer": 141, "pa": 141, "apprendr": 141, "gra": 141, "\u00e9cout": [141, 165, 171], "enac": 141, "ins\u00e9cur": 141, "r\u00e9forment": 141, "rvic": 141, "achat": 141, "\u00e9nerg": 141, "immigr": 141, "banlieu": 141, "r\u00e9nov": 141, "organ": 141, "recour": [141, 165], "isra\u00ebl": 141, "palestinien": 141, "patr": 141, "python_": 141, "doctyp": 141, "noj": 141, "vector": 141, "enabled": 141, "disabled": [141, 158, 171], "sticky": [141, 158], "pinned": 141, "toc": 141, "page_str": 141, "creativecommon": 141, "deed": 141, "af": 141, "programmeertaal": 141, "programmiersprach": 141, "d8": 141, "a8": 141, "a7": 141, "d9": 141, "8a": 141, "86_": 141, "ba": 141, "a9_": 141, "a9": 141, "e0": 141, "a6": 141, "a5": 141, "ast": 141, "az": 141, "proqraml": 141, "9fd": 141, "b1rma_dil": 141, "azb": 141, "8c": 141, "ul": 141, "endfor": 141, "tpl": 141, "ch\u00f4mag": 142, "incident": [142, 150, 164, 168], "aiguillag": [142, 171], "incompr\u00e9hensibl": 142, "torchon": 142, "serviet": 142, "factoriel": [142, 143, 164], "fautiv": 143, "195": [143, 154], "premmi": 143, "4037913": 143, "biodivers": [144, 145], "biodiversite_tri2": [144, 145], "boul": [144, 145], "empil": [144, 145, 158, 171], "pyramide_num2": 145, "scatter_demo": 145, "rgb": 145, "typiqu": [146, 154], "oeuvr": 146, "litt\u00e9rair": 146, "m\u00e9langent": 146, "\u00e9tiquet": 146, "read_fil": [146, 147], "conclur": [146, 165], "admetton": 146, "disposon": 146, "infaillibl": 146, "dup": 146, "d\u00e9licat": 147, "read_file_enc": 147, "enc": [147, 162], "corbeau": 147, "bec": 147, "fromag": [147, 150], "ma\u00eetr": 147, "renard": 147, "odeur": [147, 150], "allech": 147, "Lui": 147, "visibl": [147, 158, 166], "souhaiton": 147, "\u00ee": 147, "histogram2": 147, "pourrion": 147, "007751937984496124": 147, "06976744186046512": 147, "17829457364341086": 147, "03875968992248062": 147, "031007751937984496": 147, "08527131782945736": 147, "023255813953488372": 147, "10077519379844961": 147, "07751937984496124": 147, "05426356589147287": 147, "015503875968992248": 147, "0067247820672478205": 147, "007575757575757576": 147, "007012142979305627": 147, "02588801926550271": 147, "004853022739877981": 147, "010752688172043012": 147, "007556675062972292": 147, "010554089709762533": 147, "029830508474576273": 147, "01349112426035503": 147, "005625270445694505": 147, "005441436539246361": 147, "00224408769204212": 147, "009715025906735751": 147, "0051919661155895615": 147, "00016849199663016007": 147, "010804020100502512": 147, "007139797229758675": 147, "0021551724137931034": 147, "0055272108843537416": 147, "0014691478942213516": 147, "004875076173065204": 147, "0044822949350067235": 147, "007034547444114429": 147, "0020463847203274215": 147, "0034299968818210166": 147, "008162299639202697": 147, "00572041473006793": 147, "005029013539651838": 147, "030130034887408817": 147, "031933508311461065": 147, "02547634339541854": 147, "03934426229508197": 147, "035542582417582416": 147, "030610255410411385": 147, "04194094414143314": 147, "03151779230210603": 147, "03840526700804682": 147, "lemond": 147, "journal": 147, "lem": 147, "text_other": 147, "ha": 147, "wrap": 147, "nplusieur": 148, "anything": 148, "trou": 148, "sloan": 148, "obtent": [148, 153, 165], "list1": 148, "list2": 148, "alourd": 148, "interrupt": 148, "d\u00e9nou": 148, "sybillin": 148, "lesqueel": 148, "experim": 148, "curieux": 149, "log2": 149, "456217": 149, "931568569324174": 149, "134146": 149, "166639": 149, "922092": 149, "728522": 149, "162931": 149, "741312": 149, "195045": 149, "642304": 149, "685730": 149, "d\u00e9tien": 150, "banqui": 150, "d\u00e9tenu": 150, "rectifi": 150, "intern": [150, 167], "forment": 150, "pr\u00e9d\u00e9fin": [150, 154, 171, 173], "transposit": 150, "exhaust": [150, 158, 164, 165, 166], "instanti": 150, "classe_vid": 150, "run_python_script_139986789729472": [], "run_python_script_139986788060928": [], "ob\u00e9it": [150, 153, 164], "imit": 150, "methode1": 150, "397204094": 150, "2147483647": 150, "nb2": 150, "pourvu": 150, "run_python_script_139986789853120": [], "d\u00e9couvrent": 150, "progressivent": 150, "classe2": 150, "classe1": 150, "autonom": [150, 158], "destructeur": 150, "destruct": [150, 158], "__del__": 150, "r\u00e9initialisent": 150, "__module__": 150, "chapitr": [150, 153, 158, 159, 164, 165, 166, 168, 171], "__bases__": 150, "run_python_script_139986788810496": [], "__weakref__": [150, 158, 168], "weak": [150, 158, 168], "pydoc": 150, "essai_class": 150, "__delattr__": 150, "__dir__": 150, "__eq__": [95, 150], "__format__": 150, "__ge__": 150, "__gt__": 150, "__hash__": [150, 165], "__init_subclass__": 150, "__le__": 150, "__ne__": 150, "__new__": 150, "__reduce__": 150, "__reduce_ex__": 150, "__sizeof__": 150, "__subclasshook__": 150, "ensemble_el": 150, "nouvelle_cl": 150, "run_python_script_139986789849280": [], "nombre_complex": 150, "get_modul": 150, "instar": [150, 164, 165, 173], "dor\u00e9nav": [150, 153, 164], "__iadd__": 150, "\u00e9toff": 150, "attard": 150, "__getitem__": 150, "__setitem__": 150, "point_espac": [150, 153], "l\u00e8vent": 150, "_z": 150, "run_python_script_139986787580928": [], "arr\u00eatent": 150, "cmp": [150, 164], "__contains__": 150, "__len__": 150, "__abs__": 150, "lev": 150, "__delitem__": 150, "__int__": 150, "__float__": 150, "__complex__": 150, "__div__": 150, "__mul__": 150, "__sub__": 150, "__pow__": 150, "__lshift__": 150, "__idiv__": 150, "__imul__": 150, "__isub__": 150, "__ipow__": 150, "__ilshift__": 150, "__irshift__": 150, "exsit": 150, "moder": 150, "rightsid": 150, "leftsid": 150, "LS": 150, "__radd__": 150, "__rlshift__": 150, "__iter__": [150, 153], "visit": [150, 164, 171], "__next__": 150, "stopiter": [150, 153, 164], "class_it": [150, 153], "_in": [150, 153], "_n": [150, 153], "affichent": 150, "ck": 150, "isntanc": 150, "incremente_rnd": 150, "classmethod": 150, "meth3": 150, "meth4": 150, "essai_cl": 150, "meth2": 150, "croir": 150, "pseudo": [150, 164], "d\u00e9truir": [150, 154, 158], "imaginair": 150, "conj": 150, "conjugu": 150, "set_modul": 150, "get_argu": 150, "set_argu": 150, "get_conjugu": 150, "866025": 150, "0471975512": 150, "09439510239": 150, "0471975511965976": 150, "0943951023931953": 150, "descend": 150, "nom_copy": 150, "nom_inst": 150, "creationdestruct": 150, "d\u00e9truit": [150, 153, 154, 158], "classe_inclus": 150, "attr": 150, "re\u00e7oiv": [150, 158], "fonction_l": 150, "attribu": [150, 164, 165], "garbag": [150, 153, 154, 168, 171], "collector": [150, 153, 154, 168, 171], "__deepcopy__": 150, "memo": [150, 154], "objet1": 150, "objet2": 150, "o3": 150, "pointent": 150, "rencontrent": 150, "circulair": [150, 166], "r\u00e9solvent": 150, "artific": 150, "soupl": [150, 158, 165], "gag": 150, "t3": 150, "785401300000558": [], "6901625999998942": [], "7032609999996566": [], "atribut": 150, "pil": [150, 153, 155, 171], "cent_tirag": 150, "truqu": 150, "reproduit": [150, 164], "piece_normal": 150, "piece_truque": 150, "devion": 150, "redevient": 150, "piece_tres_truque": 150, "alter": [150, 165, 168], "resolu": [150, 153], "inherited": 150, "rubriqu": 150, "ira": 150, "run_python_script_139986787957184": [], "h\u00e9ritent": 150, "offrait": 150, "appellent": [150, 171], "ancetr": 150, "h\u00e9riti": 150, "aver": [150, 164, 165], "dilemm": 150, "cub": 150, "repren": [150, 158], "fonction_somme_list": 150, "fonction_somme_dict": 150, "fonction_somm": 150, "undeuxtrois": 150, "incorpor": [150, 164], "indentationerror": [150, 153, 164], "unindent": [150, 164], "confond": [150, 164], "seilf": 150, "decoup": 150, "gruyer": 150, "fr2": 150, "fr3": 150, "g3": 150, "8333333333333334": 150, "61538461538461": 150, "76923076923077": 150, "7923076923076924": 150, "get_lin": 150, "get_col": 150, "get_submat": 150, "set_submat": 150, "matricelist": 150, "matricedict": 150, "produitclass": 150, "produitstrassen": 150, "architectur": [150, 162], "pattern": [150, 158, 173], "facilit": [150, 171], "statiqu": 151, "lanag": 152, "deux_entiers_somm": 152, "deux_entiers_multipl": 152, "pr\u00e3": 152, "deux_enti": 152, "deuxenti": 152, "accroch": [152, 171], "plu": 152, "disparit": [152, 158], "\u00e3": 152, "taient": 152, "m\u00e3\u00aame": 152, "deuxentiersmodif": 152, "anodin": 152, "run_python_script_139986790844416": [], "baseexcept": 153, "run_python_script_139986787314496": [], "produisent": [153, 171], "pr\u00e9voit": [153, 158], "dirig": [153, 158], "intercept": [153, 154, 158, 164, 165], "48606594010979": 153, "0822096637057887j": 153, "accol": 153, "surviennent": [153, 156, 162], "orthograph": [153, 173], "inexist": [153, 158], "importerror": [153, 158], "inappropri": 153, "oserror": 153, "unicodeerror": 153, "arithmeticerror": 153, "standarderror": 153, "was": [153, 154], "d\u00e9rivent": 153, "davantag": [153, 165], "repr": [153, 158, 164], "racine_carre": 153, "run_python_script_139986790411136": [], "interrompt": 153, "momentan": 153, "ouvert": [153, 166], "closed": 153, "intervenu": 153, "pr\u00e9mun": 153, "manager": 153, "premi\u00e8rel": 154, "demeur": [154, 164], "foncb": 154, "foncc": 154, "format_stack": 154, "runpy": 154, "_run_module_as_main": 154, "_run_cod": 154, "main_global": 154, "run_global": 154, "systemex": 154, "326": 154, "build_main": 154, "argv": 154, "app": 154, "force_all": 154, "build_updat": 154, "builder": 154, "to_build": 154, "310": 154, "updated_docnam": 154, "417": 154, "_read_serial": 154, "docnam": 154, "438": 154, "read_doc": 154, "reader": 154, "parser": 154, "statemachin": 154, "inputlin": 154, "rst": [154, 166], "statemachinew": 154, "input_lin": 154, "input_offset": 154, "next_stat": 154, "check_lin": 154, "3024": 154, "lstrip": 154, "new_subsect": 154, "newabsoffset": 154, "nested_pars": 154, "state_machin": 154, "block": [154, 164], "2785": 154, "underlin": [154, 158], "2355": 154, "explicit_markup": 154, "nodelist": 154, "blank_finish": 154, "explicit_construct": 154, "2367": 154, "expmatch": 154, "2104": 154, "run_direct": 154, "2154": 154, "directive_inst": 154, "run_python_script": 154, "run_python_script_139986791981312": [], "raise_except": 154, "insidef": 154, "exc_typ": 154, "exc_valu": 154, "exc_traceback": 154, "exc_info": 154, "format_tb": 154, "run_python_script_139986791977280": [], "extract_tb": 154, "pr\u00e9cieux": 154, "flask": [154, 170], "excellent": [154, 158], "product": 154, "run_python_script_139986793117056": [], "run_python_script_139986793060800": [], "run_python_script_139986791875328": [], "fautif": 154, "file_to_read": 154, "filenotfounderror": [154, 173], "download_content": 154, "read_fromf_fil": 154, "unicodeencodeerror": 154, "\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9": 154, "\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0\u00e0": 154, "run_python_script_139986791939904": [], "codec": 154, "ascii_decod": 154, "unicodedecodeerror": 154, "0xc3": 154, "ordinal": 154, "soup\u00e7on": 156, "deprecationwarning": 156, "subsist": 156, "expos": [156, 158], "agac": 156, "fxn": 156, "deprecated": 156, "catch_warning": 156, "simplefilt": 156, "monwarning": 156, "mass": [156, 166], "activ": [156, 158, 171], "d\u00e9bugg": [156, 171], "attaqu": 156, "tkint": [157, 164, 168, 171], "disposit": [157, 166, 168, 171], "convivial": 158, "demandent": 158, "clavi": [158, 164], "clic": [158, 171], "sour": [158, 171], "wxpython": 158, "rich": 158, "pyqt5": 158, "pyqt4": 158, "verion": 158, "jol": 158, "licenc": 158, "graphical": 158, "forum": 158, "discuss": 158, "stackoverflow": 158, "named": 158, "sudo": 158, "tk": [158, 164, 171], "troubl": 158, "Du": 158, "entrem\u00eal": [158, 171], "widget": 158, "pilotent": 158, "contr\u00f4lent": 158, "zone_text": 158, "enrob": 158, "mainloop": [158, 164, 171], "doiv": 158, "config": [158, 171], "gris": [158, 168], "button": [158, 164, 171], "interdir": [158, 166, 171], "gif": 158, "photoimag": 158, "chameau": 158, "entry": [158, 164], "delet": 158, "pos1": 158, "pos2": 158, "differ": 158, "nsecond": 158, "checkbutton": 158, "intvar": 158, "radiobutton": 158, "d\u00e9coch": 158, "deselect": 158, "semblabl": [158, 165, 173], "case1": 158, "case2": 158, "case3": 158, "agiront": 158, "intitul": 158, "listbox": 158, "cliqu": [158, 171], "select_set": 158, "select_clear": 158, "curselect": 158, "indextkk": 158, "adjoindr": [158, 171], "fram": 158, "parent": [95, 158, 168], "scrollbar": 158, "yscrollcommand": 158, "yview": 158, "sid": [158, 164], "tix": 158, "exportselect": 158, "itemconfig": 158, "ttk": 158, "print_fil": 158, "canv": 158, "pixel": 158, "create_lin": 158, "create_rectangl": 158, "create_text": 158, "b\u00e9zi": 158, "assis": 158, "smooth": 158, "gray": 158, "polic": 158, "arial": 158, "arborent": 158, "cnf": 158, "kw": 158, "unbound": 158, "specified": 158, "keyword": [158, 164], "allowed": 158, "activebackground": 158, "activeforeground": 158, "anchor": 158, "background": 158, "bitmap": 158, "borderwidth": 158, "cursor": 158, "disabledforeground": 158, "foreground": 158, "highlightbackground": 158, "highlightcolor": 158, "highlightthickness": 158, "justify": 158, "padx": 158, "pady": 158, "relief": 158, "repeatdelay": 158, "repeatinterval": 158, "takefocus": 158, "textvari": 158, "wraplength": 158, "specific": 158, "compound": 158, "overrelief": 158, "souci": 158, "attendus": 158, "both": 158, "pack_forget": 158, "r\u00e9appara\u00eetr": 158, "re\u00e7u": [158, 164, 166], "columnspan": 158, "rowspan": 158, "grid_forget": 158, "place_forget": 158, "d\u00e9crivent": [158, 164], "focus_set": 158, "pointill": 158, "change_legend": 158, "augmentent": 158, "attach": [158, 164, 166, 171, 173], "mouv": 158, "muet": 158, "ctrl": 158, "alt": 158, "suppr": 158, "keysym": 158, "x_root": 158, "y_root": 158, "occur": 158, "keypress": 158, "keyreleas": 158, "keyboard": 158, "buttonpress": 158, "buttonreleas": 158, "motion": 158, "enter": 158, "leav": [158, 168], "mousewheel": 158, "mous": 158, "visibility": 158, "unmap": 158, "focusin": 158, "focusout": 158, "circulat": 158, "gravity": 158, "reparent": 158, "destroy": [158, 164], "activat": 158, "deactivat": 158, "callback": 158, "registered": 158, "bind": [158, 171], "bind_all": 158, "bind_class": 158, "tag_bind": 158, "brac": 158, "serial": 158, "pressed": 158, "exposed": 158, "keycod": 158, "occurred": 158, "screen": 158, "send_event": 158, "keysym_num": 158, "mov": 158, "curseur": 158, "mod2": 158, "mod3": 158, "mod4": 158, "m4": 158, "button1": 158, "mod5": 158, "button2": 158, "button3": 158, "button4": 158, "b4": 158, "button5": 158, "b5": 158, "mod1": 158, "pressing": 158, "omitted": 158, "virtual": 158, "astring": 158, "arbitrary": 158, "event_generat": [158, 171], "appear": 158, "shortly": 158, "after": 158, "invoked": 158, "specif": [158, 164], "additionally": 158, "unbind": 158, "leak": 158, "returned": 158, "affiche_touche_presse": 158, "evt": 158, "presse": 158, "9261224": 158, "exemple_bind": 158, "python26": 158, "933": 158, "_bind": 158, "_w": 158, "_tkint": 158, "tclerror": 158, "Sa": [158, 164], "d\u00e9sact": [158, 171], "unbind_all": 158, "xsyntax": 158, "p\u00e9ripher": 158, "toplevel": 158, "add_cascad": 158, "mainmenu": 158, "msousmenu": 158, "add_command": 158, "sm1": 158, "sm2": 158, "ajoute_bouton": 158, "deiconify": 158, "geometry": 158, "iconify": 158, "ic\u00f4n": 158, "withdraw": 158, "compl\u00e8tent": 158, "progressbar": 158, "treeview": 158, "dirtre": 158, "fileselectbox": 158, "in\u00e9vit": [158, 171], "win": [158, 171], "appartiennent": 158, "simultan": [158, 164, 165, 171], "nouvelle_fenetr": 158, "sec": 158, "quit": 158, "fenetr": 158, "fileselect": 158, "get_list": 158, "isdir": [158, 166], "listf": 158, "ch": [158, 171], "lifil": 158, "lid": 158, "wm_titl": 158, "fli": 158, "update_chemin": 158, "update_list": 158, "update_sel": 158, "cget": 158, "isol": [158, 164, 166], "gestion": [158, 168], "\u00e9v\u00e9nementiel": 158, "diss\u00e9min": 158, "espion": 158, "r\u00e9activ": [158, 171], "scientif": 158, "lap": 158, "millisecond": [158, 161, 171], "after_cancel": 158, "personnifi": 158, "substitu": [158, 164], "malistbox": 158, "bg": 158, "itemconfigur": 158, "prolong": 158, "mafenetr": 158, "commande_bouton1": 158, "commande_bouton2": 158, "lab": 158, "pointeur": 158, "r\u00e9cept": 158, "consult": 158, "intervenus": 158, "offrent": [158, 165], "feront": 158, "mafenetreseq": 158, "perso": 158, "rooty": 158, "conservent": 159, "classeperson": 159, "_field": 159, "comptag": 159, "agil": 159, "flagr": 159, "append_time_list": 159, "append_time_dequ": 159, "05263450000074954": [], "042822200000045996": [], "ao\u00fbt": 161, "312000": 161, "12614": 161, "712000": 161, "000081": [], "17478": 161, "calendar": [161, 168], "itermonthdays2": 161, "timestamp": 161, "expriment": 161, "compr\u00e9hensibl": 161, "fromtimestamp": 161, "1694771738": [], "0079732": [], "domin": 162, "japon": 162, "asiat": 162, "cp1252": [162, 165], "deviendr": 162, "e\u00e9": 162, "sb": 162, "platform": [162, 168], "getdefaultencoding": 162, "getdefaultlocal": 162, "0x7f518c9095a0": [], "en_us": 162, "contr\u00f4l": [162, 166], "ordereddict": 163, "namedtupl": 163, "\u00e9l\u00e9mentair": 164, "aisanc": 164, "acquer": 164, "ruptur": 164, "combinent": 164, "nuanc": 164, "reconna\u00eetr": 164, "inconnus": 164, "iskeyword": 164, "until": 164, "kwlist": 164, "async": 164, "await": 164, "nonlocal": 164, "ajoutent": 164, "particuili": 164, "grammar": 164, "absent": 164, "affil": 164, "condition2": 164, "condition3": 164, "instruction5": 164, "instruction6": 164, "instruction7": 164, "instruction8": 164, "transcrivent": 164, "prioritair": 164, "juxtapos": [164, 165, 173], "press": [164, 171], "repons": 164, "rget": 164, "nopass": 164, "indented": 164, "scrupul": 164, "d\u00e9guis": 164, "cran": 164, "pr\u00e9matur": 164, "convertibl": 164, "run_python_script_139986801541952": [], "collag": 164, "eratosthen": 164, "d\u00e9nich": 164, "3i": 164, "ray": 164, "run_python_script_139986795763840": [], "mauv": 164, "endroitsfootnot": 164, "expert": 164, "morceau": [164, 165, 173], "coordonnees_polair": 164, "tangent": 164, "414214": 164, "118034": 164, "434949": 164, "565051": 164, "commander_carte_orang": 164, "chequ": 164, "problem_zon": 164, "surpren": 164, "retor": 164, "valeur_": 164, "param_": 164, "identit": 164, "portent": 164, "run_python_script_139986797996096": [], "required": 164, "positional": 164, "ndigit": 164, "floating": 164, "digit": 164, "may": 164, "negat": 164, "pho": 164, "r\u00e9percuss": 164, "r\u00e9percut": 164, "somme_n_premier_term": 164, "statut": 164, "ininterrompu": 164, "fact": 164, "factorielle_non_recurs": 164, "run_python_script_139986794201920": [], "portee_vari": 164, "run_python_script_139986794588992": [], "opposit": 164, "locale_global": 164, "affiche_pair": 164, "fonction_local": 164, "run_python_script_139986796630016": [], "ind\u00e9termin": 164, "liste_valeur_1": 164, "liste_valeur_p": 164, "nom_1": 164, "nom_q": 164, "v_q": 164, "n\u00e9cess": 164, "nom_fonct": 164, "reprendr": 164, "fonction_yield": 164, "run_python_script_139986796177344": [], "4142135623730951": 164, "78539816339744828": 164, "7853981633974483": 164, "agreg": 164, "synonym": 164, "perl": 164, "est_pair": 164, "0x7f5137c146d0": [], "issubclass": 164, "varient": 165, "typag": 165, "desquel": 165, "sc": 165, "suivront": [165, 166], "maint": 165, "repris": 165, "privileg": 165, "\u00e9num": 165, "impossibil": 165, "expliquent": 165, "comprennent": 165, "opertor": 165, "zz": 165, "guillemet": 165, "interchange": 165, "1morceau": 165, "commod": 165, "recoll": 165, "pourcentag": 165, "usit": 165, "lexical": 165, "567": 165, "ed": 165, "med": 165, "eniem": 165, "endswith": 165, "printf": 165, "formatting": 165, "concis": 165, "transcrit": 165, "abra": 165, "cad": 165, "abracadabr": 165, "coordinat": 165, "24n": 165, "81w": 165, "coord": 165, "centered": 165, "aleft": 165, "alignedb": 165, "oct": 165, "1234567890": 165, "101010": 165, "0x2a": 165, "0o52": 165, "0b101010": 165, "indroduit": 165, "excentr": 165, "notabl": 165, "formattag": 165, "run_python_script_139986620353472": [], "1j": 165, "2j": 165, "fromhex": 165, "2ef0": 165, "f1f2": 165, "xf0": 165, "xf1": 165, "xf2": 165, "sigl": 165, "soupless": 165, "compare_key": 165, "run_python_script_139986450028032": [], "verron": 165, "dison": 165, "ensemb": 165, "litt\u00e9ral": 165, "juxtaposit": 165, "0x7f5136892480": [], "l3": 165, "surprendr": 165, "1111": 165, "dress": 165, "dinv": 165, "parcout": 165, "dicionnair": 165, "cledict": 165, "0x0120db90": 165, "18930576": 165, "0x120db90": 165, "hexad\u00e9cimal": 165, "n\u00e9cessitent": [165, 168], "donnent": 165, "st\u00e9thoscop": 165, "5555555555555554": 165, "__wd__": 165, "__builtins__": [165, 168], "reviendr": 165, "divmod": 165, "transpara\u00eetr": 165, "traduir": 165, "influenc": 165, "concepteur": 166, "puissent": 166, "textuel": 166, "reportlab": 166, "allong": [166, 168], "perturb": 166, "separated": 166, "ppend": 166, "ead": 166, "tampon": 166, "flush": 166, "technolog": [166, 171], "diverg": 166, "d\u00e9coupag": 166, "d\u00e9cryptent": 166, "relu": 166, "acaracter": 166, "r\u00e9pandus": 166, "exemplezip": 166, "fz": 166, "infolist": 166, "date_tim": 166, "file_siz": 166, "testzip": 166, "zip_deflated": 166, "zip_stored": 166, "nom_fichier_dans_zip": 166, "joint": 166, "couron": 166, "succes": 166, "spammeur": 166, "smtplib": 166, "mim": 166, "multipart": 166, "mimemultipart": 166, "mimebas": 166, "mimetext": 166, "formatdat": 166, "envoyer_mail": 166, "aqui": 166, "msg": 166, "localtim": 166, "set_payload": 166, "encode_base64": 166, "add_head": 166, "attachment": 166, "basenam": 166, "smtp": 166, "gmail": 166, "ehlo": 166, "starttl": 166, "login": 166, "mot_de_p": 166, "sendmail": 166, "as_string": 166, "destinatair": 166, "manuel": 166, "centain": 166, "journ": 166, "r\u00e9organis": 166, "musical": 166, "compl\u00e9mentair": 166, "mutagen": [166, 173], "famili": 166, "osx": 166, "d\u00e9bouchent": 166, "abspath": 166, "commonprefix": 166, "getatim": 166, "getmtim": 166, "getctim": 166, "getsiz": 166, "isab": 166, "isfil": 166, "splitext": 166, "chdir": 166, "mkdir": 166, "makedir": 166, "repfinal": 166, "renam": 166, "rmdir": 166, "liste_fichier_repertoir": 166, "ob\u00e9iss": 166, "rep": 166, "fo": 166, "gitignor": 166, "gitattribut": 166, "appveyor": 166, "yml": 166, "_latex": 166, "ruff_cach": 166, "temp_notebook": 166, "circlec": 166, "jug": 166, "relir": 166, "judici": 166, "rawiobas": 166, "affili": 166, "quinz": 166, "soul\u00e8vent": 166, "modil": 166, "1415692": 166, "fb": 166, "sauvegard": 166, "abcdedf": 166, "chain": 166, "calcule_norm": 166, "dic": 166, "830951894845301": 166, "nom_modul": 168, "diff\u00e9renc": 168, "pyc": 168, "traduct": 168, "bytecod": 168, "exemple_class": 168, "__import__": 168, "nom_module_sans_extens": 168, "absolus": 168, "python36_x64": 168, "exe": 168, "__all__": 168, "inh\u00e9rent": 168, "posix": 168, "depending": 168, "unlink": 168, "eith": 168, "posixpath": 168, "ntpath": 168, "curd": 168, "representing": 168, "pard": 168, "pathnam": 168, "separator": 168, "extsep": 168, "altsep": 168, "alternat": 168, "pathsep": 168, "linesep": 168, "defpath": 168, "execut": 168, "devnull": 168, "devic": 168, "program": 168, "stand": 168, "opend": 168, "module1": 168, "module2": 168, "_frozen_importlib": 168, "frozen": 168, "_imp": 168, "_thread": 168, "_warning": 168, "_weakref": 168, "python_cour": 168, "englob": 168, "mesmodul": 168, "part1": 168, "niveaud": 168, "part2": 168, "niveaudeuxb": 168, "subpackage1": 168, "modulex": 168, "subpackage2": 168, "moduley": 168, "pr\u00e9install": 168, "fur": [168, 173], "asyncio": [168, 170], "socket": 168, "cgi": 168, "cmath": 168, "gc": [168, 171], "getopt": 168, "htmllib": 168, "pathlib": 168, "sqlite3": 168, "gestionnair": 168, "threading": [168, 171], "dom": 168, "infegal": 168, "esp": 168, "141964": [], "carlo": 168, "integrale_monte_carlo": 168, "6664643080133164": [], "simpliqu": 168, "interfa\u00e7ag": 168, "h\u00e9bergent": 168, "maintenus": 168, "ponctuel": 168, "ambiti": 168, "tensorflow": 168, "setup": 168, "apppliqu": 169, "run_python_script_139986778962560": [], "0x7f513639add0": [], "ultrajson": 169, "restaur": 169, "crucial": 169, "d\u00e9chiffr": 169, "librar": 169, "multithreading": 170, "bibliograph": 170, "gevent": 170, "uvloop": 170, "blazing": 170, "networking": 170, "sanic": 170, "cython": 170, "openmp": [170, 171], "2004": 171, "microprocesseur": 171, "transistor": 171, "multicoeur": 171, "disjoint": 171, "entam": 171, "processus": 171, "achev": 171, "asynchron": 171, "communiquent": 171, "synchronisent": 171, "monthread": 171, "proviennent": 171, "exager": 171, "etat": 171, "temporis": 171, "ojet": 171, "diziem": 171, "ind\u00e9fin": 171, "is_set": 171, "dixiem": 171, "verrous": 171, "indexfrr": 171, "veulent": 171, "11111111112222222222": 171, "acquir": 171, "entrem\u00ealent": 171, "sien": 171, "b\u00e2t": 171, "thread_fin": 171, "thread_resultat": 171, "lance_thread": 171, "legnd": 171, "text2": 171, "thread_fini_fonct": 171, "transit": [13, 93, 171], "concernent": 171, "envoient": 171, "put": 171, "\u00e9tranger": 171, "get_now": 171, "put_now": 171, "qsiz": 171, "chevauchent": 171, "soumettr": 171, "subm": 171, "max_work": 171, "prim": 171, "112272535095293": 171, "112582705942171": 171, "115280095190773": 171, "115797848077099": 171, "1099726899285419": 171, "sqrt_n": 171, "ind\u00e9chiffr": 171, "logg": 171, "logger": 171, "get_logg": 171, "getlogg": 171, "setlevel": 171, "asctim": 171, "threadnam": 171, "levelnam": 171, "streamhandl": 171, "stdout": 171, "setformatt": 171, "addhandl": 171, "fh": 171, "filehandl": 171, "current_thread": 171, "end1": 171, "end2": 171, "end3": 171, "thread_0": 171, "thread_1": 171, "515": [], "322": [], "328": [], "promess": 171, "bient\u00f4t": 171, "as_completed": 171, "compliquent": 171, "parallel_numpy_dot": 171, "vb": 171, "06460040965832": [], "distribute_sum": 171, "inlass": 171, "enclench": 171, "distrinct": 171, "d\u00e9velopeur": 171, "multithread": 171, "nogil": 171, "parallelism": 171, "parallelizing": 171, "interp\u00e9teur": 171, "pythonnet": 171, "py4j": 171, "pyjnius": 171, "nuir": 171, "pluriel": 173, "singuli": 173, "formulair": 173, "1913": 173, "1978": 173, "1914": 173, "1941": 173, "1980": 173, "int\u00e9resson": 173, "r\u00e9pondent": 173, "0123456789": 173, "z0": 173, "taxinom": 173, "tax": 173, "quadrupl": 173, "vba": 173, "vbatd1_4": 173, "absenc": 173, "suspens": 173, "yoyo": 173, "dupont": 173, "tc": 173, "repl": 173, "valident": 173, "flag": 173, "chanson": 173, "track03": 173, "track": 173, "audiotrack": 173, "pist": 173, "audiop": 173, "audio": 173, "heart": 173, "heartland": 173, "heartach": 173, "ache": 173, "easyid3": 173, "infomp3": 173, "tag": 173, "all_fil": 173, "repertoir": 173, "heart_notitle_mot": 173, "liheart": 173, "notitl": 173, "nbmot": 173, "nbsong": 173, "album": 173, "tracknumb": 173, "moymot": 173, "nom_du_group": 173, "groupdict": 173, "trouve_toute_fonct": 173, "expm": 173, "get_function_list_definit": 173, "ndef": 173, "z_": 173, "z_0": 173, "get_function_list_call": 173, "detection_fonction_pas_appele": 173, "sfil": 173, "funcdef": 173, "funccal": 173, "fonction_inutil": 173, "errno": 173, "nbl": [], "title2": [], "61155": 7, "61151": 7, "81204": 7, "11048": 7, "11047": 7, "70155": 7, "20044": 7, "20043": 7, "50108": 7, "81194": 7, "run_python_script_139790434528256": 39, "0x7f2397449d20": 39, "run_python_script_139790439231360": 150, "run_python_script_139790824496064": 150, "run_python_script_139790824492096": 150, "run_python_script_139790827215360": 150, "run_python_script_139790815204096": 150, "run_python_script_139790814825088": 150, "425443400000404": 150, "882326799999646": 150, "8523537999999462": 150, "run_python_script_139790808247680": 150, "run_python_script_139790762984000": 153, "run_python_script_139790729949760": 153, "run_python_script_139790762541696": 153, "run_python_script_139790764159936": 154, "run_python_script_139790762644608": 154, "run_python_script_139790761486464": 154, "run_python_script_139790765229312": 154, "run_python_script_139790765136896": 154, "run_python_script_139790764137216": 154, "04626930000085849": 159, "046163399999386456": 159, "376500": 161, "1694773424": 161, "3852384": 161, "0x7f23af8255a0": 162, "run_python_script_139790771044928": 164, "run_python_script_139790774741248": 164, "run_python_script_139790771996544": 164, "run_python_script_139790773971072": 164, "run_python_script_139790773826368": 164, "run_python_script_139790774231296": 164, "run_python_script_139790726141376": 164, "0x7f239535fb80": 164, "run_python_script_139790821887168": 165, "run_python_script_139790826146304": 165, "0x7f2395e22500": 165, "142168": 168, "6669828348425172": 168, "run_python_script_139790780218176": 169, "0x7f239552d120": 169, "760": 171, "639": 171, "554": 171, "765": 171, "728": 171, "664": 171, "939": 171, "05499599590244": 171, "test_compos": 95, "__matmul__": 95, "affair": 95, "go\u00fbt": 95, "decompos": 95, "applique_decomposition_identit": 95, "test_decompose1": 95, "test_decompose2": 95, "considered": 95, "textwrap": 96, "profondeur_maximal": 96, "pleft": 96, "pright": 96}, "objects": {"teachpyx.examples": [[2, 0, 0, "-", "classiques"], [2, 0, 0, "-", "construction_classique"], [5, 0, 0, "-", "numpysex"]], "teachpyx.examples.classiques": [[2, 1, 1, "", "commentaire_accentues"], [2, 1, 1, "", "dictionnaire_modifie_dans_la_boucle"], [2, 1, 1, "", "dix_entiers_carre"], [2, 1, 1, "", "repetition_a_eviter"], [2, 1, 1, "", "str2date"]], "teachpyx.examples.construction_classique": [[2, 1, 1, "", "compte"], [2, 1, 1, "", "construit_matrice_carree"], [2, 1, 1, "", "enumerate_permutations"], [2, 1, 1, "", "enumerate_permutations_recursive"], [2, 1, 1, "", "integrale"], [2, 1, 1, "", "mat2text"], [2, 1, 1, "", "mat2vect"], [2, 1, 1, "", "minindex"], [2, 1, 1, "", "recherche"], [2, 1, 1, "", "recherche_dichotomique"], [2, 1, 1, "", "somme"], [2, 1, 1, "", "text2mat"], [2, 1, 1, "", "triindex"], [2, 1, 1, "", "vect2mat"]], "teachpyx.examples.numpysex": [[5, 1, 1, "", "numpy_matrix2list"], [5, 1, 1, "", "numpy_types"]], "teachpyx.faq": [[3, 0, 0, "-", "faq_exception"], [3, 0, 0, "-", "faq_numpy"], [3, 0, 0, "-", "faq_python"]], "teachpyx.faq.faq_exception": [[3, 1, 1, "", "call_stack"]], "teachpyx.faq.faq_numpy": [[3, 1, 1, "", "to_float32"]], "teachpyx.faq.faq_python": [[3, 2, 1, "", "Distribution"], [3, 3, 1, "", "PQPipError"], [3, 1, 1, "", "class_getitem"], [3, 1, 1, "", "difference_div"], [3, 1, 1, "", "entier_grande_taille"], [3, 1, 1, "", "enumerate_regex_search"], [3, 1, 1, "", "get_day_name"], [3, 1, 1, "", "get_installed_distributions"], [3, 1, 1, "", "get_month_name"], [3, 1, 1, "", "get_package_info"], [3, 1, 1, "", "get_packages_list"], [3, 1, 1, "", "information_about_package"], [3, 1, 1, "", "list_of_installed_packages"], [3, 1, 1, "", "property_example"], [3, 1, 1, "", "python_path"], [3, 1, 1, "", "same_variable"], [3, 1, 1, "", "sortable_class"], [3, 1, 1, "", "stringio"]], "teachpyx.practice": [[6, 0, 0, "-", "rues_paris"]], "teachpyx.practice.rues_paris": [[6, 1, 1, "", "bellman"], [6, 1, 1, "", "connected_components"], [6, 1, 1, "", "distance_haversine"], [6, 1, 1, "", "distance_paris"], [6, 1, 1, "", "euler_path"], [6, 1, 1, "", "eulerien_extension"], [6, 1, 1, "", "get_data"], [6, 1, 1, "", "graph_degree"], [6, 1, 1, "", "kruskal"], [6, 1, 1, "", "possible_edges"]], "teachpyx.tools": [[7, 1, 1, "", "decompress_zip"], [7, 1, 1, "", "download_and_unzip"], [7, 1, 1, "", "draw_diagram"], [7, 0, 0, "-", "profiling"], [7, 1, 1, "", "total_size"]], "teachpyx.tools.profiling": [[7, 2, 1, "", "ProfileNode"], [7, 1, 1, "", "profile"], [7, 1, 1, "", "profile2df"], [7, 1, 1, "", "profile2graph"]], "teachpyx.tools.profiling.ProfileNode": [[7, 4, 1, "", "add_called_by"], [7, 4, 1, "", "add_calls_to"], [7, 4, 1, "", "as_dict"], [7, 4, 1, "", "filter_node_"], [7, 4, 1, "", "get_root"], [7, 5, 1, "", "key"], [7, 4, 1, "", "to_json"], [7, 4, 1, "", "to_text"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:exception", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python fonction"], "2": ["py", "class", "Python classe"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python m\u00e9thode"], "5": ["py", "property", "Python propri\u00e9t\u00e9"]}, "titleterms": {"chang": [0, 95, 111, 118], "log": 0, "0": [0, 97], "3": [0, 8, 13, 33, 34, 40, 49, 57, 58, 69, 75, 76, 77, 87, 89, 95, 97, 105, 106, 111, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 148, 149, 168], "1": [0, 8, 13, 33, 34, 40, 49, 54, 57, 58, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 90, 97, 105, 106, 110, 111, 116, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 148, 150, 164, 168], "survol": 1, "algorithm": [1, 27, 44, 46, 47, 48, 50, 52, 58, 64, 90, 91, 93, 100, 109, 124, 126, 127, 128, 129, 164], "ordre": [1, 48, 52, 59, 164], "grandeur": 1, "comprendr": 1, "co\u00fbt": [1, 27, 80, 81, 87, 90, 99, 109, 134], "mot": [1, 39, 50, 51, 57, 106, 134], "cl\u00e9": [1, 39, 134, 165], "catalogu": 1, "problem": [1, 16, 40, 46, 49, 52, 56, 59, 63, 64, 91, 97, 126, 127, 144, 145, 171], "np": [1, 91], "complet": [1, 91, 97, 131, 173], "id\u00e9": [1, 56, 57, 129, 144, 145], "d\u00e9monstr": [1, 79], "lien": [1, 36], "articl": [1, 14], "livr": 1, "Pour": [1, 118], "entra\u00een": 1, "googl": 1, "recommand": 1, "exampl": [2, 5], "construction_class": 2, "teachpyx": [2, 3, 6], "classiqu": [2, 4, 61, 150, 158, 159, 160, 164], "python": [2, 39, 41, 43, 44, 46, 93, 95, 110, 140, 141, 142, 143, 150, 164, 165, 171, 174], "accept": [2, 41], "accent": [2, 41, 44, 166], "modifi": [2, 39, 40, 90, 160, 164, 165], "dictionnair": [2, 8, 39, 40, 57, 61, 99, 103, 108, 116, 134, 135, 150, 160, 165], "parcour": [2, 62, 64, 91, 160], "Quelle": [2, 3, 41, 111], "diff\u00e9rent": [2, 3, 39, 41, 50, 51, 90], "entre": [2, 3, 34, 39, 41, 50, 51, 90, 107], "return": [2, 39, 41, 134], "print": [2, 39, 41, 165], "calcul": [2, 19, 27, 32, 33, 35, 37, 39, 47, 48, 49, 53, 55, 59, 60, 61, 63, 87, 88, 89, 90, 105, 117, 136, 137, 146, 147, 160], "somm": [2, 53, 88, 103, 160], "dix": [2, 160], "premi": [2, 36, 55, 56, 58, 64, 96, 100, 103, 109, 127, 128, 129, 142, 143, 160, 171], "entier": [2, 120, 121, 160, 165], "carr": [2, 101, 130, 131, 160], "evit": [2, 160], "effectu": [2, 87, 160], "m\u00eam": [2, 36, 50, 51, 52, 87, 90, 109, 140, 160], "appel": [2, 40, 150, 154, 160, 164], "deux": [2, 18, 50, 51, 57, 59, 82, 87, 88, 90, 111, 116, 150, 160], "fois": [2, 88, 160], "convers": [2, 17, 160, 165], "cha\u00een": [2, 26, 39, 40, 99, 160, 165], "caracter": [2, 26, 39, 40, 160, 162, 165, 173], "datetim": [2, 160, 161], "comptag": [2, 160], "fonction": [2, 4, 16, 25, 34, 35, 36, 37, 39, 40, 47, 55, 57, 58, 80, 81, 87, 88, 90, 97, 101, 105, 107, 111, 115, 119, 132, 133, 134, 135, 137, 150, 158, 160, 163, 164, 165, 173], "comm": [2, 80, 81, 160], "parametr": [2, 39, 40, 55, 56, 80, 81, 160, 164], "matric": [2, 31, 35, 48, 54, 61, 64, 82, 83, 87, 90, 97, 116, 160, 165], "vecteur": [2, 160], "minimum": [2, 160], "posit": [2, 97, 160], "recherch": [2, 39, 114, 134, 141, 148, 149, 160], "index": [2, 33, 34, 35, 36, 160], "dichotom": [2, 53, 77, 114, 148, 149, 160], "tri": [2, 8, 48, 57, 58, 80, 81, 100, 105, 119, 160], "gard": [2, 59, 160], "initial": [2, 17, 160], "faq": [3, 4, 41], "faq_python": 3, "divis": [3, 41], "Quel": [3, 41], "enti": [3, 41], "plus": [3, 28, 41, 47, 51, 52, 53, 57, 58, 60, 61, 82, 83, 87, 88, 90, 96, 107, 111, 118, 119, 122, 123, 124, 125, 130, 131, 136, 137, 148, 149, 154, 166, 171, 173], "grand": [3, 41, 47, 53, 57, 96, 122, 123], "tabul": [3, 41], "espac": [3, 41, 63, 90], "comment": [3, 41], "iter": [3, 25, 41, 86, 114, 150, 153, 164], "r\u00e9sultat": [3, 41, 47, 55, 84, 85, 87, 90, 158], "express": [3, 8, 41, 63, 106, 140, 141, 172, 173], "r\u00e9guli": [3, 8, 41, 63, 106, 140, 141, 172, 173], "r\u00e9cuper": [3, 34, 36, 41, 55, 154], "nom": [3, 41, 166, 168], "jour": [3, 34, 36, 41], "part": [3, 24, 33, 41, 142, 143, 148, 149], "dat": [3, 34, 41, 46, 161], "mois": [3, 41], "list": [3, 18, 19, 27, 39, 40, 41, 89, 99, 116, 134, 148, 150, 158, 164, 165, 166, 168], "modul": [3, 26, 39, 40, 41, 44, 62, 104, 111, 140, 141, 167, 168], "install": [3, 41, 44], "pourquoi": [3, 41, 57, 87], "pand": [3, 8, 23, 34, 36, 41], "numpy": [3, 5, 8, 22, 32, 33, 35, 36, 41, 110, 117], "march": [3, 33, 41, 55, 168], "sous": [3, 9, 41, 53, 158], "window": [3, 9, 41], "pip": [3, 41], "obten": [3, 41, 115, 153], "inform": [3, 41, 165, 171], "packag": [3, 41, 44], "propriet": [3, 40, 41, 150], "\u00e9vit": [3, 41], "sy": [3, 41], "path": [3, 41], "append": [3, 41], "quand": [3, 41, 137], "d\u00e9velopp": [3, 41], "Qu": [3, 41, 132], "typ": [3, 5, 35, 36, 39, 40, 41, 150, 153, 154, 165], "immuabl": [3, 39, 40, 41, 165], "immut": [3, 40, 41, 165], "class": [3, 16, 25, 36, 39, 40, 41, 93, 94, 95, 96, 97, 98, 130, 131, 132, 133, 150, 151, 152, 153, 158], "sortabl": [3, 41], "a": [3, 17, 41, 87, 91, 97, 101, 173], "quoi": [3, 41, 101, 140, 173], "sert": [3, 41, 101, 140, 173], "stringio": [3, 41], "faq_except": 3, "faq_numpy": 3, "cod": [4, 10, 16, 39, 65, 73, 77, 79, 111, 134, 135], "inclus": [4, 150], "dan": [4, 39, 52, 59, 87, 90, 97, 99, 134, 140, 141, 158, 166], "librair": 4, "construct": [4, 73, 74, 89, 132, 150, 158, 159, 160, 164], "impl\u00e9ment": [4, 22, 50, 112, 120, 121, 138, 139], "exercic": [4, 19, 27, 33, 34, 43, 57, 58, 63, 66, 75, 77, 78, 79, 86, 87, 88, 90, 93, 105, 106, 111, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 148, 149], "numpysex": 5, "oper": [5, 21, 32, 33, 34, 35, 39, 40, 87, 95, 98, 99, 130, 131, 150, 164], "matrix": [5, 32, 33], "Quels": [5, 41], "support": [5, 41], "practic": 6, "rues_par": 6, "tool": 7, "decompress_zip": 7, "download_and_unzip": 7, "draw_diagram": 7, "total_siz": 7, "profiling": [7, 8, 93, 111, 112, 113], "2022": [8, 9, 14, 89, 90], "11": [8, 13, 77], "31": [8, 13], "rappel": [8, 13], "feuill": [8, 13, 34, 96], "rout": [8, 13], "s\u00e9anc": [8, 13, 66, 92], "7": [8, 36, 97, 124, 125, 141, 148, 149], "9": 8, "introduct": [8, 44, 47, 158], "2": [8, 13, 33, 34, 40, 49, 54, 57, 58, 63, 67, 68, 69, 71, 72, 75, 76, 77, 78, 81, 83, 85, 86, 87, 97, 105, 106, 110, 111, 114, 116, 117, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 148, 150, 168], "14": [8, 69, 70], "programm": [8, 27, 37, 39, 40, 43, 91, 124, 125, 127, 131, 168], "dynam": [8, 34, 91, 124, 125, 127, 164], "voyageur": [8, 62], "commerc": [8, 28, 62], "21": [8, 79], "4": [8, 21, 33, 34, 57, 58, 74, 75, 76, 87, 97, 106, 111, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 148], "28": 8, "graph": [8, 34, 36, 48, 54, 55, 86, 91, 97], "5": [8, 34, 57, 75, 97, 111, 124, 125, 140, 141, 148, 149], "10": [8, 68], "s\u00e9rialis": [8, 25, 26, 107, 169], "test": [8, 37, 39, 40, 44, 51, 59, 90, 118, 148, 149, 164], "unitair": [8, 39, 51, 90, 118], "6": [8, 34, 57, 72, 97, 124, 125, 140, 141, 148, 149], "12": [8, 9, 80, 81], "webscrapping": 8, "19": 8, "top": [8, 58], "k": [8, 58, 122, 123], "8": [8, 13, 97, 124, 125, 141], "26": [8, 67, 71, 90], "07": 9, "utilis": [9, 37, 39, 57, 58, 90, 105, 106, 111, 132, 134, 135, 152, 153, 158], "cartopy": 9, "wsl": 9, "2023": [10, 11, 12, 13, 14], "08": [10, 11], "03": 10, "jam": 10, "09": [11, 12], "\u00e9nigm": [11, 16, 21], "hermion": 11, "06": 12, "ensa": 12, "collect": 14, "p\u00e9riss": 14, "galler": 15, "exempl": [15, 33, 95, 113, 150, 153, 164, 165, 166, 168, 173], "L": 16, "einstein": 16, "r\u00e9solu": 16, "permut": [16, 59, 62, 94, 95], "La": [16, 35, 36, 53, 124, 137, 145], "rul": 16, "explic": 16, "descript": 16, "float": [17, 148], "probability": 17, "float64": 17, "x": [17, 60, 83, 90, 95], "float32": 17, "interval": 17, "length": 17, "distribu": [17, 34, 35], "an": 17, "answer": 17, "to": 17, "the": 17, "question": [17, 76, 152], "similar": 17, "what": 17, "about": 17, "not": [17, 66, 73, 74, 75, 76, 77, 78, 79], "strict": 17, "comparison": 17, "conclus": [17, 78], "Le": [18, 39, 153, 174], "gil": [18, 171], "parallel": 18, "Un": [18, 28, 47, 95, 97, 98, 99, 118, 165, 168, 171], "autr": [18, 19, 39, 80, 97, 105, 111, 116, 118, 132, 140, 141, 150, 158, 161, 169], "sc\u00e9nario": 18, "hypercub": 19, "q1": [19, 24, 35, 36, 48, 50, 52, 55, 59, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104, 107, 112, 122, 123, 146, 147], "tripl": 19, "r\u00e9curs": [19, 40, 80, 81, 114, 134, 164], "q2": [19, 24, 35, 36, 48, 50, 52, 55, 59, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104, 107, 112, 122, 123, 146, 147], "comparaison": [19, 53, 164], "q3": [19, 24, 35, 36, 48, 50, 55, 59, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104, 107, 112, 122, 123, 146, 147], "pr\u00e9cis": [19, 27, 47, 136, 137], "q4": [19, 24, 35, 36, 48, 50, 55, 59, 68, 69, 70, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104, 112, 146, 147], "astuc": [20, 37, 39], "lambd": [20, 34, 39, 164], "function": [20, 34], "mathador": 21, "point": [22, 34, 40, 62, 80, 81, 87, 90, 168], "acced": 22, "\u00e9l\u00e9ment": [22, 33, 47, 58, 73, 99, 103, 134, 164], "particuli": [22, 35], "groupby": 23, "valeur": [23, 35, 36, 40, 48, 82, 83, 109, 134, 153, 164], "manqu": [23, 82, 83], "dam": 24, "json": [25, 26, 104, 107, 169], "ecritur": [25, 39, 140, 164, 166], "lectur": [25, 34, 39, 43, 140, 166], "limit": 25, "rapid": [25, 53, 57, 58, 60, 87, 107, 111, 119, 130, 131, 136, 137], "pickl": [25, 107], "Les": [25, 39, 58, 64, 124, 145, 153, 158, 164, 173], "r\u00e9duir": 25, "taill": [25, 47, 90, 118], "cas": [25, 47, 87, 90, 97, 158, 165, 168], "binair": [25, 166, 169], "g\u00e9ner": [25, 33, 54, 103, 156, 164], "protobuf": [26, 104], "schem": 26, "compil": [26, 150, 164], "import": [26, 40, 158, 168], "cr\u00e9": [26, 34, 35, 90, 140, 158], "plusieur": [26, 34, 158, 164, 168], "expliqu": [27, 57, 79], "cop": [27, 39, 150, 165, 166], "erreur": [27, 36, 39, 55, 153, 154], "logiqu": [27, 116, 164], "h\u00e9ritag": [27, 39, 40, 97, 132, 133, 150, 153], "doubl": 27, "r\u00e9flex": 28, "autour": [28, 150], "voyag": 28, "tsp": [28, 59], "Des": [28, 37, 39, 118], "vill": [28, 59], "tir": [28, 59, 62, 90], "hasard": [28, 117], "crois": [28, 34], "noeud": 28, "d\u00e9part": [28, 36], "const": [28, 40, 105, 165], "peu": [28, 35, 47], "al\u00e9atoir": [28, 33, 48, 54, 59, 62, 80, 81, 82, 83, 89, 90, 97, 105], "comput": 29, "tim": 29, "datafram": [30, 31, 34, 36, 165], "matriciel": [32, 33, 35, 61], "optimis": [33, 55, 56, 80, 81, 87, 88, 100, 169], "array": 33, "creation": 33, "notion": [33, 107, 134, 171], "datatyp": 33, "dimens": [33, 61, 90, 116, 122, 123], "slicing": 33, "fancy": 33, "indexing": 33, "view": 33, "contr": 33, "copy": [33, 150], "manipul": [33, 34, 36, 165, 166], "shap": 33, "echiqui": 33, "cribl": 33, "erathosthen": 33, "broadcasting": [33, 35], "r\u00e9duct": 33, "algebr": 33, "lin\u00e9air": [33, 53], "simpl": [33, 50, 93, 150, 164, 171], "nombr": [33, 40, 47, 49, 54, 87, 97, 128, 129, 164, 165], "statist": 33, "retrouv": [33, 87], "ser": [33, 34, 36, 55], "scipy": [33, 117], "simul": [33, 55, 56, 91, 100], "r\u00e9gress": 33, "estim": [33, 47, 55, 56, 86], "maximis": 33, "vraisembl": 33, "r\u00e9f\u00e9rent": 33, "el\u00e9ment": [33, 34], "r\u00e9pons": [33, 34, 35, 36, 48, 50, 52, 55, 57, 58, 59, 103, 104, 105, 106, 111], "\u00e9critur": [34, 104, 118], "notat": [34, 165], "symbol": 34, "fichi": [34, 39, 44, 140, 141, 146, 147, 162, 166, 168], "excel": [34, 104, 140, 141], "filtr": 34, "union": 34, "sort": [34, 167], "group": [34, 173], "by": 34, "join": 34, "pivot": [34, 110], "filt": 34, "merg": 34, "fusion": [34, 36], "tableau": [34, 35, 39, 97, 116, 117], "moyen": [34, 80, 81, 82, 83, 96], "Avec": [34, 90], "san": [34, 63, 105, 166], "plot": 34, "don": [34, 36, 37, 39, 55, 64, 80, 81, 86, 90, 93, 97, 104, 116, 124, 126, 127, 169], "nuag": [34, 80, 81], "matplotlib": 34, "mariag": 34, "annex": 34, "\u00e9cart": 34, "mari": 34, "version": [35, 36, 43, 54, 58, 74, 77, 101, 109, 114, 118], "court": [35, 36, 66, 95, 124, 125], "enonc": [35, 36, 46, 48, 49, 50, 52, 53, 55, 57, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 104, 105, 106, 111], "ma\u00eetris": [35, 36], "slic": 35, "nan": [35, 36], "chi_2": 35, "contingent": [35, 117], "veut": [35, 55], "ident": [35, 47, 90], "million": 35, "dev": 35, "appliqu": [35, 53, 86, 112], "stopcovid": 35, "cr\u00e9ation": [36, 97, 165], "lign": [36, 97, 106, 150, 158], "colon": [36, 82, 97], "ver": 36, "modif": 36, "Une": [36, 64, 96, 97, 98, 100, 112, 118], "warning": [36, 156], "fr\u00e9quent": [36, 39, 160], "On": [36, 55, 87], "covid": [36, 55], "r\u00e9gion": [36, 55], "\u00e2ge": [36, 55], "refair": 36, "graphiqu": [36, 37, 39, 157, 171], "pr\u00e9c\u00e9dent": [36, 57, 111], "votr": 36, "fair": [36, 90, 130, 131], "diff\u00e9renci": 36, "liss": 36, "tabl": [36, 40, 103], "pet": [36, 58, 118, 119], "apart": [36, 54, 62, 130], "q5": [36, 55, 69, 70, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104, 112, 146, 147], "cart": 36, "quelqu": [37, 79, 103], "conseil": [37, 39], "\u00e9crir": [37, 39, 51, 52, 55, 88, 90, 107], "petit": [37, 39, 47, 55, 88, 105], "Pas": 37, "variabl": [37, 39, 40, 134, 148, 149, 163, 164, 165], "global": [37, 40, 164, 171], "s\u00e9par": [37, 39, 124, 125, 128, 129], "charg": [37, 39], "interfac": [37, 39, 157, 171], "truc": [37, 39], "prec": 38, "cheat": 39, "sheet": 39, "langag": [39, 41, 93, 150, 164, 165, 174], "numer": [39, 47, 84, 85], "boucl": [39, 40, 44, 111, 148, 149, 164, 165], "for": [39, 40, 164], "whil": [39, 40, 164], "enumerat": 39, "zip": [39, 116, 165, 166], "map": 39, "d\u00e9finit": [39, 40, 120, 121, 150, 164, 165, 168], "yield": 39, "d\u00e9clar": [39, 40, 150, 164], "attribut": [39, 40, 130, 131, 150, 168], "m\u00e9thod": [39, 40, 57, 98, 130, 131, 132, 136, 137, 150, 158, 162, 165], "statiqu": [39, 40, 150], "instanc": [39, 150], "d\u00e9cor": 39, "text": [39, 63, 104, 140, 141, 146, 147, 158, 166], "except": [39, 40, 118, 153, 154, 155], "confus": 39, "guillemet": 39, "rang": [39, 165], "initialis": 39, "trois": [39, 44, 87, 89, 130, 131, 164], "partag": [39, 171], "moteur": 39, "syntax": [40, 150, 153, 164, 165, 168, 173], "d1": [40, 150, 164, 165, 168], "entr\u00e9": [40, 167, 168], "d10": [40, 165], "frozenset": [40, 165], "d2": [40, 150, 164, 165], "instantiaion": [40, 150], "d3": [40, 150, 164, 165], "d4": [40, 150, 164, 165], "port": [40, 164], "d5": [40, 150, 164, 165], "tupl": [40, 99, 165], "local": [40, 134, 164], "d6": [40, 150, 164, 165], "mutabl": [40, 165], "d7": [40, 150, 165], "d8": [40, 150, 165], "surcharg": [40, 150, 164], "d9": [40, 165], "set": [40, 165], "figur": 40, "s1": [40, 150, 153, 164, 168], "attrap": [40, 153], "s10": [40, 150], "s11": [40, 150], "s12": [40, 150], "s13": [40, 150], "__copy__": [40, 150], "s14": [40, 150], "fig": [40, 150], "s15": [40, 150], "s16": [40, 150], "h\u00e9rit": [40, 150], "s2": [40, 150, 153, 164, 168], "instanci": [40, 150], "instruct": [40, 153, 164], "pass": [40, 164], "lev": [40, 153], "s3": [40, 150, 164, 168], "s4": [40, 150, 164], "s5": [40, 150, 164], "extens": [40, 44, 164, 165, 168], "s6": [40, 150, 164], "constructeur": [40, 150], "s7": [40, 150, 164], "s8": [40, 150, 164], "__str__": [40, 150], "d\u00e9faut": [40, 162, 164], "s9": [40, 150, 164], "ind\u00e9fin": [40, 164], "En": [42, 105], "diagonal": [42, 101], "compl": [42, 43], "apprendr": 43, "concept": [44, 164], "s\u00e9quenc": [44, 53, 158, 165], "notebook": [44, 46], "licens": 45, "tous": [46, 57, 89, 90, 106, 129, 130, 131], "correct": [46, 66, 67, 68, 69, 70, 71, 72, 74, 87, 91, 93, 115, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149], "examen": 46, "streaming": 47, "bjkst": 47, "distinct": 47, "universal": 47, "hashing": 47, "collis": 47, "temp": [47, 53, 57, 61, 90, 107, 112, 137], "stream": [47, 107], "h_1": 47, "h_2": 47, "\u00e9gal": 47, "o\u00f9": [47, 90], "hash": [47, 103], "d\u00e9pend": 47, "epsilon": 47, "compos": [48, 54], "connex": [48, 54], "construir": [48, 57, 141], "adjacent": [48, 54], "symetr": 48, "propr": [48, 140, 141, 153], "croiss": 48, "fait": 48, "suiv": [48, 89, 97], "retourn": [48, 62, 87, 88, 90], "fa\u00e7on": [49, 122, 123], "mont": [49, 137], "\u00e9chel": 49, "solut": [49, 53, 58, 60, 63, 64, 126, 127, 129, 144, 145], "distanc": [50, 51, 59, 62, 80, 81, 89, 90, 98], "\u00e9dit": [50, 51], "longueur": [50, 51], "alambiqu": 50, "pag": [50, 141], "wikipedi": 50, "na\u00efv": [51, 53, 112, 126], "tres": [51, 93], "si": [51, 52, 59, 111], "proch": [51, 83, 90, 122, 123], "alor": 51, "ff": 51, "f": [51, 165], "ph": 51, "person": 51, "sait": 51, "algo": 123, "ordonnanc": 52, "d\u00e9termin": [52, 97], "peut": [52, 107, 112], "ex\u00e9cut": 52, "t\u00e2ch": 52, "Et": 52, "dur": [52, 86], "vocabulair": 54, "li": 54, "puissanc": 54, "trouv": [54, 57, 129, 130, 131, 140, 141], "model": [55, 56], "sird": [55, 56], "q0": 55, "dessin": [55, 73, 74, 80, 81, 89, 109], "propag": 55, "v\u00e9rifi": [55, 120, 121], "cel": [55, 57], "synthet": 55, "q6": [55, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104], "r\u00e9el": [55, 165], "cumul": 55, "\u00e9pid\u00e9miolog": 56, "visualis": [56, 62], "second": [56, 90, 112, 118, 127, 129, 158], "jeux": [57, 101, 162], "suffix": 57, "commun": [57, 158, 168], "partagent": 57, "constuir": 57, "assoc": 57, "chaqu": [57, 58, 90], "lettr": [57, 103, 106], "termin": [57, 106], "ci": 57, "mesur": [57, 61, 90, 122, 123, 137], "pris": 57, "tel": 57, "pouss": 57, "loin": [57, 118, 148, 149], "tout": [58, 59, 62, 63, 97, 107, 153, 168], "prend": [58, 104], "choix": 58, "s\u00e9lect": 58, "perf_count": 58, "compar": [58, 107, 112], "vitesss": 58, "traveling": 59, "salesman": 59, "chois": 59, "chemin": [59, 62, 64, 96, 124, 125, 166], "rel": 59, "invers": 59, "am\u00e9lior": [59, 111], "moiti": 59, "possibl": [59, 60, 87, 111, 164], "plais": 59, "produit": [61, 87, 126, 127], "creus": 61, "\u00e9leg": 61, "affich": [62, 96], "tqdm": 62, "d\u00e9cod": 63, "mors": 63, "traduir": 63, "contient": [63, 111], "alphabet": 63, "minimis": 63, "transcript": 63, "interpret": [63, 171], "ru": [64, 90], "paris": 64, "etap": 64, "bellman": 64, "kruskall": 64, "eul\u00e9rien": 64, "optimal": [64, 88], "vari": 64, "sen": [64, 150], "interd": 64, "gaph": 64, "orient": 64, "windy": 64, "postman": 64, "cass": 65, "vigener": [65, 134, 135], "minut": [66, 92], "1a": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "e": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "interrog": [67, 68, 69, 70, 71, 72], "\u00e9crit": [67, 68, 69, 70, 71, 72, 76], "septembr": [67, 71], "2014": [67, 68, 69, 70, 75], "octobr": [68, 82, 83, 84, 85, 90], "novembr": [69, 70, 72, 73, 74, 86, 87, 88], "2015": [71, 72, 76, 77], "td": [73, 74, 75, 76, 77, 78, 79], "27": [73, 74], "2012": [73, 74], "coloriag": [73, 74, 101], "spiral": [73, 74], "ajout": [73, 97, 118, 150, 164, 166, 168], "roug": [73, 88], "d\u00e9cembr": [75, 77, 78, 80, 81], "rattrapag": [76, 88, 89], "\u00e9nonc": 76, "oral": 76, "lou": 77, "achet": 77, "appart": 77, "q7": [77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 103, 104], "exo": 77, "q8": [77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90], "q9": [77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90], "num\u00e9ros": 77, "t\u00e9l\u00e9phon": 77, "16": 78, "2016": 78, "q10": [78, 79, 80, 81, 82, 83, 84, 85, 87, 90], "f\u00e9vri": 79, "2017": [79, 80, 81], "commentair": [79, 150, 164, 165], "\u00e9chantillon": [80, 81, 82, 83], "encor": [80, 81], "seuil": 81, "23": [82, 83], "2018": [82, 83], "m1": [82, 83, 87], "m2": [82, 83, 87], "m3": [82, 83, 87], "norm": [82, 83], "r\u00e9p\u00e9tit": [82, 83], "22": [84, 85], "2019": [84, 85], "distance_t": [84, 85], "distance_bord": [84, 85], "table_al": [84, 85], "n_table_al": [84, 85], "table_proch": [84, 85], "distance_n_tables_al": [84, 85], "meilleur_table_al": [84, 85], "plot_tabl": [84, 85], "vorono\u00ef": [84, 85], "kmean": [84, 85], "24": 86, "2020": 86, "gu\u00e9rison": 86, "kaplan": 86, "mei": 86, "courb": 86, "publiqu": 86, "apres": 86, "T": 86, "vaccin": 86, "heur": 86, "variat": 86, "2021": [87, 88], "multipl": [87, 120, 121, 150, 165, 173], "lent": 87, "ecrir": [87, 90], "meilleur": 87, "option": 87, "v\u00e9rif": [87, 90], "mesure_temp": 87, "m4": 87, "pench": 87, "N": 87, "combien": [87, 111], "r\u00e9soudr": 87, "remarqu": 87, "lor": [87, 164], "15": 88, "volum": 88, "air": 88, "surfac": [88, 101, 105], "briqu": 88, "fac": 88, "inclut": 88, "n\u00e9cessair": 88, "coll": 88, "extrem": 88, "bouteil": 88, "litr": 88, "larg": 88, "bleu": 88, "gross": 88, "mar": 89, "segment": 89, "niveau": 89, "arbre": [89, 96], "Y": 90, "lorsqu": [90, 158], "2x2": 90, "indic": [90, 109], "m\u00e9decin": 90, "grill": 90, "10x10": 90, "quadrill": 90, "coordon": [90, 145], "dictionair": 90, "case_grill": 90, "pairwise_dist": 90, "1000x2": 90, "100x2": 90, "faux": 90, "corrig": 90, "conna\u00eetr": 91, "structur": [93, 104, 116], "outil": 93, "jeu": [94, 97, 102, 118, 138, 139], "d\u00e9": [94, 102], "rotat": [94, 102], "circuit": [94, 102], "De": 94, "2048": [97, 138, 139], "d\u00e9composit": [95, 97], "libr": 97, "pourvu": 97, "perdu": 97, "aggreg": 97, "jou": 97, "coup": 97, "sach": 97, "direct": 97, "scor": [97, 146, 147], "fais": 97, "derni": [97, 112], "fin": [97, 164], "strateg": [97, 138, 139], "illustr": 97, "bref": 98, "aper\u00e7u": 98, "station": 98, "m\u00e9tro": 98, "ensembl": [99, 119, 148, 165, 173], "insert": 99, "dequ": [99, 159], "loi": 100, "multinomial": 100, "poid": 100, "bootstrap": 100, "colori": 101, "proport": 101, "couvert": 101, "math\u00e9mat": 101, "retour": 101, "\u00e7a": [101, 104, 140, 173], "r\u00e9partit": [103, 124], "hashag": 103, "pseudo": 103, "light": 103, "xml": [104, 107], "format": [104, 107, 128, 129, 140, 161, 165, 166], "csv": 104, "relir": 104, "essai": 104, "html": 104, "sql": 104, "sas": 104, "non": [104, 148, 149, 164, 165], "trop": 104, "plac": [104, 158], "zippon": 104, "inspir": 104, "cercl": 105, "pi": 105, "ni": 105, "aucun": 105, "parfait": 105, "machin": 105, "extrair": 106, "remplac": 106, "rim": 106, "elles": 106, "ail": 106, "flux": 107, "lir": [107, 146, 147], "gros": 107, "d\u00e9s\u00e9rialis": 107, "histogramm": [108, 116, 146, 147], "heap": 109, "transform": 109, "tas": 109, "chos": [109, 169], "lieu": 109, "simplifi": [109, 164], "gauss": 110, "vitess": 110, "gin": 111, "profil": [111, 113], "_gini_final": 111, "savoir": 111, "_gini_cumsum": 111, "convolu": 112, "ex\u00e9cu": [112, 168], "im2col": 112, "nouveau": 112, "\u00e9xecu": 112, "d\u00e9duir": 112, "profilag": 112, "\u00e9ven": [112, 158], "\u00e9chantillonnag": 112, "Que": 112, "pouv": 112, "dir": 112, "bizarrer": 113, "web": 115, "scraping": 115, "pokemon": 115, "caract\u00e9rist": 115, "imag": 115, "D": [116, 158], "revers": 116, "spars": [116, 122, 123], "m\u00e9moir": 116, "chi": 117, "formul": 117, "obstacl": 118, "\u00e9chiqui": 118, "aller": [118, 122, 123, 148, 149], "pr\u00e9vu": 119, "\u00e9volu": 119, "cryptag": [120, 121], "homomorphic": [120, 121], "craig": [120, 121], "gentry": [120, 121], "stabl": [120, 121], "addit": [120, 121], "impl\u00e9mentent": [120, 121], "voisin": [122, 123], "nn": [122, 123], "perform": [122, 123], "featur": [122, 123], "imagin": [122, 123], "vit": [122, 123], "2a": 123, "observ": 123, "skis": 124, "facult": [124, 125], "prolong": [124, 125], "degr": [124, 125], "facebook": [124, 125], "puzzl": [126, 127, 128, 129], "scalair": [126, 127], "moin": 126, "recouvr": [126, 127], "soudoi": [126, 127], "prisonni": [126, 127], "d\u00e9coupag": [126, 127], "intelligent": [126, 127], "bas": [126, 127], "approch": 127, "watershed": [128, 129], "bagarreur": [128, 129], "bin\u00f4m": [128, 129], "magiqu": [130, 131], "suit": [130, 131], "piec": [132, 133, 150], "normal": [132, 133, 164], "truqu": [132, 133], "mer": 132, "mixt": [132, 133], "d\u00e9tail": 134, "ordon": 134, "crypt": [134, 135], "d\u00e9crypt": [134, 135], "selon": [134, 135], "int\u00e9gral": [136, 137], "rectangl": [136, 137], "r\u00e9calcitr": 137, "carlo": 137, "arr\u00eat": 137, "gagn": [138, 139], "regl": [138, 139], "with": 140, "rightarrow": [140, 141], "cherch": [140, 141], "motif": [140, 141], "url": 141, "wikip\u00e9di": 141, "trac": [144, 145], "pyramid": [144, 145], "bigarr": [144, 145], "couleur": 145, "devin": [146, 147], "langu": [146, 147], "normalis": [146, 147], "int": 148, "str": [148, 165], "compact": 148, "pr\u00e9sent": 150, "apport": 150, "implicit": 150, "aid": 150, "inclu": 150, "deepcopy": 150, "monnai": 150, "issubclass": 150, "isinst": 150, "C": [152, 171], "oblig": 152, "princip": 153, "lanc": [153, 158], "try": 153, "imbriqu": 153, "d\u00e9fin": 153, "d\u00e9riv": 153, "personnalis": [153, 156, 158], "aberr": 153, "pieg": 153, "usag": 154, "pil": 154, "call": 154, "stack": 154, "messag": [154, 158, 171], "explicit": 154, "convent": 154, "logging": 156, "intercept": 156, "tkint": 158, "objet": [158, 165, 166], "zon": 158, "bouton": 158, "sais": 158, "coch": 158, "rond": 158, "radio": 158, "barr": 158, "d\u00e9fil": 158, "combobox": 158, "canev": 158, "menus": 158, "disposit": 158, "fen\u00eatr": 158, "emplac": [158, 168], "pack": 158, "grid": 158, "even": 158, "principal": 158, "focus": 158, "press": 158, "associ": 158, "menu": 158, "pr\u00e9d\u00e9fin": 158, "contr\u00f4l": 158, "bo\u00eet": 158, "dialogu": 158, "standard": 158, "compt": 158, "rebour": 158, "communiqu": 158, "ordereddict": 159, "namedtupl": 159, "count": 159, "n\u00e9gat": 160, "encoding": [162, 166], "condens": 164, "tru": 164, "b1": 164, "pilotag": 164, "continu": 164, "break": 164, "else": 164, "suppress": [164, 166], "identif": 164, "eval": [164, 165], "exec": 164, "indent": 164, "usuel": 164, "rien": 165, "bool\u00e9en": 165, "formatag": 165, "particul": 165, "r": 165, "complex": [165, 166], "byt": 165, "bytearray": 165, "collag": 165, "concaten": 165, "dict": 165, "repr": 165, "fourn": 165, "affect": 165, "hi\u00e9rarch": 165, "intern": [165, 168], "accentu": 165, "mod": 166, "gestion": 166, "pratiqu": 168, "Ce": 168, "cycliqu": 168, "cour": 168, "arborescent": 168, "paquetag": 168, "relat": 168, "extern": 168, "parall\u00e9lis": 170, "thread": 171, "synchronis": 171, "attent": 171, "fil": 171, "multithreading": 171, "concurrent": 171, "futur": 171, "blocag": 171, "async": 171, "await": 171, "asyncio": 171, "lock": 171, "cython": 171, "m\u00e9lang": 171, "jav": 171, "bibliograph": 171, "assembl": 173, "nomm": 173, "older": 43, "transit": 95, "composit": 95, "transposit": 95, "d\u00e9m\u00eal": 95, "repr\u00e9sent": 96, "jet": 96, "profondeur": 96, "maximal": 96, "depuis": 96, "racin": 96, "jusqu": 96}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Survol algorithmique": [[1, "survol-algorithmique"]], "Ordres de grandeur": [[1, "ordres-de-grandeur"]], "Comprendre le co\u00fbt d\u2019un algorithme": [[1, "comprendre-le-cout-d-un-algorithme"]], "Mot-cl\u00e9": [[1, "mot-cle"]], "Catalogue d\u2019algorithmes": [[1, "catalogue-d-algorithmes"]], "Probl\u00e8mes NP-complets": [[1, "problemes-np-complets"]], "Id\u00e9e pour d\u00e9monstrer qu\u2019un probl\u00e8me est NP-complet": [[1, "idee-pour-demonstrer-qu-un-probleme-est-np-complet"]], "Liens": [[1, "liens"]], "Articles sur des algorithmes": [[1, "articles-sur-des-algorithmes"]], "Livres": [[1, "livres"]], "Pour s\u2019entra\u00eener": [[1, "pour-s-entrainer"]], "Google\u2019s recommandations": [[1, "google-s-recommandations"]], "examples.construction_classique": [[2, "examples-construction-classique"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "Python n\u2019accepte pas les accents": [[2, "indexfaqref-python0"], [41, "index-faqref-0-6"]], "Modifier un dictionnaire en le parcourant": [[2, "indexexref-Base -0"], [160, "index-exref-1-1"]], "Quelle est la diff\u00e9rence entre return et print ?": [[2, "indexfaqref-python1"], [41, "index-faqref-0-10"]], "calcul de la somme des dix premiers entiers au carr\u00e9": [[2, "indexexref-Base0"], [160, "index-exref-0-1"]], "Eviter d\u2019effectuer le m\u00eame appel deux fois": [[2, "indexexref-Base -1"], [160, "index-exref-1-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en datetime": [[2, "indexexref-Base1"], [160, "index-exref-0-4"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "comptage": [[2, "indexexref-Base2"], [160, "index-exref-0-2"]], "fonction comme param\u00e8tre": [[2, "indexexref-Base3"], [160, "index-exref-0-8"]], "conversion d\u2019une matrice en cha\u00eene de caract\u00e8res": [[2, "indexexref-Base4"], [160, "index-exref-0-6"]], "conversion d\u2019une matrice en un vecteur": [[2, "indexexref-Base5"], [160, "index-exref-0-7"]], "minimum avec position": [[2, "indexexref-Base6"], [160, "index-exref-0-9"]], "recherche avec index": [[2, "indexexref-Base7"], [160, "index-exref-0-10"]], "recherche dichotomique": [[2, "indexexref-Base8"], [160, "index-exref-0-11"]], "calcul d\u2019une somme": [[2, "indexexref-Base9"], [160, "index-exref-0-0"]], "conversion d\u2019une cha\u00eene de caract\u00e8re en matrice": [[2, "indexexref-Base10"], [160, "index-exref-0-5"]], "tri, garder les positions initiales": [[2, "indexexref-Base11"], [160, "index-exref-0-12"]], "conversion d\u2019un vecteur en une matrice": [[2, "indexexref-Base12"], [160, "index-exref-0-3"]], "faq": [[3, "faq"]], "teachpyx.faq.faq_python": [[3, "module-teachpyx.faq.faq_python"]], "Quelle est la diff\u00e9rence entre / et // - division ?": [[3, "indexfaqref-python0"], [41, "index-faqref-0-9"]], "Quel est l\u2019entier le plus grand ?": [[3, "indexfaqref-python1"], [41, "index-faqref-0-8"]], "Tabulations ou espace ?": [[3, "indexfaqref-python2"], [41, "index-faqref-0-14"]], "Comment it\u00e9rer sur les r\u00e9sultats d\u2019une expression r\u00e9guli\u00e8re ?": [[3, "indexfaqref-python3"], [41, "index-faqref-0-2"]], "R\u00e9cup\u00e9rer le nom du jour \u00e0 partir d\u2019une date": [[3, "indexfaqref-python4"], [41, "index-faqref-0-12"]], "R\u00e9cup\u00e9rer le nom du mois \u00e0 partir d\u2019une date": [[3, "indexfaqref-python5"], [41, "index-faqref-0-13"]], "R\u00e9cup\u00e9rer la liste des modules install\u00e9s": [[3, "indexfaqref-python6"], [41, "index-faqref-0-11"]], "Pourquoi l\u2019installation de pandas (ou numpy)\nne marche pas sous Windows avec pip ?": [[3, "indexfaqref-python7"], [41, "index-faqref-0-5"]], "Obtenir des informations sur les packages install\u00e9s": [[3, "indexfaqref-python8"], [41, "index-faqref-0-4"]], "propri\u00e9t\u00e9": [[3, "indexfaqref-python9"], [41, "index-faqref-0-15"]], "Comment \u00e9viter sys.path.append\u2026 quand on d\u00e9veloppe un module ?": [[3, "indexfaqref-python10"], [41, "index-faqref-0-3"]], "Qu\u2019est-ce qu\u2019un type immuable ou immutable ?": [[3, "indexfaqref-python11"], [41, "index-faqref-0-7"]], "Classe sortable": [[3, "indexfaqref-python12"], [41, "index-faqref-0-1"]], "A quoi sert un ``StringIO`` ?": [[3, "indexfaqref-python13"], [41, "index-faqref-0-0"]], "teachpyx.faq.faq_exception": [[3, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_numpy": [[3, "module-teachpyx.faq.faq_numpy"]], "Code inclus dans cette librairie": [[4, "code-inclus-dans-cette-librairie"]], "Constructions classiques": [[4, null], [150, "constructions-classiques"], [158, "constructions-classiques"], [159, "constructions-classiques"], [160, "constructions-classiques"], [164, "constructions-classiques"]], "Fonctions impl\u00e9ment\u00e9es pour les exercices": [[4, null]], "FAQ": [[4, null], [41, "faq"]], "examples.numpysex": [[5, "module-teachpyx.examples.numpysex"]], "op\u00e9rations avec numpy.matrix": [[5, "indexexref-numpy0"], [32, "index-exref-0-0"]], "Quels sont les types que numpy supporte ?": [[5, "indexfaqref-numpy0"], [41, "index-faqref-1-0"]], "teachpyx.practice.rues_paris": [[6, "module-teachpyx.practice.rues_paris"]], "tools": [[7, "tools"]], "decompress_zip": [[7, "decompress-zip"]], "download_and_unzip": [[7, "download-and-unzip"]], "draw_diagram": [[7, "draw-diagram"]], "total_size": [[7, "total-size"]], "profiling": [[7, "module-teachpyx.tools.profiling"]], "2022-12-07 : Utilisation de cartopy sous Windows (sous WSL)": [[9, "utilisation-de-cartopy-sous-windows-sous-wsl"]], "2023-08-03 : Code Jam": [[10, "code-jam"]], "2023-08-09 : l\u2019\u00e9nigme d\u2019Hermionne": [[11, "l-enigme-d-hermionne"]], "Gallerie d\u2019exemples": [[15, "gallerie-d-exemples"]], "L\u2019\u00e9nigme d\u2019Einstein et sa r\u00e9solution": [[16, "l-enigme-d-einstein-et-sa-resolution"]], "Fonction permutation": [[16, "fonction-permutation"]], "La classe Rule": [[16, "la-classe-rule"]], "Explicit rules": [[16, "explicit-rules"]], "Description du probl\u00e8me avec ce code": [[16, "description-du-probleme-avec-ce-code"]], "Float Conversion": [[17, "float-conversion"]], "Probability (float64)x == (float32)x": [[17, "probability-float64-x-float32-x"]], "Interval length distribution": [[17, "interval-length-distribution"]], "An answer to the initial question": [[17, "an-answer-to-the-initial-question"]], "An answer to a similar question: what about not strict comparison?": [[17, "an-answer-to-a-similar-question-what-about-not-strict-comparison"]], "Conclusion": [[17, "conclusion"], [78, "Conclusion"]], "Le GIL": [[18, "le-gil"]], "Deux listes en parallel": [[18, "deux-listes-en-parallel"]], "Un autre sc\u00e9nario": [[18, "un-autre-scenario"]], "Hypercube et autres exercices": [[19, "hypercube-et-autres-exercices"]], "Q1 - triple r\u00e9cursivit\u00e9": [[19, "q1-triple-recursivite"]], "Q2 - comparaison de listes": [[19, "q2-comparaison-de-listes"]], "Q3 - pr\u00e9cision des calculs": [[19, "q3-precision-des-calculs"]], "Q4 - hypercube": [[19, "q4-hypercube"]], "Astuces avec les lambda functions": [[20, "astuces-avec-les-lambda-functions"]], "Mathador, \u00e9nigme \u00e0 4 op\u00e9rations": [[21, "mathador-enigme-a-4-operations"]], "Points d\u2019impl\u00e9mentation avec numpy": [[22, "points-d-implementation-avec-numpy"]], "acc\u00e9der \u00e0 un \u00e9l\u00e9ment en particulier": [[22, "acceder-a-un-element-en-particulier"]], "Pandas et groupby": [[23, "pandas-et-groupby"]], "groupby et valeur manquantes": [[23, "groupby-et-valeur-manquantes"]], "Parties de dames": [[24, "parties-de-dames"]], "Q1": [[24, "q1"], [59, "Q1"], [67, "Q1"], [67, "id1"], [68, "Q1"], [68, "id1"], [69, "Q1"], [69, "id1"], [69, "id6"], [70, "Q1"], [71, "Q1"], [71, "id1"], [72, "Q1"], [72, "id1"], [74, "Q1"], [77, "Q1"], [77, "id1"], [77, "id3"], [78, "Q1"], [79, "Q1"], [86, "Q1"], [52, "Q1"]], "Q2": [[24, "q2"], [59, "Q2"], [67, "Q2"], [67, "id2"], [68, "Q2"], [68, "id2"], [69, "Q2"], [69, "id2"], [69, "id7"], [70, "Q2"], [71, "Q2"], [71, "id2"], [72, "Q2"], [72, "id2"], [74, "Q2"], [77, "Q2"], [77, "id2"], [77, "id4"], [78, "Q2"], [79, "Q2"], [52, "Q2"]], "Q3": [[24, "q3"], [59, "Q3"], [67, "Q3"], [67, "id3"], [68, "Q3"], [68, "id3"], [69, "Q3"], [69, "id3"], [69, "id8"], [70, "Q3"], [71, "Q3"], [71, "id3"], [72, "Q3"], [72, "id3"], [74, "Q3"], [77, "Q3"], [78, "Q3"], [79, "Q3"]], "Q4": [[24, "q4"], [59, "Q4"], [68, "Q4"], [68, "id4"], [69, "Q4"], [69, "id4"], [69, "id9"], [70, "Q4"], [77, "Q4"], [78, "Q4"], [78, "id1"], [79, "Q4"]], "S\u00e9rialisation": [[25, "serialisation"], [169, "serialisation"]], "JSON": [[25, "json"], [169, "json"]], "Ecriture (json)": [[25, "ecriture-json"]], "Lecture (json)": [[25, "lecture-json"]], "Limite": [[25, "limite"]], "S\u00e9rialisation rapide": [[25, "serialisation-rapide"]], "Pickle": [[25, "pickle"]], "Ecriture (pickle)": [[25, "ecriture-pickle"]], "Lecture (pickle)": [[25, "lecture-pickle"]], "Les classes": [[25, "les-classes"]], "R\u00e9duire la taille": [[25, "reduire-la-taille"]], "Cas des fonctions": [[25, "cas-des-fonctions"]], "Binaire": [[25, "binaire"], [169, "binaire"]], "Fonction et JSON": [[25, "fonction-et-json"]], "Cas des it\u00e9rateurs": [[25, "cas-des-iterateurs"]], "Cas des g\u00e9n\u00e9rateurs": [[25, "cas-des-generateurs"]], "S\u00e9rialisation avec protobuf": [[26, "serialisation-avec-protobuf"]], "Sch\u00e9ma": [[26, "schema"]], "Compilation": [[26, "compilation"]], "Import du module cr\u00e9\u00e9": [[26, "import-du-module-cree"]], "S\u00e9rialisation en cha\u00eene de caract\u00e8res": [[26, "serialisation-en-chaine-de-caracteres"]], "Plusieurs cha\u00eenes de caract\u00e8res": [[26, "plusieurs-chaines-de-caracteres"]], "S\u00e9rialisation JSON": [[26, "serialisation-json"]], "Exercices expliqu\u00e9s de programmation": [[27, "exercices-expliques-de-programmation"]], "Copie de listes": [[27, "copie-de-listes"]], "Erreur de logique": [[27, "erreur-de-logique"]], "Co\u00fbt d\u2019un algorithme": [[27, "cout-d-un-algorithme"]], "H\u00e9ritage double": [[27, "heritage-double"]], "Pr\u00e9cision des calculs": [[27, "precision-des-calculs"]], "R\u00e9flexions autour du voyage de commerce (TSP)": [[28, "reflexions-autour-du-voyage-de-commerce-tsp"]], "Des villes tir\u00e9es au hasard": [[28, "des-villes-tirees-au-hasard"]], "Croisements": [[28, "croisements"]], "Noeud de d\u00e9part constant": [[28, "noeud-de-depart-constant"]], "Un peu d\u2019al\u00e9atoire en plus": [[28, "un-peu-d-aleatoire-en-plus"]], "Computation times": [[29, "computation-times"]], "Dataframes": [[30, "dataframes"]], "Matrices et DataFrames": [[31, "matrices-et-dataframes"], [165, "matrices-et-dataframes"]], "Calcul matriciel": [[32, "calcul-matriciel"]], "DataFrame et Graphes": [[34, "DataFrame-et-Graphes"]], "DataFrame": [[34, "DataFrame"]], "Series": [[34, "Series"]], "DataFrame (pandas)": [[34, "DataFrame-(pandas)"]], "Lecture et \u00e9criture de DataFrame": [[34, "Lecture-et-\u00e9criture-de-DataFrame"]], "DataFrame et Index": [[34, "DataFrame-et-Index"]], "Notation avec le symbole :": [[34, "Notation-avec-le-symbole-:"]], "Exercice 1 : cr\u00e9er un fichier Excel": [[34, "Exercice-1-:-cr\u00e9er-un-fichier-Excel"], [34, "id1"]], "Manipuler un DataFrame": [[34, "Manipuler-un-DataFrame"]], "6 op\u00e9rations : filtrer, union, sort, group by, join, pivot": [[34, "6-op\u00e9rations-:-filtrer,-union,-sort,-group-by,-join,-pivot"]], "filter": [[34, "filter"]], "union": [[34, "union"]], "sort": [[34, "sort"]], "group by": [[34, "group-by"]], "join (merge ou fusion)": [[34, "join-(merge-ou-fusion)"]], "pivot (tableau crois\u00e9 dynamique)": [[34, "pivot-(tableau-crois\u00e9-dynamique)"]], "Lambda fonctions": [[34, "Lambda-fonctions"]], "Exercice 2 : lambda fonction": [[34, "Exercice-2-:-lambda-fonction"]], "Exercice 3 : moyennes par groupes": [[34, "Exercice-3-:-moyennes-par-groupes"], [34, "id2"]], "Avec ou sans index": [[34, "Avec-ou-sans-index"]], "Dates": [[34, "Dates"], [161, "dates"]], "Plot(s)": [[34, "Plot(s)"]], "R\u00e9cup\u00e9ration des donn\u00e9es": [[34, "R\u00e9cup\u00e9ration-des-donn\u00e9es"]], "Exercice 4 : nuage de points": [[34, "Exercice-4-:-nuage-de-points"]], "Exercice 5 : graphe d\u2019une distribution avec pandas": [[34, "Exercice-5-:-graphe-d'une-distribution-avec-pandas"]], "matplotlib": [[34, "matplotlib"]], "Exercice 6 : distribution des mariages par jour": [[34, "Exercice-6-:-distribution-des-mariages-par-jour"], [34, "id3"]], "Annexes": [[34, "Annexes"]], "Cr\u00e9er un fichier Excel avec plusieurs feuilles": [[34, "Cr\u00e9er-un-fichier-Excel-avec-plusieurs-feuilles"]], "El\u00e9ments de r\u00e9ponses pour les exercices": [[34, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"], [33, "El\u00e9ments-de-r\u00e9ponses-pour-les-exercices"]], "Exercice 2 : lambda function": [[34, "Exercice-2-:-lambda-function"]], "Exercice 4 : \u00e9cart entre les mari\u00e9s": [[34, "Exercice-4-:-\u00e9cart-entre-les-mari\u00e9s"]], "Exercice 5 : graphe de la distribution avec pandas": [[34, "Exercice-5-:-graphe-de-la-distribution-avec-pandas"]], "Calcul matriciel avec numpy (version courte)": [[35, "Calcul-matriciel-avec-numpy-(version-courte)"]], "Enonc\u00e9": [[35, "Enonc\u00e9"], [36, "Enonc\u00e9"], [48, "Enonc\u00e9"], [50, "Enonc\u00e9"], [53, "Enonc\u00e9"], [55, "Enonc\u00e9"], [58, "Enonc\u00e9"], [59, "Enonc\u00e9"], [60, "Enonc\u00e9"], [104, "Enonc\u00e9"], [105, "Enonc\u00e9"], [106, "Enonc\u00e9"], [111, "Enonc\u00e9"], [52, "Enonc\u00e9"], [57, "Enonc\u00e9"]], "La ma\u00eetrise du slice": [[35, "La-ma\u00eetrise-du-slice"]], "La ma\u00eetrise du nan": [[35, "La-ma\u00eetrise-du-nan"], [36, "La-ma\u00eetrise-du-nan"]], "La ma\u00eetrise des types": [[35, "La-ma\u00eetrise-des-types"], [36, "La-ma\u00eetrise-des-types"]], "La ma\u00eetrise du broadcasting": [[35, "La-ma\u00eetrise-du-broadcasting"]], "La ma\u00eetrise des index": [[35, "La-ma\u00eetrise-des-index"], [36, "La-ma\u00eetrise-des-index"]], "La ma\u00eetrise des op\u00e9rations et des fonctions": [[35, "La-ma\u00eetrise-des-op\u00e9rations-et-des-fonctions"]], "Q1 : calculer la valeur du \\chi_2 d\u2019un tableau de contingence": [[35, "Q1-:-calculer-la-valeur-du-\\chi_2-d'un-tableau-de-contingence"], [35, "id1"]], "Q2 : calculer une distribution un peu particuli\u00e8re": [[35, "Q2-:-calculer-une-distribution-un-peu-particuli\u00e8re"], [35, "id2"]], "Q3 : on veut cr\u00e9er une matrice identit\u00e9 un million par un million": [[35, "Q3-:-on-veut-cr\u00e9er-une-matrice-identit\u00e9-un-million-par-un-million"], [35, "id3"]], "Q4 : vous devez cr\u00e9er l\u2019application StopCovid": [[35, "Q4-:-vous-devez-cr\u00e9er-l'application-StopCovid"], [35, "id4"]], "R\u00e9ponses": [[35, "R\u00e9ponses"], [36, "R\u00e9ponses"], [48, "R\u00e9ponses"], [50, "R\u00e9ponses"], [55, "R\u00e9ponses"], [58, "R\u00e9ponses"], [59, "R\u00e9ponses"], [104, "R\u00e9ponses"], [105, "R\u00e9ponses"], [106, "R\u00e9ponses"], [111, "R\u00e9ponses"], [52, "R\u00e9ponses"], [57, "R\u00e9ponses"]], "Manipulation de donn\u00e9es avec pandas (version courte)": [[36, "Manipulation-de-donn\u00e9es-avec-pandas-(version-courte)"]], "Cr\u00e9ation d\u2019un dataframe": [[36, "Cr\u00e9ation-d'un-dataframe"]], "La ma\u00eetrise des index des lignes": [[36, "La-ma\u00eetrise-des-index-des-lignes"]], "La ma\u00eetrise des index des colonnes": [[36, "La-ma\u00eetrise-des-index-des-colonnes"]], "Lien vers numpy": [[36, "Lien-vers-numpy"]], "Cr\u00e9ation de colonnes": [[36, "Cr\u00e9ation-de-colonnes"]], "Modifications de valeurs": [[36, "Modifications-de-valeurs"]], "Une erreur ou warning fr\u00e9quent": [[36, "Une-erreur-ou-warning-fr\u00e9quent"]], "La ma\u00eetrise des fonctions": [[36, "La-ma\u00eetrise-des-fonctions"]], "On r\u00e9cup\u00e8re les donn\u00e9es du COVID par r\u00e9gion et par \u00e2ge et premier graphe": [[36, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"], [55, "On-r\u00e9cup\u00e8re-les-donn\u00e9es-du-COVID-par-r\u00e9gion-et-par-\u00e2ge-et-premier-graphe"]], "Q1 : refaire le graphique pr\u00e9c\u00e9dent pour votre classe d\u2019\u00e2ge": [[36, "Q1-:-refaire-le-graphique-pr\u00e9c\u00e9dent-pour-votre-classe-d'\u00e2ge"], [36, "id1"]], "Q2 : faire de m\u00eame avec les s\u00e9ries diff\u00e9renci\u00e9es": [[36, "Q2-:-faire-de-m\u00eame-avec-les-s\u00e9ries-diff\u00e9renci\u00e9es"], [36, "id2"]], "Q3 : faire de m\u00eame avec des s\u00e9ries liss\u00e9es sur sur 7 jours": [[36, "Q3-:-faire-de-m\u00eame-avec-des-s\u00e9ries-liss\u00e9es-sur-sur-7-jours"], [36, "id3"]], "Q4 : fusion de tables par d\u00e9partements": [[36, "Q4-:-fusion-de-tables-par-d\u00e9partements"], [36, "id4"]], "Petit apart\u00e9": [[36, "Petit-apart\u00e9"]], "Q5 : une carte ?": [[36, "Q5-:-une-carte-?"]], "Quelques conseils pour \u00e9crire un programme": [[37, "quelques-conseils-pour-ecrire-un-programme"]], "Des petites fonctions": [[37, "des-petites-fonctions"], [39, "des-petites-fonctions"]], "Pas de variables globales": [[37, "pas-de-variables-globales"]], "S\u00e9parer les calculs, le chargement des donn\u00e9es, l\u2019interface graphique": [[37, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"], [39, "separer-les-calculs-le-chargement-des-donnees-l-interface-graphique"]], "Utiliser des fonctions de tests": [[37, "utiliser-des-fonctions-de-tests"]], "Trucs et astuces": [[37, "trucs-et-astuces"], [39, "trucs-et-astuces"]], "Pr\u00e9cis": [[38, "precis"]], "Cheat sheet: Python": [[39, "cheat-sheet-python"]], "Le langage": [[39, "le-langage"]], "Les variables": [[39, "les-variables"]], "Les types immuables": [[39, "les-types-immuables"]], "Les types modifiables": [[39, "les-types-modifiables"]], "Liste": [[39, "liste"], [158, "liste"], [165, "liste"]], "Dictionnaire": [[39, "dictionnaire"], [165, "dictionnaire"]], "Tableaux num\u00e9riques": [[39, "tableaux-numeriques"]], "Tests et boucles": [[39, "tests-et-boucles"]], "Tests": [[39, "tests"], [164, "tests"]], "for ou while": [[39, "for-ou-while"]], "Fonction enumerate": [[39, "fonction-enumerate"]], "Fonction zip": [[39, "fonction-zip"]], "Fonction map": [[39, "fonction-map"]], "Autres mot-cl\u00e9s": [[39, "autres-mot-cles"]], "Fonctions": [[39, "fonctions"], [134, "Fonctions"], [164, "fonctions"], [173, "fonctions"]], "D\u00e9finition, param\u00e8tres": [[39, "definition-parametres"]], "mot-cl\u00e9 lambda": [[39, "mot-cle-lambda"]], "mot-cl\u00e9 yield": [[39, "mot-cle-yield"]], "Classes": [[39, "classes"], [97, "Classes"], [150, "classes"], [151, "classes"], [93, null]], "D\u00e9claration d\u2019une classe": [[39, "declaration-d-une-classe"]], "Attributs et m\u00e9thodes": [[39, "attributs-et-methodes"]], "M\u00e9thodes statiques": [[39, "methodes-statiques"]], "Op\u00e9rateurs": [[39, "operateurs"], [98, "Op\u00e9rateurs"], [150, "operateurs"]], "Copie d\u2019instances": [[39, "copie-d-instances"], [150, "copie-d-instances"]], "H\u00e9ritage": [[39, "heritage"], [150, "heritage"]], "D\u00e9corateur": [[39, "decorateur"]], "Fichiers": [[39, "fichiers"], [140, "Fichiers"], [162, "fichiers"], [166, "fichiers"]], "Ecriture dans un fichier texte": [[39, "ecriture-dans-un-fichier-texte"]], "Lecture dans un fichier texte": [[39, "lecture-dans-un-fichier-texte"]], "Modules": [[39, "modules"], [140, "Modules"]], "Exceptions": [[39, "exceptions"], [153, "exceptions"], [155, "exceptions"]], "Erreurs, confusions fr\u00e9quentes": [[39, "erreurs-confusions-frequentes"]], "Variables": [[39, "variables"], [165, "variables"]], "Cha\u00eene de caract\u00e8res = tableau de caract\u00e8res": [[39, "chaine-de-caracteres-tableau-de-caracteres"]], "Guillemets ou pas": [[39, "guillemets-ou-pas"]], "Boucles": [[39, "boucles"], [164, "boucles"]], "range ou pas range": [[39, "range-ou-pas-range"]], "Initialisation": [[39, "initialisation"]], "Diff\u00e9rence entre print et return": [[39, "difference-entre-print-et-return"]], "Trois conseils pour \u00e9crire un programme": [[39, "trois-conseils-pour-ecrire-un-programme"]], "Utiliser des tests unitaires": [[39, "utiliser-des-tests-unitaires"]], "Partager du code": [[39, "partager-du-code"]], "Moteurs de recherche": [[39, "moteurs-de-recherche"]], "Syntaxes et d\u00e9finitions": [[40, "syntaxes-et-definitions"]], "D\u00e9finitions": [[40, "definitions"]], "D\u00e9finition D1 : classe": [[40, "index-mathdef-0-1"], [150, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : point d\u2019entr\u00e9e du programme": [[40, "index-mathdef-0-2"], [168, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : test": [[40, "index-mathdef-0-3"], [164, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D1 : variable": [[40, "index-mathdef-0-4"], [165, "indexmathe-D\u00e9finition0"]], "D\u00e9finition D10 : frozenset": [[40, "index-mathdef-0-5"], [165, "indexmathe-D\u00e9finition9"]], "D\u00e9finition D2 : constante": [[40, "index-mathdef-0-6"], [165, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : fonction": [[40, "index-mathdef-0-7"], [164, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D2 : instantiaion": [[40, "index-mathdef-0-8"], [150, "indexmathe-D\u00e9finition1"]], "D\u00e9finition D3 : fonction r\u00e9cursive": [[40, "index-mathdef-0-9"], [164, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : m\u00e9thode": [[40, "index-mathdef-0-10"], [150, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D3 : type immuable (ou immutable)": [[40, "index-mathdef-0-11"], [165, "indexmathe-D\u00e9finition2"]], "D\u00e9finition D4 : attribut": [[40, "index-mathdef-0-12"], [150, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : cha\u00eene de caract\u00e8res": [[40, "index-mathdef-0-13"], [165, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D4 : port\u00e9e d\u2019un variable": [[40, "index-mathdef-0-14"], [164, "indexmathe-D\u00e9finition3"]], "D\u00e9finition D5 : m\u00e9thode statique": [[40, "index-mathdef-0-15"], [150, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : tuple": [[40, "index-mathdef-0-16"], [165, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D5 : variable locale": [[40, "index-mathdef-0-17"], [164, "indexmathe-D\u00e9finition4"]], "D\u00e9finition D6 : attribut statique": [[40, "index-mathdef-0-18"], [150, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : type modifiable (ou mutable)": [[40, "index-mathdef-0-19"], [165, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D6 : variable globale": [[40, "index-mathdef-0-20"], [164, "indexmathe-D\u00e9finition5"]], "D\u00e9finition D7 : h\u00e9ritage": [[40, "index-mathdef-0-21"], [150, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D7 : liste": [[40, "index-mathdef-0-22"], [165, "indexmathe-D\u00e9finition6"]], "D\u00e9finition D8 : dictionnaire": [[40, "index-mathdef-0-23"], [165, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D8 : surcharge": [[40, "index-mathdef-0-24"], [150, "indexmathe-D\u00e9finition7"]], "D\u00e9finition D9 : set": [[40, "index-mathdef-0-25"], [165, "indexmathe-D\u00e9finition8"]], "Figures": [[40, "figures"]], "Probl\u00e8mes": [[40, "problemes"], [46, "problemes"], [46, null]], "Syntaxe": [[40, "syntaxe"], [150, "syntaxe"], [173, "syntaxe"]], "Syntaxe S1 : Attraper une exception": [[40, "index-mathdef-3-26"], [153, "indexmathe-Syntaxe0"]], "Syntaxe S1 : D\u00e9claration d\u2019une classe": [[40, "index-mathdef-3-27"], [150, "indexmathe-Syntaxe0"]], "Syntaxe S1 : Tests": [[40, "index-mathdef-3-28"], [164, "indexmathe-Syntaxe0"]], "Syntaxe S1 : importer un module (1)": [[40, "index-mathdef-3-29"], [168, "indexmathe-Syntaxe0"]], "Syntaxe S10 : D\u00e9claration d\u2019un attribut statique": [[40, "index-mathdef-3-30"], [150, "indexmathe-Syntaxe9"]], "Syntaxe S11 : D\u00e9claration d\u2019une propri\u00e9t\u00e9": [[40, "index-mathdef-3-31"], [150, "indexmathe-Syntaxe10"]], "Syntaxe S12 : D\u00e9claration d\u2019une propri\u00e9t\u00e9 (2)": [[40, "index-mathdef-3-32"], [150, "indexmathe-Syntaxe11"]], "Syntaxe S13 : D\u00e9claration de l\u2019op\u00e9rateur __copy__": [[40, "index-mathdef-3-33"], [150, "indexmathe-Syntaxe12"]], "Syntaxe S14 : D\u00e9claration d\u2019attributs fig\u00e9s": [[40, "index-mathdef-3-34"], [150, "indexmathe-Syntaxe13"]], "Syntaxe S15 : H\u00e9ritage": [[40, "index-mathdef-3-35"], [150, "indexmathe-Syntaxe14"]], "Syntaxe S16 : Surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[40, "index-mathdef-3-36"], [150, "indexmathe-Syntaxe15"]], "Syntaxe S2 : Instanciation d\u2019une classe": [[40, "index-mathdef-3-37"], [150, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Instruction pass": [[40, "index-mathdef-3-38"], [164, "indexmathe-Syntaxe1"]], "Syntaxe S2 : Lever une exception": [[40, "index-mathdef-3-39"], [153, "indexmathe-Syntaxe1"]], "Syntaxe S2 : importer un module (2)": [[40, "index-mathdef-3-40"], [168, "indexmathe-Syntaxe1"]], "Syntaxe S3 : Boucle while": [[40, "index-mathdef-3-41"], [164, "indexmathe-Syntaxe2"]], "Syntaxe S3 : D\u00e9claration d\u2019une m\u00e9thode": [[40, "index-mathdef-3-42"], [150, "indexmathe-Syntaxe2"]], "Syntaxe S3 : importer un module (3)": [[40, "index-mathdef-3-43"], [168, "indexmathe-Syntaxe2"]], "Syntaxe S4 : Appel d\u2019une m\u00e9thode": [[40, "index-mathdef-3-44"], [150, "indexmathe-Syntaxe3"]], "Syntaxe S4 : Boucle for": [[40, "index-mathdef-3-45"], [164, "indexmathe-Syntaxe3"]], "Syntaxe S5 : D\u00e9claration d\u2019un attribut": [[40, "index-mathdef-3-46"], [150, "indexmathe-Syntaxe4"]], "Syntaxe S5 : Liste en extension": [[40, "index-mathdef-3-47"], [164, "indexmathe-Syntaxe4"]], "Syntaxe S6 : D\u00e9claration d\u2019un constructeur": [[40, "index-mathdef-3-48"], [150, "indexmathe-Syntaxe5"]], "Syntaxe S6 : D\u00e9claration d\u2019une fonction": [[40, "index-mathdef-3-49"], [164, "indexmathe-Syntaxe5"]], "Syntaxe S7 : Appel d\u2019un constructeur": [[40, "index-mathdef-3-50"], [150, "indexmathe-Syntaxe6"]], "Syntaxe S7 : Appel d\u2019une fonction": [[40, "index-mathdef-3-51"], [164, "indexmathe-Syntaxe6"]], "Syntaxe S8 : D\u00e9claration de l\u2019op\u00e9rateur __str__": [[40, "index-mathdef-3-52"], [150, "indexmathe-Syntaxe7"]], "Syntaxe S8 : Valeurs par d\u00e9faut": [[40, "index-mathdef-3-53"], [164, "indexmathe-Syntaxe7"]], "Syntaxe S9 : D\u00e9claration d\u2019une m\u00e9thode statique": [[40, "index-mathdef-3-54"], [150, "indexmathe-Syntaxe8"]], "Syntaxe S9 : Nombre ind\u00e9fini de param\u00e8tres": [[40, "index-mathdef-3-55"], [164, "indexmathe-Syntaxe8"]], "Tables": [[40, "tables"]], "Langage Python": [[41, "langage-python"]], "numpy": [[41, "numpy"]], "Introduction": [[44, "introduction"], [47, "Introduction"], [158, "introduction"]], "Installation de Python": [[44, "installation-de-python"]], "Installation d\u2019extensions ou modules ou packages": [[44, "installation-d-extensions-ou-modules-ou-packages"]], "Accents": [[44, "accents"]], "Trois concepts, s\u00e9quence, test, boucle": [[44, "trois-concepts-sequence-test-boucle"]], "Algorithmes": [[44, "algorithmes"], [46, "algorithmes"], [46, null], [46, null], [91, "algorithmes"]], "Fichier ou notebook": [[44, "fichier-ou-notebook"]], "Algorithmes de streaming, BJKST": [[47, "Algorithmes-de-streaming,-BJKST"]], "Estimer le nombre d\u2019\u00e9l\u00e9ments distincts: l\u2019algorithme BJKST": [[47, "Estimer-le-nombre-d'\u00e9l\u00e9ments-distincts:-l'algorithme-BJKST"]], "Universal hashing": [[47, "Universal-hashing"]], "Collisions": [[47, "Collisions"]], "Algorithme BJKST": [[47, "Algorithme-BJKST"]], "R\u00e9sultats num\u00e9riques": [[47, "R\u00e9sultats-num\u00e9riques"]], "Temps de calcul en fonction de la taille du stream": [[47, "Temps-de-calcul-en-fonction-de-la-taille-du-stream"]], "Un peu plus sur la pr\u00e9cision de l\u2019estimateur": [[47, "Un-peu-plus-sur-la-pr\u00e9cision-de-l'estimateur"]], "h_1 et h_2 \u00e9gales \u00e0 l\u2019identit\u00e9": [[47, "h_1-et-h_2-\u00e9gales-\u00e0-l'identit\u00e9"]], "cas o\u00f9 la taille du hash est petite": [[47, "cas-o\u00f9-la-taille-du-hash-est-petite"]], "cas o\u00f9 la taille de hash est plus grande": [[47, "cas-o\u00f9-la-taille-de-hash-est-plus-grande"]], "la taille de hash d\u00e9pend de la pr\u00e9cision \\epsilon": [[47, "la-taille-de-hash-d\u00e9pend-de-la-pr\u00e9cision-\\epsilon"]], "Graphe et Composantes connexes": [[48, "Graphe-et-Composantes-connexes"]], "Q1 : construire une matrice d\u2019adjacence sym\u00e9trique al\u00e9atoire": [[48, "Q1-:-construire-une-matrice-d'adjacence-sym\u00e9trique-al\u00e9atoire"], [48, "id1"]], "Q2 : calculer les valeurs propres et les trier par ordre croissant": [[48, "Q2-:-calculer-les-valeurs-propres-et-les-trier-par-ordre-croissant"], [48, "id2"]], "Q3 : que fait l\u2019algorithme suivant": [[48, "Q3-:-que-fait-l'algorithme-suivant"], [48, "id3"]], "Q4 : construire un algorithme qui retourne les composantes connexes d\u2019un graphe": [[48, "Q4-:-construire-un-algorithme-qui-retourne-les-composantes-connexes-d'un-graphe"], [48, "id4"]], "Calculer le nombre de fa\u00e7ons de monter une \u00e9chelle.": [[49, "Calculer-le-nombre-de-fa\u00e7ons-de-monter-une-\u00e9chelle."]], "Enonc\u00e9s": [[49, "Enonc\u00e9s"], [63, "Enonc\u00e9s"], [66, "enonces"], [91, null], [93, null]], "Enonc\u00e9 1": [[49, "Enonc\u00e9-1"], [67, "Enonc\u00e9-1"], [68, "Enonc\u00e9-1"], [69, "Enonc\u00e9-1"], [70, "Enonc\u00e9-1"], [71, "Enonc\u00e9-1"], [72, "Enonc\u00e9-1"]], "Enonc\u00e9 2": [[49, "Enonc\u00e9-2"], [67, "Enonc\u00e9-2"], [68, "Enonc\u00e9-2"], [69, "Enonc\u00e9-2"], [71, "Enonc\u00e9-2"], [72, "Enonc\u00e9-2"]], "Enonc\u00e9 3": [[49, "Enonc\u00e9-3"], [69, "Enonc\u00e9-3"]], "Solutions": [[49, "Solutions"], [63, "Solutions"]], "Solution au probl\u00e8me 1": [[49, "Solution-au-probl\u00e8me-1"], [63, "Solution-au-probl\u00e8me-1"]], "Solution au probl\u00e8me 2": [[49, "Solution-au-probl\u00e8me-2"]], "Solution au probl\u00e8me 3": [[49, "Solution-au-probl\u00e8me-3"]], "Distance d\u2019\u00e9dition": [[50, "Distance-d'\u00e9dition"], [51, "Distance-d'\u00e9dition"]], "Q1 : Distance simple entre deux mots de m\u00eame longueur": [[50, "Q1-:-Distance-simple-entre-deux-mots-de-m\u00eame-longueur"], [50, "id1"]], "Q2 : Distance simple entre deux mots de longueur diff\u00e9rente": [[50, "Q2-:-Distance-simple-entre-deux-mots-de-longueur-diff\u00e9rente"], [50, "id2"]], "Q3 : Distance alambiqu\u00e9e\u2026": [[50, "Q3-:-Distance-alambiqu\u00e9e..."], [50, "id3"]], "Q4 : impl\u00e9menter l\u2019algorithme de la page wikipedia": [[50, "Q4-:-impl\u00e9menter-l'algorithme-de-la-page-wikipedia"], [50, "id4"]], "Distance entre deux mots de m\u00eame longueur et tests unitaires": [[51, "Distance-entre-deux-mots-de-m\u00eame-longueur-et-tests-unitaires"]], "Distance na\u00efve": [[51, "Distance-na\u00efve"]], "Distance tr\u00e8s na\u00efve": [[51, "Distance-tr\u00e8s-na\u00efve"]], "Distance entre deux mots de longueur diff\u00e9rente mais pas si diff\u00e9rente": [[51, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente-mais-pas-si-diff\u00e9rente"]], "Distance entre deux mots de longueur diff\u00e9rente": [[51, "Distance-entre-deux-mots-de-longueur-diff\u00e9rente"]], "Test unitaires": [[51, "Test-unitaires"]], "m et n sont tr\u00e8s proches, et alors ?": [[51, "m-et-n-sont-tr\u00e8s-proches,-et-alors-?"]], "ff, f, ph, f\u2026 plus personne ne sait \u00e9crire": [[51, "ff,-f,-ph,-f...-plus-personne-ne-sait-\u00e9crire"]], "La sous-s\u00e9quence de plus grande somme": [[53, "La-sous-s\u00e9quence-de-plus-grande-somme"]], "Solution na\u00efve": [[53, "Solution-na\u00efve"], [126, "Solution-na\u00efve"]], "Solution plus rapide": [[53, "Solution-plus-rapide"]], "Solution dichotomique": [[53, "Solution-dichotomique"]], "Solution lin\u00e9aire": [[53, "Solution-lin\u00e9aire"]], "Comparaison des temps de calcul": [[53, "Comparaison-des-temps-de-calcul"]], "Application": [[53, "Application"]], "Graphes al\u00e9atoires": [[54, "Graphes-al\u00e9atoires"]], "Graphe al\u00e9atoire - matrice d\u2019adjacence al\u00e9atoire": [[54, "Graphe-al\u00e9atoire---matrice-d'adjacence-al\u00e9atoire"]], "Vocabulaire li\u00e9 aux graphes": [[54, "Vocabulaire-li\u00e9-aux-graphes"]], "Apart\u00e9 : matrice d\u2019adjacence \u00e0 la puissance n": [[54, "Apart\u00e9-:-matrice-d'adjacence-\u00e0-la-puissance-n"]], "Trouver le nombre de composantes connexes": [[54, "Trouver-le-nombre-de-composantes-connexes"]], "G\u00e9n\u00e9ration d\u2019un graphe al\u00e9atoire": [[54, "G\u00e9n\u00e9ration-d'un-graphe-al\u00e9atoire"]], "Version 1": [[54, "Version-1"]], "Version 2": [[54, "Version-2"]], "Simulation COVID": [[55, "Simulation-COVID"]], "Mod\u00e8le SIRD": [[55, "Mod\u00e8le-SIRD"]], "Q0 : une petite fonction pour dessiner": [[55, "Q0-:-une-petite-fonction-pour-dessiner"]], "Q1 : \u00e9crire une fonction qui calcule la propagation": [[55, "Q1-:-\u00e9crire-une-fonction-qui-calcule-la-propagation"]], "Q2 : on veut estimer les param\u00e8tres du mod\u00e8le, une fonction d\u2019erreur ?": [[55, "Q2-:-on-veut-estimer-les-param\u00e8tres-du-mod\u00e8le,-une-fonction-d'erreur-?"]], "Q3 : optimisation": [[55, "Q3-:-optimisation"]], "Q4 : dessiner les r\u00e9sultats": [[55, "Q4-:-dessiner-les-r\u00e9sultats"]], "Q5 : v\u00e9rifier que cela marche sur des donn\u00e9es synth\u00e9tiques": [[55, "Q5-:-v\u00e9rifier-que-cela-marche-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Q6 : sur des donn\u00e9es r\u00e9elles": [[55, "Q6-:-sur-des-donn\u00e9es-r\u00e9elles"], [55, "id1"]], "Q1 : propagation": [[55, "Q1-:-propagation"]], "Q2 : s\u00e9rie cumul\u00e9es et fonction erreur": [[55, "Q2-:-s\u00e9rie-cumul\u00e9es-et-fonction-erreur"]], "Q3, Q4, Q5 : optimisation sur des donn\u00e9es synth\u00e9tiques": [[55, "Q3,-Q4,-Q5-:-optimisation-sur-des-donn\u00e9es-synth\u00e9tiques"]], "Mod\u00e8le \u00e9pid\u00e9miologique (SIRD)": [[56, "Mod\u00e8le-\u00e9pid\u00e9miologique-(SIRD)"]], "Simulation": [[56, "Simulation"], [91, null]], "Visualisation": [[56, "Visualisation"], [62, "Visualisation"]], "Estimation des param\u00e8tres": [[56, "Estimation-des-param\u00e8tres"]], "Premi\u00e8re id\u00e9e": [[56, "Premi\u00e8re-id\u00e9e"], [129, "Premi\u00e8re-id\u00e9e"]], "Seconde id\u00e9e : probl\u00e8mes d\u2019optimisation": [[56, "Seconde-id\u00e9e-:-probl\u00e8mes-d'optimisation"]], "Les k premiers \u00e9l\u00e9ments (top k)": [[58, "Les-k-premiers-\u00e9l\u00e9ments-(top-k)"]], "Exercice 1 : on trie tout et on prend les k plus petit": [[58, "Exercice-1-:-on-trie-tout-et-on-prend-les-k-plus-petit"], [58, "id1"]], "Exercice 2 : version plus rapide au choix": [[58, "Exercice-2-:-version-plus-rapide-au-choix"], [58, "id2"]], "Exercice 3 : algorithme de s\u00e9lection": [[58, "Exercice-3-:-algorithme-de-s\u00e9lection"], [58, "id3"]], "Exercice 4 : utiliser la fonction perf_counter pour comparer les vitessses de chaque solution": [[58, "Exercice-4-:-utiliser-la-fonction-perf_counter-pour-comparer-les-vitessses-de-chaque-solution"], [58, "id4"]], "TSP - Traveling Salesman Problem": [[59, "TSP---Traveling-Salesman-Problem"]], "Q1 : choisir une permutation al\u00e9atoire des villes et calculer la distance du chemin qui les relie dans cet ordre": [[59, "Q1-:-choisir-une-permutation-al\u00e9atoire-des-villes-et-calculer-la-distance-du-chemin-qui-les-relie-dans-cet-ordre"]], "Q2 : tirer deux villes al\u00e9atoirement, les inverser, garder la permutation si elle am\u00e9liore la distance": [[59, "Q2-:-tirer-deux-villes-al\u00e9atoirement,-les-inverser,-garder-la-permutation-si-elle-am\u00e9liore-la-distance"]], "Q3 : choisir deux villes al\u00e9atoirement, permuter une des deux moiti\u00e9s\u2026": [[59, "Q3-:-choisir-deux-villes-al\u00e9atoirement,-permuter-une-des-deux-moiti\u00e9s..."]], "Q4 : tester toutes les permutations possibles\u2026 je plaisante\u2026": [[59, "Q4-:-tester-toutes-les-permutations-possibles...-je-plaisante..."]], "Calculer x**n le plus rapidement possible": [[60, "Calculer-x**n-le-plus-rapidement-possible"]], "Solution": [[60, "Solution"]], "Produit matriciel avec une matrice creuse": [[61, "Produit-matriciel-avec-une-matrice-creuse"]], "Matrice creuse et dictionnaire": [[61, "Matrice-creuse-et-dictionnaire"]], "Calcul de la dimension": [[61, "Calcul-de-la-dimension"]], "Produit matriciel classique": [[61, "Produit-matriciel-classique"]], "Produit matriciel plus \u00e9l\u00e9gant": [[61, "Produit-matriciel-plus-\u00e9l\u00e9gant"]], "Mesure du temps": [[61, "Mesure-du-temps"], [137, "Mesure-du-temps"]], "Dictionnaires de dictionnaires": [[61, "Dictionnaires-de-dictionnaires"]], "Apart\u00e9 sur le voyageur de commerce": [[62, "Apart\u00e9-sur-le-voyageur-de-commerce"]], "Tirer des points al\u00e9atoirement et les afficher": [[62, "Tirer-des-points-al\u00e9atoirement-et-les-afficher"]], "Distance d\u2019un chemin": [[62, "Distance-d'un-chemin"]], "Parcourir toutes les permutations": [[62, "Parcourir-toutes-les-permutations"]], "Module tqdm": [[62, "Module-tqdm"]], "Retournement": [[62, "Retournement"]], "D\u00e9coder du Morse sans espaces": [[63, "D\u00e9coder-du-Morse-sans-espaces"]], "Exercice 1 : Traduire un texte Morse qui ne contient pas d\u2019espace": [[63, "Exercice-1-:-Traduire-un-texte-Morse-qui-ne-contient-pas-d'espace"]], "Exercice 2 : calculer l\u2019alphabet qui minimise une transcription": [[63, "Exercice-2-:-calculer-l'alphabet-qui-minimise-une-transcription"]], "Solution au probl\u00e8me 2 avec des expressions r\u00e9guli\u00e8res": [[63, "Solution-au-probl\u00e8me-2-avec-des-expressions-r\u00e9guli\u00e8res"]], "Solution au probl\u00e8me 2 : toutes les interpr\u00e9tations": [[63, "Solution-au-probl\u00e8me-2-:-toutes-les-interpr\u00e9tations"]], "Parcourir les rues de Paris": [[64, "Parcourir-les-rues-de-Paris"]], "Les donn\u00e9es": [[64, "Les-donn\u00e9es"], [124, "Les-donn\u00e9es"]], "Une premi\u00e8re solution au premier probl\u00e8me": [[64, "Une-premi\u00e8re-solution-au-premier-probl\u00e8me"]], "Etape 1 : la matrice Bellman": [[64, "Etape-1-:-la-matrice-Bellman"]], "Kruskall": [[64, "Kruskall"]], "Chemin Eul\u00e9rien": [[64, "Chemin-Eul\u00e9rien"]], "Algorithme optimal": [[64, "Algorithme-optimal"]], "Variantes": [[64, "Variantes"]], "Sens interdit et gaphe orient\u00e9": [[64, "Sens-interdit-et-gaphe-orient\u00e9"]], "Windy postman problem": [[64, "Windy-postman-problem"]], "Casser le code de Vigen\u00e8re": [[65, "Casser-le-code-de-Vigen\u00e8re"]], "Exercices minut\u00e9s": [[66, "exercices-minutes"]], "S\u00e9ances not\u00e9es": [[66, "seances-notees"]], "Corrections": [[66, "corrections"]], "Exercices courts": [[66, "exercices-courts"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2014": [[67, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 10 octobre 2014": [[68, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-10-octobre-2014"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 14 novembre 2014": [[69, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"], [70, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-14-novembre-2014"]], "Q5": [[69, "Q5"], [69, "id5"], [69, "id10"], [70, "Q5"], [74, "Q5"], [77, "Q5"], [78, "Q5"], [78, "id2"], [79, "Q5"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 26 septembre 2015": [[71, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-26-septembre-2015"]], "1A.e - Correction de l\u2019interrogation \u00e9crite du 6 novembre 2015": [[72, "1A.e---Correction-de-l'interrogation-\u00e9crite-du-6-novembre-2015"]], "1A.e - TD not\u00e9, 27 novembre 2012 (\u00e9l\u00e9ments de code pour le coloriage)": [[73, "1A.e---TD-not\u00e9,-27-novembre-2012-(\u00e9l\u00e9ments-de-code-pour-le-coloriage)"]], "construction de la spirale": [[73, "construction-de-la-spirale"], [74, "construction-de-la-spirale"]], "dessin de la spirale": [[73, "dessin-de-la-spirale"], [74, "dessin-de-la-spirale"]], "ajouter du rouge": [[73, "ajouter-du-rouge"]], "1A.e - TD not\u00e9, 27 novembre 2012 (coloriage, correction)": [[74, "1A.e---TD-not\u00e9,-27-novembre-2012-(coloriage,-correction)"]], "version 1": [[74, "version-1"], [74, "id1"]], "version 4": [[74, "version-4"], [74, "id2"]], "Q4 : spirale": [[74, "Q4-:-spirale"]], "1A.e - TD not\u00e9, 5 d\u00e9cembre 2014": [[75, "1A.e---TD-not\u00e9,-5-d\u00e9cembre-2014"]], "Exercice 1": [[75, "Exercice-1"], [78, "Exercice-1"], [79, "Exercice-1"], [134, "Exercice-1"], [135, "Exercice-1"], [124, "Exercice-1"], [125, "Exercice-1"]], "Exercice 2": [[75, "Exercice-2"], [78, "Exercice-2"], [86, "Exercice-2"], [135, "Exercice-2"], [124, "Exercice-2"], [125, "Exercice-2"]], "Exercice 3": [[75, "Exercice-3"], [124, "Exercice-3"], [125, "Exercice-3"]], "Exercice 4": [[75, "Exercice-4"], [124, "Exercice-4"], [125, "Exercice-4"]], "1A.e - TD not\u00e9 2015 rattrapage (\u00e9nonc\u00e9, \u00e9crit et oral)": [[76, "1A.e---TD-not\u00e9-2015-rattrapage-(\u00e9nonc\u00e9,-\u00e9crit-et-oral)"]], "Question 1": [[76, "Question-1"]], "Question 2": [[76, "Question-2"]], "Question 3": [[76, "Question-3"]], "Question 4": [[76, "Question-4"]], "1A.e - TD not\u00e9, 11 d\u00e9cembre 2015": [[77, "1A.e---TD-not\u00e9,-11-d\u00e9cembre-2015"]], "Exercice 1 : Louer ou acheter un appartement ?": [[77, "Exercice-1-:-Louer-ou-acheter-un-appartement-?"]], "Q6": [[77, "Q6"], [78, "Q6"], [78, "id3"], [79, "Q6"]], "Q7 exo 1": [[77, "Q7-exo-1"]], "Q7 exo 2": [[77, "Q7-exo-2"]], "Q8": [[77, "Q8"], [78, "Q8"], [78, "id5"], [79, "Q8"]], "Q9 version dichotomique de Q4": [[77, "Q9-version-dichotomique-de-Q4"]], "Exercice 2 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[77, "Exercice-2-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "Exercice 3 : coder les num\u00e9ros de t\u00e9l\u00e9phone": [[77, "Exercice-3-:-coder-les-num\u00e9ros-de-t\u00e9l\u00e9phone"]], "1A.e - TD not\u00e9, 16 d\u00e9cembre 2016": [[78, "1A.e---TD-not\u00e9,-16-d\u00e9cembre-2016"]], "Q7": [[78, "Q7"], [78, "id4"], [79, "Q7"], [103, "Q7"]], "Q9": [[78, "Q9"], [78, "id6"], [79, "Q9"]], "Q10": [[78, "Q10"], [78, "id7"], [79, "Q10"], [83, "Q10"]], "Q1 - Q2 - Q3": [[78, "Q1---Q2---Q3"]], "1A.e - TD not\u00e9, 21 f\u00e9vrier 2017": [[79, "1A.e---TD-not\u00e9,-21-f\u00e9vrier-2017"]], "Quelques explications et d\u00e9monstrations": [[79, "Quelques-explications-et-d\u00e9monstrations"]], "Quelques commentaires sur le code": [[79, "Quelques-commentaires-sur-le-code"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (1)": [[80, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(1)"]], "Q1 - \u00e9chantillon al\u00e9atoire": [[80, "Q1---\u00e9chantillon-al\u00e9atoire"], [81, "Q1---\u00e9chantillon-al\u00e9atoire"], [82, "Q1---\u00e9chantillon-al\u00e9atoire"], [83, "Q1---\u00e9chantillon-al\u00e9atoire"]], "Q1 - dessiner le nuage de points - donn\u00e9e": [[80, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"], [81, "Q1---dessiner-le-nuage-de-points---donn\u00e9e"]], "Q2 - tri": [[80, "Q2---tri"], [81, "Q2---tri"]], "Q3 - moyenne": [[80, "Q3---moyenne"], [81, "Q3---moyenne"], [82, "Q3---moyenne"], [83, "Q3---moyenne"]], "Q4 - distance": [[80, "Q4---distance"], [81, "Q4---distance"]], "Q5 - fonction comme param\u00e8tre": [[80, "Q5---fonction-comme-param\u00e8tre"], [81, "Q5---fonction-comme-param\u00e8tre"]], "Q6 - optimiser": [[80, "Q6---optimiser"], [81, "Q6---optimiser"]], "Q7 - optimisation encore": [[80, "Q7---optimisation-encore"], [81, "Q7---optimisation-encore"]], "Q8 - fonction r\u00e9cursive": [[80, "Q8---fonction-r\u00e9cursive"], [81, "Q8---fonction-r\u00e9cursive"]], "Q9 - co\u00fbt": [[80, "Q9---co\u00fbt"]], "Q10 - autre nuage de points": [[80, "Q10---autre-nuage-de-points"]], "1A.e - Enonc\u00e9 12 d\u00e9cembre 2017 (2)": [[81, "1A.e---Enonc\u00e9-12-d\u00e9cembre-2017-(2)"]], "Q9 - seuil": [[81, "Q9---seuil"]], "Q10 - co\u00fbt": [[81, "Q10---co\u00fbt"]], "1A.e - Enonc\u00e9 23 octobre 2018 (1)": [[82, "1A.e---Enonc\u00e9-23-octobre-2018-(1)"]], "Q2 - matrice m1": [[82, "Q2---matrice-m1"], [83, "Q2---matrice-m1"]], "Q4 - matrice m2": [[82, "Q4---matrice-m2"], [83, "Q4---matrice-m2"]], "Q5 - matrice m3": [[82, "Q5---matrice-m3"]], "Q6 - norme": [[82, "Q6---norme"]], "Q7 - r\u00e9p\u00e9tition": [[82, "Q7---r\u00e9p\u00e9tition"]], "Q8 - plus de valeurs manquantes": [[82, "Q8---plus-de-valeurs-manquantes"]], "Q9 - 1 valeur manquante ?": [[82, "Q9---1-valeur-manquante-?"]], "Q10 - plus de deux colonnes ?": [[82, "Q10---plus-de-deux-colonnes-?"]], "1A.e - Enonc\u00e9 23 octobre 2018 (2)": [[83, "1A.e---Enonc\u00e9-23-octobre-2018-(2)"]], "Q5 - x le plus proche": [[83, "Q5---x-le-plus-proche"]], "Q6 - matrice m3": [[83, "Q6---matrice-m3"]], "Q7 - norme": [[83, "Q7---norme"]], "Q8 - r\u00e9p\u00e9tition": [[83, "Q8---r\u00e9p\u00e9tition"]], "Q9 - plus de valeurs manquantes": [[83, "Q9---plus-de-valeurs-manquantes"]], "1A.e - Enonc\u00e9 22 octobre 2019 (1)": [[84, "1A.e---Enonc\u00e9-22-octobre-2019-(1)"]], "Q1 - distance_table": [[84, "Q1---distance_table"], [85, "Q1---distance_table"]], "Q2 - distance_bord": [[84, "Q2---distance_bord"], [85, "Q2---distance_bord"]], "Q3 - table_alea": [[84, "Q3---table_alea"], [85, "Q3---table_alea"]], "Q4 - n_table_alea": [[84, "Q4---n_table_alea"], [85, "Q4---n_table_alea"]], "Q5 - table_proches": [[84, "Q5---table_proches"], [85, "Q5---table_proches"]], "Q6 - distance_n_tables_alea": [[84, "Q6---distance_n_tables_alea"], [85, "Q6---distance_n_tables_alea"]], "Q7 - meilleur_table_alea": [[84, "Q7---meilleur_table_alea"], [85, "Q7---meilleur_table_alea"]], "Q8 - r\u00e9sultat num\u00e9rique": [[84, "Q8---r\u00e9sultat-num\u00e9rique"], [85, "Q8---r\u00e9sultat-num\u00e9rique"]], "Q9 - plot_tables": [[84, "Q9---plot_tables"], [85, "Q9---plot_tables"]], "Q10 \u2026": [[84, "Q10-..."], [85, "Q10-..."]], "Q10 - Vorono\u00ef": [[84, "Q10---Vorono\u00ef"], [85, "Q10---Vorono\u00ef"]], "Q10 - KMeans": [[84, "Q10---KMeans"], [85, "Q10---KMeans"]], "1A.e - Enonc\u00e9 22 octobre 2019 (2)": [[85, "1A.e---Enonc\u00e9-22-octobre-2019-(2)"]], "1A - Enonc\u00e9 24 novembre 2020": [[86, "1A---Enonc\u00e9-24-novembre-2020"]], "Exercice 1 : gu\u00e9rison": [[86, "Exercice-1-:-gu\u00e9rison"]], "Q2 : dur\u00e9e de gu\u00e9rison": [[86, "Q2-:-dur\u00e9e-de-gu\u00e9rison"]], "Q3 : estimateur Kaplan-Meier (1)": [[86, "Q3-:-estimateur-Kaplan-Meier-(1)"]], "Q4 : courbe de Kaplan-Meier": [[86, "Q4-:-courbe-de-Kaplan-Meier"]], "Q5 : graphe": [[86, "Q5-:-graphe"]], "Q6 : application aux donn\u00e9es publiques": [[86, "Q6-:-application-aux-donn\u00e9es-publiques"]], "Q1 : t + 1": [[86, "Q1-:-t-+-1"]], "Q2 : apr\u00e8s T it\u00e9ration": [[86, "Q2-:-apr\u00e8s-T-it\u00e9ration"]], "Q3 : vaccin": [[86, "Q3-:-vaccin"]], "Q4 : apr\u00e8s T heures": [[86, "Q4-:-apr\u00e8s-T-heures"]], "Q5 : variation": [[86, "Q5-:-variation"]], "1A - Enonc\u00e9 3 novembre 2021": [[87, "1A---Enonc\u00e9-3-novembre-2021"]], "Exercice 1 : multiplication de matrices": [[87, "Exercice-1-:-multiplication-de-matrices"]], "Q1 : Pourquoi (m1 @ m2) @ m3 est-il plus lent que m1 @ (m2 @ m3) ? (2 points)": [[87, "Q1-:-Pourquoi-(m1-@-m2)-@-m3-est-il-plus-lent-que-m1-@-(m2-@-m3)-?-(2-points)"]], "Q2 : Ecrire une fonction qui calcule le nombre d\u2019operations dans une multiplication de deux matrices (2 points)": [[87, "Q2-:-Ecrire-une-fonction-qui-calcule-le-nombre-d'operations-dans-une-multiplication-de-deux-matrices-(2-points)"]], "Q3 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de deux matrices et la meilleure option (2 points)": [[87, "Q3-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-deux-matrices-et-la-meilleure-option-(2-points)"]], "Q4 : Ecrire une fonction qui effectue le produit de trois matrices le plus rapidement possible (2 points)": [[87, "Q4-:-Ecrire-une-fonction-qui-effectue-le-produit-de-trois-matrices-le-plus-rapidement-possible-(2-points)"]], "Q5 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps (2 points)": [[87, "Q5-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-(2-points)"]], "Q6 : Ecrire une fonction qui retourne le meilleur co\u00fbt d\u2019une multiplication de 4 matrices et la meilleure option (3 points)": [[87, "Q6-:-Ecrire-une-fonction-qui-retourne-le-meilleur-co\u00fbt-d'une-multiplication-de-4-matrices-et-la-meilleure-option-(3-points)"]], "Q7 : Ecrire une fonction qui effectue le produit de 4 matrices le plus rapidement possible (3 points)": [[87, "Q7-:-Ecrire-une-fonction-qui-effectue-le-produit-de-4-matrices-le-plus-rapidement-possible-(3-points)"]], "Q8 : V\u00e9rifiez que vous retrouvez les m\u00eames r\u00e9sultats avec la fonction mesure_temps et la matrice m4. (2 points)": [[87, "Q8-:-V\u00e9rifiez-que-vous-retrouvez-les-m\u00eames-r\u00e9sultats-avec-la-fonction-mesure_temps-et-la-matrice-m4.-(2-points)"]], "Q9 : On se penche sur le cas \u00e0 une multiplication de N matrices, combien y a-t-il de multiplications de 2 matrices ? (2 points)": [[87, "Q9-:-On-se-penche-sur-le-cas-\u00e0-une-multiplication-de-N-matrices,-combien-y-a-t-il-de-multiplications-de-2-matrices-?-(2-points)"]], "Q10 : R\u00e9soudre l\u2019optimisation de multiplication de N matrices.": [[87, "Q10-:-R\u00e9soudre-l'optimisation-de-multiplication-de-N-matrices."]], "Remarques lors de la correction": [[87, "Remarques-lors-de-la-correction"]], "1A - Enonc\u00e9 15 novembre 2021 - rattrapage": [[88, "1A---Enonc\u00e9-15-novembre-2021---rattrapage"]], "Exercice 1 : optimisation de volume": [[88, "Exercice-1-:-optimisation-de-volume"]], "Q1 : \u00e9crire une fonction qui calcule l\u2019aire d\u2019une surface": [[88, "Q1-:-\u00e9crire-une-fonction-qui-calcule-l'aire-d'une-surface"]], "Q2 : \u00e9crire une fonction qui calcule le volume d\u2019une brique": [[88, "Q2-:-\u00e9crire-une-fonction-qui-calcule-le-volume-d'une-brique"]], "Q3 : \u00e9crire une fonction qui retourne la somme des surfaces des faces d\u2019une brique": [[88, "Q3-:-\u00e9crire-une-fonction-qui-retourne-la-somme-des-surfaces-des-faces-d'une-brique"]], "Q4 : la brique optimale": [[88, "Q4-:-la-brique-optimale"]], "Q5 : on inclut la surface n\u00e9cessaire pour coller les extremit\u00e9s": [[88, "Q5-:-on-inclut-la-surface-n\u00e9cessaire-pour-coller-les-extremit\u00e9s"]], "Q6 : une bouteille de deux litres deux fois plus large": [[88, "Q6-:-une-bouteille-de-deux-litres-deux-fois-plus-large"]], "Q7 : petite brique en bleue, grosse brique en rouge": [[88, "Q7-:-petite-brique-en-bleue,-grosse-brique-en-rouge"]], "1A - Enonc\u00e9 3 mars 2022- rattrapage": [[89, "1A---Enonc\u00e9-3-mars-2022--rattrapage"]], "Dessin d\u2019une liste de segments": [[89, "Dessin-d'une-liste-de-segments"]], "Distance d\u2019un segment": [[89, "Distance-d'un-segment"]], "Calcul du segment suivant": [[89, "Calcul-du-segment-suivant"]], "Calcul des trois segments suivants": [[89, "Calcul-des-trois-segments-suivants"]], "Construction de tous les niveaux de l\u2019arbre": [[89, "Construction-de-tous-les-niveaux-de-l'arbre"]], "Construction de trois segments al\u00e9atoires": [[89, "Construction-de-trois-segments-al\u00e9atoires"]], "Construction d\u2019un arbre al\u00e9atoire": [[89, "Construction-d'un-arbre-al\u00e9atoire"]], "1A - Enonc\u00e9 26 octobre 2022": [[90, "1A---Enonc\u00e9-26-octobre-2022"]], "Exercice 1 : calcul de distances": [[90, "Exercice-1-:-calcul-de-distances"]], "Q1 : tirer deux matrices al\u00e9atoires pour X et Y, de tailles diff\u00e9rentes": [[90, "Q1-:-tirer-deux-matrices-al\u00e9atoires-pour-X-et-Y,-de-tailles-diff\u00e9rentes"]], "Q2 : calculer tous les distances entre X et Y": [[90, "Q2-:-calculer-tous-les-distances-entre-X-et-Y"]], "Q3 : \u00e9crire un test unitaire qui v\u00e9rifie le r\u00e9sultat lorsque X est la matrice identit\u00e9 2x2": [[90, "Q3-:-\u00e9crire-un-test-unitaire-qui-v\u00e9rifie-le-r\u00e9sultat-lorsque-X-est-la-matrice-identit\u00e9-2x2"]], "Q4 : quel est le co\u00fbt de l\u2019algorithme en fonction des dimensions de X et Y ?": [[90, "Q4-:-quel-est-le-co\u00fbt-de-l'algorithme-en-fonction-des-dimensions-de-X-et-Y-?"]], "Q5 : Ecrire une fonction qui retourne l\u2019indice du m\u00e9decin le plus proche pour chaque rue": [[90, "Q5-:-Ecrire-une-fonction-qui-retourne-l'indice-du-m\u00e9decin-le-plus-proche-pour-chaque-rue"]], "Q6 : on cr\u00e9e une grille 10x10 pour quadriller l\u2019espace. Ecrire une fonction qui calcule les coordonn\u00e9es de la grille pour un point donn\u00e9.": [[90, "Q6-:-on-cr\u00e9e-une-grille-10x10-pour-quadriller-l'espace.-Ecrire-une-fonction-qui-calcule-les-coordonn\u00e9es-de-la-grille-pour-un-point-donn\u00e9."]], "Q7 : \u00e9crire une fonction qui cr\u00e9\u00e9 un dictionaire { case_grille : indices }.": [[90, "Q7-:-\u00e9crire-une-fonction-qui-cr\u00e9\u00e9-un-dictionaire-{-case_grille-:-indices-}."]], "Q8 : modifier la fonction pairwise_distance pour ne calculer que les distances des points dans la m\u00eame case": [[90, "Q8-:-modifier-la-fonction-pairwise_distance-pour-ne-calculer-que-les-distances-des-points-dans-la-m\u00eame-case"]], "Q9 : Mesurer le temps pour deux matrices 1000x2, 100x2 ?": [[90, "Q9-:-Mesurer-le-temps-pour-deux-matrices-1000x2,-100x2-?"]], "Q10 : le r\u00e9sultat est utilis\u00e9 pour retourner le m\u00e9decin le plus proche ? Avec la seconde fonction, o\u00f9 les r\u00e9sultats sont-ils faux et que faire pour corriger ?": [[90, "Q10-:-le-r\u00e9sultat-est-utilis\u00e9-pour-retourner-le-m\u00e9decin-le-plus-proche-?-Avec-la-seconde-fonction,-o\u00f9-les-r\u00e9sultats-sont-ils-faux-et-que-faire-pour-corriger-?"]], "S\u00e9ances minut\u00e9es": [[92, "seances-minutees"]], "2048 et les classes": [[97, "2048-et-les-classes"]], "D\u00e9composition du probl\u00e8me": [[97, "D\u00e9composition-du-probl\u00e8me"]], "0 - Cr\u00e9ation de la matrice de jeu": [[97, "0---Cr\u00e9ation-de-la-matrice-de-jeu"]], "2 - D\u00e9termination de toutes les cases libres": [[97, "2---D\u00e9termination-de-toutes-les-cases-libres"]], "1 - Ajout d\u2019un nombre al\u00e9atoire dans {2,4} \u00e0 une position al\u00e9atoire pourvu qu\u2019elle soit libre": [[97, "1---Ajout-d'un-nombre-al\u00e9atoire-dans-{2,4}-\u00e0-une-position-al\u00e9atoire-pourvu-qu'elle-soit-libre"]], "3 - A-t-on perdu ?": [[97, "3---A-t-on-perdu-?"]], "5 - Aggr\u00e8ge les nombres dans un tableau que ce soit une ligne ou une colonne": [[97, "5---Aggr\u00e8ge-les-nombres-dans-un-tableau-que-ce-soit-une-ligne-ou-une-colonne"]], "4 - Joue un coup sachant une direction donn\u00e9e": [[97, "4---Joue-un-coup-sachant-une-direction-donn\u00e9e"]], "6 - score": [[97, "6---score"]], "7 - coup suivant": [[97, "7---coup-suivant"]], "8 - la fonction faisant tout": [[97, "8---la-fonction-faisant-tout"]], "Classe compl\u00e8te": [[97, "Classe-compl\u00e8te"]], "Un dernier graphe pour finir": [[97, "Un-dernier-graphe-pour-finir"]], "Une autre strat\u00e9gie pour illustrer l\u2019h\u00e9ritage": [[97, "Une-autre-strat\u00e9gie-pour-illustrer-l'h\u00e9ritage"]], "Un bref aper\u00e7u des classes": [[98, "Un-bref-aper\u00e7u-des-classes"]], "Une station de m\u00e9tro": [[98, "Une-station-de-m\u00e9tro"]], "Une distance": [[98, "Une-distance"]], "M\u00e9thode": [[98, "M\u00e9thode"]], "Liste, tuple, ensemble, dictionnaire, liste cha\u00een\u00e9e, co\u00fbt des op\u00e9rations": [[99, "Liste,-tuple,-ensemble,-dictionnaire,-liste-cha\u00een\u00e9e,-co\u00fbt-des-op\u00e9rations"]], "Insertion avec list et deque": [[99, "Insertion-avec-list-et-deque"]], "Un \u00e9l\u00e9ment dans un ensemble": [[99, "Un-\u00e9l\u00e9ment-dans-un-ensemble"]], "Simuler une loi multinomiale": [[100, "Simuler-une-loi-multinomiale"]], "Algorithme de simulation": [[100, "Algorithme-de-simulation"]], "Une premi\u00e8re optimisation : tri des poids": [[100, "Une-premi\u00e8re-optimisation-:-tri-des-poids"]], "Optimisation bootstrap": [[100, "Optimisation-bootstrap"]], "Jeux de coloriage": [[101, "Jeux-de-coloriage"]], "Colorier un carr\u00e9 \u00e0 proportion": [[101, "Colorier-un-carr\u00e9-\u00e0-proportion"]], "Colorier en diagonale": [[101, "Colorier-en-diagonale"]], "Fonction de la surface couverte": [[101, "Fonction-de-la-surface-couverte"]], "Version math\u00e9matique": [[101, "Version-math\u00e9matique"]], "Retour au coloriage": [[101, "Retour-au-coloriage"]], "A quoi \u00e7a sert ?": [[101, "A-quoi-\u00e7a-sert-?"], [173, "a-quoi-ca-sert"]], "Jeu de d\u00e9, rotation sur un circuit": [[102, "Jeu-de-d\u00e9,-rotation-sur-un-circuit"]], "R\u00e9partition, table de hashage": [[103, "R\u00e9partition,-table-de-hashage"]], "Q1 - premi\u00e8re lettre": [[103, "Q1---premi\u00e8re-lettre"]], "Q2 - somme": [[103, "Q2---somme"]], "Q3 - pseudo g\u00e9n\u00e9rateur": [[103, "Q3---pseudo-g\u00e9n\u00e9rateur"]], "Q4 - hash": [[103, "Q4---hash"]], "Q5 - light hash": [[103, "Q5---light-hash"]], "Q6 - r\u00e9partition": [[103, "Q6---r\u00e9partition"]], "Q7 - dictionnaire": [[103, "Q7---dictionnaire"]], "Quelques \u00e9l\u00e9ments de r\u00e9ponses": [[103, "Quelques-\u00e9l\u00e9ments-de-r\u00e9ponses"]], "Premi\u00e8re lettre": [[103, "Premi\u00e8re-lettre"]], "Somme": [[103, "Somme"]], "Pseudo": [[103, "Pseudo"]], "Hash": [[103, "Hash"]], "Light hash": [[103, "Light-hash"]], "JSON - XML": [[104, "JSON---XML"]], "Q1 : \u00e9criture des donn\u00e9es au format CSV": [[104, "Q1-:-\u00e9criture-des-donn\u00e9es-au-format-CSV"], [104, "id1"]], "Q2 : \u00e9criture des donn\u00e9es au format JSON": [[104, "Q2-:-\u00e9criture-des-donn\u00e9es-au-format-JSON"], [104, "id2"]], "Q3 : relire les donn\u00e9es avec le module json": [[104, "Q3-:-relire-les-donn\u00e9es-avec-le-module-json"], [104, "id3"]], "Q4 : essayez avec les format XML (ou HTML), SQL, SAS, Excel\u2026": [[104, "Q4-:-essayez-avec-les-format-XML-(ou-HTML),-SQL,-SAS,-Excel..."], [104, "id4"]], "Q5 : donn\u00e9es non structur\u00e9es": [[104, "Q5-:-donn\u00e9es-non-structur\u00e9es"], [104, "id5"]], "Q6 : le texte, \u00e7a prend trop de place, zippons": [[104, "Q6-:-le-texte,-\u00e7a-prend-trop-de-place,-zippons"], [104, "id6"]], "Q7 : que vous inspire protobuf ?": [[104, "Q7-:-que-vous-inspire-protobuf-?"], [104, "id7"]], "Calculs de surface et autres calculs": [[105, "Calculs-de-surface-et-autres-calculs"]], "Exercice 1 : calcul de la surface d\u2019un cercle": [[105, "Exercice-1-:-calcul-de-la-surface-d'un-cercle"]], "1.1 En utilisant la constante pi": [[105, "1.1-En-utilisant-la-constante-pi"]], "1.2 Sans utiliser pi ni aucune autre fonction": [[105, "1.2-Sans-utiliser-pi-ni-aucune-autre-fonction"]], "Exercice 2 : tri al\u00e9atoire": [[105, "Exercice-2-:-tri-al\u00e9atoire"]], "Exercice 3 : petits calculs parfaits pour une machine": [[105, "Exercice-3-:-petits-calculs-parfaits-pour-une-machine"]], "1.1. calcul de la surface d\u2019un cercle avec pi": [[105, "1.1.-calcul-de-la-surface-d'un-cercle-avec-pi"]], "1.2. calcul de la surface d\u2019un cercle sans pi ou autre fonction": [[105, "1.2.-calcul-de-la-surface-d'un-cercle-sans-pi-ou-autre-fonction"]], "2. tri al\u00e9atoire": [[105, "2.-tri-al\u00e9atoire"]], "3. petits calculs parfaits pour une machine": [[105, "3.-petits-calculs-parfaits-pour-une-machine"]], "Expressions r\u00e9guli\u00e8res": [[106, "Expressions-r\u00e9guli\u00e8res"], [140, "Expressions-r\u00e9guli\u00e8res"], [172, "expressions-regulieres"], [173, "expressions-regulieres"]], "Exercice 1 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots": [[106, "Exercice-1-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots"], [106, "id1"]], "Exercice 2 : utiliser les expression r\u00e9guli\u00e8res pour extraire tous les mots se terminant par la lettre s": [[106, "Exercice-2-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-tous-les-mots-se-terminant-par-la-lettre-s"], [106, "id2"]], "Exercice 3 : utiliser les expression r\u00e9guli\u00e8res pour remplacer tous les \u00ab\u00a0de\u00a0\u00bb en 2": [[106, "Exercice-3-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-remplacer-tous-les-%22de%22-en-2"], [106, "id3"]], "Exercice 4 : utiliser les expression r\u00e9guli\u00e8res pour extraire les lignes des rimes en elle ou elles ou aile ou ailes": [[106, "Exercice-4-:-utiliser-les-expression-r\u00e9guli\u00e8res-pour-extraire-les-lignes-des-rimes-en-elle-ou-elles-ou-aile-ou-ailes"], [106, "id4"]], "S\u00e9rialisation avec JSON, XML, pickle": [[107, "S\u00e9rialisation-avec-JSON,-XML,-pickle"]], "Notion de stream ou flux": [[107, "Notion-de-stream-ou-flux"]], "Q1: quelle est la fonction la plus rapide ?": [[107, "Q1:-quelle-est-la-fonction-la-plus-rapide-?"]], "Format JSON": [[107, "Format-JSON"]], "Q1. lire du json": [[107, "Q1.-lire-du-json"]], "Q2: \u00e9crire du json": [[107, "Q2:-\u00e9crire-du-json"]], "Q3: gros json": [[107, "Q3:-gros-json"]], "XML": [[107, "XML"]], "pickle": [[107, "pickle"]], "Q1: comparer le temps de s\u00e9rialisation entre pickle et json": [[107, "Q1:-comparer-le-temps-de-s\u00e9rialisation-entre-pickle-et-json"]], "Q2: comparer le temps de d\u00e9s\u00e9rialisation entre pickle et json": [[107, "Q2:-comparer-le-temps-de-d\u00e9s\u00e9rialisation-entre-pickle-et-json"]], "Peut-on tout s\u00e9rialiser ?": [[107, "Peut-on-tout-s\u00e9rialiser-?"]], "Histogramme et dictionnaire": [[108, "Histogramme-et-dictionnaire"]], "Heap": [[109, "Heap"]], "Transformer en tas": [[109, "Transformer-en-tas"]], "Dessiner un tas": [[109, "Dessiner-un-tas"]], "Premi\u00e8re version": [[109, "Premi\u00e8re-version"]], "M\u00eame chose avec les indices au lieu des valeurs": [[109, "M\u00eame-chose-avec-les-indices-au-lieu-des-valeurs"]], "Co\u00fbt de l\u2019algorithme": [[109, "Co\u00fbt-de-l'algorithme"]], "Version simplifi\u00e9e": [[109, "Version-simplifi\u00e9e"]], "Pivot de gauss avec numpy": [[110, "Pivot-de-gauss-avec-numpy"]], "Python": [[110, "Python"], [46, "python"], [46, null], [46, null]], "Numpy 1": [[110, "Numpy-1"]], "Numpy 2": [[110, "Numpy-2"]], "Vitesse": [[110, "Vitesse"]], "Profiling la fonction Gini": [[111, "Profiling-la-fonction-Gini"]], "Exercice 1 : profiler le code pr\u00e9c\u00e9dent": [[111, "Exercice-1-:-profiler-le-code-pr\u00e9c\u00e9dent"], [111, "id1"]], "Exercice 2 : changer la fonction _gini_final si possible en plus rapide": [[111, "Exercice-2-:-changer-la-fonction-_gini_final-si-possible-en-plus-rapide"], [111, "id2"]], "Exercice 3 : vous am\u00e9liorez la fonction _gini_final, profilez pour savoir de combien ?": [[111, "Exercice-3-:-vous-am\u00e9liorez-la-fonction-_gini_final,-profilez-pour-savoir-de-combien-?"], [111, "id3"]], "Exercice 4 : utiliser d\u2019autres modules de profiling": [[111, "Exercice-4-:-utiliser-d'autres-modules-de-profiling"], [111, "id4"]], "Exercice 5 : la fonction _gini_cumsum contient deux boucles. Quelle est la plus rapide ?": [[111, "Exercice-5-:-la-fonction-_gini_cumsum-contient-deux-boucles.-Quelle-est-la-plus-rapide-?"], [111, "id5"]], "Profiling, application \u00e0 la convolution": [[112, "Profiling,-application-\u00e0-la-convolution"]], "Impl\u00e9mentation na\u00efve": [[112, "Impl\u00e9mentation-na\u00efve"]], "Q1: comparer les temps d\u2019ex\u00e9cution": [[112, "Q1:-comparer-les-temps-d'ex\u00e9cution"]], "Q2: comparer avec une seconde impl\u00e9mentation": [[112, "Q2:-comparer-avec-une-seconde-impl\u00e9mentation"]], "im2col": [[112, "im2col"]], "Q3: comparer \u00e0 nouveau les temps d\u2019\u00e9xecution": [[112, "Q3:-comparer-\u00e0-nouveau-les-temps-d'\u00e9xecution"]], "Profiling": [[112, "Profiling"], [93, null]], "Q4: que peut-on en d\u00e9duire ?": [[112, "Q4:-que-peut-on-en-d\u00e9duire-?"]], "Profilage : \u00e9v\u00e9nements ou \u00e9chantillonnage": [[112, "Profilage-:-\u00e9v\u00e9nements-ou-\u00e9chantillonnage"]], "Une derni\u00e8re impl\u00e9mentation": [[112, "Une-derni\u00e8re-impl\u00e9mentation"]], "Q5: Que pouvez-vous dire de cette derni\u00e8re impl\u00e9mentation ?": [[112, "Q5:-Que-pouvez-vous-dire-de-cette-derni\u00e8re-impl\u00e9mentation-?"]], "Exemple de profiling": [[113, "Exemple-de-profiling"]], "Bizarrerie": [[113, "Bizarrerie"]], "Profiler": [[113, "Profiler"]], "Recherche dichotomique": [[114, "Recherche-dichotomique"]], "Version it\u00e9rative": [[114, "Version-it\u00e9rative"]], "Version r\u00e9cursive": [[114, "Version-r\u00e9cursive"]], "Version r\u00e9cursive 2": [[114, "Version-r\u00e9cursive-2"]], "D\u2019une structure de donn\u00e9es \u00e0 l\u2019autre": [[116, "D'une-structure-de-donn\u00e9es-\u00e0-l'autre"]], "histogramme et dictionnaire": [[116, "histogramme-et-dictionnaire"]], "liste \u00e0 dictionnaire": [[116, "liste-\u00e0-dictionnaire"]], "dictionnaire \u00e0 liste": [[116, "dictionnaire-\u00e0-liste"]], "dictionnaire et deux listes": [[116, "dictionnaire-et-deux-listes"]], "deux listes et dictionnaires": [[116, "deux-listes-et-dictionnaires"]], "zip reverse": [[116, "zip-reverse"]], "matrices et dictionnaires": [[116, "matrices-et-dictionnaires"]], "liste de listes et dictionnaires": [[116, "liste-de-listes-et-dictionnaires"]], "dictionnaires et liste de listes": [[116, "dictionnaires-et-liste-de-listes"]], "matrice sparse": [[116, "matrice-sparse"]], "matrices et tableaux": [[116, "matrices-et-tableaux"]], "2 dimensions logiques, 1 dimension en m\u00e9moire": [[116, "2-dimensions-logiques,-1-dimension-en-m\u00e9moire"]], "du tableau \u00e0 la liste de listes": [[116, "du-tableau-\u00e0-la-liste-de-listes"]], "Calculer un chi 2 sur un tableau de contingence": [[117, "Calculer-un-chi-2-sur-un-tableau-de-contingence"]], "formule": [[117, "formule"]], "tableau au hasard": [[117, "tableau-au-hasard"]], "calcul avec scipy": [[117, "calcul-avec-scipy"]], "calcul avec numpy": [[117, "calcul-avec-numpy"]], "Tri plus rapide que pr\u00e9vu": [[119, "Tri-plus-rapide-que-pr\u00e9vu"]], "trier un plus petit ensemble": [[119, "trier-un-plus-petit-ensemble"]], "\u00e9volution en fonction de n": [[119, "\u00e9volution-en-fonction-de-n"]], "Cryptage homomorphic de Craig Gentry": [[120, "Cryptage-homomorphic-de-Craig-Gentry"]], "D\u00e9finition du cryptage": [[120, "D\u00e9finition-du-cryptage"], [121, "D\u00e9finition-du-cryptage"]], "Exercice 1 : impl\u00e9menter le cryptage": [[120, "Exercice-1-:-impl\u00e9menter-le-cryptage"], [121, "Exercice-1-:-impl\u00e9menter-le-cryptage"]], "Exercice 2 : v\u00e9rifier que le cryptage est stable par addition et multiplication": [[120, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"], [121, "Exercice-2-:-v\u00e9rifier-que-le-cryptage-est-stable-par-addition-et-multiplication"]], "Exercice 3 : impl\u00e9mententer l\u2019addition enti\u00e8re": [[120, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"], [121, "Exercice-3-:-impl\u00e9mententer-l'addition-enti\u00e8re"]], "Exercice 4 : impl\u00e9menter la multiplication enti\u00e8re": [[120, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"], [121, "Exercice-4-:-impl\u00e9menter-la-multiplication-enti\u00e8re"]], "Cryptage homomorphic de Craig Gentry - correction": [[121, "Cryptage-homomorphic-de-Craig-Gentry---correction"]], "Plus proches voisins en grande dimension": [[122, "Plus-proches-voisins-en-grande-dimension"]], "Q1 : k-nn : mesurer la performance": [[122, "Q1-:-k-nn-:-mesurer-la-performance"], [123, "Q1-:-k-nn-:-mesurer-la-performance"]], "Q2 : k-nn avec sparse features": [[122, "Q2-:-k-nn-avec-sparse-features"], [123, "Q2-:-k-nn-avec-sparse-features"]], "Q3 : Imaginez une fa\u00e7on d\u2019aller plus vite ?": [[122, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"], [123, "Q3-:-Imaginez-une-fa\u00e7on-d'aller-plus-vite-?"]], "2A.algo - Plus proches voisins en grande dimension - correction": [[123, "2A.algo---Plus-proches-voisins-en-grande-dimension---correction"]], "dimension": [[123, "dimension"]], "observations": [[123, "observations"]], "Puzzles algorithmiques (1)": [[126, "Puzzles-algorithmiques-(1)"]], "Produits scalaires": [[126, "Produits-scalaires"], [127, "Produits-scalaires"]], "Solution moins na\u00efve": [[126, "Solution-moins-na\u00efve"]], "Probl\u00e8me de recouvrement": [[126, "Probl\u00e8me-de-recouvrement"], [127, "Probl\u00e8me-de-recouvrement"]], "Soudoyer les prisonniers": [[126, "Soudoyer-les-prisonniers"], [127, "Soudoyer-les-prisonniers"]], "D\u00e9coupage intelligent d\u2019une base de donn\u00e9es": [[126, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"], [127, "D\u00e9coupage-intelligent-d'une-base-de-donn\u00e9es"]], "Puzzles algorithmes (1) - correction": [[127, "Puzzles-algorithmes-(1)---correction"]], "Premi\u00e8re solution": [[127, "Premi\u00e8re-solution"]], "Seconde solution": [[127, "Seconde-solution"]], "Approche par programmation dynamique": [[127, "Approche-par-programmation-dynamique"]], "Puzzles algorithmiques (2)": [[128, "Puzzles-algorithmiques-(2)"]], "Exercice 1 : nombres premiers": [[128, "Exercice-1-:-nombres-premiers"], [129, "Exercice-1-:-nombres-premiers"]], "Exercice 2 : watersheds": [[128, "Exercice-2-:-watersheds"], [129, "Exercice-2-:-watersheds"]], "Exercice 3 : s\u00e9paration des bagarreurs": [[128, "Exercice-3-:-s\u00e9paration-des-bagarreurs"], [129, "Exercice-3-:-s\u00e9paration-des-bagarreurs"]], "Exercice 4 : formation de bin\u00f4mes": [[128, "Exercice-4-:-formation-de-bin\u00f4mes"], [129, "Exercice-4-:-formation-de-bin\u00f4mes"]], "Puzzles algorithmes (2) - correction": [[129, "Puzzles-algorithmes-(2)---correction"]], "Seconde id\u00e9e : les trouver tous ?": [[129, "Seconde-id\u00e9e-:-les-trouver-tous-?"]], "solution": [[129, "solution"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique": [[130, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique"]], "Apart\u00e9 sur les classes": [[130, "Apart\u00e9-sur-les-classes"]], "Classes, attributs, op\u00e9rateurs": [[130, "Classes,-attributs,-op\u00e9rateurs"]], "Exercice 1 : carr\u00e9 magique": [[130, "Exercice-1-:-carr\u00e9-magique"], [131, "Exercice-1-:-carr\u00e9-magique"]], "M\u00e9thodes": [[130, "M\u00e9thodes"], [150, "methodes"], [162, "methodes"]], "Exercice 2 : \u00e0 faire \u00e0 trois, carr\u00e9 magique (suite)": [[130, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"], [131, "Exercice-2-:-\u00e0-faire-\u00e0-trois,-carr\u00e9-magique-(suite)"]], "Exercice 3 : trouver tous les carr\u00e9s magiques": [[130, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"], [131, "Exercice-3-:-trouver-tous-les-carr\u00e9s-magiques"]], "Exercice 4 : faire plus rapide": [[130, "Exercice-4-:-faire-plus-rapide"], [131, "Exercice-4-:-faire-plus-rapide"]], "Classes, m\u00e9thodes, attributs, op\u00e9rateurs et carr\u00e9 magique (correction)": [[131, "Classes,-m\u00e9thodes,-attributs,-op\u00e9rateurs-et-carr\u00e9-magique-(correction)"]], "Programme complet": [[131, "Programme-complet"]], "Classes, h\u00e9ritage": [[132, "Classes,-h\u00e9ritage"]], "Qu\u2019est-ce que l\u2019h\u00e9ritage ?": [[132, "Qu'est-ce-que-l'h\u00e9ritage-?"]], "Exercice 1 : pi\u00e8ce normale": [[132, "Exercice-1-:-pi\u00e8ce-normale"], [133, "Exercice-1-:-pi\u00e8ce-normale"]], "Exercice 2 : pi\u00e8ce truqu\u00e9e": [[132, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"], [133, "Exercice-2-:-pi\u00e8ce-truqu\u00e9e"]], "Utiliser des m\u00e9thodes de la classe m\u00e8re": [[132, "Utiliser-des-m\u00e9thodes-de-la-classe-m\u00e8re"]], "Exercice 3 : Pi\u00e8ce mixte": [[132, "Exercice-3-:-Pi\u00e8ce-mixte"], [133, "Exercice-3-:-Pi\u00e8ce-mixte"]], "Autre construction avec des fonctions": [[132, "Autre-construction-avec-des-fonctions"]], "Exercice 4 : pi\u00e8ce mixte avec des fonctions": [[132, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"], [133, "Exercice-4-:-pi\u00e8ce-mixte-avec-des-fonctions"]], "Classes, h\u00e9ritage (correction)": [[133, "Classes,-h\u00e9ritage-(correction)"]], "Dictionnaires, fonctions, code de Vigen\u00e8re": [[134, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re"]], "Fonctions dans le d\u00e9tail": [[134, "Fonctions-dans-le-d\u00e9tail"]], "Variable locale": [[134, "Variable-locale"]], "Mot-cl\u00e9 return": [[134, "Mot-cl\u00e9-return"]], "Fonction r\u00e9cursive": [[134, "Fonction-r\u00e9cursive"], [164, "fonction-recursive"]], "Dictionnaires": [[134, "Dictionnaires"]], "cl\u00e9 - valeur": [[134, "cl\u00e9---valeur"]], "notions de co\u00fbt": [[134, "notions-de-co\u00fbt"]], "ordonner les \u00e9l\u00e9ments d\u2019un dictionnaire": [[134, "ordonner-les-\u00e9l\u00e9ments-d'un-dictionnaire"]], "Exercice 2 : recherche dans une liste": [[134, "Exercice-2-:-recherche-dans-une-liste"]], "Exercice 3 : utilisation d\u2019un dictionnaire": [[134, "Exercice-3-:-utilisation-d'un-dictionnaire"], [135, "Exercice-3-:-utilisation-d'un-dictionnaire"]], "Exercice 4 : crypter de d\u00e9crypter selon Vigen\u00e8re": [[134, "Exercice-4-:-crypter-de-d\u00e9crypter-selon-Vigen\u00e8re"]], "Dictionnaires, fonctions, code de Vigen\u00e8re (correction)": [[135, "Dictionnaires,-fonctions,-code-de-Vigen\u00e8re-(correction)"]], "Exercice 4 : crypter et d\u00e9crypter selon Vigen\u00e8re": [[135, "Exercice-4-:-crypter-et-d\u00e9crypter-selon-Vigen\u00e8re"]], "Int\u00e9grale et la m\u00e9thode des rectangles": [[136, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles"]], "Calcul de l\u2019int\u00e9grale": [[136, "Calcul-de-l'int\u00e9grale"], [137, "Calcul-de-l'int\u00e9grale"]], "Calcul de pr\u00e9cision": [[136, "Calcul-de-pr\u00e9cision"], [137, "Calcul-de-pr\u00e9cision"]], "Calcul plus rapide": [[136, "Calcul-plus-rapide"], [137, "Calcul-plus-rapide"]], "Int\u00e9grale et la m\u00e9thode des rectangles - correction": [[137, "Int\u00e9grale-et-la-m\u00e9thode-des-rectangles---correction"]], "La fonction r\u00e9calcitrante": [[137, "La-fonction-r\u00e9calcitrante"]], "Calcul de Monte Carlo": [[137, "Calcul-de-Monte-Carlo"]], "Quand s\u2019arr\u00eater ?": [[137, "Quand-s'arr\u00eater-?"]], "2048 - strat\u00e9gie gagnante": [[138, "2048---strat\u00e9gie-gagnante"]], "Exercice 1 : impl\u00e9menter les r\u00e8gles du jeu": [[138, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"], [139, "Exercice-1-:-impl\u00e9menter-les-r\u00e8gles-du-jeu"]], "Exercice 2 : impl\u00e9menter une strat\u00e9gie": [[138, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"], [139, "Exercice-2-:-impl\u00e9menter-une-strat\u00e9gie"]], "2048 - strat\u00e9gie gagnante - correction": [[139, "2048---strat\u00e9gie-gagnante---correction"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res": [[140, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res"]], "Ecriture": [[140, "Ecriture"], [166, "ecriture"]], "Lecture": [[140, "Lecture"], [166, "lecture"]], "with": [[140, "with"]], "\u00e0 quoi \u00e7a sert ?": [[140, "\u00e0-quoi-\u00e7a-sert-?"]], "Exercice 1 : Excel \\rightarrow Python \\rightarrow Excel": [[140, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"], [141, "Exercice-1-:-Excel-\\rightarrow-Python-\\rightarrow-Excel"]], "Autres formats de fichiers": [[140, "Autres-formats-de-fichiers"]], "Exercice 2 : trouver un module (1)": [[140, "Exercice-2-:-trouver-un-module-(1)"]], "Exercice 3 : trouver un module (2)": [[140, "Exercice-3-:-trouver-un-module-(2)"], [141, "Exercice-3-:-trouver-un-module-(2)"]], "Module qu\u2019on cr\u00e9e soi-m\u00eame": [[140, "Module-qu'on-cr\u00e9e-soi-m\u00eame"]], "Exercice 4 : son propre module": [[140, "Exercice-4-:-son-propre-module"], [141, "Exercice-4-:-son-propre-module"]], "Exercice 5 : chercher un motif dans un texte": [[140, "Exercice-5-:-chercher-un-motif-dans-un-texte"], [141, "Exercice-5-:-chercher-un-motif-dans-un-texte"]], "Exercice 6 : chercher un autre motif dans un texte": [[140, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"], [141, "Exercice-6-:-chercher-un-autre-motif-dans-un-texte"]], "Modules, fichiers, expressions r\u00e9guli\u00e8res (correction)": [[141, "Modules,-fichiers,-expressions-r\u00e9guli\u00e8res-(correction)"]], "Exercice 7 : recherche les urls dans une page wikip\u00e9dia": [[141, "Exercice-7-:-recherche-les-urls-dans-une-page-wikip\u00e9dia"]], "Exercice 8 : construire un texte \u00e0 motif": [[141, "Exercice-8-:-construire-un-texte-\u00e0-motif"]], "Premiers pas en Python": [[142, "Premiers-pas-en-Python"]], "Partie 1": [[142, "Partie-1"]], "Partie 2": [[142, "Partie-2"], [143, "Partie-2"]], "Partie 3": [[142, "Partie-3"], [143, "Partie-3"]], "Premiers pas en Python (correction)": [[143, "Premiers-pas-en-Python-(correction)"]], "Tracer une pyramide bigarr\u00e9e": [[144, "Tracer-une-pyramide-bigarr\u00e9e"]], "Probl\u00e8me": [[144, "Probl\u00e8me"], [145, "Probl\u00e8me"]], "Id\u00e9e de la solution": [[144, "Id\u00e9e-de-la-solution"], [145, "Id\u00e9e-de-la-solution"]], "Tracer une pyramide bigarr\u00e9e - correction": [[145, "Tracer-une-pyramide-bigarr\u00e9e---correction"]], "Les coordonn\u00e9es": [[145, "Les-coordonn\u00e9es"]], "La couleur": [[145, "La-couleur"]], "Deviner la langue d\u2019un texte": [[146, "Deviner-la-langue-d'un-texte"]], "Q1 : lire un fichier": [[146, "Q1-:-lire-un-fichier"], [147, "Q1-:-lire-un-fichier"]], "Q2 : histogramme": [[146, "Q2-:-histogramme"], [147, "Q2-:-histogramme"]], "Q3 : normalisation": [[146, "Q3-:-normalisation"], [147, "Q3-:-normalisation"]], "Q4 : calcul": [[146, "Q4-:-calcul"], [147, "Q4-:-calcul"]], "Q5 : score": [[146, "Q5-:-score"], [147, "Q5-:-score"]], "Deviner la langue d\u2019un texte (correction)": [[147, "Deviner-la-langue-d'un-texte-(correction)"]], "Variables, boucles, tests": [[148, "Variables,-boucles,-tests"]], "Partie 1 : variables, int, float, str, list": [[148, "Partie-1-:-variables,-int,-float,-str,-list"]], "Partie 2 : Tests": [[148, "Partie-2-:-Tests"]], "Partie 3 : boucles": [[148, "Partie-3-:-boucles"]], "Partie 4 : les listes compactes, les ensembles": [[148, "Partie-4-:-les-listes-compactes,-les-ensembles"]], "Partie 5 : recherche non dichotomique (exercice)": [[148, "Partie-5-:-recherche-non-dichotomique-(exercice)"], [149, "Partie-5-:-recherche-non-dichotomique-(exercice)"]], "Partie 6 : Recherche dichotomique": [[148, "Partie-6-:-Recherche-dichotomique"]], "Partie 7 : pour aller plus loin": [[148, "Partie-7-:-pour-aller-plus-loin"]], "Variables, boucles, tests (correction)": [[149, "Variables,-boucles,-tests-(correction)"]], "Partie 3 : boucles (exercice)": [[149, "Partie-3-:-boucles-(exercice)"]], "Partie 6 : recherche dichotomique (exercice)": [[149, "Partie-6-:-recherche-dichotomique-(exercice)"]], "Partie 7 : pour aller plus loin (exercice)": [[149, "Partie-7-:-pour-aller-plus-loin-(exercice)"]], "Pr\u00e9sentation des classes : m\u00e9thodes et attributs": [[150, "presentation-des-classes-methodes-et-attributs"]], "D\u00e9finition, d\u00e9claration": [[150, "definition-declaration"]], "Attributs": [[150, "attributs"]], "Constructeur": [[150, "constructeur"]], "Apport du langage python": [[150, "apport-du-langage-python"]], "Liste des attributs": [[150, "liste-des-attributs"]], "Attributs implicites": [[150, "attributs-implicites"]], "Commentaires, aide": [[150, "commentaires-aide"]], "Classe incluse": [[150, "classe-incluse"]], "It\u00e9rateurs": [[150, "iterateurs"], [164, "iterateurs"]], "M\u00e9thodes, attributs statiques et ajout de m\u00e9thodes": [[150, "methodes-attributs-statiques-et-ajout-de-methodes"]], "M\u00e9thode statique": [[150, "methode-statique"]], "Attributs statiques": [[150, "attributs-statiques"]], "Ajout de m\u00e9thodes": [[150, "ajout-de-methodes"]], "Propri\u00e9t\u00e9s": [[150, "proprietes"]], "Copie d\u2019instance de classe simple": [[150, "copie-d-instance-de-classe-simple"]], "Copie d\u2019instance de classes incluant d\u2019autres classes": [[150, "copie-d-instance-de-classes-incluant-d-autres-classes"]], "Listes et dictionnaires": [[150, "listes-et-dictionnaires"]], "copy et deepcopy": [[150, "copy-et-deepcopy"]], "Attributs fig\u00e9s": [[150, "attributs-figes"]], "Exemple autour de pi\u00e8ces de monnaie": [[150, "exemple-autour-de-pieces-de-monnaie"]], "Sens de l\u2019h\u00e9ritage (2)": [[150, "sens-de-l-heritage-2"]], "H\u00e9ritage multiple": [[150, "heritage-multiple"]], "Fonctions issubclass et isinstance": [[150, "fonctions-issubclass-et-isinstance"]], "Compilation de classes": [[150, "compilation-de-classes"]], "Surcharge d\u2019op\u00e9rateur sur des types": [[150, "surcharge-d-operateur-sur-des-types"]], "Sens de l\u2019h\u00e9ritage (1)": [[150, "sens-de-l-heritage-1"]], "Deux lign\u00e9es d\u2019h\u00e9ritages": [[150, "deux-lignees-d-heritages"]], "Questions": [[152, "questions"]], "C\u2019est oblig\u00e9 d\u2019utiliser les classes ?": [[152, "c-est-oblige-d-utiliser-les-classes"]], "Principe des exceptions": [[153, "principe-des-exceptions"]], "Attraper toutes les erreurs": [[153, "attraper-toutes-les-erreurs"]], "Obtenir le type d\u2019erreur, attraper un type d\u2019exception": [[153, "obtenir-le-type-d-erreur-attraper-un-type-d-exception"]], "Lancer une exception": [[153, "lancer-une-exception"]], "H\u00e9ritage et exception": [[153, "heritage-et-exception"]], "Instructions try, except imbriqu\u00e9es": [[153, "instructions-try-except-imbriquees"]], "D\u00e9finir ses propres exceptions": [[153, "definir-ses-propres-exceptions"]], "D\u00e9river une classe d\u2019exception": [[153, "deriver-une-classe-d-exception"]], "Personnalisation d\u2019une classe d\u2019exception": [[153, "personnalisation-d-une-classe-d-exception"]], "Exemples d\u2019utilisation des exceptions": [[153, "exemples-d-utilisation-des-exceptions"]], "Les it\u00e9rateurs": [[153, "les-iterateurs"]], "Exception ou valeur aberrante": [[153, "exception-ou-valeur-aberrante"]], "Le pi\u00e8ge des exceptions": [[153, "le-piege-des-exceptions"]], "Usage": [[154, "usage"]], "Pile d\u2019appel ou call stack": [[154, "pile-d-appel-ou-call-stack"]], "R\u00e9cup\u00e9ration de la pile d\u2019appel": [[154, "recuperation-de-la-pile-d-appel"]], "Message d\u2019erreur plus explicite": [[154, "message-d-erreur-plus-explicite"]], "Type d\u2019exception": [[154, "type-d-exception"]], "Conventions": [[154, "conventions"]], "Warning et logging": [[156, "warning-et-logging"]], "Warnings": [[156, "warnings"]], "G\u00e9n\u00e9rer un warning": [[156, "generer-un-warning"]], "Intercepter un warning": [[156, "intercepter-un-warning"]], "Warning personnalis\u00e9": [[156, "warning-personnalise"]], "Logging": [[156, "logging"]], "Interfaces graphiques": [[157, "interfaces-graphiques"]], "tkinter": [[158, "tkinter"]], "Les objets": [[158, "les-objets"]], "Zone de texte": [[158, "zone-de-texte"]], "Bouton": [[158, "bouton"]], "Zone de saisie": [[158, "zone-de-saisie"]], "Zone de saisie \u00e0 plusieurs lignes": [[158, "zone-de-saisie-a-plusieurs-lignes"]], "Case \u00e0 cocher": [[158, "case-a-cocher"]], "Case ronde ou bouton radio": [[158, "case-ronde-ou-bouton-radio"]], "Liste avec barre de d\u00e9filement, Combobox": [[158, "liste-avec-barre-de-defilement-combobox"]], "Canevas": [[158, "canevas"]], "Menus": [[158, "menus"]], "M\u00e9thodes communes": [[158, "methodes-communes"]], "Disposition des objets dans une fen\u00eatre": [[158, "disposition-des-objets-dans-une-fenetre"]], "Emplacements": [[158, "emplacements"]], "M\u00e9thode pack": [[158, "methode-pack"]], "M\u00e9thode grid": [[158, "methode-grid"]], "M\u00e9thode place": [[158, "methode-place"]], "Sous-fen\u00eatre": [[158, "sous-fenetre"]], "Ev\u00e9nements": [[158, "evenements"]], "Fen\u00eatre principale": [[158, "fenetre-principale"]], "Focus": [[158, "focus"]], "Lancer une fonction lorsqu\u2019un bouton est press\u00e9": [[158, "lancer-une-fonction-lorsqu-un-bouton-est-presse"]], "Associer n\u2019importe quel \u00e9v\u00e9nement \u00e0 un objet": [[158, "associer-n-importe-quel-evenement-a-un-objet"]], "Menu": [[158, "menu"]], "Fonctions pr\u00e9d\u00e9finies": [[158, "fonctions-predefinies"]], "D\u2019autres fen\u00eatres et contr\u00f4les": [[158, "d-autres-fenetres-et-controles"]], "Cr\u00e9er une seconde bo\u00eete de dialogues": [[158, "creer-une-seconde-boite-de-dialogues"]], "Fen\u00eatres standard": [[158, "fenetres-standard"]], "Compte \u00e0 rebours": [[158, "compte-a-rebours"]], "Contr\u00f4les personnalis\u00e9s : utilisation des classes": [[158, "controles-personnalises-utilisation-des-classes"]], "Fen\u00eatres personnalis\u00e9es : utilisation des classes": [[158, "fenetres-personnalisees-utilisation-des-classes"]], "S\u00e9quence d\u2019\u00e9v\u00e9nements": [[158, "sequence-d-evenements"]], "Communiquer un r\u00e9sultat par message": [[158, "communiquer-un-resultat-par-message"]], "OrderedDict": [[159, "ordereddict"]], "namedtuple": [[159, "namedtuple"]], "Counter": [[159, "counter"]], "deque": [[159, "deque"]], "Constructions fr\u00e9quentes": [[160, "constructions-frequentes"]], "Constructions n\u00e9gatives": [[160, "constructions-negatives"]], "datetime": [[161, "datetime"]], "Autres formats de date": [[161, "autres-formats-de-date"]], "Encoding et jeux de caract\u00e8res": [[162, "encoding-et-jeux-de-caracteres"]], "Jeux de caract\u00e8res": [[162, "jeux-de-caracteres"]], "Encodings par d\u00e9faut": [[162, "encodings-par-defaut"]], "Variables et fonctions": [[163, "variables-et-fonctions"]], "Syntaxe du langage Python (boucles, tests, fonctions)": [[164, "syntaxe-du-langage-python-boucles-tests-fonctions"]], "Les trois concepts des algorithmes": [[164, "les-trois-concepts-des-algorithmes"]], "D\u00e9finition et syntaxe": [[164, "definition-et-syntaxe"]], "Comparaisons possibles": [[164, "comparaisons-possibles"]], "Op\u00e9rateurs logiques": [[164, "operateurs-logiques"]], "Ecriture condens\u00e9e (test)": [[164, "ecriture-condensee-test"]], "Exemple (test)": [[164, "exemple-test"]], "None, True et 1": [[164, "none-true-et-1"]], "Passer, instruction pass": [[164, "passer-instruction-pass"]], "Boucle B1 : test": [[164, "indexmathe-Boucle0"]], "Boucle while": [[164, "boucle-while"]], "Boucle for": [[164, "boucle-for"]], "Listes, boucle for, liste en extension": [[164, "listes-boucle-for-liste-en-extension"]], "Plusieurs variables de boucles": [[164, "plusieurs-variables-de-boucles"]], "Ecriture condens\u00e9e (for)": [[164, "ecriture-condensee-for"]], "Pilotage d\u2019une boucle : continue": [[164, "pilotage-d-une-boucle-continue"]], "Pilotage d\u2019une boucle : break": [[164, "pilotage-d-une-boucle-break"]], "Fin normale d\u2019une boucle : else": [[164, "fin-normale-d-une-boucle-else"]], "Suppression ou ajout d\u2019\u00e9l\u00e9ments lors d\u2019une boucle": [[164, "suppression-ou-ajout-d-elements-lors-d-une-boucle"]], "D\u00e9finition, syntaxe": [[164, "definition-syntaxe"]], "Exemple (for)": [[164, "exemple-for"]], "Param\u00e8tres avec des valeurs par d\u00e9faut": [[164, "parametres-avec-des-valeurs-par-defaut"]], "Ordre des param\u00e8tres": [[164, "ordre-des-parametres"]], "Surcharge de fonction": [[164, "surcharge-de-fonction"]], "Commentaires": [[164, "commentaires"]], "Param\u00e8tres modifiables": [[164, "parametres-modifiables"]], "Port\u00e9e des variables, des param\u00e8tres": [[164, "portee-des-variables-des-parametres"]], "Port\u00e9e des fonctions": [[164, "portee-des-fonctions"]], "Nombre de param\u00e8tres variable": [[164, "nombre-de-parametres-variable"]], "Ecriture simplifi\u00e9e pour des fonctions simples : lambda": [[164, "ecriture-simplifiee-pour-des-fonctions-simples-lambda"]], "Fonctions g\u00e9n\u00e9rateur": [[164, "fonctions-generateur"]], "Identificateur appelable": [[164, "identificateur-appelable"]], "Compilation dynamique (eval)": [[164, "compilation-dynamique-eval"]], "Compilation dynamique (compile, exec)": [[164, "compilation-dynamique-compile-exec"]], "Indentation": [[164, "indentation"]], "Fonctions usuelles": [[164, "fonctions-usuelles"]], "Types et variables du langage python": [[165, "types-et-variables-du-langage-python"]], "Types immuables (ou immutable)": [[165, "types-immuables-ou-immutable"]], "Type \u00ab\u00a0rien\u00a0\u00bb ou None": [[165, "type-rien-ou-none"]], "Nombres r\u00e9els et entiers": [[165, "nombres-reels-et-entiers"]], "Bool\u00e9en": [[165, "booleen"]], "Cha\u00eene de caract\u00e8res": [[165, "chaine-de-caracteres"]], "Cr\u00e9ation d\u2019une cha\u00eene de caract\u00e8res - str": [[165, "creation-d-une-chaine-de-caracteres-str"]], "Manipulation d\u2019une cha\u00eene de caract\u00e8res": [[165, "manipulation-d-une-chaine-de-caracteres"]], "Formatage d\u2019une cha\u00eene de caract\u00e8res": [[165, "formatage-d-une-chaine-de-caracteres"]], "Syntaxe %": [[165, "syntaxe"]], "M\u00e9thode format": [[165, "methode-format"]], "Notation f{}": [[165, "notation-f"]], "Un cas particuler %r ou {!r}": [[165, "un-cas-particuler-r-ou-r"]], "tuple": [[165, "tuple"]], "Nombres complexes": [[165, "nombres-complexes"]], "bytes": [[165, "bytes"]], "Types modifiables ou mutable": [[165, "types-modifiables-ou-mutable"]], "bytearray": [[165, "bytearray"]], "D\u00e9finition et m\u00e9thodes (list)": [[165, "definition-et-methodes-list"]], "Exemples (list)": [[165, "exemples-list"]], "Fonction range": [[165, "fonction-range"]], "Boucles et listes": [[165, "boucles-et-listes"]], "Collage de s\u00e9quences, fonction zip": [[165, "collage-de-sequences-fonction-zip"]], "Concat\u00e9nation de cha\u00eene de caract\u00e8res": [[165, "concatenation-de-chaine-de-caracteres"]], "Copie": [[165, "copie"]], "D\u00e9finition et m\u00e9thodes (dict)": [[165, "definition-et-methodes-dict"]], "Exemples (dict)": [[165, "exemples-dict"]], "Copie (dict)": [[165, "copie-dict"]], "Cl\u00e9s de type modifiable": [[165, "cles-de-type-modifiable"]], "Ensemble ou set": [[165, "ensemble-ou-set"]], "Extensions": [[165, "extensions"]], "Fonction print, repr et conversion en cha\u00eene de caract\u00e8res": [[165, "fonction-print-repr-et-conversion-en-chaine-de-caracteres"]], "Fonction eval": [[165, "eval-fonction-chapitre-deux"]], "Informations fournies par python": [[165, "informations-fournies-par-python"]], "Affectations multiples": [[165, "affectations-multiples"]], "Hi\u00e9rarchie des objets": [[165, "hierarchie-des-objets"]], "Objets internes": [[165, "objets-internes"]], "Commentaires accentu\u00e9s": [[165, "commentaires-accentues"]], "Format texte": [[166, "format-texte"]], "Ecriture en mode \u00ab\u00a0ajout\u00a0\u00bb": [[166, "ecriture-en-mode-ajout"]], "Encoding et les accents": [[166, "encoding-et-les-accents"]], "Fichiers zip": [[166, "fichiers-zip"]], "Lecture (zip)": [[166, "lecture-zip"]], "Ecriture (zip)": [[166, "ecriture-zip"]], "Manipulation de fichiers": [[166, "manipulation-de-fichiers"]], "Gestion des noms de chemins": [[166, "gestion-des-noms-de-chemins"]], "Copie, suppression": [[166, "copie-suppression"]], "Liste de fichiers": [[166, "liste-de-fichiers"]], "Sans format ou format binaire": [[166, "sans-format-ou-format-binaire"]], "Ecriture dans un fichier binaire": [[166, "ecriture-dans-un-fichier-binaire"]], "Lecture d\u2019un fichier binaire": [[166, "lecture-d-un-fichier-binaire"]], "Exemple fichier binaire": [[166, "exemple-fichier-binaire"]], "Objets plus complexes": [[166, "objets-plus-complexes"]], "Entr\u00e9es, Sorties, Modules": [[167, "entrees-sorties-modules"]], "Module ou extension": [[168, "module-ou-extension"]], "Un module": [[168, "un-module"]], "Exemple": [[168, "exemple"]], "Importer un module": [[168, "importer-un-module"]], "Nom d\u2019un module": [[168, "nom-d-un-module"]], "Modules et fichiers": [[168, "modules-et-fichiers"]], "Emplacement d\u2019un module": [[168, "emplacement-d-un-module"]], "Attributs communs \u00e0 tout module": [[168, "attributs-communs-a-tout-module"]], "Cas pratiques": [[168, "cas-pratiques"]], "Ce qui ne marche pas : les import cycliques": [[168, "ce-qui-ne-marche-pas-les-import-cycliques"]], "Ajouter un module en cours d\u2019ex\u00e9cution": [[168, "ajouter-un-module-en-cours-d-execution"]], "Liste des modules import\u00e9s": [[168, "liste-des-modules-importes"]], "Plusieurs modules et fichiers": [[168, "plusieurs-modules-et-fichiers"]], "Arborescence de modules, paquetage": [[168, "arborescence-de-modules-paquetage"]], "Import relatif": [[168, "import-relatif"]], "Modules internes": [[168, "modules-internes"]], "Modules externes": [[168, "modules-externes"]], "Optimisation": [[169, "optimisation"]], "S\u00e9rialiser autre chose que des donn\u00e9es": [[169, "serialiser-autre-chose-que-des-donnees"]], "Parall\u00e9lisation": [[170, "parallelisation"]], "Threads": [[171, "threads"]], "Premier thread": [[171, "premier-thread"]], "Synchronisation": [[171, "synchronisation"]], "Attente": [[171, "attente"]], "Partage d\u2019informations": [[171, "partage-d-informations"]], "Interface graphique": [[171, "interface-graphique"]], "Files de messages": [[171, "files-de-messages"]], "Multithreading plus simple": [[171, "multithreading-plus-simple"]], "concurrent.futures": [[171, "concurrent-futures"]], "Notion de futures": [[171, "notion-de-futures"]], "Un probl\u00e8me de blocage": [[171, "un-probleme-de-blocage"]], "async - await - asyncio": [[171, "async-await-asyncio"]], "GIL - Global Interpreter Lock": [[171, "gil-global-interpreter-lock"]], "cython : un m\u00e9lange de python et C": [[171, "cython-un-melange-de-python-et-c"]], "C#, Java": [[171, "c-java"]], "Bibliographie": [[171, "bibliographie"]], "Les ensembles de caract\u00e8res": [[173, "les-ensembles-de-caracteres"]], "Les multiplicateurs": [[173, "les-multiplicateurs"]], "Groupes": [[173, "groupes"]], "Assembler les caract\u00e8res": [[173, "assembler-les-caracteres"]], "Exemple plus complet": [[173, "exemple-plus-complet"]], "Groupes nomm\u00e9s": [[173, "groupes-nommes"]], "Le langage Python": [[174, "le-langage-python"]], "2022-11-31 : rappel feuille de route 2022": [[8, "rappel-feuille-de-route-2022"]], "S\u00e9ance 1 - 7-9 - introduction, dictionnaire": [[8, "seance-1-7-9-introduction-dictionnaire"]], "S\u00e9ance 2 - 14-9 - programmation dynamique, voyageur de commerce": [[8, "seance-2-14-9-programmation-dynamique-voyageur-de-commerce"]], "S\u00e9ance 3 - 21-9 - numpy, pandas": [[8, "seance-3-21-9-numpy-pandas"]], "S\u00e9ance 4 - 28-9 - graphes": [[8, "seance-4-28-9-graphes"]], "S\u00e9ance 5 - 5-10 - s\u00e9rialisation, tests unitaires, profiling": [[8, "seance-5-5-10-serialisation-tests-unitaires-profiling"]], "S\u00e9ance 6 - 12-10 - expressions r\u00e9guli\u00e8res, webscrapping": [[8, "seance-6-12-10-expressions-regulieres-webscrapping"]], "S\u00e9ance 7 - 19-10 - top k, tri": [[8, "seance-7-19-10-top-k-tri"]], "S\u00e9ance 8 - 26-10 - graphes": [[8, "seance-8-26-10-graphes"]], "2023-09-06 : ENSAE": [[12, "ensae"]], "Calcul Matriciel, Optimisation": [[33, "Calcul-Matriciel,-Optimisation"]], "Numpy arrays": [[33, "Numpy-arrays"]], "Creation d\u2019un array: notion de datatype, et dimensions": [[33, "Creation-d'un-array:-notion-de-datatype,-et-dimensions"]], "Indexation, Slicing, Fancy indexing": [[33, "Indexation,-Slicing,-Fancy-indexing"]], "View contre Copy": [[33, "View-contre-Copy"]], "Manipulation de shape": [[33, "Manipulation-de-shape"]], "Exercice 1 : Echiquier et Crible d\u2019Erathosth\u00e8ne": [[33, "Exercice-1-:-Echiquier-et-Crible-d'Erathosth\u00e8ne"]], "Manipulation et Op\u00e9rations sur les arrays": [[33, "Manipulation-et-Op\u00e9rations-sur-les-arrays"]], "Op\u00e9rations \u00e9l\u00e9ment par \u00e9l\u00e9ment": [[33, "Op\u00e9rations-\u00e9l\u00e9ment-par-\u00e9l\u00e9ment"]], "Broadcasting": [[33, "Broadcasting"]], "R\u00e9ductions": [[33, "R\u00e9ductions"]], "Alg\u00e8bre lin\u00e9aire": [[33, "Alg\u00e8bre-lin\u00e9aire"]], "Exemples simples": [[33, "Exemples-simples"]], "Numpy Matrix": [[33, "Numpy-Matrix"]], "G\u00e9n\u00e9ration de nombres al\u00e9atoires et statistiques": [[33, "G\u00e9n\u00e9ration-de-nombres-al\u00e9atoires-et-statistiques"]], "Exercice 2 : marches al\u00e9atoires": [[33, "Exercice-2-:-marches-al\u00e9atoires"]], "Exercice 3 : retrouver la s\u00e9rie al\u00e9atoire \u00e0 partir des marches al\u00e9atoires": [[33, "Exercice-3-:-retrouver-la-s\u00e9rie-al\u00e9atoire-\u00e0-partir-des-marches-al\u00e9atoires"]], "Optimisation avec scipy": [[33, "Optimisation-avec-scipy"]], "Exercice 4 : simulation, r\u00e9gression, estimation par maximisation de la vraisemblance": [[33, "Exercice-4-:-simulation,-r\u00e9gression,-estimation-par-maximisation-de-la-vraisemblance"]], "R\u00e9f\u00e9rences": [[33, "R\u00e9f\u00e9rences"]], "En diagonal": [[42, "en-diagonal"]], "Compl\u00e9ments": [[42, null], [43, null]], "Tous les notebooks": [[46, "tous-les-notebooks"]], "Enonc\u00e9 - Correction": [[46, "enonce-correction"]], "Data": [[46, "data"], [46, null]], "Correction d\u2019examens": [[46, "correction-d-examens"]], "Examens": [[46, null]], "Probl\u00e8me d\u2019ordonnancement": [[52, "Probl\u00e8me-d'ordonnancement"]], "Q1 : \u00e9crire un algorithme qui d\u00e9termine dans quel ordre on peut ex\u00e9cuter les t\u00e2ches.": [[52, "Q1-:-\u00e9crire-un-algorithme-qui-d\u00e9termine-dans-quel-ordre-on-peut-ex\u00e9cuter-les-t\u00e2ches."]], "Q2 : Et si les t\u00e2ches n\u2019ont plus la m\u00eame dur\u00e9e ?": [[52, "Q2-:-Et-si-les-t\u00e2ches-n'ont-plus-la-m\u00eame-dur\u00e9e-?"]], "Jeux de dictionnaires, plus grand suffixe commun": [[57, "Jeux-de-dictionnaires,-plus-grand-suffixe-commun"]], "Exercice 1 : trouver les deux mots qui partagent le plus grand suffixe en commun": [[57, "Exercice-1-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun"], [57, "id1"]], "Exercice 2 : constuire un dictionnaire qui associe \u00e0 chaque lettre tous les mots se terminant par celle-ci": [[57, "Exercice-2-:-constuire-un-dictionnaire-qui-associe-\u00e0-chaque-lettre-tous-les-mots-se-terminant-par-celle-ci"], [57, "id2"]], "Exercice 3 : trouver les deux mots qui partagent le plus grand suffixe en commun en utilisant le dictionnaire pr\u00e9c\u00e9dent": [[57, "Exercice-3-:-trouver-les-deux-mots-qui-partagent-le-plus-grand-suffixe-en-commun-en-utilisant-le-dictionnaire-pr\u00e9c\u00e9dent"], [57, "id3"]], "Exercice 4 : mesurer le temps pris par chaque fonction": [[57, "Exercice-4-:-mesurer-le-temps-pris-par-chaque-fonction"], [57, "id4"]], "Exercice 5 : expliquer pourquoi telle m\u00e9thode est plus rapide.": [[57, "Exercice-5-:-expliquer-pourquoi-telle-m\u00e9thode-est-plus-rapide."], [57, "id5"]], "Exercice 6 : pousser l\u2019id\u00e9e plus loin et construire un trie": [[57, "Exercice-6-:-pousser-l'id\u00e9e-plus-loin-et-construire-un-trie"], [57, "id6"]], "A conna\u00eetre": [[91, null]], "Programmation dynamique": [[91, null]], "Probl\u00e8me NP-complets": [[91, null]], "Graphes": [[91, null]], "A parcourir": [[91, null]], "Correction": [[91, null], [115, "Correction"], [93, null]], "Web-Scraping - pokemon": [[115, "Web-Scraping---pokemon"]], "Fonction pour obtenir les caract\u00e9ristiques de pokemons": [[115, "Fonction-pour-obtenir-les-caract\u00e9ristiques-de-pokemons"]], "les images de pokemon": [[115, "les-images-de-pokemon"]], "Tests unitaires": [[118, "Tests-unitaires"]], "Un petit jeu": [[118, "Un-petit-jeu"]], "Une autre \u00e9criture": [[118, "Une-autre-\u00e9criture"]], "Des obstacles\u2026": [[118, "Des-obstacles..."]], "Ajouter d\u2019autres tests unitaires pour cette seconde version": [[118, "Ajouter-d'autres-tests-unitaires-pour-cette-seconde-version"]], "Changer la taille de l\u2019\u00e9chiquier": [[118, "Changer-la-taille-de-l'\u00e9chiquier"]], "Pour aller plus loin": [[118, "Pour-aller-plus-loin"]], "Tester une exception": [[118, "Tester-une-exception"]], "Programmation dynamique et plus court chemin": [[124, "Programmation-dynamique-et-plus-court-chemin"]], "Algorithme du plus court chemin": [[124, "Algorithme-du-plus-court-chemin"]], "La r\u00e9partition des skis": [[124, "La-r\u00e9partition-des-skis"]], "Exercice facultatif": [[124, "Exercice-facultatif"], [125, "Exercice-facultatif"]], "Exercice 5": [[124, "Exercice-5"], [125, "Exercice-5"]], "Exercice 6": [[124, "Exercice-6"], [125, "Exercice-6"]], "Exercice 7": [[124, "Exercice-7"], [125, "Exercice-7"]], "Exercice 8": [[124, "Exercice-8"], [125, "Exercice-8"]], "Prolongements : degr\u00e9 de s\u00e9paration sur Facebook": [[124, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"], [125, "Prolongements-:-degr\u00e9-de-s\u00e9paration-sur-Facebook"]], "Programmation dynamique et plus court chemin (correction)": [[125, "Programmation-dynamique-et-plus-court-chemin-(correction)"]], "Collections d\u2019articles p\u00e9rissables": [[14, "collections-d-articles-perissables"]], "2023": [[14, null]], "2022": [[14, null]], "2023-11-31 : rappel feuille de route 2023": [[13, "rappel-feuille-de-route-2023"]], "S\u00e9ance 1": [[13, "seance-1"]], "S\u00e9ance 2": [[13, "seance-2"]], "S\u00e9ance 3": [[13, "seance-3"]], "S\u00e9ance 8": [[13, "seance-8"]], "Apprendre la programmation avec Python": [[43, "apprendre-la-programmation-avec-python"]], "Lectures": [[43, null]], "Exercices": [[43, null]], "Older versions": [[43, "older-versions"]], "Exercices sur le langage python": [[93, "exercices-sur-le-langage-python"]], "Structure de donn\u00e9es": [[93, null]], "algorithmes tr\u00e8s simples": [[93, null]], "Outils": [[93, null]], "Jeu de d\u00e9, rotation sur un circuit (classes)": [[94, "Jeu-de-d\u00e9,-rotation-sur-un-circuit-(classes)"]], "De": [[94, "De"]], "Permutation": [[94, "Permutation"]], "Classe Permutation et d\u00e9composition en transitions": [[95, "Classe-Permutation-et-d\u00e9composition-en-transitions"]], "Composition": [[95, "Composition"]], "Op\u00e9rateur == et @": [[95, "Op\u00e9rateur-==-et-@"]], "D\u00e9composition": [[95, "D\u00e9composition"]], "Transposition": [[95, "Transposition"]], "Un exemple court pour d\u00e9m\u00ealer ce qui est chang\u00e9": [[95, "Un-exemple-court-pour-d\u00e9m\u00ealer-ce-qui-est-chang\u00e9"]], "Python 3.x": [[95, "Python-3.x"]], "Une classe pour repr\u00e9senter un arbre": [[96, "Une-classe-pour-repr\u00e9senter-un-arbre"]], "Premier jet": [[96, "Premier-jet"]], "Afficher l\u2019arbre": [[96, "Afficher-l'arbre"]], "Profondeur maximale : le plus grand chemin depuis la racine jusqu\u2019aux feuilles": [[96, "Profondeur-maximale-:-le-plus-grand-chemin-depuis-la-racine-jusqu'aux-feuilles"]], "Profondeur moyenne ?": [[96, "Profondeur-moyenne-?"]], "Change Logs": [[0, "change-logs"]], "0.3.1": [[0, "id1"]], "License": [[45, "license"]]}, "indexentries": {"algorithme": [[1, "index-0"]], "culture": [[1, "index-0"]], "culture algorithmique": [[1, "index-0"]], "commentaire_accentues() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.commentaire_accentues"]], "compte() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.compte"]], "construit_matrice_carree() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.construit_matrice_carree"]], "dictionnaire_modifie_dans_la_boucle() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dictionnaire_modifie_dans_la_boucle"]], "dix_entiers_carre() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.dix_entiers_carre"]], "enumerate_permutations() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations"]], "enumerate_permutations_recursive() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.enumerate_permutations_recursive"]], "integrale() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.integrale"]], "mat2text() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2text"]], "mat2vect() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.mat2vect"]], "minindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.minindex"]], "module": [[2, "module-teachpyx.examples.classiques"], [2, "module-teachpyx.examples.construction_classique"], [3, "module-teachpyx.faq.faq_exception"], [3, "module-teachpyx.faq.faq_numpy"], [3, "module-teachpyx.faq.faq_python"], [5, "module-teachpyx.examples.numpysex"], [6, "module-teachpyx.practice.rues_paris"], [7, "module-teachpyx.tools.profiling"], [168, "index-0"]], "recherche() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche"]], "recherche_dichotomique() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.recherche_dichotomique"]], "repetition_a_eviter() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.repetition_a_eviter"]], "somme() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.somme"]], "str2date() (dans le module teachpyx.examples.classiques)": [[2, "teachpyx.examples.classiques.str2date"]], "teachpyx.examples.classiques": [[2, "module-teachpyx.examples.classiques"]], "teachpyx.examples.construction_classique": [[2, "module-teachpyx.examples.construction_classique"]], "text2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.text2mat"]], "triindex() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.triindex"]], "vect2mat() (dans le module teachpyx.examples.construction_classique)": [[2, "teachpyx.examples.construction_classique.vect2mat"]], "distribution (classe dans teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.Distribution"]], "pqpiperror": [[3, "teachpyx.faq.faq_python.PQPipError"]], "call_stack() (dans le module teachpyx.faq.faq_exception)": [[3, "teachpyx.faq.faq_exception.call_stack"]], "class_getitem() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.class_getitem"]], "difference_div() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.difference_div"]], "entier_grande_taille() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.entier_grande_taille"]], "enumerate_regex_search() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.enumerate_regex_search"]], "get_day_name() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_day_name"]], "get_installed_distributions() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_installed_distributions"]], "get_month_name() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_month_name"]], "get_package_info() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_package_info"]], "get_packages_list() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.get_packages_list"]], "information_about_package() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.information_about_package"]], "list_of_installed_packages() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.list_of_installed_packages"]], "property_example() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.property_example"]], "python_path() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.python_path"]], "same_variable() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.same_variable"]], "sortable_class() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.sortable_class"]], "stringio() (dans le module teachpyx.faq.faq_python)": [[3, "teachpyx.faq.faq_python.stringio"]], "teachpyx.faq.faq_exception": [[3, "module-teachpyx.faq.faq_exception"]], "teachpyx.faq.faq_numpy": [[3, "module-teachpyx.faq.faq_numpy"]], "teachpyx.faq.faq_python": [[3, "module-teachpyx.faq.faq_python"]], "to_float32() (dans le module teachpyx.faq.faq_numpy)": [[3, "teachpyx.faq.faq_numpy.to_float32"]], "numpy_matrix2list() (dans le module teachpyx.examples.numpysex)": [[5, "teachpyx.examples.numpysex.numpy_matrix2list"]], "numpy_types() (dans le module teachpyx.examples.numpysex)": [[5, "teachpyx.examples.numpysex.numpy_types"]], "teachpyx.examples.numpysex": [[5, "module-teachpyx.examples.numpysex"]], "bellman() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.bellman"]], "connected_components() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.connected_components"]], "distance_haversine() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.distance_haversine"]], "distance_paris() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.distance_paris"]], "euler_path() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.euler_path"]], "eulerien_extension() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.eulerien_extension"]], "get_data() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.get_data"]], "graph_degree() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.graph_degree"]], "kruskal() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.kruskal"]], "possible_edges() (dans le module teachpyx.practice.rues_paris)": [[6, "teachpyx.practice.rues_paris.possible_edges"]], "teachpyx.practice.rues_paris": [[6, "module-teachpyx.practice.rues_paris"]], "profilenode (classe dans teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.ProfileNode"]], "add_called_by() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.add_called_by"]], "add_calls_to() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.add_calls_to"]], "as_dict() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.as_dict"]], "decompress_zip() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.decompress_zip"]], "download_and_unzip() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.download_and_unzip"]], "draw_diagram() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.draw_diagram"]], "filter_node_() (m\u00e9thode statique teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.filter_node_"]], "get_root() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.get_root"]], "key (propri\u00e9t\u00e9 teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.key"]], "profile() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile"]], "profile2df() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile2df"]], "profile2graph() (dans le module teachpyx.tools.profiling)": [[7, "teachpyx.tools.profiling.profile2graph"]], "teachpyx.tools.profiling": [[7, "module-teachpyx.tools.profiling"]], "to_json() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.to_json"]], "to_text() (m\u00e9thode teachpyx.tools.profiling.profilenode)": [[7, "teachpyx.tools.profiling.ProfileNode.to_text"]], "total_size() (dans le module teachpyx.tools)": [[7, "teachpyx.tools.total_size"]], "ubuntu": [[9, "index-0"]], "wsl": [[9, "index-0"]], "cartopy": [[9, "index-0"]], "code jam": [[10, "index-0"]], "harry potter": [[11, "index-0"]], "hermionne": [[11, "index-0"]], "\u00e9nigme": [[11, "index-0"]], "dataframe": [[31, "index-0"]], "matrice": [[31, "index-0"]], "conseil": [[37, "index-0"]], "cheat sheet": [[39, "index-0"]], "boucle": [[44, "index-0"], [164, "indexmathe-Boucle0"], [164, "index-3"]], "s\u00e9quence": [[44, "index-0"]], "test": [[44, "index-0"], [164, "index-0"]], "d\u00e9finition": [[150, "indexmathe-D\u00e9finition0"], [150, "indexmathe-D\u00e9finition1"], [150, "indexmathe-D\u00e9finition2"], [150, "indexmathe-D\u00e9finition3"], [150, "indexmathe-D\u00e9finition4"], [150, "indexmathe-D\u00e9finition5"], [150, "indexmathe-D\u00e9finition6"], [150, "indexmathe-D\u00e9finition7"], [164, "indexmathe-D\u00e9finition0"], [164, "indexmathe-D\u00e9finition1"], [164, "indexmathe-D\u00e9finition2"], [164, "indexmathe-D\u00e9finition3"], [164, "indexmathe-D\u00e9finition4"], [164, "indexmathe-D\u00e9finition5"], [165, "indexmathe-D\u00e9finition0"], [165, "indexmathe-D\u00e9finition1"], [165, "indexmathe-D\u00e9finition2"], [165, "indexmathe-D\u00e9finition3"], [165, "indexmathe-D\u00e9finition4"], [165, "indexmathe-D\u00e9finition5"], [165, "indexmathe-D\u00e9finition6"], [165, "indexmathe-D\u00e9finition7"], [165, "indexmathe-D\u00e9finition8"], [165, "indexmathe-D\u00e9finition9"], [168, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d1 : classe": [[150, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : instantiaion": [[150, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : m\u00e9thode": [[150, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : attribut": [[150, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : m\u00e9thode statique": [[150, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : attribut statique": [[150, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : h\u00e9ritage": [[150, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : surcharge": [[150, "indexmathe-D\u00e9finition7"]], "syntaxe": [[150, "indexmathe-Syntaxe0"], [150, "indexmathe-Syntaxe1"], [150, "indexmathe-Syntaxe10"], [150, "indexmathe-Syntaxe11"], [150, "indexmathe-Syntaxe12"], [150, "indexmathe-Syntaxe13"], [150, "indexmathe-Syntaxe14"], [150, "indexmathe-Syntaxe15"], [150, "indexmathe-Syntaxe2"], [150, "indexmathe-Syntaxe3"], [150, "indexmathe-Syntaxe4"], [150, "indexmathe-Syntaxe5"], [150, "indexmathe-Syntaxe6"], [150, "indexmathe-Syntaxe7"], [150, "indexmathe-Syntaxe8"], [150, "indexmathe-Syntaxe9"], [153, "indexmathe-Syntaxe0"], [153, "indexmathe-Syntaxe1"], [164, "indexmathe-Syntaxe0"], [164, "indexmathe-Syntaxe1"], [164, "indexmathe-Syntaxe2"], [164, "indexmathe-Syntaxe3"], [164, "indexmathe-Syntaxe4"], [164, "indexmathe-Syntaxe5"], [164, "indexmathe-Syntaxe6"], [164, "indexmathe-Syntaxe7"], [164, "indexmathe-Syntaxe8"], [168, "indexmathe-Syntaxe0"], [168, "indexmathe-Syntaxe1"], [168, "indexmathe-Syntaxe2"]], "syntaxe s1 : d\u00e9claration d'une classe": [[150, "indexmathe-Syntaxe0"]], "syntaxe s10 : d\u00e9claration d'un attribut statique": [[150, "indexmathe-Syntaxe9"]], "syntaxe s11 : d\u00e9claration d'une propri\u00e9t\u00e9": [[150, "indexmathe-Syntaxe10"]], "syntaxe s12 : d\u00e9claration d'une propri\u00e9t\u00e9 (2)": [[150, "indexmathe-Syntaxe11"]], "syntaxe s13 : d\u00e9claration de l'op\u00e9rateur __copy__": [[150, "indexmathe-Syntaxe12"]], "syntaxe s14 : d\u00e9claration d'attributs fig\u00e9s": [[150, "indexmathe-Syntaxe13"]], "syntaxe s15 : h\u00e9ritage": [[150, "indexmathe-Syntaxe14"]], "syntaxe s16 : surcharge de m\u00e9thodes h\u00e9rit\u00e9es": [[150, "indexmathe-Syntaxe15"]], "syntaxe s2 : instanciation d'une classe": [[150, "indexmathe-Syntaxe1"]], "syntaxe s3 : d\u00e9claration d'une m\u00e9thode": [[150, "indexmathe-Syntaxe2"]], "syntaxe s4 : appel d'une m\u00e9thode": [[150, "indexmathe-Syntaxe3"]], "syntaxe s5 : d\u00e9claration d'un attribut": [[150, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'un constructeur": [[150, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'un constructeur": [[150, "indexmathe-Syntaxe6"]], "syntaxe s8 : d\u00e9claration de l'op\u00e9rateur __str__": [[150, "indexmathe-Syntaxe7"]], "syntaxe s9 : d\u00e9claration d'une m\u00e9thode statique": [[150, "indexmathe-Syntaxe8"]], "__copy__": [[150, "index-13"]], "__dict__": [[150, "index-6"]], "class": [[150, "index-0"]], "commentaire": [[150, "index-7"], [164, "index-10"], [165, "index-3"], [165, "index-54"]], "constructeur": [[150, "index-4"]], "copy": [[150, "index-13"], [150, "index-15"], [165, "index-41"], [165, "index-45"]], "deepcopy": [[150, "index-15"], [165, "index-41"]], "def": [[150, "index-3"]], "destructeur": [[150, "index-5"]], "dir": [[150, "index-8"]], "garbage collector": [[150, "index-14"], [153, "index-13"]], "help": [[150, "index-7"]], "h\u00e9ritage": [[150, "index-17"], [153, "index-9"]], "instance": [[150, "index-2"]], "issubclass": [[150, "index-18"]], "m\u00e9thode statique": [[150, "index-11"]], "op\u00e9rateur retourn\u00e9": [[150, "index-9"]], "pass": [[150, "index-1"], [164, "index-2"]], "propri\u00e9t\u00e9": [[150, "index-12"]], "self": [[150, "index-3"]], "s\u00e9rialisation": [[150, "index-16"], [166, "index-5"], [169, "index-0"]], "yield": [[150, "index-10"], [164, "index-14"]], "attribut": [[152, "index-0"]], "attributeerror": [[153, "index-5"]], "importerror": [[153, "index-5"]], "indentationerror": [[153, "index-4"]], "indexerror": [[153, "index-6"]], "keyerror": [[153, "index-6"]], "nameerror": [[153, "index-5"]], "oserror": [[153, "index-7"]], "syntaxerror": [[153, "index-4"]], "syntaxe s1 : attraper une exception": [[153, "indexmathe-Syntaxe0"]], "syntaxe s2 : lever une exception": [[153, "indexmathe-Syntaxe1"]], "typeerror": [[153, "index-6"]], "unicodeerror": [[153, "index-7"]], "valueerror": [[153, "index-6"]], "__str__": [[153, "index-10"]], "as": [[153, "index-3"]], "context manager": [[153, "index-14"]], "division par z\u00e9ro": [[153, "index-0"]], "except": [[153, "index-2"]], "exception": [[153, "index-0"]], "it\u00e9rateur": [[153, "index-11"], [164, "index-14"], [164, "index-6"]], "pile d'appels": [[153, "index-1"]], "pile d'ex\u00e9cution": [[153, "index-1"]], "raise": [[153, "index-8"]], "try": [[153, "index-2"]], "valeur aberrante": [[153, "index-12"]], "test unitaire": [[156, "index-1"]], "warning": [[156, "index-0"]], "checkbutton": [[158, "index-5"]], "entry": [[158, "index-1"], [158, "index-3"]], "intvar": [[158, "index-6"]], "listbox": [[158, "index-7"]], "radiobutton": [[158, "index-6"]], "text": [[158, "index-4"]], "bouton": [[158, "index-2"]], "bouton radio": [[158, "index-6"]], "case \u00e0 cocher": [[158, "index-5"]], "compte \u00e0 rebours": [[158, "index-8"]], "widget": [[158, "index-0"]], "zone de saisie": [[158, "index-3"]], "zone de saisie \u00e0 plusieurs lignes": [[158, "index-4"]], "zone de texte": [[158, "index-1"]], "jeux de caract\u00e8res": [[162, "index-0"]], ":": [[164, "index-0"], [164, "index-3"]], "boucle b1 : test": [[164, "indexmathe-Boucle0"]], "d\u00e9finition d1 : test": [[164, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d2 : fonction": [[164, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : fonction r\u00e9cursive": [[164, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : port\u00e9e d'un variable": [[164, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : variable locale": [[164, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : variable globale": [[164, "indexmathe-D\u00e9finition5"]], "stopiteration": [[164, "index-6"]], "syntaxe s1 : tests": [[164, "indexmathe-Syntaxe0"]], "syntaxe s2 : instruction pass": [[164, "indexmathe-Syntaxe1"]], "syntaxe s3 : boucle while": [[164, "indexmathe-Syntaxe2"]], "syntaxe s4 : boucle for": [[164, "indexmathe-Syntaxe3"]], "syntaxe s5 : liste en extension": [[164, "indexmathe-Syntaxe4"]], "syntaxe s6 : d\u00e9claration d'une fonction": [[164, "indexmathe-Syntaxe5"]], "syntaxe s7 : appel d'une fonction": [[164, "indexmathe-Syntaxe6"]], "syntaxe s8 : valeurs par d\u00e9faut": [[164, "indexmathe-Syntaxe7"]], "syntaxe s9 : nombre ind\u00e9fini de param\u00e8tres": [[164, "indexmathe-Syntaxe8"]], "affectations multiples": [[164, "index-7"]], "boucle infinie": [[164, "index-4"]], "break": [[164, "index-9"]], "compile": [[164, "index-16"]], "continue": [[164, "index-8"]], "elif": [[164, "index-0"]], "else": [[164, "index-0"]], "enumerate": [[164, "index-21"]], "eval": [[164, "index-15"], [165, "index-49"]], "exec": [[164, "index-16"]], "fonction r\u00e9cursive": [[164, "index-12"]], "for": [[164, "index-3"], [164, "index-5"]], "g\u00e9n\u00e9rateur": [[164, "index-14"]], "if": [[164, "index-0"]], "in": [[164, "index-3"], [165, "index-15"], [165, "index-25"], [165, "index-35"], [165, "index-44"]], "indentation": [[164, "index-17"]], "lambda": [[164, "index-13"]], "map": [[164, "index-18"]], "passage par adresse": [[164, "index-11"]], "priorit\u00e9 des op\u00e9rateurs": [[164, "index-1"], [165, "index-10"]], "r\u00e9cursivit\u00e9": [[164, "index-12"]], "sorted": [[164, "index-20"]], "while": [[164, "index-3"]], "zip": [[164, "index-19"], [165, "index-39"]], "\"": [[165, "index-17"]], "\"\"\"": [[165, "index-17"]], "#": [[165, "index-54"]], "%": [[165, "index-22"], [165, "index-8"]], "%d": [[165, "index-22"]], "%f": [[165, "index-22"]], "%s": [[165, "index-22"]], "&": [[165, "index-47"], [165, "index-8"]], "'": [[165, "index-17"]], "'''": [[165, "index-17"]], "*": [[165, "index-20"], [165, "index-25"], [165, "index-35"], [165, "index-8"]], "**": [[165, "index-8"]], "*=": [[165, "index-20"], [165, "index-25"], [165, "index-35"], [165, "index-8"]], "+": [[165, "index-20"], [165, "index-25"], [165, "index-35"], [165, "index-8"]], "+=": [[165, "index-20"], [165, "index-25"], [165, "index-35"], [165, "index-8"]], "-": [[165, "index-8"]], "-=": [[165, "index-8"]], "/": [[165, "index-8"]], "//": [[165, "index-11"]], "/=": [[165, "index-8"]], "<": [[165, "index-14"]], "<<": [[165, "index-8"]], "<=": [[165, "index-14"]], "=": [[165, "index-14"], [165, "index-52"]], "==": [[165, "index-14"]], ">": [[165, "index-14"]], ">=": [[165, "index-14"]], ">>": [[165, "index-8"]], "d\u00e9finition d1 : variable": [[165, "indexmathe-D\u00e9finition0"]], "d\u00e9finition d10 : frozenset": [[165, "indexmathe-D\u00e9finition9"]], "d\u00e9finition d2 : constante": [[165, "indexmathe-D\u00e9finition1"]], "d\u00e9finition d3 : type immuable (ou immutable)": [[165, "indexmathe-D\u00e9finition2"]], "d\u00e9finition d4 : cha\u00eene de caract\u00e8res": [[165, "indexmathe-D\u00e9finition3"]], "d\u00e9finition d5 : tuple": [[165, "indexmathe-D\u00e9finition4"]], "d\u00e9finition d6 : type modifiable (ou mutable)": [[165, "indexmathe-D\u00e9finition5"]], "d\u00e9finition d7 : liste": [[165, "indexmathe-D\u00e9finition6"]], "d\u00e9finition d8 : dictionnaire": [[165, "indexmathe-D\u00e9finition7"]], "d\u00e9finition d9 : set": [[165, "indexmathe-D\u00e9finition8"]], "false": [[165, "index-12"]], "none": [[165, "index-6"]], "true": [[165, "index-12"]], "[:]": [[165, "index-20"], [165, "index-25"], [165, "index-35"], [165, "index-44"]], "[]": [[165, "index-20"], [165, "index-25"], [165, "index-35"], [165, "index-44"]], "\\": [[165, "index-17"], [165, "index-4"]], "\\%": [[165, "index-18"]], "\\\\": [[165, "index-18"]], "\\n": [[165, "index-18"]], "\\r": [[165, "index-18"]], "\\t": [[165, "index-18"]], "__builtins__": [[165, "index-50"]], "__doc__": [[165, "index-50"]], "__file__": [[165, "index-50"]], "__name__": [[165, "index-50"]], "affectation multiple": [[165, "index-52"]], "and": [[165, "index-13"]], "append": [[165, "index-35"]], "arrondi": [[165, "index-9"]], "b\"\"": [[165, "index-29"]], "b''": [[165, "index-29"]], "backslash": [[165, "index-4"]], "bool": [[165, "index-12"]], "bytearray": [[165, "index-33"]], "bytes": [[165, "index-27"]], "cha\u00eene de caract\u00e8res": [[165, "index-16"]], "cl\u00e9": [[165, "index-43"]], "comparaison": [[165, "index-14"]], "complex": [[165, "index-26"]], "concat\u00e9nation": [[165, "index-40"]], "constante": [[165, "index-2"]], "conversion": [[165, "index-9"]], "copie": [[165, "index-41"], [165, "index-45"]], "count": [[165, "index-21"], [165, "index-28"]], "decode": [[165, "index-30"]], "del": [[165, "index-44"]], "dict": [[165, "index-42"]], "dictionnaire": [[165, "index-42"]], "division enti\u00e8re": [[165, "index-11"]], "divmod": [[165, "index-53"]], "encode": [[165, "index-30"]], "endswith": [[165, "index-21"], [165, "index-28"]], "entier": [[165, "index-7"]], "extend": [[165, "index-35"]], "extra caract\u00e8re": [[165, "index-18"]], "find": [[165, "index-21"], [165, "index-28"]], "float": [[165, "index-7"]], "format": [[165, "index-23"]], "formattage": [[165, "index-22"]], "formmattage": [[165, "index-23"]], "fromhex": [[165, "index-29"]], "frozen set": [[165, "index-47"]], "get": [[165, "index-44"]], "getsizeof": [[165, "index-32"]], "id": [[165, "index-46"]], "identificateur": [[165, "index-1"]], "immuable": [[165, "index-5"]], "immutable": [[165, "index-5"]], "index": [[165, "index-35"]], "insert": [[165, "index-35"]], "int": [[165, "index-7"]], "is": [[165, "index-15"]], "items": [[165, "index-44"]], "join": [[165, "index-21"], [165, "index-28"]], "keys": [[165, "index-44"]], "len": [[165, "index-35"], [165, "index-44"]], "list": [[165, "index-34"]], "liste": [[165, "index-34"]], "liste en extension": [[165, "index-38"]], "lower": [[165, "index-21"]], "max": [[165, "index-35"], [165, "index-44"]], "min": [[165, "index-35"], [165, "index-44"]], "modifiable": [[165, "index-31"]], "mutable": [[165, "index-31"]], "not": [[165, "index-13"], [165, "index-35"]], "op\u00e9rateur": [[165, "index-13"], [165, "index-14"], [165, "index-15"], [165, "index-20"], [165, "index-25"], [165, "index-35"], [165, "index-8"]], "or": [[165, "index-13"]], "pop": [[165, "index-35"], [165, "index-44"]], "print": [[165, "index-48"]], "r\"\"": [[165, "index-19"]], "r''": [[165, "index-19"]], "range": [[165, "index-37"]], "replace": [[165, "index-28"]], "repr": [[165, "index-48"]], "reverse": [[165, "index-35"]], "r\u00e9el": [[165, "index-7"]], "set": [[165, "index-47"]], "sort": [[165, "index-35"], [165, "index-36"]], "split": [[165, "index-21"], [165, "index-28"]], "startswith": [[165, "index-21"], [165, "index-28"]], "str": [[165, "index-16"]], "string": [[165, "index-16"]], "tuple": [[165, "index-24"]], "type": [[165, "index-1"], [165, "index-51"]], "type modifiable": [[165, "index-31"]], "type mutable": [[165, "index-31"]], "upper": [[165, "index-21"]], "valeur": [[165, "index-43"]], "values": [[165, "index-44"]], "variable": [[165, "index-0"]], "|": [[165, "index-8"]], "encoding": [[166, "index-3"]], "fichier": [[166, "index-0"]], "format binaire": [[166, "index-4"]], "format texte": [[166, "index-1"]], "ressource": [[166, "index-2"]], "d\u00e9finition d1 : point d'entr\u00e9e du programme": [[168, "indexmathe-D\u00e9finition0"]], "syntaxe s1 : importer un module (1)": [[168, "indexmathe-Syntaxe0"]], "syntaxe s2 : importer un module (2)": [[168, "indexmathe-Syntaxe1"]], "syntaxe s3 : importer un module (3)": [[168, "indexmathe-Syntaxe2"]], "import": [[168, "index-2"]], "point d'entr\u00e9e": [[168, "index-1"]], "py": [[168, "index-3"]], "pyc": [[168, "index-3"]], "protobuf": [[169, "index-1"]], "gil": [[170, "index-0"]], "global lock interpreter": [[170, "index-0"]], "asyncio": [[170, "index-1"]], "gevent": [[170, "index-1"]], "uvloop": [[170, "index-1"]], "event": [[171, "index-2"]], "lock": [[171, "index-3"]], "futures": [[171, "index-5"]], "parall\u00e9lisation": [[171, "index-0"]], "promesses": [[171, "index-5"]], "promises": [[171, "index-5"]], "queue": [[171, "index-4"]], "sleep": [[171, "index-1"]], "synchronisation": [[171, "index-0"]], "thread": [[171, "index-0"]], "t\u00e2ches": [[171, "index-5"]], "verrou": [[171, "index-3"]]}})