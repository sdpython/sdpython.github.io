
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_benchmark_dot_cython_omp.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_benchmark_dot_cython_omp.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_benchmark_dot_cython_omp.py:


Compares dot implementations (numpy, c++, sse, openmp)
======================================================

:epkg:`numpy` has a very fast implementation of
the dot product. It is difficult to be better and very easy
to be slower. This example looks into a couple of slower
implementations with cython. The tested functions are
the following:

* :func:`ddot_array_16_sse <teachcompute.validation.cython.dot_cython.ddot_array_16_sse>`
  `ddot_array_16_sse <https://github.com/sdpython/teachcompute/blob/main/
  teachcompute/validation/cython/dot_cython.pyx#L230>`_
* :func:`ddot_cython_array_omp
  <teachcompute.validation.cython.dot_cython_omp.ddot_cython_array_omp>`
  `ddot_cython_array_omp <https://github.com/sdpython/teachcompute/blob/main/
  teachcompute/validation/cython/dot_cython_omp.pyx#L47>`_
* :func:`ddot_array_openmp
  <teachcompute.validation.cython.dot_cython_omp.ddot_array_openmp>`
  `ddot_array_openmp <https://github.com/sdpython/teachcompute/blob/main/
  teachcompute/validation/cython/dot_cython_omp.pyx#L88>`_
* :func:`ddot_array_openmp_16
  <teachcompute.validation.cython.dot_cython_omp.ddot_array_openmp_16>`
  `ddot_array_openmp_16 <https://github.com/sdpython/teachcompute/blob/main/
  teachcompute/validation/cython/dot_cython_omp.pyx#L104>`_

.. GENERATED FROM PYTHON SOURCE LINES 28-55

.. code-block:: Python


    import numpy
    import matplotlib.pyplot as plt
    from pandas import DataFrame, concat
    from teachcompute.validation.cython.dot_cython import ddot_array_16_sse, ddot_array
    from teachcompute.validation.cython.dot_cython_omp import (
        ddot_cython_array_omp,
        ddot_array_openmp,
        get_omp_max_threads,
        ddot_array_openmp_16,
    )
    from teachcompute.ext_test_case import measure_time_dim, unit_test_going


    def get_vectors(fct, n, h=250, dtype=numpy.float64):
        ctxs = [
            dict(
                va=numpy.random.randn(n).astype(dtype),
                vb=numpy.random.randn(n).astype(dtype),
                dot=fct,
                x_name=n,
            )
            for n in range(10, n, h)
        ]
        return ctxs









.. GENERATED FROM PYTHON SOURCE LINES 56-59

Number of threads
++++++++++++++++++


.. GENERATED FROM PYTHON SOURCE LINES 59-64

.. code-block:: Python



    print(get_omp_max_threads())






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    52




.. GENERATED FROM PYTHON SOURCE LINES 65-68

Several cython dot
++++++++++++++++++


.. GENERATED FROM PYTHON SOURCE LINES 68-113

.. code-block:: Python



    def numpy_dot(va, vb):
        return numpy.dot(va, vb)


    def ddot_omp(va, vb):
        return ddot_cython_array_omp(va, vb)


    def ddot_omp_static(va, vb):
        return ddot_cython_array_omp(va, vb, schedule=1)


    def ddot_omp_dyn(va, vb):
        return ddot_cython_array_omp(va, vb, schedule=2)


    def ddot_omp_cpp(va, vb):
        return ddot_array_openmp(va, vb)


    def ddot_omp_cpp_16(va, vb):
        return ddot_array_openmp_16(va, vb)


    dfs = []
    for fct in [
        numpy_dot,
        ddot_array,
        ddot_array_16_sse,
        ddot_omp,
        ddot_omp_static,
        ddot_omp_dyn,
        ddot_omp_cpp,
        ddot_omp_cpp_16,
    ]:
        ctxs = get_vectors(fct, 400 if unit_test_going() else 40000)

        print(fct.__name__)
        df = DataFrame(list(measure_time_dim("dot(va, vb)", ctxs, verbose=1)))
        df["fct"] = fct.__name__
        dfs.append(df)
        print(df.tail(n=3))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    numpy_dot
      0%|          | 0/160 [00:00<?, ?it/s]     26%|██▌       | 41/160 [00:00<00:00, 334.77it/s]     47%|████▋     | 75/160 [00:04<00:06, 13.93it/s]      56%|█████▋    | 90/160 [00:06<00:06, 10.61it/s]     62%|██████▏   | 99/160 [00:08<00:06,  9.17it/s]     66%|██████▌   | 105/160 [00:09<00:06,  9.07it/s]     68%|██████▊   | 109/160 [00:09<00:05,  8.70it/s]     70%|███████   | 112/160 [00:10<00:05,  8.54it/s]     71%|███████▏  | 114/160 [00:10<00:05,  8.67it/s]     72%|███████▎  | 116/160 [00:10<00:05,  8.41it/s]     74%|███████▍  | 118/160 [00:10<00:04,  8.56it/s]     75%|███████▌  | 120/160 [00:11<00:04,  8.09it/s]     76%|███████▋  | 122/160 [00:11<00:05,  6.73it/s]     77%|███████▋  | 123/160 [00:11<00:05,  7.01it/s]     78%|███████▊  | 124/160 [00:11<00:04,  7.30it/s]     79%|███████▉  | 126/160 [00:12<00:04,  7.93it/s]     80%|████████  | 128/160 [00:12<00:03,  8.54it/s]     81%|████████▏ | 130/160 [00:12<00:03,  7.97it/s]     82%|████████▎ | 132/160 [00:12<00:02,  9.44it/s]     84%|████████▍ | 134/160 [00:12<00:02,  9.67it/s]     85%|████████▌ | 136/160 [00:13<00:03,  7.69it/s]     86%|████████▌ | 137/160 [00:13<00:03,  6.91it/s]     86%|████████▋ | 138/160 [00:13<00:03,  5.73it/s]     88%|████████▊ | 140/160 [00:14<00:02,  6.72it/s]     88%|████████▊ | 141/160 [00:14<00:02,  6.37it/s]     89%|████████▉ | 142/160 [00:14<00:02,  6.82it/s]     90%|█████████ | 144/160 [00:14<00:02,  5.36it/s]     91%|█████████ | 145/160 [00:15<00:02,  5.36it/s]     91%|█████████▏| 146/160 [00:15<00:02,  5.88it/s]     92%|█████████▏| 147/160 [00:15<00:01,  6.53it/s]     92%|█████████▎| 148/160 [00:15<00:01,  6.28it/s]     93%|█████████▎| 149/160 [00:15<00:01,  6.79it/s]     94%|█████████▍| 150/160 [00:15<00:01,  7.39it/s]     94%|█████████▍| 151/160 [00:15<00:01,  5.46it/s]     95%|█████████▌| 152/160 [00:16<00:01,  5.34it/s]     96%|█████████▌| 153/160 [00:16<00:01,  5.36it/s]     96%|█████████▋| 154/160 [00:16<00:00,  6.04it/s]     97%|█████████▋| 155/160 [00:16<00:00,  5.87it/s]     98%|█████████▊| 156/160 [00:16<00:00,  6.62it/s]     98%|█████████▊| 157/160 [00:16<00:00,  7.33it/s]     99%|█████████▉| 158/160 [00:16<00:00,  7.92it/s]     99%|█████████▉| 159/160 [00:17<00:00,  8.27it/s]    100%|██████████| 160/160 [00:17<00:00,  7.08it/s]    100%|██████████| 160/160 [00:17<00:00,  9.29it/s]
          average  deviation  min_exec  max_exec  repeat  number     ttime  context_size  warmup_time  x_name        fct
    157  0.000202   0.000468  0.000043  0.001606      10      50  0.002019           184     0.000612   39260  numpy_dot
    158  0.000215   0.000498  0.000042  0.001708      10      50  0.002150           184     0.000251   39510  numpy_dot
    159  0.000374   0.000643  0.000044  0.001742      10      50  0.003745           184     0.000491   39760  numpy_dot
    ddot_array
      0%|          | 0/160 [00:00<?, ?it/s]     18%|█▊        | 28/160 [00:00<00:00, 276.83it/s]     35%|███▌      | 56/160 [00:00<00:00, 134.51it/s]     46%|████▋     | 74/160 [00:00<00:00, 97.90it/s]      54%|█████▍    | 87/160 [00:00<00:00, 79.88it/s]     61%|██████    | 97/160 [00:01<00:00, 68.72it/s]     66%|██████▌   | 105/160 [00:01<00:00, 60.77it/s]     70%|███████   | 112/160 [00:01<00:00, 54.73it/s]     74%|███████▍  | 118/160 [00:01<00:00, 50.05it/s]     78%|███████▊  | 124/160 [00:01<00:00, 45.86it/s]     81%|████████  | 129/160 [00:01<00:00, 42.71it/s]     84%|████████▍ | 134/160 [00:02<00:00, 39.87it/s]     86%|████████▋ | 138/160 [00:02<00:00, 37.80it/s]     89%|████████▉ | 142/160 [00:02<00:00, 35.90it/s]     91%|█████████▏| 146/160 [00:02<00:00, 34.15it/s]     94%|█████████▍| 150/160 [00:02<00:00, 32.66it/s]     96%|█████████▋| 154/160 [00:02<00:00, 31.30it/s]     99%|█████████▉| 158/160 [00:02<00:00, 30.16it/s]    100%|██████████| 160/160 [00:03<00:00, 53.14it/s]
          average     deviation  min_exec  max_exec  repeat  number     ttime  context_size  warmup_time  x_name         fct
    157  0.000072  1.302678e-07  0.000072  0.000073      10      50  0.000724           184     0.000097   39260  ddot_array
    158  0.000073  1.329375e-07  0.000073  0.000073      10      50  0.000729           184     0.000099   39510  ddot_array
    159  0.000073  2.070236e-07  0.000073  0.000074      10      50  0.000734           184     0.000098   39760  ddot_array
    ddot_array_16_sse
      0%|          | 0/160 [00:00<?, ?it/s]     32%|███▏      | 51/160 [00:00<00:00, 495.90it/s]     63%|██████▎   | 101/160 [00:00<00:00, 270.40it/s]     84%|████████▍ | 134/160 [00:00<00:00, 201.89it/s]     99%|█████████▉| 158/160 [00:00<00:00, 165.70it/s]    100%|██████████| 160/160 [00:00<00:00, 194.45it/s]
          average     deviation  min_exec  max_exec  repeat  number     ttime  context_size  warmup_time  x_name                fct
    157  0.000018  1.083609e-06  0.000018  0.000021      10      50  0.000180           184     0.000093   39260  ddot_array_16_sse
    158  0.000018  8.747443e-07  0.000018  0.000021      10      50  0.000185           184     0.000097   39510  ddot_array_16_sse
    159  0.000022  4.373135e-07  0.000021  0.000022      10      50  0.000216           184     0.000094   39760  ddot_array_16_sse
    ddot_omp
      0%|          | 0/160 [00:00<?, ?it/s]      4%|▍         | 6/160 [00:00<00:02, 52.17it/s]      8%|▊         | 12/160 [00:00<00:04, 35.92it/s]     10%|█         | 16/160 [00:00<00:04, 30.04it/s]     12%|█▎        | 20/160 [00:00<00:04, 30.69it/s]     15%|█▌        | 24/160 [00:00<00:04, 27.81it/s]     17%|█▋        | 27/160 [00:00<00:04, 27.79it/s]     19%|█▉        | 30/160 [00:01<00:04, 28.01it/s]     21%|██        | 33/160 [00:01<00:04, 27.61it/s]     22%|██▎       | 36/160 [00:01<00:04, 27.86it/s]     24%|██▍       | 39/160 [00:01<00:04, 28.07it/s]     26%|██▋       | 42/160 [00:01<00:04, 28.23it/s]     28%|██▊       | 45/160 [00:01<00:04, 28.31it/s]     30%|███       | 48/160 [00:01<00:04, 24.96it/s]     32%|███▏      | 51/160 [00:01<00:04, 25.74it/s]     34%|███▍      | 54/160 [00:01<00:04, 26.24it/s]     36%|███▋      | 58/160 [00:02<00:03, 28.86it/s]     38%|███▊      | 61/160 [00:02<00:03, 28.82it/s]     40%|████      | 64/160 [00:02<00:03, 28.73it/s]     42%|████▏     | 67/160 [00:02<00:03, 28.65it/s]     44%|████▍     | 70/160 [00:02<00:03, 25.16it/s]     46%|████▌     | 73/160 [00:02<00:03, 25.69it/s]     48%|████▊     | 76/160 [00:02<00:03, 26.38it/s]     49%|████▉     | 79/160 [00:02<00:03, 26.83it/s]     51%|█████▏    | 82/160 [00:02<00:02, 27.50it/s]     54%|█████▍    | 86/160 [00:03<00:02, 29.71it/s]     56%|█████▋    | 90/160 [00:03<00:02, 27.51it/s]     58%|█████▊    | 93/160 [00:03<00:02, 28.08it/s]     60%|██████    | 96/160 [00:03<00:02, 27.98it/s]     62%|██████▏   | 99/160 [00:03<00:02, 27.21it/s]     64%|██████▍   | 102/160 [00:03<00:02, 23.52it/s]     66%|██████▌   | 105/160 [00:03<00:02, 23.95it/s]     68%|██████▊   | 108/160 [00:03<00:02, 24.09it/s]     69%|██████▉   | 111/160 [00:04<00:02, 22.16it/s]     71%|███████▏  | 114/160 [00:04<00:01, 23.46it/s]     73%|███████▎  | 117/160 [00:04<00:01, 24.50it/s]     75%|███████▌  | 120/160 [00:04<00:01, 25.31it/s]     77%|███████▋  | 123/160 [00:04<00:01, 25.88it/s]     79%|███████▉  | 126/160 [00:04<00:01, 23.16it/s]     81%|████████  | 129/160 [00:04<00:01, 24.17it/s]     82%|████████▎ | 132/160 [00:04<00:01, 25.35it/s]     84%|████████▍ | 135/160 [00:05<00:00, 26.41it/s]     86%|████████▋ | 138/160 [00:05<00:00, 27.23it/s]     88%|████████▊ | 141/160 [00:05<00:00, 27.34it/s]     90%|█████████ | 144/160 [00:05<00:00, 23.82it/s]     92%|█████████▏| 147/160 [00:05<00:00, 24.51it/s]     94%|█████████▍| 150/160 [00:05<00:00, 24.98it/s]     96%|█████████▌| 153/160 [00:05<00:00, 25.38it/s]     98%|█████████▊| 156/160 [00:05<00:00, 22.70it/s]     99%|█████████▉| 159/160 [00:06<00:00, 23.60it/s]    100%|██████████| 160/160 [00:06<00:00, 26.28it/s]
          average  deviation  min_exec  max_exec  repeat  number     ttime  context_size  warmup_time  x_name       fct
    157  0.000141   0.000294  0.000040  0.001023      10      50  0.001409           184     0.000242   39260  ddot_omp
    158  0.000044   0.000005  0.000040  0.000057      10      50  0.000441           184     0.000401   39510  ddot_omp
    159  0.000147   0.000294  0.000039  0.001026      10      50  0.001466           184     0.000240   39760  ddot_omp
    ddot_omp_static
      0%|          | 0/160 [00:00<?, ?it/s]      3%|▎         | 5/160 [00:00<00:03, 48.74it/s]      6%|▋         | 10/160 [00:00<00:04, 31.61it/s]      9%|▉         | 14/160 [00:00<00:05, 26.67it/s]     11%|█         | 17/160 [00:00<00:05, 26.69it/s]     12%|█▎        | 20/160 [00:00<00:06, 23.27it/s]     14%|█▍        | 23/160 [00:00<00:05, 24.19it/s]     16%|█▋        | 26/160 [00:00<00:05, 24.92it/s]     18%|█▊        | 29/160 [00:01<00:05, 22.57it/s]     20%|██        | 32/160 [00:01<00:05, 23.51it/s]     22%|██▏       | 35/160 [00:01<00:05, 24.34it/s]     24%|██▍       | 38/160 [00:01<00:04, 24.80it/s]     26%|██▌       | 41/160 [00:01<00:05, 22.71it/s]     28%|██▊       | 44/160 [00:01<00:04, 23.57it/s]     29%|██▉       | 47/160 [00:01<00:04, 24.31it/s]     31%|███▏      | 50/160 [00:01<00:04, 24.90it/s]     33%|███▎      | 53/160 [00:02<00:04, 22.39it/s]     35%|███▌      | 56/160 [00:02<00:04, 23.47it/s]     37%|███▋      | 59/160 [00:02<00:04, 24.29it/s]     39%|███▉      | 62/160 [00:02<00:04, 22.15it/s]     41%|████      | 65/160 [00:02<00:04, 22.86it/s]     42%|████▎     | 68/160 [00:02<00:03, 24.06it/s]     44%|████▍     | 71/160 [00:02<00:03, 24.66it/s]     46%|████▋     | 74/160 [00:03<00:03, 22.14it/s]     48%|████▊     | 77/160 [00:03<00:03, 23.09it/s]     50%|█████     | 80/160 [00:03<00:03, 21.18it/s]     52%|█████▏    | 83/160 [00:03<00:03, 22.17it/s]     54%|█████▍    | 86/160 [00:03<00:03, 23.05it/s]     56%|█████▌    | 89/160 [00:03<00:03, 21.38it/s]     57%|█████▊    | 92/160 [00:03<00:03, 22.47it/s]     59%|█████▉    | 95/160 [00:03<00:02, 23.34it/s]     61%|██████▏   | 98/160 [00:04<00:02, 21.45it/s]     63%|██████▎   | 101/160 [00:04<00:02, 22.44it/s]     65%|██████▌   | 104/160 [00:04<00:02, 23.27it/s]     67%|██████▋   | 107/160 [00:04<00:02, 21.18it/s]     69%|██████▉   | 110/160 [00:04<00:02, 22.12it/s]     71%|███████   | 113/160 [00:04<00:02, 20.68it/s]     72%|███████▎  | 116/160 [00:04<00:01, 22.11it/s]     74%|███████▍  | 119/160 [00:05<00:01, 23.60it/s]     76%|███████▋  | 122/160 [00:05<00:01, 24.40it/s]     78%|███████▊  | 125/160 [00:05<00:01, 22.18it/s]     80%|████████  | 128/160 [00:05<00:01, 22.89it/s]     82%|████████▏ | 131/160 [00:05<00:01, 23.04it/s]     84%|████████▍ | 134/160 [00:05<00:01, 20.31it/s]     86%|████████▌ | 137/160 [00:05<00:01, 19.47it/s]     88%|████████▊ | 140/160 [00:06<00:00, 20.48it/s]     89%|████████▉ | 143/160 [00:06<00:00, 19.26it/s]     91%|█████████ | 145/160 [00:06<00:00, 19.23it/s]     92%|█████████▎| 148/160 [00:06<00:00, 20.55it/s]     94%|█████████▍| 151/160 [00:06<00:00, 19.27it/s]     96%|█████████▌| 153/160 [00:06<00:00, 19.25it/s]     97%|█████████▋| 155/160 [00:06<00:00, 19.42it/s]     98%|█████████▊| 157/160 [00:06<00:00, 19.39it/s]     99%|█████████▉| 159/160 [00:07<00:00, 19.55it/s]    100%|██████████| 160/160 [00:07<00:00, 22.36it/s]
          average     deviation  min_exec  max_exec  repeat  number     ttime  context_size  warmup_time  x_name              fct
    157  0.000048  8.814514e-07  0.000047   0.00005      10      50  0.000482           184     0.001972   39260  ddot_omp_static
    158  0.000052  7.370592e-06  0.000047   0.00007      10      50  0.000520           184     0.046913   39510  ddot_omp_static
    159  0.000147  2.943093e-04  0.000046   0.00103      10      50  0.001474           184     0.002112   39760  ddot_omp_static
    ddot_omp_dyn
      0%|          | 0/160 [00:00<?, ?it/s]      2%|▏         | 3/160 [00:00<00:06, 23.11it/s]      4%|▍         | 6/160 [00:00<00:08, 18.03it/s]      5%|▌         | 8/160 [00:00<00:08, 17.92it/s]      6%|▋         | 10/160 [00:00<00:08, 17.78it/s]      8%|▊         | 12/160 [00:00<00:09, 15.40it/s]      9%|▉         | 14/160 [00:00<00:09, 15.78it/s]     10%|█         | 16/160 [00:00<00:08, 16.08it/s]     11%|█▏        | 18/160 [00:01<00:09, 14.38it/s]     12%|█▎        | 20/160 [00:01<00:09, 14.91it/s]     14%|█▍        | 22/160 [00:01<00:10, 13.64it/s]     15%|█▌        | 24/160 [00:01<00:09, 14.27it/s]     16%|█▋        | 26/160 [00:01<00:10, 13.32it/s]     18%|█▊        | 28/160 [00:01<00:09, 14.07it/s]     19%|█▉        | 30/160 [00:02<00:09, 13.05it/s]     20%|██        | 32/160 [00:02<00:09, 13.69it/s]     21%|██▏       | 34/160 [00:02<00:10, 12.55it/s]     22%|██▎       | 36/160 [00:02<00:10, 12.22it/s]     24%|██▍       | 38/160 [00:02<00:09, 12.95it/s]     25%|██▌       | 40/160 [00:02<00:09, 12.20it/s]     26%|██▋       | 42/160 [00:03<00:10, 11.69it/s]     28%|██▊       | 44/160 [00:03<00:09, 12.63it/s]     29%|██▉       | 46/160 [00:03<00:09, 12.05it/s]     30%|███       | 48/160 [00:03<00:09, 11.63it/s]     31%|███▏      | 50/160 [00:03<00:08, 12.44it/s]     32%|███▎      | 52/160 [00:03<00:09, 11.84it/s]     34%|███▍      | 54/160 [00:04<00:09, 11.34it/s]     35%|███▌      | 56/160 [00:04<00:09, 11.02it/s]     36%|███▋      | 58/160 [00:04<00:09, 10.60it/s]     38%|███▊      | 60/160 [00:04<00:09, 10.32it/s]     39%|███▉      | 62/160 [00:04<00:09, 10.21it/s]     40%|████      | 64/160 [00:05<00:09, 10.07it/s]     41%|████▏     | 66/160 [00:05<00:09,  9.96it/s]     42%|████▎     | 68/160 [00:05<00:10,  9.14it/s]     43%|████▎     | 69/160 [00:05<00:09,  9.17it/s]     44%|████▍     | 70/160 [00:05<00:09,  9.24it/s]     44%|████▍     | 71/160 [00:05<00:09,  9.31it/s]     45%|████▌     | 72/160 [00:05<00:09,  9.38it/s]     46%|████▌     | 73/160 [00:06<00:09,  9.39it/s]     46%|████▋     | 74/160 [00:06<00:09,  9.47it/s]     47%|████▋     | 75/160 [00:06<00:08,  9.48it/s]     48%|████▊     | 76/160 [00:06<00:08,  9.49it/s]     48%|████▊     | 77/160 [00:06<00:09,  8.40it/s]     49%|████▉     | 78/160 [00:06<00:09,  8.68it/s]     49%|████▉     | 79/160 [00:06<00:09,  8.92it/s]     50%|█████     | 80/160 [00:06<00:08,  9.12it/s]     51%|█████     | 81/160 [00:06<00:08,  9.07it/s]     52%|█████▏    | 83/160 [00:07<00:08,  9.37it/s]     52%|█████▎    | 84/160 [00:07<00:08,  9.39it/s]     53%|█████▎    | 85/160 [00:07<00:07,  9.41it/s]     54%|█████▍    | 86/160 [00:07<00:07,  9.43it/s]     54%|█████▍    | 87/160 [00:07<00:08,  8.37it/s]     55%|█████▌    | 88/160 [00:07<00:08,  8.59it/s]     56%|█████▌    | 89/160 [00:07<00:08,  8.76it/s]     56%|█████▋    | 90/160 [00:07<00:07,  8.93it/s]     57%|█████▋    | 91/160 [00:08<00:07,  9.04it/s]     57%|█████▊    | 92/160 [00:08<00:07,  9.14it/s]     58%|█████▊    | 93/160 [00:08<00:07,  9.20it/s]     59%|█████▉    | 94/160 [00:08<00:08,  8.06it/s]     59%|█████▉    | 95/160 [00:08<00:07,  8.37it/s]     60%|██████    | 96/160 [00:08<00:07,  8.59it/s]     61%|██████    | 97/160 [00:08<00:07,  8.75it/s]     61%|██████▏   | 98/160 [00:08<00:07,  8.80it/s]     62%|██████▏   | 99/160 [00:09<00:07,  7.63it/s]     62%|██████▎   | 100/160 [00:09<00:07,  8.11it/s]     63%|██████▎   | 101/160 [00:09<00:07,  8.26it/s]     64%|██████▍   | 102/160 [00:09<00:06,  8.56it/s]     64%|██████▍   | 103/160 [00:09<00:07,  7.61it/s]     65%|██████▌   | 104/160 [00:09<00:07,  7.91it/s]     66%|██████▌   | 105/160 [00:09<00:06,  8.15it/s]     66%|██████▋   | 106/160 [00:09<00:07,  7.35it/s]     67%|██████▋   | 107/160 [00:10<00:06,  7.66it/s]     68%|██████▊   | 108/160 [00:10<00:06,  7.92it/s]     68%|██████▊   | 109/160 [00:10<00:07,  7.22it/s]     69%|██████▉   | 110/160 [00:10<00:06,  7.58it/s]     69%|██████▉   | 111/160 [00:10<00:07,  6.34it/s]     70%|███████   | 112/160 [00:10<00:06,  7.03it/s]     71%|███████   | 113/160 [00:10<00:07,  6.69it/s]     71%|███████▏  | 114/160 [00:11<00:06,  7.14it/s]     72%|███████▏  | 115/160 [00:11<00:06,  6.71it/s]     72%|███████▎  | 116/160 [00:11<00:06,  7.10it/s]     73%|███████▎  | 117/160 [00:11<00:05,  7.39it/s]     74%|███████▍  | 118/160 [00:11<00:06,  6.81it/s]     74%|███████▍  | 119/160 [00:11<00:05,  7.19it/s]     75%|███████▌  | 120/160 [00:11<00:05,  6.73it/s]     76%|███████▌  | 121/160 [00:12<00:05,  7.14it/s]     76%|███████▋  | 122/160 [00:12<00:05,  6.70it/s]     77%|███████▋  | 123/160 [00:12<00:05,  7.08it/s]     78%|███████▊  | 124/160 [00:12<00:05,  6.65it/s]     78%|███████▊  | 125/160 [00:12<00:05,  6.99it/s]     79%|███████▉  | 126/160 [00:12<00:04,  7.33it/s]     79%|███████▉  | 127/160 [00:12<00:04,  6.75it/s]     80%|████████  | 128/160 [00:13<00:04,  7.07it/s]     81%|████████  | 129/160 [00:13<00:04,  6.59it/s]     81%|████████▏ | 130/160 [00:13<00:04,  6.96it/s]     82%|████████▏ | 131/160 [00:13<00:04,  6.53it/s]     82%|████████▎ | 132/160 [00:13<00:04,  6.86it/s]     83%|████████▎ | 133/160 [00:13<00:04,  6.50it/s]     84%|████████▍ | 134/160 [00:14<00:04,  6.19it/s]     84%|████████▍ | 135/160 [00:14<00:03,  6.58it/s]     85%|████████▌ | 136/160 [00:14<00:03,  6.24it/s]     86%|████████▌ | 137/160 [00:14<00:03,  6.60it/s]     86%|████████▋ | 138/160 [00:14<00:03,  6.22it/s]     87%|████████▋ | 139/160 [00:14<00:03,  5.98it/s]     88%|████████▊ | 140/160 [00:14<00:03,  6.37it/s]     88%|████████▊ | 141/160 [00:15<00:03,  6.06it/s]     89%|████████▉ | 142/160 [00:15<00:03,  5.85it/s]     89%|████████▉ | 143/160 [00:15<00:02,  6.26it/s]     90%|█████████ | 144/160 [00:15<00:02,  5.96it/s]     91%|█████████ | 145/160 [00:15<00:02,  5.83it/s]     91%|█████████▏| 146/160 [00:15<00:02,  6.27it/s]     92%|█████████▏| 147/160 [00:16<00:02,  5.99it/s]     92%|█████████▎| 148/160 [00:16<00:02,  5.78it/s]     93%|█████████▎| 149/160 [00:16<00:01,  6.21it/s]     94%|█████████▍| 150/160 [00:16<00:01,  5.94it/s]     94%|█████████▍| 151/160 [00:16<00:01,  5.78it/s]     95%|█████████▌| 152/160 [00:17<00:01,  5.66it/s]     96%|█████████▌| 153/160 [00:17<00:01,  6.09it/s]     96%|█████████▋| 154/160 [00:17<00:01,  5.84it/s]     97%|█████████▋| 155/160 [00:17<00:00,  5.74it/s]     98%|█████████▊| 156/160 [00:17<00:00,  6.17it/s]     98%|█████████▊| 157/160 [00:17<00:00,  5.93it/s]     99%|█████████▉| 158/160 [00:18<00:00,  5.72it/s]     99%|█████████▉| 159/160 [00:18<00:00,  6.11it/s]    100%|██████████| 160/160 [00:18<00:00,  5.88it/s]    100%|██████████| 160/160 [00:18<00:00,  8.72it/s]
          average  deviation  min_exec  max_exec  repeat  number     ttime  context_size  warmup_time  x_name           fct
    157  0.000377   0.000397  0.000166  0.001187      10      50  0.003766           184     0.000188   39260  ddot_omp_dyn
    158  0.000273   0.000297  0.000166  0.001164      10      50  0.002730           184     0.000196   39510  ddot_omp_dyn
    159  0.000271   0.000288  0.000164  0.001134      10      50  0.002710           184     0.048287   39760  ddot_omp_dyn
    ddot_omp_cpp
      0%|          | 0/160 [00:00<?, ?it/s]      5%|▌         | 8/160 [00:00<00:02, 57.04it/s]      9%|▉         | 14/160 [00:00<00:02, 51.25it/s]     12%|█▎        | 20/160 [00:00<00:03, 41.46it/s]     16%|█▌        | 25/160 [00:00<00:03, 42.10it/s]     19%|█▉        | 30/160 [00:00<00:03, 37.47it/s]     21%|██▏       | 34/160 [00:00<00:03, 37.71it/s]     24%|██▍       | 38/160 [00:00<00:03, 37.99it/s]     26%|██▋       | 42/160 [00:01<00:03, 38.27it/s]     29%|██▉       | 46/160 [00:01<00:02, 38.59it/s]     31%|███▏      | 50/160 [00:01<00:02, 38.75it/s]     34%|███▍      | 54/160 [00:01<00:02, 38.94it/s]     36%|███▋      | 58/160 [00:01<00:02, 39.02it/s]     39%|███▉      | 62/160 [00:01<00:02, 39.14it/s]     41%|████▏     | 66/160 [00:01<00:02, 39.17it/s]     44%|████▍     | 70/160 [00:01<00:02, 39.28it/s]     46%|████▋     | 74/160 [00:01<00:02, 39.22it/s]     49%|████▉     | 78/160 [00:01<00:02, 39.26it/s]     51%|█████▏    | 82/160 [00:02<00:02, 38.19it/s]     54%|█████▍    | 86/160 [00:02<00:01, 38.11it/s]     56%|█████▋    | 90/160 [00:02<00:02, 33.11it/s]     59%|█████▉    | 94/160 [00:02<00:01, 34.64it/s]     61%|██████▏   | 98/160 [00:02<00:01, 35.92it/s]     64%|██████▍   | 102/160 [00:02<00:01, 36.86it/s]     66%|██████▋   | 106/160 [00:02<00:01, 37.22it/s]     69%|██████▉   | 110/160 [00:02<00:01, 37.89it/s]     71%|███████▏  | 114/160 [00:02<00:01, 38.42it/s]     74%|███████▍  | 118/160 [00:03<00:01, 38.84it/s]     76%|███████▋  | 122/160 [00:03<00:00, 39.04it/s]     79%|███████▉  | 126/160 [00:03<00:00, 39.23it/s]     81%|████████▏ | 130/160 [00:03<00:00, 39.43it/s]     84%|████████▍ | 134/160 [00:03<00:00, 39.25it/s]     86%|████████▋ | 138/160 [00:03<00:00, 39.40it/s]     89%|████████▉ | 142/160 [00:03<00:00, 39.54it/s]     91%|█████████▏| 146/160 [00:03<00:00, 39.67it/s]     94%|█████████▍| 150/160 [00:03<00:00, 39.74it/s]     96%|█████████▋| 154/160 [00:03<00:00, 39.72it/s]     99%|█████████▉| 158/160 [00:04<00:00, 39.36it/s]    100%|██████████| 160/160 [00:04<00:00, 38.73it/s]
          average     deviation  min_exec  max_exec  repeat  number     ttime  context_size  warmup_time  x_name           fct
    157  0.000024  8.583434e-07  0.000022  0.000025      10      50  0.000235           184     0.000035   39260  ddot_omp_cpp
    158  0.000023  9.501047e-07  0.000023  0.000026      10      50  0.000234           184     0.000050   39510  ddot_omp_cpp
    159  0.000125  2.942713e-04  0.000023  0.001008      10      50  0.001249           184     0.000049   39760  ddot_omp_cpp
    ddot_omp_cpp_16
      0%|          | 0/160 [00:00<?, ?it/s]      6%|▌         | 9/160 [00:00<00:01, 81.89it/s]     11%|█▏        | 18/160 [00:00<00:03, 44.43it/s]     15%|█▌        | 24/160 [00:00<00:03, 45.26it/s]     19%|█▉        | 30/160 [00:00<00:03, 40.51it/s]     22%|██▏       | 35/160 [00:00<00:03, 41.41it/s]     25%|██▌       | 40/160 [00:00<00:02, 42.04it/s]     28%|██▊       | 45/160 [00:01<00:03, 37.33it/s]     31%|███       | 49/160 [00:01<00:02, 37.72it/s]     33%|███▎      | 53/160 [00:01<00:02, 38.03it/s]     36%|███▌      | 57/160 [00:01<00:02, 38.25it/s]     38%|███▊      | 61/160 [00:01<00:02, 38.15it/s]     41%|████      | 65/160 [00:01<00:02, 38.32it/s]     43%|████▎     | 69/160 [00:01<00:02, 38.52it/s]     46%|████▌     | 73/160 [00:01<00:02, 38.58it/s]     48%|████▊     | 77/160 [00:01<00:02, 33.34it/s]     51%|█████     | 81/160 [00:02<00:02, 33.90it/s]     53%|█████▎    | 85/160 [00:02<00:02, 34.81it/s]     56%|█████▌    | 89/160 [00:02<00:01, 35.60it/s]     58%|█████▊    | 93/160 [00:02<00:01, 36.19it/s]     61%|██████    | 97/160 [00:02<00:01, 31.59it/s]     63%|██████▎   | 101/160 [00:02<00:01, 32.68it/s]     66%|██████▌   | 105/160 [00:02<00:01, 33.89it/s]     68%|██████▊   | 109/160 [00:02<00:01, 34.82it/s]     71%|███████   | 113/160 [00:03<00:01, 34.92it/s]     73%|███████▎  | 117/160 [00:03<00:01, 36.25it/s]     76%|███████▌  | 121/160 [00:03<00:01, 36.67it/s]     78%|███████▊  | 125/160 [00:03<00:01, 32.39it/s]     81%|████████  | 129/160 [00:03<00:00, 33.71it/s]     83%|████████▎ | 133/160 [00:03<00:00, 34.74it/s]     86%|████████▌ | 137/160 [00:03<00:00, 35.57it/s]     88%|████████▊ | 141/160 [00:03<00:00, 35.04it/s]     91%|█████████▏| 146/160 [00:03<00:00, 33.61it/s]     94%|█████████▍| 150/160 [00:04<00:00, 34.68it/s]     96%|█████████▋| 154/160 [00:04<00:00, 35.57it/s]     99%|█████████▉| 158/160 [00:04<00:00, 35.53it/s]    100%|██████████| 160/160 [00:04<00:00, 36.58it/s]
          average     deviation  min_exec  max_exec  repeat  number     ttime  context_size  warmup_time  x_name              fct
    157  0.000028  2.589807e-06  0.000026  0.000032      10      50  0.000279           184     0.000234   39260  ddot_omp_cpp_16
    158  0.000032  5.042896e-07  0.000031  0.000033      10      50  0.000317           184     0.000186   39510  ddot_omp_cpp_16
    159  0.000130  2.915584e-04  0.000024  0.001004      10      50  0.001297           184     0.000199   39760  ddot_omp_cpp_16




.. GENERATED FROM PYTHON SOURCE LINES 114-116

Let's display the results
+++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 116-136

.. code-block:: Python


    cc = concat(dfs)
    cc["N"] = cc["x_name"]

    fig, ax = plt.subplots(2, 2, figsize=(10, 10))
    cc[cc.N <= 1000].pivot(index="N", columns="fct", values="average").plot(
        logy=True, ax=ax[0, 0]
    )
    cc.pivot(index="N", columns="fct", values="average").plot(logy=True, ax=ax[0, 1])
    cc.pivot(index="N", columns="fct", values="average").plot(
        logy=True, logx=True, ax=ax[1, 1]
    )
    cc[
        (
            (cc.fct.str.contains("omp") | (cc.fct == "ddot_array"))
            & ~cc.fct.str.contains("dyn")
        )
    ].pivot(index="N", columns="fct", values="average").plot(logy=True, ax=ax[1, 0])
    ax[0, 0].set_title("Comparison of cython ddot implementations")
    ax[0, 1].set_title("Comparison of cython ddot implementations" "\nwithout dot_product")



.. image-sg:: /auto_examples/images/sphx_glr_plot_benchmark_dot_cython_omp_001.png
   :alt: Comparison of cython ddot implementations, Comparison of cython ddot implementations without dot_product
   :srcset: /auto_examples/images/sphx_glr_plot_benchmark_dot_cython_omp_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(0.5, 1.0, 'Comparison of cython ddot implementations\nwithout dot_product')




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 4.125 seconds)


.. _sphx_glr_download_auto_examples_plot_benchmark_dot_cython_omp.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_benchmark_dot_cython_omp.ipynb <plot_benchmark_dot_cython_omp.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_benchmark_dot_cython_omp.py <plot_benchmark_dot_cython_omp.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
